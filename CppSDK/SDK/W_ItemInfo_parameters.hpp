#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ItemInfo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "JSItemType_structs.hpp"
#include "EffectMainContructor_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "EffectContructor_structs.hpp"
#include "AttachmentInfo_structs.hpp"
#include "WS_CharaterPerks_structs.hpp"
#include "S_Attachment_structs.hpp"
#include "Engine_structs.hpp"
#include "BPS_WeaponData_structs.hpp"
#include "InfoType_structs.hpp"
#include "E_TypesOfModes_structs.hpp"
#include "ST_WeaponMaxValue_structs.hpp"


namespace SDK::Params
{

// Function W_ItemInfo.W_ItemInfo_C.AddAttachmentEffects
// 0x01D8 (0x01D8 - 0x0000)
struct W_ItemInfo_C_AddAttachmentEffects final
{
public:
	double                                        Power;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectiveRange;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stability;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FiringRate;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PowerModdifu;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectiveRangeModdifu;                             // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StabilityModdifu;                                  // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FiringRateModdifu;                                 // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttachmentStats;                                 // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           EffectNames;                                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	double                                        MaxFiring_Rate;                                    // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxStability;                                      // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxEffectiveRange;                                 // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxPower;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_4;                        // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm)
	struct FST_WeaponMaxValue                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0148(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_1;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_2;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_3;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_4;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_5;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_6;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_7;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x01B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_AddAttachmentEffects) == 0x000008, "Wrong alignment on W_ItemInfo_C_AddAttachmentEffects");
static_assert(sizeof(W_ItemInfo_C_AddAttachmentEffects) == 0x0001D8, "Wrong size on W_ItemInfo_C_AddAttachmentEffects");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, Power) == 0x000000, "Member 'W_ItemInfo_C_AddAttachmentEffects::Power' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, EffectiveRange) == 0x000008, "Member 'W_ItemInfo_C_AddAttachmentEffects::EffectiveRange' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, Stability) == 0x000010, "Member 'W_ItemInfo_C_AddAttachmentEffects::Stability' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, FiringRate) == 0x000018, "Member 'W_ItemInfo_C_AddAttachmentEffects::FiringRate' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, PowerModdifu) == 0x000020, "Member 'W_ItemInfo_C_AddAttachmentEffects::PowerModdifu' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, EffectiveRangeModdifu) == 0x000028, "Member 'W_ItemInfo_C_AddAttachmentEffects::EffectiveRangeModdifu' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, StabilityModdifu) == 0x000030, "Member 'W_ItemInfo_C_AddAttachmentEffects::StabilityModdifu' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, FiringRateModdifu) == 0x000038, "Member 'W_ItemInfo_C_AddAttachmentEffects::FiringRateModdifu' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, IsAttachmentStats) == 0x000040, "Member 'W_ItemInfo_C_AddAttachmentEffects::IsAttachmentStats' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, EffectNames) == 0x000048, "Member 'W_ItemInfo_C_AddAttachmentEffects::EffectNames' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, MaxFiring_Rate) == 0x000058, "Member 'W_ItemInfo_C_AddAttachmentEffects::MaxFiring_Rate' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, MaxStability) == 0x000060, "Member 'W_ItemInfo_C_AddAttachmentEffects::MaxStability' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, MaxEffectiveRange) == 0x000068, "Member 'W_ItemInfo_C_AddAttachmentEffects::MaxEffectiveRange' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, MaxPower) == 0x000070, "Member 'W_ItemInfo_C_AddAttachmentEffects::MaxPower' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, Temp_int_Array_Index_Variable) == 0x000078, "Member 'W_ItemInfo_C_AddAttachmentEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_GetChildrenCount_ReturnValue) == 0x00007C, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_SelectFloat_ReturnValue) == 0x000088, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MakeStruct_Margin) == 0x000090, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MakeArray_Array) == 0x0000A0, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'W_ItemInfo_C_AddAttachmentEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, Temp_int_Array_Index_Variable_1) == 0x0000BC, "Member 'W_ItemInfo_C_AddAttachmentEffects::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, Temp_int_Loop_Counter_Variable_1) == 0x0000D8, "Member 'W_ItemInfo_C_AddAttachmentEffects::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E0, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Abs_ReturnValue) == 0x0000E8, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MakeStruct_Margin_1) == 0x0000F4, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MakeStruct_Margin_2) == 0x000104, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MakeStruct_Margin_3) == 0x000114, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MakeStruct_Margin_4) == 0x000124, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MakeStruct_Margin_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MakeArray_Array_1) == 0x000138, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_GetDataTableRowFromName_OutRow) == 0x000148, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000168, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MathExpression_ReturnValue) == 0x000170, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MathExpression_ReturnValue_1) == 0x000178, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MathExpression_ReturnValue_2) == 0x000180, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MathExpression_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MathExpression_ReturnValue_3) == 0x000188, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MathExpression_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MathExpression_ReturnValue_4) == 0x000190, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MathExpression_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MathExpression_ReturnValue_5) == 0x000198, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MathExpression_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MathExpression_ReturnValue_6) == 0x0001A0, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MathExpression_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MathExpression_ReturnValue_7) == 0x0001A8, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MathExpression_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_GetAllChildren_ReturnValue) == 0x0001B0, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Array_Get_Item_1) == 0x0001C8, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001D0, "Member 'W_ItemInfo_C_AddAttachmentEffects::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddAttachmentEffects, K2Node_MakeStruct_Top_ImplicitCast) == 0x0001D4, "Member 'W_ItemInfo_C_AddAttachmentEffects::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.AddStatsModifiersForAttachment
// 0x0040 (0x0040 - 0x0000)
struct W_ItemInfo_C_AddStatsModifiersForAttachment final
{
public:
	double                                        Stats;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stats1;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stats2;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stats3;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_EffectRowForItemInfo_C*              CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_AddStatsModifiersForAttachment) == 0x000008, "Wrong alignment on W_ItemInfo_C_AddStatsModifiersForAttachment");
static_assert(sizeof(W_ItemInfo_C_AddStatsModifiersForAttachment) == 0x000040, "Wrong size on W_ItemInfo_C_AddStatsModifiersForAttachment");
static_assert(offsetof(W_ItemInfo_C_AddStatsModifiersForAttachment, Stats) == 0x000000, "Member 'W_ItemInfo_C_AddStatsModifiersForAttachment::Stats' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddStatsModifiersForAttachment, Stats1) == 0x000008, "Member 'W_ItemInfo_C_AddStatsModifiersForAttachment::Stats1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddStatsModifiersForAttachment, Stats2) == 0x000010, "Member 'W_ItemInfo_C_AddStatsModifiersForAttachment::Stats2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddStatsModifiersForAttachment, Stats3) == 0x000018, "Member 'W_ItemInfo_C_AddStatsModifiersForAttachment::Stats3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddStatsModifiersForAttachment, CallFunc_Create_ReturnValue) == 0x000020, "Member 'W_ItemInfo_C_AddStatsModifiersForAttachment::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddStatsModifiersForAttachment, K2Node_MakeStruct_Margin) == 0x000028, "Member 'W_ItemInfo_C_AddStatsModifiersForAttachment::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_AddStatsModifiersForAttachment, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000038, "Member 'W_ItemInfo_C_AddStatsModifiersForAttachment::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.CalculatePrice
// 0x0740 (0x0740 - 0x0000)
struct W_ItemInfo_C_CalculatePrice final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0220(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Price;                                             // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJSItemType                                   Temp_byte_Variable;                                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOut_OutInt;                          // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x02B0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentInfo                        CallFunc_Array_Get_Item;                           // 0x04D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x04F0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_CalculatePrice) == 0x000008, "Wrong alignment on W_ItemInfo_C_CalculatePrice");
static_assert(sizeof(W_ItemInfo_C_CalculatePrice) == 0x000740, "Wrong size on W_ItemInfo_C_CalculatePrice");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, ItemInfo) == 0x000000, "Member 'W_ItemInfo_C_CalculatePrice::ItemInfo' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, ReturnValue) == 0x000220, "Member 'W_ItemInfo_C_CalculatePrice::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, Price) == 0x000228, "Member 'W_ItemInfo_C_CalculatePrice::Price' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, Temp_byte_Variable) == 0x000230, "Member 'W_ItemInfo_C_CalculatePrice::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, Temp_real_Variable) == 0x000238, "Member 'W_ItemInfo_C_CalculatePrice::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, Temp_real_Variable_1) == 0x000240, "Member 'W_ItemInfo_C_CalculatePrice::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, Temp_real_Variable_2) == 0x000248, "Member 'W_ItemInfo_C_CalculatePrice::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, Temp_real_Variable_3) == 0x000250, "Member 'W_ItemInfo_C_CalculatePrice::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, Temp_real_Variable_4) == 0x000258, "Member 'W_ItemInfo_C_CalculatePrice::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_GetPlayerController_ReturnValue) == 0x000260, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_K2_GetPawn_ReturnValue) == 0x000268, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, K2Node_DynamicCast_AsSurvival_Player) == 0x000270, "Member 'W_ItemInfo_C_CalculatePrice::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, K2Node_DynamicCast_bSuccess) == 0x000278, "Member 'W_ItemInfo_C_CalculatePrice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_CountOut_OutInt) == 0x00027C, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_CountOut_OutInt' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000280, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, Temp_int_Array_Index_Variable) == 0x000288, "Member 'W_ItemInfo_C_CalculatePrice::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, Temp_int_Loop_Counter_Variable) == 0x00028C, "Member 'W_ItemInfo_C_CalculatePrice::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_Add_IntInt_ReturnValue) == 0x000290, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000298, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_Round_ReturnValue) == 0x0002A0, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, K2Node_Select_Default) == 0x0002A8, "Member 'W_ItemInfo_C_CalculatePrice::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002B0, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0004D0, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_Array_Get_Item) == 0x0004D4, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_Array_Length_ReturnValue) == 0x0004E4, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_Less_IntInt_ReturnValue) == 0x0004E8, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0004F0, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000710, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000718, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000720, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_SelectFloat_ReturnValue) == 0x000728, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_SelectFloat_ReturnValue_1) == 0x000730, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CalculatePrice, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000738, "Member 'W_ItemInfo_C_CalculatePrice::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.ConvertInfoType
// 0x0030 (0x0030 - 0x0000)
struct W_ItemInfo_C_ConvertInfoType final
{
public:
	class FString                                 In;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Out;                                               // 0x0010(0x0018)(Parm, OutParm)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_ConvertInfoType) == 0x000008, "Wrong alignment on W_ItemInfo_C_ConvertInfoType");
static_assert(sizeof(W_ItemInfo_C_ConvertInfoType) == 0x000030, "Wrong size on W_ItemInfo_C_ConvertInfoType");
static_assert(offsetof(W_ItemInfo_C_ConvertInfoType, In) == 0x000000, "Member 'W_ItemInfo_C_ConvertInfoType::In' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_ConvertInfoType, Out) == 0x000010, "Member 'W_ItemInfo_C_ConvertInfoType::Out' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_ConvertInfoType, K2Node_SwitchString_CmpSuccess) == 0x000028, "Member 'W_ItemInfo_C_ConvertInfoType::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.CreateEffectRowWidget
// 0x0050 (0x0050 - 0x0000)
struct W_ItemInfo_C_CreateEffectRowWidget final
{
public:
	class FText                                   EffectName;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        Stats;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StatsModdifu;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNumericValues;                                 // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                InPadding;                                         // 0x002C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_EffectRowForItemInfo_C*              CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_CreateEffectRowWidget) == 0x000008, "Wrong alignment on W_ItemInfo_C_CreateEffectRowWidget");
static_assert(sizeof(W_ItemInfo_C_CreateEffectRowWidget) == 0x000050, "Wrong size on W_ItemInfo_C_CreateEffectRowWidget");
static_assert(offsetof(W_ItemInfo_C_CreateEffectRowWidget, EffectName) == 0x000000, "Member 'W_ItemInfo_C_CreateEffectRowWidget::EffectName' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CreateEffectRowWidget, Stats) == 0x000018, "Member 'W_ItemInfo_C_CreateEffectRowWidget::Stats' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CreateEffectRowWidget, StatsModdifu) == 0x000020, "Member 'W_ItemInfo_C_CreateEffectRowWidget::StatsModdifu' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CreateEffectRowWidget, ShowNumericValues) == 0x000028, "Member 'W_ItemInfo_C_CreateEffectRowWidget::ShowNumericValues' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CreateEffectRowWidget, InPadding) == 0x00002C, "Member 'W_ItemInfo_C_CreateEffectRowWidget::InPadding' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CreateEffectRowWidget, CallFunc_Create_ReturnValue) == 0x000040, "Member 'W_ItemInfo_C_CreateEffectRowWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_CreateEffectRowWidget, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000048, "Member 'W_ItemInfo_C_CreateEffectRowWidget::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.ExecuteUbergraph_W_ItemInfo
// 0x0028 (0x0028 - 0x0000)
struct W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo) == 0x000008, "Wrong alignment on W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo");
static_assert(sizeof(W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo) == 0x000028, "Wrong size on W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo");
static_assert(offsetof(W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo, EntryPoint) == 0x000000, "Member 'W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo, CallFunc_GetViewportSize_ReturnValue) == 0x000008, "Member 'W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000018, "Member 'W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.FindBaseStatsWeapon
// 0x0520 (0x0520 - 0x0000)
struct W_ItemInfo_C_FindBaseStatsWeapon final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Power;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectiveRange;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stability;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FireRatio;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_WeaponData                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x04C0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_FindBaseStatsWeapon) == 0x000008, "Wrong alignment on W_ItemInfo_C_FindBaseStatsWeapon");
static_assert(sizeof(W_ItemInfo_C_FindBaseStatsWeapon) == 0x000520, "Wrong size on W_ItemInfo_C_FindBaseStatsWeapon");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, Param_Name) == 0x000000, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::Param_Name' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, Power) == 0x000008, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::Power' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, EffectiveRange) == 0x000010, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::EffectiveRange' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, Stability) == 0x000018, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::Stability' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, FireRatio) == 0x000020, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::FireRatio' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000038, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, CallFunc_Array_Get_Item) == 0x00004C, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000518, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_FindBaseStatsWeapon, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000519, "Member 'W_ItemInfo_C_FindBaseStatsWeapon::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.GetItemInfo
// 0x0230 (0x0230 - 0x0000)
struct W_ItemInfo_C_GetItemInfo final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UUserWidget*                            Param_TriggerUserWidget;                           // 0x0220(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_GetItemInfo) == 0x000008, "Wrong alignment on W_ItemInfo_C_GetItemInfo");
static_assert(sizeof(W_ItemInfo_C_GetItemInfo) == 0x000230, "Wrong size on W_ItemInfo_C_GetItemInfo");
static_assert(offsetof(W_ItemInfo_C_GetItemInfo, ItemInfo) == 0x000000, "Member 'W_ItemInfo_C_GetItemInfo::ItemInfo' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_GetItemInfo, Param_TriggerUserWidget) == 0x000220, "Member 'W_ItemInfo_C_GetItemInfo::Param_TriggerUserWidget' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_GetItemInfo, CallFunc_IsValid_ReturnValue) == 0x000228, "Member 'W_ItemInfo_C_GetItemInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_GetItemInfo, CallFunc_IsHovered_ReturnValue) == 0x000229, "Member 'W_ItemInfo_C_GetItemInfo::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_GetItemInfo, CallFunc_IsValid_ReturnValue_1) == 0x00022A, "Member 'W_ItemInfo_C_GetItemInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_GetItemInfo, CallFunc_BooleanAND_ReturnValue) == 0x00022B, "Member 'W_ItemInfo_C_GetItemInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.GetRepairPrice
// 0x0018 (0x0018 - 0x0000)
struct W_ItemInfo_C_GetRepairPrice final
{
public:
	int32                                         RepairPrice;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Repair_Price_RepairPrice;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_GetRepairPrice) == 0x000008, "Wrong alignment on W_ItemInfo_C_GetRepairPrice");
static_assert(sizeof(W_ItemInfo_C_GetRepairPrice) == 0x000018, "Wrong size on W_ItemInfo_C_GetRepairPrice");
static_assert(offsetof(W_ItemInfo_C_GetRepairPrice, RepairPrice) == 0x000000, "Member 'W_ItemInfo_C_GetRepairPrice::RepairPrice' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_GetRepairPrice, K2Node_DynamicCast_AsJSI_Slot) == 0x000008, "Member 'W_ItemInfo_C_GetRepairPrice::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_GetRepairPrice, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_ItemInfo_C_GetRepairPrice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_GetRepairPrice, CallFunc_Get_Repair_Price_RepairPrice) == 0x000014, "Member 'W_ItemInfo_C_GetRepairPrice::CallFunc_Get_Repair_Price_RepairPrice' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.OnHideWidget
// 0x0038 (0x0038 - 0x0000)
struct W_ItemInfo_C_OnHideWidget final
{
public:
	double                                        Power;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectiveRange;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stability;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FiringRate;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithoutAnim;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_OnHideWidget) == 0x000008, "Wrong alignment on W_ItemInfo_C_OnHideWidget");
static_assert(sizeof(W_ItemInfo_C_OnHideWidget) == 0x000038, "Wrong size on W_ItemInfo_C_OnHideWidget");
static_assert(offsetof(W_ItemInfo_C_OnHideWidget, Power) == 0x000000, "Member 'W_ItemInfo_C_OnHideWidget::Power' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnHideWidget, EffectiveRange) == 0x000008, "Member 'W_ItemInfo_C_OnHideWidget::EffectiveRange' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnHideWidget, Stability) == 0x000010, "Member 'W_ItemInfo_C_OnHideWidget::Stability' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnHideWidget, FiringRate) == 0x000018, "Member 'W_ItemInfo_C_OnHideWidget::FiringRate' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnHideWidget, WithoutAnim) == 0x000020, "Member 'W_ItemInfo_C_OnHideWidget::WithoutAnim' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnHideWidget, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000028, "Member 'W_ItemInfo_C_OnHideWidget::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnHideWidget, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000030, "Member 'W_ItemInfo_C_OnHideWidget::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.OnPrepareAtatchmentsEffects
// 0x0608 (0x0608 - 0x0000)
struct W_ItemInfo_C_OnPrepareAtatchmentsEffects final
{
public:
	struct FFItemInfo                             Param_Item;                                        // 0x0000(0x0220)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   WeaponName;                                        // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttachment;                                      // 0x0228(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Attachments;                                       // 0x0230(0x0010)(Edit, BlueprintVisible)
	double                                        FIring_Rate;                                       // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stability;                                         // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectiveRange;                                    // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Power;                                             // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasAttachment;                                    // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentSlotIndex;                                  // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Workbench_C*                       CallFunc_GetWorkBenchWidgetRef_WorkbenchWidgetRef; // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetModifiedWeapon_Weapon_Info;            // 0x02C0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_FindBaseStatsWeapon_Power;                // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindBaseStatsWeapon_EffectiveRange;       // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindBaseStatsWeapon_Stability;            // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindBaseStatsWeapon_FireRatio;            // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Attachment                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0510(0x0080)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0592(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593[0x1];                                      // 0x0593(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_599[0x3];                                      // 0x0599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentInfo                        CallFunc_Array_Get_Item_1;                         // 0x059C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x05C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_OnPrepareAtatchmentsEffects) == 0x000008, "Wrong alignment on W_ItemInfo_C_OnPrepareAtatchmentsEffects");
static_assert(sizeof(W_ItemInfo_C_OnPrepareAtatchmentsEffects) == 0x000608, "Wrong size on W_ItemInfo_C_OnPrepareAtatchmentsEffects");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Param_Item) == 0x000000, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Param_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, WeaponName) == 0x000220, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::WeaponName' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, IsAttachment) == 0x000228, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::IsAttachment' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Attachments) == 0x000230, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Attachments' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, FIring_Rate) == 0x000240, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::FIring_Rate' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Stability) == 0x000248, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Stability' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, EffectiveRange) == 0x000250, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::EffectiveRange' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Power) == 0x000258, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Power' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, bHasAttachment) == 0x000260, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::bHasAttachment' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CurrentSlotIndex) == 0x000264, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CurrentSlotIndex' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Temp_int_Loop_Counter_Variable) == 0x000268, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Add_IntInt_ReturnValue) == 0x00026C, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000270, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Temp_int_Array_Index_Variable) == 0x000274, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Temp_int_Array_Index_Variable_1) == 0x000278, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Temp_bool_Variable) == 0x00027C, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Temp_int_Loop_Counter_Variable_1) == 0x000280, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_GetPlayerController_ReturnValue) == 0x000288, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_GetHUD_ReturnValue) == 0x000290, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Add_IntInt_ReturnValue_1) == 0x000298, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x0002A0, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_GetWorkBenchWidgetRef_WorkbenchWidgetRef) == 0x0002B8, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_GetWorkBenchWidgetRef_WorkbenchWidgetRef' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_GetModifiedWeapon_Weapon_Info) == 0x0002C0, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_GetModifiedWeapon_Weapon_Info' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_FindBaseStatsWeapon_Power) == 0x0004E0, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_FindBaseStatsWeapon_Power' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_FindBaseStatsWeapon_EffectiveRange) == 0x0004E8, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_FindBaseStatsWeapon_EffectiveRange' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_FindBaseStatsWeapon_Stability) == 0x0004F0, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_FindBaseStatsWeapon_Stability' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_FindBaseStatsWeapon_FireRatio) == 0x0004F8, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_FindBaseStatsWeapon_FireRatio' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Array_Get_Item) == 0x000500, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Array_Length_ReturnValue) == 0x000508, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_GetDataTableRowFromName_OutRow) == 0x000510, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000590, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000591, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000592, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_GetChildrenCount_ReturnValue) == 0x000594, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Greater_IntInt_ReturnValue) == 0x000598, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Array_Get_Item_1) == 0x00059C, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Array_Length_ReturnValue_1) == 0x0005AC, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Less_IntInt_ReturnValue_1) == 0x0005B0, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Array_Add_ReturnValue) == 0x0005B4, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0005B8, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, K2Node_MakeArray_Array) == 0x0005C0, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0005D0, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0005D8, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0005E0, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Temp_byte_Variable) == 0x0005E8, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0005F0, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0005F8, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, Temp_byte_Variable_1) == 0x000600, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAtatchmentsEffects, K2Node_Select_Default) == 0x000601, "Member 'W_ItemInfo_C_OnPrepareAtatchmentsEffects::K2Node_Select_Default' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.OnPrepareAttachments
// 0x0228 (0x0228 - 0x0000)
struct W_ItemInfo_C_OnPrepareAttachments final
{
public:
	struct FFItemInfo                             Param_Item;                                        // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0224(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_OnPrepareAttachments) == 0x000008, "Wrong alignment on W_ItemInfo_C_OnPrepareAttachments");
static_assert(sizeof(W_ItemInfo_C_OnPrepareAttachments) == 0x000228, "Wrong size on W_ItemInfo_C_OnPrepareAttachments");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAttachments, Param_Item) == 0x000000, "Member 'W_ItemInfo_C_OnPrepareAttachments::Param_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAttachments, Param_Index) == 0x000220, "Member 'W_ItemInfo_C_OnPrepareAttachments::Param_Index' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareAttachments, FunctionResult) == 0x000224, "Member 'W_ItemInfo_C_OnPrepareAttachments::FunctionResult' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.OnPrepareFoodEffects
// 0x03D0 (0x03D0 - 0x0000)
struct W_ItemInfo_C_OnPrepareFoodEffects final
{
public:
	struct FFItemInfo                             Param_Item;                                        // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEffectMainContructor                  ItemEffects;                                       // 0x0228(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A3[0x1];                                      // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x2];                                      // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEffectContructor                      CallFunc_Array_Get_Item;                           // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B[0x1];                                      // 0x030B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEffectContructor                      CallFunc_Array_Get_Item_1;                         // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEffectMainContructor                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0318(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x2];                                      // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x039A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B[0x1];                                      // 0x039B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2[0x2];                                      // 0x03A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x03AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x03AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Value_ImplicitCast;             // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast_1;      // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Value_ImplicitCast_1;           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_OnPrepareFoodEffects) == 0x000008, "Wrong alignment on W_ItemInfo_C_OnPrepareFoodEffects");
static_assert(sizeof(W_ItemInfo_C_OnPrepareFoodEffects) == 0x0003D0, "Wrong size on W_ItemInfo_C_OnPrepareFoodEffects");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Param_Item) == 0x000000, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Param_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Value) == 0x000220, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Value' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, ItemEffects) == 0x000228, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::ItemEffects' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_bool_Variable) == 0x0002A0, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_byte_Variable) == 0x0002A1, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_byte_Variable_1) == 0x0002A2, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_int_Array_Index_Variable) == 0x0002A4, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_bool_True_if_break_was_hit_Variable) == 0x0002A8, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Not_PreBool_ReturnValue) == 0x0002A9, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_int_Loop_Counter_Variable) == 0x0002AC, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Add_IntInt_ReturnValue) == 0x0002B0, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0002B4, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_int_Array_Index_Variable_1) == 0x0002B8, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002BC, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_GetPlayerController_ReturnValue) == 0x0002C0, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_K2_GetPawn_ReturnValue) == 0x0002C8, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, K2Node_DynamicCast_AsSurvival_Player) == 0x0002D0, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, K2Node_DynamicCast_bSuccess) == 0x0002D8, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002E0, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_byte_Variable_2) == 0x0002E8, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_byte_Variable_3) == 0x0002E9, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Array_Get_Item) == 0x0002EC, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Array_Length_ReturnValue) == 0x0002F8, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000300, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000308, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_bool_Variable_1) == 0x000309, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_byte_Variable_4) == 0x00030A, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Array_Get_Item_1) == 0x00030C, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_GetDataTableRowFromName_OutRow) == 0x000318, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000390, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000391, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Array_Length_ReturnValue_1) == 0x000394, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000398, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, K2Node_Select_Default) == 0x000399, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_BooleanAND_ReturnValue) == 0x00039A, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_int_Loop_Counter_Variable_1) == 0x00039C, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003A0, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_BooleanAND_ReturnValue_1) == 0x0003A1, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003A4, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_byte_Variable_5) == 0x0003A8, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, Temp_bool_Variable_2) == 0x0003A9, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, K2Node_Select_Default_1) == 0x0003AA, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0003AB, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0003AC, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0003AD, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_BooleanOR_ReturnValue) == 0x0003AE, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_BooleanOR_ReturnValue_1) == 0x0003AF, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, K2Node_Select_Default_2) == 0x0003B0, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0003B4, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, K2Node_VariableSet_Value_ImplicitCast) == 0x0003B8, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::K2Node_VariableSet_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, CallFunc_SetPercent_InPercent_ImplicitCast_1) == 0x0003C0, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::CallFunc_SetPercent_InPercent_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareFoodEffects, K2Node_VariableSet_Value_ImplicitCast_1) == 0x0003C8, "Member 'W_ItemInfo_C_OnPrepareFoodEffects::K2Node_VariableSet_Value_ImplicitCast_1' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.OnPrepareIcons
// 0x0610 (0x0610 - 0x0000)
struct W_ItemInfo_C_OnPrepareIcons final
{
public:
	struct FFItemInfo                             Param_Item;                                        // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	double                                        TotalWeight;                                       // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0228(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_236[0x2];                                      // 0x0236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShopWidgetOpen_IsOpen;                  // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SamplePrice_ReturnValue;                  // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0298(0x0018)()
	int32                                         CallFunc_GetRepairPrice_RepairPrice;               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x02B8(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x02D8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0308(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x032B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x032E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x032F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0338(0x0018)()
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0360(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentInfo                        CallFunc_Array_Get_Item;                           // 0x037C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0398(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x05E8(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0603(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0606(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0607(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_OnPrepareIcons) == 0x000008, "Wrong alignment on W_ItemInfo_C_OnPrepareIcons");
static_assert(sizeof(W_ItemInfo_C_OnPrepareIcons) == 0x000610, "Wrong size on W_ItemInfo_C_OnPrepareIcons");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Param_Item) == 0x000000, "Member 'W_ItemInfo_C_OnPrepareIcons::Param_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, TotalWeight) == 0x000220, "Member 'W_ItemInfo_C_OnPrepareIcons::TotalWeight' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, FunctionResult) == 0x000228, "Member 'W_ItemInfo_C_OnPrepareIcons::FunctionResult' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_bool_Variable) == 0x000229, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_byte_Variable) == 0x00022A, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00022B, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_byte_Variable_1) == 0x00022C, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_int_Array_Index_Variable) == 0x000230, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_byte_Variable_2) == 0x000234, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_byte_Variable_3) == 0x000235, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, K2Node_DynamicCast_AsJSI_Slot) == 0x000238, "Member 'W_ItemInfo_C_OnPrepareIcons::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'W_ItemInfo_C_OnPrepareIcons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_GetPlayerController_ReturnValue) == 0x000248, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_GetCount_Count) == 0x000250, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_GetHUD_ReturnValue) == 0x000258, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Max_ReturnValue) == 0x000260, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000268, "Member 'W_ItemInfo_C_OnPrepareIcons::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, K2Node_DynamicCast_bSuccess_1) == 0x000278, "Member 'W_ItemInfo_C_OnPrepareIcons::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000280, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_IsShopWidgetOpen_IsOpen) == 0x000288, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_IsShopWidgetOpen_IsOpen' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_bool_Variable_1) == 0x000289, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00028A, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00028B, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_SamplePrice_ReturnValue) == 0x00028C, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_SamplePrice_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_byte_Variable_4) == 0x000290, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Conv_IntToText_ReturnValue) == 0x000298, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_GetRepairPrice_RepairPrice) == 0x0002B0, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_GetRepairPrice_RepairPrice' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0002B4, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0002B8, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, K2Node_Select_Default) == 0x0002D0, "Member 'W_ItemInfo_C_OnPrepareIcons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0002D8, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_byte_Variable_5) == 0x0002F0, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_bool_Variable_2) == 0x0002F1, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, K2Node_Select_Default_1) == 0x000300, "Member 'W_ItemInfo_C_OnPrepareIcons::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000308, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_int_Loop_Counter_Variable) == 0x000320, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Add_IntInt_ReturnValue) == 0x000324, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_byte_Variable_6) == 0x000328, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_byte_Variable_7) == 0x000329, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_bool_Variable_3) == 0x00032A, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_byte_Variable_8) == 0x00032B, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, K2Node_Select_Default_2) == 0x00032C, "Member 'W_ItemInfo_C_OnPrepareIcons::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_byte_Variable_9) == 0x00032D, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, Temp_bool_Variable_4) == 0x00032E, "Member 'W_ItemInfo_C_OnPrepareIcons::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, K2Node_Select_Default_3) == 0x00032F, "Member 'W_ItemInfo_C_OnPrepareIcons::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000330, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000338, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, K2Node_MathExpression_ReturnValue) == 0x000350, "Member 'W_ItemInfo_C_OnPrepareIcons::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000358, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000360, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, K2Node_Select_Default_4) == 0x000378, "Member 'W_ItemInfo_C_OnPrepareIcons::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Array_Get_Item) == 0x00037C, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Array_Length_ReturnValue) == 0x00038C, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Less_IntInt_ReturnValue) == 0x000390, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_GetDataTableRowFromName_OutRow) == 0x000398, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0005B8, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_BreakVector2D_X) == 0x0005C0, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_BreakVector2D_Y) == 0x0005C8, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0005D0, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0005D8, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0005E0, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x0005E8, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000600, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000601, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000602, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000603, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000604, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_BooleanOR_ReturnValue) == 0x000605, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_BooleanOR_ReturnValue_1) == 0x000606, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_BooleanOR_ReturnValue_2) == 0x000607, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareIcons, CallFunc_BooleanOR_ReturnValue_3) == 0x000608, "Member 'W_ItemInfo_C_OnPrepareIcons::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.OnPrepareWidget
// 0x0A88 (0x0A88 - 0x0000)
struct W_ItemInfo_C_OnPrepareWidget final
{
public:
	struct FFItemInfo                             Param_Item;                                        // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0220(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0221(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_223[0x5];                                      // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ConvertInfoType_Out;                      // 0x02E8(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_WeaponData                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0308(0x04C0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C9[0x7];                                      // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x07D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x07E8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A09[0x7];                                      // 0x0A09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0A10(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0A60(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0A70(0x0018)()
};
static_assert(alignof(W_ItemInfo_C_OnPrepareWidget) == 0x000008, "Wrong alignment on W_ItemInfo_C_OnPrepareWidget");
static_assert(sizeof(W_ItemInfo_C_OnPrepareWidget) == 0x000A88, "Wrong size on W_ItemInfo_C_OnPrepareWidget");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, Param_Item) == 0x000000, "Member 'W_ItemInfo_C_OnPrepareWidget::Param_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, Result) == 0x000220, "Member 'W_ItemInfo_C_OnPrepareWidget::Result' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, FunctionResult) == 0x000221, "Member 'W_ItemInfo_C_OnPrepareWidget::FunctionResult' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000222, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_Conv_NameToString_ReturnValue) == 0x000228, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_FindSubstring_ReturnValue) == 0x000238, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00023C, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, K2Node_DynamicCast_AsJSI_Slot) == 0x000240, "Member 'W_ItemInfo_C_OnPrepareWidget::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, K2Node_DynamicCast_bSuccess) == 0x000248, "Member 'W_ItemInfo_C_OnPrepareWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000250, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000260, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000261, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_SelectString_ReturnValue) == 0x000268, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_SelectString_ReturnValue_1) == 0x000278, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000288, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000290, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0002A0, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0002A1, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, Temp_string_Variable) == 0x0002A8, "Member 'W_ItemInfo_C_OnPrepareWidget::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, Temp_bool_Variable) == 0x0002B8, "Member 'W_ItemInfo_C_OnPrepareWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, K2Node_Select_Default) == 0x0002C0, "Member 'W_ItemInfo_C_OnPrepareWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_SelectString_ReturnValue_2) == 0x0002D0, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0002E0, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_ConvertInfoType_Out) == 0x0002E8, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_ConvertInfoType_Out' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_BooleanAND_ReturnValue) == 0x000300, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_GetDataTableRowFromName_OutRow) == 0x000308, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0007C8, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x0007D0, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_Conv_StringToName_ReturnValue) == 0x0007E0, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0007E8, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000A08, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000A10, "Member 'W_ItemInfo_C_OnPrepareWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, K2Node_MakeArray_Array) == 0x000A60, "Member 'W_ItemInfo_C_OnPrepareWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidget, CallFunc_Format_ReturnValue) == 0x000A70, "Member 'W_ItemInfo_C_OnPrepareWidget::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.OnPrepareWidgetTraits
// 0x00C0 (0x00C0 - 0x0000)
struct W_ItemInfo_C_OnPrepareWidgetTraits final
{
public:
	struct FWS_CharaterPerks                      TRAITS;                                            // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x00B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_OnPrepareWidgetTraits) == 0x000008, "Wrong alignment on W_ItemInfo_C_OnPrepareWidgetTraits");
static_assert(sizeof(W_ItemInfo_C_OnPrepareWidgetTraits) == 0x0000C0, "Wrong size on W_ItemInfo_C_OnPrepareWidgetTraits");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidgetTraits, TRAITS) == 0x000000, "Member 'W_ItemInfo_C_OnPrepareWidgetTraits::TRAITS' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidgetTraits, Result) == 0x0000B8, "Member 'W_ItemInfo_C_OnPrepareWidgetTraits::Result' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidgetTraits, FunctionResult) == 0x0000B9, "Member 'W_ItemInfo_C_OnPrepareWidgetTraits::FunctionResult' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnPrepareWidgetTraits, CallFunc_TextIsEmpty_ReturnValue) == 0x0000BA, "Member 'W_ItemInfo_C_OnPrepareWidgetTraits::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.OnShowWidget
// 0x0028 (0x0028 - 0x0000)
struct W_ItemInfo_C_OnShowWidget final
{
public:
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnPrepareWidgetTraits_Result;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnPrepareWidget_Result;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_OnShowWidget) == 0x000008, "Wrong alignment on W_ItemInfo_C_OnShowWidget");
static_assert(sizeof(W_ItemInfo_C_OnShowWidget) == 0x000028, "Wrong size on W_ItemInfo_C_OnShowWidget");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_IsHovered_ReturnValue) == 0x000000, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_OnPrepareWidgetTraits_Result) == 0x000010, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_OnPrepareWidgetTraits_Result' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_BooleanAND_ReturnValue_1) == 0x000012, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_BooleanAND_ReturnValue_2) == 0x000013, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_OnPrepareWidget_Result) == 0x000014, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_OnPrepareWidget_Result' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_IsHovered_ReturnValue_1) == 0x000015, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_IsValid_ReturnValue_1) == 0x000016, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000018, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_Not_PreBool_ReturnValue_1) == 0x000020, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_BooleanAND_ReturnValue_3) == 0x000021, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnShowWidget, CallFunc_BooleanAND_ReturnValue_4) == 0x000022, "Member 'W_ItemInfo_C_OnShowWidget::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.OnToggleWidget
// 0x0380 (0x0380 - 0x0000)
struct W_ItemInfo_C_OnToggleWidget final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            UserWidget;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             Param_Item;                                        // 0x0010(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0230(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_CompareAttachmentToWeapon;                   // 0x0238(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWS_CharaterPerks                      TRAITS;                                            // 0x0240(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          IsTraits;                                          // 0x02F8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInfoType                                     AttachmentType;                                    // 0x02F9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TypesOfModes                                TypeOfModes;                                       // 0x02FA(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          JustHideWithoutAnim;                               // 0x02FB(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE[0x2];                                      // 0x02FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue_1;       // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B[0x5];                                      // 0x034B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0360(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_OnToggleWidget) == 0x000008, "Wrong alignment on W_ItemInfo_C_OnToggleWidget");
static_assert(sizeof(W_ItemInfo_C_OnToggleWidget) == 0x000380, "Wrong size on W_ItemInfo_C_OnToggleWidget");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, NewState) == 0x000000, "Member 'W_ItemInfo_C_OnToggleWidget::NewState' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, UserWidget) == 0x000008, "Member 'W_ItemInfo_C_OnToggleWidget::UserWidget' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, Param_Item) == 0x000010, "Member 'W_ItemInfo_C_OnToggleWidget::Param_Item' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, Delay) == 0x000230, "Member 'W_ItemInfo_C_OnToggleWidget::Delay' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, Param_CompareAttachmentToWeapon) == 0x000238, "Member 'W_ItemInfo_C_OnToggleWidget::Param_CompareAttachmentToWeapon' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, TRAITS) == 0x000240, "Member 'W_ItemInfo_C_OnToggleWidget::TRAITS' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, IsTraits) == 0x0002F8, "Member 'W_ItemInfo_C_OnToggleWidget::IsTraits' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, AttachmentType) == 0x0002F9, "Member 'W_ItemInfo_C_OnToggleWidget::AttachmentType' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, TypeOfModes) == 0x0002FA, "Member 'W_ItemInfo_C_OnToggleWidget::TypeOfModes' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, JustHideWithoutAnim) == 0x0002FB, "Member 'W_ItemInfo_C_OnToggleWidget::JustHideWithoutAnim' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_IsValid_ReturnValue) == 0x0002FC, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x0002FD, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_GetEndTime_ReturnValue) == 0x000300, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000304, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000308, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, Temp_string_Variable) == 0x000310, "Member 'W_ItemInfo_C_OnToggleWidget::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, Temp_string_Variable_1) == 0x000320, "Member 'W_ItemInfo_C_OnToggleWidget::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000330, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000338, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_FMax_ReturnValue) == 0x000340, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000348, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_K2_TimerExistsHandle_ReturnValue_1) == 0x000349, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_K2_TimerExistsHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, Temp_bool_Variable) == 0x00034A, "Member 'W_ItemInfo_C_OnToggleWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, K2Node_Select_Default) == 0x000350, "Member 'W_ItemInfo_C_OnToggleWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_K2_SetTimer_ReturnValue) == 0x000360, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_FMax_B_ImplicitCast) == 0x000368, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000370, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnToggleWidget, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000378, "Member 'W_ItemInfo_C_OnToggleWidget::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.OnUpdateWidgetPosition
// 0x0300 (0x0300 - 0x0000)
struct W_ItemInfo_C_OnUpdateWidgetPosition final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Offset;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaY;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CachedWidgetSize;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CachedViewportSize;                                // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              WidgetPivot;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                NewLocalVar_0;                                     // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Horizontal;                                        // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vertical;                                          // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DeltaX;                                            // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Pos;                                               // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCraftWindowOpened_Opened;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x00E4(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_OnUpdateWidgetPosition) == 0x000008, "Wrong alignment on W_ItemInfo_C_OnUpdateWidgetPosition");
static_assert(sizeof(W_ItemInfo_C_OnUpdateWidgetPosition) == 0x000300, "Wrong size on W_ItemInfo_C_OnUpdateWidgetPosition");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, Widget) == 0x000000, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::Widget' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, Offset) == 0x000008, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::Offset' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, DeltaY) == 0x000010, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::DeltaY' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CachedWidgetSize) == 0x000018, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CachedWidgetSize' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CachedViewportSize) == 0x000028, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CachedViewportSize' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, WidgetPivot) == 0x000038, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::WidgetPivot' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, NewLocalVar_0) == 0x000048, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, Horizontal) == 0x000050, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::Horizontal' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, Vertical) == 0x000051, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::Vertical' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, DeltaX) == 0x000058, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::DeltaX' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, Pos) == 0x000060, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::Pos' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, Temp_bool_Variable) == 0x000070, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, Temp_bool_Variable_1) == 0x000072, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, Temp_bool_Variable_2) == 0x000073, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, Temp_bool_Variable_3) == 0x000074, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_GetHUD_ReturnValue) == 0x000080, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_GetDesiredSize_ReturnValue) == 0x000088, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000098, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_X) == 0x0000B0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_Y) == 0x0000B8, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_GetCraftWindowOpened_Opened) == 0x0000C0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_GetCraftWindowOpened_Opened' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_GetViewportScale_ReturnValue) == 0x0000C4, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_SelectFloat_ReturnValue) == 0x0000D8, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, Temp_bool_Variable_4) == 0x0000E0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_GetCachedGeometry_ReturnValue) == 0x0000E4, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_GetAbsoluteSize_ReturnValue) == 0x000120, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_X_1) == 0x000130, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_Y_1) == 0x000138, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_LocalToViewport_PixelPosition) == 0x000140, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_LocalToViewport_ViewportPosition) == 0x000150, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000160, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_X_2) == 0x000168, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_Y_2) == 0x000170, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000178, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_GetVisibility_ReturnValue) == 0x000180, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000188, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000190, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000198, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_MakeVector2D_ReturnValue) == 0x0001A0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001B0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, K2Node_Select_Default) == 0x0001C0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_X_3) == 0x0001D0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_Y_3) == 0x0001D8, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0001E8, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_GetViewportSize_ReturnValue) == 0x0001F0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_X_4) == 0x000200, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_Y_4) == 0x000208, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_X_5) == 0x000210, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_Y_5) == 0x000218, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000220, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000228, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000230, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, K2Node_Select_Default_1) == 0x000240, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_SelectFloat_ReturnValue_1) == 0x000248, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, K2Node_Select_Default_2) == 0x000250, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000258, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_SelectFloat_ReturnValue_2) == 0x000260, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_MakeVector2D_ReturnValue_2) == 0x000268, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_SelectFloat_ReturnValue_3) == 0x000278, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000280, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_MakeVector2D_ReturnValue_3) == 0x000288, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, K2Node_Select_Default_3) == 0x000298, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_X_6) == 0x0002A8, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_BreakVector2D_Y_6) == 0x0002B0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_MakeVector2D_ReturnValue_4) == 0x0002B8, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0002C8, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_MakeVector2D_ReturnValue_5) == 0x0002D0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, K2Node_Select_Default_4) == 0x0002E0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0002F0, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_OnUpdateWidgetPosition, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0002F8, "Member 'W_ItemInfo_C_OnUpdateWidgetPosition::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.ResetTextForDeutchLocalization
// 0x0058 (0x0058 - 0x0000)
struct W_ItemInfo_C_ResetTextForDeutchLocalization final
{
public:
	class UTextBlock*                             TextBlock;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(W_ItemInfo_C_ResetTextForDeutchLocalization) == 0x000008, "Wrong alignment on W_ItemInfo_C_ResetTextForDeutchLocalization");
static_assert(sizeof(W_ItemInfo_C_ResetTextForDeutchLocalization) == 0x000058, "Wrong size on W_ItemInfo_C_ResetTextForDeutchLocalization");
static_assert(offsetof(W_ItemInfo_C_ResetTextForDeutchLocalization, TextBlock) == 0x000000, "Member 'W_ItemInfo_C_ResetTextForDeutchLocalization::TextBlock' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_ResetTextForDeutchLocalization, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'W_ItemInfo_C_ResetTextForDeutchLocalization::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_ResetTextForDeutchLocalization, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'W_ItemInfo_C_ResetTextForDeutchLocalization::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_ResetTextForDeutchLocalization, CallFunc_Replace_ReturnValue) == 0x000030, "Member 'W_ItemInfo_C_ResetTextForDeutchLocalization::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_ResetTextForDeutchLocalization, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'W_ItemInfo_C_ResetTextForDeutchLocalization::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.SamplePrice
// 0x0078 (0x0078 - 0x0000)
struct W_ItemInfo_C_SamplePrice final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGS_TDB_C*                              K2Node_DynamicCast_AsGS_TDB;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountOut_OutInt;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalculatePrice_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalculatePrice_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalculatePrice_ReturnValue_2;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalculatePrice_ReturnValue_3;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalculatePrice_ReturnValue_4;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalculatePrice_ReturnValue_5;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalculatePrice_ReturnValue_6;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemInfo_C_SamplePrice) == 0x000008, "Wrong alignment on W_ItemInfo_C_SamplePrice");
static_assert(sizeof(W_ItemInfo_C_SamplePrice) == 0x000078, "Wrong size on W_ItemInfo_C_SamplePrice");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, ReturnValue) == 0x000000, "Member 'W_ItemInfo_C_SamplePrice::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, K2Node_DynamicCast_AsGS_TDB) == 0x000010, "Member 'W_ItemInfo_C_SamplePrice::K2Node_DynamicCast_AsGS_TDB' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_ItemInfo_C_SamplePrice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_CountOut_OutInt) == 0x00001C, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_CountOut_OutInt' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Round_ReturnValue) == 0x000034, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_CalculatePrice_ReturnValue) == 0x00003C, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_CalculatePrice_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_CalculatePrice_ReturnValue_1) == 0x000044, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_CalculatePrice_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000048, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_CalculatePrice_ReturnValue_2) == 0x00004C, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_CalculatePrice_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000050, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Less_IntInt_ReturnValue_1) == 0x000051, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_BooleanAND_ReturnValue_1) == 0x000052, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_CalculatePrice_ReturnValue_3) == 0x000054, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_CalculatePrice_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000058, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Less_IntInt_ReturnValue_2) == 0x000059, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_BooleanAND_ReturnValue_2) == 0x00005A, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_CalculatePrice_ReturnValue_4) == 0x00005C, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_CalculatePrice_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000060, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Less_IntInt_ReturnValue_3) == 0x000061, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_BooleanAND_ReturnValue_3) == 0x000062, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_CalculatePrice_ReturnValue_5) == 0x000064, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_CalculatePrice_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Greater_IntInt_ReturnValue_5) == 0x000068, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Less_IntInt_ReturnValue_4) == 0x000069, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_BooleanAND_ReturnValue_4) == 0x00006A, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_CalculatePrice_ReturnValue_6) == 0x00006C, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_CalculatePrice_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_SamplePrice, CallFunc_Less_IntInt_ReturnValue_5) == 0x000070, "Member 'W_ItemInfo_C_SamplePrice::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");

// Function W_ItemInfo.W_ItemInfo_C.Set Color Durability
// 0x0040 (0x0040 - 0x0000)
struct W_ItemInfo_C_Set_Color_Durability final
{
public:
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x002C(0x0014)()
};
static_assert(alignof(W_ItemInfo_C_Set_Color_Durability) == 0x000008, "Wrong alignment on W_ItemInfo_C_Set_Color_Durability");
static_assert(sizeof(W_ItemInfo_C_Set_Color_Durability) == 0x000040, "Wrong size on W_ItemInfo_C_Set_Color_Durability");
static_assert(offsetof(W_ItemInfo_C_Set_Color_Durability, K2Node_MathExpression_ReturnValue) == 0x000000, "Member 'W_ItemInfo_C_Set_Color_Durability::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_Set_Color_Durability, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000008, "Member 'W_ItemInfo_C_Set_Color_Durability::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_Set_Color_Durability, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000009, "Member 'W_ItemInfo_C_Set_Color_Durability::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_Set_Color_Durability, CallFunc_SelectColor_ReturnValue) == 0x00000C, "Member 'W_ItemInfo_C_Set_Color_Durability::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_Set_Color_Durability, CallFunc_SelectColor_ReturnValue_1) == 0x00001C, "Member 'W_ItemInfo_C_Set_Color_Durability::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemInfo_C_Set_Color_Durability, K2Node_MakeStruct_SlateColor) == 0x00002C, "Member 'W_ItemInfo_C_Set_Color_Durability::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

