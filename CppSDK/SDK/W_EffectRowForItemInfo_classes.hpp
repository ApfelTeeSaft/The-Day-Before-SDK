#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_EffectRowForItemInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_EffectRowForItemInfo.W_EffectRowForItemInfo_C
// 0x00C8 (0x0348 - 0x0280)
class UW_EffectRowForItemInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProgressBar*                           Grey;                                              // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_125;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_183;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EffectValuerNegativeSign;                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_EffectValuerPositiveSign;                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Minus;                                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Plus;                                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Progress;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_EffectName;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_EffectValue;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_EffectValueSign;                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   EffectName;                                        // 0x02F8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	double                                        Stats;                                             // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        StatsModdifu;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShowNumericValues;                                 // 0x0320(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           EffectValueNegative_Color;                         // 0x0324(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EffectValuePositive_Color;                         // 0x0334(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_EffectRowForItemInfo(int32 EntryPoint);
	bool IsNegativeEffectValue();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_EffectRowForItemInfo_C">();
	}
	static class UW_EffectRowForItemInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_EffectRowForItemInfo_C>();
	}
};
static_assert(alignof(UW_EffectRowForItemInfo_C) == 0x000008, "Wrong alignment on UW_EffectRowForItemInfo_C");
static_assert(sizeof(UW_EffectRowForItemInfo_C) == 0x000348, "Wrong size on UW_EffectRowForItemInfo_C");
static_assert(offsetof(UW_EffectRowForItemInfo_C, UberGraphFrame) == 0x000280, "Member 'UW_EffectRowForItemInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Grey) == 0x000288, "Member 'UW_EffectRowForItemInfo_C::Grey' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Image) == 0x000290, "Member 'UW_EffectRowForItemInfo_C::Image' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Image_1) == 0x000298, "Member 'UW_EffectRowForItemInfo_C::Image_1' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Image_2) == 0x0002A0, "Member 'UW_EffectRowForItemInfo_C::Image_2' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Image_125) == 0x0002A8, "Member 'UW_EffectRowForItemInfo_C::Image_125' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Image_183) == 0x0002B0, "Member 'UW_EffectRowForItemInfo_C::Image_183' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Image_EffectValuerNegativeSign) == 0x0002B8, "Member 'UW_EffectRowForItemInfo_C::Image_EffectValuerNegativeSign' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Image_EffectValuerPositiveSign) == 0x0002C0, "Member 'UW_EffectRowForItemInfo_C::Image_EffectValuerPositiveSign' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Minus) == 0x0002C8, "Member 'UW_EffectRowForItemInfo_C::Minus' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Plus) == 0x0002D0, "Member 'UW_EffectRowForItemInfo_C::Plus' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, SizeBox_Progress) == 0x0002D8, "Member 'UW_EffectRowForItemInfo_C::SizeBox_Progress' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, TextBlock_EffectName) == 0x0002E0, "Member 'UW_EffectRowForItemInfo_C::TextBlock_EffectName' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, TextBlock_EffectValue) == 0x0002E8, "Member 'UW_EffectRowForItemInfo_C::TextBlock_EffectValue' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, WidgetSwitcher_EffectValueSign) == 0x0002F0, "Member 'UW_EffectRowForItemInfo_C::WidgetSwitcher_EffectValueSign' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, EffectName) == 0x0002F8, "Member 'UW_EffectRowForItemInfo_C::EffectName' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, Stats) == 0x000310, "Member 'UW_EffectRowForItemInfo_C::Stats' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, StatsModdifu) == 0x000318, "Member 'UW_EffectRowForItemInfo_C::StatsModdifu' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, ShowNumericValues) == 0x000320, "Member 'UW_EffectRowForItemInfo_C::ShowNumericValues' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, EffectValueNegative_Color) == 0x000324, "Member 'UW_EffectRowForItemInfo_C::EffectValueNegative_Color' has a wrong offset!");
static_assert(offsetof(UW_EffectRowForItemInfo_C, EffectValuePositive_Color) == 0x000334, "Member 'UW_EffectRowForItemInfo_C::EffectValuePositive_Color' has a wrong offset!");

}

