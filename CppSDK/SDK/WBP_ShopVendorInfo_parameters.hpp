#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ShopVendorInfo

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_ShopVendorInfo.WBP_ShopVendorInfo_C.ExecuteUbergraph_WBP_ShopVendorInfo
// 0x0030 (0x0030 - 0x0000)
struct WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Expand;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo) == 0x000008, "Wrong alignment on WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo");
static_assert(sizeof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo) == 0x000030, "Wrong size on WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, EntryPoint) == 0x000000, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, Temp_bool_Variable) == 0x000004, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, Temp_byte_Variable) == 0x000005, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, K2Node_CustomEvent_Expand) == 0x000007, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::K2Node_CustomEvent_Expand' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, K2Node_Select_Default) == 0x000008, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, K2Node_CustomEvent_Show) == 0x000009, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, K2Node_Event_IsDesignTime) == 0x00000A, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, Temp_byte_Variable_2) == 0x000018, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, Temp_byte_Variable_3) == 0x000019, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, Temp_bool_Variable_1) == 0x00001A, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00001B, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, K2Node_Select_Default_1) == 0x00001C, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000028, "Member 'WBP_ShopVendorInfo_C_ExecuteUbergraph_WBP_ShopVendorInfo::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");

// Function WBP_ShopVendorInfo.WBP_ShopVendorInfo_C.ExpandName
// 0x0001 (0x0001 - 0x0000)
struct WBP_ShopVendorInfo_C_ExpandName final
{
public:
	bool                                          Param_Expand;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ShopVendorInfo_C_ExpandName) == 0x000001, "Wrong alignment on WBP_ShopVendorInfo_C_ExpandName");
static_assert(sizeof(WBP_ShopVendorInfo_C_ExpandName) == 0x000001, "Wrong size on WBP_ShopVendorInfo_C_ExpandName");
static_assert(offsetof(WBP_ShopVendorInfo_C_ExpandName, Param_Expand) == 0x000000, "Member 'WBP_ShopVendorInfo_C_ExpandName::Param_Expand' has a wrong offset!");

// Function WBP_ShopVendorInfo.WBP_ShopVendorInfo_C.GetExpand
// 0x0001 (0x0001 - 0x0000)
struct WBP_ShopVendorInfo_C_GetExpand final
{
public:
	bool                                          Param_Expanded;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ShopVendorInfo_C_GetExpand) == 0x000001, "Wrong alignment on WBP_ShopVendorInfo_C_GetExpand");
static_assert(sizeof(WBP_ShopVendorInfo_C_GetExpand) == 0x000001, "Wrong size on WBP_ShopVendorInfo_C_GetExpand");
static_assert(offsetof(WBP_ShopVendorInfo_C_GetExpand, Param_Expanded) == 0x000000, "Member 'WBP_ShopVendorInfo_C_GetExpand::Param_Expanded' has a wrong offset!");

// Function WBP_ShopVendorInfo.WBP_ShopVendorInfo_C.GetShow
// 0x0001 (0x0001 - 0x0000)
struct WBP_ShopVendorInfo_C_GetShow final
{
public:
	bool                                          Param_Showed;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ShopVendorInfo_C_GetShow) == 0x000001, "Wrong alignment on WBP_ShopVendorInfo_C_GetShow");
static_assert(sizeof(WBP_ShopVendorInfo_C_GetShow) == 0x000001, "Wrong size on WBP_ShopVendorInfo_C_GetShow");
static_assert(offsetof(WBP_ShopVendorInfo_C_GetShow, Param_Showed) == 0x000000, "Member 'WBP_ShopVendorInfo_C_GetShow::Param_Showed' has a wrong offset!");

// Function WBP_ShopVendorInfo.WBP_ShopVendorInfo_C.Init
// 0x0038 (0x0038 - 0x0000)
struct WBP_ShopVendorInfo_C_Init final
{
public:
	class UPaperSprite*                           Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Type;                                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Param_Name;                                        // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_ShopVendorInfo_C_Init) == 0x000008, "Wrong alignment on WBP_ShopVendorInfo_C_Init");
static_assert(sizeof(WBP_ShopVendorInfo_C_Init) == 0x000038, "Wrong size on WBP_ShopVendorInfo_C_Init");
static_assert(offsetof(WBP_ShopVendorInfo_C_Init, Icon) == 0x000000, "Member 'WBP_ShopVendorInfo_C_Init::Icon' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_Init, Type) == 0x000008, "Member 'WBP_ShopVendorInfo_C_Init::Type' has a wrong offset!");
static_assert(offsetof(WBP_ShopVendorInfo_C_Init, Param_Name) == 0x000020, "Member 'WBP_ShopVendorInfo_C_Init::Param_Name' has a wrong offset!");

// Function WBP_ShopVendorInfo.WBP_ShopVendorInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ShopVendorInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ShopVendorInfo_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ShopVendorInfo_C_PreConstruct");
static_assert(sizeof(WBP_ShopVendorInfo_C_PreConstruct) == 0x000001, "Wrong size on WBP_ShopVendorInfo_C_PreConstruct");
static_assert(offsetof(WBP_ShopVendorInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ShopVendorInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ShopVendorInfo.WBP_ShopVendorInfo_C.ShowContent
// 0x0001 (0x0001 - 0x0000)
struct WBP_ShopVendorInfo_C_ShowContent final
{
public:
	bool                                          Param_Show;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ShopVendorInfo_C_ShowContent) == 0x000001, "Wrong alignment on WBP_ShopVendorInfo_C_ShowContent");
static_assert(sizeof(WBP_ShopVendorInfo_C_ShowContent) == 0x000001, "Wrong size on WBP_ShopVendorInfo_C_ShowContent");
static_assert(offsetof(WBP_ShopVendorInfo_C_ShowContent, Param_Show) == 0x000000, "Member 'WBP_ShopVendorInfo_C_ShowContent::Param_Show' has a wrong offset!");

}

