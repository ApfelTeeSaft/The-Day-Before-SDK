#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryToItem

#include "Basic.hpp"

#include "WBP_InventoryToItem_classes.hpp"
#include "WBP_InventoryToItem_parameters.hpp"


namespace SDK
{

// Function WBP_InventoryToItem.WBP_InventoryToItem_C.Add Item
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ToSlot                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UObject>           Image                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FVector2D                        SlotVector                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESlotRarity                             Rarity                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// struct FFItemInfo                       Info                                                   (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotItemRef                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)
// class UJSIContainer_C*                  Container                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EInfoType                               InfoType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AddedToSlot                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FText UWBP_InventoryToItem_C::Add_Item(int32 ToSlot, TSoftObjectPtr<class UObject> Image, const struct FVector2D& SlotVector, ESlotRarity Rarity, const struct FFItemInfo& ItemInfo, struct FFItemInfo* Info, class UJSI_Slot_C** SlotItemRef, class UJSIContainer_C** Container, EInfoType* InfoType, int32* AddedToSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "Add Item");

	Params::WBP_InventoryToItem_C_Add_Item Parms{};

	Parms.ToSlot = ToSlot;
	Parms.Image = Image;
	Parms.SlotVector = std::move(SlotVector);
	Parms.Rarity = Rarity;
	Parms.ItemInfo = std::move(ItemInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Info != nullptr)
		*Info = std::move(Parms.Info);

	if (SlotItemRef != nullptr)
		*SlotItemRef = Parms.SlotItemRef;

	if (Container != nullptr)
		*Container = Parms.Container;

	if (InfoType != nullptr)
		*InfoType = Parms.InfoType;

	if (AddedToSlot != nullptr)
		*AddedToSlot = Parms.AddedToSlot;

	return Parms.ReturnValue;
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.BndEvt__WBP_InventoryToItem_JSIContainer_Shop_K2Node_ComponentBoundEvent_2_OnContainerUpdate__DelegateSignature
// (BlueprintEvent)

void UWBP_InventoryToItem_C::BndEvt__WBP_InventoryToItem_JSIContainer_Shop_K2Node_ComponentBoundEvent_2_OnContainerUpdate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "BndEvt__WBP_InventoryToItem_JSIContainer_Shop_K2Node_ComponentBoundEvent_2_OnContainerUpdate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Param_Count                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Ref_slot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature(int32 Param_Count, class UJSI_Slot_C* Ref_slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature");

	Params::WBP_InventoryToItem_C_BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature Parms{};

	Parms.Param_Count = Param_Count;
	Parms.Ref_slot = Ref_slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_6_OnPressedDecline__DelegateSignature
// (BlueprintEvent)

void UWBP_InventoryToItem_C::BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_6_OnPressedDecline__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_6_OnPressedDecline__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.BndEvt__WBP_InventoryToItem_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_1_OnParentNavigation__DelegateSignature
// (BlueprintEvent)

void UWBP_InventoryToItem_C::BndEvt__WBP_InventoryToItem_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_1_OnParentNavigation__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "BndEvt__WBP_InventoryToItem_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_1_OnParentNavigation__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ButtonSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_ShopCategory_C*                Param_ShopCategoryRef                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::ButtonSelected(class UW_ShopCategory_C* Param_ShopCategoryRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "ButtonSelected");

	Params::WBP_InventoryToItem_C_ButtonSelected Parms{};

	Parms.Param_ShopCategoryRef = Param_ShopCategoryRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.BuyRightMouseButtonDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::BuyRightMouseButtonDown(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "BuyRightMouseButtonDown");

	Params::WBP_InventoryToItem_C_BuyRightMouseButtonDown Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.CalculateSellPrice
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Price                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::CalculateSellPrice(const struct FFItemInfo& ItemInfo, int32* Price)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "CalculateSellPrice");

	Params::WBP_InventoryToItem_C_CalculateSellPrice Parms{};

	Parms.ItemInfo = std::move(ItemInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Price != nullptr)
		*Price = Parms.Price;
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ChangeSelectedSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      SlotWidgetRef                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::ChangeSelectedSlot(class UJSI_Slot_C* SlotWidgetRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "ChangeSelectedSlot");

	Params::WBP_InventoryToItem_C_ChangeSelectedSlot Parms{};

	Parms.SlotWidgetRef = SlotWidgetRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ChcekFreeSpace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::ChcekFreeSpace(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "ChcekFreeSpace");

	Params::WBP_InventoryToItem_C_ChcekFreeSpace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.Check Free Space to Add Item
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::Check_Free_Space_to_Add_Item(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "Check Free Space to Add Item");

	Params::WBP_InventoryToItem_C_Check_Free_Space_to_Add_Item Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ClearContainer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::ClearContainer(class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "ClearContainer");

	Params::WBP_InventoryToItem_C_ClearContainer Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ClearEntryListCategory
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::ClearEntryListCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "ClearEntryListCategory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.CloseDialogue 
// (BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::CloseDialogue_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "CloseDialogue ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_InventoryToItem_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.CreateBuybackContainer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::CreateBuybackContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "CreateBuybackContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.CustomNavigation_InfoRight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Param_Navigation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_InventoryToItem_C::CustomNavigation_InfoRight(EUINavigation Param_Navigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "CustomNavigation_InfoRight");

	Params::WBP_InventoryToItem_C_CustomNavigation_InfoRight Parms{};

	Parms.Param_Navigation = Param_Navigation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.EnableDismantleProgressBars
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::EnableDismantleProgressBars(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "EnableDismantleProgressBars");

	Params::WBP_InventoryToItem_C_EnableDismantleProgressBars Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.EntrySelected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::EntrySelected__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "EntrySelected__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ExecuteUbergraph_WBP_InventoryToItem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::ExecuteUbergraph_WBP_InventoryToItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "ExecuteUbergraph_WBP_InventoryToItem");

	Params::WBP_InventoryToItem_C_ExecuteUbergraph_WBP_InventoryToItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.FinalizeInit
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::FinalizeInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "FinalizeInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.GetListEntryCategory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UW_ShopCategory_C*>        Param_EntryList                                        (Parm, OutParm, ContainsInstancedReference)

void UWBP_InventoryToItem_C::GetListEntryCategory(TArray<class UW_ShopCategory_C*>* Param_EntryList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "GetListEntryCategory");

	Params::WBP_InventoryToItem_C_GetListEntryCategory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_EntryList != nullptr)
		*Param_EntryList = std::move(Parms.Param_EntryList);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.GetSelectedSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSI_Slot_C*                      SelectedSlot                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::GetSelectedSlot(class UJSI_Slot_C** SelectedSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "GetSelectedSlot");

	Params::WBP_InventoryToItem_C_GetSelectedSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedSlot != nullptr)
		*SelectedSlot = Parms.SelectedSlot;
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.HideAllCategory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::HideAllCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "HideAllCategory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.HideCategory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::HideCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "HideCategory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.HideOpacityAllCategory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::HideOpacityAllCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "HideOpacityAllCategory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.Init
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.InventoryUpdate
// (BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::InventoryUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "InventoryUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.InventoryUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::InventoryUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "InventoryUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnBuyBackProcessFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Slot_Ref                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Count                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::OnBuyBackProcessFinished__DelegateSignature(const struct FFItemInfo& FItem, class UJSI_Slot_C* Slot_Ref, int32 Param_Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "OnBuyBackProcessFinished__DelegateSignature");

	Params::WBP_InventoryToItem_C_OnBuyBackProcessFinished__DelegateSignature Parms{};

	Parms.FItem = std::move(FItem);
	Parms.Slot_Ref = Slot_Ref;
	Parms.Param_Count = Param_Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnBuyProcessFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Slot_Ref                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::OnBuyProcessFinished__DelegateSignature(const struct FFItemInfo& FItem, class UJSI_Slot_C* Slot_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "OnBuyProcessFinished__DelegateSignature");

	Params::WBP_InventoryToItem_C_OnBuyProcessFinished__DelegateSignature Parms{};

	Parms.FItem = std::move(FItem);
	Parms.Slot_Ref = Slot_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnCreateCountChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Count                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::OnCreateCountChanged__DelegateSignature(int32 Param_Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "OnCreateCountChanged__DelegateSignature");

	Params::WBP_InventoryToItem_C_OnCreateCountChanged__DelegateSignature Parms{};

	Parms.Param_Count = Param_Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnDownKeyConfirm
// (BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::OnDownKeyConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "OnDownKeyConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnKeyDownAccept
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Count                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Ref                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::OnKeyDownAccept(int32 Param_Count, class UJSI_Slot_C* Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "OnKeyDownAccept");

	Params::WBP_InventoryToItem_C_OnKeyDownAccept Parms{};

	Parms.Param_Count = Param_Count;
	Parms.Ref = Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnProcessStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::OnProcessStarted__DelegateSignature(const struct FFItemInfo& ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "OnProcessStarted__DelegateSignature");

	Params::WBP_InventoryToItem_C_OnProcessStarted__DelegateSignature Parms{};

	Parms.ItemInfo = std::move(ItemInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnSelectedSlotRMBDown__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      SlotWidgetRef                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Count                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::OnSelectedSlotRMBDown__DelegateSignature(class UJSI_Slot_C* SlotWidgetRef, int32 Param_Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "OnSelectedSlotRMBDown__DelegateSignature");

	Params::WBP_InventoryToItem_C_OnSelectedSlotRMBDown__DelegateSignature Parms{};

	Parms.SlotWidgetRef = SlotWidgetRef;
	Parms.Param_Count = Param_Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnSellProcessStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItem                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::OnSellProcessStarted__DelegateSignature(const struct FFItemInfo& FItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "OnSellProcessStarted__DelegateSignature");

	Params::WBP_InventoryToItem_C_OnSellProcessStarted__DelegateSignature Parms{};

	Parms.FItem = std::move(FItem);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OnUpdateContainerBuyback__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::OnUpdateContainerBuyback__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "OnUpdateContainerBuyback__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.OpenDialogue 
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Slot_Ref                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::OpenDialogue_(class UJSI_Slot_C* Slot_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "OpenDialogue ");

	Params::WBP_InventoryToItem_C_OpenDialogue_ Parms{};

	Parms.Slot_Ref = Slot_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "PreConstruct");

	Params::WBP_InventoryToItem_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ProcessFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Param_Count                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Ref                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::ProcessFinished__DelegateSignature(const struct FFItemInfo& ItemInfo, int32 Param_Count, class UJSI_Slot_C* Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "ProcessFinished__DelegateSignature");

	Params::WBP_InventoryToItem_C_ProcessFinished__DelegateSignature Parms{};

	Parms.ItemInfo = std::move(ItemInfo);
	Parms.Param_Count = Param_Count;
	Parms.Ref = Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.RebindSelectionDelegate
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::RebindSelectionDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "RebindSelectionDelegate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.SelectedSlotBuy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Slot_Ref                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::SelectedSlotBuy(class UJSI_Slot_C* Slot_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "SelectedSlotBuy");

	Params::WBP_InventoryToItem_C_SelectedSlotBuy Parms{};

	Parms.Slot_Ref = Slot_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.SelectedSlotBuyBack
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Slot_Ref                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::SelectedSlotBuyBack(class UJSI_Slot_C* Slot_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "SelectedSlotBuyBack");

	Params::WBP_InventoryToItem_C_SelectedSlotBuyBack Parms{};

	Parms.Slot_Ref = Slot_Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.SelectedSlotSell
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::SelectedSlotSell(class UJSI_Slot_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "SelectedSlotSell");

	Params::WBP_InventoryToItem_C_SelectedSlotSell Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.SellRMBClick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::SellRMBClick(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "SellRMBClick");

	Params::WBP_InventoryToItem_C_SellRMBClick Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.SetCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       ItemInfo                                               (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_InventoryToItem_C::SetCount(class UJSI_Slot_C* Target, struct FFItemInfo* ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "SetCount");

	Params::WBP_InventoryToItem_C_SetCount Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (ItemInfo != nullptr)
		*ItemInfo = std::move(Parms.ItemInfo);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ShowAllCategory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::ShowAllCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "ShowAllCategory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.UnbindInventoryUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::UnbindInventoryUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "UnbindInventoryUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.UpdateItemInfo
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::UpdateItemInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "UpdateItemInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryToItem.WBP_InventoryToItem_C.ValidateItemInfoCount
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryToItem_C::ValidateItemInfoCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryToItem_C", "ValidateItemInfoCount");

	UObject::ProcessEvent(Func, nullptr);
}

}

