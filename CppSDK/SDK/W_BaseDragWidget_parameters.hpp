#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BaseDragWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_ItemColorTypes_structs.hpp"


namespace SDK::Params
{

// Function W_BaseDragWidget.W_BaseDragWidget_C.ExecuteUbergraph_W_BaseDragWidget
// 0x0170 (0x0170 - 0x0000)
struct W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemColorTypes                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BaseDragOperation_C*                K2Node_DynamicCast_AsBP_Base_Drag_Operation;       // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00EC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetMoveOffset_ReturnValue;                // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPivotIndex_Index;                      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BaseDragOperation_C*                K2Node_DynamicCast_AsBP_Base_Drag_Operation_1;     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget) == 0x000008, "Wrong alignment on W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget");
static_assert(sizeof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget) == 0x000170, "Wrong size on W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, EntryPoint) == 0x000000, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_byte_Variable) == 0x000004, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_struct_Variable) == 0x000008, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_struct_Variable_1) == 0x000018, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_struct_Variable_2) == 0x000028, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_struct_Variable_3) == 0x000038, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_struct_Variable_4) == 0x000048, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_struct_Variable_5) == 0x000058, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_struct_Variable_6) == 0x000068, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_struct_Variable_7) == 0x000078, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_struct_Variable_8) == 0x000088, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, Temp_struct_Variable_9) == 0x000098, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_GetPlayerController_ReturnValue) == 0x0000A8, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_IsInputKeyDown_ReturnValue) == 0x0000B0, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, K2Node_Select_Default) == 0x0000B4, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000C4, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_Not_PreBool_ReturnValue) == 0x0000C5, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_SelectFloat_ReturnValue) == 0x0000C8, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D0, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_SelectFloat_ReturnValue_1) == 0x0000D8, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, K2Node_DynamicCast_AsBP_Base_Drag_Operation) == 0x0000E0, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::K2Node_DynamicCast_AsBP_Base_Drag_Operation' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, K2Node_Event_MyGeometry) == 0x0000EC, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, K2Node_Event_InDeltaTime) == 0x000124, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000128, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_GetMoveOffset_ReturnValue) == 0x000130, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_GetMoveOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_BreakVector2D_X) == 0x000140, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_BreakVector2D_Y) == 0x000148, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000150, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, K2Node_Event_IsDesignTime) == 0x000151, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_GetPivotIndex_Index) == 0x000154, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_GetPivotIndex_Index' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, K2Node_DynamicCast_AsBP_Base_Drag_Operation_1) == 0x000158, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::K2Node_DynamicCast_AsBP_Base_Drag_Operation_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, K2Node_DynamicCast_bSuccess_1) == 0x000160, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000164, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1) == 0x000168, "Member 'W_BaseDragWidget_C_ExecuteUbergraph_W_BaseDragWidget::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1' has a wrong offset!");

// Function W_BaseDragWidget.W_BaseDragWidget_C.GetPivotIndex
// 0x01F8 (0x01F8 - 0x0000)
struct W_BaseDragWidget_C_GetPivotIndex final
{
public:
	struct FVector2D                              Param_MoveOffset;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInColumn;                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInRow;                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Y_Location;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X_Location;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BaseDragOperation_C*                K2Node_DynamicCast_AsBP_Base_Drag_Operation;       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BaseDragOperation_C*                K2Node_DynamicCast_AsBP_Base_Drag_Operation_1;     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_5;     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue_1;           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3;   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseDragWidget_C_GetPivotIndex) == 0x000008, "Wrong alignment on W_BaseDragWidget_C_GetPivotIndex");
static_assert(sizeof(W_BaseDragWidget_C_GetPivotIndex) == 0x0001F8, "Wrong size on W_BaseDragWidget_C_GetPivotIndex");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, Param_MoveOffset) == 0x000000, "Member 'W_BaseDragWidget_C_GetPivotIndex::Param_MoveOffset' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, Param_Index) == 0x000010, "Member 'W_BaseDragWidget_C_GetPivotIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, NumberOfCellsInColumn) == 0x000014, "Member 'W_BaseDragWidget_C_GetPivotIndex::NumberOfCellsInColumn' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, NumberOfCellsInRow) == 0x000018, "Member 'W_BaseDragWidget_C_GetPivotIndex::NumberOfCellsInRow' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, Y_Location) == 0x000020, "Member 'W_BaseDragWidget_C_GetPivotIndex::Y_Location' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, X_Location) == 0x000028, "Member 'W_BaseDragWidget_C_GetPivotIndex::X_Location' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_X) == 0x000030, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_X_2) == 0x000050, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_Y_2) == 0x000058, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, K2Node_DynamicCast_AsBP_Base_Drag_Operation) == 0x000080, "Member 'W_BaseDragWidget_C_GetPivotIndex::K2Node_DynamicCast_AsBP_Base_Drag_Operation' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'W_BaseDragWidget_C_GetPivotIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, K2Node_DynamicCast_AsBP_Base_Drag_Operation_1) == 0x000090, "Member 'W_BaseDragWidget_C_GetPivotIndex::K2Node_DynamicCast_AsBP_Base_Drag_Operation_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'W_BaseDragWidget_C_GetPivotIndex::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000099, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00009A, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_X_3) == 0x0000A0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_Y_3) == 0x0000A8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_FTrunc_ReturnValue) == 0x0000B0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_FTrunc_ReturnValue_1) == 0x0000B4, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000B8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0000C9, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000D0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000D8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0000E0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x0000E8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x0000E9, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000F0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x0000F8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000100, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_SelectInt_ReturnValue) == 0x000108, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000110, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_LessEqual_DoubleDouble_ReturnValue_5) == 0x000118, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_LessEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_SelectInt_ReturnValue_1) == 0x00011C, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000120, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, K2Node_MakeStruct_Margin) == 0x000124, "Member 'W_BaseDragWidget_C_GetPivotIndex::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000134, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BooleanAND_ReturnValue) == 0x000135, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000138, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000140, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000148, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000150, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000158, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000160, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000168, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000170, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_MakeVector2D_ReturnValue) == 0x000178, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000188, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_X_4) == 0x000190, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BreakVector2D_Y_4) == 0x000198, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_SelectFloat_ReturnValue) == 0x0001A0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0001A8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_NormalizeToRange_ReturnValue) == 0x0001B0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x0001B8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_SelectFloat_ReturnValue_1) == 0x0001C0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_NormalizeToRange_ReturnValue_1) == 0x0001C8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0001D0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x0001D1, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x0001D2, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BooleanAND_ReturnValue_2) == 0x0001D3, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x0001D4, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_BooleanAND_ReturnValue_3) == 0x0001D5, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0001D8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0001E0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x0001E8, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetPivotIndex, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3) == 0x0001F0, "Member 'W_BaseDragWidget_C_GetPivotIndex::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");

// Function W_BaseDragWidget.W_BaseDragWidget_C.GetRotationOffset
// 0x0210 (0x0210 - 0x0000)
struct W_BaseDragWidget_C_GetRotationOffset final
{
public:
	struct FVector2D                              Param_MoveOffset;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RotationOffset;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInRow;                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInColumn;                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Y_Location;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X_Location;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_5;     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue_1;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EE[0x2];                                      // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3;   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseDragWidget_C_GetRotationOffset) == 0x000008, "Wrong alignment on W_BaseDragWidget_C_GetRotationOffset");
static_assert(sizeof(W_BaseDragWidget_C_GetRotationOffset) == 0x000210, "Wrong size on W_BaseDragWidget_C_GetRotationOffset");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, Param_MoveOffset) == 0x000000, "Member 'W_BaseDragWidget_C_GetRotationOffset::Param_MoveOffset' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, RotationOffset) == 0x000010, "Member 'W_BaseDragWidget_C_GetRotationOffset::RotationOffset' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, NumberOfCellsInRow) == 0x000020, "Member 'W_BaseDragWidget_C_GetRotationOffset::NumberOfCellsInRow' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, NumberOfCellsInColumn) == 0x000024, "Member 'W_BaseDragWidget_C_GetRotationOffset::NumberOfCellsInColumn' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, Y_Location) == 0x000028, "Member 'W_BaseDragWidget_C_GetRotationOffset::Y_Location' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, X_Location) == 0x000030, "Member 'W_BaseDragWidget_C_GetRotationOffset::X_Location' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_X) == 0x000038, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_X_1) == 0x000048, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_Y_1) == 0x000050, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_X_2) == 0x000058, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_Y_2) == 0x000060, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000088, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_X_3) == 0x000090, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_Y_3) == 0x000098, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_FTrunc_ReturnValue) == 0x0000A0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_FTrunc_ReturnValue_1) == 0x0000A4, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000A8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0000B9, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0000C0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000C8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000D0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x0000D9, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_SelectFloat_ReturnValue) == 0x0000E0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x0000E8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_MakeVector2D_ReturnValue) == 0x0000F0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000100, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000108, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000110, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_LessEqual_DoubleDouble_ReturnValue_5) == 0x000118, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_LessEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000119, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_SelectFloat_ReturnValue_1) == 0x000120, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BooleanAND_ReturnValue) == 0x000128, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_MakeVector2D_ReturnValue_1) == 0x000130, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, K2Node_MakeStruct_Margin) == 0x000140, "Member 'W_BaseDragWidget_C_GetRotationOffset::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000150, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000158, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000160, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000168, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000170, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000178, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000180, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000188, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000190, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_MakeVector2D_ReturnValue_2) == 0x000198, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0001A8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_X_4) == 0x0001B0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BreakVector2D_Y_4) == 0x0001B8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BooleanAND_ReturnValue_1) == 0x0001C0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_SelectFloat_ReturnValue_2) == 0x0001C8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_NormalizeToRange_ReturnValue) == 0x0001D0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_SelectFloat_ReturnValue_3) == 0x0001D8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_NormalizeToRange_ReturnValue_1) == 0x0001E0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0001E8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0001E9, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0001EA, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BooleanAND_ReturnValue_2) == 0x0001EB, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x0001EC, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_BooleanAND_ReturnValue_3) == 0x0001ED, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0001F0, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0001F8, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x000200, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetRotationOffset, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3) == 0x000208, "Member 'W_BaseDragWidget_C_GetRotationOffset::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");

// Function W_BaseDragWidget.W_BaseDragWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_BaseDragWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseDragWidget_C_PreConstruct) == 0x000001, "Wrong alignment on W_BaseDragWidget_C_PreConstruct");
static_assert(sizeof(W_BaseDragWidget_C_PreConstruct) == 0x000001, "Wrong size on W_BaseDragWidget_C_PreConstruct");
static_assert(offsetof(W_BaseDragWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_BaseDragWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_BaseDragWidget.W_BaseDragWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_BaseDragWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseDragWidget_C_Tick) == 0x000004, "Wrong alignment on W_BaseDragWidget_C_Tick");
static_assert(sizeof(W_BaseDragWidget_C_Tick) == 0x00003C, "Wrong size on W_BaseDragWidget_C_Tick");
static_assert(offsetof(W_BaseDragWidget_C_Tick, MyGeometry) == 0x000000, "Member 'W_BaseDragWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'W_BaseDragWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_BaseDragWidget.W_BaseDragWidget_C.GetMoveOffset
// 0x00F0 (0x00F0 - 0x0000)
struct W_BaseDragWidget_C_GetMoveOffset final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseDragWidget_C_GetMoveOffset) == 0x000008, "Wrong alignment on W_BaseDragWidget_C_GetMoveOffset");
static_assert(sizeof(W_BaseDragWidget_C_GetMoveOffset) == 0x0000F0, "Wrong size on W_BaseDragWidget_C_GetMoveOffset");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, ReturnValue) == 0x000000, "Member 'W_BaseDragWidget_C_GetMoveOffset::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_GetViewportScale_ReturnValue) == 0x000048, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_LocalToViewport_PixelPosition) == 0x000050, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_LocalToViewport_ViewportPosition) == 0x000060, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000070, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000088, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000098, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B0, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000C8, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000D8, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetMoveOffset, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0000E8, "Member 'W_BaseDragWidget_C_GetMoveOffset::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function W_BaseDragWidget.W_BaseDragWidget_C.GetSlotBrushes
// 0x03D0 (0x03D0 - 0x0000)
struct W_BaseDragWidget_C_GetSlotBrushes final
{
public:
	struct FSlateBrush                            BG_Brush;                                          // 0x0000(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Gradient_Brush;                                    // 0x00D0(0x00D0)(Parm, OutParm)
	struct FVector2D                              CurrentSlotSize;                                   // 0x01A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Hover_Sprite;                                      // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Highlight_Sprite;                                  // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Gradient_Sprite;                                   // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                BG_Sprite;                                         // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x01D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x01D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8[0x8];                                      // 0x01D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x01E0(0x00D0)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x02B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x02B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x02BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2[0xE];                                      // 0x02C2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x02D0(0x00D0)()
	double                                        CallFunc_BreakVector2D_X;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x03B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast_1;        // 0x03C0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseDragWidget_C_GetSlotBrushes) == 0x000010, "Wrong alignment on W_BaseDragWidget_C_GetSlotBrushes");
static_assert(sizeof(W_BaseDragWidget_C_GetSlotBrushes) == 0x0003D0, "Wrong size on W_BaseDragWidget_C_GetSlotBrushes");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, BG_Brush) == 0x000000, "Member 'W_BaseDragWidget_C_GetSlotBrushes::BG_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, Gradient_Brush) == 0x0000D0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::Gradient_Brush' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CurrentSlotSize) == 0x0001A0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CurrentSlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, Hover_Sprite) == 0x0001B0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::Hover_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, Highlight_Sprite) == 0x0001B8, "Member 'W_BaseDragWidget_C_GetSlotBrushes::Highlight_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, Gradient_Sprite) == 0x0001C0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::Gradient_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, BG_Sprite) == 0x0001C8, "Member 'W_BaseDragWidget_C_GetSlotBrushes::BG_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, Y) == 0x0001D0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::Y' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, X) == 0x0001D4, "Member 'W_BaseDragWidget_C_GetSlotBrushes::X' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush) == 0x0001E0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002B0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0002B1, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue) == 0x0002B2, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0002B3, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0002B4, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_1) == 0x0002B5, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0002B6, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0002B7, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_2) == 0x0002B8, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0002B9, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x0002BA, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_3) == 0x0002BB, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x0002BC, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x0002BD, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_4) == 0x0002BE, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x0002BF, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x0002C0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_5) == 0x0002C1, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush_1) == 0x0002D0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_BreakVector2D_X) == 0x0003A0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_BreakVector2D_Y) == 0x0003A8, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_Round_ReturnValue) == 0x0003B0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, CallFunc_Round_ReturnValue_1) == 0x0003B4, "Member 'W_BaseDragWidget_C_GetSlotBrushes::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0003B8, "Member 'W_BaseDragWidget_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_BaseDragWidget_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast_1) == 0x0003C0, "Member 'W_BaseDragWidget_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast_1' has a wrong offset!");

}

