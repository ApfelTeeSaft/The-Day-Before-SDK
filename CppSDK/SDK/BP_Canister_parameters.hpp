#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Canister

#include "Basic.hpp"

#include "E_ActorType_structs.hpp"
#include "E_InteractType_structs.hpp"


namespace SDK::Params
{

// Function BP_Canister.BP_Canister_C.DecreaseVolume
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_DecreaseVolume final
{
public:
	double                                        Param_Value;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_DecreaseVolume) == 0x000008, "Wrong alignment on BP_Canister_C_DecreaseVolume");
static_assert(sizeof(BP_Canister_C_DecreaseVolume) == 0x000008, "Wrong size on BP_Canister_C_DecreaseVolume");
static_assert(offsetof(BP_Canister_C_DecreaseVolume, Param_Value) == 0x000000, "Member 'BP_Canister_C_DecreaseVolume::Param_Value' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.ExecuteUbergraph_BP_Canister
// 0x0198 (0x0198 - 0x0000)
struct BP_Canister_C_ExecuteUbergraph_BP_Canister final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_4;                             // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_2;                             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Value;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface;        // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_1;                             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Weaponry_C>       K2Node_DynamicCast_AsBPI_Weaponry;                 // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface_1;      // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_WP_GetSkeletalMesh_SkinnedMesh;           // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WP_GetSkeletalMesh_Success;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_PlayerPickuped;                 // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_PlayerDropped;                  // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_PlayerFilled;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_1;          // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_2;          // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_ExecuteUbergraph_BP_Canister) == 0x000008, "Wrong alignment on BP_Canister_C_ExecuteUbergraph_BP_Canister");
static_assert(sizeof(BP_Canister_C_ExecuteUbergraph_BP_Canister) == 0x000198, "Wrong size on BP_Canister_C_ExecuteUbergraph_BP_Canister");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, EntryPoint) == 0x000000, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000004, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CustomEvent_NotifyName_4) == 0x000008, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CustomEvent_NotifyName_3) == 0x000010, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CustomEvent_NotifyName_2) == 0x000028, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CustomEvent_NotifyName_1) == 0x000040, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CustomEvent_NotifyName) == 0x000058, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CreateDelegate_OutputDelegate_3) == 0x000060, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, Temp_name_Variable) == 0x000070, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Player_8) == 0x000078, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Player_7) == 0x000080, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Player_6) == 0x000088, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_SitIndex) == 0x000090, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_SkipAnimation) == 0x000094, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Player_5) == 0x000098, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Player_4) == 0x0000A0, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Player_3) == 0x0000A8, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Player_2) == 0x0000B0, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Visible_1) == 0x0000B8, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Visible) == 0x0000B9, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CustomEvent_Value) == 0x0000C0, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_GetPlayerController_ReturnValue) == 0x0000C8, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_K2_GetPawn_ReturnValue) == 0x0000D8, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_DynamicCast_AsBPI_General_Interface) == 0x0000E0, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_DynamicCast_AsBPI_General_Interface' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Player_1) == 0x0000F8, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_DynamicCast_AsBPI_Weaponry) == 0x000100, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_DynamicCast_AsBPI_Weaponry' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_DynamicCast_AsBPI_General_Interface_1) == 0x000118, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_DynamicCast_AsBPI_General_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_WP_GetSkeletalMesh_SkinnedMesh) == 0x000130, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_WP_GetSkeletalMesh_SkinnedMesh' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_WP_GetSkeletalMesh_Success) == 0x000138, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_WP_GetSkeletalMesh_Success' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000140, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CustomEvent_PlayerPickuped) == 0x000150, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CustomEvent_PlayerPickuped' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CustomEvent_PlayerDropped) == 0x000158, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CustomEvent_PlayerDropped' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_PlayEventAttached_ReturnValue) == 0x000160, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CustomEvent_PlayerFilled) == 0x000168, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CustomEvent_PlayerFilled' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_PlayEventAttached_ReturnValue_1) == 0x000170, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_PlayEventAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_Event_Player) == 0x000178, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, CallFunc_PlayEventAttached_ReturnValue_2) == 0x000180, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::CallFunc_PlayEventAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_ExecuteUbergraph_BP_Canister, K2Node_CreateDelegate_OutputDelegate_4) == 0x000188, "Member 'BP_Canister_C_ExecuteUbergraph_BP_Canister::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct BP_Canister_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_GetActorType) == 0x000001, "Wrong alignment on BP_Canister_C_GetActorType");
static_assert(sizeof(BP_Canister_C_GetActorType) == 0x000001, "Wrong size on BP_Canister_C_GetActorType");
static_assert(offsetof(BP_Canister_C_GetActorType, ActorType) == 0x000000, "Member 'BP_Canister_C_GetActorType::ActorType' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct BP_Canister_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_IsLocked_) == 0x000001, "Wrong alignment on BP_Canister_C_IsLocked_");
static_assert(sizeof(BP_Canister_C_IsLocked_) == 0x000001, "Wrong size on BP_Canister_C_IsLocked_");
static_assert(offsetof(BP_Canister_C_IsLocked_, Result) == 0x000000, "Member 'BP_Canister_C_IsLocked_::Result' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_Canister_C_OnBeginInteract");
static_assert(sizeof(BP_Canister_C_OnBeginInteract) == 0x000008, "Wrong size on BP_Canister_C_OnBeginInteract");
static_assert(offsetof(BP_Canister_C_OnBeginInteract, Player) == 0x000000, "Member 'BP_Canister_C_OnBeginInteract::Player' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnBlendOut_82FCB9444313B26CCE730FBA18D331AE
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnBlendOut_82FCB9444313B26CCE730FBA18D331AE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnBlendOut_82FCB9444313B26CCE730FBA18D331AE) == 0x000004, "Wrong alignment on BP_Canister_C_OnBlendOut_82FCB9444313B26CCE730FBA18D331AE");
static_assert(sizeof(BP_Canister_C_OnBlendOut_82FCB9444313B26CCE730FBA18D331AE) == 0x000008, "Wrong size on BP_Canister_C_OnBlendOut_82FCB9444313B26CCE730FBA18D331AE");
static_assert(offsetof(BP_Canister_C_OnBlendOut_82FCB9444313B26CCE730FBA18D331AE, NotifyName) == 0x000000, "Member 'BP_Canister_C_OnBlendOut_82FCB9444313B26CCE730FBA18D331AE::NotifyName' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnCompleted_82FCB9444313B26CCE730FBA18D331AE
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnCompleted_82FCB9444313B26CCE730FBA18D331AE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnCompleted_82FCB9444313B26CCE730FBA18D331AE) == 0x000004, "Wrong alignment on BP_Canister_C_OnCompleted_82FCB9444313B26CCE730FBA18D331AE");
static_assert(sizeof(BP_Canister_C_OnCompleted_82FCB9444313B26CCE730FBA18D331AE) == 0x000008, "Wrong size on BP_Canister_C_OnCompleted_82FCB9444313B26CCE730FBA18D331AE");
static_assert(offsetof(BP_Canister_C_OnCompleted_82FCB9444313B26CCE730FBA18D331AE, NotifyName) == 0x000000, "Member 'BP_Canister_C_OnCompleted_82FCB9444313B26CCE730FBA18D331AE::NotifyName' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnDropped
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnDropped final
{
public:
	class ASurvivalPlayer_C*                      PlayerDropped;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnDropped) == 0x000008, "Wrong alignment on BP_Canister_C_OnDropped");
static_assert(sizeof(BP_Canister_C_OnDropped) == 0x000008, "Wrong size on BP_Canister_C_OnDropped");
static_assert(offsetof(BP_Canister_C_OnDropped, PlayerDropped) == 0x000000, "Member 'BP_Canister_C_OnDropped::PlayerDropped' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnFocus
// 0x0090 (0x0090 - 0x0000)
struct BP_Canister_C_OnFocus final
{
public:
	bool                                          OnFocusSuccess;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0030(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
};
static_assert(alignof(BP_Canister_C_OnFocus) == 0x000008, "Wrong alignment on BP_Canister_C_OnFocus");
static_assert(sizeof(BP_Canister_C_OnFocus) == 0x000090, "Wrong size on BP_Canister_C_OnFocus");
static_assert(offsetof(BP_Canister_C_OnFocus, OnFocusSuccess) == 0x000000, "Member 'BP_Canister_C_OnFocus::OnFocusSuccess' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, InteractType) == 0x000001, "Member 'BP_Canister_C_OnFocus::InteractType' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, LateTime) == 0x000008, "Member 'BP_Canister_C_OnFocus::LateTime' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_Canister_C_OnFocus::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_Canister_C_OnFocus::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, K2Node_DynamicCast_AsSurvival_Player) == 0x000020, "Member 'BP_Canister_C_OnFocus::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Canister_C_OnFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000030, "Member 'BP_Canister_C_OnFocus::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'BP_Canister_C_OnFocus::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_Canister_C_OnFocus::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_Canister_C_OnFocus::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocus, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'BP_Canister_C_OnFocus::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnFocused
// 0x0040 (0x0040 - 0x0000)
struct BP_Canister_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnFocused) == 0x000008, "Wrong alignment on BP_Canister_C_OnFocused");
static_assert(sizeof(BP_Canister_C_OnFocused) == 0x000040, "Wrong size on BP_Canister_C_OnFocused");
static_assert(offsetof(BP_Canister_C_OnFocused, Player) == 0x000000, "Member 'BP_Canister_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocused, HighlightActor) == 0x000008, "Member 'BP_Canister_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'BP_Canister_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocused, InteractType) == 0x000018, "Member 'BP_Canister_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocused, LateTime) == 0x000020, "Member 'BP_Canister_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocused, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'BP_Canister_C_OnFocused::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocused, K2Node_DynamicCast_AsSurvival_Player) == 0x000030, "Member 'BP_Canister_C_OnFocused::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Canister_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnInteract) == 0x000008, "Wrong alignment on BP_Canister_C_OnInteract");
static_assert(sizeof(BP_Canister_C_OnInteract) == 0x000008, "Wrong size on BP_Canister_C_OnInteract");
static_assert(offsetof(BP_Canister_C_OnInteract, Player) == 0x000000, "Member 'BP_Canister_C_OnInteract::Player' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnInteract2) == 0x000008, "Wrong alignment on BP_Canister_C_OnInteract2");
static_assert(sizeof(BP_Canister_C_OnInteract2) == 0x000008, "Wrong size on BP_Canister_C_OnInteract2");
static_assert(offsetof(BP_Canister_C_OnInteract2, Player) == 0x000000, "Member 'BP_Canister_C_OnInteract2::Player' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnInteract3) == 0x000008, "Wrong alignment on BP_Canister_C_OnInteract3");
static_assert(sizeof(BP_Canister_C_OnInteract3) == 0x000008, "Wrong size on BP_Canister_C_OnInteract3");
static_assert(offsetof(BP_Canister_C_OnInteract3, Player) == 0x000000, "Member 'BP_Canister_C_OnInteract3::Player' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct BP_Canister_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnInteractVehicle) == 0x000008, "Wrong alignment on BP_Canister_C_OnInteractVehicle");
static_assert(sizeof(BP_Canister_C_OnInteractVehicle) == 0x000010, "Wrong size on BP_Canister_C_OnInteractVehicle");
static_assert(offsetof(BP_Canister_C_OnInteractVehicle, Player) == 0x000000, "Member 'BP_Canister_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'BP_Canister_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(BP_Canister_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'BP_Canister_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnInterrupted_82FCB9444313B26CCE730FBA18D331AE
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnInterrupted_82FCB9444313B26CCE730FBA18D331AE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnInterrupted_82FCB9444313B26CCE730FBA18D331AE) == 0x000004, "Wrong alignment on BP_Canister_C_OnInterrupted_82FCB9444313B26CCE730FBA18D331AE");
static_assert(sizeof(BP_Canister_C_OnInterrupted_82FCB9444313B26CCE730FBA18D331AE) == 0x000008, "Wrong size on BP_Canister_C_OnInterrupted_82FCB9444313B26CCE730FBA18D331AE");
static_assert(offsetof(BP_Canister_C_OnInterrupted_82FCB9444313B26CCE730FBA18D331AE, NotifyName) == 0x000000, "Member 'BP_Canister_C_OnInterrupted_82FCB9444313B26CCE730FBA18D331AE::NotifyName' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnLocalInteract) == 0x000008, "Wrong alignment on BP_Canister_C_OnLocalInteract");
static_assert(sizeof(BP_Canister_C_OnLocalInteract) == 0x000008, "Wrong size on BP_Canister_C_OnLocalInteract");
static_assert(offsetof(BP_Canister_C_OnLocalInteract, Player) == 0x000000, "Member 'BP_Canister_C_OnLocalInteract::Player' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnLostFocus) == 0x000008, "Wrong alignment on BP_Canister_C_OnLostFocus");
static_assert(sizeof(BP_Canister_C_OnLostFocus) == 0x000008, "Wrong size on BP_Canister_C_OnLostFocus");
static_assert(offsetof(BP_Canister_C_OnLostFocus, Player) == 0x000000, "Member 'BP_Canister_C_OnLostFocus::Player' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnNotifyBegin_82FCB9444313B26CCE730FBA18D331AE
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnNotifyBegin_82FCB9444313B26CCE730FBA18D331AE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnNotifyBegin_82FCB9444313B26CCE730FBA18D331AE) == 0x000004, "Wrong alignment on BP_Canister_C_OnNotifyBegin_82FCB9444313B26CCE730FBA18D331AE");
static_assert(sizeof(BP_Canister_C_OnNotifyBegin_82FCB9444313B26CCE730FBA18D331AE) == 0x000008, "Wrong size on BP_Canister_C_OnNotifyBegin_82FCB9444313B26CCE730FBA18D331AE");
static_assert(offsetof(BP_Canister_C_OnNotifyBegin_82FCB9444313B26CCE730FBA18D331AE, NotifyName) == 0x000000, "Member 'BP_Canister_C_OnNotifyBegin_82FCB9444313B26CCE730FBA18D331AE::NotifyName' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnNotifyEnd_82FCB9444313B26CCE730FBA18D331AE
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnNotifyEnd_82FCB9444313B26CCE730FBA18D331AE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnNotifyEnd_82FCB9444313B26CCE730FBA18D331AE) == 0x000004, "Wrong alignment on BP_Canister_C_OnNotifyEnd_82FCB9444313B26CCE730FBA18D331AE");
static_assert(sizeof(BP_Canister_C_OnNotifyEnd_82FCB9444313B26CCE730FBA18D331AE) == 0x000008, "Wrong size on BP_Canister_C_OnNotifyEnd_82FCB9444313B26CCE730FBA18D331AE");
static_assert(offsetof(BP_Canister_C_OnNotifyEnd_82FCB9444313B26CCE730FBA18D331AE, NotifyName) == 0x000000, "Member 'BP_Canister_C_OnNotifyEnd_82FCB9444313B26CCE730FBA18D331AE::NotifyName' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnOilRefill
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnOilRefill final
{
public:
	class ASurvivalPlayer_C*                      PlayerFilled;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnOilRefill) == 0x000008, "Wrong alignment on BP_Canister_C_OnOilRefill");
static_assert(sizeof(BP_Canister_C_OnOilRefill) == 0x000008, "Wrong size on BP_Canister_C_OnOilRefill");
static_assert(offsetof(BP_Canister_C_OnOilRefill, PlayerFilled) == 0x000000, "Member 'BP_Canister_C_OnOilRefill::PlayerFilled' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnPickup
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnPickup final
{
public:
	class ASurvivalPlayer_C*                      PlayerPickuped;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnPickup) == 0x000008, "Wrong alignment on BP_Canister_C_OnPickup");
static_assert(sizeof(BP_Canister_C_OnPickup) == 0x000008, "Wrong size on BP_Canister_C_OnPickup");
static_assert(offsetof(BP_Canister_C_OnPickup, PlayerPickuped) == 0x000000, "Member 'BP_Canister_C_OnPickup::PlayerPickuped' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnSeen) == 0x000008, "Wrong alignment on BP_Canister_C_OnSeen");
static_assert(sizeof(BP_Canister_C_OnSeen) == 0x000008, "Wrong size on BP_Canister_C_OnSeen");
static_assert(offsetof(BP_Canister_C_OnSeen, Player) == 0x000000, "Member 'BP_Canister_C_OnSeen::Player' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Canister_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_OnStopInteract) == 0x000008, "Wrong alignment on BP_Canister_C_OnStopInteract");
static_assert(sizeof(BP_Canister_C_OnStopInteract) == 0x000008, "Wrong size on BP_Canister_C_OnStopInteract");
static_assert(offsetof(BP_Canister_C_OnStopInteract, Player) == 0x000000, "Member 'BP_Canister_C_OnStopInteract::Player' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_Canister_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_Canister_C_Set3DWidgetVisibility");
static_assert(sizeof(BP_Canister_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on BP_Canister_C_Set3DWidgetVisibility");
static_assert(offsetof(BP_Canister_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_Canister_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function BP_Canister.BP_Canister_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_Canister_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Canister_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_Canister_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(BP_Canister_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on BP_Canister_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(BP_Canister_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_Canister_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

}

