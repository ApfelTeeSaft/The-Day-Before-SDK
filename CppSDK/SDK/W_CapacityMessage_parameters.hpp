#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CapacityMessage

#include "Basic.hpp"

#include "FItemInfo_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_CapacityMessage.W_CapacityMessage_C.ExecuteUbergraph_W_CapacityMessage
// 0x0268 (0x0268 - 0x0000)
struct W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_CustomEvent_ItemInfo;                       // 0x0008(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0228(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0250(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0260(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage) == 0x000008, "Wrong alignment on W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage");
static_assert(sizeof(W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage) == 0x000268, "Wrong size on W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage");
static_assert(offsetof(W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage, EntryPoint) == 0x000000, "Member 'W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage, K2Node_CustomEvent_ItemInfo) == 0x000008, "Member 'W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage::K2Node_CustomEvent_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage, CallFunc_Conv_NameToText_ReturnValue) == 0x000228, "Member 'W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage, CallFunc_PlayAnimationForward_ReturnValue) == 0x000240, "Member 'W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000248, "Member 'W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage, K2Node_CreateDelegate_OutputDelegate) == 0x000250, "Member 'W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000260, "Member 'W_CapacityMessage_C_ExecuteUbergraph_W_CapacityMessage::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function W_CapacityMessage.W_CapacityMessage_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_CapacityMessage_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CapacityMessage_C_PreConstruct) == 0x000001, "Wrong alignment on W_CapacityMessage_C_PreConstruct");
static_assert(sizeof(W_CapacityMessage_C_PreConstruct) == 0x000001, "Wrong size on W_CapacityMessage_C_PreConstruct");
static_assert(offsetof(W_CapacityMessage_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_CapacityMessage_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_CapacityMessage.W_CapacityMessage_C.Show
// 0x0220 (0x0220 - 0x0000)
struct W_CapacityMessage_C_Show final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(W_CapacityMessage_C_Show) == 0x000008, "Wrong alignment on W_CapacityMessage_C_Show");
static_assert(sizeof(W_CapacityMessage_C_Show) == 0x000220, "Wrong size on W_CapacityMessage_C_Show");
static_assert(offsetof(W_CapacityMessage_C_Show, ItemInfo) == 0x000000, "Member 'W_CapacityMessage_C_Show::ItemInfo' has a wrong offset!");

}

