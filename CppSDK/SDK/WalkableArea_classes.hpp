#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WalkableArea

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WalkableArea.WalkableArea_C
// 0x0020 (0x02B0 - 0x0290)
class AWalkableArea_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          CanExit;                                           // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_WalkableArea(int32 EntryPoint);
	void RemoveOneIndex(const class FName Item, class AActor* Target);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WalkableArea_C">();
	}
	static class AWalkableArea_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWalkableArea_C>();
	}
};
static_assert(alignof(AWalkableArea_C) == 0x000008, "Wrong alignment on AWalkableArea_C");
static_assert(sizeof(AWalkableArea_C) == 0x0002B0, "Wrong size on AWalkableArea_C");
static_assert(offsetof(AWalkableArea_C, UberGraphFrame) == 0x000290, "Member 'AWalkableArea_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWalkableArea_C, Box) == 0x000298, "Member 'AWalkableArea_C::Box' has a wrong offset!");
static_assert(offsetof(AWalkableArea_C, DefaultSceneRoot) == 0x0002A0, "Member 'AWalkableArea_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AWalkableArea_C, CanExit) == 0x0002A8, "Member 'AWalkableArea_C::CanExit' has a wrong offset!");

}

