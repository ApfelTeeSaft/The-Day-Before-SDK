#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeerV2

#include "Basic.hpp"

#include "Survival_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_AdditiveDamage_structs.hpp"
#include "E_DeerSpawnType_structs.hpp"
#include "F_MovementSettings_structs.hpp"
#include "E_DeerState_structs.hpp"
#include "F_MontagePartName_structs.hpp"
#include "F_DeerProperties_structs.hpp"


namespace SDK::Params
{

// Function BP_DeerV2.BP_DeerV2_C.ActivateDeer
// 0x0188 (0x0188 - 0x0000)
struct BP_DeerV2_C_ActivateDeer final
{
public:
	E_DeerSpawnType                               Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable;                           // 0x0008(0x0030)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_1;                         // 0x0038(0x0030)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_2;                         // 0x0068(0x0030)(HasGetValueTypeHash)
	E_DeerSpawnType                               Temp_byte_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<Survival::EMovementType, struct FF_MovementSettings> Temp_byte_Variable_2;                              // 0x00A0(0x0050)()
	TMap<Survival::EMovementType, struct FF_MovementSettings> K2Node_Select_Default;                             // 0x00F0(0x0050)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   K2Node_Select_Default_1;                           // 0x0148(0x0030)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_AdditiveDamageMontagePlayRate_ImplicitCast; // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_ActivateDeer) == 0x000008, "Wrong alignment on BP_DeerV2_C_ActivateDeer");
static_assert(sizeof(BP_DeerV2_C_ActivateDeer) == 0x000188, "Wrong size on BP_DeerV2_C_ActivateDeer");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, Temp_byte_Variable) == 0x000000, "Member 'BP_DeerV2_C_ActivateDeer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, Temp_softclass_Variable) == 0x000008, "Member 'BP_DeerV2_C_ActivateDeer::Temp_softclass_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, Temp_softclass_Variable_1) == 0x000038, "Member 'BP_DeerV2_C_ActivateDeer::Temp_softclass_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, Temp_softclass_Variable_2) == 0x000068, "Member 'BP_DeerV2_C_ActivateDeer::Temp_softclass_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, Temp_byte_Variable_1) == 0x000098, "Member 'BP_DeerV2_C_ActivateDeer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, Temp_byte_Variable_2) == 0x0000A0, "Member 'BP_DeerV2_C_ActivateDeer::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, K2Node_Select_Default) == 0x0000F0, "Member 'BP_DeerV2_C_ActivateDeer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000140, "Member 'BP_DeerV2_C_ActivateDeer::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, K2Node_Select_Default_1) == 0x000148, "Member 'BP_DeerV2_C_ActivateDeer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000178, "Member 'BP_DeerV2_C_ActivateDeer::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ActivateDeer, K2Node_VariableSet_AdditiveDamageMontagePlayRate_ImplicitCast) == 0x000180, "Member 'BP_DeerV2_C_ActivateDeer::K2Node_VariableSet_AdditiveDamageMontagePlayRate_ImplicitCast' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.BehaviorFInished__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_DeerV2_C_BehaviorFInished__DelegateSignature final
{
public:
	E_DeerState                                   FromState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_BehaviorFInished__DelegateSignature) == 0x000001, "Wrong alignment on BP_DeerV2_C_BehaviorFInished__DelegateSignature");
static_assert(sizeof(BP_DeerV2_C_BehaviorFInished__DelegateSignature) == 0x000001, "Wrong size on BP_DeerV2_C_BehaviorFInished__DelegateSignature");
static_assert(offsetof(BP_DeerV2_C_BehaviorFInished__DelegateSignature, FromState) == 0x000000, "Member 'BP_DeerV2_C_BehaviorFInished__DelegateSignature::FromState' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.CheckFreeAdditiveMontage
// 0x0004 (0x0004 - 0x0000)
struct BP_DeerV2_C_CheckFreeAdditiveMontage final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_CheckFreeAdditiveMontage) == 0x000001, "Wrong alignment on BP_DeerV2_C_CheckFreeAdditiveMontage");
static_assert(sizeof(BP_DeerV2_C_CheckFreeAdditiveMontage) == 0x000004, "Wrong size on BP_DeerV2_C_CheckFreeAdditiveMontage");
static_assert(offsetof(BP_DeerV2_C_CheckFreeAdditiveMontage, ReturnValue) == 0x000000, "Member 'BP_DeerV2_C_CheckFreeAdditiveMontage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_CheckFreeAdditiveMontage, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_DeerV2_C_CheckFreeAdditiveMontage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_CheckFreeAdditiveMontage, CallFunc_BooleanAND_ReturnValue_1) == 0x000002, "Member 'BP_DeerV2_C_CheckFreeAdditiveMontage::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_CheckFreeAdditiveMontage, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_DeerV2_C_CheckFreeAdditiveMontage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.DeerLookAtRandomPoint
// 0x0028 (0x0028 - 0x0000)
struct BP_DeerV2_C_DeerLookAtRandomPoint final
{
public:
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_DeerLookAtRandomPoint) == 0x000008, "Wrong alignment on BP_DeerV2_C_DeerLookAtRandomPoint");
static_assert(sizeof(BP_DeerV2_C_DeerLookAtRandomPoint) == 0x000028, "Wrong size on BP_DeerV2_C_DeerLookAtRandomPoint");
static_assert(offsetof(BP_DeerV2_C_DeerLookAtRandomPoint, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'BP_DeerV2_C_DeerLookAtRandomPoint::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_DeerLookAtRandomPoint, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000008, "Member 'BP_DeerV2_C_DeerLookAtRandomPoint::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_DeerLookAtRandomPoint, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'BP_DeerV2_C_DeerLookAtRandomPoint::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_DeerLookAtRandomPoint, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000018, "Member 'BP_DeerV2_C_DeerLookAtRandomPoint::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_DeerLookAtRandomPoint, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000020, "Member 'BP_DeerV2_C_DeerLookAtRandomPoint::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.Define Montage Section
// 0x00C0 (0x00C0 - 0x0000)
struct BP_DeerV2_C_Define_Montage_Section final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FF_MontagePartName                     ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AdditiveDamage                              Part;                                              // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_MontagePartName                     ResultStructure;                                   // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MontageSectionSide;                                // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MontageSectionLimb;                                // 0x0034(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MontageSectionName;                                // 0x003C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_MontagePartName                     K2Node_MakeStruct_F_MontagePartName;               // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetAngleToActor_Angle;                    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_Define_Montage_Section) == 0x000008, "Wrong alignment on BP_DeerV2_C_Define_Montage_Section");
static_assert(sizeof(BP_DeerV2_C_Define_Montage_Section) == 0x0000C0, "Wrong size on BP_DeerV2_C_Define_Montage_Section");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, BoneName) == 0x000000, "Member 'BP_DeerV2_C_Define_Montage_Section::BoneName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, DamageCauser) == 0x000008, "Member 'BP_DeerV2_C_Define_Montage_Section::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, ReturnValue) == 0x000010, "Member 'BP_DeerV2_C_Define_Montage_Section::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, Part) == 0x00001C, "Member 'BP_DeerV2_C_Define_Montage_Section::Part' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, ResultStructure) == 0x000020, "Member 'BP_DeerV2_C_Define_Montage_Section::ResultStructure' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, MontageSectionSide) == 0x00002C, "Member 'BP_DeerV2_C_Define_Montage_Section::MontageSectionSide' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, MontageSectionLimb) == 0x000034, "Member 'BP_DeerV2_C_Define_Montage_Section::MontageSectionLimb' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, MontageSectionName) == 0x00003C, "Member 'BP_DeerV2_C_Define_Montage_Section::MontageSectionName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, Temp_name_Variable) == 0x000044, "Member 'BP_DeerV2_C_Define_Montage_Section::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, Temp_name_Variable_1) == 0x00004C, "Member 'BP_DeerV2_C_Define_Montage_Section::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, Temp_bool_Variable) == 0x000054, "Member 'BP_DeerV2_C_Define_Montage_Section::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, K2Node_MakeStruct_F_MontagePartName) == 0x000058, "Member 'BP_DeerV2_C_Define_Montage_Section::K2Node_MakeStruct_F_MontagePartName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'BP_DeerV2_C_Define_Montage_Section::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000078, "Member 'BP_DeerV2_C_Define_Montage_Section::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BP_DeerV2_C_Define_Montage_Section::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, CallFunc_Conv_StringToName_ReturnValue) == 0x000098, "Member 'BP_DeerV2_C_Define_Montage_Section::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, CallFunc_Array_Contains_ReturnValue) == 0x0000A0, "Member 'BP_DeerV2_C_Define_Montage_Section::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, CallFunc_Array_Contains_ReturnValue_1) == 0x0000A1, "Member 'BP_DeerV2_C_Define_Montage_Section::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, CallFunc_GetAngleToActor_Angle) == 0x0000A8, "Member 'BP_DeerV2_C_Define_Montage_Section::CallFunc_GetAngleToActor_Angle' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_DeerV2_C_Define_Montage_Section::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, CallFunc_Array_Contains_ReturnValue_2) == 0x0000B1, "Member 'BP_DeerV2_C_Define_Montage_Section::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_Define_Montage_Section, K2Node_Select_Default) == 0x0000B4, "Member 'BP_DeerV2_C_Define_Montage_Section::K2Node_Select_Default' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.ExecuteUbergraph_BP_DeerV2
// 0x07B8 (0x07B8 - 0x0000)
struct BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_24;                  // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_23;                  // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_22;                  // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_21;                  // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_20;                  // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0114(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x012C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0144(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x015C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x0180(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x0198(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x01B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x01C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x01E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x01F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x0218(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x0230(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x0248(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x0260(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x02BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_4;                              // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0308(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_HitComponent;                         // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ShotFromDirection;                    // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0378(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FF_MontagePartName                     K2Node_CustomEvent_MontagePartName;                // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   Temp_byte_Variable;                                // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47A[0x2];                                      // 0x047A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_25;           // 0x048C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x3];                                      // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_26;           // 0x04AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D2[0x6];                                      // 0x04D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4; // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E3[0x5];                                      // 0x04E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_3;                            // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_2;               // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerSpawnType                               K2Node_CustomEvent_DeerType;                       // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FA[0x2];                                      // 0x04FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ManagerIndex;                   // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0530(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0620(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_DeerProperties                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0638(0x00E0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0720(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_27;           // 0x0728(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x0740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74A[0x6];                                      // 0x074A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADeerManager_C*                         CallFunc_GetDeerManager_ReturnValue;               // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADeerManager_C*                         K2Node_DynamicCast_AsDeer_Manager;                 // 0x0758(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_762[0x6];                                      // 0x0762(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0768(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_28;           // 0x0770(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIC_Deer_C*                            K2Node_DynamicCast_AsAIC_Deer;                     // 0x0780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78A[0x6];                                      // 0x078A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHomeLocation_ReturnValue;              // 0x0790(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A9[0x7];                                      // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_OnDamage_Damage_ImplicitCast;             // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2) == 0x000008, "Wrong alignment on BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2");
static_assert(sizeof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2) == 0x0007B8, "Wrong size on BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, EntryPoint) == 0x000000, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_24) == 0x000004, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_24' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_23) == 0x00000C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_23' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_22) == 0x000024, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_22' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_21) == 0x00003C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_21' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_20) == 0x000054, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_20' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_name_Variable) == 0x00006C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_4) == 0x000074, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_19) == 0x000084, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_18) == 0x00008C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_5) == 0x000094, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_17) == 0x0000A4, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000AC, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_16) == 0x0000BC, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000C4, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_15) == 0x0000D4, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000DC, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_name_Variable_1) == 0x0000EC, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000F4, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_14) == 0x000104, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_13) == 0x00010C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_10) == 0x000114, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_12) == 0x000124, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_11) == 0x00012C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_11) == 0x00013C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_12) == 0x000144, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_10) == 0x000154, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_13) == 0x00015C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_name_Variable_2) == 0x00016C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_SwitchEnum_CmpSuccess) == 0x000174, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_9) == 0x000178, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_14) == 0x000180, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_8) == 0x000190, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_15) == 0x000198, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_7) == 0x0001A8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_16) == 0x0001B0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_6) == 0x0001C0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_17) == 0x0001C8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_5) == 0x0001D8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_18) == 0x0001E0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_name_Variable_3) == 0x0001F0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_19) == 0x0001F8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_4) == 0x000208, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_3) == 0x000210, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_20) == 0x000218, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_2) == 0x000228, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_21) == 0x000230, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName_1) == 0x000240, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_22) == 0x000248, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_NotifyName) == 0x000258, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_23) == 0x000260, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_name_Variable_4) == 0x000270, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_Loaded) == 0x000278, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_object_Variable) == 0x000280, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000288, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_bSuccess) == 0x000290, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_object_Variable_1) == 0x000298, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_AsAnim_Montage) == 0x0002A0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_bSuccess_1) == 0x0002A8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_Loaded_2) == 0x0002B0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_real_Variable) == 0x0002B8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_24) == 0x0002BC, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_real_Variable_1) == 0x0002CC, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_real_Variable_2) == 0x0002D0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_real_Variable_3) == 0x0002D4, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_object_Variable_2) == 0x0002D8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_AsAnim_Montage_1) == 0x0002E0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_bSuccess_2) == 0x0002E8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_real_Variable_4) == 0x0002EC, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_real_Variable_5) == 0x0002F0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_GetBlackboard_ReturnValue) == 0x0002F8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Event_Damage) == 0x000300, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Event_DamageType) == 0x000308, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Event_HitLocation) == 0x000310, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Event_HitNormal) == 0x000328, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Event_HitComponent) == 0x000340, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Event_BoneName) == 0x000348, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Event_ShotFromDirection) == 0x000350, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Event_ShotFromDirection' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Event_InstigatedBy) == 0x000368, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Event_DamageCauser) == 0x000370, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Event_HitInfo) == 0x000378, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_MontagePartName) == 0x000460, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_MontagePartName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_Loaded_3) == 0x000470, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_byte_Variable) == 0x000478, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000479, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_Select_Default) == 0x00047C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000480, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_IsValid_ReturnValue) == 0x000488, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_25) == 0x00048C, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0004A0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_IsValid_ReturnValue_1) == 0x0004A8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_26) == 0x0004AC, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x0004C0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x0004C8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_IsValid_ReturnValue_2) == 0x0004D0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_IsValid_ReturnValue_3) == 0x0004D1, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4) == 0x0004D8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0004E0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_IsValid_ReturnValue_4) == 0x0004E1, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0004E2, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, Temp_object_Variable_3) == 0x0004E8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_AsAnim_Montage_2) == 0x0004F0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_AsAnim_Montage_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_bSuccess_3) == 0x0004F8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_DeerType) == 0x0004F9, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_DeerType' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_ManagerIndex) == 0x0004FC, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_ManagerIndex' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_Location) == 0x000500, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_Rotation) == 0x000518, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000530, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000618, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000620, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_Conv_StringToName_ReturnValue) == 0x000630, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_GetDataTableRowFromName_OutRow) == 0x000638, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000718, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CustomEvent_Loaded_1) == 0x000720, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_27) == 0x000728, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_GetGameMode_ReturnValue) == 0x000738, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x000740, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_bSuccess_4) == 0x000748, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_IsValid_ReturnValue_5) == 0x000749, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_GetDeerManager_ReturnValue) == 0x000750, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_GetDeerManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_AsDeer_Manager) == 0x000758, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_AsDeer_Manager' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_bSuccess_5) == 0x000760, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_IsValid_ReturnValue_6) == 0x000761, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_GetController_ReturnValue) == 0x000768, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_CreateDelegate_OutputDelegate_28) == 0x000770, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_AsAIC_Deer) == 0x000780, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_AsAIC_Deer' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, K2Node_DynamicCast_bSuccess_6) == 0x000788, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_IsValid_ReturnValue_7) == 0x000789, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_GetHomeLocation_ReturnValue) == 0x000790, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_GetHomeLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_HasAuthority_ReturnValue) == 0x0007A8, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2, CallFunc_OnDamage_Damage_ImplicitCast) == 0x0007B0, "Member 'BP_DeerV2_C_ExecuteUbergraph_BP_DeerV2::CallFunc_OnDamage_Damage_ImplicitCast' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.FindAnimalsNavData
// 0x0080 (0x0080 - 0x0000)
struct BP_DeerV2_C_FindAnimalsNavData final
{
public:
	TArray<class ARecastNavMesh*>                 RecastNavMeshes;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ARecastNavMesh*                         CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARecastNavMesh*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_DeerV2_C_FindAnimalsNavData) == 0x000008, "Wrong alignment on BP_DeerV2_C_FindAnimalsNavData");
static_assert(sizeof(BP_DeerV2_C_FindAnimalsNavData) == 0x000080, "Wrong size on BP_DeerV2_C_FindAnimalsNavData");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, RecastNavMeshes) == 0x000000, "Member 'BP_DeerV2_C_FindAnimalsNavData::RecastNavMeshes' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_DeerV2_C_FindAnimalsNavData::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_DeerV2_C_FindAnimalsNavData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_DeerV2_C_FindAnimalsNavData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000024, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_DeerV2_C_FindAnimalsNavData::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_GetDisplayName_ReturnValue) == 0x000058, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000069, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_FindAnimalsNavData, CallFunc_GetAllActorsOfClass_OutActors) == 0x000070, "Member 'BP_DeerV2_C_FindAnimalsNavData::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.GetHomeLocation
// 0x0230 (0x0230 - 0x0000)
struct BP_DeerV2_C_GetHomeLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Result;                                            // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0030(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0070(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15B[0x1];                                      // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_GetHomeLocation) == 0x000008, "Wrong alignment on BP_DeerV2_C_GetHomeLocation");
static_assert(sizeof(BP_DeerV2_C_GetHomeLocation) == 0x000230, "Wrong size on BP_DeerV2_C_GetHomeLocation");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, ReturnValue) == 0x000000, "Member 'BP_DeerV2_C_GetHomeLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, Result) == 0x000018, "Member 'BP_DeerV2_C_GetHomeLocation::Result' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, Temp_object_Variable) == 0x000030, "Member 'BP_DeerV2_C_GetHomeLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_LineTraceSingle_OutHit) == 0x000070, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x000158, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x000159, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x00015A, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_Time) == 0x00015C, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_Distance) == 0x000160, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_Location) == 0x000168, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000180, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_Normal) == 0x000198, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B0, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_PhysMat) == 0x0001C8, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_HitActor) == 0x0001D0, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_HitComponent) == 0x0001D8, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_HitBoneName) == 0x0001E0, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_BoneName) == 0x0001E8, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_HitItem) == 0x0001F0, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_ElementIndex) == 0x0001F4, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_FaceIndex) == 0x0001F8, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_TraceStart) == 0x000200, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_GetHomeLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000218, "Member 'BP_DeerV2_C_GetHomeLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.MulticastPlayAdditiveMontage
// 0x000C (0x000C - 0x0000)
struct BP_DeerV2_C_MulticastPlayAdditiveMontage final
{
public:
	struct FF_MontagePartName                     Param_MontagePartName;                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_MulticastPlayAdditiveMontage) == 0x000004, "Wrong alignment on BP_DeerV2_C_MulticastPlayAdditiveMontage");
static_assert(sizeof(BP_DeerV2_C_MulticastPlayAdditiveMontage) == 0x00000C, "Wrong size on BP_DeerV2_C_MulticastPlayAdditiveMontage");
static_assert(offsetof(BP_DeerV2_C_MulticastPlayAdditiveMontage, Param_MontagePartName) == 0x000000, "Member 'BP_DeerV2_C_MulticastPlayAdditiveMontage::Param_MontagePartName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnBlendOut_1C3C155B4C6B38F96A41ECBBD6E9D663
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnBlendOut_1C3C155B4C6B38F96A41ECBBD6E9D663 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnBlendOut_1C3C155B4C6B38F96A41ECBBD6E9D663) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnBlendOut_1C3C155B4C6B38F96A41ECBBD6E9D663");
static_assert(sizeof(BP_DeerV2_C_OnBlendOut_1C3C155B4C6B38F96A41ECBBD6E9D663) == 0x000008, "Wrong size on BP_DeerV2_C_OnBlendOut_1C3C155B4C6B38F96A41ECBBD6E9D663");
static_assert(offsetof(BP_DeerV2_C_OnBlendOut_1C3C155B4C6B38F96A41ECBBD6E9D663, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnBlendOut_1C3C155B4C6B38F96A41ECBBD6E9D663::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnBlendOut_6E4413454C4A0DD39616FF8FC22A75DE
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnBlendOut_6E4413454C4A0DD39616FF8FC22A75DE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnBlendOut_6E4413454C4A0DD39616FF8FC22A75DE) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnBlendOut_6E4413454C4A0DD39616FF8FC22A75DE");
static_assert(sizeof(BP_DeerV2_C_OnBlendOut_6E4413454C4A0DD39616FF8FC22A75DE) == 0x000008, "Wrong size on BP_DeerV2_C_OnBlendOut_6E4413454C4A0DD39616FF8FC22A75DE");
static_assert(offsetof(BP_DeerV2_C_OnBlendOut_6E4413454C4A0DD39616FF8FC22A75DE, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnBlendOut_6E4413454C4A0DD39616FF8FC22A75DE::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnBlendOut_8804BFE1468DB6F469056D809A2418A5
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnBlendOut_8804BFE1468DB6F469056D809A2418A5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnBlendOut_8804BFE1468DB6F469056D809A2418A5) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnBlendOut_8804BFE1468DB6F469056D809A2418A5");
static_assert(sizeof(BP_DeerV2_C_OnBlendOut_8804BFE1468DB6F469056D809A2418A5) == 0x000008, "Wrong size on BP_DeerV2_C_OnBlendOut_8804BFE1468DB6F469056D809A2418A5");
static_assert(offsetof(BP_DeerV2_C_OnBlendOut_8804BFE1468DB6F469056D809A2418A5, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnBlendOut_8804BFE1468DB6F469056D809A2418A5::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnBlendOut_9EE847AC409D3517E06D5F9E107B80B5
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnBlendOut_9EE847AC409D3517E06D5F9E107B80B5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnBlendOut_9EE847AC409D3517E06D5F9E107B80B5) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnBlendOut_9EE847AC409D3517E06D5F9E107B80B5");
static_assert(sizeof(BP_DeerV2_C_OnBlendOut_9EE847AC409D3517E06D5F9E107B80B5) == 0x000008, "Wrong size on BP_DeerV2_C_OnBlendOut_9EE847AC409D3517E06D5F9E107B80B5");
static_assert(offsetof(BP_DeerV2_C_OnBlendOut_9EE847AC409D3517E06D5F9E107B80B5, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnBlendOut_9EE847AC409D3517E06D5F9E107B80B5::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnBlendOut_FF44C8724C5B458EF8013F85BCBC166B
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnBlendOut_FF44C8724C5B458EF8013F85BCBC166B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnBlendOut_FF44C8724C5B458EF8013F85BCBC166B) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnBlendOut_FF44C8724C5B458EF8013F85BCBC166B");
static_assert(sizeof(BP_DeerV2_C_OnBlendOut_FF44C8724C5B458EF8013F85BCBC166B) == 0x000008, "Wrong size on BP_DeerV2_C_OnBlendOut_FF44C8724C5B458EF8013F85BCBC166B");
static_assert(offsetof(BP_DeerV2_C_OnBlendOut_FF44C8724C5B458EF8013F85BCBC166B, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnBlendOut_FF44C8724C5B458EF8013F85BCBC166B::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnCompleted_1C3C155B4C6B38F96A41ECBBD6E9D663
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnCompleted_1C3C155B4C6B38F96A41ECBBD6E9D663 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnCompleted_1C3C155B4C6B38F96A41ECBBD6E9D663) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnCompleted_1C3C155B4C6B38F96A41ECBBD6E9D663");
static_assert(sizeof(BP_DeerV2_C_OnCompleted_1C3C155B4C6B38F96A41ECBBD6E9D663) == 0x000008, "Wrong size on BP_DeerV2_C_OnCompleted_1C3C155B4C6B38F96A41ECBBD6E9D663");
static_assert(offsetof(BP_DeerV2_C_OnCompleted_1C3C155B4C6B38F96A41ECBBD6E9D663, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnCompleted_1C3C155B4C6B38F96A41ECBBD6E9D663::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnCompleted_6E4413454C4A0DD39616FF8FC22A75DE
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnCompleted_6E4413454C4A0DD39616FF8FC22A75DE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnCompleted_6E4413454C4A0DD39616FF8FC22A75DE) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnCompleted_6E4413454C4A0DD39616FF8FC22A75DE");
static_assert(sizeof(BP_DeerV2_C_OnCompleted_6E4413454C4A0DD39616FF8FC22A75DE) == 0x000008, "Wrong size on BP_DeerV2_C_OnCompleted_6E4413454C4A0DD39616FF8FC22A75DE");
static_assert(offsetof(BP_DeerV2_C_OnCompleted_6E4413454C4A0DD39616FF8FC22A75DE, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnCompleted_6E4413454C4A0DD39616FF8FC22A75DE::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnCompleted_8804BFE1468DB6F469056D809A2418A5
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnCompleted_8804BFE1468DB6F469056D809A2418A5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnCompleted_8804BFE1468DB6F469056D809A2418A5) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnCompleted_8804BFE1468DB6F469056D809A2418A5");
static_assert(sizeof(BP_DeerV2_C_OnCompleted_8804BFE1468DB6F469056D809A2418A5) == 0x000008, "Wrong size on BP_DeerV2_C_OnCompleted_8804BFE1468DB6F469056D809A2418A5");
static_assert(offsetof(BP_DeerV2_C_OnCompleted_8804BFE1468DB6F469056D809A2418A5, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnCompleted_8804BFE1468DB6F469056D809A2418A5::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnCompleted_9EE847AC409D3517E06D5F9E107B80B5
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnCompleted_9EE847AC409D3517E06D5F9E107B80B5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnCompleted_9EE847AC409D3517E06D5F9E107B80B5) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnCompleted_9EE847AC409D3517E06D5F9E107B80B5");
static_assert(sizeof(BP_DeerV2_C_OnCompleted_9EE847AC409D3517E06D5F9E107B80B5) == 0x000008, "Wrong size on BP_DeerV2_C_OnCompleted_9EE847AC409D3517E06D5F9E107B80B5");
static_assert(offsetof(BP_DeerV2_C_OnCompleted_9EE847AC409D3517E06D5F9E107B80B5, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnCompleted_9EE847AC409D3517E06D5F9E107B80B5::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnCompleted_FF44C8724C5B458EF8013F85BCBC166B
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnCompleted_FF44C8724C5B458EF8013F85BCBC166B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnCompleted_FF44C8724C5B458EF8013F85BCBC166B) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnCompleted_FF44C8724C5B458EF8013F85BCBC166B");
static_assert(sizeof(BP_DeerV2_C_OnCompleted_FF44C8724C5B458EF8013F85BCBC166B) == 0x000008, "Wrong size on BP_DeerV2_C_OnCompleted_FF44C8724C5B458EF8013F85BCBC166B");
static_assert(offsetof(BP_DeerV2_C_OnCompleted_FF44C8724C5B458EF8013F85BCBC166B, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnCompleted_FF44C8724C5B458EF8013F85BCBC166B::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnDamage
// 0x0050 (0x0050 - 0x0000)
struct BP_DeerV2_C_OnDamage final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Health_ImplicitCast;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnDamage) == 0x000008, "Wrong alignment on BP_DeerV2_C_OnDamage");
static_assert(sizeof(BP_DeerV2_C_OnDamage) == 0x000050, "Wrong size on BP_DeerV2_C_OnDamage");
static_assert(offsetof(BP_DeerV2_C_OnDamage, Damage) == 0x000000, "Member 'BP_DeerV2_C_OnDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_OnDamage, BoneName) == 0x000008, "Member 'BP_DeerV2_C_OnDamage::BoneName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_OnDamage, DamageCauser) == 0x000010, "Member 'BP_DeerV2_C_OnDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_OnDamage, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_DeerV2_C_OnDamage::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_OnDamage, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_DeerV2_C_OnDamage::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_OnDamage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_DeerV2_C_OnDamage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_OnDamage, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'BP_DeerV2_C_OnDamage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_OnDamage, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000030, "Member 'BP_DeerV2_C_OnDamage::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_OnDamage, CallFunc_FClamp_Max_ImplicitCast) == 0x000038, "Member 'BP_DeerV2_C_OnDamage::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_OnDamage, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_DeerV2_C_OnDamage::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_OnDamage, K2Node_VariableSet_Health_ImplicitCast) == 0x000048, "Member 'BP_DeerV2_C_OnDamage::K2Node_VariableSet_Health_ImplicitCast' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnInterrupted_1C3C155B4C6B38F96A41ECBBD6E9D663
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnInterrupted_1C3C155B4C6B38F96A41ECBBD6E9D663 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnInterrupted_1C3C155B4C6B38F96A41ECBBD6E9D663) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnInterrupted_1C3C155B4C6B38F96A41ECBBD6E9D663");
static_assert(sizeof(BP_DeerV2_C_OnInterrupted_1C3C155B4C6B38F96A41ECBBD6E9D663) == 0x000008, "Wrong size on BP_DeerV2_C_OnInterrupted_1C3C155B4C6B38F96A41ECBBD6E9D663");
static_assert(offsetof(BP_DeerV2_C_OnInterrupted_1C3C155B4C6B38F96A41ECBBD6E9D663, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnInterrupted_1C3C155B4C6B38F96A41ECBBD6E9D663::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnInterrupted_6E4413454C4A0DD39616FF8FC22A75DE
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnInterrupted_6E4413454C4A0DD39616FF8FC22A75DE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnInterrupted_6E4413454C4A0DD39616FF8FC22A75DE) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnInterrupted_6E4413454C4A0DD39616FF8FC22A75DE");
static_assert(sizeof(BP_DeerV2_C_OnInterrupted_6E4413454C4A0DD39616FF8FC22A75DE) == 0x000008, "Wrong size on BP_DeerV2_C_OnInterrupted_6E4413454C4A0DD39616FF8FC22A75DE");
static_assert(offsetof(BP_DeerV2_C_OnInterrupted_6E4413454C4A0DD39616FF8FC22A75DE, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnInterrupted_6E4413454C4A0DD39616FF8FC22A75DE::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnInterrupted_8804BFE1468DB6F469056D809A2418A5
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnInterrupted_8804BFE1468DB6F469056D809A2418A5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnInterrupted_8804BFE1468DB6F469056D809A2418A5) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnInterrupted_8804BFE1468DB6F469056D809A2418A5");
static_assert(sizeof(BP_DeerV2_C_OnInterrupted_8804BFE1468DB6F469056D809A2418A5) == 0x000008, "Wrong size on BP_DeerV2_C_OnInterrupted_8804BFE1468DB6F469056D809A2418A5");
static_assert(offsetof(BP_DeerV2_C_OnInterrupted_8804BFE1468DB6F469056D809A2418A5, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnInterrupted_8804BFE1468DB6F469056D809A2418A5::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnInterrupted_9EE847AC409D3517E06D5F9E107B80B5
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnInterrupted_9EE847AC409D3517E06D5F9E107B80B5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnInterrupted_9EE847AC409D3517E06D5F9E107B80B5) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnInterrupted_9EE847AC409D3517E06D5F9E107B80B5");
static_assert(sizeof(BP_DeerV2_C_OnInterrupted_9EE847AC409D3517E06D5F9E107B80B5) == 0x000008, "Wrong size on BP_DeerV2_C_OnInterrupted_9EE847AC409D3517E06D5F9E107B80B5");
static_assert(offsetof(BP_DeerV2_C_OnInterrupted_9EE847AC409D3517E06D5F9E107B80B5, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnInterrupted_9EE847AC409D3517E06D5F9E107B80B5::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnInterrupted_FF44C8724C5B458EF8013F85BCBC166B
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnInterrupted_FF44C8724C5B458EF8013F85BCBC166B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnInterrupted_FF44C8724C5B458EF8013F85BCBC166B) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnInterrupted_FF44C8724C5B458EF8013F85BCBC166B");
static_assert(sizeof(BP_DeerV2_C_OnInterrupted_FF44C8724C5B458EF8013F85BCBC166B) == 0x000008, "Wrong size on BP_DeerV2_C_OnInterrupted_FF44C8724C5B458EF8013F85BCBC166B");
static_assert(offsetof(BP_DeerV2_C_OnInterrupted_FF44C8724C5B458EF8013F85BCBC166B, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnInterrupted_FF44C8724C5B458EF8013F85BCBC166B::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnLoaded_7D7526E749E577AF99E416BF2048C438
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnLoaded_7D7526E749E577AF99E416BF2048C438 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnLoaded_7D7526E749E577AF99E416BF2048C438) == 0x000008, "Wrong alignment on BP_DeerV2_C_OnLoaded_7D7526E749E577AF99E416BF2048C438");
static_assert(sizeof(BP_DeerV2_C_OnLoaded_7D7526E749E577AF99E416BF2048C438) == 0x000008, "Wrong size on BP_DeerV2_C_OnLoaded_7D7526E749E577AF99E416BF2048C438");
static_assert(offsetof(BP_DeerV2_C_OnLoaded_7D7526E749E577AF99E416BF2048C438, Loaded) == 0x000000, "Member 'BP_DeerV2_C_OnLoaded_7D7526E749E577AF99E416BF2048C438::Loaded' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnLoaded_AF3D7D9A41C6A21E0D5476BC03C45643
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnLoaded_AF3D7D9A41C6A21E0D5476BC03C45643 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnLoaded_AF3D7D9A41C6A21E0D5476BC03C45643) == 0x000008, "Wrong alignment on BP_DeerV2_C_OnLoaded_AF3D7D9A41C6A21E0D5476BC03C45643");
static_assert(sizeof(BP_DeerV2_C_OnLoaded_AF3D7D9A41C6A21E0D5476BC03C45643) == 0x000008, "Wrong size on BP_DeerV2_C_OnLoaded_AF3D7D9A41C6A21E0D5476BC03C45643");
static_assert(offsetof(BP_DeerV2_C_OnLoaded_AF3D7D9A41C6A21E0D5476BC03C45643, Loaded) == 0x000000, "Member 'BP_DeerV2_C_OnLoaded_AF3D7D9A41C6A21E0D5476BC03C45643::Loaded' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnLoaded_B280F37E49F4965FBA4970944C652193
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnLoaded_B280F37E49F4965FBA4970944C652193 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnLoaded_B280F37E49F4965FBA4970944C652193) == 0x000008, "Wrong alignment on BP_DeerV2_C_OnLoaded_B280F37E49F4965FBA4970944C652193");
static_assert(sizeof(BP_DeerV2_C_OnLoaded_B280F37E49F4965FBA4970944C652193) == 0x000008, "Wrong size on BP_DeerV2_C_OnLoaded_B280F37E49F4965FBA4970944C652193");
static_assert(offsetof(BP_DeerV2_C_OnLoaded_B280F37E49F4965FBA4970944C652193, Loaded) == 0x000000, "Member 'BP_DeerV2_C_OnLoaded_B280F37E49F4965FBA4970944C652193::Loaded' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnLoaded_D768AC47460525BFF068CDB17D27376E
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnLoaded_D768AC47460525BFF068CDB17D27376E final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnLoaded_D768AC47460525BFF068CDB17D27376E) == 0x000008, "Wrong alignment on BP_DeerV2_C_OnLoaded_D768AC47460525BFF068CDB17D27376E");
static_assert(sizeof(BP_DeerV2_C_OnLoaded_D768AC47460525BFF068CDB17D27376E) == 0x000008, "Wrong size on BP_DeerV2_C_OnLoaded_D768AC47460525BFF068CDB17D27376E");
static_assert(offsetof(BP_DeerV2_C_OnLoaded_D768AC47460525BFF068CDB17D27376E, Loaded) == 0x000000, "Member 'BP_DeerV2_C_OnLoaded_D768AC47460525BFF068CDB17D27376E::Loaded' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnNotifyBegin_1C3C155B4C6B38F96A41ECBBD6E9D663
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnNotifyBegin_1C3C155B4C6B38F96A41ECBBD6E9D663 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnNotifyBegin_1C3C155B4C6B38F96A41ECBBD6E9D663) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnNotifyBegin_1C3C155B4C6B38F96A41ECBBD6E9D663");
static_assert(sizeof(BP_DeerV2_C_OnNotifyBegin_1C3C155B4C6B38F96A41ECBBD6E9D663) == 0x000008, "Wrong size on BP_DeerV2_C_OnNotifyBegin_1C3C155B4C6B38F96A41ECBBD6E9D663");
static_assert(offsetof(BP_DeerV2_C_OnNotifyBegin_1C3C155B4C6B38F96A41ECBBD6E9D663, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnNotifyBegin_1C3C155B4C6B38F96A41ECBBD6E9D663::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnNotifyBegin_6E4413454C4A0DD39616FF8FC22A75DE
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnNotifyBegin_6E4413454C4A0DD39616FF8FC22A75DE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnNotifyBegin_6E4413454C4A0DD39616FF8FC22A75DE) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnNotifyBegin_6E4413454C4A0DD39616FF8FC22A75DE");
static_assert(sizeof(BP_DeerV2_C_OnNotifyBegin_6E4413454C4A0DD39616FF8FC22A75DE) == 0x000008, "Wrong size on BP_DeerV2_C_OnNotifyBegin_6E4413454C4A0DD39616FF8FC22A75DE");
static_assert(offsetof(BP_DeerV2_C_OnNotifyBegin_6E4413454C4A0DD39616FF8FC22A75DE, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnNotifyBegin_6E4413454C4A0DD39616FF8FC22A75DE::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnNotifyBegin_8804BFE1468DB6F469056D809A2418A5
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnNotifyBegin_8804BFE1468DB6F469056D809A2418A5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnNotifyBegin_8804BFE1468DB6F469056D809A2418A5) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnNotifyBegin_8804BFE1468DB6F469056D809A2418A5");
static_assert(sizeof(BP_DeerV2_C_OnNotifyBegin_8804BFE1468DB6F469056D809A2418A5) == 0x000008, "Wrong size on BP_DeerV2_C_OnNotifyBegin_8804BFE1468DB6F469056D809A2418A5");
static_assert(offsetof(BP_DeerV2_C_OnNotifyBegin_8804BFE1468DB6F469056D809A2418A5, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnNotifyBegin_8804BFE1468DB6F469056D809A2418A5::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnNotifyBegin_9EE847AC409D3517E06D5F9E107B80B5
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnNotifyBegin_9EE847AC409D3517E06D5F9E107B80B5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnNotifyBegin_9EE847AC409D3517E06D5F9E107B80B5) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnNotifyBegin_9EE847AC409D3517E06D5F9E107B80B5");
static_assert(sizeof(BP_DeerV2_C_OnNotifyBegin_9EE847AC409D3517E06D5F9E107B80B5) == 0x000008, "Wrong size on BP_DeerV2_C_OnNotifyBegin_9EE847AC409D3517E06D5F9E107B80B5");
static_assert(offsetof(BP_DeerV2_C_OnNotifyBegin_9EE847AC409D3517E06D5F9E107B80B5, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnNotifyBegin_9EE847AC409D3517E06D5F9E107B80B5::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnNotifyBegin_FF44C8724C5B458EF8013F85BCBC166B
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnNotifyBegin_FF44C8724C5B458EF8013F85BCBC166B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnNotifyBegin_FF44C8724C5B458EF8013F85BCBC166B) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnNotifyBegin_FF44C8724C5B458EF8013F85BCBC166B");
static_assert(sizeof(BP_DeerV2_C_OnNotifyBegin_FF44C8724C5B458EF8013F85BCBC166B) == 0x000008, "Wrong size on BP_DeerV2_C_OnNotifyBegin_FF44C8724C5B458EF8013F85BCBC166B");
static_assert(offsetof(BP_DeerV2_C_OnNotifyBegin_FF44C8724C5B458EF8013F85BCBC166B, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnNotifyBegin_FF44C8724C5B458EF8013F85BCBC166B::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnNotifyEnd_1C3C155B4C6B38F96A41ECBBD6E9D663
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnNotifyEnd_1C3C155B4C6B38F96A41ECBBD6E9D663 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnNotifyEnd_1C3C155B4C6B38F96A41ECBBD6E9D663) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnNotifyEnd_1C3C155B4C6B38F96A41ECBBD6E9D663");
static_assert(sizeof(BP_DeerV2_C_OnNotifyEnd_1C3C155B4C6B38F96A41ECBBD6E9D663) == 0x000008, "Wrong size on BP_DeerV2_C_OnNotifyEnd_1C3C155B4C6B38F96A41ECBBD6E9D663");
static_assert(offsetof(BP_DeerV2_C_OnNotifyEnd_1C3C155B4C6B38F96A41ECBBD6E9D663, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnNotifyEnd_1C3C155B4C6B38F96A41ECBBD6E9D663::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnNotifyEnd_6E4413454C4A0DD39616FF8FC22A75DE
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnNotifyEnd_6E4413454C4A0DD39616FF8FC22A75DE final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnNotifyEnd_6E4413454C4A0DD39616FF8FC22A75DE) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnNotifyEnd_6E4413454C4A0DD39616FF8FC22A75DE");
static_assert(sizeof(BP_DeerV2_C_OnNotifyEnd_6E4413454C4A0DD39616FF8FC22A75DE) == 0x000008, "Wrong size on BP_DeerV2_C_OnNotifyEnd_6E4413454C4A0DD39616FF8FC22A75DE");
static_assert(offsetof(BP_DeerV2_C_OnNotifyEnd_6E4413454C4A0DD39616FF8FC22A75DE, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnNotifyEnd_6E4413454C4A0DD39616FF8FC22A75DE::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnNotifyEnd_8804BFE1468DB6F469056D809A2418A5
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnNotifyEnd_8804BFE1468DB6F469056D809A2418A5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnNotifyEnd_8804BFE1468DB6F469056D809A2418A5) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnNotifyEnd_8804BFE1468DB6F469056D809A2418A5");
static_assert(sizeof(BP_DeerV2_C_OnNotifyEnd_8804BFE1468DB6F469056D809A2418A5) == 0x000008, "Wrong size on BP_DeerV2_C_OnNotifyEnd_8804BFE1468DB6F469056D809A2418A5");
static_assert(offsetof(BP_DeerV2_C_OnNotifyEnd_8804BFE1468DB6F469056D809A2418A5, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnNotifyEnd_8804BFE1468DB6F469056D809A2418A5::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnNotifyEnd_9EE847AC409D3517E06D5F9E107B80B5
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnNotifyEnd_9EE847AC409D3517E06D5F9E107B80B5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnNotifyEnd_9EE847AC409D3517E06D5F9E107B80B5) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnNotifyEnd_9EE847AC409D3517E06D5F9E107B80B5");
static_assert(sizeof(BP_DeerV2_C_OnNotifyEnd_9EE847AC409D3517E06D5F9E107B80B5) == 0x000008, "Wrong size on BP_DeerV2_C_OnNotifyEnd_9EE847AC409D3517E06D5F9E107B80B5");
static_assert(offsetof(BP_DeerV2_C_OnNotifyEnd_9EE847AC409D3517E06D5F9E107B80B5, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnNotifyEnd_9EE847AC409D3517E06D5F9E107B80B5::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnNotifyEnd_FF44C8724C5B458EF8013F85BCBC166B
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_OnNotifyEnd_FF44C8724C5B458EF8013F85BCBC166B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnNotifyEnd_FF44C8724C5B458EF8013F85BCBC166B) == 0x000004, "Wrong alignment on BP_DeerV2_C_OnNotifyEnd_FF44C8724C5B458EF8013F85BCBC166B");
static_assert(sizeof(BP_DeerV2_C_OnNotifyEnd_FF44C8724C5B458EF8013F85BCBC166B) == 0x000008, "Wrong size on BP_DeerV2_C_OnNotifyEnd_FF44C8724C5B458EF8013F85BCBC166B");
static_assert(offsetof(BP_DeerV2_C_OnNotifyEnd_FF44C8724C5B458EF8013F85BCBC166B, NotifyName) == 0x000000, "Member 'BP_DeerV2_C_OnNotifyEnd_FF44C8724C5B458EF8013F85BCBC166B::NotifyName' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.OnRep_State
// 0x0001 (0x0001 - 0x0000)
struct BP_DeerV2_C_OnRep_State final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_OnRep_State) == 0x000001, "Wrong alignment on BP_DeerV2_C_OnRep_State");
static_assert(sizeof(BP_DeerV2_C_OnRep_State) == 0x000001, "Wrong size on BP_DeerV2_C_OnRep_State");
static_assert(offsetof(BP_DeerV2_C_OnRep_State, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_DeerV2_C_OnRep_State::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.PlayAdditiveDamageMontage
// 0x0028 (0x0028 - 0x0000)
struct BP_DeerV2_C_PlayAdditiveDamageMontage final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FName                                   StartingSection;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFreeAdditiveMontage_ReturnValue;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_MontagePartName                     CallFunc_Define_Montage_Section_ReturnValue;       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_PlayAdditiveDamageMontage) == 0x000008, "Wrong alignment on BP_DeerV2_C_PlayAdditiveDamageMontage");
static_assert(sizeof(BP_DeerV2_C_PlayAdditiveDamageMontage) == 0x000028, "Wrong size on BP_DeerV2_C_PlayAdditiveDamageMontage");
static_assert(offsetof(BP_DeerV2_C_PlayAdditiveDamageMontage, BoneName) == 0x000000, "Member 'BP_DeerV2_C_PlayAdditiveDamageMontage::BoneName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_PlayAdditiveDamageMontage, DamageCauser) == 0x000008, "Member 'BP_DeerV2_C_PlayAdditiveDamageMontage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_PlayAdditiveDamageMontage, StartingSection) == 0x000010, "Member 'BP_DeerV2_C_PlayAdditiveDamageMontage::StartingSection' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_PlayAdditiveDamageMontage, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_DeerV2_C_PlayAdditiveDamageMontage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_PlayAdditiveDamageMontage, CallFunc_CheckFreeAdditiveMontage_ReturnValue) == 0x000019, "Member 'BP_DeerV2_C_PlayAdditiveDamageMontage::CallFunc_CheckFreeAdditiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_PlayAdditiveDamageMontage, CallFunc_Define_Montage_Section_ReturnValue) == 0x00001C, "Member 'BP_DeerV2_C_PlayAdditiveDamageMontage::CallFunc_Define_Montage_Section_ReturnValue' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.RandomBehaviour
// 0x0038 (0x0038 - 0x0000)
struct BP_DeerV2_C_RandomBehaviour final
{
public:
	E_DeerState                                   Param_State;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   Temp_byte_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   CallFunc_Array_Random_OutItem;                     // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_RandomBehaviour) == 0x000008, "Wrong alignment on BP_DeerV2_C_RandomBehaviour");
static_assert(sizeof(BP_DeerV2_C_RandomBehaviour) == 0x000038, "Wrong size on BP_DeerV2_C_RandomBehaviour");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, Param_State) == 0x000000, "Member 'BP_DeerV2_C_RandomBehaviour::Param_State' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, Temp_real_Variable) == 0x000004, "Member 'BP_DeerV2_C_RandomBehaviour::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, Temp_real_Variable_1) == 0x000008, "Member 'BP_DeerV2_C_RandomBehaviour::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, Temp_real_Variable_2) == 0x00000C, "Member 'BP_DeerV2_C_RandomBehaviour::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, Temp_real_Variable_3) == 0x000010, "Member 'BP_DeerV2_C_RandomBehaviour::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, Temp_real_Variable_4) == 0x000014, "Member 'BP_DeerV2_C_RandomBehaviour::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, Temp_real_Variable_5) == 0x000018, "Member 'BP_DeerV2_C_RandomBehaviour::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, Temp_byte_Variable) == 0x00001C, "Member 'BP_DeerV2_C_RandomBehaviour::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_DeerV2_C_RandomBehaviour::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_DeerV2_C_RandomBehaviour::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, K2Node_SwitchEnum_CmpSuccess) == 0x000025, "Member 'BP_DeerV2_C_RandomBehaviour::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, CallFunc_Array_RemoveItem_ReturnValue) == 0x000026, "Member 'BP_DeerV2_C_RandomBehaviour::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, CallFunc_Array_Random_OutItem) == 0x000027, "Member 'BP_DeerV2_C_RandomBehaviour::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, CallFunc_Array_Random_OutIndex) == 0x000028, "Member 'BP_DeerV2_C_RandomBehaviour::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, K2Node_Select_Default) == 0x00002C, "Member 'BP_DeerV2_C_RandomBehaviour::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RandomBehaviour, CallFunc_K2_SetTimer_ReturnValue) == 0x000030, "Member 'BP_DeerV2_C_RandomBehaviour::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.ReceivePointDamage
// 0x0160 (0x0160 - 0x0000)
struct BP_DeerV2_C_ReceivePointDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0078(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DeerV2_C_ReceivePointDamage) == 0x000008, "Wrong alignment on BP_DeerV2_C_ReceivePointDamage");
static_assert(sizeof(BP_DeerV2_C_ReceivePointDamage) == 0x000160, "Wrong size on BP_DeerV2_C_ReceivePointDamage");
static_assert(offsetof(BP_DeerV2_C_ReceivePointDamage, Damage) == 0x000000, "Member 'BP_DeerV2_C_ReceivePointDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ReceivePointDamage, DamageType) == 0x000008, "Member 'BP_DeerV2_C_ReceivePointDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ReceivePointDamage, HitLocation) == 0x000010, "Member 'BP_DeerV2_C_ReceivePointDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ReceivePointDamage, HitNormal) == 0x000028, "Member 'BP_DeerV2_C_ReceivePointDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ReceivePointDamage, HitComponent) == 0x000040, "Member 'BP_DeerV2_C_ReceivePointDamage::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ReceivePointDamage, BoneName) == 0x000048, "Member 'BP_DeerV2_C_ReceivePointDamage::BoneName' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ReceivePointDamage, ShotFromDirection) == 0x000050, "Member 'BP_DeerV2_C_ReceivePointDamage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ReceivePointDamage, InstigatedBy) == 0x000068, "Member 'BP_DeerV2_C_ReceivePointDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ReceivePointDamage, DamageCauser) == 0x000070, "Member 'BP_DeerV2_C_ReceivePointDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ReceivePointDamage, HitInfo) == 0x000078, "Member 'BP_DeerV2_C_ReceivePointDamage::HitInfo' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.RepDeath
// 0x0040 (0x0040 - 0x0000)
struct BP_DeerV2_C_RepDeath final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_RepDeath) == 0x000008, "Wrong alignment on BP_DeerV2_C_RepDeath");
static_assert(sizeof(BP_DeerV2_C_RepDeath) == 0x000040, "Wrong size on BP_DeerV2_C_RepDeath");
static_assert(offsetof(BP_DeerV2_C_RepDeath, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_DeerV2_C_RepDeath::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RepDeath, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_DeerV2_C_RepDeath::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RepDeath, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_DeerV2_C_RepDeath::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RepDeath, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_DeerV2_C_RepDeath::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RepDeath, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'BP_DeerV2_C_RepDeath::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RepDeath, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000030, "Member 'BP_DeerV2_C_RepDeath::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RepDeath, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_DeerV2_C_RepDeath::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.RepRandomBehavior
// 0x0010 (0x0010 - 0x0000)
struct BP_DeerV2_C_RepRandomBehavior final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttachedBullet_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_RepRandomBehavior) == 0x000008, "Wrong alignment on BP_DeerV2_C_RepRandomBehavior");
static_assert(sizeof(BP_DeerV2_C_RepRandomBehavior) == 0x000010, "Wrong size on BP_DeerV2_C_RepRandomBehavior");
static_assert(offsetof(BP_DeerV2_C_RepRandomBehavior, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_DeerV2_C_RepRandomBehavior::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RepRandomBehavior, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_DeerV2_C_RepRandomBehavior::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RepRandomBehavior, CallFunc_FMODPlayEventAttachedBullet_ReturnValue) == 0x000008, "Member 'BP_DeerV2_C_RepRandomBehavior::CallFunc_FMODPlayEventAttachedBullet_ReturnValue' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.RepRunFromDanger
// 0x0010 (0x0010 - 0x0000)
struct BP_DeerV2_C_RepRunFromDanger final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttachedBullet_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_RepRunFromDanger) == 0x000008, "Wrong alignment on BP_DeerV2_C_RepRunFromDanger");
static_assert(sizeof(BP_DeerV2_C_RepRunFromDanger) == 0x000010, "Wrong size on BP_DeerV2_C_RepRunFromDanger");
static_assert(offsetof(BP_DeerV2_C_RepRunFromDanger, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_DeerV2_C_RepRunFromDanger::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_RepRunFromDanger, CallFunc_FMODPlayEventAttachedBullet_ReturnValue) == 0x000008, "Member 'BP_DeerV2_C_RepRunFromDanger::CallFunc_FMODPlayEventAttachedBullet_ReturnValue' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.ResetDeer
// 0x0002 (0x0002 - 0x0000)
struct BP_DeerV2_C_ResetDeer final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_ResetDeer) == 0x000001, "Wrong alignment on BP_DeerV2_C_ResetDeer");
static_assert(sizeof(BP_DeerV2_C_ResetDeer) == 0x000002, "Wrong size on BP_DeerV2_C_ResetDeer");
static_assert(offsetof(BP_DeerV2_C_ResetDeer, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_DeerV2_C_ResetDeer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ResetDeer, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_DeerV2_C_ResetDeer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.ServerInitializeDeer
// 0x0038 (0x0038 - 0x0000)
struct BP_DeerV2_C_ServerInitializeDeer final
{
public:
	E_DeerSpawnType                               Param_DeerType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_ManagerIndex;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DeerV2_C_ServerInitializeDeer) == 0x000008, "Wrong alignment on BP_DeerV2_C_ServerInitializeDeer");
static_assert(sizeof(BP_DeerV2_C_ServerInitializeDeer) == 0x000038, "Wrong size on BP_DeerV2_C_ServerInitializeDeer");
static_assert(offsetof(BP_DeerV2_C_ServerInitializeDeer, Param_DeerType) == 0x000000, "Member 'BP_DeerV2_C_ServerInitializeDeer::Param_DeerType' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ServerInitializeDeer, Param_ManagerIndex) == 0x000004, "Member 'BP_DeerV2_C_ServerInitializeDeer::Param_ManagerIndex' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ServerInitializeDeer, Location) == 0x000008, "Member 'BP_DeerV2_C_ServerInitializeDeer::Location' has a wrong offset!");
static_assert(offsetof(BP_DeerV2_C_ServerInitializeDeer, Rotation) == 0x000020, "Member 'BP_DeerV2_C_ServerInitializeDeer::Rotation' has a wrong offset!");

// Function BP_DeerV2.BP_DeerV2_C.StartDeerLooking
// 0x0008 (0x0008 - 0x0000)
struct BP_DeerV2_C_StartDeerLooking final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DeerV2_C_StartDeerLooking) == 0x000008, "Wrong alignment on BP_DeerV2_C_StartDeerLooking");
static_assert(sizeof(BP_DeerV2_C_StartDeerLooking) == 0x000008, "Wrong size on BP_DeerV2_C_StartDeerLooking");
static_assert(offsetof(BP_DeerV2_C_StartDeerLooking, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'BP_DeerV2_C_StartDeerLooking::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

}

