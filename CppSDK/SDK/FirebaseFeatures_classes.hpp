#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FirebaseFeatures

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "FirebaseFeatures_structs.hpp"


namespace SDK
{

// Class FirebaseFeatures.AuthMiscLibrary
// 0x0000 (0x0028 - 0x0028)
class UAuthMiscLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FFederatedAuthProvider CreateOAuthProvider(const struct FFederatedOAuthProviderData& ProviderData);
	static class UUser* CurrentUser();
	static struct FCredential FromAppleSignCredential(const struct FAppleSignInCredential& Credential);
	static bool IsValid(const struct FCredential& Credential);
	static class FString Provider(const struct FCredential& Credential);
	static void SignOut();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AuthMiscLibrary">();
	}
	static class UAuthMiscLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAuthMiscLibrary>();
	}
};
static_assert(alignof(UAuthMiscLibrary) == 0x000008, "Wrong alignment on UAuthMiscLibrary");
static_assert(sizeof(UAuthMiscLibrary) == 0x000028, "Wrong size on UAuthMiscLibrary");

// Class FirebaseFeatures.UserNodeBase
// 0x0008 (0x0038 - 0x0030)
class UUserNodeBase : public UBlueprintAsyncActionBase
{
public:
	class UUser*                                  _User;                                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UserNodeBase">();
	}
	static class UUserNodeBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUserNodeBase>();
	}
};
static_assert(alignof(UUserNodeBase) == 0x000008, "Wrong alignment on UUserNodeBase");
static_assert(sizeof(UUserNodeBase) == 0x000038, "Wrong size on UUserNodeBase");
static_assert(offsetof(UUserNodeBase, _User) == 0x000030, "Member 'UUserNodeBase::_User' has a wrong offset!");

// Class FirebaseFeatures.ReauthenticateAndRetrieveDataProxy
// 0x0028 (0x0060 - 0x0038)
class UReauthenticateAndRetrieveDataProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnReauthenticated;                                 // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UReauthenticateAndRetrieveDataProxy* ReauthenticateAndRetrieveData(const class UUser* User, const struct FCredential& Credential);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReauthenticateAndRetrieveDataProxy">();
	}
	static class UReauthenticateAndRetrieveDataProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReauthenticateAndRetrieveDataProxy>();
	}
};
static_assert(alignof(UReauthenticateAndRetrieveDataProxy) == 0x000008, "Wrong alignment on UReauthenticateAndRetrieveDataProxy");
static_assert(sizeof(UReauthenticateAndRetrieveDataProxy) == 0x000060, "Wrong size on UReauthenticateAndRetrieveDataProxy");
static_assert(offsetof(UReauthenticateAndRetrieveDataProxy, OnReauthenticated) == 0x000038, "Member 'UReauthenticateAndRetrieveDataProxy::OnReauthenticated' has a wrong offset!");
static_assert(offsetof(UReauthenticateAndRetrieveDataProxy, OnError) == 0x000048, "Member 'UReauthenticateAndRetrieveDataProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.FetchProvidersForEmailProxy
// 0x0030 (0x0060 - 0x0030)
class UFetchProvidersForEmailProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnProvidersFetched;                                // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFetchProvidersForEmailProxy* FetchProvidersForEmail(const class FString& Email);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FetchProvidersForEmailProxy">();
	}
	static class UFetchProvidersForEmailProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFetchProvidersForEmailProxy>();
	}
};
static_assert(alignof(UFetchProvidersForEmailProxy) == 0x000008, "Wrong alignment on UFetchProvidersForEmailProxy");
static_assert(sizeof(UFetchProvidersForEmailProxy) == 0x000060, "Wrong size on UFetchProvidersForEmailProxy");
static_assert(offsetof(UFetchProvidersForEmailProxy, OnProvidersFetched) == 0x000030, "Member 'UFetchProvidersForEmailProxy::OnProvidersFetched' has a wrong offset!");
static_assert(offsetof(UFetchProvidersForEmailProxy, OnError) == 0x000040, "Member 'UFetchProvidersForEmailProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.SignInWithCustomTokenProxy
// 0x0030 (0x0060 - 0x0030)
class USignInWithCustomTokenProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSignedIn;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USignInWithCustomTokenProxy* SignInWithCustomToken(const class FString& Token);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SignInWithCustomTokenProxy">();
	}
	static class USignInWithCustomTokenProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USignInWithCustomTokenProxy>();
	}
};
static_assert(alignof(USignInWithCustomTokenProxy) == 0x000008, "Wrong alignment on USignInWithCustomTokenProxy");
static_assert(sizeof(USignInWithCustomTokenProxy) == 0x000060, "Wrong size on USignInWithCustomTokenProxy");
static_assert(offsetof(USignInWithCustomTokenProxy, OnSignedIn) == 0x000030, "Member 'USignInWithCustomTokenProxy::OnSignedIn' has a wrong offset!");
static_assert(offsetof(USignInWithCustomTokenProxy, OnError) == 0x000040, "Member 'USignInWithCustomTokenProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.GetAnalyticsInstanceIdProxy
// 0x0010 (0x0040 - 0x0030)
class UGetAnalyticsInstanceIdProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnInstanceIdReceived;                              // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UGetAnalyticsInstanceIdProxy* GetAnalyticsInstanceId();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GetAnalyticsInstanceIdProxy">();
	}
	static class UGetAnalyticsInstanceIdProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGetAnalyticsInstanceIdProxy>();
	}
};
static_assert(alignof(UGetAnalyticsInstanceIdProxy) == 0x000008, "Wrong alignment on UGetAnalyticsInstanceIdProxy");
static_assert(sizeof(UGetAnalyticsInstanceIdProxy) == 0x000040, "Wrong size on UGetAnalyticsInstanceIdProxy");
static_assert(offsetof(UGetAnalyticsInstanceIdProxy, OnInstanceIdReceived) == 0x000030, "Member 'UGetAnalyticsInstanceIdProxy::OnInstanceIdReceived' has a wrong offset!");

// Class FirebaseFeatures.User
// 0x0008 (0x0030 - 0x0028)
class UUser final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<struct FUserInfoInterface> ProviderData();

	class FString DisplayName() const;
	class FString Email() const;
	bool IsAnonymous() const;
	bool IsEmailVerified() const;
	struct FUserMetadata Metadata() const;
	class FString PhoneNumber() const;
	class FString PhotoUrl() const;
	class FString ProviderId() const;
	class FString Uid() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"User">();
	}
	static class UUser* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUser>();
	}
};
static_assert(alignof(UUser) == 0x000008, "Wrong alignment on UUser");
static_assert(sizeof(UUser) == 0x000030, "Wrong size on UUser");

// Class FirebaseFeatures.SignInWithCredentialProxy
// 0x0028 (0x0058 - 0x0030)
class USignInWithCredentialProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSignedIn;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USignInWithCredentialProxy* SignInWithCredential(const struct FCredential& Credential);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SignInWithCredentialProxy">();
	}
	static class USignInWithCredentialProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USignInWithCredentialProxy>();
	}
};
static_assert(alignof(USignInWithCredentialProxy) == 0x000008, "Wrong alignment on USignInWithCredentialProxy");
static_assert(sizeof(USignInWithCredentialProxy) == 0x000058, "Wrong size on USignInWithCredentialProxy");
static_assert(offsetof(USignInWithCredentialProxy, OnSignedIn) == 0x000030, "Member 'USignInWithCredentialProxy::OnSignedIn' has a wrong offset!");
static_assert(offsetof(USignInWithCredentialProxy, OnError) == 0x000040, "Member 'USignInWithCredentialProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.SignInWithProviderProxy
// 0x0030 (0x0060 - 0x0030)
class USignInWithProviderProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSignedIn;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USignInWithProviderProxy* SignInWithProvider(const struct FFederatedAuthProvider& AuthProvider);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SignInWithProviderProxy">();
	}
	static class USignInWithProviderProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USignInWithProviderProxy>();
	}
};
static_assert(alignof(USignInWithProviderProxy) == 0x000008, "Wrong alignment on USignInWithProviderProxy");
static_assert(sizeof(USignInWithProviderProxy) == 0x000060, "Wrong size on USignInWithProviderProxy");
static_assert(offsetof(USignInWithProviderProxy, OnSignedIn) == 0x000030, "Member 'USignInWithProviderProxy::OnSignedIn' has a wrong offset!");
static_assert(offsetof(USignInWithProviderProxy, OnError) == 0x000040, "Member 'USignInWithProviderProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.CreateInterstitialAd
// 0x0038 (0x0068 - 0x0030)
class UCreateInterstitialAd final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnInterstitialAdCreated;                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UInterstitialAd*                        Interstitial;                                      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCreateInterstitialAd* CreateInterstitialAd(const class FString& AdUnitId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreateInterstitialAd">();
	}
	static class UCreateInterstitialAd* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreateInterstitialAd>();
	}
};
static_assert(alignof(UCreateInterstitialAd) == 0x000008, "Wrong alignment on UCreateInterstitialAd");
static_assert(sizeof(UCreateInterstitialAd) == 0x000068, "Wrong size on UCreateInterstitialAd");
static_assert(offsetof(UCreateInterstitialAd, OnInterstitialAdCreated) == 0x000030, "Member 'UCreateInterstitialAd::OnInterstitialAdCreated' has a wrong offset!");
static_assert(offsetof(UCreateInterstitialAd, OnError) == 0x000040, "Member 'UCreateInterstitialAd::OnError' has a wrong offset!");
static_assert(offsetof(UCreateInterstitialAd, Interstitial) == 0x000050, "Member 'UCreateInterstitialAd::Interstitial' has a wrong offset!");

// Class FirebaseFeatures.FirebaseStorageNodeProxyBase
// 0x0008 (0x0038 - 0x0030)
class UFirebaseStorageNodeProxyBase : public UBlueprintAsyncActionBase
{
public:
	class UFirebaseStorageReference*              _Reference;                                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseStorageNodeProxyBase">();
	}
	static class UFirebaseStorageNodeProxyBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseStorageNodeProxyBase>();
	}
};
static_assert(alignof(UFirebaseStorageNodeProxyBase) == 0x000008, "Wrong alignment on UFirebaseStorageNodeProxyBase");
static_assert(sizeof(UFirebaseStorageNodeProxyBase) == 0x000038, "Wrong size on UFirebaseStorageNodeProxyBase");
static_assert(offsetof(UFirebaseStorageNodeProxyBase, _Reference) == 0x000030, "Member 'UFirebaseStorageNodeProxyBase::_Reference' has a wrong offset!");

// Class FirebaseFeatures.StorageUpdateMetadataProxy
// 0x0028 (0x0060 - 0x0038)
class UStorageUpdateMetadataProxy final : public UFirebaseStorageNodeProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnMetadataUpdated;                                 // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UStorageUpdateMetadataProxy* UpdateMetadata(class UFirebaseStorageReference* StorageReference, const struct FFirebaseStorageMetadata& Metadata);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StorageUpdateMetadataProxy">();
	}
	static class UStorageUpdateMetadataProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStorageUpdateMetadataProxy>();
	}
};
static_assert(alignof(UStorageUpdateMetadataProxy) == 0x000008, "Wrong alignment on UStorageUpdateMetadataProxy");
static_assert(sizeof(UStorageUpdateMetadataProxy) == 0x000060, "Wrong size on UStorageUpdateMetadataProxy");
static_assert(offsetof(UStorageUpdateMetadataProxy, OnMetadataUpdated) == 0x000038, "Member 'UStorageUpdateMetadataProxy::OnMetadataUpdated' has a wrong offset!");
static_assert(offsetof(UStorageUpdateMetadataProxy, OnError) == 0x000048, "Member 'UStorageUpdateMetadataProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.SignInAndRetrieveDataWithCredentialProxy
// 0x0028 (0x0058 - 0x0030)
class USignInAndRetrieveDataWithCredentialProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSignedIn;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USignInAndRetrieveDataWithCredentialProxy* SignInAndRetrieveDataWithCredential(const struct FCredential& Credential);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SignInAndRetrieveDataWithCredentialProxy">();
	}
	static class USignInAndRetrieveDataWithCredentialProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USignInAndRetrieveDataWithCredentialProxy>();
	}
};
static_assert(alignof(USignInAndRetrieveDataWithCredentialProxy) == 0x000008, "Wrong alignment on USignInAndRetrieveDataWithCredentialProxy");
static_assert(sizeof(USignInAndRetrieveDataWithCredentialProxy) == 0x000058, "Wrong size on USignInAndRetrieveDataWithCredentialProxy");
static_assert(offsetof(USignInAndRetrieveDataWithCredentialProxy, OnSignedIn) == 0x000030, "Member 'USignInAndRetrieveDataWithCredentialProxy::OnSignedIn' has a wrong offset!");
static_assert(offsetof(USignInAndRetrieveDataWithCredentialProxy, OnError) == 0x000040, "Member 'USignInAndRetrieveDataWithCredentialProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DisconnectionHandlerProxybase
// 0x0008 (0x0038 - 0x0030)
class UDisconnectionHandlerProxybase : public UBlueprintAsyncActionBase
{
public:
	class UDisconnectionHandler*                  Handler;                                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisconnectionHandlerProxybase">();
	}
	static class UDisconnectionHandlerProxybase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisconnectionHandlerProxybase>();
	}
};
static_assert(alignof(UDisconnectionHandlerProxybase) == 0x000008, "Wrong alignment on UDisconnectionHandlerProxybase");
static_assert(sizeof(UDisconnectionHandlerProxybase) == 0x000038, "Wrong size on UDisconnectionHandlerProxybase");
static_assert(offsetof(UDisconnectionHandlerProxybase, Handler) == 0x000030, "Member 'UDisconnectionHandlerProxybase::Handler' has a wrong offset!");

// Class FirebaseFeatures.SignInAnonymouslyProxy
// 0x0020 (0x0050 - 0x0030)
class USignInAnonymouslyProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSignedIn;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class USignInAnonymouslyProxy* SignInAnonymously();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SignInAnonymouslyProxy">();
	}
	static class USignInAnonymouslyProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USignInAnonymouslyProxy>();
	}
};
static_assert(alignof(USignInAnonymouslyProxy) == 0x000008, "Wrong alignment on USignInAnonymouslyProxy");
static_assert(sizeof(USignInAnonymouslyProxy) == 0x000050, "Wrong size on USignInAnonymouslyProxy");
static_assert(offsetof(USignInAnonymouslyProxy, OnSignedIn) == 0x000030, "Member 'USignInAnonymouslyProxy::OnSignedIn' has a wrong offset!");
static_assert(offsetof(USignInAnonymouslyProxy, OnError) == 0x000040, "Member 'USignInAnonymouslyProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.UpdatePasswordProxy
// 0x0030 (0x0068 - 0x0038)
class UUpdatePasswordProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnPasswordUpdated;                                 // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UUpdatePasswordProxy* UpdatePassword(const class UUser* User, const class FString& Password);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UpdatePasswordProxy">();
	}
	static class UUpdatePasswordProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUpdatePasswordProxy>();
	}
};
static_assert(alignof(UUpdatePasswordProxy) == 0x000008, "Wrong alignment on UUpdatePasswordProxy");
static_assert(sizeof(UUpdatePasswordProxy) == 0x000068, "Wrong size on UUpdatePasswordProxy");
static_assert(offsetof(UUpdatePasswordProxy, OnPasswordUpdated) == 0x000038, "Member 'UUpdatePasswordProxy::OnPasswordUpdated' has a wrong offset!");
static_assert(offsetof(UUpdatePasswordProxy, OnError) == 0x000048, "Member 'UUpdatePasswordProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.SignInWithEmailAndPasswordProxy
// 0x0040 (0x0070 - 0x0030)
class USignInWithEmailAndPasswordProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSignedIn;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x20];                                      // 0x0050(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USignInWithEmailAndPasswordProxy* SignInWithEmailAndPassword(const class FString& Email, const class FString& Password);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SignInWithEmailAndPasswordProxy">();
	}
	static class USignInWithEmailAndPasswordProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USignInWithEmailAndPasswordProxy>();
	}
};
static_assert(alignof(USignInWithEmailAndPasswordProxy) == 0x000008, "Wrong alignment on USignInWithEmailAndPasswordProxy");
static_assert(sizeof(USignInWithEmailAndPasswordProxy) == 0x000070, "Wrong size on USignInWithEmailAndPasswordProxy");
static_assert(offsetof(USignInWithEmailAndPasswordProxy, OnSignedIn) == 0x000030, "Member 'USignInWithEmailAndPasswordProxy::OnSignedIn' has a wrong offset!");
static_assert(offsetof(USignInWithEmailAndPasswordProxy, OnError) == 0x000040, "Member 'USignInWithEmailAndPasswordProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.CrashlyticsLibrary
// 0x0000 (0x0028 - 0x0028)
class UCrashlyticsLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void CrashApplication();
	static void DeleteUnsentReports();
	static bool DidCrashDuringPreviousExecution();
	static bool IsCrashlyticsCollectionEnabled();
	static void Log(const class FString& Message);
	static void RecordError(const class FString& Domain, const class FString& Message, const int64 Code);
	static void SendUnsentReports();
	static void SetCrashlyticsCollectionEnabled(bool bEnabled);
	static void SetCustomBoolValue(const class FString& Key, const bool Value);
	static void SetCustomFloatValue(const class FString& Key, const float Value);
	static void SetCustomInt32Value(const class FString& Key, const int32 Value);
	static void SetCustomInt64Value(const class FString& Key, const int64 Value);
	static void SetCustomStringValue(const class FString& Key, const class FString& Value);
	static void SetCustomVectorValue(const class FString& Key, const struct FVector& Value);
	static void SetUserID(const class FString& UserId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrashlyticsLibrary">();
	}
	static class UCrashlyticsLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrashlyticsLibrary>();
	}
};
static_assert(alignof(UCrashlyticsLibrary) == 0x000008, "Wrong alignment on UCrashlyticsLibrary");
static_assert(sizeof(UCrashlyticsLibrary) == 0x000028, "Wrong size on UCrashlyticsLibrary");

// Class FirebaseFeatures.CreateUserWithEmailAndPasswordProxy
// 0x0040 (0x0070 - 0x0030)
class UCreateUserWithEmailAndPasswordProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnUserCreated;                                     // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x20];                                      // 0x0050(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCreateUserWithEmailAndPasswordProxy* CreateUserWithEmailAndPassword(const class FString& Email, const class FString& Password);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreateUserWithEmailAndPasswordProxy">();
	}
	static class UCreateUserWithEmailAndPasswordProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreateUserWithEmailAndPasswordProxy>();
	}
};
static_assert(alignof(UCreateUserWithEmailAndPasswordProxy) == 0x000008, "Wrong alignment on UCreateUserWithEmailAndPasswordProxy");
static_assert(sizeof(UCreateUserWithEmailAndPasswordProxy) == 0x000070, "Wrong size on UCreateUserWithEmailAndPasswordProxy");
static_assert(offsetof(UCreateUserWithEmailAndPasswordProxy, OnUserCreated) == 0x000030, "Member 'UCreateUserWithEmailAndPasswordProxy::OnUserCreated' has a wrong offset!");
static_assert(offsetof(UCreateUserWithEmailAndPasswordProxy, OnError) == 0x000040, "Member 'UCreateUserWithEmailAndPasswordProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.UpdatePhoneNumberCredentialProxy
// 0x0028 (0x0060 - 0x0038)
class UUpdatePhoneNumberCredentialProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnUpdated;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UUpdatePhoneNumberCredentialProxy* UpdatePhoneNumberCredential(const class UUser* User, const struct FCredential& Credential);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UpdatePhoneNumberCredentialProxy">();
	}
	static class UUpdatePhoneNumberCredentialProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUpdatePhoneNumberCredentialProxy>();
	}
};
static_assert(alignof(UUpdatePhoneNumberCredentialProxy) == 0x000008, "Wrong alignment on UUpdatePhoneNumberCredentialProxy");
static_assert(sizeof(UUpdatePhoneNumberCredentialProxy) == 0x000060, "Wrong size on UUpdatePhoneNumberCredentialProxy");
static_assert(offsetof(UUpdatePhoneNumberCredentialProxy, OnUpdated) == 0x000038, "Member 'UUpdatePhoneNumberCredentialProxy::OnUpdated' has a wrong offset!");
static_assert(offsetof(UUpdatePhoneNumberCredentialProxy, OnError) == 0x000048, "Member 'UUpdatePhoneNumberCredentialProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.SendPasswordResetEmailProxy
// 0x0030 (0x0060 - 0x0030)
class USendPasswordResetEmailProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnEmailSent;                                       // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USendPasswordResetEmailProxy* SendPasswordResetEmail(const class FString& Email);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SendPasswordResetEmailProxy">();
	}
	static class USendPasswordResetEmailProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USendPasswordResetEmailProxy>();
	}
};
static_assert(alignof(USendPasswordResetEmailProxy) == 0x000008, "Wrong alignment on USendPasswordResetEmailProxy");
static_assert(sizeof(USendPasswordResetEmailProxy) == 0x000060, "Wrong size on USendPasswordResetEmailProxy");
static_assert(offsetof(USendPasswordResetEmailProxy, OnEmailSent) == 0x000030, "Member 'USendPasswordResetEmailProxy::OnEmailSent' has a wrong offset!");
static_assert(offsetof(USendPasswordResetEmailProxy, OnError) == 0x000040, "Member 'USendPasswordResetEmailProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.ListenAuthEventsProxy
// 0x0020 (0x0050 - 0x0030)
class UListenAuthEventsProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnAuthChanged;                                     // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnIdTokenChanged;                                  // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UListenAuthEventsProxy* ListenAuthEvents();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ListenAuthEventsProxy">();
	}
	static class UListenAuthEventsProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UListenAuthEventsProxy>();
	}
};
static_assert(alignof(UListenAuthEventsProxy) == 0x000008, "Wrong alignment on UListenAuthEventsProxy");
static_assert(sizeof(UListenAuthEventsProxy) == 0x000050, "Wrong size on UListenAuthEventsProxy");
static_assert(offsetof(UListenAuthEventsProxy, OnAuthChanged) == 0x000030, "Member 'UListenAuthEventsProxy::OnAuthChanged' has a wrong offset!");
static_assert(offsetof(UListenAuthEventsProxy, OnIdTokenChanged) == 0x000040, "Member 'UListenAuthEventsProxy::OnIdTokenChanged' has a wrong offset!");

// Class FirebaseFeatures.SendEmailVerificationProxy
// 0x0020 (0x0058 - 0x0038)
class USendEmailVerificationProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnEmailSent;                                       // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class USendEmailVerificationProxy* SendEmailVerification(const class UUser* User);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SendEmailVerificationProxy">();
	}
	static class USendEmailVerificationProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USendEmailVerificationProxy>();
	}
};
static_assert(alignof(USendEmailVerificationProxy) == 0x000008, "Wrong alignment on USendEmailVerificationProxy");
static_assert(sizeof(USendEmailVerificationProxy) == 0x000058, "Wrong size on USendEmailVerificationProxy");
static_assert(offsetof(USendEmailVerificationProxy, OnEmailSent) == 0x000038, "Member 'USendEmailVerificationProxy::OnEmailSent' has a wrong offset!");
static_assert(offsetof(USendEmailVerificationProxy, OnError) == 0x000048, "Member 'USendEmailVerificationProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.AppleSignInGetCred
// 0x0030 (0x0060 - 0x0030)
class UAppleSignInGetCred final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAppleSignInGetCred* GetCredential(const class FString& Nonce);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AppleSignInGetCred">();
	}
	static class UAppleSignInGetCred* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppleSignInGetCred>();
	}
};
static_assert(alignof(UAppleSignInGetCred) == 0x000008, "Wrong alignment on UAppleSignInGetCred");
static_assert(sizeof(UAppleSignInGetCred) == 0x000060, "Wrong size on UAppleSignInGetCred");
static_assert(offsetof(UAppleSignInGetCred, OnSuccess) == 0x000030, "Member 'UAppleSignInGetCred::OnSuccess' has a wrong offset!");
static_assert(offsetof(UAppleSignInGetCred, OnError) == 0x000040, "Member 'UAppleSignInGetCred::OnError' has a wrong offset!");

// Class FirebaseFeatures.Database
// 0x0010 (0x0038 - 0x0028)
class UDatabase final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDatabase* GetInstance();
	static class UDatabase* GetInstanceFromUrl(const class FString& URL);
	static class UDatabaseReference* GetInstanceReference();

	class FString GetUrl();
	void GoOffline();
	void GoOnline();
	void PurgeOutstandingWrites();
	void SetLogLevel(const EDatabaseLogLevel DatabaseLogLevel);
	void SetPersistenceEnabled(const bool bEnabled);

	class UDatabaseReference* GetReference() const;
	class UDatabaseReference* GetReferenceFromPath(const class FString& Path) const;
	class UDatabaseReference* GetReferenceFromUrl(const class FString& URL) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Database">();
	}
	static class UDatabase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDatabase>();
	}
};
static_assert(alignof(UDatabase) == 0x000008, "Wrong alignment on UDatabase");
static_assert(sizeof(UDatabase) == 0x000038, "Wrong size on UDatabase");

// Class FirebaseFeatures.AppleSignInGetNativeCred
// 0x0030 (0x0060 - 0x0030)
class UAppleSignInGetNativeCred final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UAppleSignInGetNativeCred* GetCredential(const class FString& Nonce);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AppleSignInGetNativeCred">();
	}
	static class UAppleSignInGetNativeCred* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppleSignInGetNativeCred>();
	}
};
static_assert(alignof(UAppleSignInGetNativeCred) == 0x000008, "Wrong alignment on UAppleSignInGetNativeCred");
static_assert(sizeof(UAppleSignInGetNativeCred) == 0x000060, "Wrong size on UAppleSignInGetNativeCred");
static_assert(offsetof(UAppleSignInGetNativeCred, OnSuccess) == 0x000030, "Member 'UAppleSignInGetNativeCred::OnSuccess' has a wrong offset!");
static_assert(offsetof(UAppleSignInGetNativeCred, OnError) == 0x000040, "Member 'UAppleSignInGetNativeCred::OnError' has a wrong offset!");

// Class FirebaseFeatures.FirebaseAppCheckLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebaseAppCheckLibrary final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseAppCheckLibrary">();
	}
	static class UFirebaseAppCheckLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseAppCheckLibrary>();
	}
};
static_assert(alignof(UFirebaseAppCheckLibrary) == 0x000008, "Wrong alignment on UFirebaseAppCheckLibrary");
static_assert(sizeof(UFirebaseAppCheckLibrary) == 0x000028, "Wrong size on UFirebaseAppCheckLibrary");

// Class FirebaseFeatures.GetTokenProxy
// 0x0028 (0x0060 - 0x0038)
class UGetTokenProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnTokenReceived;                                   // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UGetTokenProxy* GetToken(const class UUser* User, const bool bForceRefresh);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GetTokenProxy">();
	}
	static class UGetTokenProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGetTokenProxy>();
	}
};
static_assert(alignof(UGetTokenProxy) == 0x000008, "Wrong alignment on UGetTokenProxy");
static_assert(sizeof(UGetTokenProxy) == 0x000060, "Wrong size on UGetTokenProxy");
static_assert(offsetof(UGetTokenProxy, OnTokenReceived) == 0x000038, "Member 'UGetTokenProxy::OnTokenReceived' has a wrong offset!");
static_assert(offsetof(UGetTokenProxy, OnError) == 0x000048, "Member 'UGetTokenProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.FirestoreQuery
// 0x0008 (0x0030 - 0x0028)
class UFirestoreQuery : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FQuerySnapshotListenerHandle AddSnapshotListener(TDelegate<void(EFirestoreError Error, TArray<struct FFirestoreDocumentSnapshot>& DocumentSnapshots, TArray<class UFirestoreDocumentChange*>& DocumentChanges)> Listener);
	class UFirestoreQuery* EndAt(const struct FFirestoreDocumentSnapshot& Snapshot);
	class UFirestoreQuery* EndAtValues(const TArray<struct FFirestoreFieldValue>& Values);
	class UFirestoreQuery* EndBefore(const struct FFirestoreDocumentSnapshot& Snapshot);
	class UFirestoreQuery* EndBeforeFieldValue(const TArray<struct FFirestoreFieldValue>& Values);
	class UFirestoreQuery* Limit(int32 Param_Limit);
	class UFirestoreQuery* LimitToLast(int32 Limit);
	class UFirestoreQuery* OrderBy(const class FString& Field, EFirestoreQueryDirection Direction);
	class UFirestoreQuery* OrderByFieldPath(const struct FFirestoreFieldPath& Field, EFirestoreQueryDirection Direction);
	class UFirestoreQuery* StartAfter(const struct FFirestoreDocumentSnapshot& Snapshot);
	class UFirestoreQuery* StartAfterFieldValue(const TArray<struct FFirestoreFieldValue>& Values);
	class UFirestoreQuery* StartAt(const struct FFirestoreDocumentSnapshot& Snapshot);
	class UFirestoreQuery* StartAtFieldValue(const TArray<struct FFirestoreFieldValue>& Values);
	class UFirestoreQuery* WhereArrayContains(const class FString& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereArrayContainsAny(const class FString& Field, const TArray<struct FFirestoreFieldValue>& Values);
	class UFirestoreQuery* WhereArrayContainsAnyFielPath(const struct FFirestoreFieldPath& Field, const TArray<struct FFirestoreFieldValue>& Values);
	class UFirestoreQuery* WhereArrayContainsFieldPath(const struct FFirestoreFieldPath& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereEqualTo(const class FString& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereEqualToFieldPath(const struct FFirestoreFieldPath& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereGreaterThan(const class FString& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereGreaterThanFieldPath(const struct FFirestoreFieldPath& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereGreaterThanOrEqualTo(const class FString& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereGreaterThanOrEqualToFielPath(const struct FFirestoreFieldPath& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereIn(const class FString& Field, const TArray<struct FFirestoreFieldValue>& Values);
	class UFirestoreQuery* WhereInFieldPath(const struct FFirestoreFieldPath& Field, const TArray<struct FFirestoreFieldValue>& Values);
	class UFirestoreQuery* WhereLessThan(const class FString& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereLessThanFieldPath(const struct FFirestoreFieldPath& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereLessThanOrEqualTo(const class FString& Field, const struct FFirestoreFieldValue& Value);
	class UFirestoreQuery* WhereLessThanOrEqualToFieldPath(const struct FFirestoreFieldPath& Field, const struct FFirestoreFieldValue& Value);

	bool IsValid() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirestoreQuery">();
	}
	static class UFirestoreQuery* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirestoreQuery>();
	}
};
static_assert(alignof(UFirestoreQuery) == 0x000008, "Wrong alignment on UFirestoreQuery");
static_assert(sizeof(UFirestoreQuery) == 0x000030, "Wrong size on UFirestoreQuery");

// Class FirebaseFeatures.FirestoreCollectionReference
// 0x0000 (0x0030 - 0x0030)
class UFirestoreCollectionReference final : public UFirestoreQuery
{
public:
	class UFirestoreDocumentReference* GetDocument() const;
	class UFirestoreDocumentReference* GetDocumentFromPath(const class FString& DocumentPath) const;
	class FString GetId() const;
	class UFirestoreDocumentReference* GetParent() const;
	class FString GetPath() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirestoreCollectionReference">();
	}
	static class UFirestoreCollectionReference* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirestoreCollectionReference>();
	}
};
static_assert(alignof(UFirestoreCollectionReference) == 0x000008, "Wrong alignment on UFirestoreCollectionReference");
static_assert(sizeof(UFirestoreCollectionReference) == 0x000030, "Wrong size on UFirestoreCollectionReference");

// Class FirebaseFeatures.CredentialLibrary
// 0x0000 (0x0028 - 0x0028)
class UCredentialLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FCredential GetCredential(const class FString& VerificationId, const class FString& VerificationCode);
	static struct FCredential GetCredentialFromEmail(const class FString& Email, const class FString& Password);
	static struct FCredential GetCredentialFromFacebook(const class FString& AccessToken);
	static struct FCredential GetCredentialFromGitHub(const class FString& Token);
	static struct FCredential GetCredentialFromGoogle(const class FString& Token, const class FString& AccessToken);
	static struct FCredential GetCredentialFromOAuth(const class FString& ProviderId, const class FString& IdToken, const class FString& AccessToken);
	static struct FCredential GetCredentialFromOAuthWithOnce(const class FString& ProviderId, const class FString& IdToken, const class FString& Nonce, const class FString& AccessToken);
	static struct FCredential GetCredentialFromPlayGames(const class FString& ServerAuthCode);
	static struct FCredential GetCredentialFromTwitter(const class FString& Token, const class FString& Secret);
	static bool IsAuthenticatedWithGameCenter();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CredentialLibrary">();
	}
	static class UCredentialLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCredentialLibrary>();
	}
};
static_assert(alignof(UCredentialLibrary) == 0x000008, "Wrong alignment on UCredentialLibrary");
static_assert(sizeof(UCredentialLibrary) == 0x000028, "Wrong size on UCredentialLibrary");

// Class FirebaseFeatures.GetCredentialFromGameCenterProxy
// 0x0020 (0x0050 - 0x0030)
class UGetCredentialFromGameCenterProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UGetCredentialFromGameCenterProxy* GetCredentialFromGameCenter();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GetCredentialFromGameCenterProxy">();
	}
	static class UGetCredentialFromGameCenterProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGetCredentialFromGameCenterProxy>();
	}
};
static_assert(alignof(UGetCredentialFromGameCenterProxy) == 0x000008, "Wrong alignment on UGetCredentialFromGameCenterProxy");
static_assert(sizeof(UGetCredentialFromGameCenterProxy) == 0x000050, "Wrong size on UGetCredentialFromGameCenterProxy");
static_assert(offsetof(UGetCredentialFromGameCenterProxy, OnSuccess) == 0x000030, "Member 'UGetCredentialFromGameCenterProxy::OnSuccess' has a wrong offset!");
static_assert(offsetof(UGetCredentialFromGameCenterProxy, OnError) == 0x000040, "Member 'UGetCredentialFromGameCenterProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.VerifyPhoneNumberProxy
// 0x0060 (0x0090 - 0x0030)
class UVerifyPhoneNumberProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnVerificationCompleted;                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnVerificationFailed;                              // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnCodeSent;                                        // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnCodeRetrievalTimeout;                            // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x20];                                      // 0x0070(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UVerifyPhoneNumberProxy* VerifyPhoneNumber(const class FString& PhoneNumber, const int64 AutoVerifyTimeoutInMilliseconds, const struct FForceResendingToken& ForceResendingToken);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VerifyPhoneNumberProxy">();
	}
	static class UVerifyPhoneNumberProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVerifyPhoneNumberProxy>();
	}
};
static_assert(alignof(UVerifyPhoneNumberProxy) == 0x000008, "Wrong alignment on UVerifyPhoneNumberProxy");
static_assert(sizeof(UVerifyPhoneNumberProxy) == 0x000090, "Wrong size on UVerifyPhoneNumberProxy");
static_assert(offsetof(UVerifyPhoneNumberProxy, OnVerificationCompleted) == 0x000030, "Member 'UVerifyPhoneNumberProxy::OnVerificationCompleted' has a wrong offset!");
static_assert(offsetof(UVerifyPhoneNumberProxy, OnVerificationFailed) == 0x000040, "Member 'UVerifyPhoneNumberProxy::OnVerificationFailed' has a wrong offset!");
static_assert(offsetof(UVerifyPhoneNumberProxy, OnCodeSent) == 0x000050, "Member 'UVerifyPhoneNumberProxy::OnCodeSent' has a wrong offset!");
static_assert(offsetof(UVerifyPhoneNumberProxy, OnCodeRetrievalTimeout) == 0x000060, "Member 'UVerifyPhoneNumberProxy::OnCodeRetrievalTimeout' has a wrong offset!");

// Class FirebaseFeatures.FirebaseDatabaseLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebaseDatabaseLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FMutableData Mutable_GetChild(struct FMutableData& MutableData, const class FString& Path);
	static TArray<struct FMutableData> Mutable_GetChildren(struct FMutableData& MutableData);
	static int64 Mutable_GetChildrenCount(struct FMutableData& MutableData);
	static class FString Mutable_GetKey(const struct FMutableData& MutableData);
	static struct FFirebaseVariant Mutable_GetPriority(struct FMutableData& MutableData);
	static struct FFirebaseVariant Mutable_GetValue(const struct FMutableData& MutableData);
	static bool Mutable_HasChild(const struct FMutableData& MutableData, const class FString& Path);
	static void Mutable_SetPriority(struct FMutableData& MutableData, const struct FFirebaseVariant& Priority);
	static void Mutable_SetValue(struct FMutableData& MutableData, const struct FFirebaseVariant& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseDatabaseLibrary">();
	}
	static class UFirebaseDatabaseLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseDatabaseLibrary>();
	}
};
static_assert(alignof(UFirebaseDatabaseLibrary) == 0x000008, "Wrong alignment on UFirebaseDatabaseLibrary");
static_assert(sizeof(UFirebaseDatabaseLibrary) == 0x000028, "Wrong size on UFirebaseDatabaseLibrary");

// Class FirebaseFeatures.DisconnectionCancelProxy
// 0x0020 (0x0058 - 0x0038)
class UDisconnectionCancelProxy final : public UDisconnectionHandlerProxybase
{
public:
	FMulticastInlineDelegateProperty_             OnCanceled;                                        // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UDisconnectionCancelProxy* Cancel(const class UDisconnectionHandler* DisconnectionHandler);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisconnectionCancelProxy">();
	}
	static class UDisconnectionCancelProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisconnectionCancelProxy>();
	}
};
static_assert(alignof(UDisconnectionCancelProxy) == 0x000008, "Wrong alignment on UDisconnectionCancelProxy");
static_assert(sizeof(UDisconnectionCancelProxy) == 0x000058, "Wrong size on UDisconnectionCancelProxy");
static_assert(offsetof(UDisconnectionCancelProxy, OnCanceled) == 0x000038, "Member 'UDisconnectionCancelProxy::OnCanceled' has a wrong offset!");
static_assert(offsetof(UDisconnectionCancelProxy, OnError) == 0x000048, "Member 'UDisconnectionCancelProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DisconnectionRemoveValueProxy
// 0x0020 (0x0058 - 0x0038)
class UDisconnectionRemoveValueProxy final : public UDisconnectionHandlerProxybase
{
public:
	FMulticastInlineDelegateProperty_             OnRemoved;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UDisconnectionRemoveValueProxy* RemoveValue(const class UDisconnectionHandler* DisconnectionHandler);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisconnectionRemoveValueProxy">();
	}
	static class UDisconnectionRemoveValueProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisconnectionRemoveValueProxy>();
	}
};
static_assert(alignof(UDisconnectionRemoveValueProxy) == 0x000008, "Wrong alignment on UDisconnectionRemoveValueProxy");
static_assert(sizeof(UDisconnectionRemoveValueProxy) == 0x000058, "Wrong size on UDisconnectionRemoveValueProxy");
static_assert(offsetof(UDisconnectionRemoveValueProxy, OnRemoved) == 0x000038, "Member 'UDisconnectionRemoveValueProxy::OnRemoved' has a wrong offset!");
static_assert(offsetof(UDisconnectionRemoveValueProxy, OnError) == 0x000048, "Member 'UDisconnectionRemoveValueProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DisconnectionSetValueProxy
// 0x0038 (0x0070 - 0x0038)
class UDisconnectionSetValueProxy final : public UDisconnectionHandlerProxybase
{
public:
	FMulticastInlineDelegateProperty_             OnSet;                                             // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDisconnectionSetValueProxy* SetValue(const class UDisconnectionHandler* DisconnectionHandler, const struct FFirebaseVariant& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisconnectionSetValueProxy">();
	}
	static class UDisconnectionSetValueProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisconnectionSetValueProxy>();
	}
};
static_assert(alignof(UDisconnectionSetValueProxy) == 0x000008, "Wrong alignment on UDisconnectionSetValueProxy");
static_assert(sizeof(UDisconnectionSetValueProxy) == 0x000070, "Wrong size on UDisconnectionSetValueProxy");
static_assert(offsetof(UDisconnectionSetValueProxy, OnSet) == 0x000038, "Member 'UDisconnectionSetValueProxy::OnSet' has a wrong offset!");
static_assert(offsetof(UDisconnectionSetValueProxy, OnError) == 0x000048, "Member 'UDisconnectionSetValueProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DisconnectionSetValueAndPriorityProxy
// 0x0050 (0x0088 - 0x0038)
class UDisconnectionSetValueAndPriorityProxy final : public UDisconnectionHandlerProxybase
{
public:
	FMulticastInlineDelegateProperty_             OnSet;                                             // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x30];                                      // 0x0058(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDisconnectionSetValueAndPriorityProxy* SetValueAndPriority(const class UDisconnectionHandler* DisconnectionHandler, const struct FFirebaseVariant& Value, const struct FFirebaseVariant& Priority);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisconnectionSetValueAndPriorityProxy">();
	}
	static class UDisconnectionSetValueAndPriorityProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisconnectionSetValueAndPriorityProxy>();
	}
};
static_assert(alignof(UDisconnectionSetValueAndPriorityProxy) == 0x000008, "Wrong alignment on UDisconnectionSetValueAndPriorityProxy");
static_assert(sizeof(UDisconnectionSetValueAndPriorityProxy) == 0x000088, "Wrong size on UDisconnectionSetValueAndPriorityProxy");
static_assert(offsetof(UDisconnectionSetValueAndPriorityProxy, OnSet) == 0x000038, "Member 'UDisconnectionSetValueAndPriorityProxy::OnSet' has a wrong offset!");
static_assert(offsetof(UDisconnectionSetValueAndPriorityProxy, OnError) == 0x000048, "Member 'UDisconnectionSetValueAndPriorityProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DisconnectionUpdateChildrenProxy
// 0x0038 (0x0070 - 0x0038)
class UDisconnectionUpdateChildrenProxy final : public UDisconnectionHandlerProxybase
{
public:
	FMulticastInlineDelegateProperty_             OnUpdated;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDisconnectionUpdateChildrenProxy* UpdateChildren(const class UDisconnectionHandler* DisconnectionHandler, const struct FFirebaseVariant& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisconnectionUpdateChildrenProxy">();
	}
	static class UDisconnectionUpdateChildrenProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisconnectionUpdateChildrenProxy>();
	}
};
static_assert(alignof(UDisconnectionUpdateChildrenProxy) == 0x000008, "Wrong alignment on UDisconnectionUpdateChildrenProxy");
static_assert(sizeof(UDisconnectionUpdateChildrenProxy) == 0x000070, "Wrong size on UDisconnectionUpdateChildrenProxy");
static_assert(offsetof(UDisconnectionUpdateChildrenProxy, OnUpdated) == 0x000038, "Member 'UDisconnectionUpdateChildrenProxy::OnUpdated' has a wrong offset!");
static_assert(offsetof(UDisconnectionUpdateChildrenProxy, OnError) == 0x000048, "Member 'UDisconnectionUpdateChildrenProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DatabaseQueryGetValue
// 0x0028 (0x0058 - 0x0030)
class UDatabaseQueryGetValue final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnDataReceived;                                    // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDatabaseQuery*                         Query;                                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UDatabaseQueryGetValue* GetValue(const class UDatabaseQuery* DatabaseQuery);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DatabaseQueryGetValue">();
	}
	static class UDatabaseQueryGetValue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDatabaseQueryGetValue>();
	}
};
static_assert(alignof(UDatabaseQueryGetValue) == 0x000008, "Wrong alignment on UDatabaseQueryGetValue");
static_assert(sizeof(UDatabaseQueryGetValue) == 0x000058, "Wrong size on UDatabaseQueryGetValue");
static_assert(offsetof(UDatabaseQueryGetValue, OnDataReceived) == 0x000030, "Member 'UDatabaseQueryGetValue::OnDataReceived' has a wrong offset!");
static_assert(offsetof(UDatabaseQueryGetValue, OnError) == 0x000040, "Member 'UDatabaseQueryGetValue::OnError' has a wrong offset!");
static_assert(offsetof(UDatabaseQueryGetValue, Query) == 0x000050, "Member 'UDatabaseQueryGetValue::Query' has a wrong offset!");

// Class FirebaseFeatures.DatabaseReferenceProxyBase
// 0x0008 (0x0038 - 0x0030)
class UDatabaseReferenceProxyBase : public UBlueprintAsyncActionBase
{
public:
	class UDatabaseReference*                     Reference;                                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DatabaseReferenceProxyBase">();
	}
	static class UDatabaseReferenceProxyBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDatabaseReferenceProxyBase>();
	}
};
static_assert(alignof(UDatabaseReferenceProxyBase) == 0x000008, "Wrong alignment on UDatabaseReferenceProxyBase");
static_assert(sizeof(UDatabaseReferenceProxyBase) == 0x000038, "Wrong size on UDatabaseReferenceProxyBase");
static_assert(offsetof(UDatabaseReferenceProxyBase, Reference) == 0x000030, "Member 'UDatabaseReferenceProxyBase::Reference' has a wrong offset!");

// Class FirebaseFeatures.RemoveValueProxy
// 0x0020 (0x0058 - 0x0038)
class URemoveValueProxy final : public UDatabaseReferenceProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnRemoved;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class URemoveValueProxy* RemoveValue(const class UDatabaseReference* DatabaseReference);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemoveValueProxy">();
	}
	static class URemoveValueProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoveValueProxy>();
	}
};
static_assert(alignof(URemoveValueProxy) == 0x000008, "Wrong alignment on URemoveValueProxy");
static_assert(sizeof(URemoveValueProxy) == 0x000058, "Wrong size on URemoveValueProxy");
static_assert(offsetof(URemoveValueProxy, OnRemoved) == 0x000038, "Member 'URemoveValueProxy::OnRemoved' has a wrong offset!");
static_assert(offsetof(URemoveValueProxy, OnError) == 0x000048, "Member 'URemoveValueProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.RunTransactionProxy
// 0x0038 (0x0070 - 0x0038)
class URunTransactionProxy final : public UDatabaseReferenceProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnTrasactionOver;                                  // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class URunTransactionProxy* RunTransaction(const class UDatabaseReference* DatabaseReference, const bool bTriggerLocalEvents, const TDelegate<void(struct FMutableData& Data)>& TransactionFunction);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RunTransactionProxy">();
	}
	static class URunTransactionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<URunTransactionProxy>();
	}
};
static_assert(alignof(URunTransactionProxy) == 0x000008, "Wrong alignment on URunTransactionProxy");
static_assert(sizeof(URunTransactionProxy) == 0x000070, "Wrong size on URunTransactionProxy");
static_assert(offsetof(URunTransactionProxy, OnTrasactionOver) == 0x000038, "Member 'URunTransactionProxy::OnTrasactionOver' has a wrong offset!");
static_assert(offsetof(URunTransactionProxy, OnError) == 0x000048, "Member 'URunTransactionProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.SetPriorityProxy
// 0x0038 (0x0070 - 0x0038)
class USetPriorityProxy final : public UDatabaseReferenceProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnSet;                                             // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USetPriorityProxy* SetPriority(const class UDatabaseReference* DatabaseReference, const struct FFirebaseVariant& Priority);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SetPriorityProxy">();
	}
	static class USetPriorityProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetPriorityProxy>();
	}
};
static_assert(alignof(USetPriorityProxy) == 0x000008, "Wrong alignment on USetPriorityProxy");
static_assert(sizeof(USetPriorityProxy) == 0x000070, "Wrong size on USetPriorityProxy");
static_assert(offsetof(USetPriorityProxy, OnSet) == 0x000038, "Member 'USetPriorityProxy::OnSet' has a wrong offset!");
static_assert(offsetof(USetPriorityProxy, OnError) == 0x000048, "Member 'USetPriorityProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.SetValueProxy
// 0x0038 (0x0070 - 0x0038)
class USetValueProxy final : public UDatabaseReferenceProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnSet;                                             // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USetValueProxy* SetValue(const class UDatabaseReference* DatabaseReference, const struct FFirebaseVariant& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SetValueProxy">();
	}
	static class USetValueProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetValueProxy>();
	}
};
static_assert(alignof(USetValueProxy) == 0x000008, "Wrong alignment on USetValueProxy");
static_assert(sizeof(USetValueProxy) == 0x000070, "Wrong size on USetValueProxy");
static_assert(offsetof(USetValueProxy, OnSet) == 0x000038, "Member 'USetValueProxy::OnSet' has a wrong offset!");
static_assert(offsetof(USetValueProxy, OnError) == 0x000048, "Member 'USetValueProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.SetValueAndPriorityProxy
// 0x0050 (0x0088 - 0x0038)
class USetValueAndPriorityProxy final : public UDatabaseReferenceProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnSet;                                             // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x30];                                      // 0x0058(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USetValueAndPriorityProxy* SetValueAndPriority(const class UDatabaseReference* DatabaseReference, const struct FFirebaseVariant& Priority, const struct FFirebaseVariant& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SetValueAndPriorityProxy">();
	}
	static class USetValueAndPriorityProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetValueAndPriorityProxy>();
	}
};
static_assert(alignof(USetValueAndPriorityProxy) == 0x000008, "Wrong alignment on USetValueAndPriorityProxy");
static_assert(sizeof(USetValueAndPriorityProxy) == 0x000088, "Wrong size on USetValueAndPriorityProxy");
static_assert(offsetof(USetValueAndPriorityProxy, OnSet) == 0x000038, "Member 'USetValueAndPriorityProxy::OnSet' has a wrong offset!");
static_assert(offsetof(USetValueAndPriorityProxy, OnError) == 0x000048, "Member 'USetValueAndPriorityProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.UpdateChildrenProxy
// 0x0038 (0x0070 - 0x0038)
class UUpdateChildrenProxy final : public UDatabaseReferenceProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnUpdated;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UUpdateChildrenProxy* UpdateChildren(const class UDatabaseReference* DatabaseReference, const struct FFirebaseVariant& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UpdateChildrenProxy">();
	}
	static class UUpdateChildrenProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUpdateChildrenProxy>();
	}
};
static_assert(alignof(UUpdateChildrenProxy) == 0x000008, "Wrong alignment on UUpdateChildrenProxy");
static_assert(sizeof(UUpdateChildrenProxy) == 0x000070, "Wrong size on UUpdateChildrenProxy");
static_assert(offsetof(UUpdateChildrenProxy, OnUpdated) == 0x000038, "Member 'UUpdateChildrenProxy::OnUpdated' has a wrong offset!");
static_assert(offsetof(UUpdateChildrenProxy, OnError) == 0x000048, "Member 'UUpdateChildrenProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DataSnapshot
// 0x0000 (0x0028 - 0x0028)
class UDataSnapshot final : public UObject
{
public:
	int64 ChildrenCount() const;
	bool Exists() const;
	class UDataSnapshot* GetChild(const class FString& Path) const;
	TArray<class UDataSnapshot*> GetChildren() const;
	class FString GetKey() const;
	struct FFirebaseVariant GetPriority() const;
	class UDatabaseReference* GetReference() const;
	struct FFirebaseVariant GetValue() const;
	bool HasChild(const class FString& Path) const;
	bool HasChildren() const;
	bool IsValid() const;
	class FString ToJson() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DataSnapshot">();
	}
	static class UDataSnapshot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDataSnapshot>();
	}
};
static_assert(alignof(UDataSnapshot) == 0x000008, "Wrong alignment on UDataSnapshot");
static_assert(sizeof(UDataSnapshot) == 0x000028, "Wrong size on UDataSnapshot");

// Class FirebaseFeatures.DisconnectionHandler
// 0x0000 (0x0028 - 0x0028)
class UDisconnectionHandler final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisconnectionHandler">();
	}
	static class UDisconnectionHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisconnectionHandler>();
	}
};
static_assert(alignof(UDisconnectionHandler) == 0x000008, "Wrong alignment on UDisconnectionHandler");
static_assert(sizeof(UDisconnectionHandler) == 0x000028, "Wrong size on UDisconnectionHandler");

// Class FirebaseFeatures.DatabaseQuery
// 0x0060 (0x0088 - 0x0028)
class UDatabaseQuery : public UObject
{
public:
	FMulticastInlineDelegateProperty_             OnChildAdded;                                      // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnChildChanged;                                    // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnChildMoved;                                      // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnChildRemoved;                                    // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnCancelled;                                       // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnValueChanged;                                    // 0x0078(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	void ClearListeners();
	class UDatabaseQuery* EndAt(const struct FFirebaseVariant& OrderValue);
	class UDatabaseQuery* EndAtKey(const struct FFirebaseVariant& OrderValue, const class FString& ChildKey);
	class UDatabaseQuery* EqualTo(const struct FFirebaseVariant& OrderValue);
	class UDatabaseQuery* EqualToKey(const struct FFirebaseVariant& OrderValue, const class FString& ChildKey);
	class UDatabaseQuery* LimitToFirst(const int64 Limit);
	class UDatabaseQuery* LimitToLast(const int64 Limit);
	class UDatabaseQuery* OrderByChild(const class FString& Path);
	class UDatabaseQuery* OrderByKey();
	class UDatabaseQuery* OrderByPriority();
	class UDatabaseQuery* OrderByValue();
	void SetKeepSynchronized(const bool bKeepSync);
	void SetupListeners();
	class UDatabaseQuery* StartAt(const struct FFirebaseVariant& OrderValue);
	class UDatabaseQuery* StartAtKey(const struct FFirebaseVariant& OrderValue, const class FString& ChildKey);

	class UDatabaseReference* GetReference() const;
	bool IsValid() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DatabaseQuery">();
	}
	static class UDatabaseQuery* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDatabaseQuery>();
	}
};
static_assert(alignof(UDatabaseQuery) == 0x000008, "Wrong alignment on UDatabaseQuery");
static_assert(sizeof(UDatabaseQuery) == 0x000088, "Wrong size on UDatabaseQuery");
static_assert(offsetof(UDatabaseQuery, OnChildAdded) == 0x000028, "Member 'UDatabaseQuery::OnChildAdded' has a wrong offset!");
static_assert(offsetof(UDatabaseQuery, OnChildChanged) == 0x000038, "Member 'UDatabaseQuery::OnChildChanged' has a wrong offset!");
static_assert(offsetof(UDatabaseQuery, OnChildMoved) == 0x000048, "Member 'UDatabaseQuery::OnChildMoved' has a wrong offset!");
static_assert(offsetof(UDatabaseQuery, OnChildRemoved) == 0x000058, "Member 'UDatabaseQuery::OnChildRemoved' has a wrong offset!");
static_assert(offsetof(UDatabaseQuery, OnCancelled) == 0x000068, "Member 'UDatabaseQuery::OnCancelled' has a wrong offset!");
static_assert(offsetof(UDatabaseQuery, OnValueChanged) == 0x000078, "Member 'UDatabaseQuery::OnValueChanged' has a wrong offset!");

// Class FirebaseFeatures.DatabaseReference
// 0x0000 (0x0088 - 0x0088)
class UDatabaseReference final : public UDatabaseQuery
{
public:
	class UDisconnectionHandler* GetDisconnectionHandler();
	void GoOffline();
	void GoOnline();

	class UDatabaseReference* Child(const class FString& Path) const;
	class UDatabaseReference* ChildFromPaths(const TArray<class FString>& Paths) const;
	class UDatabase* GetDatabase() const;
	class FString GetKey() const;
	class UDatabaseReference* GetParent() const;
	class UDatabaseReference* GetRoot() const;
	class FString GetUrl() const;
	bool IsRoot() const;
	class UDatabaseReference* PushChild() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DatabaseReference">();
	}
	static class UDatabaseReference* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDatabaseReference>();
	}
};
static_assert(alignof(UDatabaseReference) == 0x000008, "Wrong alignment on UDatabaseReference");
static_assert(sizeof(UDatabaseReference) == 0x000088, "Wrong size on UDatabaseReference");

// Class FirebaseFeatures.FirestoreDocumentChange
// 0x0008 (0x0030 - 0x0028)
class UFirestoreDocumentChange final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FFirestoreDocumentSnapshot GetDocument() const;
	int64 GetNewIndex() const;
	int64 GetOldIndex() const;
	EDocumentChangeType GetType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirestoreDocumentChange">();
	}
	static class UFirestoreDocumentChange* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirestoreDocumentChange>();
	}
};
static_assert(alignof(UFirestoreDocumentChange) == 0x000008, "Wrong alignment on UFirestoreDocumentChange");
static_assert(sizeof(UFirestoreDocumentChange) == 0x000030, "Wrong size on UFirestoreDocumentChange");

// Class FirebaseFeatures.FirestoreDocumentReference
// 0x0010 (0x0038 - 0x0028)
class UFirestoreDocumentReference final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddSnapshotListener(TDelegate<void(EFirestoreError Error, struct FFirestoreDocumentSnapshot& DocumentSnapshot)> Callback);

	class UFirestoreCollectionReference* GetCollection(const class FString& CollectionPath) const;
	class FString GetId() const;
	class UFirestoreCollectionReference* GetParent() const;
	class FString GetPath() const;
	bool IsValid() const;
	class FString ToString() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirestoreDocumentReference">();
	}
	static class UFirestoreDocumentReference* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirestoreDocumentReference>();
	}
};
static_assert(alignof(UFirestoreDocumentReference) == 0x000008, "Wrong alignment on UFirestoreDocumentReference");
static_assert(sizeof(UFirestoreDocumentReference) == 0x000038, "Wrong size on UFirestoreDocumentReference");

// Class FirebaseFeatures.FirebaseAdMobLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebaseAdMobLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void Blueprint_RewardedVideoEvents(const TDelegate<void(const class FString& RewardType, float RewardAmount)>& OnReward, const TDelegate<void(EAdMobPresentationState PresentationState)>& OnPresentationStateChanged);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseAdMobLibrary">();
	}
	static class UFirebaseAdMobLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseAdMobLibrary>();
	}
};
static_assert(alignof(UFirebaseAdMobLibrary) == 0x000008, "Wrong alignment on UFirebaseAdMobLibrary");
static_assert(sizeof(UFirebaseAdMobLibrary) == 0x000028, "Wrong size on UFirebaseAdMobLibrary");

// Class FirebaseFeatures.ShowRewardedVideo
// 0x0020 (0x0050 - 0x0030)
class UShowRewardedVideo final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnVideoShown;                                      // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UShowRewardedVideo* ShowRewardedVideo();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShowRewardedVideo">();
	}
	static class UShowRewardedVideo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShowRewardedVideo>();
	}
};
static_assert(alignof(UShowRewardedVideo) == 0x000008, "Wrong alignment on UShowRewardedVideo");
static_assert(sizeof(UShowRewardedVideo) == 0x000050, "Wrong size on UShowRewardedVideo");
static_assert(offsetof(UShowRewardedVideo, OnVideoShown) == 0x000030, "Member 'UShowRewardedVideo::OnVideoShown' has a wrong offset!");
static_assert(offsetof(UShowRewardedVideo, OnError) == 0x000040, "Member 'UShowRewardedVideo::OnError' has a wrong offset!");

// Class FirebaseFeatures.LoadRewardedVideoAd
// 0x00B0 (0x00E0 - 0x0030)
class ULoadRewardedVideoAd final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnAdLoaded;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x90];                                      // 0x0050(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ULoadRewardedVideoAd* LoadRewardedVideoAd(const class FString& AdUnitId, const struct FAdMobAdRequest& AdRequest);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadRewardedVideoAd">();
	}
	static class ULoadRewardedVideoAd* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadRewardedVideoAd>();
	}
};
static_assert(alignof(ULoadRewardedVideoAd) == 0x000008, "Wrong alignment on ULoadRewardedVideoAd");
static_assert(sizeof(ULoadRewardedVideoAd) == 0x0000E0, "Wrong size on ULoadRewardedVideoAd");
static_assert(offsetof(ULoadRewardedVideoAd, OnAdLoaded) == 0x000030, "Member 'ULoadRewardedVideoAd::OnAdLoaded' has a wrong offset!");
static_assert(offsetof(ULoadRewardedVideoAd, OnError) == 0x000040, "Member 'ULoadRewardedVideoAd::OnError' has a wrong offset!");

// Class FirebaseFeatures.PauseRewardedVideo
// 0x0020 (0x0050 - 0x0030)
class UPauseRewardedVideo final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnVideoPaused;                                     // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UPauseRewardedVideo* PauseRewardedVideo();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PauseRewardedVideo">();
	}
	static class UPauseRewardedVideo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPauseRewardedVideo>();
	}
};
static_assert(alignof(UPauseRewardedVideo) == 0x000008, "Wrong alignment on UPauseRewardedVideo");
static_assert(sizeof(UPauseRewardedVideo) == 0x000050, "Wrong size on UPauseRewardedVideo");
static_assert(offsetof(UPauseRewardedVideo, OnVideoPaused) == 0x000030, "Member 'UPauseRewardedVideo::OnVideoPaused' has a wrong offset!");
static_assert(offsetof(UPauseRewardedVideo, OnError) == 0x000040, "Member 'UPauseRewardedVideo::OnError' has a wrong offset!");

// Class FirebaseFeatures.ResumeRewardedVideo
// 0x0020 (0x0050 - 0x0030)
class UResumeRewardedVideo final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnVideoResumed;                                    // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UResumeRewardedVideo* ResumeRewardedVideo();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResumeRewardedVideo">();
	}
	static class UResumeRewardedVideo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResumeRewardedVideo>();
	}
};
static_assert(alignof(UResumeRewardedVideo) == 0x000008, "Wrong alignment on UResumeRewardedVideo");
static_assert(sizeof(UResumeRewardedVideo) == 0x000050, "Wrong size on UResumeRewardedVideo");
static_assert(offsetof(UResumeRewardedVideo, OnVideoResumed) == 0x000030, "Member 'UResumeRewardedVideo::OnVideoResumed' has a wrong offset!");
static_assert(offsetof(UResumeRewardedVideo, OnError) == 0x000040, "Member 'UResumeRewardedVideo::OnError' has a wrong offset!");

// Class FirebaseFeatures.CreateBannerView
// 0x0040 (0x0070 - 0x0030)
class UCreateBannerView final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnBannerViewCreated;                               // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBannerView*                            Banner;                                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x18];                                      // 0x0058(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCreateBannerView* CreateBannerView(const class FString& AdUnitId, const struct FAdSize& AdSize);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CreateBannerView">();
	}
	static class UCreateBannerView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreateBannerView>();
	}
};
static_assert(alignof(UCreateBannerView) == 0x000008, "Wrong alignment on UCreateBannerView");
static_assert(sizeof(UCreateBannerView) == 0x000070, "Wrong size on UCreateBannerView");
static_assert(offsetof(UCreateBannerView, OnBannerViewCreated) == 0x000030, "Member 'UCreateBannerView::OnBannerViewCreated' has a wrong offset!");
static_assert(offsetof(UCreateBannerView, OnError) == 0x000040, "Member 'UCreateBannerView::OnError' has a wrong offset!");
static_assert(offsetof(UCreateBannerView, Banner) == 0x000050, "Member 'UCreateBannerView::Banner' has a wrong offset!");

// Class FirebaseFeatures.LoadAdBannerView
// 0x00A8 (0x00D8 - 0x0030)
class ULoadAdBannerView final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnAdLoaded;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBannerView*                            Banner;                                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x80];                                      // 0x0058(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ULoadAdBannerView* LoadAd(const class UBannerView* BannerView, const struct FAdMobAdRequest& AdRequest);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadAdBannerView">();
	}
	static class ULoadAdBannerView* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadAdBannerView>();
	}
};
static_assert(alignof(ULoadAdBannerView) == 0x000008, "Wrong alignment on ULoadAdBannerView");
static_assert(sizeof(ULoadAdBannerView) == 0x0000D8, "Wrong size on ULoadAdBannerView");
static_assert(offsetof(ULoadAdBannerView, OnAdLoaded) == 0x000030, "Member 'ULoadAdBannerView::OnAdLoaded' has a wrong offset!");
static_assert(offsetof(ULoadAdBannerView, OnError) == 0x000040, "Member 'ULoadAdBannerView::OnError' has a wrong offset!");
static_assert(offsetof(ULoadAdBannerView, Banner) == 0x000050, "Member 'ULoadAdBannerView::Banner' has a wrong offset!");

// Class FirebaseFeatures.HideAdBannerView
// 0x0028 (0x0058 - 0x0030)
class UHideAdBannerView final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnHidden;                                          // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBannerView*                            Banner;                                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UHideAdBannerView* Hide(const class UBannerView* BannerView);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HideAdBannerView">();
	}
	static class UHideAdBannerView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHideAdBannerView>();
	}
};
static_assert(alignof(UHideAdBannerView) == 0x000008, "Wrong alignment on UHideAdBannerView");
static_assert(sizeof(UHideAdBannerView) == 0x000058, "Wrong size on UHideAdBannerView");
static_assert(offsetof(UHideAdBannerView, OnHidden) == 0x000030, "Member 'UHideAdBannerView::OnHidden' has a wrong offset!");
static_assert(offsetof(UHideAdBannerView, OnError) == 0x000040, "Member 'UHideAdBannerView::OnError' has a wrong offset!");
static_assert(offsetof(UHideAdBannerView, Banner) == 0x000050, "Member 'UHideAdBannerView::Banner' has a wrong offset!");

// Class FirebaseFeatures.ShowBannerView
// 0x0028 (0x0058 - 0x0030)
class UShowBannerView final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnShown;                                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBannerView*                            Banner;                                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UShowBannerView* Show(const class UBannerView* BannerView);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShowBannerView">();
	}
	static class UShowBannerView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShowBannerView>();
	}
};
static_assert(alignof(UShowBannerView) == 0x000008, "Wrong alignment on UShowBannerView");
static_assert(sizeof(UShowBannerView) == 0x000058, "Wrong size on UShowBannerView");
static_assert(offsetof(UShowBannerView, OnShown) == 0x000030, "Member 'UShowBannerView::OnShown' has a wrong offset!");
static_assert(offsetof(UShowBannerView, OnError) == 0x000040, "Member 'UShowBannerView::OnError' has a wrong offset!");
static_assert(offsetof(UShowBannerView, Banner) == 0x000050, "Member 'UShowBannerView::Banner' has a wrong offset!");

// Class FirebaseFeatures.PauseBannerView
// 0x0028 (0x0058 - 0x0030)
class UPauseBannerView final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnPaused;                                          // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBannerView*                            Banner;                                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UPauseBannerView* Pause(const class UBannerView* BannerView);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PauseBannerView">();
	}
	static class UPauseBannerView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPauseBannerView>();
	}
};
static_assert(alignof(UPauseBannerView) == 0x000008, "Wrong alignment on UPauseBannerView");
static_assert(sizeof(UPauseBannerView) == 0x000058, "Wrong size on UPauseBannerView");
static_assert(offsetof(UPauseBannerView, OnPaused) == 0x000030, "Member 'UPauseBannerView::OnPaused' has a wrong offset!");
static_assert(offsetof(UPauseBannerView, OnError) == 0x000040, "Member 'UPauseBannerView::OnError' has a wrong offset!");
static_assert(offsetof(UPauseBannerView, Banner) == 0x000050, "Member 'UPauseBannerView::Banner' has a wrong offset!");

// Class FirebaseFeatures.ResumeBannerView
// 0x0028 (0x0058 - 0x0030)
class UResumeBannerView final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnResumed;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBannerView*                            Banner;                                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UResumeBannerView* Resume(const class UBannerView* BannerView);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ResumeBannerView">();
	}
	static class UResumeBannerView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResumeBannerView>();
	}
};
static_assert(alignof(UResumeBannerView) == 0x000008, "Wrong alignment on UResumeBannerView");
static_assert(sizeof(UResumeBannerView) == 0x000058, "Wrong size on UResumeBannerView");
static_assert(offsetof(UResumeBannerView, OnResumed) == 0x000030, "Member 'UResumeBannerView::OnResumed' has a wrong offset!");
static_assert(offsetof(UResumeBannerView, OnError) == 0x000040, "Member 'UResumeBannerView::OnError' has a wrong offset!");
static_assert(offsetof(UResumeBannerView, Banner) == 0x000050, "Member 'UResumeBannerView::Banner' has a wrong offset!");

// Class FirebaseFeatures.MoveToPositionBannerView
// 0x0030 (0x0060 - 0x0030)
class UMoveToPositionBannerView final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnMoved;                                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBannerView*                            Banner;                                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UMoveToPositionBannerView* MoveTo(const class UBannerView* BannerView, EAdMobBannerViewPosition Position);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MoveToPositionBannerView">();
	}
	static class UMoveToPositionBannerView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoveToPositionBannerView>();
	}
};
static_assert(alignof(UMoveToPositionBannerView) == 0x000008, "Wrong alignment on UMoveToPositionBannerView");
static_assert(sizeof(UMoveToPositionBannerView) == 0x000060, "Wrong size on UMoveToPositionBannerView");
static_assert(offsetof(UMoveToPositionBannerView, OnMoved) == 0x000030, "Member 'UMoveToPositionBannerView::OnMoved' has a wrong offset!");
static_assert(offsetof(UMoveToPositionBannerView, OnError) == 0x000040, "Member 'UMoveToPositionBannerView::OnError' has a wrong offset!");
static_assert(offsetof(UMoveToPositionBannerView, Banner) == 0x000050, "Member 'UMoveToPositionBannerView::Banner' has a wrong offset!");

// Class FirebaseFeatures.MoveToBannerView
// 0x0030 (0x0060 - 0x0030)
class UMoveToBannerView final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnMoved;                                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBannerView*                            Banner;                                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UMoveToBannerView* MoveTo(const class UBannerView* BannerView, const int32 X, const int32 Y);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MoveToBannerView">();
	}
	static class UMoveToBannerView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoveToBannerView>();
	}
};
static_assert(alignof(UMoveToBannerView) == 0x000008, "Wrong alignment on UMoveToBannerView");
static_assert(sizeof(UMoveToBannerView) == 0x000060, "Wrong size on UMoveToBannerView");
static_assert(offsetof(UMoveToBannerView, OnMoved) == 0x000030, "Member 'UMoveToBannerView::OnMoved' has a wrong offset!");
static_assert(offsetof(UMoveToBannerView, OnError) == 0x000040, "Member 'UMoveToBannerView::OnError' has a wrong offset!");
static_assert(offsetof(UMoveToBannerView, Banner) == 0x000050, "Member 'UMoveToBannerView::Banner' has a wrong offset!");

// Class FirebaseFeatures.LoadAdInterstitial
// 0x00A8 (0x00D8 - 0x0030)
class ULoadAdInterstitial final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnAdLoaded;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UInterstitialAd*                        Interstitial;                                      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x80];                                      // 0x0058(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ULoadAdInterstitial* LoadAd(const class UInterstitialAd* InterstitialAd, const struct FAdMobAdRequest& AdRequest);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadAdInterstitial">();
	}
	static class ULoadAdInterstitial* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadAdInterstitial>();
	}
};
static_assert(alignof(ULoadAdInterstitial) == 0x000008, "Wrong alignment on ULoadAdInterstitial");
static_assert(sizeof(ULoadAdInterstitial) == 0x0000D8, "Wrong size on ULoadAdInterstitial");
static_assert(offsetof(ULoadAdInterstitial, OnAdLoaded) == 0x000030, "Member 'ULoadAdInterstitial::OnAdLoaded' has a wrong offset!");
static_assert(offsetof(ULoadAdInterstitial, OnError) == 0x000040, "Member 'ULoadAdInterstitial::OnError' has a wrong offset!");
static_assert(offsetof(ULoadAdInterstitial, Interstitial) == 0x000050, "Member 'ULoadAdInterstitial::Interstitial' has a wrong offset!");

// Class FirebaseFeatures.ShowInterstitial
// 0x0028 (0x0058 - 0x0030)
class UShowInterstitial final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnShown;                                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UInterstitialAd*                        Interstitial;                                      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UShowInterstitial* Show(const class UInterstitialAd* InterstitialAd);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ShowInterstitial">();
	}
	static class UShowInterstitial* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShowInterstitial>();
	}
};
static_assert(alignof(UShowInterstitial) == 0x000008, "Wrong alignment on UShowInterstitial");
static_assert(sizeof(UShowInterstitial) == 0x000058, "Wrong size on UShowInterstitial");
static_assert(offsetof(UShowInterstitial, OnShown) == 0x000030, "Member 'UShowInterstitial::OnShown' has a wrong offset!");
static_assert(offsetof(UShowInterstitial, OnError) == 0x000040, "Member 'UShowInterstitial::OnError' has a wrong offset!");
static_assert(offsetof(UShowInterstitial, Interstitial) == 0x000050, "Member 'UShowInterstitial::Interstitial' has a wrong offset!");

// Class FirebaseFeatures.BannerView
// 0x0000 (0x0028 - 0x0028)
class UBannerView final : public UObject
{
public:
	struct FAdMobBoundingBox GetBoundingBox() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BannerView">();
	}
	static class UBannerView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBannerView>();
	}
};
static_assert(alignof(UBannerView) == 0x000008, "Wrong alignment on UBannerView");
static_assert(sizeof(UBannerView) == 0x000028, "Wrong size on UBannerView");

// Class FirebaseFeatures.InterstitialAd
// 0x0038 (0x0060 - 0x0028)
class UInterstitialAd final : public UObject
{
public:
	uint8                                         Pad_28[0x38];                                      // 0x0028(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	EAdMobInterstitialAdPresentationState GetPresentationState() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InterstitialAd">();
	}
	static class UInterstitialAd* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInterstitialAd>();
	}
};
static_assert(alignof(UInterstitialAd) == 0x000008, "Wrong alignment on UInterstitialAd");
static_assert(sizeof(UInterstitialAd) == 0x000060, "Wrong size on UInterstitialAd");

// Class FirebaseFeatures.FirebaseAnalyticsLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebaseAnalyticsLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void EndSession();
	static void LogEvent(const class FString& EventName);
	static void LogEventDouble(const class FString& EventName, const class FString& ParameterName, const double ParameterValue);
	static void LogEventFloat(const class FString& EventName, const class FString& ParameterName, const float ParameterValue);
	static void LogEventInt32(const class FString& EventName, const class FString& ParameterName, const int32 ParameterValue);
	static void LogEventInt64(const class FString& EventName, const class FString& ParameterName, const int64 ParameterValue);
	static void LogEventString(const class FString& EventName, const class FString& ParameterName, const class FString& ParameterValue);
	static void LogEventWithParameter(const class FString& EventName, const TMap<class FString, class FString>& Parameters);
	static void LogEventWithParameters(const class FString& EventName, const TMap<class FString, struct FFirebaseVariant>& Parameters);
	static void ResetAnalyticsData();
	static void SetAnalyticsCollectionEnabled(const bool bEnabled);
	static void SetCurrentScreen(const class FString& ScreenName, const class FString& ScreenClass);
	static void SetSessionTimeoutDuration(const int64 Milliseconds);
	static void SetUserID(const class FString& UserId);
	static void SetUserProperty(const class FString& Param_Name, const class FString& Property);
	static bool StartSession();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseAnalyticsLibrary">();
	}
	static class UFirebaseAnalyticsLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseAnalyticsLibrary>();
	}
};
static_assert(alignof(UFirebaseAnalyticsLibrary) == 0x000008, "Wrong alignment on UFirebaseAnalyticsLibrary");
static_assert(sizeof(UFirebaseAnalyticsLibrary) == 0x000028, "Wrong size on UFirebaseAnalyticsLibrary");

// Class FirebaseFeatures.FirebaseApiConfig
// 0x0010 (0x0038 - 0x0028)
class UFirebaseApiConfig final : public UObject
{
public:
	class FString                                 GoogleServicesJson;                                // 0x0028(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseApiConfig">();
	}
	static class UFirebaseApiConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseApiConfig>();
	}
};
static_assert(alignof(UFirebaseApiConfig) == 0x000008, "Wrong alignment on UFirebaseApiConfig");
static_assert(sizeof(UFirebaseApiConfig) == 0x000038, "Wrong size on UFirebaseApiConfig");
static_assert(offsetof(UFirebaseApiConfig, GoogleServicesJson) == 0x000028, "Member 'UFirebaseApiConfig::GoogleServicesJson' has a wrong offset!");

// Class FirebaseFeatures.FirebaseConfig
// 0x0058 (0x0080 - 0x0028)
class UFirebaseConfig final : public UObject
{
public:
	bool                                          bEnableAuth;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAppCheck;                                   // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableFirestore;                                  // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableDatabase;                                   // 0x002B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAdMob;                                      // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableAnalytics;                                  // 0x002D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableFunctions;                                  // 0x002E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableMessaging;                                  // 0x002F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableRemoteConfig;                               // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableStorage;                                    // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableCrashlytics;                                // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnablePerformances;                               // 0x0033(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FirebaseAnalyticsSessionTimeoutDuration;           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuppressNotificationPermissionPrompt;             // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTokenRegistrationOnInit;                          // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableGoogleSignIn;                               // 0x003A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GoogleClientId;                                    // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GoogleReversedClientId;                            // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableGooglePlayGamesSignIn;                      // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Host;                                              // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSslEnabled;                                       // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistenceEnabled;                               // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequestReadPhoneStatePermission;                  // 0x007A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequestAccessCoarseLocation;                      // 0x007B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFirebaseAppStoreReceiptURLCheckEnabled;           // 0x007C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAppCheckProvider                             AndroidAppCheckProvider;                           // 0x007D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAppCheckProvider                             IOSAppCheckProvider;                               // 0x007E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAppCheckProvider                             DesktopAppCheckProvider;                           // 0x007F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseConfig">();
	}
	static class UFirebaseConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseConfig>();
	}
};
static_assert(alignof(UFirebaseConfig) == 0x000008, "Wrong alignment on UFirebaseConfig");
static_assert(sizeof(UFirebaseConfig) == 0x000080, "Wrong size on UFirebaseConfig");
static_assert(offsetof(UFirebaseConfig, bEnableAuth) == 0x000028, "Member 'UFirebaseConfig::bEnableAuth' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableAppCheck) == 0x000029, "Member 'UFirebaseConfig::bEnableAppCheck' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableFirestore) == 0x00002A, "Member 'UFirebaseConfig::bEnableFirestore' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableDatabase) == 0x00002B, "Member 'UFirebaseConfig::bEnableDatabase' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableAdMob) == 0x00002C, "Member 'UFirebaseConfig::bEnableAdMob' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableAnalytics) == 0x00002D, "Member 'UFirebaseConfig::bEnableAnalytics' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableFunctions) == 0x00002E, "Member 'UFirebaseConfig::bEnableFunctions' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableMessaging) == 0x00002F, "Member 'UFirebaseConfig::bEnableMessaging' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableRemoteConfig) == 0x000030, "Member 'UFirebaseConfig::bEnableRemoteConfig' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableStorage) == 0x000031, "Member 'UFirebaseConfig::bEnableStorage' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableCrashlytics) == 0x000032, "Member 'UFirebaseConfig::bEnableCrashlytics' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnablePerformances) == 0x000033, "Member 'UFirebaseConfig::bEnablePerformances' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, FirebaseAnalyticsSessionTimeoutDuration) == 0x000034, "Member 'UFirebaseConfig::FirebaseAnalyticsSessionTimeoutDuration' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bSuppressNotificationPermissionPrompt) == 0x000038, "Member 'UFirebaseConfig::bSuppressNotificationPermissionPrompt' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bTokenRegistrationOnInit) == 0x000039, "Member 'UFirebaseConfig::bTokenRegistrationOnInit' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableGoogleSignIn) == 0x00003A, "Member 'UFirebaseConfig::bEnableGoogleSignIn' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, GoogleClientId) == 0x000040, "Member 'UFirebaseConfig::GoogleClientId' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, GoogleReversedClientId) == 0x000050, "Member 'UFirebaseConfig::GoogleReversedClientId' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bEnableGooglePlayGamesSignIn) == 0x000060, "Member 'UFirebaseConfig::bEnableGooglePlayGamesSignIn' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, Host) == 0x000068, "Member 'UFirebaseConfig::Host' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bSslEnabled) == 0x000078, "Member 'UFirebaseConfig::bSslEnabled' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bPersistenceEnabled) == 0x000079, "Member 'UFirebaseConfig::bPersistenceEnabled' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bRequestReadPhoneStatePermission) == 0x00007A, "Member 'UFirebaseConfig::bRequestReadPhoneStatePermission' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bRequestAccessCoarseLocation) == 0x00007B, "Member 'UFirebaseConfig::bRequestAccessCoarseLocation' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, bFirebaseAppStoreReceiptURLCheckEnabled) == 0x00007C, "Member 'UFirebaseConfig::bFirebaseAppStoreReceiptURLCheckEnabled' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, AndroidAppCheckProvider) == 0x00007D, "Member 'UFirebaseConfig::AndroidAppCheckProvider' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, IOSAppCheckProvider) == 0x00007E, "Member 'UFirebaseConfig::IOSAppCheckProvider' has a wrong offset!");
static_assert(offsetof(UFirebaseConfig, DesktopAppCheckProvider) == 0x00007F, "Member 'UFirebaseConfig::DesktopAppCheckProvider' has a wrong offset!");

// Class FirebaseFeatures.FirebaseDynamicLinksBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebaseDynamicLinksBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ClearUnhandledDynamicLink();
	static ELinkMatchStrength GetLastDynamicLinkMatchStrength();
	static class FString GetLastDynamicLinkURL();

	bool DidReceiveUnhandledDynamicLink();
	struct FGeneratedDynamicLink GetLongLink(const struct FDynamicLinkComponents& Components);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseDynamicLinksBlueprintLibrary">();
	}
	static class UFirebaseDynamicLinksBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseDynamicLinksBlueprintLibrary>();
	}
};
static_assert(alignof(UFirebaseDynamicLinksBlueprintLibrary) == 0x000008, "Wrong alignment on UFirebaseDynamicLinksBlueprintLibrary");
static_assert(sizeof(UFirebaseDynamicLinksBlueprintLibrary) == 0x000028, "Wrong size on UFirebaseDynamicLinksBlueprintLibrary");

// Class FirebaseFeatures.BlueprintFirebaseDynamicLinksProxy
// 0x0010 (0x0040 - 0x0030)
class UBlueprintFirebaseDynamicLinksProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnDynamicLinkReceived;                             // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UBlueprintFirebaseDynamicLinksProxy* ListenOnDynamicLinkReceived();

	void OnLink(const class FString& URL, const ELinkMatchStrength MatchStrength);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlueprintFirebaseDynamicLinksProxy">();
	}
	static class UBlueprintFirebaseDynamicLinksProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintFirebaseDynamicLinksProxy>();
	}
};
static_assert(alignof(UBlueprintFirebaseDynamicLinksProxy) == 0x000008, "Wrong alignment on UBlueprintFirebaseDynamicLinksProxy");
static_assert(sizeof(UBlueprintFirebaseDynamicLinksProxy) == 0x000040, "Wrong size on UBlueprintFirebaseDynamicLinksProxy");
static_assert(offsetof(UBlueprintFirebaseDynamicLinksProxy, OnDynamicLinkReceived) == 0x000030, "Member 'UBlueprintFirebaseDynamicLinksProxy::OnDynamicLinkReceived' has a wrong offset!");

// Class FirebaseFeatures.DynamicLinksGetShortLinkBase
// 0x0020 (0x0050 - 0x0030)
class UDynamicLinksGetShortLinkBase : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             Success;                                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             Failed;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicLinksGetShortLinkBase">();
	}
	static class UDynamicLinksGetShortLinkBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicLinksGetShortLinkBase>();
	}
};
static_assert(alignof(UDynamicLinksGetShortLinkBase) == 0x000008, "Wrong alignment on UDynamicLinksGetShortLinkBase");
static_assert(sizeof(UDynamicLinksGetShortLinkBase) == 0x000050, "Wrong size on UDynamicLinksGetShortLinkBase");
static_assert(offsetof(UDynamicLinksGetShortLinkBase, Success) == 0x000030, "Member 'UDynamicLinksGetShortLinkBase::Success' has a wrong offset!");
static_assert(offsetof(UDynamicLinksGetShortLinkBase, Failed) == 0x000040, "Member 'UDynamicLinksGetShortLinkBase::Failed' has a wrong offset!");

// Class FirebaseFeatures.DynamicLinksGetShortLinkWithComponents
// 0x0168 (0x01B8 - 0x0050)
class UDynamicLinksGetShortLinkWithComponents final : public UDynamicLinksGetShortLinkBase
{
public:
	uint8                                         Pad_50[0x168];                                     // 0x0050(0x0168)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDynamicLinksGetShortLinkWithComponents* GetShortLink(const struct FDynamicLinkComponents& Components);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicLinksGetShortLinkWithComponents">();
	}
	static class UDynamicLinksGetShortLinkWithComponents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicLinksGetShortLinkWithComponents>();
	}
};
static_assert(alignof(UDynamicLinksGetShortLinkWithComponents) == 0x000008, "Wrong alignment on UDynamicLinksGetShortLinkWithComponents");
static_assert(sizeof(UDynamicLinksGetShortLinkWithComponents) == 0x0001B8, "Wrong size on UDynamicLinksGetShortLinkWithComponents");

// Class FirebaseFeatures.DynamicLinksGetShortLinkWithComponentsAndOptions
// 0x0170 (0x01C0 - 0x0050)
class UDynamicLinksGetShortLinkWithComponentsAndOptions final : public UDynamicLinksGetShortLinkBase
{
public:
	uint8                                         Pad_50[0x170];                                     // 0x0050(0x0170)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDynamicLinksGetShortLinkWithComponentsAndOptions* GetShortLink(const struct FDynamicLinkComponents& Components, const struct FDynamicLinkOptions& Options);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicLinksGetShortLinkWithComponentsAndOptions">();
	}
	static class UDynamicLinksGetShortLinkWithComponentsAndOptions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicLinksGetShortLinkWithComponentsAndOptions>();
	}
};
static_assert(alignof(UDynamicLinksGetShortLinkWithComponentsAndOptions) == 0x000008, "Wrong alignment on UDynamicLinksGetShortLinkWithComponentsAndOptions");
static_assert(sizeof(UDynamicLinksGetShortLinkWithComponentsAndOptions) == 0x0001C0, "Wrong size on UDynamicLinksGetShortLinkWithComponentsAndOptions");

// Class FirebaseFeatures.DynamicLinksGetShortLinkWithString
// 0x0010 (0x0060 - 0x0050)
class UDynamicLinksGetShortLinkWithString final : public UDynamicLinksGetShortLinkBase
{
public:
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDynamicLinksGetShortLinkWithString* GetShortLink(const class FString& LongDynamicLink);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicLinksGetShortLinkWithString">();
	}
	static class UDynamicLinksGetShortLinkWithString* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicLinksGetShortLinkWithString>();
	}
};
static_assert(alignof(UDynamicLinksGetShortLinkWithString) == 0x000008, "Wrong alignment on UDynamicLinksGetShortLinkWithString");
static_assert(sizeof(UDynamicLinksGetShortLinkWithString) == 0x000060, "Wrong size on UDynamicLinksGetShortLinkWithString");

// Class FirebaseFeatures.DynamicLinksGetShortLinkWithStringAndOptions
// 0x0018 (0x0068 - 0x0050)
class UDynamicLinksGetShortLinkWithStringAndOptions final : public UDynamicLinksGetShortLinkBase
{
public:
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDynamicLinksGetShortLinkWithStringAndOptions* GetShortLink(const class FString& LongDynamicLink, const struct FDynamicLinkOptions& Options);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicLinksGetShortLinkWithStringAndOptions">();
	}
	static class UDynamicLinksGetShortLinkWithStringAndOptions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicLinksGetShortLinkWithStringAndOptions>();
	}
};
static_assert(alignof(UDynamicLinksGetShortLinkWithStringAndOptions) == 0x000008, "Wrong alignment on UDynamicLinksGetShortLinkWithStringAndOptions");
static_assert(sizeof(UDynamicLinksGetShortLinkWithStringAndOptions) == 0x000068, "Wrong size on UDynamicLinksGetShortLinkWithStringAndOptions");

// Class FirebaseFeatures.FirebaseInstallations
// 0x0000 (0x0028 - 0x0028)
class UFirebaseInstallations final : public UBlueprintFunctionLibrary
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseInstallations">();
	}
	static class UFirebaseInstallations* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseInstallations>();
	}
};
static_assert(alignof(UFirebaseInstallations) == 0x000008, "Wrong alignment on UFirebaseInstallations");
static_assert(sizeof(UFirebaseInstallations) == 0x000028, "Wrong size on UFirebaseInstallations");

// Class FirebaseFeatures.FirebaseGetInstallationIDProxy
// 0x0020 (0x0050 - 0x0030)
class UFirebaseGetInstallationIDProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             Done;                                              // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             Failed;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UFirebaseGetInstallationIDProxy* GetInstallationID();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseGetInstallationIDProxy">();
	}
	static class UFirebaseGetInstallationIDProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseGetInstallationIDProxy>();
	}
};
static_assert(alignof(UFirebaseGetInstallationIDProxy) == 0x000008, "Wrong alignment on UFirebaseGetInstallationIDProxy");
static_assert(sizeof(UFirebaseGetInstallationIDProxy) == 0x000050, "Wrong size on UFirebaseGetInstallationIDProxy");
static_assert(offsetof(UFirebaseGetInstallationIDProxy, Done) == 0x000030, "Member 'UFirebaseGetInstallationIDProxy::Done' has a wrong offset!");
static_assert(offsetof(UFirebaseGetInstallationIDProxy, Failed) == 0x000040, "Member 'UFirebaseGetInstallationIDProxy::Failed' has a wrong offset!");

// Class FirebaseFeatures.FirebaseGetInstallationAuthTokenProxy
// 0x0028 (0x0058 - 0x0030)
class UFirebaseGetInstallationAuthTokenProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             Done;                                              // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             Failed;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirebaseGetInstallationAuthTokenProxy* GetInstallationAuthToken(const bool bForceRefresh);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseGetInstallationAuthTokenProxy">();
	}
	static class UFirebaseGetInstallationAuthTokenProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseGetInstallationAuthTokenProxy>();
	}
};
static_assert(alignof(UFirebaseGetInstallationAuthTokenProxy) == 0x000008, "Wrong alignment on UFirebaseGetInstallationAuthTokenProxy");
static_assert(sizeof(UFirebaseGetInstallationAuthTokenProxy) == 0x000058, "Wrong size on UFirebaseGetInstallationAuthTokenProxy");
static_assert(offsetof(UFirebaseGetInstallationAuthTokenProxy, Done) == 0x000030, "Member 'UFirebaseGetInstallationAuthTokenProxy::Done' has a wrong offset!");
static_assert(offsetof(UFirebaseGetInstallationAuthTokenProxy, Failed) == 0x000040, "Member 'UFirebaseGetInstallationAuthTokenProxy::Failed' has a wrong offset!");

// Class FirebaseFeatures.FirebaseDeleteInstallationProxy
// 0x0020 (0x0050 - 0x0030)
class UFirebaseDeleteInstallationProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             Done;                                              // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             Failed;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UFirebaseDeleteInstallationProxy* DeleteInstallation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseDeleteInstallationProxy">();
	}
	static class UFirebaseDeleteInstallationProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseDeleteInstallationProxy>();
	}
};
static_assert(alignof(UFirebaseDeleteInstallationProxy) == 0x000008, "Wrong alignment on UFirebaseDeleteInstallationProxy");
static_assert(sizeof(UFirebaseDeleteInstallationProxy) == 0x000050, "Wrong size on UFirebaseDeleteInstallationProxy");
static_assert(offsetof(UFirebaseDeleteInstallationProxy, Done) == 0x000030, "Member 'UFirebaseDeleteInstallationProxy::Done' has a wrong offset!");
static_assert(offsetof(UFirebaseDeleteInstallationProxy, Failed) == 0x000040, "Member 'UFirebaseDeleteInstallationProxy::Failed' has a wrong offset!");

// Class FirebaseFeatures.FirebasePerformanceLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebasePerformanceLibrary final : public UBlueprintFunctionLibrary
{
public:
	static int64 Blueprint_GetMetricValue(const struct FFirebaseTrace& Trace, const class FString& MetricName);
	static class FString Blueprint_GetName(const struct FFirebaseTrace& Trace);
	static void Blueprint_IncrementMetric(struct FFirebaseTrace& Trace, const class FString& MetricName, const int64 ByValue);
	static void Blueprint_SetMetricValue(struct FFirebaseTrace& Trace, const class FString& MetricName, const int64 Value);
	static void Blueprint_Start(struct FFirebaseTrace& Trace);
	static void Blueprint_Stop(struct FFirebaseTrace& Trace);
	static struct FFirebaseTrace CreateAndStartTrace(const class FString& TraceName);
	static struct FFirebaseTrace CreateTrace(const class FString& TraceName);
	static void SetDataCollectionEnabled(const bool bEnabled);
	static void SetInstrumentationEnabled(const bool bEnabled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebasePerformanceLibrary">();
	}
	static class UFirebasePerformanceLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebasePerformanceLibrary>();
	}
};
static_assert(alignof(UFirebasePerformanceLibrary) == 0x000008, "Wrong alignment on UFirebasePerformanceLibrary");
static_assert(sizeof(UFirebasePerformanceLibrary) == 0x000028, "Wrong size on UFirebasePerformanceLibrary");

// Class FirebaseFeatures.FirebaseSDKLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebaseSDKLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void CreateFirebaseApp(const class FString& AppName, const struct FFirebaseAppOptions& Options, EFirebaseSDKCreateApp* Branches);
	static void SwitchFirebaseApp(const class FString& AppName, EFirebaseSDKCreateApp* Branches);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseSDKLibrary">();
	}
	static class UFirebaseSDKLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseSDKLibrary>();
	}
};
static_assert(alignof(UFirebaseSDKLibrary) == 0x000008, "Wrong alignment on UFirebaseSDKLibrary");
static_assert(sizeof(UFirebaseSDKLibrary) == 0x000028, "Wrong size on UFirebaseSDKLibrary");

// Class FirebaseFeatures.FirebaseInitializationProxy
// 0x0010 (0x0040 - 0x0030)
class UFirebaseInitializationProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             FirebaseInitialized;                               // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UFirebaseInitializationProxy* WaitForInitialization();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseInitializationProxy">();
	}
	static class UFirebaseInitializationProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseInitializationProxy>();
	}
};
static_assert(alignof(UFirebaseInitializationProxy) == 0x000008, "Wrong alignment on UFirebaseInitializationProxy");
static_assert(sizeof(UFirebaseInitializationProxy) == 0x000040, "Wrong size on UFirebaseInitializationProxy");
static_assert(offsetof(UFirebaseInitializationProxy, FirebaseInitialized) == 0x000030, "Member 'UFirebaseInitializationProxy::FirebaseInitialized' has a wrong offset!");

// Class FirebaseFeatures.VariantLibrary
// 0x0000 (0x0028 - 0x0028)
class UVariantLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FFirebaseVariant FromArray(const TArray<struct FFirebaseVariant>& Value);
	static struct FFirebaseVariant FromBool(const bool bValue);
	static struct FFirebaseVariant FromFloat(float Value);
	static struct FFirebaseVariant FromInt32(int32 Value);
	static struct FFirebaseVariant FromInt64(int64 Value);
	static struct FFirebaseVariant FromMap(const TMap<struct FFirebaseVariant, struct FFirebaseVariant>& Value);
	static struct FFirebaseVariant FromNull();
	static struct FFirebaseVariant FromString(const class FString& Value);
	static struct FFirebaseVariant FromStringMap(const TMap<class FString, struct FFirebaseVariant>& Value);
	static TMap<struct FFirebaseVariant, struct FFirebaseVariant> MakeVariantMap();
	static struct FFirebaseVariant ServerTimestamp();
	static TArray<struct FFirebaseVariant> ToArray(const struct FFirebaseVariant& Value);
	static TArray<uint8> ToBinary(const struct FFirebaseVariant& Value);
	static bool ToBool(const struct FFirebaseVariant& Value);
	static float ToFloat(const struct FFirebaseVariant& Value);
	static int32 ToInt32(const struct FFirebaseVariant& Value);
	static int64 ToInt64(const struct FFirebaseVariant& Value);
	static class FString ToJson(const struct FFirebaseVariant& Value);
	static TMap<struct FFirebaseVariant, struct FFirebaseVariant> ToMap(const struct FFirebaseVariant& Value);
	static class FString ToString(const struct FFirebaseVariant& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VariantLibrary">();
	}
	static class UVariantLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVariantLibrary>();
	}
};
static_assert(alignof(UVariantLibrary) == 0x000008, "Wrong alignment on UVariantLibrary");
static_assert(sizeof(UVariantLibrary) == 0x000028, "Wrong size on UVariantLibrary");

// Class FirebaseFeatures.Firestore
// 0x0000 (0x0028 - 0x0028)
class UFirestore final : public UBlueprintFunctionLibrary
{
public:
	static class UFirestoreQuery* CollectionGroup(const class FString& CollectionId);
	static struct FWriteBatch CreateBatch();
	static class UFirestoreCollectionReference* GetCollection(const class FString& CollectionPath);
	static class UFirestoreDocumentReference* GetDocument(const class FString& DocumentPath);
	static struct FFirestoreSettings GetSettings();
	static void SetPersistenceEnabled(const bool bEnabled);
	static void SetSettings(const struct FFirestoreSettings& Settings);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Firestore">();
	}
	static class UFirestore* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirestore>();
	}
};
static_assert(alignof(UFirestore) == 0x000008, "Wrong alignment on UFirestore");
static_assert(sizeof(UFirestore) == 0x000028, "Wrong size on UFirestore");

// Class FirebaseFeatures.FirestoreLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirestoreLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FFirestoreFieldValue ArrayRemove(const TArray<struct FFirestoreFieldValue>& Elements);
	static struct FFirestoreFieldValue ArrayUnion(const TArray<struct FFirestoreFieldValue>& Elements);
	static void Delete(struct FFirestoreTransaction& Transaction, const class UFirestoreDocumentReference* Document);
	static struct FFirestoreFieldPath DocumentId();
	static bool Exists(const struct FFirestoreDocumentSnapshot& DocumentSnapshot);
	static struct FFirestoreFieldValue FieldValue_Delete();
	static struct FFirestoreFieldValue FieldValue_FromArray(const TArray<struct FFirestoreFieldValue>& Value);
	static struct FFirestoreFieldValue FieldValue_FromBinary(const TArray<uint8>& Value);
	static struct FFirestoreFieldValue FieldValue_FromBool(bool bValue);
	static struct FFirestoreFieldValue FieldValue_FromFloat(float Value);
	static struct FFirestoreFieldValue FieldValue_FromGeoPoint(const struct FFirestoreGeoPoint& Value);
	static struct FFirestoreFieldValue FieldValue_FromInt32(int32 Value);
	static struct FFirestoreFieldValue FieldValue_FromInt64(int64 Value);
	static struct FFirestoreFieldValue FieldValue_FromJSON(const class FString& Value);
	static struct FFirestoreFieldValue FieldValue_FromMap(const TMap<class FString, struct FFirestoreFieldValue>& Value);
	static struct FFirestoreFieldValue FieldValue_FromReference(class UFirestoreDocumentReference* Value);
	static struct FFirestoreFieldValue FieldValue_FromString(const class FString& Value);
	static struct FFirestoreFieldValue FieldValue_FromTimestamp(const struct FFirestoreTimestamp& Value);
	static TArray<struct FFirestoreFieldValue> FieldValue_ToArray(const struct FFirestoreFieldValue& Value);
	static TArray<uint8> FieldValue_ToBinary(const struct FFirestoreFieldValue& Value);
	static bool FieldValue_ToBool(const struct FFirestoreFieldValue& Value);
	static float FieldValue_ToFloat(const struct FFirestoreFieldValue& Value);
	static struct FFirestoreGeoPoint FieldValue_ToGeoPoint(const struct FFirestoreFieldValue& Value);
	static int32 FieldValue_ToInt32(const struct FFirestoreFieldValue& Value);
	static int64 FieldValue_ToInt64(const struct FFirestoreFieldValue& Value);
	static class FString FieldValue_ToJSON(const struct FFirestoreFieldValue& Value);
	static TMap<class FString, struct FFirestoreFieldValue> FieldValue_ToMap(const struct FFirestoreFieldValue& Value);
	static class UFirestoreDocumentReference* FieldValue_ToReference(const struct FFirestoreFieldValue& Value);
	static class FString FieldValue_ToString(const struct FFirestoreFieldValue& Value);
	static struct FFirestoreTimestamp FieldValue_ToTimestamp(const struct FFirestoreFieldValue& Value);
	static class FString FirestoreTimestamp_ToString(const struct FFirestoreTimestamp& Timestamp);
	static struct FFirestoreDocumentSnapshot Get(struct FFirestoreTransaction& Transaction, const class UFirestoreDocumentReference* Document, EFirestoreError* ErrorCode, class FString* ErrorMessage);
	static struct FFirestoreFieldValue Get_Snapshot(const struct FFirestoreDocumentSnapshot& DocumentSnapshot, const class FString& Field, EFirestoreServerTimestampBehavior ServerTimestampBehavior);
	static TMap<class FString, struct FFirestoreFieldValue> GetData(const struct FFirestoreDocumentSnapshot& DocumentSnapshot, EFirestoreServerTimestampBehavior ServerTimestampBehavior);
	static class FString GetId(const struct FFirestoreDocumentSnapshot& DocumentSnapshot);
	static struct FFirestoreSnapshotMetadata GetMetadata(const struct FFirestoreDocumentSnapshot& DocumentSnapshot);
	static class UFirestoreDocumentReference* GetReference(const struct FFirestoreDocumentSnapshot& DocumentSnapshot);
	static EFirestoreFieldValueType GetType(const struct FFirestoreFieldValue& FieldValue);
	static struct FFirestoreFieldValue GetWithFieldPath(const struct FFirestoreDocumentSnapshot& DocumentSnapshot, const struct FFirestoreFieldPath& Field, EFirestoreServerTimestampBehavior ServerTimestampBehavior);
	static bool HasDocumentPendingChanges(struct FFirestoreDocumentSnapshot& Document);
	static bool HasPendingChanges(struct FFirestoreSnapshotMetadata& Metadata);
	static bool IsDocumentFromCache(struct FFirestoreDocumentSnapshot& Document);
	static bool IsFromCache(struct FFirestoreSnapshotMetadata& Metadata);
	static struct FFirestoreFieldPath MakeFirestoreFieldPath(const TArray<class FString>& FieldNames);
	static struct FFirestoreSetOptions Merge();
	static struct FFirestoreSetOptions MergeFieldPaths(const TArray<struct FFirestoreFieldPath>& Fields);
	static struct FFirestoreSetOptions MergeFields(const TArray<class FString>& Fields);
	static struct FFirestoreTimestamp Now();
	static struct FFirestoreFieldValue Null();
	static void Remove(struct FQuerySnapshotListenerHandle& ListenerHandle);
	static struct FFirestoreFieldValue ServerTimestamp();
	static void Set(struct FFirestoreTransaction& Transaction, const class UFirestoreDocumentReference* Document, const TMap<class FString, struct FFirestoreFieldValue>& Data, const struct FFirestoreSetOptions& Options);
	static struct FDateTime ToDateTime(const struct FFirestoreTimestamp& Timestamp);
	static class FString ToString(const struct FFirestoreFieldPath& FieldPath);
	static class FString ToString_Snapshot(const struct FFirestoreDocumentSnapshot& DocumentSnapshot);
	static void Update(struct FFirestoreTransaction& Transaction, const class UFirestoreDocumentReference* Document, const TMap<class FString, struct FFirestoreFieldValue>& Data);
	static void UpdateFieldPath(struct FFirestoreTransaction& Transaction, const class UFirestoreDocumentReference* Document, const TMap<struct FFirestoreFieldPath, struct FFirestoreFieldValue>& Data);
	static struct FWriteBatch WriteBatch_Delete(struct FWriteBatch& WriteBatch, const class UFirestoreDocumentReference* Document);
	static struct FWriteBatch WriteBatch_Set(struct FWriteBatch& WriteBatch, const class UFirestoreDocumentReference* Document, const TMap<class FString, struct FFirestoreFieldValue>& Data, const struct FFirestoreSetOptions& Options);
	static struct FWriteBatch WriteBatch_Update(struct FWriteBatch& WriteBatch, const class UFirestoreDocumentReference* Document, const TMap<class FString, struct FFirestoreFieldValue>& Data);
	static struct FWriteBatch WriteBatch_UpdateFieldPath(struct FWriteBatch& WriteBatch, const class UFirestoreDocumentReference* Document, const TMap<struct FFirestoreFieldPath, struct FFirestoreFieldValue>& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirestoreLibrary">();
	}
	static class UFirestoreLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirestoreLibrary>();
	}
};
static_assert(alignof(UFirestoreLibrary) == 0x000008, "Wrong alignment on UFirestoreLibrary");
static_assert(sizeof(UFirestoreLibrary) == 0x000028, "Wrong size on UFirestoreLibrary");

// Class FirebaseFeatures.WriteBatchCommitProxy
// 0x0020 (0x0050 - 0x0030)
class UWriteBatchCommitProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnCommitted;                                       // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UWriteBatchCommitProxy* Commit(struct FWriteBatch& WriteBatch);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WriteBatchCommitProxy">();
	}
	static class UWriteBatchCommitProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWriteBatchCommitProxy>();
	}
};
static_assert(alignof(UWriteBatchCommitProxy) == 0x000008, "Wrong alignment on UWriteBatchCommitProxy");
static_assert(sizeof(UWriteBatchCommitProxy) == 0x000050, "Wrong size on UWriteBatchCommitProxy");
static_assert(offsetof(UWriteBatchCommitProxy, OnCommitted) == 0x000030, "Member 'UWriteBatchCommitProxy::OnCommitted' has a wrong offset!");
static_assert(offsetof(UWriteBatchCommitProxy, OnError) == 0x000040, "Member 'UWriteBatchCommitProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.FirestoreRunTransactionProxy
// 0x0030 (0x0060 - 0x0030)
class UFirestoreRunTransactionProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnRun;                                             // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFirestoreRunTransactionProxy* RunTransaction(const TDelegate<void(struct FFirestoreTransaction& Transaction, class FString* ErrorMessage)>& TransactionFunction);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirestoreRunTransactionProxy">();
	}
	static class UFirestoreRunTransactionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirestoreRunTransactionProxy>();
	}
};
static_assert(alignof(UFirestoreRunTransactionProxy) == 0x000008, "Wrong alignment on UFirestoreRunTransactionProxy");
static_assert(sizeof(UFirestoreRunTransactionProxy) == 0x000060, "Wrong size on UFirestoreRunTransactionProxy");
static_assert(offsetof(UFirestoreRunTransactionProxy, OnRun) == 0x000030, "Member 'UFirestoreRunTransactionProxy::OnRun' has a wrong offset!");
static_assert(offsetof(UFirestoreRunTransactionProxy, OnError) == 0x000040, "Member 'UFirestoreRunTransactionProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DisableNetworkProxy
// 0x0020 (0x0050 - 0x0030)
class UDisableNetworkProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnDisabled;                                        // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UDisableNetworkProxy* DisableNetwork();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisableNetworkProxy">();
	}
	static class UDisableNetworkProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisableNetworkProxy>();
	}
};
static_assert(alignof(UDisableNetworkProxy) == 0x000008, "Wrong alignment on UDisableNetworkProxy");
static_assert(sizeof(UDisableNetworkProxy) == 0x000050, "Wrong size on UDisableNetworkProxy");
static_assert(offsetof(UDisableNetworkProxy, OnDisabled) == 0x000030, "Member 'UDisableNetworkProxy::OnDisabled' has a wrong offset!");
static_assert(offsetof(UDisableNetworkProxy, OnError) == 0x000040, "Member 'UDisableNetworkProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.EnableNetworkProxy
// 0x0020 (0x0050 - 0x0030)
class UEnableNetworkProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnEnabled;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UEnableNetworkProxy* DisableNetwork();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EnableNetworkProxy">();
	}
	static class UEnableNetworkProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEnableNetworkProxy>();
	}
};
static_assert(alignof(UEnableNetworkProxy) == 0x000008, "Wrong alignment on UEnableNetworkProxy");
static_assert(sizeof(UEnableNetworkProxy) == 0x000050, "Wrong size on UEnableNetworkProxy");
static_assert(offsetof(UEnableNetworkProxy, OnEnabled) == 0x000030, "Member 'UEnableNetworkProxy::OnEnabled' has a wrong offset!");
static_assert(offsetof(UEnableNetworkProxy, OnError) == 0x000040, "Member 'UEnableNetworkProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.WaitForPendingWritesProxy
// 0x0020 (0x0050 - 0x0030)
class UWaitForPendingWritesProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnPendingWritesOver;                               // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UWaitForPendingWritesProxy* DisableNetwork();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WaitForPendingWritesProxy">();
	}
	static class UWaitForPendingWritesProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWaitForPendingWritesProxy>();
	}
};
static_assert(alignof(UWaitForPendingWritesProxy) == 0x000008, "Wrong alignment on UWaitForPendingWritesProxy");
static_assert(sizeof(UWaitForPendingWritesProxy) == 0x000050, "Wrong size on UWaitForPendingWritesProxy");
static_assert(offsetof(UWaitForPendingWritesProxy, OnPendingWritesOver) == 0x000030, "Member 'UWaitForPendingWritesProxy::OnPendingWritesOver' has a wrong offset!");
static_assert(offsetof(UWaitForPendingWritesProxy, OnError) == 0x000040, "Member 'UWaitForPendingWritesProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DocumentReferenceAsyncBase
// 0x0008 (0x0038 - 0x0030)
class UDocumentReferenceAsyncBase : public UBlueprintAsyncActionBase
{
public:
	class UFirestoreDocumentReference*            Reference;                                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DocumentReferenceAsyncBase">();
	}
	static class UDocumentReferenceAsyncBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDocumentReferenceAsyncBase>();
	}
};
static_assert(alignof(UDocumentReferenceAsyncBase) == 0x000008, "Wrong alignment on UDocumentReferenceAsyncBase");
static_assert(sizeof(UDocumentReferenceAsyncBase) == 0x000038, "Wrong size on UDocumentReferenceAsyncBase");
static_assert(offsetof(UDocumentReferenceAsyncBase, Reference) == 0x000030, "Member 'UDocumentReferenceAsyncBase::Reference' has a wrong offset!");

// Class FirebaseFeatures.DocumentReferenceGetProxy
// 0x0028 (0x0060 - 0x0038)
class UDocumentReferenceGetProxy final : public UDocumentReferenceAsyncBase
{
public:
	FMulticastInlineDelegateProperty_             OnGot;                                             // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDocumentReferenceGetProxy* Get(const class UFirestoreDocumentReference* DocumentReference, EFirestoreSource Source);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DocumentReferenceGetProxy">();
	}
	static class UDocumentReferenceGetProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDocumentReferenceGetProxy>();
	}
};
static_assert(alignof(UDocumentReferenceGetProxy) == 0x000008, "Wrong alignment on UDocumentReferenceGetProxy");
static_assert(sizeof(UDocumentReferenceGetProxy) == 0x000060, "Wrong size on UDocumentReferenceGetProxy");
static_assert(offsetof(UDocumentReferenceGetProxy, OnGot) == 0x000038, "Member 'UDocumentReferenceGetProxy::OnGot' has a wrong offset!");
static_assert(offsetof(UDocumentReferenceGetProxy, OnError) == 0x000048, "Member 'UDocumentReferenceGetProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DocumentReferenceSetProxy
// 0x0080 (0x00B8 - 0x0038)
class UDocumentReferenceSetProxy final : public UDocumentReferenceAsyncBase
{
public:
	FMulticastInlineDelegateProperty_             OnSet;                                             // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x60];                                      // 0x0058(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDocumentReferenceSetProxy* Set(const class UFirestoreDocumentReference* DocumentReference, const TMap<class FString, struct FFirestoreFieldValue>& Data, const struct FFirestoreSetOptions& Options);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DocumentReferenceSetProxy">();
	}
	static class UDocumentReferenceSetProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDocumentReferenceSetProxy>();
	}
};
static_assert(alignof(UDocumentReferenceSetProxy) == 0x000008, "Wrong alignment on UDocumentReferenceSetProxy");
static_assert(sizeof(UDocumentReferenceSetProxy) == 0x0000B8, "Wrong size on UDocumentReferenceSetProxy");
static_assert(offsetof(UDocumentReferenceSetProxy, OnSet) == 0x000038, "Member 'UDocumentReferenceSetProxy::OnSet' has a wrong offset!");
static_assert(offsetof(UDocumentReferenceSetProxy, OnError) == 0x000048, "Member 'UDocumentReferenceSetProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DocumentReferenceUpdateProxy
// 0x0078 (0x00B0 - 0x0038)
class UDocumentReferenceUpdateProxy final : public UDocumentReferenceAsyncBase
{
public:
	FMulticastInlineDelegateProperty_             OnUpdated;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x58];                                      // 0x0058(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDocumentReferenceUpdateProxy* Update(const class UFirestoreDocumentReference* DocumentReference, const TMap<class FString, struct FFirestoreFieldValue>& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DocumentReferenceUpdateProxy">();
	}
	static class UDocumentReferenceUpdateProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDocumentReferenceUpdateProxy>();
	}
};
static_assert(alignof(UDocumentReferenceUpdateProxy) == 0x000008, "Wrong alignment on UDocumentReferenceUpdateProxy");
static_assert(sizeof(UDocumentReferenceUpdateProxy) == 0x0000B0, "Wrong size on UDocumentReferenceUpdateProxy");
static_assert(offsetof(UDocumentReferenceUpdateProxy, OnUpdated) == 0x000038, "Member 'UDocumentReferenceUpdateProxy::OnUpdated' has a wrong offset!");
static_assert(offsetof(UDocumentReferenceUpdateProxy, OnError) == 0x000048, "Member 'UDocumentReferenceUpdateProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DocumentReferenceUpdateWithPathProxy
// 0x0078 (0x00B0 - 0x0038)
class UDocumentReferenceUpdateWithPathProxy final : public UDocumentReferenceAsyncBase
{
public:
	FMulticastInlineDelegateProperty_             OnUpdated;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x58];                                      // 0x0058(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UDocumentReferenceUpdateWithPathProxy* UpdateWithPath(const class UFirestoreDocumentReference* DocumentReference, const TMap<struct FFirestoreFieldPath, struct FFirestoreFieldValue>& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DocumentReferenceUpdateWithPathProxy">();
	}
	static class UDocumentReferenceUpdateWithPathProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDocumentReferenceUpdateWithPathProxy>();
	}
};
static_assert(alignof(UDocumentReferenceUpdateWithPathProxy) == 0x000008, "Wrong alignment on UDocumentReferenceUpdateWithPathProxy");
static_assert(sizeof(UDocumentReferenceUpdateWithPathProxy) == 0x0000B0, "Wrong size on UDocumentReferenceUpdateWithPathProxy");
static_assert(offsetof(UDocumentReferenceUpdateWithPathProxy, OnUpdated) == 0x000038, "Member 'UDocumentReferenceUpdateWithPathProxy::OnUpdated' has a wrong offset!");
static_assert(offsetof(UDocumentReferenceUpdateWithPathProxy, OnError) == 0x000048, "Member 'UDocumentReferenceUpdateWithPathProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DocumentReferenceDeleteProxy
// 0x0020 (0x0058 - 0x0038)
class UDocumentReferenceDeleteProxy final : public UDocumentReferenceAsyncBase
{
public:
	FMulticastInlineDelegateProperty_             OnDeleted;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UDocumentReferenceDeleteProxy* Delete(const class UFirestoreDocumentReference* DocumentReference);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DocumentReferenceDeleteProxy">();
	}
	static class UDocumentReferenceDeleteProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDocumentReferenceDeleteProxy>();
	}
};
static_assert(alignof(UDocumentReferenceDeleteProxy) == 0x000008, "Wrong alignment on UDocumentReferenceDeleteProxy");
static_assert(sizeof(UDocumentReferenceDeleteProxy) == 0x000058, "Wrong size on UDocumentReferenceDeleteProxy");
static_assert(offsetof(UDocumentReferenceDeleteProxy, OnDeleted) == 0x000038, "Member 'UDocumentReferenceDeleteProxy::OnDeleted' has a wrong offset!");
static_assert(offsetof(UDocumentReferenceDeleteProxy, OnError) == 0x000048, "Member 'UDocumentReferenceDeleteProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.CollectionReferenceAddProxy
// 0x0078 (0x00A8 - 0x0030)
class UCollectionReferenceAddProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnAdded;                                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFirestoreCollectionReference*          Reference;                                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x50];                                      // 0x0058(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCollectionReferenceAddProxy* Add(const class UFirestoreCollectionReference* DocumentReference, const TMap<class FString, struct FFirestoreFieldValue>& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CollectionReferenceAddProxy">();
	}
	static class UCollectionReferenceAddProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCollectionReferenceAddProxy>();
	}
};
static_assert(alignof(UCollectionReferenceAddProxy) == 0x000008, "Wrong alignment on UCollectionReferenceAddProxy");
static_assert(sizeof(UCollectionReferenceAddProxy) == 0x0000A8, "Wrong size on UCollectionReferenceAddProxy");
static_assert(offsetof(UCollectionReferenceAddProxy, OnAdded) == 0x000030, "Member 'UCollectionReferenceAddProxy::OnAdded' has a wrong offset!");
static_assert(offsetof(UCollectionReferenceAddProxy, OnError) == 0x000040, "Member 'UCollectionReferenceAddProxy::OnError' has a wrong offset!");
static_assert(offsetof(UCollectionReferenceAddProxy, Reference) == 0x000050, "Member 'UCollectionReferenceAddProxy::Reference' has a wrong offset!");

// Class FirebaseFeatures.QueryGetProxy
// 0x0030 (0x0060 - 0x0030)
class UQueryGetProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnGot;                                             // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFirestoreQuery*                        Query;                                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UQueryGetProxy* Get(class UFirestoreQuery* Param_Query, const EFirestoreSource Source);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"QueryGetProxy">();
	}
	static class UQueryGetProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQueryGetProxy>();
	}
};
static_assert(alignof(UQueryGetProxy) == 0x000008, "Wrong alignment on UQueryGetProxy");
static_assert(sizeof(UQueryGetProxy) == 0x000060, "Wrong size on UQueryGetProxy");
static_assert(offsetof(UQueryGetProxy, OnGot) == 0x000030, "Member 'UQueryGetProxy::OnGot' has a wrong offset!");
static_assert(offsetof(UQueryGetProxy, OnError) == 0x000040, "Member 'UQueryGetProxy::OnError' has a wrong offset!");
static_assert(offsetof(UQueryGetProxy, Query) == 0x000050, "Member 'UQueryGetProxy::Query' has a wrong offset!");

// Class FirebaseFeatures.FirebaseFunctionsLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebaseFunctionsLibrary final : public UBlueprintFunctionLibrary
{
public:
	static struct FFirebaseHttpsCallableReference GetHttpsCallable(const class FString& Param_Name);
	static struct FFirebaseHttpsCallableReference GetHttpsCallableWithRegion(const class FString& Param_Name, const class FString& Region);
	static void UseFunctionsEmulator(const class FString& Origin);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseFunctionsLibrary">();
	}
	static class UFirebaseFunctionsLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseFunctionsLibrary>();
	}
};
static_assert(alignof(UFirebaseFunctionsLibrary) == 0x000008, "Wrong alignment on UFirebaseFunctionsLibrary");
static_assert(sizeof(UFirebaseFunctionsLibrary) == 0x000028, "Wrong size on UFirebaseFunctionsLibrary");

// Class FirebaseFeatures.FirebaseFunctionsBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebaseFunctionsBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool IsValid(const struct FFirebaseHttpsCallableReference& HttpsCallable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseFunctionsBlueprintLibrary">();
	}
	static class UFirebaseFunctionsBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseFunctionsBlueprintLibrary>();
	}
};
static_assert(alignof(UFirebaseFunctionsBlueprintLibrary) == 0x000008, "Wrong alignment on UFirebaseFunctionsBlueprintLibrary");
static_assert(sizeof(UFirebaseFunctionsBlueprintLibrary) == 0x000028, "Wrong size on UFirebaseFunctionsBlueprintLibrary");

// Class FirebaseFeatures.CallHttpsFunctionsProxy
// 0x0028 (0x0058 - 0x0030)
class UCallHttpsFunctionsProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnCalled;                                          // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCallHttpsFunctionsProxy* Call(struct FFirebaseHttpsCallableReference& HttpsCallable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallHttpsFunctionsProxy">();
	}
	static class UCallHttpsFunctionsProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallHttpsFunctionsProxy>();
	}
};
static_assert(alignof(UCallHttpsFunctionsProxy) == 0x000008, "Wrong alignment on UCallHttpsFunctionsProxy");
static_assert(sizeof(UCallHttpsFunctionsProxy) == 0x000058, "Wrong size on UCallHttpsFunctionsProxy");
static_assert(offsetof(UCallHttpsFunctionsProxy, OnCalled) == 0x000030, "Member 'UCallHttpsFunctionsProxy::OnCalled' has a wrong offset!");
static_assert(offsetof(UCallHttpsFunctionsProxy, OnError) == 0x000040, "Member 'UCallHttpsFunctionsProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.CallHttpsFunctionsWithDataProxy
// 0x0040 (0x0070 - 0x0030)
class UCallHttpsFunctionsWithDataProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnCalled;                                          // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x20];                                      // 0x0050(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCallHttpsFunctionsWithDataProxy* CallWithData(struct FFirebaseHttpsCallableReference& HttpsCallable, const struct FFirebaseVariant& Data);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CallHttpsFunctionsWithDataProxy">();
	}
	static class UCallHttpsFunctionsWithDataProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCallHttpsFunctionsWithDataProxy>();
	}
};
static_assert(alignof(UCallHttpsFunctionsWithDataProxy) == 0x000008, "Wrong alignment on UCallHttpsFunctionsWithDataProxy");
static_assert(sizeof(UCallHttpsFunctionsWithDataProxy) == 0x000070, "Wrong size on UCallHttpsFunctionsWithDataProxy");
static_assert(offsetof(UCallHttpsFunctionsWithDataProxy, OnCalled) == 0x000030, "Member 'UCallHttpsFunctionsWithDataProxy::OnCalled' has a wrong offset!");
static_assert(offsetof(UCallHttpsFunctionsWithDataProxy, OnError) == 0x000040, "Member 'UCallHttpsFunctionsWithDataProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.FbGoogleSignInProxy
// 0x0038 (0x0068 - 0x0030)
class UFbGoogleSignInProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             SignedIn;                                          // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             Failed;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFbGoogleSignInProxy* SignIn(const class FString& ServerClientID, bool bSkipIfSigned, bool bUseSilentSignIn);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FbGoogleSignInProxy">();
	}
	static class UFbGoogleSignInProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFbGoogleSignInProxy>();
	}
};
static_assert(alignof(UFbGoogleSignInProxy) == 0x000008, "Wrong alignment on UFbGoogleSignInProxy");
static_assert(sizeof(UFbGoogleSignInProxy) == 0x000068, "Wrong size on UFbGoogleSignInProxy");
static_assert(offsetof(UFbGoogleSignInProxy, SignedIn) == 0x000030, "Member 'UFbGoogleSignInProxy::SignedIn' has a wrong offset!");
static_assert(offsetof(UFbGoogleSignInProxy, Failed) == 0x000040, "Member 'UFbGoogleSignInProxy::Failed' has a wrong offset!");

// Class FirebaseFeatures.GetLeaderboardScoreProxy
// 0x0030 (0x0060 - 0x0030)
class UGetLeaderboardScoreProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             ScoreRead;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             Failed;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UGetLeaderboardScoreProxy* GetScore(const class FString& LeaderboardID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GetLeaderboardScoreProxy">();
	}
	static class UGetLeaderboardScoreProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGetLeaderboardScoreProxy>();
	}
};
static_assert(alignof(UGetLeaderboardScoreProxy) == 0x000008, "Wrong alignment on UGetLeaderboardScoreProxy");
static_assert(sizeof(UGetLeaderboardScoreProxy) == 0x000060, "Wrong size on UGetLeaderboardScoreProxy");
static_assert(offsetof(UGetLeaderboardScoreProxy, ScoreRead) == 0x000030, "Member 'UGetLeaderboardScoreProxy::ScoreRead' has a wrong offset!");
static_assert(offsetof(UGetLeaderboardScoreProxy, Failed) == 0x000040, "Member 'UGetLeaderboardScoreProxy::Failed' has a wrong offset!");

// Class FirebaseFeatures.GoogleSignInCredentialProxy
// 0x0038 (0x0068 - 0x0030)
class UGoogleSignInCredentialProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             Success;                                           // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             Failed;                                            // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UGoogleSignInCredentialProxy* GetCredential(const class FString& ServerClientID, bool bUseSilentSignIn, bool bSkipIfSigned);
	static class UGoogleSignInCredentialProxy* GetCredentialFromPlayGames(const class FString& ServerClientID, bool bUseSilentSignIn, bool bSkipIfSigned);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleSignInCredentialProxy">();
	}
	static class UGoogleSignInCredentialProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleSignInCredentialProxy>();
	}
};
static_assert(alignof(UGoogleSignInCredentialProxy) == 0x000008, "Wrong alignment on UGoogleSignInCredentialProxy");
static_assert(sizeof(UGoogleSignInCredentialProxy) == 0x000068, "Wrong size on UGoogleSignInCredentialProxy");
static_assert(offsetof(UGoogleSignInCredentialProxy, Success) == 0x000030, "Member 'UGoogleSignInCredentialProxy::Success' has a wrong offset!");
static_assert(offsetof(UGoogleSignInCredentialProxy, Failed) == 0x000040, "Member 'UGoogleSignInCredentialProxy::Failed' has a wrong offset!");

// Class FirebaseFeatures.GoogleServicesLibrary
// 0x0000 (0x0028 - 0x0028)
class UGoogleServicesLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class FString GetAccessToken();
	static class FString GetIdToken();
	static class FString GetServerAuthCode();
	static bool IsSignedIn();
	static void ShowAchievements();
	static void ShowLeaderboard(const class FString& LeaderboardID);
	static void SignOut();
	static void SubmitScore(const class FString& LeaderboardID, int64 Score);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GoogleServicesLibrary">();
	}
	static class UGoogleServicesLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGoogleServicesLibrary>();
	}
};
static_assert(alignof(UGoogleServicesLibrary) == 0x000008, "Wrong alignment on UGoogleServicesLibrary");
static_assert(sizeof(UGoogleServicesLibrary) == 0x000028, "Wrong size on UGoogleServicesLibrary");

// Class FirebaseFeatures.FirebaseMesssagingBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UFirebaseMesssagingBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class FString GetCachedCloudMessagingToken();
	static struct FFirebaseMessage GetLastMessage();
	static bool IsDeliveryMetricsExportToBigQueryEnabled();
	static bool IsTokenRegistrationOnInitEnabled();
	static void Send(const struct FFirebaseMessage& Message);
	static void SetDeliveryMetricsExportToBigQuery(const bool bEnable);
	static void SetTokenRegistrationOnInitEnabled(const bool bEnable);
	static void Terminate();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseMesssagingBlueprintLibrary">();
	}
	static class UFirebaseMesssagingBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseMesssagingBlueprintLibrary>();
	}
};
static_assert(alignof(UFirebaseMesssagingBlueprintLibrary) == 0x000008, "Wrong alignment on UFirebaseMesssagingBlueprintLibrary");
static_assert(sizeof(UFirebaseMesssagingBlueprintLibrary) == 0x000028, "Wrong size on UFirebaseMesssagingBlueprintLibrary");

// Class FirebaseFeatures.RequestPermissionProxy
// 0x0020 (0x0050 - 0x0030)
class URequestPermissionProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnRequestOver;                                     // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class URequestPermissionProxy* RequestPermission();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RequestPermissionProxy">();
	}
	static class URequestPermissionProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<URequestPermissionProxy>();
	}
};
static_assert(alignof(URequestPermissionProxy) == 0x000008, "Wrong alignment on URequestPermissionProxy");
static_assert(sizeof(URequestPermissionProxy) == 0x000050, "Wrong size on URequestPermissionProxy");
static_assert(offsetof(URequestPermissionProxy, OnRequestOver) == 0x000030, "Member 'URequestPermissionProxy::OnRequestOver' has a wrong offset!");
static_assert(offsetof(URequestPermissionProxy, OnError) == 0x000040, "Member 'URequestPermissionProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.SubscribeProxy
// 0x0030 (0x0060 - 0x0030)
class USubscribeProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnSubscribed;                                      // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class USubscribeProxy* Subscribe(const class FString& Topic);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SubscribeProxy">();
	}
	static class USubscribeProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubscribeProxy>();
	}
};
static_assert(alignof(USubscribeProxy) == 0x000008, "Wrong alignment on USubscribeProxy");
static_assert(sizeof(USubscribeProxy) == 0x000060, "Wrong size on USubscribeProxy");
static_assert(offsetof(USubscribeProxy, OnSubscribed) == 0x000030, "Member 'USubscribeProxy::OnSubscribed' has a wrong offset!");
static_assert(offsetof(USubscribeProxy, OnError) == 0x000040, "Member 'USubscribeProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.UnsubscribeProxy
// 0x0030 (0x0060 - 0x0030)
class UUnsubscribeProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnUnsubscribed;                                    // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UUnsubscribeProxy* Unsubscribe(const class FString& Topic);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UnsubscribeProxy">();
	}
	static class UUnsubscribeProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUnsubscribeProxy>();
	}
};
static_assert(alignof(UUnsubscribeProxy) == 0x000008, "Wrong alignment on UUnsubscribeProxy");
static_assert(sizeof(UUnsubscribeProxy) == 0x000060, "Wrong size on UUnsubscribeProxy");
static_assert(offsetof(UUnsubscribeProxy, OnUnsubscribed) == 0x000030, "Member 'UUnsubscribeProxy::OnUnsubscribed' has a wrong offset!");
static_assert(offsetof(UUnsubscribeProxy, OnError) == 0x000040, "Member 'UUnsubscribeProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.MessagingEventsProxy
// 0x0030 (0x0060 - 0x0030)
class UMessagingEventsProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnMessage;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnTokenReceived;                                   // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x10];                                      // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UMessagingEventsProxy* ListenForMessagingEvents();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MessagingEventsProxy">();
	}
	static class UMessagingEventsProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMessagingEventsProxy>();
	}
};
static_assert(alignof(UMessagingEventsProxy) == 0x000008, "Wrong alignment on UMessagingEventsProxy");
static_assert(sizeof(UMessagingEventsProxy) == 0x000060, "Wrong size on UMessagingEventsProxy");
static_assert(offsetof(UMessagingEventsProxy, OnMessage) == 0x000030, "Member 'UMessagingEventsProxy::OnMessage' has a wrong offset!");
static_assert(offsetof(UMessagingEventsProxy, OnTokenReceived) == 0x000040, "Member 'UMessagingEventsProxy::OnTokenReceived' has a wrong offset!");

// Class FirebaseFeatures.FirebaseRemoteConfig
// 0x0000 (0x0028 - 0x0028)
class UFirebaseRemoteConfig final : public UBlueprintFunctionLibrary
{
public:
	static void ActivateFetched(EFirebaseConfigFetchActivationBranch* branch);
	static bool GetBoolean(const class FString& Key);
	static bool GetBooleanWithInfo(const class FString& Key, struct FFirebaseValueInfo* Info);
	static uint8 GetByte(const class FString& Key);
	static class FString GetConfigSetting(EFirebaseConfigSetting Defaults);
	static TArray<uint8> GetData(const class FString& Key);
	static TArray<uint8> GetDataWithInfo(const class FString& Key, struct FFirebaseValueInfo* Info);
	static float GetFloat(const class FString& Key);
	static float GetFloatWithInfo(const class FString& Key, struct FFirebaseValueInfo* Info);
	static struct FFirebaseConfigInfo GetInfo();
	static int32 GetInt32(const class FString& Key);
	static int64 GetInt64(const class FString& Key);
	static int64 GetInt64WithInfo(const class FString& Key, struct FFirebaseValueInfo* Info);
	static TArray<class FString> GetKeys();
	static TArray<class FString> GetKeysByPrefix(const class FString& Prefix);
	static class FString GetString(const class FString& Key);
	static class FString GetStringWithInfo(const class FString& Key, struct FFirebaseValueInfo* Info);
	static void SetConfigSetting(EFirebaseConfigSetting Setting, const class FString& Value);
	static void SetDefaults(const TArray<struct FFirebaseConfigKeyValue>& Defaults);
	static void SetDefaultsWithVariant(const TArray<struct FFirebaseConfigKeyValueVariant>& Defaults);
	static void Terminate();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseRemoteConfig">();
	}
	static class UFirebaseRemoteConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseRemoteConfig>();
	}
};
static_assert(alignof(UFirebaseRemoteConfig) == 0x000008, "Wrong alignment on UFirebaseRemoteConfig");
static_assert(sizeof(UFirebaseRemoteConfig) == 0x000028, "Wrong size on UFirebaseRemoteConfig");

// Class FirebaseFeatures.FetchProxy
// 0x0020 (0x0050 - 0x0030)
class UFetchProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnFetched;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailed;                                          // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UFetchProxy* Fetch();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FetchProxy">();
	}
	static class UFetchProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFetchProxy>();
	}
};
static_assert(alignof(UFetchProxy) == 0x000008, "Wrong alignment on UFetchProxy");
static_assert(sizeof(UFetchProxy) == 0x000050, "Wrong size on UFetchProxy");
static_assert(offsetof(UFetchProxy, OnFetched) == 0x000030, "Member 'UFetchProxy::OnFetched' has a wrong offset!");
static_assert(offsetof(UFetchProxy, OnFailed) == 0x000040, "Member 'UFetchProxy::OnFailed' has a wrong offset!");

// Class FirebaseFeatures.FetchWithCacheExpirationProxy
// 0x0028 (0x0058 - 0x0030)
class UFetchWithCacheExpirationProxy final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnFetched;                                         // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailed;                                          // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x8];                                       // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UFetchWithCacheExpirationProxy* FetchWithCacheExpiration(const int32 CacheExpirationInSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FetchWithCacheExpirationProxy">();
	}
	static class UFetchWithCacheExpirationProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFetchWithCacheExpirationProxy>();
	}
};
static_assert(alignof(UFetchWithCacheExpirationProxy) == 0x000008, "Wrong alignment on UFetchWithCacheExpirationProxy");
static_assert(sizeof(UFetchWithCacheExpirationProxy) == 0x000058, "Wrong size on UFetchWithCacheExpirationProxy");
static_assert(offsetof(UFetchWithCacheExpirationProxy, OnFetched) == 0x000030, "Member 'UFetchWithCacheExpirationProxy::OnFetched' has a wrong offset!");
static_assert(offsetof(UFetchWithCacheExpirationProxy, OnFailed) == 0x000040, "Member 'UFetchWithCacheExpirationProxy::OnFailed' has a wrong offset!");

// Class FirebaseFeatures.FirebaseStorage
// 0x0000 (0x0028 - 0x0028)
class UFirebaseStorage final : public UBlueprintFunctionLibrary
{
public:
	static float GetMaxDownloadRetryTime();
	static float GetMaxOperationRetryTime();
	static float GetMaxUploadRetryTime();
	static class UFirebaseStorageReference* GetReference();
	static class UFirebaseStorageReference* GetReferenceFromPath(const class FString& Path);
	static class UFirebaseStorageReference* GetReferenceFromUrl(const class FString& URL);
	static class FString GetUrl();
	static void SetMaxDownloadRetryTime(float MaxTransferRetrySeconds);
	static void SetMaxOperationRetryTime(float MaxTransferRetrySeconds);
	static void SetMaxUploadRetryTime(float MaxTransferRetrySeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseStorage">();
	}
	static class UFirebaseStorage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseStorage>();
	}
};
static_assert(alignof(UFirebaseStorage) == 0x000008, "Wrong alignment on UFirebaseStorage");
static_assert(sizeof(UFirebaseStorage) == 0x000028, "Wrong size on UFirebaseStorage");

// Class FirebaseFeatures.StorageBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UStorageBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static int64 BytesTransferred(const struct FFirebaseStorageController& Controller);
	static void Cancel(struct FFirebaseStorageController& Controller, EFirebaseStorageBlueprintExecutionPin* Branches);
	static class FString ContentType(const struct FFirebaseStorageMetadata& Metadata);
	static class FString GetBucket(const struct FFirebaseStorageMetadata& Metadata);
	static class FString GetCacheControl(const struct FFirebaseStorageMetadata& Metadata);
	static class FString GetContentDisposition(const struct FFirebaseStorageMetadata& Metadata);
	static class FString GetContentEncoding(const struct FFirebaseStorageMetadata& Metadata);
	static class FString GetContentLanguage(const struct FFirebaseStorageMetadata& Metadata);
	static int64 GetCreationTime(const struct FFirebaseStorageMetadata& Metadata);
	static TMap<class FString, class FString> GetCustomMetadata(const struct FFirebaseStorageMetadata& Metadata);
	static int64 GetGeneration(const struct FFirebaseStorageMetadata& Metadata);
	static class FString GetMd5Hash(const struct FFirebaseStorageMetadata& Metadata);
	static int64 GetMetadataGeneration(const struct FFirebaseStorageMetadata& Metadata);
	static class FString GetName(const struct FFirebaseStorageMetadata& Metadata);
	static class FString GetPath(const struct FFirebaseStorageMetadata& Metadata);
	static class UFirebaseStorageReference* GetReference(const struct FFirebaseStorageController& Controller);
	static class UFirebaseStorageReference* GetReference_Metadata(const struct FFirebaseStorageMetadata& Metadata);
	static int64 GetSizeBytes(const struct FFirebaseStorageMetadata& Metadata);
	static int64 GetUpdatedTime(const struct FFirebaseStorageMetadata& Metadata);
	static bool IsPaused(struct FFirebaseStorageController& Controller);
	static bool IsValid(const struct FFirebaseStorageController& Controller);
	static bool IsValid_Metadata(const struct FFirebaseStorageMetadata& Metadata);
	static void Pause(struct FFirebaseStorageController& Controller, EFirebaseStorageBlueprintExecutionPin* Branches);
	static void Resume(struct FFirebaseStorageController& Controller, EFirebaseStorageBlueprintExecutionPin* Branches);
	static void SetCachControl(struct FFirebaseStorageMetadata& Metadata, const class FString& CacheControl);
	static void SetContentDisposition(struct FFirebaseStorageMetadata& Metadata, const class FString& Disposition);
	static void SetContentEncoding(struct FFirebaseStorageMetadata& Metadata, const class FString& Encoding);
	static void SetContentLanguage(struct FFirebaseStorageMetadata& Metadata, const class FString& Language);
	static void SetContentType(struct FFirebaseStorageMetadata& Metadata, const class FString& Type);
	static int64 TotalByteCount(const struct FFirebaseStorageController& Controller);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StorageBlueprintLibrary">();
	}
	static class UStorageBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStorageBlueprintLibrary>();
	}
};
static_assert(alignof(UStorageBlueprintLibrary) == 0x000008, "Wrong alignment on UStorageBlueprintLibrary");
static_assert(sizeof(UStorageBlueprintLibrary) == 0x000028, "Wrong size on UStorageBlueprintLibrary");

// Class FirebaseFeatures.StorageDeleteProxy
// 0x0020 (0x0058 - 0x0038)
class UStorageDeleteProxy final : public UFirebaseStorageNodeProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnDeleted;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UStorageDeleteProxy* Delete(class UFirebaseStorageReference* StorageReference);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StorageDeleteProxy">();
	}
	static class UStorageDeleteProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStorageDeleteProxy>();
	}
};
static_assert(alignof(UStorageDeleteProxy) == 0x000008, "Wrong alignment on UStorageDeleteProxy");
static_assert(sizeof(UStorageDeleteProxy) == 0x000058, "Wrong size on UStorageDeleteProxy");
static_assert(offsetof(UStorageDeleteProxy, OnDeleted) == 0x000038, "Member 'UStorageDeleteProxy::OnDeleted' has a wrong offset!");
static_assert(offsetof(UStorageDeleteProxy, OnError) == 0x000048, "Member 'UStorageDeleteProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.StorageGetFileProxy
// 0x0058 (0x0090 - 0x0038)
class UStorageGetFileProxy final : public UFirebaseStorageNodeProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnFileDownloaded;                                  // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnProgress;                                        // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPaused;                                          // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x18];                                      // 0x0078(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UStorageGetFileProxy* GetFile(class UFirebaseStorageReference* StorageReference, const class FString& Path);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StorageGetFileProxy">();
	}
	static class UStorageGetFileProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStorageGetFileProxy>();
	}
};
static_assert(alignof(UStorageGetFileProxy) == 0x000008, "Wrong alignment on UStorageGetFileProxy");
static_assert(sizeof(UStorageGetFileProxy) == 0x000090, "Wrong size on UStorageGetFileProxy");
static_assert(offsetof(UStorageGetFileProxy, OnFileDownloaded) == 0x000038, "Member 'UStorageGetFileProxy::OnFileDownloaded' has a wrong offset!");
static_assert(offsetof(UStorageGetFileProxy, OnProgress) == 0x000048, "Member 'UStorageGetFileProxy::OnProgress' has a wrong offset!");
static_assert(offsetof(UStorageGetFileProxy, OnPaused) == 0x000058, "Member 'UStorageGetFileProxy::OnPaused' has a wrong offset!");
static_assert(offsetof(UStorageGetFileProxy, OnError) == 0x000068, "Member 'UStorageGetFileProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.StorageGetBytesProxy
// 0x0050 (0x0088 - 0x0038)
class UStorageGetBytesProxy final : public UFirebaseStorageNodeProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnFileDownloaded;                                  // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnProgress;                                        // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPaused;                                          // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x10];                                      // 0x0078(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UStorageGetBytesProxy* GetBytes(class UFirebaseStorageReference* StorageReference, const int64 BufferSize);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StorageGetBytesProxy">();
	}
	static class UStorageGetBytesProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStorageGetBytesProxy>();
	}
};
static_assert(alignof(UStorageGetBytesProxy) == 0x000008, "Wrong alignment on UStorageGetBytesProxy");
static_assert(sizeof(UStorageGetBytesProxy) == 0x000088, "Wrong size on UStorageGetBytesProxy");
static_assert(offsetof(UStorageGetBytesProxy, OnFileDownloaded) == 0x000038, "Member 'UStorageGetBytesProxy::OnFileDownloaded' has a wrong offset!");
static_assert(offsetof(UStorageGetBytesProxy, OnProgress) == 0x000048, "Member 'UStorageGetBytesProxy::OnProgress' has a wrong offset!");
static_assert(offsetof(UStorageGetBytesProxy, OnPaused) == 0x000058, "Member 'UStorageGetBytesProxy::OnPaused' has a wrong offset!");
static_assert(offsetof(UStorageGetBytesProxy, OnError) == 0x000068, "Member 'UStorageGetBytesProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.StorageGetDownloadUrlProxy
// 0x0020 (0x0058 - 0x0038)
class UStorageGetDownloadUrlProxy final : public UFirebaseStorageNodeProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnUrlReceived;                                     // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UStorageGetDownloadUrlProxy* GetDownloadUrl(class UFirebaseStorageReference* StorageReference);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StorageGetDownloadUrlProxy">();
	}
	static class UStorageGetDownloadUrlProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStorageGetDownloadUrlProxy>();
	}
};
static_assert(alignof(UStorageGetDownloadUrlProxy) == 0x000008, "Wrong alignment on UStorageGetDownloadUrlProxy");
static_assert(sizeof(UStorageGetDownloadUrlProxy) == 0x000058, "Wrong size on UStorageGetDownloadUrlProxy");
static_assert(offsetof(UStorageGetDownloadUrlProxy, OnUrlReceived) == 0x000038, "Member 'UStorageGetDownloadUrlProxy::OnUrlReceived' has a wrong offset!");
static_assert(offsetof(UStorageGetDownloadUrlProxy, OnError) == 0x000048, "Member 'UStorageGetDownloadUrlProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.StorageGetMetadataProxy
// 0x0020 (0x0058 - 0x0038)
class UStorageGetMetadataProxy final : public UFirebaseStorageNodeProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnMetadataReceived;                                // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UStorageGetMetadataProxy* GetMetadata(class UFirebaseStorageReference* StorageReference);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StorageGetMetadataProxy">();
	}
	static class UStorageGetMetadataProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStorageGetMetadataProxy>();
	}
};
static_assert(alignof(UStorageGetMetadataProxy) == 0x000008, "Wrong alignment on UStorageGetMetadataProxy");
static_assert(sizeof(UStorageGetMetadataProxy) == 0x000058, "Wrong size on UStorageGetMetadataProxy");
static_assert(offsetof(UStorageGetMetadataProxy, OnMetadataReceived) == 0x000038, "Member 'UStorageGetMetadataProxy::OnMetadataReceived' has a wrong offset!");
static_assert(offsetof(UStorageGetMetadataProxy, OnError) == 0x000048, "Member 'UStorageGetMetadataProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.StoragePutBytesProxy
// 0x0058 (0x0090 - 0x0038)
class UStoragePutBytesProxy final : public UFirebaseStorageNodeProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnBytesUploaded;                                   // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnProgress;                                        // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPaused;                                          // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x18];                                      // 0x0078(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UStoragePutBytesProxy* PutBytes(class UFirebaseStorageReference* StorageReference, const TArray<uint8>& Bytes);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StoragePutBytesProxy">();
	}
	static class UStoragePutBytesProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStoragePutBytesProxy>();
	}
};
static_assert(alignof(UStoragePutBytesProxy) == 0x000008, "Wrong alignment on UStoragePutBytesProxy");
static_assert(sizeof(UStoragePutBytesProxy) == 0x000090, "Wrong size on UStoragePutBytesProxy");
static_assert(offsetof(UStoragePutBytesProxy, OnBytesUploaded) == 0x000038, "Member 'UStoragePutBytesProxy::OnBytesUploaded' has a wrong offset!");
static_assert(offsetof(UStoragePutBytesProxy, OnProgress) == 0x000048, "Member 'UStoragePutBytesProxy::OnProgress' has a wrong offset!");
static_assert(offsetof(UStoragePutBytesProxy, OnPaused) == 0x000058, "Member 'UStoragePutBytesProxy::OnPaused' has a wrong offset!");
static_assert(offsetof(UStoragePutBytesProxy, OnError) == 0x000068, "Member 'UStoragePutBytesProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.StoragePutBytesWithMetadataProxy
// 0x0058 (0x0090 - 0x0038)
class UStoragePutBytesWithMetadataProxy final : public UFirebaseStorageNodeProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnBytesUploaded;                                   // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnProgress;                                        // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPaused;                                          // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x18];                                      // 0x0078(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UStoragePutBytesWithMetadataProxy* PutBytesWithMetadata(class UFirebaseStorageReference* StorageReference, const TArray<uint8>& Bytes, const struct FFirebaseStorageMetadata& Metadata);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StoragePutBytesWithMetadataProxy">();
	}
	static class UStoragePutBytesWithMetadataProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStoragePutBytesWithMetadataProxy>();
	}
};
static_assert(alignof(UStoragePutBytesWithMetadataProxy) == 0x000008, "Wrong alignment on UStoragePutBytesWithMetadataProxy");
static_assert(sizeof(UStoragePutBytesWithMetadataProxy) == 0x000090, "Wrong size on UStoragePutBytesWithMetadataProxy");
static_assert(offsetof(UStoragePutBytesWithMetadataProxy, OnBytesUploaded) == 0x000038, "Member 'UStoragePutBytesWithMetadataProxy::OnBytesUploaded' has a wrong offset!");
static_assert(offsetof(UStoragePutBytesWithMetadataProxy, OnProgress) == 0x000048, "Member 'UStoragePutBytesWithMetadataProxy::OnProgress' has a wrong offset!");
static_assert(offsetof(UStoragePutBytesWithMetadataProxy, OnPaused) == 0x000058, "Member 'UStoragePutBytesWithMetadataProxy::OnPaused' has a wrong offset!");
static_assert(offsetof(UStoragePutBytesWithMetadataProxy, OnError) == 0x000068, "Member 'UStoragePutBytesWithMetadataProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.StoragePutFileProxy
// 0x0058 (0x0090 - 0x0038)
class UStoragePutFileProxy final : public UFirebaseStorageNodeProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnFileUploaded;                                    // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnProgress;                                        // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPaused;                                          // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x18];                                      // 0x0078(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UStoragePutFileProxy* PutFile(class UFirebaseStorageReference* StorageReference, const class FString& Path);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StoragePutFileProxy">();
	}
	static class UStoragePutFileProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStoragePutFileProxy>();
	}
};
static_assert(alignof(UStoragePutFileProxy) == 0x000008, "Wrong alignment on UStoragePutFileProxy");
static_assert(sizeof(UStoragePutFileProxy) == 0x000090, "Wrong size on UStoragePutFileProxy");
static_assert(offsetof(UStoragePutFileProxy, OnFileUploaded) == 0x000038, "Member 'UStoragePutFileProxy::OnFileUploaded' has a wrong offset!");
static_assert(offsetof(UStoragePutFileProxy, OnProgress) == 0x000048, "Member 'UStoragePutFileProxy::OnProgress' has a wrong offset!");
static_assert(offsetof(UStoragePutFileProxy, OnPaused) == 0x000058, "Member 'UStoragePutFileProxy::OnPaused' has a wrong offset!");
static_assert(offsetof(UStoragePutFileProxy, OnError) == 0x000068, "Member 'UStoragePutFileProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.StoragePutFileWithMetadataProxy
// 0x0060 (0x0098 - 0x0038)
class UStoragePutFileWithMetadataProxy final : public UFirebaseStorageNodeProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnFileUploaded;                                    // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnProgress;                                        // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPaused;                                          // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0068(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x20];                                      // 0x0078(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UStoragePutFileWithMetadataProxy* PutFileUFS(class UFirebaseStorageReference* StorageReference, const class FString& Path, const struct FFirebaseStorageMetadata& Metadata);
	static class UStoragePutFileWithMetadataProxy* PutFileWithMetadata(class UFirebaseStorageReference* StorageReference, const class FString& Path, const struct FFirebaseStorageMetadata& Metadata);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StoragePutFileWithMetadataProxy">();
	}
	static class UStoragePutFileWithMetadataProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStoragePutFileWithMetadataProxy>();
	}
};
static_assert(alignof(UStoragePutFileWithMetadataProxy) == 0x000008, "Wrong alignment on UStoragePutFileWithMetadataProxy");
static_assert(sizeof(UStoragePutFileWithMetadataProxy) == 0x000098, "Wrong size on UStoragePutFileWithMetadataProxy");
static_assert(offsetof(UStoragePutFileWithMetadataProxy, OnFileUploaded) == 0x000038, "Member 'UStoragePutFileWithMetadataProxy::OnFileUploaded' has a wrong offset!");
static_assert(offsetof(UStoragePutFileWithMetadataProxy, OnProgress) == 0x000048, "Member 'UStoragePutFileWithMetadataProxy::OnProgress' has a wrong offset!");
static_assert(offsetof(UStoragePutFileWithMetadataProxy, OnPaused) == 0x000058, "Member 'UStoragePutFileWithMetadataProxy::OnPaused' has a wrong offset!");
static_assert(offsetof(UStoragePutFileWithMetadataProxy, OnError) == 0x000068, "Member 'UStoragePutFileWithMetadataProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.FirebaseStorageReference
// 0x0000 (0x0028 - 0x0028)
class UFirebaseStorageReference final : public UObject
{
public:
	class FString GetBucket();
	class FString GetFullPath();
	class FString GetName();
	class UFirebaseStorageReference* GetParent();

	class UFirebaseStorageReference* Child(const class FString& Path) const;
	bool IsValid() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FirebaseStorageReference">();
	}
	static class UFirebaseStorageReference* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFirebaseStorageReference>();
	}
};
static_assert(alignof(UFirebaseStorageReference) == 0x000008, "Wrong alignment on UFirebaseStorageReference");
static_assert(sizeof(UFirebaseStorageReference) == 0x000028, "Wrong size on UFirebaseStorageReference");

// Class FirebaseFeatures.UpdateEmailProxy
// 0x0030 (0x0068 - 0x0038)
class UUpdateEmailProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnEmailUpdated;                                    // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UUpdateEmailProxy* UpdateEmail(const class UUser* User, const class FString& Email);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UpdateEmailProxy">();
	}
	static class UUpdateEmailProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUpdateEmailProxy>();
	}
};
static_assert(alignof(UUpdateEmailProxy) == 0x000008, "Wrong alignment on UUpdateEmailProxy");
static_assert(sizeof(UUpdateEmailProxy) == 0x000068, "Wrong size on UUpdateEmailProxy");
static_assert(offsetof(UUpdateEmailProxy, OnEmailUpdated) == 0x000038, "Member 'UUpdateEmailProxy::OnEmailUpdated' has a wrong offset!");
static_assert(offsetof(UUpdateEmailProxy, OnError) == 0x000048, "Member 'UUpdateEmailProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.ReauthenticateProxy
// 0x0028 (0x0060 - 0x0038)
class UReauthenticateProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnReauthenticated;                                 // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UReauthenticateProxy* Reauthenticate(const class UUser* User, const struct FCredential& Credential);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReauthenticateProxy">();
	}
	static class UReauthenticateProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReauthenticateProxy>();
	}
};
static_assert(alignof(UReauthenticateProxy) == 0x000008, "Wrong alignment on UReauthenticateProxy");
static_assert(sizeof(UReauthenticateProxy) == 0x000060, "Wrong size on UReauthenticateProxy");
static_assert(offsetof(UReauthenticateProxy, OnReauthenticated) == 0x000038, "Member 'UReauthenticateProxy::OnReauthenticated' has a wrong offset!");
static_assert(offsetof(UReauthenticateProxy, OnError) == 0x000048, "Member 'UReauthenticateProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.ReauthenticateWithProviderProxy
// 0x0030 (0x0068 - 0x0038)
class UReauthenticateWithProviderProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnReauthenticated;                                 // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UReauthenticateWithProviderProxy* ReauthenticateWithProvider(const class UUser* User, const struct FFederatedAuthProvider& Provider);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReauthenticateWithProviderProxy">();
	}
	static class UReauthenticateWithProviderProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReauthenticateWithProviderProxy>();
	}
};
static_assert(alignof(UReauthenticateWithProviderProxy) == 0x000008, "Wrong alignment on UReauthenticateWithProviderProxy");
static_assert(sizeof(UReauthenticateWithProviderProxy) == 0x000068, "Wrong size on UReauthenticateWithProviderProxy");
static_assert(offsetof(UReauthenticateWithProviderProxy, OnReauthenticated) == 0x000038, "Member 'UReauthenticateWithProviderProxy::OnReauthenticated' has a wrong offset!");
static_assert(offsetof(UReauthenticateWithProviderProxy, OnError) == 0x000048, "Member 'UReauthenticateWithProviderProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.UpdateUserProfileProxy
// 0x0050 (0x0088 - 0x0038)
class UUpdateUserProfileProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnProfileUpdated;                                  // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x30];                                      // 0x0058(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UUpdateUserProfileProxy* UpdateUserProfile(const class UUser* User, const struct FUserProfile& Profile);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UpdateUserProfileProxy">();
	}
	static class UUpdateUserProfileProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUpdateUserProfileProxy>();
	}
};
static_assert(alignof(UUpdateUserProfileProxy) == 0x000008, "Wrong alignment on UUpdateUserProfileProxy");
static_assert(sizeof(UUpdateUserProfileProxy) == 0x000088, "Wrong size on UUpdateUserProfileProxy");
static_assert(offsetof(UUpdateUserProfileProxy, OnProfileUpdated) == 0x000038, "Member 'UUpdateUserProfileProxy::OnProfileUpdated' has a wrong offset!");
static_assert(offsetof(UUpdateUserProfileProxy, OnError) == 0x000048, "Member 'UUpdateUserProfileProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.LinkWithCredentialProxy
// 0x0028 (0x0060 - 0x0038)
class ULinkWithCredentialProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnLinked;                                          // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ULinkWithCredentialProxy* LinkWithCredential(const class UUser* User, const struct FCredential& Credential);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LinkWithCredentialProxy">();
	}
	static class ULinkWithCredentialProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULinkWithCredentialProxy>();
	}
};
static_assert(alignof(ULinkWithCredentialProxy) == 0x000008, "Wrong alignment on ULinkWithCredentialProxy");
static_assert(sizeof(ULinkWithCredentialProxy) == 0x000060, "Wrong size on ULinkWithCredentialProxy");
static_assert(offsetof(ULinkWithCredentialProxy, OnLinked) == 0x000038, "Member 'ULinkWithCredentialProxy::OnLinked' has a wrong offset!");
static_assert(offsetof(ULinkWithCredentialProxy, OnError) == 0x000048, "Member 'ULinkWithCredentialProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.LinkAndRetrieveDataWithCredentialProxy
// 0x0028 (0x0060 - 0x0038)
class ULinkAndRetrieveDataWithCredentialProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnLinked;                                          // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ULinkAndRetrieveDataWithCredentialProxy* LinkAndRetrieveDataWithCredential(const class UUser* User, const struct FCredential& Credential);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LinkAndRetrieveDataWithCredentialProxy">();
	}
	static class ULinkAndRetrieveDataWithCredentialProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULinkAndRetrieveDataWithCredentialProxy>();
	}
};
static_assert(alignof(ULinkAndRetrieveDataWithCredentialProxy) == 0x000008, "Wrong alignment on ULinkAndRetrieveDataWithCredentialProxy");
static_assert(sizeof(ULinkAndRetrieveDataWithCredentialProxy) == 0x000060, "Wrong size on ULinkAndRetrieveDataWithCredentialProxy");
static_assert(offsetof(ULinkAndRetrieveDataWithCredentialProxy, OnLinked) == 0x000038, "Member 'ULinkAndRetrieveDataWithCredentialProxy::OnLinked' has a wrong offset!");
static_assert(offsetof(ULinkAndRetrieveDataWithCredentialProxy, OnError) == 0x000048, "Member 'ULinkAndRetrieveDataWithCredentialProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.LinkWithProviderProxy
// 0x0030 (0x0068 - 0x0038)
class ULinkWithProviderProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnLinked;                                          // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class ULinkWithProviderProxy* LinkWithProvider(const class UUser* User, const struct FFederatedAuthProvider& Provider);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LinkWithProviderProxy">();
	}
	static class ULinkWithProviderProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULinkWithProviderProxy>();
	}
};
static_assert(alignof(ULinkWithProviderProxy) == 0x000008, "Wrong alignment on ULinkWithProviderProxy");
static_assert(sizeof(ULinkWithProviderProxy) == 0x000068, "Wrong size on ULinkWithProviderProxy");
static_assert(offsetof(ULinkWithProviderProxy, OnLinked) == 0x000038, "Member 'ULinkWithProviderProxy::OnLinked' has a wrong offset!");
static_assert(offsetof(ULinkWithProviderProxy, OnError) == 0x000048, "Member 'ULinkWithProviderProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.UnlinkProxy
// 0x0030 (0x0068 - 0x0038)
class UUnlinkProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnUnlinked;                                        // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UUnlinkProxy* Unlink(const class UUser* User, const class FString& Provider);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UnlinkProxy">();
	}
	static class UUnlinkProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUnlinkProxy>();
	}
};
static_assert(alignof(UUnlinkProxy) == 0x000008, "Wrong alignment on UUnlinkProxy");
static_assert(sizeof(UUnlinkProxy) == 0x000068, "Wrong size on UUnlinkProxy");
static_assert(offsetof(UUnlinkProxy, OnUnlinked) == 0x000038, "Member 'UUnlinkProxy::OnUnlinked' has a wrong offset!");
static_assert(offsetof(UUnlinkProxy, OnError) == 0x000048, "Member 'UUnlinkProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.ReloadProxy
// 0x0020 (0x0058 - 0x0038)
class UReloadProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnReloaded;                                        // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UReloadProxy* Reload(const class UUser* User);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReloadProxy">();
	}
	static class UReloadProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReloadProxy>();
	}
};
static_assert(alignof(UReloadProxy) == 0x000008, "Wrong alignment on UReloadProxy");
static_assert(sizeof(UReloadProxy) == 0x000058, "Wrong size on UReloadProxy");
static_assert(offsetof(UReloadProxy, OnReloaded) == 0x000038, "Member 'UReloadProxy::OnReloaded' has a wrong offset!");
static_assert(offsetof(UReloadProxy, OnError) == 0x000048, "Member 'UReloadProxy::OnError' has a wrong offset!");

// Class FirebaseFeatures.DeleteProxy
// 0x0020 (0x0058 - 0x0038)
class UDeleteProxy final : public UUserNodeBase
{
public:
	FMulticastInlineDelegateProperty_             OnDeleted;                                         // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UDeleteProxy* Delete(const class UUser* User);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeleteProxy">();
	}
	static class UDeleteProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeleteProxy>();
	}
};
static_assert(alignof(UDeleteProxy) == 0x000008, "Wrong alignment on UDeleteProxy");
static_assert(sizeof(UDeleteProxy) == 0x000058, "Wrong size on UDeleteProxy");
static_assert(offsetof(UDeleteProxy, OnDeleted) == 0x000038, "Member 'UDeleteProxy::OnDeleted' has a wrong offset!");
static_assert(offsetof(UDeleteProxy, OnError) == 0x000048, "Member 'UDeleteProxy::OnError' has a wrong offset!");

}

