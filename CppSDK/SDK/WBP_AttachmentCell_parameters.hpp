#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AttachmentCell

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "E_TypesOfModes_structs.hpp"
#include "AttachmentInfo_structs.hpp"
#include "S_Attachment_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.ExecuteUbergraph_WBP_AttachmentCell
// 0x0178 (0x0178 - 0x0000)
struct WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetButtonSelected_Selected;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetButtonSelected_Selected_1;             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0078)(ConstParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show;                           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0154(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell");
static_assert(sizeof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell) == 0x000178, "Wrong size on WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, EntryPoint) == 0x000000, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_GetButtonSelected_Selected) == 0x000005, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_GetButtonSelected_Selected' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_GetButtonSelected_Selected_1) == 0x000006, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_GetButtonSelected_Selected_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, K2Node_Event_MyGeometry) == 0x000008, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_BooleanOR_ReturnValue) == 0x000130, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_BooleanOR_ReturnValue_1) == 0x000131, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_BooleanOR_ReturnValue_2) == 0x000132, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_BooleanOR_ReturnValue_3) == 0x000133, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, K2Node_CustomEvent_Show) == 0x000134, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_PlayAnimation_ReturnValue) == 0x000138, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000140, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000148, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000151, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, K2Node_CreateDelegate_OutputDelegate) == 0x000154, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_PlayAnimation_ReturnValue_1) == 0x000168, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_Not_PreBool_ReturnValue) == 0x000170, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell, CallFunc_Not_PreBool_ReturnValue_1) == 0x000171, "Member 'WBP_AttachmentCell_C_ExecuteUbergraph_WBP_AttachmentCell::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.GetActive
// 0x0001 (0x0001 - 0x0000)
struct WBP_AttachmentCell_C_GetActive final
{
public:
	bool                                          Param_Active;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_GetActive) == 0x000001, "Wrong alignment on WBP_AttachmentCell_C_GetActive");
static_assert(sizeof(WBP_AttachmentCell_C_GetActive) == 0x000001, "Wrong size on WBP_AttachmentCell_C_GetActive");
static_assert(offsetof(WBP_AttachmentCell_C_GetActive, Param_Active) == 0x000000, "Member 'WBP_AttachmentCell_C_GetActive::Param_Active' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.GetAttachment
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_AttachmentCell_C_GetAttachment final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentInfo                        Attachment;                                        // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TypesOfModes                                ModeType;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TypesOfModes                                FunctionModeType;                                  // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentInfo                        FunctionAttachment;                                // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Attachment                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0080)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentInfo                        K2Node_MakeStruct_AttachmentInfo;                  // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_GetAttachment) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_GetAttachment");
static_assert(sizeof(WBP_AttachmentCell_C_GetAttachment) == 0x0000C8, "Wrong size on WBP_AttachmentCell_C_GetAttachment");
static_assert(offsetof(WBP_AttachmentCell_C_GetAttachment, Result) == 0x000000, "Member 'WBP_AttachmentCell_C_GetAttachment::Result' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_GetAttachment, Attachment) == 0x000004, "Member 'WBP_AttachmentCell_C_GetAttachment::Attachment' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_GetAttachment, ModeType) == 0x000014, "Member 'WBP_AttachmentCell_C_GetAttachment::ModeType' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_GetAttachment, FunctionModeType) == 0x000015, "Member 'WBP_AttachmentCell_C_GetAttachment::FunctionModeType' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_GetAttachment, FunctionAttachment) == 0x000018, "Member 'WBP_AttachmentCell_C_GetAttachment::FunctionAttachment' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_GetAttachment, FunctionResult) == 0x000028, "Member 'WBP_AttachmentCell_C_GetAttachment::FunctionResult' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_GetAttachment, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'WBP_AttachmentCell_C_GetAttachment::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_GetAttachment, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'WBP_AttachmentCell_C_GetAttachment::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_GetAttachment, K2Node_MakeStruct_AttachmentInfo) == 0x0000B4, "Member 'WBP_AttachmentCell_C_GetAttachment::K2Node_MakeStruct_AttachmentInfo' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.GetBaseAttachment
// 0x0010 (0x0010 - 0x0000)
struct WBP_AttachmentCell_C_GetBaseAttachment final
{
public:
	struct FAttachmentInfo                        Attachment;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_GetBaseAttachment) == 0x000004, "Wrong alignment on WBP_AttachmentCell_C_GetBaseAttachment");
static_assert(sizeof(WBP_AttachmentCell_C_GetBaseAttachment) == 0x000010, "Wrong size on WBP_AttachmentCell_C_GetBaseAttachment");
static_assert(offsetof(WBP_AttachmentCell_C_GetBaseAttachment, Attachment) == 0x000000, "Member 'WBP_AttachmentCell_C_GetBaseAttachment::Attachment' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.GetBasic
// 0x0001 (0x0001 - 0x0000)
struct WBP_AttachmentCell_C_GetBasic final
{
public:
	bool                                          Param_Basic;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_GetBasic) == 0x000001, "Wrong alignment on WBP_AttachmentCell_C_GetBasic");
static_assert(sizeof(WBP_AttachmentCell_C_GetBasic) == 0x000001, "Wrong size on WBP_AttachmentCell_C_GetBasic");
static_assert(offsetof(WBP_AttachmentCell_C_GetBasic, Param_Basic) == 0x000000, "Member 'WBP_AttachmentCell_C_GetBasic::Param_Basic' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.GetButtonIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_AttachmentCell_C_GetButtonIndex final
{
public:
	int32                                         Param_ButtonIndex;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_GetButtonIndex) == 0x000004, "Wrong alignment on WBP_AttachmentCell_C_GetButtonIndex");
static_assert(sizeof(WBP_AttachmentCell_C_GetButtonIndex) == 0x000004, "Wrong size on WBP_AttachmentCell_C_GetButtonIndex");
static_assert(offsetof(WBP_AttachmentCell_C_GetButtonIndex, Param_ButtonIndex) == 0x000000, "Member 'WBP_AttachmentCell_C_GetButtonIndex::Param_ButtonIndex' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.GetButtonSelected
// 0x0001 (0x0001 - 0x0000)
struct WBP_AttachmentCell_C_GetButtonSelected final
{
public:
	bool                                          Param_Selected;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_GetButtonSelected) == 0x000001, "Wrong alignment on WBP_AttachmentCell_C_GetButtonSelected");
static_assert(sizeof(WBP_AttachmentCell_C_GetButtonSelected) == 0x000001, "Wrong size on WBP_AttachmentCell_C_GetButtonSelected");
static_assert(offsetof(WBP_AttachmentCell_C_GetButtonSelected, Param_Selected) == 0x000000, "Member 'WBP_AttachmentCell_C_GetButtonSelected::Param_Selected' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.GetItem
// 0x0220 (0x0220 - 0x0000)
struct WBP_AttachmentCell_C_GetItem final
{
public:
	struct FFItemInfo                             Param_Item;                                        // 0x0000(0x0220)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_GetItem) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_GetItem");
static_assert(sizeof(WBP_AttachmentCell_C_GetItem) == 0x000220, "Wrong size on WBP_AttachmentCell_C_GetItem");
static_assert(offsetof(WBP_AttachmentCell_C_GetItem, Param_Item) == 0x000000, "Member 'WBP_AttachmentCell_C_GetItem::Param_Item' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.GetShowAwait
// 0x0001 (0x0001 - 0x0000)
struct WBP_AttachmentCell_C_GetShowAwait final
{
public:
	bool                                          Param_ShowAwait;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_GetShowAwait) == 0x000001, "Wrong alignment on WBP_AttachmentCell_C_GetShowAwait");
static_assert(sizeof(WBP_AttachmentCell_C_GetShowAwait) == 0x000001, "Wrong size on WBP_AttachmentCell_C_GetShowAwait");
static_assert(offsetof(WBP_AttachmentCell_C_GetShowAwait, Param_ShowAwait) == 0x000000, "Member 'WBP_AttachmentCell_C_GetShowAwait::Param_ShowAwait' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.Init
// 0x01F0 (0x01F0 - 0x0000)
struct WBP_AttachmentCell_C_Init final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0010(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue_1;        // 0x00E0(0x00D0)()
	bool                                          Temp_bool_Variable;                                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetButtonIndex_ButtonIndex;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01B8(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_Init) == 0x000010, "Wrong alignment on WBP_AttachmentCell_C_Init");
static_assert(sizeof(WBP_AttachmentCell_C_Init) == 0x0001F0, "Wrong size on WBP_AttachmentCell_C_Init");
static_assert(offsetof(WBP_AttachmentCell_C_Init, Temp_byte_Variable) == 0x000000, "Member 'WBP_AttachmentCell_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_AttachmentCell_C_Init::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_AttachmentCell_C_Init::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000010, "Member 'WBP_AttachmentCell_C_Init::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, CallFunc_MakeBrushFromSprite_ReturnValue_1) == 0x0000E0, "Member 'WBP_AttachmentCell_C_Init::CallFunc_MakeBrushFromSprite_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, Temp_bool_Variable) == 0x0001B0, "Member 'WBP_AttachmentCell_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, CallFunc_GetButtonIndex_ButtonIndex) == 0x0001B4, "Member 'WBP_AttachmentCell_C_Init::CallFunc_GetButtonIndex_ButtonIndex' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, CallFunc_Conv_IntToText_ReturnValue) == 0x0001B8, "Member 'WBP_AttachmentCell_C_Init::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, K2Node_Select_Default) == 0x0001D0, "Member 'WBP_AttachmentCell_C_Init::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, CallFunc_SelectInt_ReturnValue) == 0x0001D4, "Member 'WBP_AttachmentCell_C_Init::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, CallFunc_SelectInt_ReturnValue_1) == 0x0001D8, "Member 'WBP_AttachmentCell_C_Init::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0001E0, "Member 'WBP_AttachmentCell_C_Init::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_Init, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0001E8, "Member 'WBP_AttachmentCell_C_Init::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnFocus
// 0x0010 (0x0010 - 0x0000)
struct WBP_AttachmentCell_C_OnFocus final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_OnFocus) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_OnFocus");
static_assert(sizeof(WBP_AttachmentCell_C_OnFocus) == 0x000010, "Wrong size on WBP_AttachmentCell_C_OnFocus");
static_assert(offsetof(WBP_AttachmentCell_C_OnFocus, NewState) == 0x000000, "Member 'WBP_AttachmentCell_C_OnFocus::NewState' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnFocus, Temp_bool_Variable) == 0x000001, "Member 'WBP_AttachmentCell_C_OnFocus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnFocus, Temp_byte_Variable) == 0x000002, "Member 'WBP_AttachmentCell_C_OnFocus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnFocus, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_AttachmentCell_C_OnFocus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnFocus, K2Node_Select_Default) == 0x000004, "Member 'WBP_AttachmentCell_C_OnFocus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnFocus, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_AttachmentCell_C_OnFocus::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnHideItemInfo
// 0x0030 (0x0030 - 0x0000)
struct WBP_AttachmentCell_C_OnHideItemInfo final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_OnHideItemInfo) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_OnHideItemInfo");
static_assert(sizeof(WBP_AttachmentCell_C_OnHideItemInfo) == 0x000030, "Wrong size on WBP_AttachmentCell_C_OnHideItemInfo");
static_assert(offsetof(WBP_AttachmentCell_C_OnHideItemInfo, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'WBP_AttachmentCell_C_OnHideItemInfo::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnHideItemInfo, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'WBP_AttachmentCell_C_OnHideItemInfo::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnHideItemInfo, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000010, "Member 'WBP_AttachmentCell_C_OnHideItemInfo::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnHideItemInfo, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_AttachmentCell_C_OnHideItemInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnHideItemInfo, CallFunc_GetItemInfoWidget_Widget) == 0x000028, "Member 'WBP_AttachmentCell_C_OnHideItemInfo::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_AttachmentCell_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_AttachmentCell_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_OnMouseEnter");
static_assert(sizeof(WBP_AttachmentCell_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_AttachmentCell_C_OnMouseEnter");
static_assert(offsetof(WBP_AttachmentCell_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_AttachmentCell_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_AttachmentCell_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_AttachmentCell_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_AttachmentCell_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_OnMouseLeave");
static_assert(sizeof(WBP_AttachmentCell_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_AttachmentCell_C_OnMouseLeave");
static_assert(offsetof(WBP_AttachmentCell_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_AttachmentCell_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnPlayAnimation
// 0x0028 (0x0028 - 0x0000)
struct WBP_AttachmentCell_C_OnPlayAnimation final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewState;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToEnd;                                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_OnPlayAnimation) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_OnPlayAnimation");
static_assert(sizeof(WBP_AttachmentCell_C_OnPlayAnimation) == 0x000028, "Wrong size on WBP_AttachmentCell_C_OnPlayAnimation");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, Animation) == 0x000000, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::Animation' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, NewState) == 0x000008, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::NewState' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, ToEnd) == 0x000009, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::ToEnd' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, Temp_bool_Variable) == 0x00000A, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, Temp_real_Variable) == 0x00000C, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, Temp_bool_Variable_1) == 0x000010, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, Temp_byte_Variable) == 0x000011, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, Temp_byte_Variable_1) == 0x000012, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, CallFunc_GetEndTime_ReturnValue) == 0x000014, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, K2Node_Select_Default) == 0x000018, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, K2Node_Select_Default_1) == 0x00001C, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlayAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_AttachmentCell_C_OnPlayAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnPlaySound
// 0x0018 (0x0018 - 0x0000)
struct WBP_AttachmentCell_C_OnPlaySound final
{
public:
	class UFMODEvent*                             FMODEvent;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_OnPlaySound) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_OnPlaySound");
static_assert(sizeof(WBP_AttachmentCell_C_OnPlaySound) == 0x000018, "Wrong size on WBP_AttachmentCell_C_OnPlaySound");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlaySound, FMODEvent) == 0x000000, "Member 'WBP_AttachmentCell_C_OnPlaySound::FMODEvent' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlaySound, CallFunc_PlayEvent2D_ReturnValue) == 0x000008, "Member 'WBP_AttachmentCell_C_OnPlaySound::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPlaySound, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_AttachmentCell_C_OnPlaySound::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnPressedCell__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_AttachmentCell_C_OnPressedCell__DelegateSignature final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_OnPressedCell__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_OnPressedCell__DelegateSignature");
static_assert(sizeof(WBP_AttachmentCell_C_OnPressedCell__DelegateSignature) == 0x000010, "Wrong size on WBP_AttachmentCell_C_OnPressedCell__DelegateSignature");
static_assert(offsetof(WBP_AttachmentCell_C_OnPressedCell__DelegateSignature, Param_Index) == 0x000000, "Member 'WBP_AttachmentCell_C_OnPressedCell__DelegateSignature::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnPressedCell__DelegateSignature, Widget) == 0x000008, "Member 'WBP_AttachmentCell_C_OnPressedCell__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnReleasedCell__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_AttachmentCell_C_OnReleasedCell__DelegateSignature final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_OnReleasedCell__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_OnReleasedCell__DelegateSignature");
static_assert(sizeof(WBP_AttachmentCell_C_OnReleasedCell__DelegateSignature) == 0x000010, "Wrong size on WBP_AttachmentCell_C_OnReleasedCell__DelegateSignature");
static_assert(offsetof(WBP_AttachmentCell_C_OnReleasedCell__DelegateSignature, Param_Index) == 0x000000, "Member 'WBP_AttachmentCell_C_OnReleasedCell__DelegateSignature::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnReleasedCell__DelegateSignature, Widget) == 0x000008, "Member 'WBP_AttachmentCell_C_OnReleasedCell__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnSelect
// 0x0002 (0x0002 - 0x0000)
struct WBP_AttachmentCell_C_OnSelect final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToEnd;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_OnSelect) == 0x000001, "Wrong alignment on WBP_AttachmentCell_C_OnSelect");
static_assert(sizeof(WBP_AttachmentCell_C_OnSelect) == 0x000002, "Wrong size on WBP_AttachmentCell_C_OnSelect");
static_assert(offsetof(WBP_AttachmentCell_C_OnSelect, NewState) == 0x000000, "Member 'WBP_AttachmentCell_C_OnSelect::NewState' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnSelect, ToEnd) == 0x000001, "Member 'WBP_AttachmentCell_C_OnSelect::ToEnd' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnShowItemInfo
// 0x0048 (0x0048 - 0x0000)
struct WBP_AttachmentCell_C_OnShowItemInfo final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAttachment_Result;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttachmentInfo                        CallFunc_GetAttachment_Attachment;                 // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TypesOfModes                                CallFunc_GetAttachment_ModeType;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ItemInfo_C*                          CallFunc_GetItemInfoWidget_Widget;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_OnShowItemInfo) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_OnShowItemInfo");
static_assert(sizeof(WBP_AttachmentCell_C_OnShowItemInfo) == 0x000048, "Wrong size on WBP_AttachmentCell_C_OnShowItemInfo");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, Temp_byte_Variable) == 0x000000, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, Temp_bool_Variable) == 0x000002, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, CallFunc_GetAttachment_Result) == 0x000003, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::CallFunc_GetAttachment_Result' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, CallFunc_GetAttachment_Attachment) == 0x000004, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::CallFunc_GetAttachment_Attachment' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, CallFunc_GetAttachment_ModeType) == 0x000014, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::CallFunc_GetAttachment_ModeType' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, K2Node_Select_Default) == 0x000015, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000028, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowItemInfo, CallFunc_GetItemInfoWidget_Widget) == 0x000040, "Member 'WBP_AttachmentCell_C_OnShowItemInfo::CallFunc_GetItemInfoWidget_Widget' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.OnShowProgressBar
// 0x0010 (0x0010 - 0x0000)
struct WBP_AttachmentCell_C_OnShowProgressBar final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_OnShowProgressBar) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_OnShowProgressBar");
static_assert(sizeof(WBP_AttachmentCell_C_OnShowProgressBar) == 0x000010, "Wrong size on WBP_AttachmentCell_C_OnShowProgressBar");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowProgressBar, NewState) == 0x000000, "Member 'WBP_AttachmentCell_C_OnShowProgressBar::NewState' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowProgressBar, Temp_bool_Variable) == 0x000001, "Member 'WBP_AttachmentCell_C_OnShowProgressBar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowProgressBar, Temp_byte_Variable) == 0x000002, "Member 'WBP_AttachmentCell_C_OnShowProgressBar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowProgressBar, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_AttachmentCell_C_OnShowProgressBar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowProgressBar, K2Node_Select_Default) == 0x000004, "Member 'WBP_AttachmentCell_C_OnShowProgressBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_OnShowProgressBar, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_AttachmentCell_C_OnShowProgressBar::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.PlayAwaitResponseAnimation
// 0x0001 (0x0001 - 0x0000)
struct WBP_AttachmentCell_C_PlayAwaitResponseAnimation final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_PlayAwaitResponseAnimation) == 0x000001, "Wrong alignment on WBP_AttachmentCell_C_PlayAwaitResponseAnimation");
static_assert(sizeof(WBP_AttachmentCell_C_PlayAwaitResponseAnimation) == 0x000001, "Wrong size on WBP_AttachmentCell_C_PlayAwaitResponseAnimation");
static_assert(offsetof(WBP_AttachmentCell_C_PlayAwaitResponseAnimation, Show) == 0x000000, "Member 'WBP_AttachmentCell_C_PlayAwaitResponseAnimation::Show' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_AttachmentCell_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_AttachmentCell_C_PreConstruct");
static_assert(sizeof(WBP_AttachmentCell_C_PreConstruct) == 0x000001, "Wrong size on WBP_AttachmentCell_C_PreConstruct");
static_assert(offsetof(WBP_AttachmentCell_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_AttachmentCell_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.Set Image Attachment
// 0x0008 (0x0008 - 0x0000)
struct WBP_AttachmentCell_C_Set_Image_Attachment final
{
public:
	class UObject*                                Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_Set_Image_Attachment) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_Set_Image_Attachment");
static_assert(sizeof(WBP_AttachmentCell_C_Set_Image_Attachment) == 0x000008, "Wrong size on WBP_AttachmentCell_C_Set_Image_Attachment");
static_assert(offsetof(WBP_AttachmentCell_C_Set_Image_Attachment, Image) == 0x000000, "Member 'WBP_AttachmentCell_C_Set_Image_Attachment::Image' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.SetActiveStatus
// 0x0002 (0x0002 - 0x0000)
struct WBP_AttachmentCell_C_SetActiveStatus final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_SetActiveStatus) == 0x000001, "Wrong alignment on WBP_AttachmentCell_C_SetActiveStatus");
static_assert(sizeof(WBP_AttachmentCell_C_SetActiveStatus) == 0x000002, "Wrong size on WBP_AttachmentCell_C_SetActiveStatus");
static_assert(offsetof(WBP_AttachmentCell_C_SetActiveStatus, NewState) == 0x000000, "Member 'WBP_AttachmentCell_C_SetActiveStatus::NewState' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SetActiveStatus, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'WBP_AttachmentCell_C_SetActiveStatus::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.SetButtonIndex
// 0x0020 (0x0020 - 0x0000)
struct WBP_AttachmentCell_C_SetButtonIndex final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_AttachmentCell_C_SetButtonIndex) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_SetButtonIndex");
static_assert(sizeof(WBP_AttachmentCell_C_SetButtonIndex) == 0x000020, "Wrong size on WBP_AttachmentCell_C_SetButtonIndex");
static_assert(offsetof(WBP_AttachmentCell_C_SetButtonIndex, NewIndex) == 0x000000, "Member 'WBP_AttachmentCell_C_SetButtonIndex::NewIndex' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SetButtonIndex, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_AttachmentCell_C_SetButtonIndex::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.SetButtonSelect
// 0x0030 (0x0030 - 0x0000)
struct WBP_AttachmentCell_C_SetButtonSelect final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithoutAnimation;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeVisibility;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChowSelectCheckIcon;                              // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_SetButtonSelect) == 0x000004, "Wrong alignment on WBP_AttachmentCell_C_SetButtonSelect");
static_assert(sizeof(WBP_AttachmentCell_C_SetButtonSelect) == 0x000030, "Wrong size on WBP_AttachmentCell_C_SetButtonSelect");
static_assert(offsetof(WBP_AttachmentCell_C_SetButtonSelect, NewState) == 0x000000, "Member 'WBP_AttachmentCell_C_SetButtonSelect::NewState' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SetButtonSelect, WithoutAnimation) == 0x000001, "Member 'WBP_AttachmentCell_C_SetButtonSelect::WithoutAnimation' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SetButtonSelect, ChangeVisibility) == 0x000002, "Member 'WBP_AttachmentCell_C_SetButtonSelect::ChangeVisibility' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SetButtonSelect, bChowSelectCheckIcon) == 0x000003, "Member 'WBP_AttachmentCell_C_SetButtonSelect::bChowSelectCheckIcon' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SetButtonSelect, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WBP_AttachmentCell_C_SetButtonSelect::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SetButtonSelect, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'WBP_AttachmentCell_C_SetButtonSelect::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SetButtonSelect, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00002C, "Member 'WBP_AttachmentCell_C_SetButtonSelect::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.SetCustomLock
// 0x0001 (0x0001 - 0x0000)
struct WBP_AttachmentCell_C_SetCustomLock final
{
public:
	bool                                          Lock;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_SetCustomLock) == 0x000001, "Wrong alignment on WBP_AttachmentCell_C_SetCustomLock");
static_assert(sizeof(WBP_AttachmentCell_C_SetCustomLock) == 0x000001, "Wrong size on WBP_AttachmentCell_C_SetCustomLock");
static_assert(offsetof(WBP_AttachmentCell_C_SetCustomLock, Lock) == 0x000000, "Member 'WBP_AttachmentCell_C_SetCustomLock::Lock' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.SetFMODHoveredEvent
// 0x0008 (0x0008 - 0x0000)
struct WBP_AttachmentCell_C_SetFMODHoveredEvent final
{
public:
	class UFMODEvent*                             NewFMODEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_SetFMODHoveredEvent) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_SetFMODHoveredEvent");
static_assert(sizeof(WBP_AttachmentCell_C_SetFMODHoveredEvent) == 0x000008, "Wrong size on WBP_AttachmentCell_C_SetFMODHoveredEvent");
static_assert(offsetof(WBP_AttachmentCell_C_SetFMODHoveredEvent, NewFMODEvent) == 0x000000, "Member 'WBP_AttachmentCell_C_SetFMODHoveredEvent::NewFMODEvent' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.SetIsEmptyAttachmentList
// 0x0001 (0x0001 - 0x0000)
struct WBP_AttachmentCell_C_SetIsEmptyAttachmentList final
{
public:
	bool                                          IsEmpty;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_SetIsEmptyAttachmentList) == 0x000001, "Wrong alignment on WBP_AttachmentCell_C_SetIsEmptyAttachmentList");
static_assert(sizeof(WBP_AttachmentCell_C_SetIsEmptyAttachmentList) == 0x000001, "Wrong size on WBP_AttachmentCell_C_SetIsEmptyAttachmentList");
static_assert(offsetof(WBP_AttachmentCell_C_SetIsEmptyAttachmentList, IsEmpty) == 0x000000, "Member 'WBP_AttachmentCell_C_SetIsEmptyAttachmentList::IsEmpty' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.SetItem
// 0x0228 (0x0228 - 0x0000)
struct WBP_AttachmentCell_C_SetItem final
{
public:
	struct FFItemInfo                             Param_Item;                                        // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          IsBasic;                                           // 0x0220(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_SetItem) == 0x000008, "Wrong alignment on WBP_AttachmentCell_C_SetItem");
static_assert(sizeof(WBP_AttachmentCell_C_SetItem) == 0x000228, "Wrong size on WBP_AttachmentCell_C_SetItem");
static_assert(offsetof(WBP_AttachmentCell_C_SetItem, Param_Item) == 0x000000, "Member 'WBP_AttachmentCell_C_SetItem::Param_Item' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SetItem, IsBasic) == 0x000220, "Member 'WBP_AttachmentCell_C_SetItem::IsBasic' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.SetItemUniqueId
// 0x0004 (0x0004 - 0x0000)
struct WBP_AttachmentCell_C_SetItemUniqueId final
{
public:
	int32                                         UniqueId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttachmentCell_C_SetItemUniqueId) == 0x000004, "Wrong alignment on WBP_AttachmentCell_C_SetItemUniqueId");
static_assert(sizeof(WBP_AttachmentCell_C_SetItemUniqueId) == 0x000004, "Wrong size on WBP_AttachmentCell_C_SetItemUniqueId");
static_assert(offsetof(WBP_AttachmentCell_C_SetItemUniqueId, UniqueId) == 0x000000, "Member 'WBP_AttachmentCell_C_SetItemUniqueId::UniqueId' has a wrong offset!");

// Function WBP_AttachmentCell.WBP_AttachmentCell_C.SwapAttacmentImages
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_AttachmentCell_C_SwapAttacmentImages final
{
public:
	class UPaperSprite*                           ImageCache;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0010(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue_1;        // 0x00E0(0x00D0)()
};
static_assert(alignof(WBP_AttachmentCell_C_SwapAttacmentImages) == 0x000010, "Wrong alignment on WBP_AttachmentCell_C_SwapAttacmentImages");
static_assert(sizeof(WBP_AttachmentCell_C_SwapAttacmentImages) == 0x0001B0, "Wrong size on WBP_AttachmentCell_C_SwapAttacmentImages");
static_assert(offsetof(WBP_AttachmentCell_C_SwapAttacmentImages, ImageCache) == 0x000000, "Member 'WBP_AttachmentCell_C_SwapAttacmentImages::ImageCache' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SwapAttacmentImages, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000010, "Member 'WBP_AttachmentCell_C_SwapAttacmentImages::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttachmentCell_C_SwapAttacmentImages, CallFunc_MakeBrushFromSprite_ReturnValue_1) == 0x0000E0, "Member 'WBP_AttachmentCell_C_SwapAttacmentImages::CallFunc_MakeBrushFromSprite_ReturnValue_1' has a wrong offset!");

}

