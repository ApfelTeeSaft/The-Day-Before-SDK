#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bandit_Mannequin

#include "Basic.hpp"

#include "E_ActorType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_InteractType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Bandit_Mannequin.Bandit_Mannequin_C.ExecuteMannequin
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_ExecuteMannequin final
{
public:
	class ASurvivalPlayer_C*                      Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_ExecuteMannequin) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_ExecuteMannequin");
static_assert(sizeof(Bandit_Mannequin_C_ExecuteMannequin) == 0x000008, "Wrong size on Bandit_Mannequin_C_ExecuteMannequin");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteMannequin, Killer) == 0x000000, "Member 'Bandit_Mannequin_C_ExecuteMannequin::Killer' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.ExecuteUbergraph_Bandit_Mannequin
// 0x0410 (0x0410 - 0x0000)
struct Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_3;                             // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_2;                             // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_1;                             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x00C8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_HitComponent;                         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ShotFromDirection;                    // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0138(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0220(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Killer;                         // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0260(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue;            // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0300(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x03F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetPlayerGUI_GUI;                         // 0x0408(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin) == 0x000010, "Wrong alignment on Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin");
static_assert(sizeof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin) == 0x000410, "Wrong size on Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, EntryPoint) == 0x000000, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::EntryPoint' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CustomEvent_NotifyName_2) == 0x000004, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CustomEvent_NotifyName_1) == 0x00001C, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CustomEvent_NotifyName) == 0x000034, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CreateDelegate_OutputDelegate_2) == 0x00003C, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, Temp_name_Variable) == 0x00004C, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CustomEvent_NotifyName_3) == 0x000054, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, Temp_int_Variable) == 0x00005C, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CreateDelegate_OutputDelegate_3) == 0x000060, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Player_8) == 0x000070, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Player_7) == 0x000078, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Player_6) == 0x000080, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Player_5) == 0x000088, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Player_4) == 0x000090, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_SitIndex) == 0x000098, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_SkipAnimation) == 0x00009C, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Player_3) == 0x0000A0, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Player_2) == 0x0000A8, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Player_1) == 0x0000B0, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Player) == 0x0000B8, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Visible_1) == 0x0000C0, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Visible) == 0x0000C1, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_Damage) == 0x0000C4, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_DamageType) == 0x0000C8, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_HitLocation) == 0x0000D0, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_HitNormal) == 0x0000E8, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_HitComponent) == 0x000100, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_BoneName) == 0x000108, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_ShotFromDirection) == 0x000110, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_ShotFromDirection' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_InstigatedBy) == 0x000128, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_DamageCauser) == 0x000130, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_Event_HitInfo) == 0x000138, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CreateDelegate_OutputDelegate_4) == 0x000220, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000230, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_IsValid_ReturnValue) == 0x000238, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_Add_IntInt_ReturnValue) == 0x00023C, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CustomEvent_Killer) == 0x000240, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_Greater_IntInt_ReturnValue) == 0x000248, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_GetAnimInstance_ReturnValue) == 0x000250, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_Montage_Play_ReturnValue) == 0x000258, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_GetTransform_ReturnValue) == 0x000260, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_CustomEvent_NotifyName_4) == 0x0002C0, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_TransformRotation_ReturnValue) == 0x0002C8, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_TransformLocation_ReturnValue) == 0x0002E0, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_GetPlayerController_ReturnValue) == 0x0002F8, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000300, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0003E8, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x0003F0, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, K2Node_DynamicCast_bSuccess) == 0x000400, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin, CallFunc_GetPlayerGUI_GUI) == 0x000408, "Member 'Bandit_Mannequin_C_ExecuteUbergraph_Bandit_Mannequin::CallFunc_GetPlayerGUI_GUI' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct Bandit_Mannequin_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_GetActorType) == 0x000001, "Wrong alignment on Bandit_Mannequin_C_GetActorType");
static_assert(sizeof(Bandit_Mannequin_C_GetActorType) == 0x000001, "Wrong size on Bandit_Mannequin_C_GetActorType");
static_assert(offsetof(Bandit_Mannequin_C_GetActorType, ActorType) == 0x000000, "Member 'Bandit_Mannequin_C_GetActorType::ActorType' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct Bandit_Mannequin_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_IsLocked_) == 0x000001, "Wrong alignment on Bandit_Mannequin_C_IsLocked_");
static_assert(sizeof(Bandit_Mannequin_C_IsLocked_) == 0x000001, "Wrong size on Bandit_Mannequin_C_IsLocked_");
static_assert(offsetof(Bandit_Mannequin_C_IsLocked_, Result) == 0x000000, "Member 'Bandit_Mannequin_C_IsLocked_::Result' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnBeginInteract) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_OnBeginInteract");
static_assert(sizeof(Bandit_Mannequin_C_OnBeginInteract) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnBeginInteract");
static_assert(offsetof(Bandit_Mannequin_C_OnBeginInteract, Player) == 0x000000, "Member 'Bandit_Mannequin_C_OnBeginInteract::Player' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnBlendOut_9A19B6754C459B5BFCE125BE80B6DBF1
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnBlendOut_9A19B6754C459B5BFCE125BE80B6DBF1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnBlendOut_9A19B6754C459B5BFCE125BE80B6DBF1) == 0x000004, "Wrong alignment on Bandit_Mannequin_C_OnBlendOut_9A19B6754C459B5BFCE125BE80B6DBF1");
static_assert(sizeof(Bandit_Mannequin_C_OnBlendOut_9A19B6754C459B5BFCE125BE80B6DBF1) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnBlendOut_9A19B6754C459B5BFCE125BE80B6DBF1");
static_assert(offsetof(Bandit_Mannequin_C_OnBlendOut_9A19B6754C459B5BFCE125BE80B6DBF1, NotifyName) == 0x000000, "Member 'Bandit_Mannequin_C_OnBlendOut_9A19B6754C459B5BFCE125BE80B6DBF1::NotifyName' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnCompleted_9A19B6754C459B5BFCE125BE80B6DBF1
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnCompleted_9A19B6754C459B5BFCE125BE80B6DBF1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnCompleted_9A19B6754C459B5BFCE125BE80B6DBF1) == 0x000004, "Wrong alignment on Bandit_Mannequin_C_OnCompleted_9A19B6754C459B5BFCE125BE80B6DBF1");
static_assert(sizeof(Bandit_Mannequin_C_OnCompleted_9A19B6754C459B5BFCE125BE80B6DBF1) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnCompleted_9A19B6754C459B5BFCE125BE80B6DBF1");
static_assert(offsetof(Bandit_Mannequin_C_OnCompleted_9A19B6754C459B5BFCE125BE80B6DBF1, NotifyName) == 0x000000, "Member 'Bandit_Mannequin_C_OnCompleted_9A19B6754C459B5BFCE125BE80B6DBF1::NotifyName' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnFocused
// 0x0050 (0x0050 - 0x0000)
struct Bandit_Mannequin_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetPlayerGUI_GUI;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnFocused) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_OnFocused");
static_assert(sizeof(Bandit_Mannequin_C_OnFocused) == 0x000050, "Wrong size on Bandit_Mannequin_C_OnFocused");
static_assert(offsetof(Bandit_Mannequin_C_OnFocused, Player) == 0x000000, "Member 'Bandit_Mannequin_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_OnFocused, HighlightActor) == 0x000008, "Member 'Bandit_Mannequin_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'Bandit_Mannequin_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_OnFocused, InteractType) == 0x000018, "Member 'Bandit_Mannequin_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_OnFocused, LateTime) == 0x000020, "Member 'Bandit_Mannequin_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'Bandit_Mannequin_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_OnFocused, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000030, "Member 'Bandit_Mannequin_C_OnFocused::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Bandit_Mannequin_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_OnFocused, CallFunc_GetPlayerGUI_GUI) == 0x000048, "Member 'Bandit_Mannequin_C_OnFocused::CallFunc_GetPlayerGUI_GUI' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnInteract) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_OnInteract");
static_assert(sizeof(Bandit_Mannequin_C_OnInteract) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnInteract");
static_assert(offsetof(Bandit_Mannequin_C_OnInteract, Player) == 0x000000, "Member 'Bandit_Mannequin_C_OnInteract::Player' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnInteract2) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_OnInteract2");
static_assert(sizeof(Bandit_Mannequin_C_OnInteract2) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnInteract2");
static_assert(offsetof(Bandit_Mannequin_C_OnInteract2, Player) == 0x000000, "Member 'Bandit_Mannequin_C_OnInteract2::Player' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnInteract3) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_OnInteract3");
static_assert(sizeof(Bandit_Mannequin_C_OnInteract3) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnInteract3");
static_assert(offsetof(Bandit_Mannequin_C_OnInteract3, Player) == 0x000000, "Member 'Bandit_Mannequin_C_OnInteract3::Player' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct Bandit_Mannequin_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnInteractVehicle) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_OnInteractVehicle");
static_assert(sizeof(Bandit_Mannequin_C_OnInteractVehicle) == 0x000010, "Wrong size on Bandit_Mannequin_C_OnInteractVehicle");
static_assert(offsetof(Bandit_Mannequin_C_OnInteractVehicle, Player) == 0x000000, "Member 'Bandit_Mannequin_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'Bandit_Mannequin_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'Bandit_Mannequin_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnInterrupted_9A19B6754C459B5BFCE125BE80B6DBF1
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnInterrupted_9A19B6754C459B5BFCE125BE80B6DBF1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnInterrupted_9A19B6754C459B5BFCE125BE80B6DBF1) == 0x000004, "Wrong alignment on Bandit_Mannequin_C_OnInterrupted_9A19B6754C459B5BFCE125BE80B6DBF1");
static_assert(sizeof(Bandit_Mannequin_C_OnInterrupted_9A19B6754C459B5BFCE125BE80B6DBF1) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnInterrupted_9A19B6754C459B5BFCE125BE80B6DBF1");
static_assert(offsetof(Bandit_Mannequin_C_OnInterrupted_9A19B6754C459B5BFCE125BE80B6DBF1, NotifyName) == 0x000000, "Member 'Bandit_Mannequin_C_OnInterrupted_9A19B6754C459B5BFCE125BE80B6DBF1::NotifyName' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnLocalInteract) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_OnLocalInteract");
static_assert(sizeof(Bandit_Mannequin_C_OnLocalInteract) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnLocalInteract");
static_assert(offsetof(Bandit_Mannequin_C_OnLocalInteract, Player) == 0x000000, "Member 'Bandit_Mannequin_C_OnLocalInteract::Player' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnLostFocus) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_OnLostFocus");
static_assert(sizeof(Bandit_Mannequin_C_OnLostFocus) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnLostFocus");
static_assert(offsetof(Bandit_Mannequin_C_OnLostFocus, Player) == 0x000000, "Member 'Bandit_Mannequin_C_OnLostFocus::Player' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnNotifyBegin_9A19B6754C459B5BFCE125BE80B6DBF1
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnNotifyBegin_9A19B6754C459B5BFCE125BE80B6DBF1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnNotifyBegin_9A19B6754C459B5BFCE125BE80B6DBF1) == 0x000004, "Wrong alignment on Bandit_Mannequin_C_OnNotifyBegin_9A19B6754C459B5BFCE125BE80B6DBF1");
static_assert(sizeof(Bandit_Mannequin_C_OnNotifyBegin_9A19B6754C459B5BFCE125BE80B6DBF1) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnNotifyBegin_9A19B6754C459B5BFCE125BE80B6DBF1");
static_assert(offsetof(Bandit_Mannequin_C_OnNotifyBegin_9A19B6754C459B5BFCE125BE80B6DBF1, NotifyName) == 0x000000, "Member 'Bandit_Mannequin_C_OnNotifyBegin_9A19B6754C459B5BFCE125BE80B6DBF1::NotifyName' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnNotifyEnd_9A19B6754C459B5BFCE125BE80B6DBF1
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnNotifyEnd_9A19B6754C459B5BFCE125BE80B6DBF1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnNotifyEnd_9A19B6754C459B5BFCE125BE80B6DBF1) == 0x000004, "Wrong alignment on Bandit_Mannequin_C_OnNotifyEnd_9A19B6754C459B5BFCE125BE80B6DBF1");
static_assert(sizeof(Bandit_Mannequin_C_OnNotifyEnd_9A19B6754C459B5BFCE125BE80B6DBF1) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnNotifyEnd_9A19B6754C459B5BFCE125BE80B6DBF1");
static_assert(offsetof(Bandit_Mannequin_C_OnNotifyEnd_9A19B6754C459B5BFCE125BE80B6DBF1, NotifyName) == 0x000000, "Member 'Bandit_Mannequin_C_OnNotifyEnd_9A19B6754C459B5BFCE125BE80B6DBF1::NotifyName' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnSeen) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_OnSeen");
static_assert(sizeof(Bandit_Mannequin_C_OnSeen) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnSeen");
static_assert(offsetof(Bandit_Mannequin_C_OnSeen, Player) == 0x000000, "Member 'Bandit_Mannequin_C_OnSeen::Player' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct Bandit_Mannequin_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_OnStopInteract) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_OnStopInteract");
static_assert(sizeof(Bandit_Mannequin_C_OnStopInteract) == 0x000008, "Wrong size on Bandit_Mannequin_C_OnStopInteract");
static_assert(offsetof(Bandit_Mannequin_C_OnStopInteract, Player) == 0x000000, "Member 'Bandit_Mannequin_C_OnStopInteract::Player' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct Bandit_Mannequin_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on Bandit_Mannequin_C_Set3DWidgetVisibility");
static_assert(sizeof(Bandit_Mannequin_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on Bandit_Mannequin_C_Set3DWidgetVisibility");
static_assert(offsetof(Bandit_Mannequin_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'Bandit_Mannequin_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct Bandit_Mannequin_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bandit_Mannequin_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on Bandit_Mannequin_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(Bandit_Mannequin_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on Bandit_Mannequin_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(Bandit_Mannequin_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'Bandit_Mannequin_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function Bandit_Mannequin.Bandit_Mannequin_C.ReceivePointDamage
// 0x0160 (0x0160 - 0x0000)
struct Bandit_Mannequin_C_ReceivePointDamage final
{
public:
	float                                         Param_Damage;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Param_HitComponent;                                // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0078(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Bandit_Mannequin_C_ReceivePointDamage) == 0x000008, "Wrong alignment on Bandit_Mannequin_C_ReceivePointDamage");
static_assert(sizeof(Bandit_Mannequin_C_ReceivePointDamage) == 0x000160, "Wrong size on Bandit_Mannequin_C_ReceivePointDamage");
static_assert(offsetof(Bandit_Mannequin_C_ReceivePointDamage, Param_Damage) == 0x000000, "Member 'Bandit_Mannequin_C_ReceivePointDamage::Param_Damage' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ReceivePointDamage, DamageType) == 0x000008, "Member 'Bandit_Mannequin_C_ReceivePointDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ReceivePointDamage, HitLocation) == 0x000010, "Member 'Bandit_Mannequin_C_ReceivePointDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ReceivePointDamage, HitNormal) == 0x000028, "Member 'Bandit_Mannequin_C_ReceivePointDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ReceivePointDamage, Param_HitComponent) == 0x000040, "Member 'Bandit_Mannequin_C_ReceivePointDamage::Param_HitComponent' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ReceivePointDamage, BoneName) == 0x000048, "Member 'Bandit_Mannequin_C_ReceivePointDamage::BoneName' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ReceivePointDamage, ShotFromDirection) == 0x000050, "Member 'Bandit_Mannequin_C_ReceivePointDamage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ReceivePointDamage, InstigatedBy) == 0x000068, "Member 'Bandit_Mannequin_C_ReceivePointDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ReceivePointDamage, DamageCauser) == 0x000070, "Member 'Bandit_Mannequin_C_ReceivePointDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(Bandit_Mannequin_C_ReceivePointDamage, HitInfo) == 0x000078, "Member 'Bandit_Mannequin_C_ReceivePointDamage::HitInfo' has a wrong offset!");

}

