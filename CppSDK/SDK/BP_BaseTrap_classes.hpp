#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseTrap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BaseTrap.BP_BaseTrap_C
// 0x0020 (0x02B0 - 0x0290)
class ABP_BaseTrap_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsed;                                            // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Catch(class APawn* NewParam);
	void CatchMulti(class APawn* NewParam);
	void ExecuteUbergraph_BP_BaseTrap(int32 EntryPoint);
	void OnCatch(class APawn* NewParam);
	void OnCatchMulti(class APawn* NewParam);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BaseTrap_C">();
	}
	static class ABP_BaseTrap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseTrap_C>();
	}
};
static_assert(alignof(ABP_BaseTrap_C) == 0x000008, "Wrong alignment on ABP_BaseTrap_C");
static_assert(sizeof(ABP_BaseTrap_C) == 0x0002B0, "Wrong size on ABP_BaseTrap_C");
static_assert(offsetof(ABP_BaseTrap_C, UberGraphFrame) == 0x000290, "Member 'ABP_BaseTrap_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BaseTrap_C, Box) == 0x000298, "Member 'ABP_BaseTrap_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_BaseTrap_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_BaseTrap_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BaseTrap_C, IsUsed) == 0x0002A8, "Member 'ABP_BaseTrap_C::IsUsed' has a wrong offset!");

}

