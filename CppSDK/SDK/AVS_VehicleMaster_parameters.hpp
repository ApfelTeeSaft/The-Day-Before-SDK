#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AVS_VehicleMaster

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_InteractType_structs.hpp"
#include "E_ActorType_structs.hpp"
#include "S_VehicleSit_structs.hpp"
#include "E_SitsType_structs.hpp"
#include "StatType_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "CarTipe_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "BPE_AmmoClass_structs.hpp"
#include "Survival_structs.hpp"
#include "DropItemEntry_structs.hpp"


namespace SDK::Params
{

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.AfterExitSurv
// 0x0048 (0x0048 - 0x0000)
struct AVS_VehicleMaster_C_AfterExitSurv final
{
public:
	class AActor*                                 Surv;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_AfterExitSurv) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_AfterExitSurv");
static_assert(sizeof(AVS_VehicleMaster_C_AfterExitSurv) == 0x000048, "Wrong size on AVS_VehicleMaster_C_AfterExitSurv");
static_assert(offsetof(AVS_VehicleMaster_C_AfterExitSurv, Surv) == 0x000000, "Member 'AVS_VehicleMaster_C_AfterExitSurv::Surv' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AfterExitSurv, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_AfterExitSurv::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AfterExitSurv, K2Node_DynamicCast_AsBPI_General_Interface) == 0x000010, "Member 'AVS_VehicleMaster_C_AfterExitSurv::K2Node_DynamicCast_AsBPI_General_Interface' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AfterExitSurv, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AVS_VehicleMaster_C_AfterExitSurv::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AfterExitSurv, CallFunc_GetHUD_ReturnValue) == 0x000028, "Member 'AVS_VehicleMaster_C_AfterExitSurv::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AfterExitSurv, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000030, "Member 'AVS_VehicleMaster_C_AfterExitSurv::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AfterExitSurv, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'AVS_VehicleMaster_C_AfterExitSurv::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.AllowStabilizeVehicle
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_AllowStabilizeVehicle final
{
public:
	bool                                          Allow;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue_1;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue_2;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue_3;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_AllowStabilizeVehicle) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_AllowStabilizeVehicle");
static_assert(sizeof(AVS_VehicleMaster_C_AllowStabilizeVehicle) == 0x000010, "Wrong size on AVS_VehicleMaster_C_AllowStabilizeVehicle");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, Allow) == 0x000000, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::Allow' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_hasContact_ReturnValue) == 0x000001, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_hasContact_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_hasContact_ReturnValue_1) == 0x000002, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_hasContact_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_hasContact_ReturnValue_2) == 0x000005, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_hasContact_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_hasContact_ReturnValue_3) == 0x000006, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_hasContact_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_Not_PreBool_ReturnValue_2) == 0x000007, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_Not_PreBool_ReturnValue_3) == 0x000008, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x00000A, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_BooleanOR_ReturnValue_1) == 0x00000B, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_BooleanOR_ReturnValue_2) == 0x00000C, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_Not_PreBool_ReturnValue_4) == 0x00000D, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AllowStabilizeVehicle, CallFunc_BooleanAND_ReturnValue_1) == 0x00000F, "Member 'AVS_VehicleMaster_C_AllowStabilizeVehicle::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.AnySitsEmpty
// 0x0030 (0x0030 - 0x0000)
struct AVS_VehicleMaster_C_AnySitsEmpty final
{
public:
	bool                                          Zaebis1;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EmptyIndex1;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EmptyIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Zaebis;                                            // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SitsType                                    Temp_byte_Variable;                                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_AnySitsEmpty) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_AnySitsEmpty");
static_assert(sizeof(AVS_VehicleMaster_C_AnySitsEmpty) == 0x000030, "Wrong size on AVS_VehicleMaster_C_AnySitsEmpty");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, Zaebis1) == 0x000000, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::Zaebis1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, EmptyIndex1) == 0x000004, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::EmptyIndex1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, EmptyIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::EmptyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, Zaebis) == 0x00000C, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::Zaebis' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, Temp_int_Variable) == 0x000010, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, Temp_int_Variable_1) == 0x000014, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, Temp_int_Variable_2) == 0x000018, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, Temp_int_Variable_3) == 0x00001C, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, Temp_bool_Variable) == 0x000024, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, Temp_byte_Variable) == 0x000026, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, K2Node_Select_Default) == 0x000028, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002C, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002D, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnySitsEmpty, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'AVS_VehicleMaster_C_AnySitsEmpty::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.AnyWheelHasContact
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_AnyWheelHasContact final
{
public:
	bool                                          HasContact;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue_1;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue_2;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue_3;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_AnyWheelHasContact) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_AnyWheelHasContact");
static_assert(sizeof(AVS_VehicleMaster_C_AnyWheelHasContact) == 0x000008, "Wrong size on AVS_VehicleMaster_C_AnyWheelHasContact");
static_assert(offsetof(AVS_VehicleMaster_C_AnyWheelHasContact, HasContact) == 0x000000, "Member 'AVS_VehicleMaster_C_AnyWheelHasContact::HasContact' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnyWheelHasContact, CallFunc_hasContact_ReturnValue) == 0x000001, "Member 'AVS_VehicleMaster_C_AnyWheelHasContact::CallFunc_hasContact_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnyWheelHasContact, CallFunc_hasContact_ReturnValue_1) == 0x000002, "Member 'AVS_VehicleMaster_C_AnyWheelHasContact::CallFunc_hasContact_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnyWheelHasContact, CallFunc_hasContact_ReturnValue_2) == 0x000003, "Member 'AVS_VehicleMaster_C_AnyWheelHasContact::CallFunc_hasContact_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnyWheelHasContact, CallFunc_hasContact_ReturnValue_3) == 0x000004, "Member 'AVS_VehicleMaster_C_AnyWheelHasContact::CallFunc_hasContact_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnyWheelHasContact, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'AVS_VehicleMaster_C_AnyWheelHasContact::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnyWheelHasContact, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'AVS_VehicleMaster_C_AnyWheelHasContact::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_AnyWheelHasContact, CallFunc_BooleanOR_ReturnValue_2) == 0x000007, "Member 'AVS_VehicleMaster_C_AnyWheelHasContact::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BindOnSurvDeathAndDestroy
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_BindOnSurvDeathAndDestroy final
{
public:
	class ASurvivalPlayer_V2_C*                   Surv;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_BindOnSurvDeathAndDestroy) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BindOnSurvDeathAndDestroy");
static_assert(sizeof(AVS_VehicleMaster_C_BindOnSurvDeathAndDestroy) == 0x000008, "Wrong size on AVS_VehicleMaster_C_BindOnSurvDeathAndDestroy");
static_assert(offsetof(AVS_VehicleMaster_C_BindOnSurvDeathAndDestroy, Surv) == 0x000000, "Member 'AVS_VehicleMaster_C_BindOnSurvDeathAndDestroy::Surv' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_5WheelDetection_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BL_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_BR_K2Node_ComponentBoundEvent_11_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylinder_FR_K2Node_ComponentBoundEvent_14_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Cylynder_FL_K2Node_ComponentBoundEvent_10_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_mMesh_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere1_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere2_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere3_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'AVS_VehicleMaster_C_BndEvt__AVS_VehicleMaster_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.CalculateFlat Wheel Number
// 0x0024 (0x0024 - 0x0000)
struct AVS_VehicleMaster_C_CalculateFlat_Wheel_Number final
{
public:
	int32                                         FlatWheelNumber;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _FlatWheelNumber;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_CalculateFlat_Wheel_Number");
static_assert(sizeof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number) == 0x000024, "Wrong size on AVS_VehicleMaster_C_CalculateFlat_Wheel_Number");
static_assert(offsetof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number, FlatWheelNumber) == 0x000000, "Member 'AVS_VehicleMaster_C_CalculateFlat_Wheel_Number::FlatWheelNumber' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number, _FlatWheelNumber) == 0x000004, "Member 'AVS_VehicleMaster_C_CalculateFlat_Wheel_Number::_FlatWheelNumber' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number, Temp_int_Array_Index_Variable) == 0x000008, "Member 'AVS_VehicleMaster_C_CalculateFlat_Wheel_Number::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'AVS_VehicleMaster_C_CalculateFlat_Wheel_Number::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_CalculateFlat_Wheel_Number::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'AVS_VehicleMaster_C_CalculateFlat_Wheel_Number::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number, CallFunc_Array_Get_Item) == 0x000018, "Member 'AVS_VehicleMaster_C_CalculateFlat_Wheel_Number::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'AVS_VehicleMaster_C_CalculateFlat_Wheel_Number::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CalculateFlat_Wheel_Number, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'AVS_VehicleMaster_C_CalculateFlat_Wheel_Number::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.Car StatDecodeAndSet
// 0x0090 (0x0090 - 0x0000)
struct AVS_VehicleMaster_C_Car_StatDecodeAndSet final
{
public:
	class ASurvivalPlayer_V2_C*                   CarsOwner;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCarsStat_Stats;                        // 0x0010(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_EncodeCarsStat_Fuel;                      // 0x0020(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_EncodeCarsStat_Durability;                // 0x0030(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStat_ReturnValue;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStat_ReturnValue_1;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Car_StatDecodeAndSet) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Car_StatDecodeAndSet");
static_assert(sizeof(AVS_VehicleMaster_C_Car_StatDecodeAndSet) == 0x000090, "Wrong size on AVS_VehicleMaster_C_Car_StatDecodeAndSet");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CarsOwner) == 0x000000, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CarsOwner' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_GetCarsStat_Stats) == 0x000010, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_GetCarsStat_Stats' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_EncodeCarsStat_Fuel) == 0x000020, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_EncodeCarsStat_Fuel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_EncodeCarsStat_Durability) == 0x000030, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_EncodeCarsStat_Durability' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_Array_Get_Item) == 0x000040, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_GetStat_Value) == 0x000048, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_GetStat_Value_1) == 0x000050, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_SetStat_ReturnValue) == 0x000070, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_SetStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_SelectFloat_ReturnValue_1) == 0x000080, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Car_StatDecodeAndSet, CallFunc_SetStat_ReturnValue_1) == 0x000088, "Member 'AVS_VehicleMaster_C_Car_StatDecodeAndSet::CallFunc_SetStat_ReturnValue_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.CarIsEmpty
// 0x0030 (0x0030 - 0x0000)
struct AVS_VehicleMaster_C_CarIsEmpty final
{
public:
	bool                                          Empty;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleSit                          CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_CarIsEmpty) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_CarIsEmpty");
static_assert(sizeof(AVS_VehicleMaster_C_CarIsEmpty) == 0x000030, "Wrong size on AVS_VehicleMaster_C_CarIsEmpty");
static_assert(offsetof(AVS_VehicleMaster_C_CarIsEmpty, Empty) == 0x000000, "Member 'AVS_VehicleMaster_C_CarIsEmpty::Empty' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CarIsEmpty, Temp_int_Array_Index_Variable) == 0x000004, "Member 'AVS_VehicleMaster_C_CarIsEmpty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CarIsEmpty, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'AVS_VehicleMaster_C_CarIsEmpty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CarIsEmpty, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'AVS_VehicleMaster_C_CarIsEmpty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CarIsEmpty, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_CarIsEmpty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CarIsEmpty, CallFunc_Array_Get_Item) == 0x000018, "Member 'AVS_VehicleMaster_C_CarIsEmpty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CarIsEmpty, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'AVS_VehicleMaster_C_CarIsEmpty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ChangeViewTargetWithDelay
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_ChangeViewTargetWithDelay final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewViewTarget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Exit;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ChangeViewTargetWithDelay) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ChangeViewTargetWithDelay");
static_assert(sizeof(AVS_VehicleMaster_C_ChangeViewTargetWithDelay) == 0x000018, "Wrong size on AVS_VehicleMaster_C_ChangeViewTargetWithDelay");
static_assert(offsetof(AVS_VehicleMaster_C_ChangeViewTargetWithDelay, Delay) == 0x000000, "Member 'AVS_VehicleMaster_C_ChangeViewTargetWithDelay::Delay' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChangeViewTargetWithDelay, NewViewTarget) == 0x000008, "Member 'AVS_VehicleMaster_C_ChangeViewTargetWithDelay::NewViewTarget' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChangeViewTargetWithDelay, Exit) == 0x000010, "Member 'AVS_VehicleMaster_C_ChangeViewTargetWithDelay::Exit' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.Check Player Neer Engine
// 0x0060 (0x0060 - 0x0000)
struct AVS_VehicleMaster_C_Check_Player_Neer_Engine final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerNeerEngine;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempSitIndex;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_CapsuleOverlapActors_OutActors;           // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_CapsuleOverlapActors_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Check_Player_Neer_Engine) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Check_Player_Neer_Engine");
static_assert(sizeof(AVS_VehicleMaster_C_Check_Player_Neer_Engine) == 0x000060, "Wrong size on AVS_VehicleMaster_C_Check_Player_Neer_Engine");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Engine, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Engine::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Engine, PlayerNeerEngine) == 0x000008, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Engine::PlayerNeerEngine' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Engine, TempSitIndex) == 0x00000C, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Engine::TempSitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Engine, Temp_object_Variable) == 0x000010, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Engine::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Engine, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Engine::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Engine, K2Node_MakeArray_Array) == 0x000038, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Engine::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Engine, CallFunc_CapsuleOverlapActors_OutActors) == 0x000048, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Engine::CallFunc_CapsuleOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Engine, CallFunc_CapsuleOverlapActors_ReturnValue) == 0x000058, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Engine::CallFunc_CapsuleOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Engine, CallFunc_Array_Contains_ReturnValue) == 0x000059, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Engine::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.Check Player Neer Gas
// 0x0060 (0x0060 - 0x0000)
struct AVS_VehicleMaster_C_Check_Player_Neer_Gas final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerNeerGas;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempSitIndex;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_CapsuleOverlapActors_OutActors;           // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_CapsuleOverlapActors_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Check_Player_Neer_Gas) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Check_Player_Neer_Gas");
static_assert(sizeof(AVS_VehicleMaster_C_Check_Player_Neer_Gas) == 0x000060, "Wrong size on AVS_VehicleMaster_C_Check_Player_Neer_Gas");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Gas, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Gas::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Gas, PlayerNeerGas) == 0x000008, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Gas::PlayerNeerGas' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Gas, TempSitIndex) == 0x00000C, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Gas::TempSitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Gas, Temp_object_Variable) == 0x000010, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Gas::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Gas, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Gas::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Gas, K2Node_MakeArray_Array) == 0x000038, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Gas::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Gas, CallFunc_CapsuleOverlapActors_OutActors) == 0x000048, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Gas::CallFunc_CapsuleOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Gas, CallFunc_CapsuleOverlapActors_ReturnValue) == 0x000058, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Gas::CallFunc_CapsuleOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Check_Player_Neer_Gas, CallFunc_Array_Contains_ReturnValue) == 0x000059, "Member 'AVS_VehicleMaster_C_Check_Player_Neer_Gas::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.CheckForUnderWater
// 0x0028 (0x0028 - 0x0000)
struct AVS_VehicleMaster_C_CheckForUnderWater final
{
public:
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnderWater_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_CheckForUnderWater) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_CheckForUnderWater");
static_assert(sizeof(AVS_VehicleMaster_C_CheckForUnderWater) == 0x000028, "Wrong size on AVS_VehicleMaster_C_CheckForUnderWater");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForUnderWater, Temp_bool_Has_Been_Initd_Variable) == 0x000000, "Member 'AVS_VehicleMaster_C_CheckForUnderWater::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForUnderWater, Temp_bool_IsClosed_Variable) == 0x000001, "Member 'AVS_VehicleMaster_C_CheckForUnderWater::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForUnderWater, CallFunc_BreakVector_X) == 0x000008, "Member 'AVS_VehicleMaster_C_CheckForUnderWater::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForUnderWater, CallFunc_BreakVector_Y) == 0x000010, "Member 'AVS_VehicleMaster_C_CheckForUnderWater::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForUnderWater, CallFunc_BreakVector_Z) == 0x000018, "Member 'AVS_VehicleMaster_C_CheckForUnderWater::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForUnderWater, CallFunc_IsUnderWater_ReturnValue) == 0x000020, "Member 'AVS_VehicleMaster_C_CheckForUnderWater::CallFunc_IsUnderWater_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.CheckForWheelNotTouckWhileUnderWater
// 0x00B0 (0x00B0 - 0x0000)
struct AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater final
{
public:
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue_1;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue_2;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_2;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue_3;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_3;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater");
static_assert(sizeof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater) == 0x0000B0, "Wrong size on AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_GetCenterOfMass_ReturnValue) == 0x000000, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_BreakVector_X) == 0x000018, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_BreakVector_Y) == 0x000020, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_BreakVector_Z) == 0x000028, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_BreakVector_X_1) == 0x000030, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_hasContact_ReturnValue) == 0x000051, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_hasContact_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000058, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_hasContact_ReturnValue_1) == 0x000060, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_hasContact_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000068, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_hasContact_ReturnValue_2) == 0x000070, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_hasContact_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_Conv_BoolToDouble_ReturnValue_2) == 0x000078, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_Conv_BoolToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_hasContact_ReturnValue_3) == 0x000080, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_hasContact_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_Conv_BoolToDouble_ReturnValue_3) == 0x000088, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_Conv_BoolToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater, CallFunc_BooleanAND_ReturnValue) == 0x0000AA, "Member 'AVS_VehicleMaster_C_CheckForWheelNotTouckWhileUnderWater::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.CheckOneSits
// 0x0090 (0x0090 - 0x0000)
struct AVS_VehicleMaster_C_CheckOneSits final
{
public:
	int32                                         Dimension_1;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FName>                           SocketArray;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bLock;                                             // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_CheckOneSits) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_CheckOneSits");
static_assert(sizeof(AVS_VehicleMaster_C_CheckOneSits) == 0x000090, "Wrong size on AVS_VehicleMaster_C_CheckOneSits");
static_assert(offsetof(AVS_VehicleMaster_C_CheckOneSits, Dimension_1) == 0x000000, "Member 'AVS_VehicleMaster_C_CheckOneSits::Dimension_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckOneSits, ActorsToIgnore) == 0x000008, "Member 'AVS_VehicleMaster_C_CheckOneSits::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckOneSits, SocketArray) == 0x000018, "Member 'AVS_VehicleMaster_C_CheckOneSits::SocketArray' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckOneSits, bLock) == 0x000028, "Member 'AVS_VehicleMaster_C_CheckOneSits::bLock' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckOneSits, CallFunc_GetSocketLocation_ReturnValue) == 0x000030, "Member 'AVS_VehicleMaster_C_CheckOneSits::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckOneSits, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'AVS_VehicleMaster_C_CheckOneSits::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckOneSits, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000060, "Member 'AVS_VehicleMaster_C_CheckOneSits::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckOneSits, CallFunc_SphereTraceMulti_OutHits) == 0x000078, "Member 'AVS_VehicleMaster_C_CheckOneSits::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckOneSits, CallFunc_SphereTraceMulti_ReturnValue) == 0x000088, "Member 'AVS_VehicleMaster_C_CheckOneSits::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.CheckPlayerSits
// 0x00D8 (0x00D8 - 0x0000)
struct AVS_VehicleMaster_C_CheckPlayerSits final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanEnter;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SitIndex;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _Zaebis;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TempSitIndex;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	E_SitsType                                    Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AnySitsEmpty_Zaebis1;                     // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AnySitsEmpty_EmptyIndex1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SitsType                                    Temp_byte_Variable_1;                              // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_CapsuleOverlapActors_OutActors;           // 0x00B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_CapsuleOverlapActors_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CapsuleOverlapActors_Radius_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_CheckPlayerSits) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_CheckPlayerSits");
static_assert(sizeof(AVS_VehicleMaster_C_CheckPlayerSits) == 0x0000D8, "Wrong size on AVS_VehicleMaster_C_CheckPlayerSits");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CanEnter) == 0x000008, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CanEnter' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, SitIndex) == 0x00000C, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, _Zaebis) == 0x000010, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::_Zaebis' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, TempSitIndex) == 0x000014, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::TempSitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_real_Variable) == 0x000018, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_real_Variable_1) == 0x000020, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_object_Variable) == 0x000028, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_byte_Variable) == 0x000038, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_int_Variable) == 0x00003C, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_int_Variable_1) == 0x000040, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_int_Variable_2) == 0x000044, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_bool_Variable) == 0x000048, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_AnySitsEmpty_Zaebis1) == 0x00004A, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_AnySitsEmpty_Zaebis1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_AnySitsEmpty_EmptyIndex1) == 0x00004C, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_AnySitsEmpty_EmptyIndex1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, K2Node_Select_Default) == 0x000050, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000054, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_int_Variable_3) == 0x000058, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_real_Variable_2) == 0x000060, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_Array_Get_Item) == 0x000068, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_GetSocketLocation_ReturnValue) == 0x000070, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00008C, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_BooleanAND_ReturnValue) == 0x00008D, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_byte_Variable_1) == 0x00008E, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_int_Variable_4) == 0x000090, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, K2Node_Select_Default_1) == 0x000098, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, K2Node_MakeArray_Array) == 0x0000A0, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, Temp_bool_Variable_1) == 0x0000B0, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_CapsuleOverlapActors_OutActors) == 0x0000B8, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_CapsuleOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_CapsuleOverlapActors_ReturnValue) == 0x0000C8, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_CapsuleOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_Array_Contains_ReturnValue) == 0x0000C9, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, K2Node_Select_Default_2) == 0x0000CC, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckPlayerSits, CallFunc_CapsuleOverlapActors_Radius_ImplicitCast) == 0x0000D0, "Member 'AVS_VehicleMaster_C_CheckPlayerSits::CallFunc_CapsuleOverlapActors_Radius_ImplicitCast' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.CheckZombieKill
// 0x0348 (0x0348 - 0x0000)
struct AVS_VehicleMaster_C_CheckZombieKill final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getThrottle_ReturnValue;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              K2Node_DynamicCast_AsZombie;                       // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH;          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_1;        // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_2;        // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_3;        // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_CheckZombieKill) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_CheckZombieKill");
static_assert(sizeof(AVS_VehicleMaster_C_CheckZombieKill) == 0x000348, "Wrong size on AVS_VehicleMaster_C_CheckZombieKill");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, Object) == 0x000000, "Member 'AVS_VehicleMaster_C_CheckZombieKill::Object' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, Hit) == 0x000008, "Member 'AVS_VehicleMaster_C_CheckZombieKill::Hit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F0, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F1, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_Time) == 0x0000F4, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_Distance) == 0x0000F8, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_Location) == 0x000100, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_ImpactPoint) == 0x000118, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_BoneName) == 0x000180, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_ElementIndex) == 0x00018C, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_FaceIndex) == 0x000190, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_getThrottle_ReturnValue) == 0x0001C8, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_getThrottle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001CC, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, K2Node_DynamicCast_AsZombie) == 0x0001D0, "Member 'AVS_VehicleMaster_C_CheckZombieKill::K2Node_DynamicCast_AsZombie' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'AVS_VehicleMaster_C_CheckZombieKill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_GetCurrentSpeed_CurrentSpeedKMH) == 0x0001DC, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_GetCurrentSpeed_CurrentSpeedKMH' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_1) == 0x0001E0, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001E4, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_2) == 0x0001E8, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_BooleanOR_ReturnValue) == 0x0001EC, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_3) == 0x0001F0, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_GetVelocity_ReturnValue) == 0x0001F8, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_HasAuthority_ReturnValue) == 0x000210, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Normal_ReturnValue) == 0x000218, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000230, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_MakeVector_ReturnValue) == 0x000238, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Add_VectorVector_ReturnValue) == 0x000250, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_GetController_ReturnValue) == 0x000268, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_MapRangeClamped_ReturnValue) == 0x000270, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000278, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000280, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000298, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002B0, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0002C8, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0002E0, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0002E8, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Divide_VectorVector_ReturnValue) == 0x000300, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_GetController_ReturnValue_1) == 0x000318, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000320, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000328, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000330, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000338, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CheckZombieKill, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000340, "Member 'AVS_VehicleMaster_C_CheckZombieKill::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ChekIfStillOverlapWater
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_ChekIfStillOverlapWater final
{
public:
	TArray<class AActor*>                         TargetArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          StillOverlap;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ChekIfStillOverlapWater) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ChekIfStillOverlapWater");
static_assert(sizeof(AVS_VehicleMaster_C_ChekIfStillOverlapWater) == 0x000018, "Wrong size on AVS_VehicleMaster_C_ChekIfStillOverlapWater");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillOverlapWater, TargetArray) == 0x000000, "Member 'AVS_VehicleMaster_C_ChekIfStillOverlapWater::TargetArray' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillOverlapWater, StillOverlap) == 0x000010, "Member 'AVS_VehicleMaster_C_ChekIfStillOverlapWater::StillOverlap' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillOverlapWater, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000011, "Member 'AVS_VehicleMaster_C_ChekIfStillOverlapWater::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ChekIfStillUnderWater
// 0x0040 (0x0040 - 0x0000)
struct AVS_VehicleMaster_C_ChekIfStillUnderWater final
{
public:
	bool                                          StillUnderWater;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _StillUnderWater;                                  // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ChekIfStillUnderWater) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ChekIfStillUnderWater");
static_assert(sizeof(AVS_VehicleMaster_C_ChekIfStillUnderWater) == 0x000040, "Wrong size on AVS_VehicleMaster_C_ChekIfStillUnderWater");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, StillUnderWater) == 0x000000, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::StillUnderWater' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, _StillUnderWater) == 0x000001, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::_StillUnderWater' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, Temp_bool_True_if_break_was_hit_Variable) == 0x000002, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, Temp_int_Array_Index_Variable) == 0x000004, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000018, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, CallFunc_Array_Get_Item) == 0x000030, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, CallFunc_ActorHasTag_ReturnValue) == 0x000039, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ChekIfStillUnderWater, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'AVS_VehicleMaster_C_ChekIfStillUnderWater::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ClientsEnterVehicleAsDriver
// 0x0230 (0x0230 - 0x0000)
struct AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0138(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver) == 0x000010, "Wrong alignment on AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver");
static_assert(sizeof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver) == 0x000230, "Wrong size on AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, K2Node_DynamicCast_AsBPI_General_Interface) == 0x000008, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::K2Node_DynamicCast_AsBPI_General_Interface' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000080, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, CallFunc_BreakTransform_Location) == 0x000088, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, CallFunc_BreakTransform_Rotation) == 0x0000A0, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, CallFunc_IsLocallyControlled_ReturnValue) == 0x000130, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000138, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000220, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsDriver::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ClientsEnterVehicleAsPassenger
// 0x0028 (0x0028 - 0x0000)
struct AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger");
static_assert(sizeof(AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger) == 0x000028, "Wrong size on AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger, K2Node_DynamicCast_AsBPI_General_Interface) == 0x000010, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger::K2Node_DynamicCast_AsBPI_General_Interface' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger, CallFunc_IsLocallyControlled_ReturnValue) == 0x000021, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000022, "Member 'AVS_VehicleMaster_C_ClientsEnterVehicleAsPassenger::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ClientsExitVehicleAsDriver
// 0x0318 (0x0318 - 0x0000)
struct AVS_VehicleMaster_C_ClientsExitVehicleAsDriver final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipExitOnLocation;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CorrectExitRotation;                               // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CorrectExitLocation;                               // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetExitPoint_Location;                    // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetExitPoint_CorrectLocation;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetExitPoint_YouCantExit;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe;                       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCorrectExitRotation_ReturnValue;       // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_VehicleAnimator_C>  K2Node_DynamicCast_AsI_Vehicle_Animator;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x00D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x0210(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ClientsExitVehicleAsDriver");
static_assert(sizeof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver) == 0x000318, "Wrong size on AVS_VehicleMaster_C_ClientsExitVehicleAsDriver");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, SkipExitOnLocation) == 0x000008, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::SkipExitOnLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CorrectExitRotation) == 0x000009, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CorrectExitRotation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CorrectExitLocation) == 0x00000A, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CorrectExitLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_GetExitPoint_Location) == 0x000010, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_GetExitPoint_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_GetExitPoint_CorrectLocation) == 0x000028, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_GetExitPoint_CorrectLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_GetExitPoint_YouCantExit) == 0x000029, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_GetExitPoint_YouCantExit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_GetCarTipe_CarTipe) == 0x00002A, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_GetCarTipe_CarTipe' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_HasCorrectExitRotation_ReturnValue) == 0x00002B, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_HasCorrectExitRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, K2Node_DynamicCast_AsI_Vehicle_Animator) == 0x000038, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::K2Node_DynamicCast_AsI_Vehicle_Animator' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000050, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000078, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000098, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x0000A0, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_MakeRotator_ReturnValue_1) == 0x0000A8, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C0, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0000D8, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0001C0, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_GetAnimInstance_ReturnValue_2) == 0x0001C8, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0001D0, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_BreakRotator_Roll_1) == 0x0001E8, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_BreakRotator_Pitch_1) == 0x0001EC, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_BreakRotator_Yaw_1) == 0x0001F0, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_BooleanAND_ReturnValue) == 0x0001F4, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_MakeRotator_ReturnValue_2) == 0x0001F8, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x000210, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x0002F8, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsDriver, CallFunc_MakeRotator_ReturnValue_3) == 0x000300, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsDriver::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ClientsExitVehicleAsPassenger
// 0x02D8 (0x02D8 - 0x0000)
struct AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipExitOnLocation;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CorrectExitLocation;                               // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0098(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetExitPoint_Location;                    // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetExitPoint_CorrectLocation;             // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetExitPoint_YouCantExit;                 // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x01E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger");
static_assert(sizeof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger) == 0x0002D8, "Wrong size on AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, SkipExitOnLocation) == 0x000008, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::SkipExitOnLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CorrectExitLocation) == 0x000009, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CorrectExitLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_GetCarTipe_CarTipe) == 0x00000A, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_GetCarTipe_CarTipe' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_IsLocallyControlled_ReturnValue) == 0x000028, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000038, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000050, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_BreakRotator_Roll) == 0x000058, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_BreakRotator_Pitch) == 0x00005C, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_BreakRotator_Yaw) == 0x000060, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_MakeRotator_ReturnValue) == 0x000068, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_MakeRotator_ReturnValue_1) == 0x000080, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000098, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000180, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000181, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000188, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_BreakRotator_Roll_1) == 0x0001A0, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_BreakRotator_Pitch_1) == 0x0001A4, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_BreakRotator_Yaw_1) == 0x0001A8, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_MakeRotator_ReturnValue_2) == 0x0001B0, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_GetExitPoint_Location) == 0x0001C8, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_GetExitPoint_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_GetExitPoint_CorrectLocation) == 0x0001E0, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_GetExitPoint_CorrectLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_GetExitPoint_YouCantExit) == 0x0001E1, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_GetExitPoint_YouCantExit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x0001E8, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x0002D0, "Member 'AVS_VehicleMaster_C_ClientsExitVehicleAsPassenger::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.CodeCarsStat
// 0x00B8 (0x00B8 - 0x0000)
struct AVS_VehicleMaster_C_CodeCarsStat final
{
public:
	TArray<double>                                Fuel;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<double>                                Durability;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         Stats;                                             // 0x0020(0x0010)(Parm, OutParm)
	TArray<class FString>                         Values;                                            // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_CodeCarsStat) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_CodeCarsStat");
static_assert(sizeof(AVS_VehicleMaster_C_CodeCarsStat) == 0x0000B8, "Wrong size on AVS_VehicleMaster_C_CodeCarsStat");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, Fuel) == 0x000000, "Member 'AVS_VehicleMaster_C_CodeCarsStat::Fuel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, Durability) == 0x000010, "Member 'AVS_VehicleMaster_C_CodeCarsStat::Durability' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, Stats) == 0x000020, "Member 'AVS_VehicleMaster_C_CodeCarsStat::Stats' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, Values) == 0x000030, "Member 'AVS_VehicleMaster_C_CodeCarsStat::Values' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_CodeCarsStat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, Temp_int_Array_Index_Variable) == 0x000044, "Member 'AVS_VehicleMaster_C_CodeCarsStat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'AVS_VehicleMaster_C_CodeCarsStat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, CallFunc_Array_Get_Item) == 0x000050, "Member 'AVS_VehicleMaster_C_CodeCarsStat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000058, "Member 'AVS_VehicleMaster_C_CodeCarsStat::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'AVS_VehicleMaster_C_CodeCarsStat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'AVS_VehicleMaster_C_CodeCarsStat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'AVS_VehicleMaster_C_CodeCarsStat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'AVS_VehicleMaster_C_CodeCarsStat::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000090, "Member 'AVS_VehicleMaster_C_CodeCarsStat::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'AVS_VehicleMaster_C_CodeCarsStat::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CodeCarsStat, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'AVS_VehicleMaster_C_CodeCarsStat::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.CompareSteamIdtoOwner
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_CompareSteamIdtoOwner final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   SurvRef;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_CompareSteamIdtoOwner) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_CompareSteamIdtoOwner");
static_assert(sizeof(AVS_VehicleMaster_C_CompareSteamIdtoOwner) == 0x000018, "Wrong size on AVS_VehicleMaster_C_CompareSteamIdtoOwner");
static_assert(offsetof(AVS_VehicleMaster_C_CompareSteamIdtoOwner, SteamID) == 0x000000, "Member 'AVS_VehicleMaster_C_CompareSteamIdtoOwner::SteamID' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_CompareSteamIdtoOwner, SurvRef) == 0x000010, "Member 'AVS_VehicleMaster_C_CompareSteamIdtoOwner::SurvRef' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.DEBUG_SetFXSpawnRate
// 0x0014 (0x0014 - 0x0000)
struct AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate final
{
public:
	float                                         Param_SpawnRate;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_SpawnRate_ST;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_SpawnRate_ST2;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_SpawnRate_ST3;                               // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_SpawnRate_ST4;                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate");
static_assert(sizeof(AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate) == 0x000014, "Wrong size on AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate");
static_assert(offsetof(AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate, Param_SpawnRate) == 0x000000, "Member 'AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate::Param_SpawnRate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate, Param_SpawnRate_ST) == 0x000004, "Member 'AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate::Param_SpawnRate_ST' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate, Param_SpawnRate_ST2) == 0x000008, "Member 'AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate::Param_SpawnRate_ST2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate, Param_SpawnRate_ST3) == 0x00000C, "Member 'AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate::Param_SpawnRate_ST3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate, Param_SpawnRate_ST4) == 0x000010, "Member 'AVS_VehicleMaster_C_DEBUG_SetFXSpawnRate::Param_SpawnRate_ST4' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.debugtraceMulti
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_DebugtraceMulti final
{
public:
	struct FVector                                NewParam;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_DebugtraceMulti) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_DebugtraceMulti");
static_assert(sizeof(AVS_VehicleMaster_C_DebugtraceMulti) == 0x000018, "Wrong size on AVS_VehicleMaster_C_DebugtraceMulti");
static_assert(offsetof(AVS_VehicleMaster_C_DebugtraceMulti, NewParam) == 0x000000, "Member 'AVS_VehicleMaster_C_DebugtraceMulti::NewParam' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.Destroy Car when Nosurv InRange Of
// 0x0080 (0x0080 - 0x0000)
struct AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of final
{
public:
	TArray<class ASurvivalPlayer_C*>              Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Radius;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Destroy;                                           // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of");
static_assert(sizeof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of) == 0x000080, "Wrong size on AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, Array) == 0x000000, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::Array' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, Radius) == 0x000010, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::Radius' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, Destroy) == 0x000018, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::Destroy' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, Temp_int_Array_Index_Variable) == 0x000024, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_Array_Get_Item) == 0x000028, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_Array_IsEmpty_ReturnValue) == 0x000049, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_Vector_Distance_ReturnValue) == 0x000070, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000078, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_BooleanAND_ReturnValue) == 0x00007A, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_BooleanAND_ReturnValue_1) == 0x00007B, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'AVS_VehicleMaster_C_Destroy_Car_when_Nosurv_InRange_Of::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.DestroySelfWhenTimerOut
// 0x0028 (0x0028 - 0x0000)
struct AVS_VehicleMaster_C_DestroySelfWhenTimerOut final
{
public:
	EStatType                                     Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_serv_ApplyDamage_BaseDamage_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_DestroySelfWhenTimerOut) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_DestroySelfWhenTimerOut");
static_assert(sizeof(AVS_VehicleMaster_C_DestroySelfWhenTimerOut) == 0x000028, "Wrong size on AVS_VehicleMaster_C_DestroySelfWhenTimerOut");
static_assert(offsetof(AVS_VehicleMaster_C_DestroySelfWhenTimerOut, Temp_byte_Variable) == 0x000000, "Member 'AVS_VehicleMaster_C_DestroySelfWhenTimerOut::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DestroySelfWhenTimerOut, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000001, "Member 'AVS_VehicleMaster_C_DestroySelfWhenTimerOut::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DestroySelfWhenTimerOut, CallFunc_Map_Find_Value) == 0x000008, "Member 'AVS_VehicleMaster_C_DestroySelfWhenTimerOut::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DestroySelfWhenTimerOut, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_DestroySelfWhenTimerOut::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DestroySelfWhenTimerOut, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'AVS_VehicleMaster_C_DestroySelfWhenTimerOut::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DestroySelfWhenTimerOut, CallFunc_serv_ApplyDamage_BaseDamage_ImplicitCast) == 0x000020, "Member 'AVS_VehicleMaster_C_DestroySelfWhenTimerOut::CallFunc_serv_ApplyDamage_BaseDamage_ImplicitCast' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.DoorAnimation
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_DoorAnimation final
{
public:
	int32                                         SitIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Open;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_DoorAnimation) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_DoorAnimation");
static_assert(sizeof(AVS_VehicleMaster_C_DoorAnimation) == 0x000008, "Wrong size on AVS_VehicleMaster_C_DoorAnimation");
static_assert(offsetof(AVS_VehicleMaster_C_DoorAnimation, SitIndex) == 0x000000, "Member 'AVS_VehicleMaster_C_DoorAnimation::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DoorAnimation, Open) == 0x000004, "Member 'AVS_VehicleMaster_C_DoorAnimation::Open' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.DriverGetInCar
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_DriverGetInCar final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_DriverGetInCar) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_DriverGetInCar");
static_assert(sizeof(AVS_VehicleMaster_C_DriverGetInCar) == 0x000010, "Wrong size on AVS_VehicleMaster_C_DriverGetInCar");
static_assert(offsetof(AVS_VehicleMaster_C_DriverGetInCar, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_DriverGetInCar::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DriverGetInCar, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_DriverGetInCar::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DriverGetInCar, SkipAnimation) == 0x00000C, "Member 'AVS_VehicleMaster_C_DriverGetInCar::SkipAnimation' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.DriverGetOutCar
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_DriverGetOutCar final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipExitOnLocation;                                // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_DriverGetOutCar) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_DriverGetOutCar");
static_assert(sizeof(AVS_VehicleMaster_C_DriverGetOutCar) == 0x000010, "Wrong size on AVS_VehicleMaster_C_DriverGetOutCar");
static_assert(offsetof(AVS_VehicleMaster_C_DriverGetOutCar, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_DriverGetOutCar::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DriverGetOutCar, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_DriverGetOutCar::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DriverGetOutCar, SkipAnimation) == 0x00000C, "Member 'AVS_VehicleMaster_C_DriverGetOutCar::SkipAnimation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_DriverGetOutCar, SkipExitOnLocation) == 0x00000D, "Member 'AVS_VehicleMaster_C_DriverGetOutCar::SkipExitOnLocation' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.EncodeCarsStat
// 0x00F0 (0x00F0 - 0x0000)
struct AVS_VehicleMaster_C_EncodeCarsStat final
{
public:
	TArray<class FString>                         Stats;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<double>                                Fuel;                                              // 0x0010(0x0010)(Parm, OutParm)
	TArray<double>                                Durability;                                        // 0x0020(0x0010)(Parm, OutParm)
	TArray<double>                                _Durability;                                       // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                _Fuel;                                             // 0x0040(0x0010)(Edit, BlueprintVisible)
	class FString                                 ValueBuffer;                                       // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0088(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue_1;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_EncodeCarsStat) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_EncodeCarsStat");
static_assert(sizeof(AVS_VehicleMaster_C_EncodeCarsStat) == 0x0000F0, "Wrong size on AVS_VehicleMaster_C_EncodeCarsStat");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, Stats) == 0x000000, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::Stats' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, Fuel) == 0x000010, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::Fuel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, Durability) == 0x000020, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::Durability' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, _Durability) == 0x000030, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::_Durability' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, _Fuel) == 0x000040, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::_Fuel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, ValueBuffer) == 0x000050, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::ValueBuffer' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, Temp_int_Array_Index_Variable) == 0x000070, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Array_Get_Item) == 0x000078, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000088, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Array_Length_ReturnValue_2) == 0x00009C, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000A0, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Conv_StringToDouble_ReturnValue) == 0x0000B8, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000C0, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C1, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Conv_StringToDouble_ReturnValue_1) == 0x0000C8, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Conv_StringToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Array_Add_ReturnValue_1) == 0x0000E0, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, Temp_int_Loop_Counter_Variable_1) == 0x0000E4, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E8, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EncodeCarsStat, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000EC, "Member 'AVS_VehicleMaster_C_EncodeCarsStat::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.EnterVehicle
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_EnterVehicle final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromRancho;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_EnterVehicle) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_EnterVehicle");
static_assert(sizeof(AVS_VehicleMaster_C_EnterVehicle) == 0x000018, "Wrong size on AVS_VehicleMaster_C_EnterVehicle");
static_assert(offsetof(AVS_VehicleMaster_C_EnterVehicle, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_EnterVehicle::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EnterVehicle, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_EnterVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EnterVehicle, FromRancho) == 0x00000C, "Member 'AVS_VehicleMaster_C_EnterVehicle::FromRancho' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EnterVehicle, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_EnterVehicle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EnterVehicle, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'AVS_VehicleMaster_C_EnterVehicle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EnterVehicle, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000015, "Member 'AVS_VehicleMaster_C_EnterVehicle::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EnterVehicle, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'AVS_VehicleMaster_C_EnterVehicle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_EnterVehicle, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000017, "Member 'AVS_VehicleMaster_C_EnterVehicle::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ExecuteUbergraph_AVS_VehicleMaster
// 0x3F40 (0x3F40 - 0x0000)
struct AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_11; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_12;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_12;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_11;      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_9;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_9;          // 0x0078(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Variable_11;                              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RoadTrap_C*                         K2Node_DynamicCast_AsBP_Road_Trap;                 // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_12;                              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_10; // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_11;          // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_11;           // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_10;      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_8;           // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_8;          // 0x01B0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_RoadTrap_C*                         K2Node_DynamicCast_AsBP_Road_Trap_1;               // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A3[0x5];                                      // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_9;  // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_10;          // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_10;           // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_9;       // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_7;           // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_7;          // 0x0350(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_RoadTrap_C*                         K2Node_DynamicCast_AsBP_Road_Trap_2;               // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0480(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_2;        // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2[0x2];                                      // 0x04F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_3;        // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD[0x3];                                      // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnderWater_ReturnValue;                 // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x051A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B[0x5];                                      // 0x051B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0520(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0528(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_4;        // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_18;                              // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_8;  // 0x0580(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_9;           // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_9;            // 0x0590(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_8;       // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_6;           // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59D[0x3];                                      // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_6;          // 0x05A0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_RoadTrap_C*                         K2Node_DynamicCast_AsBP_Road_Trap_3;               // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x7];                                      // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player_10;                      // 0x0698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FromRancho;                     // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player_9;                       // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SitIndex_9;                     // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B4[0x4];                                      // 0x06B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player_8;                       // 0x06B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SkipExitOnLocation_3;           // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player_7;                       // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SkipExitOnLocation_2;           // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D1[0x7];                                      // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6;                              // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_7;  // 0x06E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_8;           // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_8;            // 0x06F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_7;       // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_5;           // 0x06FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FD[0x3];                                      // 0x06FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_5;          // 0x0700(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x07E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F1[0x7];                                      // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x07F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDropItemEntry>                 CallFunc_GetAllItemsToDrop_Result;                 // 0x0810(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_821[0x7];                                      // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0828(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_7;           // 0x0830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_7;            // 0x0838(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0840(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0858(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_942[0x2];                                      // 0x0942(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94C[0x4];                                      // 0x094C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0950(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0968(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0980(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0998(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x09B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x09B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x09C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x09DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E4[0x4];                                      // 0x09E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x09E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0A00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0A18(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A21[0xF];                                      // 0x0A21(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0A30(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0A90(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              K2Node_DynamicCast_AsZombie;                       // 0x0AF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF9[0x7];                                      // 0x0AF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue_1;        // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_BaseProjectile_C*                   K2Node_DynamicCast_AsBP_Base_Projectile;           // 0x0B08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B11[0x7];                                      // 0x0B11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0B18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0B31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B32[0x6];                                      // 0x0B32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetAngleBetweenTwoVectors_Angle;          // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0B41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_1;        // 0x0B42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B43[0x1];                                      // 0x0B43(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4C[0x4];                                      // 0x0B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Player_6;                       // 0x0B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SkipAnimation_4;                // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B59[0x7];                                      // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_7;                              // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExitVehicle_Success;                      // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B69[0x7];                                      // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_10;                            // 0x0B70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x0B7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_2;        // 0x0B7D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7E[0x2];                                      // 0x0B7E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_ReroutePlayerIndex_Surv;                  // 0x0B80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ReroutePlayerIndex_NewSitIndex;           // 0x0B88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReroutePlayerIndex_SkipAnim;              // 0x0B8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReroutePlayerIndex_Allow_;                // 0x0B8D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0B8E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0B8F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0B90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB;                       // 0x0BA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA9[0x7];                                      // 0x0BA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB_1;                     // 0x0BB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB9[0x7];                                      // 0x0BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2_1;         // 0x0BC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0BC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BCA[0x6];                                      // 0x0BCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x0BD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue_3;        // 0x0BD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BDA[0x6];                                      // 0x0BDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Player_5;                       // 0x0BE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SitIndex_8;                     // 0x0BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SkipAnimation_3;                // 0x0BEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BED[0x3];                                      // 0x0BED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface;        // 0x0BF0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C01[0x7];                                      // 0x0C01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_2;            // 0x0C08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0C11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C12[0x6];                                      // 0x0C12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_3;            // 0x0C18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C21[0x7];                                      // 0x0C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_4;            // 0x0C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C31[0x3];                                      // 0x0C31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_21;                              // 0x0C34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_22;                              // 0x0C38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_23;                              // 0x0C3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_24;                              // 0x0C40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C44[0x4];                                      // 0x0C44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0C48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0C60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_25;                              // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7C[0x4];                                      // 0x0C7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0C80(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0D69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6A[0x2];                                      // 0x0D6A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_26;                              // 0x0D6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_CarStealer;                     // 0x0D70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D79[0x7];                                      // 0x0D79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_5;            // 0x0D80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0D88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D89[0x3];                                      // 0x0D89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0D8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0D90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_27;                              // 0x0D94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_28;                              // 0x0D98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_29;                              // 0x0D9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0DA0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SitIndex_7;                     // 0x0DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Open;                           // 0x0DAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DAD[0x3];                                      // 0x0DAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_30;                              // 0x0DB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_31;                              // 0x0DBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_32;                              // 0x0DC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_5;        // 0x0DC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_33;                              // 0x0DC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DCC[0x4];                                      // 0x0DCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_34;                              // 0x0DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0DDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DDD[0x3];                                      // 0x0DDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player_4;                       // 0x0DE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SitIndex_6;                     // 0x0DE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SkipAnimation_2;                // 0x0DEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SkipExitOnLocation_1;           // 0x0DED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0DEE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_3;                   // 0x0DEF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_35;                              // 0x0DF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF4[0x4];                                      // 0x0DF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0DF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0E10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_36;                              // 0x0E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2C[0x4];                                      // 0x0E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x0E30(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x0F18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F19[0x3];                                      // 0x0F19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_37;                              // 0x0F1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0F20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F21[0x3];                                      // 0x0F21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_38;                              // 0x0F24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0F28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2C[0x4];                                      // 0x0F2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0F30(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0F40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0F50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_39;                              // 0x0F60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F64[0x4];                                      // 0x0F64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0F68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_40;                              // 0x0F78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_41;                              // 0x0F7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_42;                              // 0x0F80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F84[0x4];                                      // 0x0F84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0F88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0FA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA9[0x7];                                      // 0x0FA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0FB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Player_3;                       // 0x0FD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SitIndex_5;                     // 0x0FD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SkipAnimation_1;                // 0x0FDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FDD[0x3];                                      // 0x0FDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface_1;      // 0x0FE0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF1[0x7];                                      // 0x0FF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_6;            // 0x0FF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x1001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x1002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1003[0x5];                                     // 0x1003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_7;            // 0x1008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x1010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_4;                   // 0x1011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue_1;           // 0x1012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1013[0x1];                                     // 0x1013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x1014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x1018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x101C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_6;        // 0x102C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x1030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x1038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x1039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103A[0x6];                                     // 0x103A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x1040(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_7;        // 0x1048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x104C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104D[0x3];                                     // 0x104D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_43;                              // 0x1050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1054[0x4];                                     // 0x1054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player_2;                       // 0x1058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SitIndex_4;                     // 0x1060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SkipAnimation;                  // 0x1064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SkipExitOnLocation;             // 0x1065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x1066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_5;                   // 0x1067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_44;                              // 0x1068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_45;                              // 0x106C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_6;  // 0x1070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_6;           // 0x1078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_6;            // 0x1080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_6;       // 0x1088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_1;                // 0x108C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108D[0x3];                                     // 0x108D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_46;                              // 0x1090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_47;                              // 0x1094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_48;                              // 0x1098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_49;                              // 0x109C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x10A0(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_50;                              // 0x10B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_51;                              // 0x10BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_52;                              // 0x10C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C4[0x4];                                     // 0x10C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Surv_7;                         // 0x10C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SitIndex_3;                     // 0x10D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D4[0x4];                                     // 0x10D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Surv_6;                         // 0x10D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_53;                              // 0x10E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E4[0x4];                                     // 0x10E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x10E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x1100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x1108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x1110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x1118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x1120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x1128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x1130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_7;       // 0x1134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x1135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1136[0x2];                                     // 0x1136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x1138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_54;                              // 0x113C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_55;                              // 0x1140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x1144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_56;                              // 0x1148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_57;                              // 0x114C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Delay_3;                        // 0x1150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1154[0x4];                                     // 0x1154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Surv_5;                         // 0x1158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_58;                              // 0x1160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x1164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1168[0x8];                                     // 0x1168(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x1170(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x11D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D1[0xF];                                     // 0x11D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x11E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Delay_2;                        // 0x1240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             K2Node_CustomEvent_Channel;                        // 0x1248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            K2Node_CustomEvent_NewResponse;                    // 0x1249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChekIfStillUnderWater_StillUnderWater;    // 0x124A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124B[0x5];                                     // 0x124B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x1250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x1268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_6;                   // 0x126C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126D[0x3];                                     // 0x126D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x1270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_7;                   // 0x1274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1275[0x3];                                     // 0x1275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_DesireSitIndex;                 // 0x1278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_127C[0x4];                                     // 0x127C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Player_1;                       // 0x1280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_59;                              // 0x1288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x128C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Vehicle_C>          K2Node_DynamicCast_AsI_Vehicle;                    // 0x1290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x12A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A1[0x3];                                     // 0x12A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x12A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_SurvivalPlayer_2;               // 0x12A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_inCar_1;                        // 0x12B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_driver_1;                       // 0x12B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B2[0x2];                                     // 0x12B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_SitIndex_2;                     // 0x12B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SitIndex_1;                     // 0x12B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12BC[0x4];                                     // 0x12BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_SurvivalPlayer_1;               // 0x12C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Surv_4;                         // 0x12C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x12D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_2;    // 0x12D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x12F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_2; // 0x1308(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_2; // 0x13F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F1[0x3];                                     // 0x13F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_2;             // 0x13F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x13F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x1400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1401[0x3];                                     // 0x1401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_60;                              // 0x1404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Target_3;                       // 0x1408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewEnable_3;                    // 0x1410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1411[0x7];                                     // 0x1411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface_2;      // 0x1418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x1428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetEnableSmoothSync_Success;              // 0x1429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142A[0x2];                                     // 0x142A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_3;             // 0x142C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x1430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x1434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_8;       // 0x1435(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBlockInputs;                   // 0x1436(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SwitchCoolDown;                 // 0x1437(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration_1;                     // 0x1438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143C[0x4];                                     // 0x143C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x1440(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x1450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visibility_1;                   // 0x1454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visibility;                     // 0x1455(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x1456(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_8;                   // 0x1457(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x1458(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_Location;              // 0x1468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x1480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_8;        // 0x1484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_9;                   // 0x1488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1489[0x7];                                     // 0x1489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x1490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x14A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A9[0x7];                                     // 0x14A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x14B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue_2;        // 0x1510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x1518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x1528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x1538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1539[0x3];                                     // 0x1539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_9;        // 0x153C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_10;       // 0x1540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x1544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x1548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1549[0x7];                                     // 0x1549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x1550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x1558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x1560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_CustomEvent_Target_2;                       // 0x1568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsEnabled;                            // 0x1570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_10;                  // 0x1571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1572[0x6];                                     // 0x1572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_9;                              // 0x1578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x1580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB_2;                     // 0x1588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x1590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1591[0x7];                                     // 0x1591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB_3;                     // 0x1598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x15A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x15A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x15A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A3[0x5];                                     // 0x15A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_11;                             // 0x15A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe;                       // 0x15B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe_1;                     // 0x15B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe_2;                     // 0x15B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe_3;                     // 0x15B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15B4[0x4];                                     // 0x15B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_12;                             // 0x15B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x15C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x15C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x15C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x15CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x15CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x15CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x15CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x15CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x15CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x15D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x15E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x15E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x15E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x15E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E4[0x4];                                     // 0x15E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent; // 0x15E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_14;                             // 0x15F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x15F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_EngineStarted;                  // 0x15F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15FA[0x6];                                     // 0x15FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_15;                             // 0x1600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x1608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x1610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1611[0x7];                                     // 0x1611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x1618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD;                  // 0x1620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x1628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1629[0x3];                                     // 0x1629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_61;                              // 0x162C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x1630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1631[0x7];                                     // 0x1631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x1638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_11;                  // 0x1640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1641[0x3];                                     // 0x1641(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_11;       // 0x1644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Temp_object_Variable;                              // 0x1648(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x1650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_62;                              // 0x1654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x1658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1659[0x7];                                     // 0x1659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Teleporting_Logic_CarClass;               // 0x1660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1668[0x8];                                     // 0x1668(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Teleporting_Logic_CarTrans;               // 0x1670(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Player;                         // 0x16D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_5;  // 0x16D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_5;           // 0x16E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_5;            // 0x16E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_5;       // 0x16F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_4;           // 0x16F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16F5[0x3];                                     // 0x16F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_4;          // 0x16F8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_BaseProjectile_C*                   K2Node_DynamicCast_AsBP_Base_Projectile_1;         // 0x17E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x17E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E9[0x7];                                     // 0x17E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB_4;                     // 0x17F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x17F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17F9[0x7];                                     // 0x17F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x1800(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x1808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x1810(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x1818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_3;           // 0x181C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181D[0x3];                                     // 0x181D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_3;          // 0x1820(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_BaseProjectile_C*                   K2Node_DynamicCast_AsBP_Base_Projectile_2;         // 0x1908(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x1910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1911[0x7];                                     // 0x1911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x1918(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x1920(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x1928(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x1930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x1934(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1935[0x3];                                     // 0x1935(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x1938(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x1A20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x1A28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x1A30(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x1A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x1A3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3D[0x3];                                     // 0x1A3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x1A40(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_BaseProjectile_C*                   K2Node_DynamicCast_AsBP_Base_Projectile_3;         // 0x1B28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x1B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B31[0x7];                                     // 0x1B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseProjectile_C*                   K2Node_DynamicCast_AsBP_Base_Projectile_4;         // 0x1B38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x1B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B41[0x3];                                     // 0x1B41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x1B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_63;                              // 0x1B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4C[0x4];                                     // 0x1B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default_3;                           // 0x1B50(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x1B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x1B59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_2;                  // 0x1B5A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5B[0x5];                                     // 0x1B5B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x1B60(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x1B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x1B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x1B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x1B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Temp_object_Variable_1;                            // 0x1B80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x1B88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_64;                              // 0x1B8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPartyMember_ReturnValue;                // 0x1B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B91[0x7];                                     // 0x1B91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default_4;                           // 0x1B98(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_3;    // 0x1BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x1BB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x1BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD1[0x7];                                     // 0x1BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_3; // 0x1BD8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_3; // 0x1CC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC1[0x3];                                     // 0x1CC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x1CC4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x1CD4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x1CE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE5[0x3];                                     // 0x1CE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Damage_3;                       // 0x1CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x1CF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF4[0x4];                                     // 0x1CF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x1CF8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x1D00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x1D08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x1D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D11[0x7];                                     // 0x1D11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_9;                             // 0x1D18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x1D20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Replicate_1;                    // 0x1D24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Replicate;                      // 0x1D25(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D26[0x2];                                     // 0x1D26(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_8;                             // 0x1D28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x1D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x1D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x1D40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_6;                             // 0x1D48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WheelIndex_1;                   // 0x1D50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WheelIndex;                     // 0x1D54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalculateFlat_Wheel_Number_FlatWheelNumber; // 0x1D58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5C[0x4];                                     // 0x1D5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_5;                             // 0x1D60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x1D68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6C[0x4];                                     // 0x1D6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_16;                             // 0x1D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x1D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7C[0x4];                                     // 0x1D7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_4;                             // 0x1D80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x1D88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_2;                             // 0x1D90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Level_1;                              // 0x1D98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Player_1;                             // 0x1DA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Level;                                // 0x1DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Player;                               // 0x1DB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_17;                             // 0x1DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Surv_3;                         // 0x1DC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Surv_2;                         // 0x1DC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x1DD0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x1DE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x1DE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Delay_1;                        // 0x1DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewEnable_2;                    // 0x1DF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF1[0x3];                                     // 0x1DF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x1DF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_12;                  // 0x1DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF9[0x7];                                     // 0x1DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x1E00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x1E10(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BaseDamage;                     // 0x1E20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x1E24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x1E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2C[0x4];                                     // 0x1E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_CustomEvent_Surv_1;                         // 0x1E30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x1E38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe_4;                     // 0x1E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E41[0x3];                                     // 0x1E41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x1E44(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E54[0x4];                                     // 0x1E54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_18;                             // 0x1E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe_5;                     // 0x1E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E61[0x7];                                     // 0x1E61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x1E68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_19;                             // 0x1E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe_6;                     // 0x1E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E81[0x7];                                     // 0x1E81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x1E88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x1E98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x1EA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_31;                    // 0x1EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_13;                  // 0x1EA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAA[0x6];                                     // 0x1EAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_SurvivalPlayer;                 // 0x1EB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_14;                  // 0x1EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB9[0x3];                                     // 0x1EB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x1EBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x1EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_15;                  // 0x1EC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC5[0x3];                                     // 0x1EC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x1EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x1ECC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_20;                             // 0x1ED0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CallFunc_Array_Get_Item_4;                         // 0x1ED8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x1EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x1EE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EE2[0x6];                                     // 0x1EE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Surv;                           // 0x1EE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Damage_2;                       // 0x1EF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DontAnimate_2;                  // 0x1EF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_EffectDamage;                   // 0x1EF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_HungerDamage;                   // 0x1EFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x1EFB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x1EFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EFD[0x3];                                     // 0x1EFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Damage_1;                       // 0x1F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DDLocation_1;                   // 0x1F08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName_1;                     // 0x1F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation_1;                  // 0x1F28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DontAnimate_1;                  // 0x1F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F41[0x7];                                     // 0x1F41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Killer_1;                       // 0x1F48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsRadialDamage_1;               // 0x1F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsFireDamage_1;                 // 0x1F51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F52[0x6];                                     // 0x1F52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_DistanceToExplosion_1;          // 0x1F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser_1;                 // 0x1F60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_StaminaDecrease_1;              // 0x1F68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Zombie__1;                      // 0x1F69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                K2Node_CustomEvent_AmmoClass_1;                    // 0x1F6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectDamageType                    K2Node_CustomEvent_NegativeEffectDamageType_1;     // 0x1F6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F6C[0x4];                                     // 0x1F6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Damage;                         // 0x1F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DDLocation;                     // 0x1F78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x1F90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x1F98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DontAnimate;                    // 0x1FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB1[0x7];                                     // 0x1FB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Killer;                         // 0x1FB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsRadialDamage;                 // 0x1FC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsFireDamage;                   // 0x1FC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC2[0x6];                                     // 0x1FC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_DistanceToExplosion;            // 0x1FC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x1FD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_StaminaDecrease;                // 0x1FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Zombie_;                        // 0x1FD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                K2Node_CustomEvent_AmmoClass;                      // 0x1FDA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectDamageType                    K2Node_CustomEvent_NegativeEffectDamageType;       // 0x1FDB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x1FDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x1FE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FE4[0x4];                                     // 0x1FE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Target_1;                       // 0x1FE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_inCar;                          // 0x1FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_driver;                         // 0x1FF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      K2Node_CustomEvent_carTipe;                        // 0x1FF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FF3[0x1];                                     // 0x1FF3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_SitIndex;                       // 0x1FF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& SteamID, class ASurvivalPlayer_V2_C* SurvRef)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x1FF8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CallFunc_Array_Get_Item_5;                         // 0x2008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SteamId;                        // 0x2010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_CustomEvent_survRef;                        // 0x2020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x2028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x2029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202A[0x6];                                     // 0x202A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x2030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x2040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x2050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2051[0x7];                                     // 0x2051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x2058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_Select_Default_5;                           // 0x2068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttachedBullet_ReturnValue;  // 0x2070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_21;                             // 0x2078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x2080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2084[0x4];                                     // 0x2084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_NewParam;                       // 0x2088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_65;                              // 0x20A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_16;                  // 0x20A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A5[0x3];                                     // 0x20A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_6;                           // 0x20A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_7;                           // 0x20B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_17;                  // 0x20B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B9[0x7];                                     // 0x20B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x20C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x20C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C9[0x7];                                     // 0x20C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_22;                             // 0x20D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_66;                              // 0x20D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20DC[0x4];                                     // 0x20DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Delay;                          // 0x20E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewViewTarget;                  // 0x20E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Exit;                           // 0x20F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20F1[0x7];                                     // 0x20F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x20F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x2100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_32;                    // 0x2108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2109[0x7];                                     // 0x2109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2_2;         // 0x2110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_33;                    // 0x2118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x2119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211A[0x2];                                     // 0x211A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x211C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_18;                  // 0x2124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2125[0x3];                                     // 0x2125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x2128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x2140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x2148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x214C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x2154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_6;                         // 0x2158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x2160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_1;        // 0x2168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x2170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x2174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x2178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x217C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getIdleRpm_ReturnValue;                   // 0x218C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_1;          // 0x2190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_7;                         // 0x2198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x21A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x21A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x21A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_19;                  // 0x21A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x21A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_23;                             // 0x21A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x21B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getRpm_ReturnValue;                       // 0x21B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x21B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21B9[0x3];                                     // 0x21B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x21BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_24;                             // 0x21C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_3;                  // 0x21C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C9[0x3];                                     // 0x21C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x21CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_12;       // 0x21D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_4;                  // 0x21D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x21D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21DA[0x2];                                     // 0x21DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_13;       // 0x21DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x21E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue;                   // 0x21E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21E5[0x3];                                     // 0x21E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_14;       // 0x21E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21EC[0x4];                                     // 0x21EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_getRayHit_ReturnValue;                    // 0x21F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_9;       // 0x22D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x22D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x22DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22DB[0x5];                                     // 0x22DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x22E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_25;                             // 0x22E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_2;          // 0x22F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_3;          // 0x22F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_4;          // 0x2300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_5;          // 0x2308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_6;          // 0x2310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_20;                  // 0x2318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x2319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231A[0x2];                                     // 0x231A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_15;       // 0x231C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x2320(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x2330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2334[0x4];                                     // 0x2334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_26;                             // 0x2338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_27;                             // 0x2340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFGearWheel*                            CallFunc_Array_Get_Item_8;                         // 0x2348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x2350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_WheelLastTouchSurface_ReturnValue;        // 0x2354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2355[0x3];                                     // 0x2355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_GetTireVFX_NiagaraFX;                     // 0x2358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTireVFX_Succes;                        // 0x2360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2361[0x3];                                     // 0x2361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x2364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_hasContact_ReturnValue_1;                 // 0x2368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2369[0x3];                                     // 0x2369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x236C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x2374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2375[0x3];                                     // 0x2375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_28;                             // 0x2378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_29;                             // 0x2380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_9;                         // 0x2388(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x2390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2391[0x3];                                     // 0x2391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x2394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x2398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2399[0x3];                                     // 0x2399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x239C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x23AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_30;                             // 0x23B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x23B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23B9[0x7];                                     // 0x23B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_31;                             // 0x23C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_32;                             // 0x23C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x23D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_ChekIfStillOverlapWater_StillOverlap;     // 0x23E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E1[0x3];                                     // 0x23E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x23E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23EC[0x4];                                     // 0x23EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_33;                             // 0x23F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x23F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x2408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x2409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x240A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x240B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_240C[0x4];                                     // 0x240C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_8;                           // 0x2410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x2418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2419[0x3];                                     // 0x2419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x241C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x2424(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242C[0x4];                                     // 0x242C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_9;                           // 0x2430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x2438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x2440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_10;                          // 0x2448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x2450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x2458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x2460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x2464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2465[0x3];                                     // 0x2465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_12;                  // 0x2468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isHandbrakeOn_ReturnValue;                // 0x246C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246D[0x3];                                     // 0x246D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_11;                          // 0x2470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_12;                          // 0x2474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_13;                          // 0x2478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x247C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getThrottle_ReturnValue;                  // 0x2484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x2488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x2489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248A[0x2];                                     // 0x248A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_16;       // 0x248C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x2490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2491[0x3];                                     // 0x2491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_5;                              // 0x2494(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_14;                          // 0x249C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_17;       // 0x24A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_10;      // 0x24A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A5[0x3];                                     // 0x24A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_10;                        // 0x24A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x24B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x24C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C1[0x3];                                     // 0x24C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x24C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_18;       // 0x24C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x24CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_11;      // 0x24CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24CE[0x2];                                     // 0x24CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x24D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_getRayHit_ReturnValue_1;                  // 0x24D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_hasContact_ReturnValue_2;                 // 0x25C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue_1;             // 0x25C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x25C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x25C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x25C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C5[0x3];                                     // 0x25C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x25C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x25D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x25D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x25E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x25E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x25F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_WheelLastTouchSurface_ReturnValue_1;      // 0x25F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F2[0x2];                                     // 0x25F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_19;       // 0x25F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_12;      // 0x25F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F9[0x3];                                     // 0x25F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_7;                              // 0x25FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2604[0x4];                                     // 0x2604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDampingFromSurface_LinearDamping;      // 0x2608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_20;       // 0x2610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2614[0x4];                                     // 0x2614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LinearDampingFromFlatTires_OutputPin;     // 0x2618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_13;      // 0x2620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2621[0x3];                                     // 0x2621(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_13;                  // 0x2624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CallFunc_Array_Get_Item_11;                        // 0x2628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface_3;      // 0x2630(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_34;                    // 0x2640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2641[0x3];                                     // 0x2641(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_67;                              // 0x2644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_15;                          // 0x2648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x2650(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_12;                        // 0x2660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x2668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_266C[0x4];                                     // 0x266C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_8;            // 0x2670(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_35;                    // 0x2678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x2679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_267A[0x6];                                     // 0x267A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x2680(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x2690(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x26A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x26B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class ASurvivalPlayer_C*>              K2Node_CustomEvent_InputPin;                       // 0x26C0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x26D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CallFunc_Array_Get_Item_13;                        // 0x26E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x26E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x26F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x2708(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x2718(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x2728(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x2738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_273C[0x4];                                     // 0x273C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDropItemEntry>                 K2Node_MakeArray_Array;                            // 0x2740(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x2750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2751[0x7];                                     // 0x2751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target;                         // 0x2758(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInReplicateMovement;           // 0x2760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2761[0x3];                                     // 0x2761(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_12;                 // 0x2764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_21;                  // 0x2768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2769[0x3];                                     // 0x2769(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x276C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_PlayerToKill;                   // 0x2770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x2778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2779[0x7];                                     // 0x2779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x2780(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x27E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x27F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x2810(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x2828(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x2830(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x2848(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x2930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2931[0x7];                                     // 0x2931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_Array_Get_Item_14;                        // 0x2938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x2940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x2944(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x2945(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2946[0x2];                                     // 0x2946(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_13;                 // 0x2948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294C[0x4];                                     // 0x294C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                K2Node_MakeArray_Array_1;                          // 0x2950(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x2960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2961[0x3];                                     // 0x2961(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x2964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x2968(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x2980(0x0018)(HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x2998(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_21;       // 0x29A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_14;      // 0x29AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29AD[0x3];                                     // 0x29AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item_15;                        // 0x29B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_16;                        // 0x29B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component_1;      // 0x29C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_36;                    // 0x29C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C9[0x7];                                     // 0x29C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component_2;      // 0x29D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_37;                    // 0x29D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D9[0x3];                                     // 0x29D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x29DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x29E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x29E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x29E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewEnable_1;                    // 0x29E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewEnable;                      // 0x29E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x29E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_68;                              // 0x2A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A04[0x4];                                     // 0x2A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x2A08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x2A20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x2A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A39[0x7];                                     // 0x2A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x2A40(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x2A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x2A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x2A4D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x2A4E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x2A4F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x2A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x2A51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x2A52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x2A53(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A54[0x4];                                     // 0x2A54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_2;                            // 0x2A58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_14;                  // 0x2A60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x2A64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A65[0x3];                                     // 0x2A65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_14;                 // 0x2A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x2A6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A6D[0x3];                                     // 0x2A6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x2A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A74[0x4];                                     // 0x2A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_3;                            // 0x2A78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_4;                            // 0x2A80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x2A88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_Location;                       // 0x2AA0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_5;                            // 0x2B00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_34;                             // 0x2B08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_15;                  // 0x2B0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x2B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x2B11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B12[0x6];                                     // 0x2B12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_6;                            // 0x2B18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_7;                            // 0x2B20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_15;                 // 0x2B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2C[0x4];                                     // 0x2B2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_8;                            // 0x2B30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x2B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B3C[0x4];                                     // 0x2B3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_9;                            // 0x2B40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x2B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x2B49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4A[0x6];                                     // 0x2B4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_10;                           // 0x2B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_11;                           // 0x2B58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_12;                           // 0x2B60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_2;          // 0x2B68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_getRayHit_ReturnValue_2;                  // 0x2B70(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UFMODEvent*                             Temp_object_Variable_13;                           // 0x2C58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue_2;             // 0x2C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C61[0x3];                                     // 0x2C61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSurfaceDelayMultiplier_PhysMatMultiplier; // 0x2C64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFGearWheel*                            CallFunc_Array_Get_Item_17;                        // 0x2C68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_14;                           // 0x2C70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x2C78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_3;          // 0x2C90(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_15;                           // 0x2C98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x2CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA1[0x3];                                     // 0x2CA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_16;                  // 0x2CA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_16;                          // 0x2CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CAC[0x4];                                     // 0x2CAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x2CB0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_16;                           // 0x2CB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_22;       // 0x2CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_15;      // 0x2CC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC5[0x3];                                     // 0x2CC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_7;          // 0x2CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x2CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_8;          // 0x2CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x2CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x2CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_17;                           // 0x2CF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x2CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x2D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_18;                           // 0x2D08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x2D10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_69;                              // 0x2D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_17;                          // 0x2D1C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D24[0x4];                                     // 0x2D24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x2D28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x2D40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D44[0x4];                                     // 0x2D44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x2D48(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_16;                 // 0x2E30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x2E34(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x2E44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_19;                           // 0x2E48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASurvivalPlayer_C* SurvivalPlayer)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x2E50(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x2E60(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UFMODEvent*                             Temp_object_Variable_20;                           // 0x2F48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_23;       // 0x2F50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F54[0x4];                                     // 0x2F54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x2F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_24;       // 0x2F60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F64[0x4];                                     // 0x2F64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x2F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x2F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x2F78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x2F80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x2F88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x2F90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x2F98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x2FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB1[0x7];                                     // 0x2FB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_21;                           // 0x2FB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_25;       // 0x2FC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_26;       // 0x2FC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x2FC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x2FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x2FD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x2FE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x2FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x2FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_1;      // 0x2FF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_2;      // 0x3010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFMODEvent*                             Temp_object_Variable_22;                           // 0x3028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x3030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x3040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x3044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x3048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3049[0x7];                                     // 0x3049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children_1;         // 0x3050(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsServer_ReturnValue_22;                  // 0x3060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_22;               // 0x3061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3062[0x6];                                     // 0x3062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x3068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAVS_Anim_BPI_C>       K2Node_DynamicCast_AsAVS_Anim_BPI;                 // 0x3070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_38;                    // 0x3080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3081[0x3];                                     // 0x3081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_getNormalizedSteering_ReturnValue;        // 0x3084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getNormalizedSteering_ReturnValue_1;      // 0x3088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_308C[0x4];                                     // 0x308C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x3090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x3098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetSteering_NewParam;                     // 0x30A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_getRayHit_ReturnValue_3;                  // 0x30A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UFMODEvent*                             Temp_object_Variable_23;                           // 0x3190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue_3;             // 0x3198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3199[0x3];                                     // 0x3199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSurfaceAmplitudeMultiplier_PhysMatMultiplier; // 0x319C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_24;                           // 0x31A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_3;      // 0x31A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_4;      // 0x31C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_5;      // 0x31D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFMODEvent*                             Temp_object_Variable_25;                           // 0x31F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select_Default_18;                          // 0x31F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFMODEvent*                             Temp_object_Variable_26;                           // 0x3210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x3218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x3230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x3248(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x3258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x3260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_4;        // 0x3268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x3280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x3298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x32A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x32A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_2;                // 0x32B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x32C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X_4;                          // 0x32E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x32E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x32F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult;       // 0x32F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x33E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AllowStabilizeVehicle_Allow;              // 0x33E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E2[0x6];                                     // 0x33E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_27;                           // 0x33E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x33F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F4[0x4];                                     // 0x33F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_28;                           // 0x33F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x3400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3404[0x4];                                     // 0x3404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_29;                           // 0x3408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x3410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3414[0x4];                                     // 0x3414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_30;                           // 0x3418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_17;                  // 0x3420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3424[0x4];                                     // 0x3424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_31;                           // 0x3428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe_7;                     // 0x3430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe_8;                     // 0x3431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_6;               // 0x3432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3433[0x1];                                     // 0x3433(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x3434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_32;                           // 0x3438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_17;                 // 0x3440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x3444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_33;                           // 0x3448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_19;                          // 0x3450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3454[0x4];                                     // 0x3454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x3458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_20;                          // 0x3460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_6;                     // 0x3464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3465[0x3];                                     // 0x3465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x3468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_34;                           // 0x3470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_18;                 // 0x3478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x347C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_347D[0x3];                                     // 0x347D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x3480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_1;                              // 0x3484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3485[0x3];                                     // 0x3485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_7;    // 0x3488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x34A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_18;                  // 0x34B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B4[0x4];                                     // 0x34B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_Array_Get_Item_18;                        // 0x34B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x34C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x34C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C2[0x6];                                     // 0x34C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALandscapeProxy*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x34C8(0x0010)(ReferenceParm)
	class ALandscapeProxy*                        CallFunc_Array_Get_Item_19;                        // 0x34D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x34E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x34E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x34E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_7;               // 0x34E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E7[0x1];                                     // 0x34E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscapeProxy*                        CallFunc_Array_Get_Item_20;                        // 0x34E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x34F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x34F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x34F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_7;                     // 0x34F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F7[0x1];                                     // 0x34F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_35;                           // 0x34F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_23;                  // 0x3500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_24;                  // 0x3501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_25;                  // 0x3502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3503[0x1];                                     // 0x3503(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_19;                 // 0x3504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_4;          // 0x3508(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x3510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3511[0x3];                                     // 0x3511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x3514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x3518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2_3;         // 0x3520(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_39;                    // 0x3528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3529[0x7];                                     // 0x3529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors_1;            // 0x3530(0x0010)(ReferenceParm)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_21;                        // 0x3540(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_22;                        // 0x3548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x3550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3554[0x4];                                     // 0x3554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RT_Manager_SceneCapture_C*          K2Node_DynamicCast_AsBP_RT_Manager_Scene_Capture;  // 0x3558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_40;                    // 0x3560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x3561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3562[0x2];                                     // 0x3562(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x3564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_36;                           // 0x3568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x3570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3571[0x7];                                     // 0x3571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_37;                           // 0x3578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x3580(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x3588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x3590(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x3598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359C[0x4];                                     // 0x359C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_9;            // 0x35A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_41;                    // 0x35A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A9[0x7];                                     // 0x35A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_New_NV_Water_C*                     K2Node_DynamicCast_AsBP_New_NV_Water;              // 0x35B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_42;                    // 0x35B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B9[0x7];                                     // 0x35B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x35C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x35C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x35D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x35D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x35DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35DD[0x3];                                     // 0x35DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x35E0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        Temp_real_Variable_35;                             // 0x36C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_New_NV_Water_C*                     K2Node_DynamicCast_AsBP_New_NV_Water_1;            // 0x36D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_43;                    // 0x36D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D9[0x7];                                     // 0x36D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_38;                           // 0x36E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_70;                              // 0x36E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x36EC(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36ED[0x3];                                     // 0x36ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_5;                          // 0x36F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x36F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x3700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x3708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x3710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x3718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_8;        // 0x3720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x3728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x3730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x3738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_3;                // 0x3750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x3768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x3780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x3798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x37A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x37A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x37B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x37C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x37D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x37D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x37E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x37E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue_1;   // 0x3800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x3818(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_39;                           // 0x3830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_36;                             // 0x3838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x3840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x3848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x384C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384D[0x3];                                     // 0x384D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x3850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_21;                          // 0x3854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_22;                          // 0x3858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385C[0x4];                                     // 0x385C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x3860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x3868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386C[0x4];                                     // 0x386C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_23;                        // 0x3870(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x3878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x387C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_387D[0x3];                                     // 0x387D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_23;                          // 0x3880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3884[0x4];                                     // 0x3884(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_40;                           // 0x3888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x3890(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_8;               // 0x3898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3899[0x3];                                     // 0x3899(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_19;                  // 0x389C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_41;                           // 0x38A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_24;                        // 0x38A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component_3;      // 0x38B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_44;                    // 0x38B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B9[0x3];                                     // 0x38B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_20;                  // 0x38BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_25;                        // 0x38C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x38C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable_8;                     // 0x39B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B1[0x7];                                     // 0x39B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_42;                           // 0x39B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_9;               // 0x39C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_9;                     // 0x39C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C2[0x2];                                     // 0x39C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_20;                 // 0x39C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x39C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C9[0x3];                                     // 0x39C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x39CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_37;                             // 0x39D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_43;                           // 0x39D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_21;                  // 0x39E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E4[0x4];                                     // 0x39E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleSit                          CallFunc_Array_Get_Item_26;                        // 0x39E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_10;              // 0x39F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x39F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FA[0x6];                                     // 0x39FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x3A00(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UFMODEvent*                             Temp_object_Variable_44;                           // 0x3AE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_21;                 // 0x3AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF4[0x4];                                     // 0x3AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_45;                           // 0x3AF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x3B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B01[0x3];                                     // 0x3B01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x3B04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_38;                             // 0x3B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_22;                  // 0x3B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B14[0x4];                                     // 0x3B14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFGearWheel*                            CallFunc_Array_Get_Item_27;                        // 0x3B18(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getRadius_ReturnValue;                    // 0x3B20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B24[0x4];                                     // 0x3B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_46;                           // 0x3B28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x3B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B34[0x4];                                     // 0x3B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_Array_Get_Item_28;                        // 0x3B38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x3B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B41[0x3];                                     // 0x3B41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x3B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x3B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_26;                  // 0x3B49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_2;                              // 0x3B4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4B[0x5];                                     // 0x3B4B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_Select_Default_24;                          // 0x3B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getLateralScale_ReturnValue;              // 0x3B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5C[0x4];                                     // 0x3B5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue_3;        // 0x3B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_getLateralFriction_ReturnValue;           // 0x3B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getLongitudinalScale_ReturnValue;         // 0x3B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getLongitudinalFriction_ReturnValue;      // 0x3B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getLongitudinalScale_ReturnValue_1;       // 0x3B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getLateralScale_ReturnValue_1;            // 0x3B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getLateralFriction_ReturnValue_1;         // 0x3B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getLongitudinalFriction_ReturnValue_1;    // 0x3B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_10;                    // 0x3B84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B85[0x3];                                     // 0x3B85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_22;                 // 0x3B88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_20;               // 0x3B8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B8D[0x3];                                     // 0x3B8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_23;                // 0x3B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_25;                          // 0x3B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x3B98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_10;           // 0x3BA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_45;                    // 0x3BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA9[0x3];                                     // 0x3BA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_27;       // 0x3BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x3BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB1[0x7];                                     // 0x3BB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x3BB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_28;       // 0x3BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC4[0x4];                                     // 0x3BC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISurvAnimInterface_C>  K2Node_DynamicCast_AsSurv_Anim_Interface;          // 0x3BC8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_46;                    // 0x3BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRubberDirection_Nothing;               // 0x3BD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDA[0x6];                                     // 0x3BDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x3BE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getThrottle_ReturnValue_1;                // 0x3BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x3BEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BED[0x3];                                     // 0x3BED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_4;              // 0x3BF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_2; // 0x3BF8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_29;                        // 0x3C08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_22;              // 0x3C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C14[0x4];                                     // 0x3C14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              K2Node_DynamicCast_AsZombie_1;                     // 0x3C18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_47;                    // 0x3C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_21;               // 0x3C21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C22[0x6];                                     // 0x3C22(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x3C28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x3C40(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue_4;        // 0x3CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_3; // 0x3CA8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_30;                        // 0x3CB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_23;              // 0x3CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC4[0x4];                                     // 0x3CC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              K2Node_DynamicCast_AsZombie_2;                     // 0x3CC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_48;                    // 0x3CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_22;               // 0x3CD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD2[0x6];                                     // 0x3CD2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x3CD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x3CF0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue_5;        // 0x3D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_29;       // 0x3D58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x3D5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D5D[0x3];                                     // 0x3D5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_39;                             // 0x3D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x3D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D69[0x7];                                     // 0x3D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_26;                          // 0x3D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x3D78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x3D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_5;          // 0x3D88(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_23;               // 0x3D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D91[0x7];                                     // 0x3D91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_6;          // 0x3D98(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x3DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x3DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x3DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x3DB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBC[0x4];                                     // 0x3DBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x3DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x3DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x3DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x3DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x3DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_4;    // 0x3DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_5;    // 0x3DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x3DF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DFC[0x4];                                     // 0x3DFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x3E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x3E08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E0C[0x4];                                     // 0x3E0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_6;    // 0x3E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x3E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x3E20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x3E24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_2;            // 0x3E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E2C[0x4];                                     // 0x3E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiCallDecreaseDurability_Damage_ImplicitCast; // 0x3E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_3;            // 0x3E38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E3C[0x4];                                     // 0x3E3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_7;    // 0x3E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast;          // 0x3E48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_0_ImplicitCast;               // 0x3E4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_1_ImplicitCast;               // 0x3E50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E54[0x4];                                     // 0x3E54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x3E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x3E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x3E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_8;    // 0x3E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_9;    // 0x3E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x3E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_DirtOpacity_DMI_ImplicitCast;   // 0x3E88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E8C[0x4];                                     // 0x3E8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_10;   // 0x3E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_11;   // 0x3E98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLinearDamping_InDamping_ImplicitCast;  // 0x3EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA4[0x4];                                     // 0x3EA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_12;   // 0x3EA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x3EB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_13;   // 0x3EB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_4;            // 0x3EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC4[0x4];                                     // 0x3EC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x3EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x3ED0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x3ED8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_RotatorFloat_B_ImplicitCast;     // 0x3EDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_2;     // 0x3EE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_3;     // 0x3EE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_RotatorFloat_B_ImplicitCast_1;   // 0x3EF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_RotatorFloat_B_ImplicitCast_2;   // 0x3EF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x3EF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_2;     // 0x3F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x3F08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x3F0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Add_NewItem_ImplicitCast;           // 0x3F10(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Rear_DefLongitudinalFriction_ImplicitCast; // 0x3F18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Front_DefLongitudinalFriction_ImplicitCast; // 0x3F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x3F28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x3F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x3F38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster) == 0x000010, "Wrong alignment on AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster");
static_assert(sizeof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster) == 0x003F40, "Wrong size on AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, EntryPoint) == 0x000000, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable) == 0x000004, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_1) == 0x000008, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_2) == 0x00000C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_3) == 0x000010, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_4) == 0x000014, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_5) == 0x000018, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_6) == 0x00001C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_7) == 0x000020, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_8) == 0x000024, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_9) == 0x000028, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH) == 0x00003C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_1) == 0x000048, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_10) == 0x00004C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_11) == 0x000058, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_12) == 0x000060, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_12) == 0x000068, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_11) == 0x000070, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_9) == 0x000074, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_9) == 0x000078, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_11) == 0x000160, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_Road_Trap) == 0x000168, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_Road_Trap' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_12) == 0x000174, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable) == 0x000178, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_1) == 0x000180, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_13) == 0x000188, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_10) == 0x000190, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_11) == 0x000198, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_11) == 0x0001A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_10) == 0x0001A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_8) == 0x0001AC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_8) == 0x0001B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_Road_Trap_1) == 0x000298, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_Road_Trap_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_1) == 0x0002A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsPlaying_ReturnValue) == 0x0002A1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsPlaying_ReturnValue_1) == 0x0002A2, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_BoolToString_ReturnValue) == 0x0002A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x0002B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue) == 0x0002C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0002D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable) == 0x0002E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_2) == 0x0002F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue) == 0x0002F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetUpVector_ReturnValue) == 0x000300, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_14) == 0x000318, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Dot_VectorVector_ReturnValue) == 0x000320, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000328, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_9) == 0x000330, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_10) == 0x000338, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_10) == 0x000340, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_9) == 0x000348, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_7) == 0x00034C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_7) == 0x000350, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_Road_Trap_2) == 0x000438, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_Road_Trap_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_2) == 0x000440, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetForwardVector_ReturnValue) == 0x000448, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000460, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_15) == 0x000478, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeTransform_ReturnValue) == 0x000480, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_2) == 0x0004E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAtLocation_ReturnValue) == 0x0004E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0004F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_1) == 0x0004F1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_3) == 0x0004F4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_16) == 0x0004F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0004FC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_X) == 0x000500, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Y) == 0x000508, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Z) == 0x000510, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsUnderWater_ReturnValue) == 0x000518, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsUnderWater_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanAND_ReturnValue) == 0x000519, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x00051A, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetTimer_ReturnValue) == 0x000520, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000528, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_3) == 0x000530, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_17) == 0x000538, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_4) == 0x00053C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_4) == 0x000540, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000548, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_18) == 0x00054C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_19) == 0x000550, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_20) == 0x000554, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000558, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_5) == 0x000570, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_InputAxisEvent_AxisValue_4) == 0x000578, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_InputAxisEvent_AxisValue_3) == 0x00057C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_8) == 0x000580, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_9) == 0x000588, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_9) == 0x000590, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_8) == 0x000598, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_6) == 0x00059C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_6) == 0x0005A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_Road_Trap_3) == 0x000688, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_Road_Trap_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_3) == 0x000690, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player_10) == 0x000698, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_FromRancho) == 0x0006A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_FromRancho' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player_9) == 0x0006A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SitIndex_9) == 0x0006B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SitIndex_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player_8) == 0x0006B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SkipExitOnLocation_3) == 0x0006C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SkipExitOnLocation_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player_7) == 0x0006C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SkipExitOnLocation_2) == 0x0006D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SkipExitOnLocation_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_6) == 0x0006D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_7) == 0x0006E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_8) == 0x0006E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_8) == 0x0006F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_7) == 0x0006F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_5) == 0x0006FC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_5) == 0x000700, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player) == 0x0007E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_4) == 0x0007F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0007F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetAllItemsToDrop_Result) == 0x000810, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetAllItemsToDrop_Result' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_ActorHasTag_ReturnValue) == 0x000820, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_HitComponent) == 0x000828, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_7) == 0x000830, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_7) == 0x000838, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000840, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_Hit) == 0x000858, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_bBlockingHit) == 0x000940, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_bInitialOverlap) == 0x000941, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_Time) == 0x000944, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_Distance) == 0x000948, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_Location) == 0x000950, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_ImpactPoint) == 0x000968, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_Normal) == 0x000980, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_ImpactNormal) == 0x000998, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_PhysMat) == 0x0009B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_HitActor) == 0x0009B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_HitComponent) == 0x0009C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_HitBoneName) == 0x0009C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_BoneName) == 0x0009D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_HitItem) == 0x0009D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_ElementIndex) == 0x0009DC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_FaceIndex) == 0x0009E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_TraceStart) == 0x0009E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakHitResult_TraceEnd) == 0x000A00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000A18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_5) == 0x000A20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeTransform_ReturnValue_1) == 0x000A30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeTransform_ReturnValue_2) == 0x000A90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsZombie) == 0x000AF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsZombie' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_6) == 0x000AF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAtLocation_ReturnValue_1) == 0x000B00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_Base_Projectile) == 0x000B08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_Base_Projectile' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_7) == 0x000B10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetVelocity_ReturnValue) == 0x000B18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000B30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000B31, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetAngleBetweenTwoVectors_Angle) == 0x000B38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetAngleBetweenTwoVectors_Angle' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000B40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanOR_ReturnValue) == 0x000B41, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsSimulatingPhysics_ReturnValue_1) == 0x000B42, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsSimulatingPhysics_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_InputAxisEvent_AxisValue_2) == 0x000B44, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_InputAxisEvent_AxisValue_1) == 0x000B48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player_6) == 0x000B50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SkipAnimation_4) == 0x000B58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SkipAnimation_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_7) == 0x000B60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_ExitVehicle_Success) == 0x000B68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_ExitVehicle_Success' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player_10) == 0x000B70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_SitIndex) == 0x000B78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_SkipAnimation) == 0x000B7C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsSimulatingPhysics_ReturnValue_2) == 0x000B7D, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsSimulatingPhysics_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_ReroutePlayerIndex_Surv) == 0x000B80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_ReroutePlayerIndex_Surv' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_ReroutePlayerIndex_NewSitIndex) == 0x000B88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_ReroutePlayerIndex_NewSitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_ReroutePlayerIndex_SkipAnim) == 0x000B8C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_ReroutePlayerIndex_SkipAnim' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_ReroutePlayerIndex_Allow_) == 0x000B8D, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_ReroutePlayerIndex_Allow_' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000B8E, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_SwitchInteger_CmpSuccess) == 0x000B8F, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000B90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_8) == 0x000B98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsPS_TDB) == 0x000BA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsPS_TDB' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_9) == 0x000BA8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsPS_TDB_1) == 0x000BB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsPS_TDB_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_10) == 0x000BB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_V2_1) == 0x000BC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_V2_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_11) == 0x000BC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000BC9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_1) == 0x000BD0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_12) == 0x000BD8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsSimulatingPhysics_ReturnValue_3) == 0x000BD9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsSimulatingPhysics_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player_5) == 0x000BE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SitIndex_8) == 0x000BE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SitIndex_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SkipAnimation_3) == 0x000BEC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SkipAnimation_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBPI_General_Interface) == 0x000BF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBPI_General_Interface' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_13) == 0x000C00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_2) == 0x000C08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_14) == 0x000C10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue) == 0x000C11, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_3) == 0x000C18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_15) == 0x000C20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_4) == 0x000C28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_16) == 0x000C30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_21) == 0x000C34, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_22) == 0x000C38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_23) == 0x000C3C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_24) == 0x000C40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000C48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000C60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_25) == 0x000C78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000C80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000D68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_2) == 0x000D69, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_26) == 0x000D6C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_CarStealer) == 0x000D70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_CarStealer' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsLocallyControlled_ReturnValue) == 0x000D78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_5) == 0x000D80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_17) == 0x000D88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable) == 0x000D8C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue) == 0x000D90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_27) == 0x000D94, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_27' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_28) == 0x000D98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_28' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_29) == 0x000D9C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_29' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000DA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SitIndex_7) == 0x000DA8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SitIndex_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Open) == 0x000DAC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Open' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_8) == 0x000DB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_30) == 0x000DB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_30' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_31) == 0x000DBC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_31' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_32) == 0x000DC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_32' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_5) == 0x000DC4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_33) == 0x000DC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_33' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000DD0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_34) == 0x000DD8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_34' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue) == 0x000DDC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player_4) == 0x000DE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SitIndex_6) == 0x000DE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SitIndex_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SkipAnimation_2) == 0x000DEC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SkipAnimation_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SkipExitOnLocation_1) == 0x000DED, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SkipExitOnLocation_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_1) == 0x000DEE, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_3) == 0x000DEF, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_35) == 0x000DF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_35' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000DF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000E10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_36) == 0x000E28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_36' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x000E30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x000F18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_37) == 0x000F1C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_37' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_2) == 0x000F20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_38) == 0x000F24, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_38' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_1) == 0x000F28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_IntToString_ReturnValue) == 0x000F30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000F40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000F50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_39) == 0x000F60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_39' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000F68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_40) == 0x000F78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_40' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_41) == 0x000F7C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_41' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_42) == 0x000F80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_42' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000F88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetController_ReturnValue) == 0x000FA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_AttachToActor_ReturnValue) == 0x000FA8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000FB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000FB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player_3) == 0x000FD0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SitIndex_5) == 0x000FD8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SitIndex_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SkipAnimation_1) == 0x000FDC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SkipAnimation_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBPI_General_Interface_1) == 0x000FE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBPI_General_Interface_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_18) == 0x000FF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_6) == 0x000FF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_19) == 0x001000, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_3) == 0x001001, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x001002, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_7) == 0x001008, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_20) == 0x001010, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_4) == 0x001011, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_AttachToActor_ReturnValue_1) == 0x001012, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_AttachToActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_1) == 0x001014, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_1) == 0x001018, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_1) == 0x00101C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_6) == 0x00102C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x001030, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x001038, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x001039, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x001040, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_7) == 0x001048, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x00104C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_43) == 0x001050, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_43' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player_2) == 0x001058, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SitIndex_4) == 0x001060, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SitIndex_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SkipAnimation) == 0x001064, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SkipAnimation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SkipExitOnLocation) == 0x001065, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SkipExitOnLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_4) == 0x001066, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_5) == 0x001067, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_44) == 0x001068, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_44' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_45) == 0x00106C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_45' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_6) == 0x001070, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_6) == 0x001078, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_6) == 0x001080, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_6) == 0x001088, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_ActorHasTag_ReturnValue_1) == 0x00108C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_ActorHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_46) == 0x001090, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_46' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_47) == 0x001094, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_47' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_48) == 0x001098, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_48' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_49) == 0x00109C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_49' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_InputActionEvent_Key) == 0x0010A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_50) == 0x0010B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_50' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_51) == 0x0010BC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_51' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_52) == 0x0010C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_52' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Surv_7) == 0x0010C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Surv_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SitIndex_3) == 0x0010D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SitIndex_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Surv_6) == 0x0010D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Surv_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_53) == 0x0010E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_53' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCenterOfMass_ReturnValue) == 0x0010E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_X_1) == 0x001100, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Y_1) == 0x001108, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Z_1) == 0x001110, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_X_2) == 0x001118, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Y_2) == 0x001120, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Z_2) == 0x001128, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralInt_ReturnValue) == 0x001130, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_7) == 0x001134, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item) == 0x001135, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_2) == 0x001138, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_54) == 0x00113C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_54' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_55) == 0x001140, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_55' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_3) == 0x001144, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_56) == 0x001148, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_56' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_57) == 0x00114C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_57' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Delay_3) == 0x001150, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Delay_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Surv_5) == 0x001158, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Surv_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_58) == 0x001160, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_58' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x001164, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeTransform_ReturnValue_3) == 0x001170, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_1) == 0x0011D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeTransform_ReturnValue_4) == 0x0011E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Delay_2) == 0x001240, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Delay_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Channel) == 0x001248, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Channel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NewResponse) == 0x001249, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NewResponse' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_ChekIfStillUnderWater_StillUnderWater) == 0x00124A, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_ChekIfStillUnderWater_StillUnderWater' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x001250, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_2) == 0x001268, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_6) == 0x00126C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_2) == 0x001270, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_7) == 0x001274, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DesireSitIndex) == 0x001278, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DesireSitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player_1) == 0x001280, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_59) == 0x001288, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_59' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_3) == 0x00128C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsI_Vehicle) == 0x001290, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsI_Vehicle' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_21) == 0x0012A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_3) == 0x0012A4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SurvivalPlayer_2) == 0x0012A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SurvivalPlayer_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_inCar_1) == 0x0012B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_inCar_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_driver_1) == 0x0012B1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_driver_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SitIndex_2) == 0x0012B4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SitIndex_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SitIndex_1) == 0x0012B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SitIndex_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SurvivalPlayer_1) == 0x0012C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SurvivalPlayer_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Surv_4) == 0x0012C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Surv_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default) == 0x0012D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentRotation_ReturnValue_2) == 0x0012D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x0012F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_2) == 0x001308, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_2) == 0x0013F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralInt_ReturnValue_2) == 0x0013F4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0013F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_2) == 0x001400, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_60) == 0x001404, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_60' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Target_3) == 0x001408, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Target_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NewEnable_3) == 0x001410, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NewEnable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBPI_General_Interface_2) == 0x001418, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBPI_General_Interface_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_22) == 0x001428, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SetEnableSmoothSync_Success) == 0x001429, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SetEnableSmoothSync_Success' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralInt_ReturnValue_3) == 0x00142C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_InputAxisEvent_AxisValue) == 0x001430, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_3) == 0x001434, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_8) == 0x001435, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_bBlockInputs) == 0x001436, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_bBlockInputs' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SwitchCoolDown) == 0x001437, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SwitchCoolDown' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Duration_1) == 0x001438, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Duration_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_string_Variable) == 0x001440, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue) == 0x001450, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Visibility_1) == 0x001454, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Visibility_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Visibility) == 0x001455, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Visibility' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_5) == 0x001456, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_8) == 0x001457, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_string_Variable_1) == 0x001458, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Location_Location) == 0x001468, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Location_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue_1) == 0x001480, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_8) == 0x001484, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_9) == 0x001488, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x001490, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_6) == 0x0014A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeTransform_ReturnValue_5) == 0x0014B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAtLocation_ReturnValue_2) == 0x001510, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetDisplayName_ReturnValue) == 0x001518, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_5) == 0x001528, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable) == 0x001538, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_9) == 0x00153C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_10) == 0x001540, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Duration) == 0x001544, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x001548, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_1) == 0x001550, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SelectFloat_ReturnValue) == 0x001558, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralDouble_ReturnValue) == 0x001560, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Target_2) == 0x001568, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Target_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_IsEnabled) == 0x001570, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_IsEnabled' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_10) == 0x001571, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_9) == 0x001578, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_10) == 0x001580, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsPS_TDB_2) == 0x001588, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsPS_TDB_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_23) == 0x001590, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsPS_TDB_3) == 0x001598, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsPS_TDB_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_24) == 0x0015A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0015A1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0015A2, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_11) == 0x0015A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCarTipe_CarTipe) == 0x0015B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCarTipe_CarTipe' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCarTipe_CarTipe_1) == 0x0015B1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCarTipe_CarTipe_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCarTipe_CarTipe_2) == 0x0015B2, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCarTipe_CarTipe_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCarTipe_CarTipe_3) == 0x0015B3, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCarTipe_CarTipe_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_12) == 0x0015B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_13) == 0x0015C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_7) == 0x0015C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_8) == 0x0015C9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_9) == 0x0015CA, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanAND_ReturnValue_1) == 0x0015CB, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_10) == 0x0015CC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_11) == 0x0015CD, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable) == 0x0015CE, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanAND_ReturnValue_2) == 0x0015CF, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0015D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Contains_ReturnValue) == 0x0015E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_12) == 0x0015E1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanAND_ReturnValue_3) == 0x0015E2, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanOR_ReturnValue_1) == 0x0015E3, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventWithOcclusion_FMODAudioComponent) == 0x0015E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventWithOcclusion_FMODAudioComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_14) == 0x0015F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_13) == 0x0015F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_EngineStarted) == 0x0015F9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_EngineStarted' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_15) == 0x001600, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetPlayerController_ReturnValue) == 0x001608, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable) == 0x001610, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetHUD_ReturnValue) == 0x001618, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_Game_HUD) == 0x001620, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_Game_HUD' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_25) == 0x001628, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_61) == 0x00162C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_61' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_1) == 0x001630, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_2) == 0x001638, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_11) == 0x001640, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_11) == 0x001644, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable) == 0x001648, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue) == 0x001650, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_62) == 0x001654, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_62' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_NotEqual_IntInt_ReturnValue) == 0x001658, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Teleporting_Logic_CarClass) == 0x001660, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Teleporting_Logic_CarClass' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Teleporting_Logic_CarTrans) == 0x001670, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Teleporting_Logic_CarTrans' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Player) == 0x0016D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_5) == 0x0016D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_5) == 0x0016E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_5) == 0x0016E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_5) == 0x0016F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_4) == 0x0016F4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_4) == 0x0016F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_Base_Projectile_1) == 0x0017E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_Base_Projectile_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_26) == 0x0017E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsPS_TDB_4) == 0x0017F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsPS_TDB_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_27) == 0x0017F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x001800, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_4) == 0x001808, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_4) == 0x001810, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x001818, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_3) == 0x00181C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_3) == 0x001820, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_Base_Projectile_2) == 0x001908, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_Base_Projectile_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_28) == 0x001910, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x001918, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_3) == 0x001920, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_3) == 0x001928, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x001930, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x001934, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_2) == 0x001938, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x001A20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_2) == 0x001A28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_2) == 0x001A30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x001A38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x001A3C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_1) == 0x001A40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_Base_Projectile_3) == 0x001B28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_Base_Projectile_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_29) == 0x001B30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_Base_Projectile_4) == 0x001B38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_Base_Projectile_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_30) == 0x001B40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_4) == 0x001B44, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_63) == 0x001B48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_63' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_3) == 0x001B50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_AttachToComponent_ReturnValue) == 0x001B58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_2) == 0x001B59, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsPlaying_ReturnValue_2) == 0x001B5A, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_string_Variable_2) == 0x001B60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue_2) == 0x001B70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue_3) == 0x001B74, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_4) == 0x001B78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_4) == 0x001B7C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_1) == 0x001B80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_DeltaSeconds) == 0x001B88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_64) == 0x001B8C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_64' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsPartyMember_ReturnValue) == 0x001B90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsPartyMember_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_4) == 0x001B98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentRotation_ReturnValue_3) == 0x001BA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x001BB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable_1) == 0x001BD0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_3) == 0x001BD8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_3) == 0x001CC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_2) == 0x001CC4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_3) == 0x001CD4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Visible_1) == 0x001CE4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Damage_3) == 0x001CE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Damage_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Damage) == 0x001CF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_DamageType) == 0x001CF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_InstigatedBy) == 0x001D00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_DamageCauser) == 0x001D08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Visible) == 0x001D10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player_9) == 0x001D18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_5) == 0x001D20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Replicate_1) == 0x001D24, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Replicate_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Replicate) == 0x001D25, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Replicate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player_8) == 0x001D28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetStat_Value) == 0x001D30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetStat_Value_1) == 0x001D38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player_7) == 0x001D40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player_6) == 0x001D48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_WheelIndex_1) == 0x001D50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_WheelIndex_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_WheelIndex) == 0x001D54, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_WheelIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_CalculateFlat_Wheel_Number_FlatWheelNumber) == 0x001D58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_CalculateFlat_Wheel_Number_FlatWheelNumber' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player_5) == 0x001D60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_5) == 0x001D68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_16) == 0x001D70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_5) == 0x001D78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player_4) == 0x001D80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player_3) == 0x001D88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player_2) == 0x001D90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Level_1) == 0x001D98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Level_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player_1) == 0x001DA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Level) == 0x001DA8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Level' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Event_Player) == 0x001DB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_17) == 0x001DB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Surv_3) == 0x001DC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Surv_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Surv_2) == 0x001DC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Surv_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_string_Variable_3) == 0x001DD0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_1) == 0x001DE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue_4) == 0x001DE4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Delay_1) == 0x001DE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Delay_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NewEnable_2) == 0x001DF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NewEnable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_6) == 0x001DF4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_12) == 0x001DF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_IntToString_ReturnValue_1) == 0x001E00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_6) == 0x001E10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_BaseDamage) == 0x001E20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_BaseDamage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_7) == 0x001E24, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_ApplyDamage_ReturnValue) == 0x001E28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Surv_1) == 0x001E30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Surv_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DestroyedActor) == 0x001E38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCarTipe_CarTipe_4) == 0x001E40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCarTipe_CarTipe_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_4) == 0x001E44, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_18) == 0x001E58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCarTipe_CarTipe_5) == 0x001E60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCarTipe_CarTipe_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x001E68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_19) == 0x001E78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCarTipe_CarTipe_6) == 0x001E80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCarTipe_CarTipe_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x001E88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetGameMode_ReturnValue) == 0x001E98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x001EA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_31) == 0x001EA8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_31' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_13) == 0x001EA9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SurvivalPlayer) == 0x001EB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_14) == 0x001EB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_6) == 0x001EBC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_6) == 0x001EC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_15) == 0x001EC4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_7) == 0x001EC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_7) == 0x001ECC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_20) == 0x001ED0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_4) == 0x001ED8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_3) == 0x001EE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x001EE1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Surv) == 0x001EE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Surv' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Damage_2) == 0x001EF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Damage_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DontAnimate_2) == 0x001EF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DontAnimate_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_EffectDamage) == 0x001EF9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_EffectDamage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_HungerDamage) == 0x001EFA, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_HungerDamage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanAND_ReturnValue_4) == 0x001EFB, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_HasAuthority_ReturnValue) == 0x001EFC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Damage_1) == 0x001F00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Damage_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DDLocation_1) == 0x001F08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DDLocation_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_BoneName_1) == 0x001F20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_BoneName_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_HitLocation_1) == 0x001F28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_HitLocation_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DontAnimate_1) == 0x001F40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DontAnimate_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Killer_1) == 0x001F48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Killer_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_IsRadialDamage_1) == 0x001F50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_IsRadialDamage_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_IsFireDamage_1) == 0x001F51, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_IsFireDamage_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DistanceToExplosion_1) == 0x001F58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DistanceToExplosion_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DamageCauser_1) == 0x001F60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_StaminaDecrease_1) == 0x001F68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_StaminaDecrease_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Zombie__1) == 0x001F69, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Zombie__1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_AmmoClass_1) == 0x001F6A, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_AmmoClass_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NegativeEffectDamageType_1) == 0x001F6B, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NegativeEffectDamageType_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Damage) == 0x001F70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DDLocation) == 0x001F78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DDLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_BoneName) == 0x001F90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_HitLocation) == 0x001F98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DontAnimate) == 0x001FB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DontAnimate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Killer) == 0x001FB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_IsRadialDamage) == 0x001FC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_IsRadialDamage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_IsFireDamage) == 0x001FC1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_IsFireDamage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DistanceToExplosion) == 0x001FC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DistanceToExplosion' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_DamageCauser) == 0x001FD0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_StaminaDecrease) == 0x001FD8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_StaminaDecrease' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Zombie_) == 0x001FD9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Zombie_' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_AmmoClass) == 0x001FDA, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_AmmoClass' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NegativeEffectDamageType) == 0x001FDB, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NegativeEffectDamageType' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_8) == 0x001FDC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_8) == 0x001FE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Target_1) == 0x001FE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_inCar) == 0x001FF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_inCar' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_driver) == 0x001FF1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_driver' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_carTipe) == 0x001FF2, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_carTipe' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SitIndex) == 0x001FF4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_5) == 0x001FF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_5) == 0x002008, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_SteamId) == 0x002010, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_SteamId' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_survRef) == 0x002020, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_survRef' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_4) == 0x002028, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x002029, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_7) == 0x002030, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_8) == 0x002040, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable_2) == 0x002050, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_9) == 0x002058, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_5) == 0x002068, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_FMODPlayEventAttachedBullet_ReturnValue) == 0x002070, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_FMODPlayEventAttachedBullet_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_21) == 0x002078, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_8) == 0x002080, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NewParam) == 0x002088, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_65) == 0x0020A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_65' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_16) == 0x0020A4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_6) == 0x0020A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_7) == 0x0020B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_17) == 0x0020B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0020C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_5) == 0x0020C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_22) == 0x0020D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_66) == 0x0020D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_66' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Delay) == 0x0020E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NewViewTarget) == 0x0020E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NewViewTarget' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Exit) == 0x0020F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Exit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetController_ReturnValue_1) == 0x0020F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsPlayer_Controller) == 0x002100, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_32) == 0x002108, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_32' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_V2_2) == 0x002110, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_V2_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_33) == 0x002118, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_33' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_6) == 0x002119, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable) == 0x00211C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_18) == 0x002124, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x002128, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAttached_ReturnValue) == 0x002140, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_2) == 0x002148, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NotifyName) == 0x00214C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_9) == 0x002154, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_6) == 0x002158, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SpawnSystemAttached_ReturnValue) == 0x002160, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SpawnSystemAttached_ReturnValue_1) == 0x002168, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SpawnSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue_5) == 0x002170, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_9) == 0x002174, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_9) == 0x002178, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_6) == 0x00217C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getIdleRpm_ReturnValue) == 0x00218C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getIdleRpm_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAttached_ReturnValue_1) == 0x002190, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_7) == 0x002198, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_3) == 0x0021A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_7) == 0x0021A4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue) == 0x0021A5, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_19) == 0x0021A6, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_14) == 0x0021A7, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_23) == 0x0021A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_10) == 0x0021B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getRpm_ReturnValue) == 0x0021B4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getRpm_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_1) == 0x0021B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_10) == 0x0021BC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_24) == 0x0021C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsPlaying_ReturnValue_3) == 0x0021C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsPlaying_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NotifyName_1) == 0x0021CC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_12) == 0x0021D4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsPlaying_ReturnValue_4) == 0x0021D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsPlaying_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_8) == 0x0021D9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_13) == 0x0021DC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_10) == 0x0021E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_hasContact_ReturnValue) == 0x0021E4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_hasContact_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_14) == 0x0021E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getRayHit_ReturnValue) == 0x0021F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getRayHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_9) == 0x0022D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetSurfaceType_ReturnValue) == 0x0022D9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanAND_ReturnValue_5) == 0x0022DA, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x0022E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_25) == 0x0022E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralDouble_ReturnValue_2) == 0x0022F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralDouble_ReturnValue_3) == 0x0022F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralDouble_ReturnValue_4) == 0x002300, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralDouble_ReturnValue_5) == 0x002308, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralDouble_ReturnValue_6) == 0x002310, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_20) == 0x002318, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_15) == 0x002319, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_15) == 0x00231C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_7) == 0x002320, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetFloatValue_ReturnValue) == 0x002330, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_26) == 0x002338, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_27) == 0x002340, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_27' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_8) == 0x002348, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_11) == 0x002350, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_WheelLastTouchSurface_ReturnValue) == 0x002354, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_WheelLastTouchSurface_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetTireVFX_NiagaraFX) == 0x002358, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetTireVFX_NiagaraFX' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetTireVFX_Succes) == 0x002360, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetTireVFX_Succes' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_11) == 0x002364, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_hasContact_ReturnValue_1) == 0x002368, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_hasContact_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NotifyName_2) == 0x00236C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_1) == 0x002374, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_28) == 0x002378, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_28' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_29) == 0x002380, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_29' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_9) == 0x002388, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsActive_ReturnValue) == 0x002390, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_4) == 0x002394, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_2) == 0x002398, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_8) == 0x00239C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_11) == 0x0023AC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_30) == 0x0023B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_30' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable_1) == 0x0023B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_31) == 0x0023C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_31' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_32) == 0x0023C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_32' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x0023D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_ChekIfStillOverlapWater_StillOverlap) == 0x0023E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_ChekIfStillOverlapWater_StillOverlap' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NotifyName_3) == 0x0023E4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_33) == 0x0023F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_33' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_9) == 0x0023F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable_2) == 0x002408, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_2) == 0x002409, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_byte_Variable) == 0x00240A, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_3) == 0x00240B, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_8) == 0x002410, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable_3) == 0x002418, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NotifyName_4) == 0x00241C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_1) == 0x002424, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_9) == 0x002430, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x002438, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SelectFloat_ReturnValue_1) == 0x002440, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_10) == 0x002448, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_2) == 0x002450, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_3) == 0x002458, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetInputAxisValue_ReturnValue) == 0x002460, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x002464, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_12) == 0x002468, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_isHandbrakeOn_ReturnValue) == 0x00246C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_isHandbrakeOn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_11) == 0x002470, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_12) == 0x002474, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_13) == 0x002478, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_4) == 0x00247C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getThrottle_ReturnValue) == 0x002484, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getThrottle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x002488, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanAND_ReturnValue_6) == 0x002489, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_16) == 0x00248C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanOR_ReturnValue_2) == 0x002490, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_5) == 0x002494, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_14) == 0x00249C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_17) == 0x0024A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_10) == 0x0024A4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_10) == 0x0024A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_10) == 0x0024B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_9) == 0x0024C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_5) == 0x0024C4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_18) == 0x0024C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_3) == 0x0024CC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_11) == 0x0024CD, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MapRangeClamped_ReturnValue) == 0x0024D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getRayHit_ReturnValue_1) == 0x0024D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getRayHit_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_hasContact_ReturnValue_2) == 0x0025C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_hasContact_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetSurfaceType_ReturnValue_1) == 0x0025C1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetSurfaceType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0025C2, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanAND_ReturnValue_7) == 0x0025C3, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanAND_ReturnValue_8) == 0x0025C4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SelectFloat_ReturnValue_2) == 0x0025C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SelectFloat_ReturnValue_3) == 0x0025D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0025D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_FInterpTo_ReturnValue) == 0x0025E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_6) == 0x0025E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_10) == 0x0025F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_WheelLastTouchSurface_ReturnValue_1) == 0x0025F1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_WheelLastTouchSurface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_19) == 0x0025F4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_12) == 0x0025F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_7) == 0x0025FC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetDampingFromSurface_LinearDamping) == 0x002608, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetDampingFromSurface_LinearDamping' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_20) == 0x002610, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_LinearDampingFromFlatTires_OutputPin) == 0x002618, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_LinearDampingFromFlatTires_OutputPin' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_13) == 0x002620, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_13) == 0x002624, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_11) == 0x002628, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBPI_General_Interface_3) == 0x002630, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBPI_General_Interface_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_34) == 0x002640, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_34' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_67) == 0x002644, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_67' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_15) == 0x002648, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetAttachedActors_OutActors) == 0x002650, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_12) == 0x002660, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_6) == 0x002668, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_8) == 0x002670, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_35) == 0x002678, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_35' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_4) == 0x002679, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x002680, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetDisplayName_ReturnValue_1) == 0x002690, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0026A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0026B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_InputPin) == 0x0026C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_InputPin' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0026D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_13) == 0x0026E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0026E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetDisplayName_ReturnValue_2) == 0x0026F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_13) == 0x002708, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_14) == 0x002718, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Concat_StrStr_ReturnValue_15) == 0x002728, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_7) == 0x002738, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_MakeArray_Array) == 0x002740, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_5) == 0x002750, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Target) == 0x002758, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_bInReplicateMovement) == 0x002760, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_bInReplicateMovement' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_12) == 0x002764, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_21) == 0x002768, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_12) == 0x00276C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_PlayerToKill) == 0x002770, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_PlayerToKill' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_11) == 0x002778, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetSocketTransform_ReturnValue) == 0x002780, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakTransform_Location) == 0x0027E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakTransform_Rotation) == 0x0027F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakTransform_Scale) == 0x002810, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetController_ReturnValue_2) == 0x002828, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_VectorVector_ReturnValue) == 0x002830, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x002848, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorLocation_ReturnValue) == 0x002930, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_14) == 0x002938, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_8) == 0x002940, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_12) == 0x002944, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_6) == 0x002945, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_13) == 0x002948, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_MakeArray_Array_1) == 0x002950, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_7) == 0x002960, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_13) == 0x002964, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_InputActionEvent_Key_1) == 0x002968, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_InputActionEvent_Key_2) == 0x002980, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetChildrenComponents_Children) == 0x002998, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_21) == 0x0029A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_14) == 0x0029AC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_15) == 0x0029B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_16) == 0x0029B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsStatic_Mesh_Component_1) == 0x0029C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsStatic_Mesh_Component_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_36) == 0x0029C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_36' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsStatic_Mesh_Component_2) == 0x0029D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsStatic_Mesh_Component_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_37) == 0x0029D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_37' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_9) == 0x0029DC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_10) == 0x0029E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_8) == 0x0029E4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_9) == 0x0029E5, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NewEnable_1) == 0x0029E6, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NewEnable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_NewEnable) == 0x0029E7, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_NewEnable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x0029E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_68) == 0x002A00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_68' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_VectorVector_ReturnValue) == 0x002A08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_VectorVector_ReturnValue_1) == 0x002A20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_LessEqual_IntInt_ReturnValue) == 0x002A38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x002A40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_14) == 0x002A48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable_3) == 0x002A4C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_16) == 0x002A4D, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable_4) == 0x002A4E, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_4) == 0x002A4F, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_17) == 0x002A50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable_4) == 0x002A51, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable_5) == 0x002A52, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_18) == 0x002A53, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_2) == 0x002A58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_14) == 0x002A60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable_6) == 0x002A64, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_14) == 0x002A68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_19) == 0x002A6C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_15) == 0x002A70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_3) == 0x002A78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_4) == 0x002A80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Location_1) == 0x002A88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CustomEvent_Location) == 0x002AA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_5) == 0x002B00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_34) == 0x002B08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_34' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_15) == 0x002B0C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable_7) == 0x002B10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_20) == 0x002B11, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_6) == 0x002B18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_7) == 0x002B20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_15) == 0x002B28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_8) == 0x002B30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_16) == 0x002B38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_9) == 0x002B40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable_8) == 0x002B48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_21) == 0x002B49, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_10) == 0x002B50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_11) == 0x002B58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_12) == 0x002B60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAttached_ReturnValue_2) == 0x002B68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getRayHit_ReturnValue_2) == 0x002B70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getRayHit_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_13) == 0x002C58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetSurfaceType_ReturnValue_2) == 0x002C60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetSurfaceType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetSurfaceDelayMultiplier_PhysMatMultiplier) == 0x002C64, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetSurfaceDelayMultiplier_PhysMatMultiplier' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_17) == 0x002C68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_14) == 0x002C70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x002C78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAttached_ReturnValue_3) == 0x002C90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_15) == 0x002C98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable_9) == 0x002CA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_16) == 0x002CA4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_16) == 0x002CA8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x002CB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_16) == 0x002CB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_22) == 0x002CC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_ReturnValue_15) == 0x002CC4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralDouble_ReturnValue_7) == 0x002CC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x002CD0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeLiteralDouble_ReturnValue_8) == 0x002CD8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeLiteralDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_8) == 0x002CE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_RandomFloatInRange_ReturnValue) == 0x002CE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_17) == 0x002CF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_9) == 0x002CF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_10) == 0x002D00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_18) == 0x002D08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_name_Variable_11) == 0x002D10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_69) == 0x002D18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_69' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_17) == 0x002D1C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_RLerp_ReturnValue) == 0x002D28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_RandomIntegerInRange_ReturnValue) == 0x002D40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x002D48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_16) == 0x002E30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_11) == 0x002E34, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_17) == 0x002E44, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_19) == 0x002E48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_12) == 0x002E50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x002E60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_20) == 0x002F48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_23) == 0x002F50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x002F58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_24) == 0x002F60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_FClamp_ReturnValue) == 0x002F68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x002F70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x002F78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_FClamp_ReturnValue_1) == 0x002F80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_DoubleDouble_ReturnValue) == 0x002F88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x002F90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x002F98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_5) == 0x002FB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_21) == 0x002FB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_25) == 0x002FC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_26) == 0x002FC4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x002FC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x002FD0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_FClamp_ReturnValue_2) == 0x002FD8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_FClamp_ReturnValue_3) == 0x002FE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x002FE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x002FF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_RotatorFloat_ReturnValue_1) == 0x002FF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_RotatorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_RotatorFloat_ReturnValue_2) == 0x003010, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_RotatorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_22) == 0x003028, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_13) == 0x003030, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_11) == 0x003040, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue_6) == 0x003044, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable_5) == 0x003048, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetChildrenComponents_Children_1) == 0x003050, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetChildrenComponents_Children_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_22) == 0x003060, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_22) == 0x003061, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetAnimInstance_ReturnValue) == 0x003068, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsAVS_Anim_BPI) == 0x003070, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsAVS_Anim_BPI' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_38) == 0x003080, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_38' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getNormalizedSteering_ReturnValue) == 0x003084, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getNormalizedSteering_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getNormalizedSteering_ReturnValue_1) == 0x003088, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getNormalizedSteering_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MapRangeClamped_ReturnValue_1) == 0x003090, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MapRangeClamped_ReturnValue_2) == 0x003098, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SetSteering_NewParam) == 0x0030A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SetSteering_NewParam' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getRayHit_ReturnValue_3) == 0x0030A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getRayHit_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_23) == 0x003190, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetSurfaceType_ReturnValue_3) == 0x003198, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetSurfaceType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetSurfaceAmplitudeMultiplier_PhysMatMultiplier) == 0x00319C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetSurfaceAmplitudeMultiplier_PhysMatMultiplier' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_24) == 0x0031A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_RotatorFloat_ReturnValue_3) == 0x0031A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_RotatorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_RotatorFloat_ReturnValue_4) == 0x0031C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_RotatorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_RotatorFloat_ReturnValue_5) == 0x0031D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_RotatorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_25) == 0x0031F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_18) == 0x0031F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_26) == 0x003210, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetUpVector_ReturnValue_1) == 0x003218, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x003230, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_14) == 0x003248, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x003258, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MapRangeClamped_ReturnValue_3) == 0x003260, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_DoubleToVector_ReturnValue_4) == 0x003268, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_DoubleToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x003280, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_X_3) == 0x003298, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Y_3) == 0x0032A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Z_3) == 0x0032A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetUpVector_ReturnValue_2) == 0x0032B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetUpVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeRotator_ReturnValue) == 0x0032C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_X_4) == 0x0032E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Y_4) == 0x0032E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Z_4) == 0x0032F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_AddWorldRotation_SweepHitResult) == 0x0032F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_AddWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0033E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_AllowStabilizeVehicle_Allow) == 0x0033E1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_AllowStabilizeVehicle_Allow' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_27) == 0x0033E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_12) == 0x0033F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_28) == 0x0033F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_13) == 0x003400, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_29) == 0x003408, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_14) == 0x003410, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_30) == 0x003418, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_17) == 0x003420, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_31) == 0x003428, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCarTipe_CarTipe_7) == 0x003430, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCarTipe_CarTipe_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCarTipe_CarTipe_8) == 0x003431, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCarTipe_CarTipe_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_6) == 0x003432, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_15) == 0x003434, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_32) == 0x003438, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_17) == 0x003440, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_18) == 0x003444, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_33) == 0x003448, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_19) == 0x003450, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x003458, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_20) == 0x003460, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable_6) == 0x003464, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x003468, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_34) == 0x003470, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_18) == 0x003478, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_10) == 0x00347C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_19) == 0x003480, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_byte_Variable_1) == 0x003484, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetComponentLocation_ReturnValue_7) == 0x003488, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetComponentLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0034A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_18) == 0x0034B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_18) == 0x0034B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_13) == 0x0034C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0034C1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetAllActorsOfClass_OutActors) == 0x0034C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_19) == 0x0034D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_16) == 0x0034E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_14) == 0x0034E4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_11) == 0x0034E5, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_7) == 0x0034E6, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_20) == 0x0034E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_17) == 0x0034F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_15) == 0x0034F4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_12) == 0x0034F5, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable_7) == 0x0034F6, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_35) == 0x0034F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_23) == 0x003500, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_24) == 0x003501, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_25) == 0x003502, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_19) == 0x003504, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAttached_ReturnValue_4) == 0x003508, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAttached_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_13) == 0x003510, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_20) == 0x003514, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue) == 0x003518, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_V2_3) == 0x003520, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_V2_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_39) == 0x003528, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_39' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetAttachedActors_OutActors_1) == 0x003530, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetAttachedActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_21) == 0x003540, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_22) == 0x003548, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_18) == 0x003550, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_RT_Manager_Scene_Capture) == 0x003558, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_RT_Manager_Scene_Capture' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_40) == 0x003560, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_40' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_14) == 0x003561, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_19) == 0x003564, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_36) == 0x003568, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_15) == 0x003570, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_37) == 0x003578, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x003580, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_1) == 0x003588, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_1) == 0x003590, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x003598, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_9) == 0x0035A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_41) == 0x0035A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_41' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_New_NV_Water) == 0x0035B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_New_NV_Water' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_42) == 0x0035B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_42' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0035C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor) == 0x0035C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp) == 0x0035D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0035D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep) == 0x0035DC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult) == 0x0035E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_35) == 0x0036C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_35' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsBP_New_NV_Water_1) == 0x0036D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsBP_New_NV_Water_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_43) == 0x0036D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_43' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_38) == 0x0036E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Variable_70) == 0x0036E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Variable_70' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Variable_10) == 0x0036EC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_X_5) == 0x0036F0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Y_5) == 0x0036F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Z_5) == 0x003700, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Abs_ReturnValue) == 0x003708, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Abs_ReturnValue_1) == 0x003710, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x003718, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_8) == 0x003720, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x003728, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x003730, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeVector_ReturnValue) == 0x003738, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetUpVector_ReturnValue_3) == 0x003750, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetUpVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x003768, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x003780, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_X_6) == 0x003798, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Y_6) == 0x0037A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BreakVector_Z_6) == 0x0037A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetVelocity_ReturnValue_1) == 0x0037B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0037C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0037D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0037D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0037E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeVector_ReturnValue_1) == 0x0037E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetPhysicsLinearVelocity_ReturnValue_1) == 0x003800, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetPhysicsLinearVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x003818, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_39) == 0x003830, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_36) == 0x003838, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_36' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x003840, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue_7) == 0x003848, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00384C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue_8) == 0x003850, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_21) == 0x003854, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_22) == 0x003858, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x003860, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue_9) == 0x003868, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_23) == 0x003870, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_20) == 0x003878, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_16) == 0x00387C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_23) == 0x003880, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_40) == 0x003888, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x003890, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_8) == 0x003898, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_19) == 0x00389C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_41) == 0x0038A0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_24) == 0x0038A8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsStatic_Mesh_Component_3) == 0x0038B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsStatic_Mesh_Component_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_44) == 0x0038B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_44' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_20) == 0x0038BC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_25) == 0x0038C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0038C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable_8) == 0x0039B0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_42) == 0x0039B8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_9) == 0x0039C0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable_9) == 0x0039C1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_20) == 0x0039C4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_17) == 0x0039C8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_21) == 0x0039CC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_37) == 0x0039D0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_37' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_43) == 0x0039D8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_21) == 0x0039E0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_26) == 0x0039E8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_10) == 0x0039F8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_16) == 0x0039F9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x003A00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_44) == 0x003AE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_21) == 0x003AF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_45) == 0x003AF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_18) == 0x003B00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_22) == 0x003B04, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_38) == 0x003B08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_38' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Array_Index_Variable_22) == 0x003B10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Array_Index_Variable_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_27) == 0x003B18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_27' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getRadius_ReturnValue) == 0x003B20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_object_Variable_46) == 0x003B28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_ReturnValue_10) == 0x003B30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_28) == 0x003B38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_28' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_IsEmpty_ReturnValue) == 0x003B40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_21) == 0x003B44, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_19) == 0x003B48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsServer_ReturnValue_26) == 0x003B49, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsServer_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_byte_Variable_2) == 0x003B4A, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_24) == 0x003B50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getLateralScale_ReturnValue) == 0x003B58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getLateralScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAtLocation_ReturnValue_3) == 0x003B60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAtLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getLateralFriction_ReturnValue) == 0x003B68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getLateralFriction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getLongitudinalScale_ReturnValue) == 0x003B6C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getLongitudinalScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getLongitudinalFriction_ReturnValue) == 0x003B70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getLongitudinalFriction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getLongitudinalScale_ReturnValue_1) == 0x003B74, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getLongitudinalScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getLateralScale_ReturnValue_1) == 0x003B78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getLateralScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getLateralFriction_ReturnValue_1) == 0x003B7C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getLateralFriction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getLongitudinalFriction_ReturnValue_1) == 0x003B80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getLongitudinalFriction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_bool_IsClosed_Variable_10) == 0x003B84, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_bool_IsClosed_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_int_Loop_Counter_Variable_22) == 0x003B88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_int_Loop_Counter_Variable_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_20) == 0x003B8C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Add_IntInt_ReturnValue_23) == 0x003B90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Add_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_25) == 0x003B94, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x003B98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurvival_Player_10) == 0x003BA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurvival_Player_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_45) == 0x003BA8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_45' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_27) == 0x003BAC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_27' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_IsValid_ReturnValue_17) == 0x003BB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetAnimInstance_ReturnValue_1) == 0x003BB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_28) == 0x003BC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_28' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsSurv_Anim_Interface) == 0x003BC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsSurv_Anim_Interface' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_46) == 0x003BD8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_46' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SetRubberDirection_Nothing) == 0x003BD9, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SetRubberDirection_Nothing' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetController_ReturnValue_3) == 0x003BE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_getThrottle_ReturnValue_1) == 0x003BE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_getThrottle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x003BEC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetController_ReturnValue_4) == 0x003BF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetOverlappingActors_OverlappingActors_2) == 0x003BF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetOverlappingActors_OverlappingActors_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_29) == 0x003C08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_29' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_22) == 0x003C10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsZombie_1) == 0x003C18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsZombie_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_47) == 0x003C20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_47' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_21) == 0x003C21, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x003C28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeTransform_ReturnValue_6) == 0x003C40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAtLocation_ReturnValue_4) == 0x003CA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAtLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetOverlappingActors_OverlappingActors_3) == 0x003CA8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetOverlappingActors_OverlappingActors_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Get_Item_30) == 0x003CB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Get_Item_30' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Length_ReturnValue_23) == 0x003CC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Length_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_AsZombie_2) == 0x003CC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_AsZombie_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_DynamicCast_bSuccess_48) == 0x003CD0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_DynamicCast_bSuccess_48' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_IntInt_ReturnValue_22) == 0x003CD1, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x003CD8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeTransform_ReturnValue_7) == 0x003CF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAtLocation_ReturnValue_5) == 0x003D50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAtLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_29) == 0x003D58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_29' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x003D5C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, Temp_real_Variable_39) == 0x003D60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::Temp_real_Variable_39' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_BooleanAND_ReturnValue_9) == 0x003D68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Default_26) == 0x003D70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x003D78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SelectFloat_ReturnValue_4) == 0x003D80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAttached_ReturnValue_5) == 0x003D88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAttached_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_23) == 0x003D90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_PlayEventAttached_ReturnValue_6) == 0x003D98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_PlayEventAttached_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x003DA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x003DA8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x003DB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x003DB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x003DC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x003DC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x003DD0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x003DD8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x003DE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_4) == 0x003DE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_5) == 0x003DF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Delay_Duration_ImplicitCast) == 0x003DF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x003E00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_RLerp_Alpha_ImplicitCast) == 0x003E08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_6) == 0x003E10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x003E18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x003E20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Delay_Duration_ImplicitCast_1) == 0x003E24, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Delay_Duration_ImplicitCast_2) == 0x003E28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Delay_Duration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MultiCallDecreaseDurability_Damage_ImplicitCast) == 0x003E30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MultiCallDecreaseDurability_Damage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Delay_Duration_ImplicitCast_3) == 0x003E38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Delay_Duration_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_7) == 0x003E40, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SetParameter_Value_ImplicitCast) == 0x003E48, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SetParameter_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Option_0_ImplicitCast) == 0x003E4C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_Select_Option_1_ImplicitCast) == 0x003E50, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_Select_Option_1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x003E58, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x003E60, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x003E68, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_8) == 0x003E70, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_9) == 0x003E78, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_FInterpTo_Current_ImplicitCast) == 0x003E80, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_VariableSet_DirtOpacity_DMI_ImplicitCast) == 0x003E88, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_VariableSet_DirtOpacity_DMI_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_10) == 0x003E90, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_11) == 0x003E98, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SetLinearDamping_InDamping_ImplicitCast) == 0x003EA0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SetLinearDamping_InDamping_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_12) == 0x003EA8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x003EB0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Greater_DoubleDouble_A_ImplicitCast_13) == 0x003EB8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Greater_DoubleDouble_A_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Delay_Duration_ImplicitCast_4) == 0x003EC0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Delay_Duration_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x003EC8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x003ED0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x003ED8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_RotatorFloat_B_ImplicitCast) == 0x003EDC, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_RotatorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_A_ImplicitCast_2) == 0x003EE0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Divide_DoubleDouble_A_ImplicitCast_3) == 0x003EE8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Divide_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_RotatorFloat_B_ImplicitCast_1) == 0x003EF0, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_RotatorFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Multiply_RotatorFloat_B_ImplicitCast_2) == 0x003EF4, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Multiply_RotatorFloat_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x003EF8, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MapRangeClamped_Value_ImplicitCast_2) == 0x003F00, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MapRangeClamped_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x003F08, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x003F0C, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Array_Add_NewItem_ImplicitCast) == 0x003F10, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Array_Add_NewItem_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_VariableSet_Rear_DefLongitudinalFriction_ImplicitCast) == 0x003F18, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_VariableSet_Rear_DefLongitudinalFriction_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, K2Node_VariableSet_Front_DefLongitudinalFriction_ImplicitCast) == 0x003F20, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::K2Node_VariableSet_Front_DefLongitudinalFriction_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x003F28, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x003F30, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x003F38, "Member 'AVS_VehicleMaster_C_ExecuteUbergraph_AVS_VehicleMaster::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ExitCarOnInterrupt
// 0x0138 (0x0138 - 0x0000)
struct AVS_VehicleMaster_C_ExitCarOnInterrupt final
{
public:
	int32                                         SitIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Player;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetExitPoint_Location;                    // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetExitPoint_CorrectLocation;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetExitPoint_YouCantExit;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ExitCarOnInterrupt) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ExitCarOnInterrupt");
static_assert(sizeof(AVS_VehicleMaster_C_ExitCarOnInterrupt) == 0x000138, "Wrong size on AVS_VehicleMaster_C_ExitCarOnInterrupt");
static_assert(offsetof(AVS_VehicleMaster_C_ExitCarOnInterrupt, SitIndex) == 0x000000, "Member 'AVS_VehicleMaster_C_ExitCarOnInterrupt::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitCarOnInterrupt, Param_Player) == 0x000008, "Member 'AVS_VehicleMaster_C_ExitCarOnInterrupt::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitCarOnInterrupt, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_ExitCarOnInterrupt::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitCarOnInterrupt, CallFunc_GetExitPoint_Location) == 0x000028, "Member 'AVS_VehicleMaster_C_ExitCarOnInterrupt::CallFunc_GetExitPoint_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitCarOnInterrupt, CallFunc_GetExitPoint_CorrectLocation) == 0x000040, "Member 'AVS_VehicleMaster_C_ExitCarOnInterrupt::CallFunc_GetExitPoint_CorrectLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitCarOnInterrupt, CallFunc_GetExitPoint_YouCantExit) == 0x000041, "Member 'AVS_VehicleMaster_C_ExitCarOnInterrupt::CallFunc_GetExitPoint_YouCantExit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitCarOnInterrupt, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000048, "Member 'AVS_VehicleMaster_C_ExitCarOnInterrupt::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitCarOnInterrupt, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000130, "Member 'AVS_VehicleMaster_C_ExitCarOnInterrupt::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ExitVehicle
// 0x0070 (0x0070 - 0x0000)
struct AVS_VehicleMaster_C_ExitVehicle final
{
public:
	class AActor*                                 Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipExitOnLocation;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreSpeedLimits;                                 // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetExitPoint_Location;                    // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetExitPoint_CorrectLocation;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetExitPoint_YouCantExit;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB_1;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0062(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ExitVehicle) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ExitVehicle");
static_assert(sizeof(AVS_VehicleMaster_C_ExitVehicle) == 0x000070, "Wrong size on AVS_VehicleMaster_C_ExitVehicle");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ExitVehicle::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, SkipAnimation) == 0x000008, "Member 'AVS_VehicleMaster_C_ExitVehicle::SkipAnimation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, SkipExitOnLocation) == 0x000009, "Member 'AVS_VehicleMaster_C_ExitVehicle::SkipExitOnLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, IgnoreSpeedLimits) == 0x00000A, "Member 'AVS_VehicleMaster_C_ExitVehicle::IgnoreSpeedLimits' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, Success) == 0x00000B, "Member 'AVS_VehicleMaster_C_ExitVehicle::Success' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_Array_IsEmpty_ReturnValue) == 0x00000C, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, K2Node_DynamicCast_AsSurvival_Player) == 0x000010, "Member 'AVS_VehicleMaster_C_ExitVehicle::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AVS_VehicleMaster_C_ExitVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_IsLocallyControlled_ReturnValue) == 0x000019, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_GetExitPoint_Location) == 0x000020, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_GetExitPoint_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_GetExitPoint_CorrectLocation) == 0x000038, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_GetExitPoint_CorrectLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_GetExitPoint_YouCantExit) == 0x000039, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_GetExitPoint_YouCantExit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_GetCurrentSpeed_CurrentSpeedKMH) == 0x00003C, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_GetCurrentSpeed_CurrentSpeedKMH' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, K2Node_DynamicCast_AsPS_TDB) == 0x000048, "Member 'AVS_VehicleMaster_C_ExitVehicle::K2Node_DynamicCast_AsPS_TDB' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'AVS_VehicleMaster_C_ExitVehicle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_IsServer_ReturnValue) == 0x000051, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, K2Node_DynamicCast_AsPS_TDB_1) == 0x000058, "Member 'AVS_VehicleMaster_C_ExitVehicle::K2Node_DynamicCast_AsPS_TDB_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'AVS_VehicleMaster_C_ExitVehicle::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000061, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, Temp_bool_Variable) == 0x000062, "Member 'AVS_VehicleMaster_C_ExitVehicle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_Array_RemoveItem_ReturnValue) == 0x000063, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000064, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ExitVehicle, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'AVS_VehicleMaster_C_ExitVehicle::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.FCKNGDELAY
// 0x0004 (0x0004 - 0x0000)
struct AVS_VehicleMaster_C_FCKNGDELAY final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_FCKNGDELAY) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_FCKNGDELAY");
static_assert(sizeof(AVS_VehicleMaster_C_FCKNGDELAY) == 0x000004, "Wrong size on AVS_VehicleMaster_C_FCKNGDELAY");
static_assert(offsetof(AVS_VehicleMaster_C_FCKNGDELAY, Duration) == 0x000000, "Member 'AVS_VehicleMaster_C_FCKNGDELAY::Duration' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.FixAllWheels
// 0x0060 (0x0060 - 0x0000)
struct AVS_VehicleMaster_C_FixAllWheels final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFGearWheel*                            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_setRadius_f_ImplicitCast;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_FixAllWheels) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_FixAllWheels");
static_assert(sizeof(AVS_VehicleMaster_C_FixAllWheels) == 0x000060, "Wrong size on AVS_VehicleMaster_C_FixAllWheels");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, Temp_name_Variable) == 0x000000, "Member 'AVS_VehicleMaster_C_FixAllWheels::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, Temp_name_Variable_1) == 0x000008, "Member 'AVS_VehicleMaster_C_FixAllWheels::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, Temp_name_Variable_2) == 0x000010, "Member 'AVS_VehicleMaster_C_FixAllWheels::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, Temp_bool_Variable) == 0x000018, "Member 'AVS_VehicleMaster_C_FixAllWheels::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'AVS_VehicleMaster_C_FixAllWheels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'AVS_VehicleMaster_C_FixAllWheels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'AVS_VehicleMaster_C_FixAllWheels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, Temp_name_Variable_3) == 0x000028, "Member 'AVS_VehicleMaster_C_FixAllWheels::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, Temp_int_Variable) == 0x000030, "Member 'AVS_VehicleMaster_C_FixAllWheels::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, CallFunc_Array_Get_Item) == 0x000038, "Member 'AVS_VehicleMaster_C_FixAllWheels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_FixAllWheels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, K2Node_Select_Default) == 0x000044, "Member 'AVS_VehicleMaster_C_FixAllWheels::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'AVS_VehicleMaster_C_FixAllWheels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'AVS_VehicleMaster_C_FixAllWheels::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FixAllWheels, CallFunc_setRadius_f_ImplicitCast) == 0x000058, "Member 'AVS_VehicleMaster_C_FixAllWheels::CallFunc_setRadius_f_ImplicitCast' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.FlatWheelEnable
// 0x00A0 (0x00A0 - 0x0000)
struct AVS_VehicleMaster_C_FlatWheelEnable final
{
public:
	int32                                         WheelIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_CarIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FlatWheelRadius;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFGearWheel*                            CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getRadius_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetFloatPrecision_Result;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_setRadius_f_ImplicitCast;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_FlatWheelEnable) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_FlatWheelEnable");
static_assert(sizeof(AVS_VehicleMaster_C_FlatWheelEnable) == 0x0000A0, "Wrong size on AVS_VehicleMaster_C_FlatWheelEnable");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, WheelIndex) == 0x000000, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::WheelIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, Param_CarIndex) == 0x000004, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::Param_CarIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, FlatWheelRadius) == 0x000008, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::FlatWheelRadius' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, Temp_real_Variable) == 0x000010, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, Temp_real_Variable_1) == 0x000018, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, Temp_real_Variable_2) == 0x000020, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, Temp_real_Variable_3) == 0x000028, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, Temp_real_Variable_4) == 0x000030, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, Temp_bool_Variable) == 0x000038, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, Temp_real_Variable_5) == 0x000040, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, CallFunc_Array_Get_Item) == 0x000048, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, CallFunc_getRadius_ReturnValue) == 0x000050, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::CallFunc_getRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, Temp_real_Variable_6) == 0x000058, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, Temp_int_Variable) == 0x000060, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, K2Node_Select_Default) == 0x000068, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, CallFunc_SetFloatPrecision_Result) == 0x000078, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::CallFunc_SetFloatPrecision_Result' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_FlatWheelEnable, CallFunc_setRadius_f_ImplicitCast) == 0x000098, "Member 'AVS_VehicleMaster_C_FlatWheelEnable::CallFunc_setRadius_f_ImplicitCast' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetActorType) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_GetActorType");
static_assert(sizeof(AVS_VehicleMaster_C_GetActorType) == 0x000001, "Wrong size on AVS_VehicleMaster_C_GetActorType");
static_assert(offsetof(AVS_VehicleMaster_C_GetActorType, ActorType) == 0x000000, "Member 'AVS_VehicleMaster_C_GetActorType::ActorType' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetBoostInfo
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_GetBoostInfo final
{
public:
	double                                        BoostTime;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BoostCooldownTime;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetBoostInfo) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetBoostInfo");
static_assert(sizeof(AVS_VehicleMaster_C_GetBoostInfo) == 0x000010, "Wrong size on AVS_VehicleMaster_C_GetBoostInfo");
static_assert(offsetof(AVS_VehicleMaster_C_GetBoostInfo, BoostTime) == 0x000000, "Member 'AVS_VehicleMaster_C_GetBoostInfo::BoostTime' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetBoostInfo, BoostCooldownTime) == 0x000008, "Member 'AVS_VehicleMaster_C_GetBoostInfo::BoostCooldownTime' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetCarStatsComponent
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_GetCarStatsComponent final
{
public:
	class UBPC_CarStatsComponent_C*               CarStats;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetCarStatsComponent) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetCarStatsComponent");
static_assert(sizeof(AVS_VehicleMaster_C_GetCarStatsComponent) == 0x000008, "Wrong size on AVS_VehicleMaster_C_GetCarStatsComponent");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarStatsComponent, CarStats) == 0x000000, "Member 'AVS_VehicleMaster_C_GetCarStatsComponent::CarStats' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetCarTipe
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_GetCarTipe final
{
public:
	ECarTipe                                      CarTipe;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      Temp_byte_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      Temp_byte_Variable_5;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      Temp_byte_Variable_6;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetCarTipe) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_GetCarTipe");
static_assert(sizeof(AVS_VehicleMaster_C_GetCarTipe) == 0x000010, "Wrong size on AVS_VehicleMaster_C_GetCarTipe");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarTipe, CarTipe) == 0x000000, "Member 'AVS_VehicleMaster_C_GetCarTipe::CarTipe' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarTipe, Temp_int_Variable) == 0x000004, "Member 'AVS_VehicleMaster_C_GetCarTipe::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarTipe, Temp_byte_Variable) == 0x000008, "Member 'AVS_VehicleMaster_C_GetCarTipe::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarTipe, Temp_byte_Variable_1) == 0x000009, "Member 'AVS_VehicleMaster_C_GetCarTipe::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarTipe, Temp_byte_Variable_2) == 0x00000A, "Member 'AVS_VehicleMaster_C_GetCarTipe::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarTipe, Temp_byte_Variable_3) == 0x00000B, "Member 'AVS_VehicleMaster_C_GetCarTipe::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarTipe, Temp_byte_Variable_4) == 0x00000C, "Member 'AVS_VehicleMaster_C_GetCarTipe::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarTipe, Temp_byte_Variable_5) == 0x00000D, "Member 'AVS_VehicleMaster_C_GetCarTipe::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarTipe, Temp_byte_Variable_6) == 0x00000E, "Member 'AVS_VehicleMaster_C_GetCarTipe::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCarTipe, K2Node_Select_Default) == 0x00000F, "Member 'AVS_VehicleMaster_C_GetCarTipe::K2Node_Select_Default' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetCurrentSpeed
// 0x0020 (0x0020 - 0x0000)
struct AVS_VehicleMaster_C_GetCurrentSpeed final
{
public:
	float                                         CurrentSpeedKMH;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getKMHSpeed_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_CurrentSpeedKMH_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetCurrentSpeed) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetCurrentSpeed");
static_assert(sizeof(AVS_VehicleMaster_C_GetCurrentSpeed) == 0x000020, "Wrong size on AVS_VehicleMaster_C_GetCurrentSpeed");
static_assert(offsetof(AVS_VehicleMaster_C_GetCurrentSpeed, CurrentSpeedKMH) == 0x000000, "Member 'AVS_VehicleMaster_C_GetCurrentSpeed::CurrentSpeedKMH' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCurrentSpeed, CallFunc_getKMHSpeed_ReturnValue) == 0x000004, "Member 'AVS_VehicleMaster_C_GetCurrentSpeed::CallFunc_getKMHSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCurrentSpeed, CallFunc_Abs_ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_GetCurrentSpeed::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCurrentSpeed, K2Node_FunctionResult_CurrentSpeedKMH_ImplicitCast) == 0x000010, "Member 'AVS_VehicleMaster_C_GetCurrentSpeed::K2Node_FunctionResult_CurrentSpeedKMH_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetCurrentSpeed, CallFunc_Abs_A_ImplicitCast) == 0x000018, "Member 'AVS_VehicleMaster_C_GetCurrentSpeed::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetDriver
// 0x0020 (0x0020 - 0x0000)
struct AVS_VehicleMaster_C_GetDriver final
{
public:
	class APawn*                                  Driver;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   NewParam;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetDriver) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetDriver");
static_assert(sizeof(AVS_VehicleMaster_C_GetDriver) == 0x000020, "Wrong size on AVS_VehicleMaster_C_GetDriver");
static_assert(offsetof(AVS_VehicleMaster_C_GetDriver, Driver) == 0x000000, "Member 'AVS_VehicleMaster_C_GetDriver::Driver' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetDriver, NewParam) == 0x000008, "Member 'AVS_VehicleMaster_C_GetDriver::NewParam' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetDriver, K2Node_DynamicCast_AsSurvival_Player) == 0x000010, "Member 'AVS_VehicleMaster_C_GetDriver::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetDriver, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AVS_VehicleMaster_C_GetDriver::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetEngineStarted
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_GetEngineStarted final
{
public:
	bool                                          Started;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetEngineStarted) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_GetEngineStarted");
static_assert(sizeof(AVS_VehicleMaster_C_GetEngineStarted) == 0x000001, "Wrong size on AVS_VehicleMaster_C_GetEngineStarted");
static_assert(offsetof(AVS_VehicleMaster_C_GetEngineStarted, Started) == 0x000000, "Member 'AVS_VehicleMaster_C_GetEngineStarted::Started' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetExitPoint
// 0x0880 (0x0880 - 0x0000)
struct AVS_VehicleMaster_C_GetExitPoint final
{
public:
	int32                                         SitIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Player;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CorrectLocation;                                   // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          YouCantExit;                                       // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocationIndex;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FindLocation;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_3;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_4;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0140(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_5;          // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_6;          // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SitsType                                    Temp_byte_Variable;                                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x01C8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3[0x1];                                      // 0x02C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x03E0(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x03F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckOneSits_Block;                       // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x04DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x04DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0558(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckOneSits_Block_1;                     // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x05EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EB[0x1];                                      // 0x05EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckOneSits_Block_2;                     // 0x05F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x05F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x05F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCorrectExitRotation_ReturnValue;       // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x05FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FB[0x5];                                      // 0x05FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_7;          // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0630(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_8;          // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x0678(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0762(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0763(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0764(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_765[0x3];                                      // 0x0765(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x07B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x07D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x07D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x07E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0808(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0820(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x0838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_854[0x4];                                      // 0x0854(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_5;                          // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetExitPoint) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetExitPoint");
static_assert(sizeof(AVS_VehicleMaster_C_GetExitPoint) == 0x000880, "Wrong size on AVS_VehicleMaster_C_GetExitPoint");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, SitIndex) == 0x000000, "Member 'AVS_VehicleMaster_C_GetExitPoint::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Param_Player) == 0x000008, "Member 'AVS_VehicleMaster_C_GetExitPoint::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Location) == 0x000010, "Member 'AVS_VehicleMaster_C_GetExitPoint::Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CorrectLocation) == 0x000028, "Member 'AVS_VehicleMaster_C_GetExitPoint::CorrectLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, YouCantExit) == 0x000029, "Member 'AVS_VehicleMaster_C_GetExitPoint::YouCantExit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, LocationIndex) == 0x00002C, "Member 'AVS_VehicleMaster_C_GetExitPoint::LocationIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, FindLocation) == 0x000030, "Member 'AVS_VehicleMaster_C_GetExitPoint::FindLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, ActorsToIgnore) == 0x000038, "Member 'AVS_VehicleMaster_C_GetExitPoint::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_GetSocketLocation_ReturnValue) == 0x000048, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_X) == 0x000060, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Y) == 0x000068, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Z) == 0x000070, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000078, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_X_1) == 0x000090, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Y_1) == 0x000098, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_GetSocketLocation_ReturnValue_2) == 0x0000A8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_X_2) == 0x0000C0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Y_2) == 0x0000C8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Z_2) == 0x0000D0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_bool_Variable) == 0x0000D8, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Not_PreBool_ReturnValue) == 0x0000D9, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_GetSocketLocation_ReturnValue_3) == 0x0000E0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_GetSocketLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_GetSocketLocation_ReturnValue_4) == 0x000110, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_GetSocketLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000128, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_object_Variable) == 0x000140, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_int_Variable) == 0x000154, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_int_Variable_1) == 0x000158, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_int_Variable_2) == 0x00015C, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_GetSocketLocation_ReturnValue_5) == 0x000160, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_GetSocketLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000178, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_GetSocketLocation_ReturnValue_6) == 0x000190, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_GetSocketLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_byte_Variable) == 0x0001A8, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0001B0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_object_Variable_1) == 0x0001C8, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_LineTraceSingle_OutHit) == 0x0001D8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_LineTraceSingle_ReturnValue) == 0x0002C0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x0002C1, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002C2, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Time) == 0x0002C4, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Distance) == 0x0002C8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Location) == 0x0002D0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x0002E8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Normal) == 0x000300, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x000318, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_PhysMat) == 0x000330, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitActor) == 0x000338, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitComponent) == 0x000340, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000348, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_BoneName) == 0x000350, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitItem) == 0x000358, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_ElementIndex) == 0x00035C, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_FaceIndex) == 0x000360, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_TraceStart) == 0x000368, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_TraceEnd) == 0x000380, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000398, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_X_3) == 0x0003B0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Y_3) == 0x0003B8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Z_3) == 0x0003C0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_int_Variable_3) == 0x0003C8, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003D0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0003D8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_IntInt_ReturnValue) == 0x0003DC, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_object_Variable_2) == 0x0003E0, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_LineTraceSingle_OutHit_1) == 0x0003F0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_LineTraceSingle_ReturnValue_1) == 0x0004D8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_CheckOneSits_Block) == 0x0004D9, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_CheckOneSits_Block' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0004DA, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0004DB, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Time_1) == 0x0004DC, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Distance_1) == 0x0004E0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Location_1) == 0x0004E8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000500, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Normal_1) == 0x000518, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000530, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_PhysMat_1) == 0x000548, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitActor_1) == 0x000550, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitComponent_1) == 0x000558, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitBoneName_1) == 0x000560, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_BoneName_1) == 0x000568, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitItem_1) == 0x000570, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_ElementIndex_1) == 0x000574, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_FaceIndex_1) == 0x000578, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_TraceStart_1) == 0x000580, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_TraceEnd_1) == 0x000598, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_VectorVector_ReturnValue_5) == 0x0005B0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_X_4) == 0x0005C8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Y_4) == 0x0005D0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Z_4) == 0x0005D8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0005E0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_CheckOneSits_Block_1) == 0x0005E8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_CheckOneSits_Block_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0005E9, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Not_PreBool_ReturnValue_1) == 0x0005EA, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_int_Array_Index_Variable) == 0x0005EC, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, K2Node_Select_Default) == 0x0005F0, "Member 'AVS_VehicleMaster_C_GetExitPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_CheckOneSits_Block_2) == 0x0005F4, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_CheckOneSits_Block_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0005F5, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BooleanAND_ReturnValue) == 0x0005F6, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_bool_True_if_break_was_hit_Variable) == 0x0005F7, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Not_PreBool_ReturnValue_2) == 0x0005F8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_HasCorrectExitRotation_ReturnValue) == 0x0005F9, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_HasCorrectExitRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BooleanAND_ReturnValue_1) == 0x0005FA, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_GetSocketLocation_ReturnValue_7) == 0x000600, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_GetSocketLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000618, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, K2Node_MakeArray_Array) == 0x000630, "Member 'AVS_VehicleMaster_C_GetExitPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_GetSocketLocation_ReturnValue_8) == 0x000640, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_GetSocketLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, Temp_int_Loop_Counter_Variable) == 0x000658, "Member 'AVS_VehicleMaster_C_GetExitPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000660, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_LineTraceSingle_OutHit_2) == 0x000678, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_LineTraceSingle_ReturnValue_2) == 0x000760, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000761, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BooleanAND_ReturnValue_2) == 0x000762, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000763, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000764, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Time_2) == 0x000768, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Distance_2) == 0x00076C, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Location_2) == 0x000770, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000788, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_Normal_2) == 0x0007A0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0007B8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_PhysMat_2) == 0x0007D0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitActor_2) == 0x0007D8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitComponent_2) == 0x0007E0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitBoneName_2) == 0x0007E8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_BoneName_2) == 0x0007F0, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_HitItem_2) == 0x0007F8, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_ElementIndex_2) == 0x0007FC, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_FaceIndex_2) == 0x000800, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_TraceStart_2) == 0x000808, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakHitResult_TraceEnd_2) == 0x000820, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_VectorVector_ReturnValue_8) == 0x000838, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Add_IntInt_ReturnValue_1) == 0x000850, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_X_5) == 0x000858, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Y_5) == 0x000860, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_BreakVector_Z_5) == 0x000868, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000870, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetExitPoint, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000878, "Member 'AVS_VehicleMaster_C_GetExitPoint::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetIsAccelerating
// 0x0020 (0x0020 - 0x0000)
struct AVS_VehicleMaster_C_GetIsAccelerating final
{
public:
	bool                                          IsAccelerating;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_getRpm_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_getIdleRpm_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetIsAccelerating) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetIsAccelerating");
static_assert(sizeof(AVS_VehicleMaster_C_GetIsAccelerating) == 0x000020, "Wrong size on AVS_VehicleMaster_C_GetIsAccelerating");
static_assert(offsetof(AVS_VehicleMaster_C_GetIsAccelerating, IsAccelerating) == 0x000000, "Member 'AVS_VehicleMaster_C_GetIsAccelerating::IsAccelerating' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetIsAccelerating, CallFunc_getRpm_ReturnValue) == 0x000004, "Member 'AVS_VehicleMaster_C_GetIsAccelerating::CallFunc_getRpm_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetIsAccelerating, CallFunc_getIdleRpm_ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_GetIsAccelerating::CallFunc_getIdleRpm_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetIsAccelerating, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000C, "Member 'AVS_VehicleMaster_C_GetIsAccelerating::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetIsAccelerating, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'AVS_VehicleMaster_C_GetIsAccelerating::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetIsAccelerating, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'AVS_VehicleMaster_C_GetIsAccelerating::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetOutAllPlayersInCar
// 0x0020 (0x0020 - 0x0000)
struct AVS_VehicleMaster_C_GetOutAllPlayersInCar final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetOutAllPlayersInCar) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetOutAllPlayersInCar");
static_assert(sizeof(AVS_VehicleMaster_C_GetOutAllPlayersInCar) == 0x000020, "Wrong size on AVS_VehicleMaster_C_GetOutAllPlayersInCar");
static_assert(offsetof(AVS_VehicleMaster_C_GetOutAllPlayersInCar, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AVS_VehicleMaster_C_GetOutAllPlayersInCar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetOutAllPlayersInCar, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AVS_VehicleMaster_C_GetOutAllPlayersInCar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetOutAllPlayersInCar, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_GetOutAllPlayersInCar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetOutAllPlayersInCar, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'AVS_VehicleMaster_C_GetOutAllPlayersInCar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetOutAllPlayersInCar, CallFunc_Array_Get_Item) == 0x000010, "Member 'AVS_VehicleMaster_C_GetOutAllPlayersInCar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetOutAllPlayersInCar, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'AVS_VehicleMaster_C_GetOutAllPlayersInCar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetOutAllPlayersInCar, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'AVS_VehicleMaster_C_GetOutAllPlayersInCar::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetPassengers
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_GetPassengers final
{
public:
	class APawn*                                  PassengerFL;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  PassengerBL;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  PassengerBR;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetPassengers) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetPassengers");
static_assert(sizeof(AVS_VehicleMaster_C_GetPassengers) == 0x000018, "Wrong size on AVS_VehicleMaster_C_GetPassengers");
static_assert(offsetof(AVS_VehicleMaster_C_GetPassengers, PassengerFL) == 0x000000, "Member 'AVS_VehicleMaster_C_GetPassengers::PassengerFL' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetPassengers, PassengerBL) == 0x000008, "Member 'AVS_VehicleMaster_C_GetPassengers::PassengerBL' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetPassengers, PassengerBR) == 0x000010, "Member 'AVS_VehicleMaster_C_GetPassengers::PassengerBR' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetSteering
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_GetSteering final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetSteering) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetSteering");
static_assert(sizeof(AVS_VehicleMaster_C_GetSteering) == 0x000008, "Wrong size on AVS_VehicleMaster_C_GetSteering");
static_assert(offsetof(AVS_VehicleMaster_C_GetSteering, Angle) == 0x000000, "Member 'AVS_VehicleMaster_C_GetSteering::Angle' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetSurfaceAmplitudeMultiplier
// 0x00C4 (0x00C4 - 0x0000)
struct AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PhysMatMultiplier;                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_6;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_7;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_8;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_9;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_10;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_11;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_12;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_13;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_14;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_15;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_16;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_17;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_18;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_19;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_20;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_21;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_22;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_23;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_24;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_25;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_26;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_27;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_28;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_29;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_30;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_31;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_32;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_33;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_34;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_35;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_36;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_37;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_38;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_39;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_40;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_41;                             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_42;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_43;                             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_44;                             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier");
static_assert(sizeof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier) == 0x0000C4, "Wrong size on AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, SurfaceType) == 0x000000, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::SurfaceType' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, PhysMatMultiplier) == 0x000004, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::PhysMatMultiplier' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_byte_Variable) == 0x000008, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable) == 0x00000C, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_1) == 0x000010, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_2) == 0x000014, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_3) == 0x000018, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_4) == 0x00001C, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_5) == 0x000020, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_6) == 0x000024, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_7) == 0x000028, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_8) == 0x00002C, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_9) == 0x000030, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_10) == 0x000034, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_11) == 0x000038, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_12) == 0x00003C, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_13) == 0x000040, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_14) == 0x000044, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_15) == 0x000048, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_16) == 0x00004C, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_17) == 0x000050, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_18) == 0x000054, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_19) == 0x000058, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_20) == 0x00005C, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_21) == 0x000060, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_22) == 0x000064, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_23) == 0x000068, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_24) == 0x00006C, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_25) == 0x000070, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_26) == 0x000074, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_27) == 0x000078, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_27' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_28) == 0x00007C, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_28' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_29) == 0x000080, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_29' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_30) == 0x000084, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_30' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_31) == 0x000088, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_31' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_32) == 0x00008C, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_32' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_33) == 0x000090, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_33' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_34) == 0x000094, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_34' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_35) == 0x000098, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_35' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_36) == 0x00009C, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_36' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_37) == 0x0000A0, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_37' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_38) == 0x0000A4, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_38' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_39) == 0x0000A8, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_39' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_40) == 0x0000AC, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_40' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_41) == 0x0000B0, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_41' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_42) == 0x0000B4, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_42' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_43) == 0x0000B8, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_43' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, Temp_real_Variable_44) == 0x0000BC, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::Temp_real_Variable_44' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier, K2Node_Select_Default) == 0x0000C0, "Member 'AVS_VehicleMaster_C_GetSurfaceAmplitudeMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetSurfaceDelayMultiplier
// 0x00C4 (0x00C4 - 0x0000)
struct AVS_VehicleMaster_C_GetSurfaceDelayMultiplier final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PhysMatMultiplier;                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_6;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_7;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_8;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_9;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_10;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_11;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_12;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_13;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_14;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_15;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_16;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_17;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_18;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_19;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_20;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_21;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_22;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_23;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_24;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_25;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_26;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_27;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_28;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_29;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_30;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_31;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_32;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_33;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_34;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_35;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_36;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_37;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_38;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_39;                             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_40;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_41;                             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_42;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_43;                             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_44;                             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_GetSurfaceDelayMultiplier");
static_assert(sizeof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier) == 0x0000C4, "Wrong size on AVS_VehicleMaster_C_GetSurfaceDelayMultiplier");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, SurfaceType) == 0x000000, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::SurfaceType' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, PhysMatMultiplier) == 0x000004, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::PhysMatMultiplier' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_byte_Variable) == 0x000008, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable) == 0x00000C, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_1) == 0x000010, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_2) == 0x000014, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_3) == 0x000018, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_4) == 0x00001C, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_5) == 0x000020, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_6) == 0x000024, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_7) == 0x000028, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_8) == 0x00002C, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_9) == 0x000030, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_10) == 0x000034, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_11) == 0x000038, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_12) == 0x00003C, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_13) == 0x000040, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_14) == 0x000044, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_15) == 0x000048, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_16) == 0x00004C, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_17) == 0x000050, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_18) == 0x000054, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_19) == 0x000058, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_20) == 0x00005C, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_21) == 0x000060, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_22) == 0x000064, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_23) == 0x000068, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_24) == 0x00006C, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_25) == 0x000070, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_26) == 0x000074, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_27) == 0x000078, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_27' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_28) == 0x00007C, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_28' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_29) == 0x000080, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_29' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_30) == 0x000084, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_30' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_31) == 0x000088, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_31' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_32) == 0x00008C, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_32' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_33) == 0x000090, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_33' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_34) == 0x000094, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_34' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_35) == 0x000098, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_35' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_36) == 0x00009C, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_36' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_37) == 0x0000A0, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_37' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_38) == 0x0000A4, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_38' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_39) == 0x0000A8, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_39' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_40) == 0x0000AC, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_40' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_41) == 0x0000B0, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_41' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_42) == 0x0000B4, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_42' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_43) == 0x0000B8, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_43' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, Temp_real_Variable_44) == 0x0000BC, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::Temp_real_Variable_44' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetSurfaceDelayMultiplier, K2Node_Select_Default) == 0x0000C0, "Member 'AVS_VehicleMaster_C_GetSurfaceDelayMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetTireVFX
// 0x00E0 (0x00E0 - 0x0000)
struct AVS_VehicleMaster_C_GetTireVFX final
{
public:
	EPhysicalSurface                              Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         NiagaraFX;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Succes;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_21;                              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_22;                              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_23;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_24;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_25;                              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_26;                              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_27;                              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_28;                              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_29;                              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_30;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_31;                              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_32;                              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_33;                              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_34;                              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_35;                              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_36;                              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_37;                              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_38;                              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_39;                              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_40;                              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_41;                              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_42;                              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_43;                              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_44;                              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_Map_Find_Value;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetTireVFX) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetTireVFX");
static_assert(sizeof(AVS_VehicleMaster_C_GetTireVFX) == 0x0000E0, "Wrong size on AVS_VehicleMaster_C_GetTireVFX");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Param_Index) == 0x000000, "Member 'AVS_VehicleMaster_C_GetTireVFX::Param_Index' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, NiagaraFX) == 0x000008, "Member 'AVS_VehicleMaster_C_GetTireVFX::NiagaraFX' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Succes) == 0x000010, "Member 'AVS_VehicleMaster_C_GetTireVFX::Succes' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_byte_Variable) == 0x000011, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable) == 0x000014, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_1) == 0x000018, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_2) == 0x00001C, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_3) == 0x000020, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_4) == 0x000024, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_5) == 0x000028, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_6) == 0x00002C, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_7) == 0x000030, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_8) == 0x000034, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_9) == 0x000038, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_10) == 0x00003C, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_11) == 0x000040, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_12) == 0x000044, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_13) == 0x000048, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_14) == 0x00004C, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_15) == 0x000050, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_16) == 0x000054, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_17) == 0x000058, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_18) == 0x00005C, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_19) == 0x000060, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_20) == 0x000064, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_21) == 0x000068, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_22) == 0x00006C, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_23) == 0x000070, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_23' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_24) == 0x000074, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_24' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_25) == 0x000078, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_25' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_26) == 0x00007C, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_26' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_27) == 0x000080, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_27' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_28) == 0x000084, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_28' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_29) == 0x000088, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_29' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_30) == 0x00008C, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_30' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_31) == 0x000090, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_31' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_32) == 0x000094, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_32' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_33) == 0x000098, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_33' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_34) == 0x00009C, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_34' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_35) == 0x0000A0, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_35' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_36) == 0x0000A4, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_36' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_37) == 0x0000A8, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_37' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_38) == 0x0000AC, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_38' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_39) == 0x0000B0, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_39' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_40) == 0x0000B4, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_40' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_41) == 0x0000B8, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_41' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_42) == 0x0000BC, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_42' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_43) == 0x0000C0, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_43' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, Temp_int_Variable_44) == 0x0000C4, "Member 'AVS_VehicleMaster_C_GetTireVFX::Temp_int_Variable_44' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, K2Node_Select_Default) == 0x0000C8, "Member 'AVS_VehicleMaster_C_GetTireVFX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'AVS_VehicleMaster_C_GetTireVFX::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetTireVFX, CallFunc_Map_Find_ReturnValue) == 0x0000D8, "Member 'AVS_VehicleMaster_C_GetTireVFX::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetVehicleBody
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_GetVehicleBody final
{
public:
	class USkeletalMeshComponent*                 Body;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetVehicleBody) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetVehicleBody");
static_assert(sizeof(AVS_VehicleMaster_C_GetVehicleBody) == 0x000008, "Wrong size on AVS_VehicleMaster_C_GetVehicleBody");
static_assert(offsetof(AVS_VehicleMaster_C_GetVehicleBody, Body) == 0x000000, "Member 'AVS_VehicleMaster_C_GetVehicleBody::Body' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetWheelPitches
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_GetWheelPitches final
{
public:
	TArray<double>                                Pitches;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(AVS_VehicleMaster_C_GetWheelPitches) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetWheelPitches");
static_assert(sizeof(AVS_VehicleMaster_C_GetWheelPitches) == 0x000010, "Wrong size on AVS_VehicleMaster_C_GetWheelPitches");
static_assert(offsetof(AVS_VehicleMaster_C_GetWheelPitches, Pitches) == 0x000000, "Member 'AVS_VehicleMaster_C_GetWheelPitches::Pitches' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.GetWheels
// 0x0028 (0x0028 - 0x0000)
struct AVS_VehicleMaster_C_GetWheels final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       LF;                                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       RF;                                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       LB;                                                // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       RB;                                                // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_GetWheels) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_GetWheels");
static_assert(sizeof(AVS_VehicleMaster_C_GetWheels) == 0x000028, "Wrong size on AVS_VehicleMaster_C_GetWheels");
static_assert(offsetof(AVS_VehicleMaster_C_GetWheels, IsValid) == 0x000000, "Member 'AVS_VehicleMaster_C_GetWheels::IsValid' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetWheels, LF) == 0x000008, "Member 'AVS_VehicleMaster_C_GetWheels::LF' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetWheels, RF) == 0x000010, "Member 'AVS_VehicleMaster_C_GetWheels::RF' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetWheels, LB) == 0x000018, "Member 'AVS_VehicleMaster_C_GetWheels::LB' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_GetWheels, RB) == 0x000020, "Member 'AVS_VehicleMaster_C_GetWheels::RB' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.HasCorrectExitRotation
// 0x0048 (0x0048 - 0x0000)
struct AVS_VehicleMaster_C_HasCorrectExitRotation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_HasCorrectExitRotation) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_HasCorrectExitRotation");
static_assert(sizeof(AVS_VehicleMaster_C_HasCorrectExitRotation) == 0x000048, "Wrong size on AVS_VehicleMaster_C_HasCorrectExitRotation");
static_assert(offsetof(AVS_VehicleMaster_C_HasCorrectExitRotation, ReturnValue) == 0x000000, "Member 'AVS_VehicleMaster_C_HasCorrectExitRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_HasCorrectExitRotation, CallFunc_GetUpVector_ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_HasCorrectExitRotation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_HasCorrectExitRotation, CallFunc_GetActorUpVector_ReturnValue) == 0x000020, "Member 'AVS_VehicleMaster_C_HasCorrectExitRotation::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_HasCorrectExitRotation, CallFunc_Dot_VectorVector_ReturnValue) == 0x000038, "Member 'AVS_VehicleMaster_C_HasCorrectExitRotation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_HasCorrectExitRotation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_HasCorrectExitRotation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.HasDriver
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_HasDriver final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_HasDriver) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_HasDriver");
static_assert(sizeof(AVS_VehicleMaster_C_HasDriver) == 0x000001, "Wrong size on AVS_VehicleMaster_C_HasDriver");
static_assert(offsetof(AVS_VehicleMaster_C_HasDriver, ReturnValue) == 0x000000, "Member 'AVS_VehicleMaster_C_HasDriver::ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.InpActEvt_TurnEngine_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_InpActEvt_TurnEngine_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_InpActEvt_TurnEngine_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_InpActEvt_TurnEngine_K2Node_InputActionEvent_2");
static_assert(sizeof(AVS_VehicleMaster_C_InpActEvt_TurnEngine_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on AVS_VehicleMaster_C_InpActEvt_TurnEngine_K2Node_InputActionEvent_2");
static_assert(offsetof(AVS_VehicleMaster_C_InpActEvt_TurnEngine_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'AVS_VehicleMaster_C_InpActEvt_TurnEngine_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.InpActEvt_TurnLights_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_InpActEvt_TurnLights_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_InpActEvt_TurnLights_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_InpActEvt_TurnLights_K2Node_InputActionEvent_0");
static_assert(sizeof(AVS_VehicleMaster_C_InpActEvt_TurnLights_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on AVS_VehicleMaster_C_InpActEvt_TurnLights_K2Node_InputActionEvent_0");
static_assert(offsetof(AVS_VehicleMaster_C_InpActEvt_TurnLights_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'AVS_VehicleMaster_C_InpActEvt_TurnLights_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.Interact_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_Interact_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Interact_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Interact_K2Node_InputActionEvent_1");
static_assert(sizeof(AVS_VehicleMaster_C_Interact_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on AVS_VehicleMaster_C_Interact_K2Node_InputActionEvent_1");
static_assert(offsetof(AVS_VehicleMaster_C_Interact_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'AVS_VehicleMaster_C_Interact_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.InpAxisEvt_ForwardThrottle_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct AVS_VehicleMaster_C_InpAxisEvt_ForwardThrottle_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_InpAxisEvt_ForwardThrottle_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_InpAxisEvt_ForwardThrottle_K2Node_InputAxisEvent_1");
static_assert(sizeof(AVS_VehicleMaster_C_InpAxisEvt_ForwardThrottle_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on AVS_VehicleMaster_C_InpAxisEvt_ForwardThrottle_K2Node_InputAxisEvent_1");
static_assert(offsetof(AVS_VehicleMaster_C_InpAxisEvt_ForwardThrottle_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'AVS_VehicleMaster_C_InpAxisEvt_ForwardThrottle_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.InpAxisEvt_HandbrakeAxis_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct AVS_VehicleMaster_C_InpAxisEvt_HandbrakeAxis_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_InpAxisEvt_HandbrakeAxis_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_InpAxisEvt_HandbrakeAxis_K2Node_InputAxisEvent_0");
static_assert(sizeof(AVS_VehicleMaster_C_InpAxisEvt_HandbrakeAxis_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on AVS_VehicleMaster_C_InpAxisEvt_HandbrakeAxis_K2Node_InputAxisEvent_0");
static_assert(offsetof(AVS_VehicleMaster_C_InpAxisEvt_HandbrakeAxis_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'AVS_VehicleMaster_C_InpAxisEvt_HandbrakeAxis_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_3
// 0x0004 (0x0004 - 0x0000)
struct AVS_VehicleMaster_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_3 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_3) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_3");
static_assert(sizeof(AVS_VehicleMaster_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_3) == 0x000004, "Wrong size on AVS_VehicleMaster_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_3");
static_assert(offsetof(AVS_VehicleMaster_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_3, AxisValue) == 0x000000, "Member 'AVS_VehicleMaster_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_3::AxisValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.InpAxisEvt_SteeringWheels_K2Node_InputAxisEvent_2
// 0x0004 (0x0004 - 0x0000)
struct AVS_VehicleMaster_C_InpAxisEvt_SteeringWheels_K2Node_InputAxisEvent_2 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_InpAxisEvt_SteeringWheels_K2Node_InputAxisEvent_2) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_InpAxisEvt_SteeringWheels_K2Node_InputAxisEvent_2");
static_assert(sizeof(AVS_VehicleMaster_C_InpAxisEvt_SteeringWheels_K2Node_InputAxisEvent_2) == 0x000004, "Wrong size on AVS_VehicleMaster_C_InpAxisEvt_SteeringWheels_K2Node_InputAxisEvent_2");
static_assert(offsetof(AVS_VehicleMaster_C_InpAxisEvt_SteeringWheels_K2Node_InputAxisEvent_2, AxisValue) == 0x000000, "Member 'AVS_VehicleMaster_C_InpAxisEvt_SteeringWheels_K2Node_InputAxisEvent_2::AxisValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_2
// 0x0004 (0x0004 - 0x0000)
struct AVS_VehicleMaster_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2");
static_assert(sizeof(AVS_VehicleMaster_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2) == 0x000004, "Wrong size on AVS_VehicleMaster_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2");
static_assert(offsetof(AVS_VehicleMaster_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2, AxisValue) == 0x000000, "Member 'AVS_VehicleMaster_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_2::AxisValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.IsInViewport
// 0x0078 (0x0078 - 0x0000)
struct AVS_VehicleMaster_C_IsInViewport final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_IsInViewport) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_IsInViewport");
static_assert(sizeof(AVS_VehicleMaster_C_IsInViewport) == 0x000078, "Wrong size on AVS_VehicleMaster_C_IsInViewport");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, ReturnValue) == 0x000000, "Member 'AVS_VehicleMaster_C_IsInViewport::ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_GetViewportSize_ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_BreakVector2D_X) == 0x000030, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x000048, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x000058, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_BreakVector2D_X_1) == 0x000060, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_BreakVector2D_Y_1) == 0x000068, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000071, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000072, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000073, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_BooleanAND_ReturnValue) == 0x000074, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_BooleanAND_ReturnValue_1) == 0x000075, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsInViewport, CallFunc_BooleanAND_ReturnValue_2) == 0x000076, "Member 'AVS_VehicleMaster_C_IsInViewport::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_IsLocked_) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_IsLocked_");
static_assert(sizeof(AVS_VehicleMaster_C_IsLocked_) == 0x000001, "Wrong size on AVS_VehicleMaster_C_IsLocked_");
static_assert(offsetof(AVS_VehicleMaster_C_IsLocked_, Result) == 0x000000, "Member 'AVS_VehicleMaster_C_IsLocked_::Result' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.IsPartyMember
// 0x0028 (0x0028 - 0x0000)
struct AVS_VehicleMaster_C_IsPartyMember final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_IsPartyMember) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_IsPartyMember");
static_assert(sizeof(AVS_VehicleMaster_C_IsPartyMember) == 0x000028, "Wrong size on AVS_VehicleMaster_C_IsPartyMember");
static_assert(offsetof(AVS_VehicleMaster_C_IsPartyMember, ReturnValue) == 0x000000, "Member 'AVS_VehicleMaster_C_IsPartyMember::ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPartyMember, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_IsPartyMember::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPartyMember, K2Node_DynamicCast_AsPS_TDB) == 0x000010, "Member 'AVS_VehicleMaster_C_IsPartyMember::K2Node_DynamicCast_AsPS_TDB' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPartyMember, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AVS_VehicleMaster_C_IsPartyMember::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPartyMember, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'AVS_VehicleMaster_C_IsPartyMember::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPartyMember, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'AVS_VehicleMaster_C_IsPartyMember::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.IsPlayerOwner_OrTeamMate
// 0x0058 (0x0058 - 0x0000)
struct AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Teammate;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OwnerOrTeammate;                                   // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APawn*>                          AllTeammates;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate");
static_assert(sizeof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate) == 0x000058, "Wrong size on AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, Teammate) == 0x000008, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::Teammate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, OwnerOrTeammate) == 0x000009, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::OwnerOrTeammate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, AllTeammates) == 0x000010, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::AllTeammates' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, Temp_int_Array_Index_Variable) == 0x000024, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, K2Node_DynamicCast_AsPS_TDB) == 0x000038, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::K2Node_DynamicCast_AsPS_TDB' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, CallFunc_Array_Get_Item) == 0x000048, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000055, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, CallFunc_BooleanAND_ReturnValue) == 0x000056, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000057, "Member 'AVS_VehicleMaster_C_IsPlayerOwner_OrTeamMate::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.IsUnderWater
// 0x0050 (0x0050 - 0x0000)
struct AVS_VehicleMaster_C_IsUnderWater final
{
public:
	double                                        WaterZlevel;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_IsUnderWater) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_IsUnderWater");
static_assert(sizeof(AVS_VehicleMaster_C_IsUnderWater) == 0x000050, "Wrong size on AVS_VehicleMaster_C_IsUnderWater");
static_assert(offsetof(AVS_VehicleMaster_C_IsUnderWater, WaterZlevel) == 0x000000, "Member 'AVS_VehicleMaster_C_IsUnderWater::WaterZlevel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsUnderWater, ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_IsUnderWater::ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsUnderWater, CallFunc_GetCenterOfMass_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_IsUnderWater::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsUnderWater, CallFunc_BreakVector_X) == 0x000028, "Member 'AVS_VehicleMaster_C_IsUnderWater::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsUnderWater, CallFunc_BreakVector_Y) == 0x000030, "Member 'AVS_VehicleMaster_C_IsUnderWater::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsUnderWater, CallFunc_BreakVector_Z) == 0x000038, "Member 'AVS_VehicleMaster_C_IsUnderWater::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsUnderWater, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_IsUnderWater::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_IsUnderWater, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000048, "Member 'AVS_VehicleMaster_C_IsUnderWater::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.IsVehicle
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_IsVehicle final
{
public:
	bool                                          Param_IsVehicle;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_IsVehicle) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_IsVehicle");
static_assert(sizeof(AVS_VehicleMaster_C_IsVehicle) == 0x000001, "Wrong size on AVS_VehicleMaster_C_IsVehicle");
static_assert(offsetof(AVS_VehicleMaster_C_IsVehicle, Param_IsVehicle) == 0x000000, "Member 'AVS_VehicleMaster_C_IsVehicle::Param_IsVehicle' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.KillAllPrint
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_KillAllPrint final
{
public:
	TArray<class ASurvivalPlayer_C*>              InputPin;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AVS_VehicleMaster_C_KillAllPrint) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_KillAllPrint");
static_assert(sizeof(AVS_VehicleMaster_C_KillAllPrint) == 0x000010, "Wrong size on AVS_VehicleMaster_C_KillAllPrint");
static_assert(offsetof(AVS_VehicleMaster_C_KillAllPrint, InputPin) == 0x000000, "Member 'AVS_VehicleMaster_C_KillAllPrint::InputPin' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.KillUnderWater
// 0x0060 (0x0060 - 0x0000)
struct AVS_VehicleMaster_C_KillUnderWater final
{
public:
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_KillUnderWater) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_KillUnderWater");
static_assert(sizeof(AVS_VehicleMaster_C_KillUnderWater) == 0x000060, "Wrong size on AVS_VehicleMaster_C_KillUnderWater");
static_assert(offsetof(AVS_VehicleMaster_C_KillUnderWater, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000000, "Member 'AVS_VehicleMaster_C_KillUnderWater::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_KillUnderWater, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'AVS_VehicleMaster_C_KillUnderWater::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_KillUnderWater, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000028, "Member 'AVS_VehicleMaster_C_KillUnderWater::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_KillUnderWater, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_KillUnderWater::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_KillUnderWater, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000048, "Member 'AVS_VehicleMaster_C_KillUnderWater::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.LinearDampingFromFlatTires
// 0x0048 (0x0048 - 0x0000)
struct AVS_VehicleMaster_C_LinearDampingFromFlatTires final
{
public:
	double                                        InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamping_PDA_AVS_C*                     DampingDA;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         FlatWheelsNumber;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OutputPin;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _FlatTiresCount;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_LinearDampingFromFlatTires) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_LinearDampingFromFlatTires");
static_assert(sizeof(AVS_VehicleMaster_C_LinearDampingFromFlatTires) == 0x000048, "Wrong size on AVS_VehicleMaster_C_LinearDampingFromFlatTires");
static_assert(offsetof(AVS_VehicleMaster_C_LinearDampingFromFlatTires, InputPin) == 0x000000, "Member 'AVS_VehicleMaster_C_LinearDampingFromFlatTires::InputPin' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_LinearDampingFromFlatTires, DampingDA) == 0x000008, "Member 'AVS_VehicleMaster_C_LinearDampingFromFlatTires::DampingDA' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_LinearDampingFromFlatTires, FlatWheelsNumber) == 0x000010, "Member 'AVS_VehicleMaster_C_LinearDampingFromFlatTires::FlatWheelsNumber' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_LinearDampingFromFlatTires, OutputPin) == 0x000018, "Member 'AVS_VehicleMaster_C_LinearDampingFromFlatTires::OutputPin' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_LinearDampingFromFlatTires, _FlatTiresCount) == 0x000020, "Member 'AVS_VehicleMaster_C_LinearDampingFromFlatTires::_FlatTiresCount' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_LinearDampingFromFlatTires, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'AVS_VehicleMaster_C_LinearDampingFromFlatTires::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_LinearDampingFromFlatTires, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'AVS_VehicleMaster_C_LinearDampingFromFlatTires::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_LinearDampingFromFlatTires, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'AVS_VehicleMaster_C_LinearDampingFromFlatTires::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_LinearDampingFromFlatTires, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_LinearDampingFromFlatTires::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.MakeSpeedDependentNoise
// 0x00B0 (0x00B0 - 0x0000)
struct AVS_VehicleMaster_C_MakeSpeedDependentNoise final
{
public:
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_1;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpeed_CurrentSpeedKMH_2;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeNoise_MaxRange_ImplicitCast;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeNoise_MaxRange_ImplicitCast_1;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_2;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeNoise_MaxRange_ImplicitCast_2;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_MakeSpeedDependentNoise) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_MakeSpeedDependentNoise");
static_assert(sizeof(AVS_VehicleMaster_C_MakeSpeedDependentNoise) == 0x0000B0, "Wrong size on AVS_VehicleMaster_C_MakeSpeedDependentNoise");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_GetCurrentSpeed_CurrentSpeedKMH) == 0x000000, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_GetCurrentSpeed_CurrentSpeedKMH' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_1) == 0x000004, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_GetCurrentSpeed_CurrentSpeedKMH_2) == 0x000018, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_GetCurrentSpeed_CurrentSpeedKMH_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000020, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, K2Node_DynamicCast_AsSurvival_Player) == 0x000048, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000051, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_IsValid_ReturnValue) == 0x000052, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000070, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000088, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000090, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_MakeNoise_MaxRange_ImplicitCast) == 0x000098, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_MakeNoise_MaxRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_MakeNoise_MaxRange_ImplicitCast_1) == 0x00009C, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_MakeNoise_MaxRange_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_MapRangeClamped_Value_ImplicitCast_2) == 0x0000A0, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_MapRangeClamped_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MakeSpeedDependentNoise, CallFunc_MakeNoise_MaxRange_ImplicitCast_2) == 0x0000A8, "Member 'AVS_VehicleMaster_C_MakeSpeedDependentNoise::CallFunc_MakeNoise_MaxRange_ImplicitCast_2' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_ChangeCollisionWithDelay
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             Channel;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            NewResponse;                                       // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay) == 0x000010, "Wrong size on AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay, Delay) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay::Delay' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay, Channel) == 0x000008, "Member 'AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay::Channel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay, NewResponse) == 0x000009, "Member 'AVS_VehicleMaster_C_Multi_ChangeCollisionWithDelay::NewResponse' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_EnableSmoothSync
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_Multi_EnableSmoothSync final
{
public:
	class ASurvivalPlayer_C*                      Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewEnable;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_EnableSmoothSync) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Multi_EnableSmoothSync");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_EnableSmoothSync) == 0x000010, "Wrong size on AVS_VehicleMaster_C_Multi_EnableSmoothSync");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_EnableSmoothSync, Target) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_EnableSmoothSync::Target' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_EnableSmoothSync, NewEnable) == 0x000008, "Member 'AVS_VehicleMaster_C_Multi_EnableSmoothSync::NewEnable' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_FlatWheelsEnable
// 0x0004 (0x0004 - 0x0000)
struct AVS_VehicleMaster_C_Multi_FlatWheelsEnable final
{
public:
	int32                                         WheelIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_FlatWheelsEnable) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_Multi_FlatWheelsEnable");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_FlatWheelsEnable) == 0x000004, "Wrong size on AVS_VehicleMaster_C_Multi_FlatWheelsEnable");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_FlatWheelsEnable, WheelIndex) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_FlatWheelsEnable::WheelIndex' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_HitZombieSFX
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_Multi_HitZombieSFX final
{
public:
	struct FVector                                Location_Location;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_HitZombieSFX) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Multi_HitZombieSFX");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_HitZombieSFX) == 0x000018, "Wrong size on AVS_VehicleMaster_C_Multi_HitZombieSFX");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_HitZombieSFX, Location_Location) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_HitZombieSFX::Location_Location' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_PhysicsToggle
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_Multi_PhysicsToggle final
{
public:
	bool                                          NewEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_PhysicsToggle) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_Multi_PhysicsToggle");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_PhysicsToggle) == 0x000001, "Wrong size on AVS_VehicleMaster_C_Multi_PhysicsToggle");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_PhysicsToggle, NewEnable) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_PhysicsToggle::NewEnable' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_ResetCameraPos
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_Multi_ResetCameraPos final
{
public:
	class ASurvivalPlayer_C*                      Surv;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_ResetCameraPos) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Multi_ResetCameraPos");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_ResetCameraPos) == 0x000008, "Wrong size on AVS_VehicleMaster_C_Multi_ResetCameraPos");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_ResetCameraPos, Surv) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_ResetCameraPos::Surv' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_ResetSurvRotation
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_Multi_ResetSurvRotation final
{
public:
	int32                                         SitIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      SurvivalPlayer;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_ResetSurvRotation) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Multi_ResetSurvRotation");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_ResetSurvRotation) == 0x000010, "Wrong size on AVS_VehicleMaster_C_Multi_ResetSurvRotation");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_ResetSurvRotation, SitIndex) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_ResetSurvRotation::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_ResetSurvRotation, SurvivalPlayer) == 0x000008, "Member 'AVS_VehicleMaster_C_Multi_ResetSurvRotation::SurvivalPlayer' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_RPClocation
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_Multi_RPClocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_RPClocation) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Multi_RPClocation");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_RPClocation) == 0x000018, "Wrong size on AVS_VehicleMaster_C_Multi_RPClocation");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_RPClocation, Location) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_RPClocation::Location' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_SetPassengerCameraMode
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_Multi_SetPassengerCameraMode final
{
public:
	class ASurvivalPlayer_C*                      Surv;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_SetPassengerCameraMode) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Multi_SetPassengerCameraMode");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_SetPassengerCameraMode) == 0x000008, "Wrong size on AVS_VehicleMaster_C_Multi_SetPassengerCameraMode");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_SetPassengerCameraMode, Surv) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_SetPassengerCameraMode::Surv' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_SetReplication
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_Multi_SetReplication final
{
public:
	bool                                          Replicate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_SetReplication) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_Multi_SetReplication");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_SetReplication) == 0x000001, "Wrong size on AVS_VehicleMaster_C_Multi_SetReplication");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_SetReplication, Replicate) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_SetReplication::Replicate' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_SetSurvIdleAnimation
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation final
{
public:
	class ASurvivalPlayer_C*                      SurvivalPlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InCar;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Driver;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SitIndex;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation) == 0x000010, "Wrong size on AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation, SurvivalPlayer) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation::SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation, InCar) == 0x000008, "Member 'AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation::InCar' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation, Driver) == 0x000009, "Member 'AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation::Driver' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation, SitIndex) == 0x00000C, "Member 'AVS_VehicleMaster_C_Multi_SetSurvIdleAnimation::SitIndex' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_TurnLight
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_Multi_TurnLight final
{
public:
	bool                                          Visibility;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_TurnLight) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_Multi_TurnLight");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_TurnLight) == 0x000001, "Wrong size on AVS_VehicleMaster_C_Multi_TurnLight");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_TurnLight, Visibility) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_TurnLight::Visibility' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multi_Uncrouch
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_Multi_Uncrouch final
{
public:
	class ASurvivalPlayer_V2_C*                   Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multi_Uncrouch) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Multi_Uncrouch");
static_assert(sizeof(AVS_VehicleMaster_C_Multi_Uncrouch) == 0x000008, "Wrong size on AVS_VehicleMaster_C_Multi_Uncrouch");
static_assert(offsetof(AVS_VehicleMaster_C_Multi_Uncrouch, Target) == 0x000000, "Member 'AVS_VehicleMaster_C_Multi_Uncrouch::Target' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.MultiCallDecreaseDurability
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_MultiCallDecreaseDurability final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_MultiCallDecreaseDurability) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_MultiCallDecreaseDurability");
static_assert(sizeof(AVS_VehicleMaster_C_MultiCallDecreaseDurability) == 0x000008, "Wrong size on AVS_VehicleMaster_C_MultiCallDecreaseDurability");
static_assert(offsetof(AVS_VehicleMaster_C_MultiCallDecreaseDurability, Damage) == 0x000000, "Member 'AVS_VehicleMaster_C_MultiCallDecreaseDurability::Damage' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.MulticallEnterVehicleAsDriver
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_MulticallEnterVehicleAsDriver final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FromRancho;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_MulticallEnterVehicleAsDriver) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_MulticallEnterVehicleAsDriver");
static_assert(sizeof(AVS_VehicleMaster_C_MulticallEnterVehicleAsDriver) == 0x000010, "Wrong size on AVS_VehicleMaster_C_MulticallEnterVehicleAsDriver");
static_assert(offsetof(AVS_VehicleMaster_C_MulticallEnterVehicleAsDriver, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_MulticallEnterVehicleAsDriver::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MulticallEnterVehicleAsDriver, FromRancho) == 0x000008, "Member 'AVS_VehicleMaster_C_MulticallEnterVehicleAsDriver::FromRancho' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.MulticallEnterVehicleAsPassenger
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_MulticallEnterVehicleAsPassenger final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_MulticallEnterVehicleAsPassenger) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_MulticallEnterVehicleAsPassenger");
static_assert(sizeof(AVS_VehicleMaster_C_MulticallEnterVehicleAsPassenger) == 0x000010, "Wrong size on AVS_VehicleMaster_C_MulticallEnterVehicleAsPassenger");
static_assert(offsetof(AVS_VehicleMaster_C_MulticallEnterVehicleAsPassenger, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_MulticallEnterVehicleAsPassenger::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MulticallEnterVehicleAsPassenger, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_MulticallEnterVehicleAsPassenger::SitIndex' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.MultiCallExitVehicleAsDriver
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_MultiCallExitVehicleAsDriver final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipExitOnLocation;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_MultiCallExitVehicleAsDriver) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_MultiCallExitVehicleAsDriver");
static_assert(sizeof(AVS_VehicleMaster_C_MultiCallExitVehicleAsDriver) == 0x000010, "Wrong size on AVS_VehicleMaster_C_MultiCallExitVehicleAsDriver");
static_assert(offsetof(AVS_VehicleMaster_C_MultiCallExitVehicleAsDriver, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_MultiCallExitVehicleAsDriver::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MultiCallExitVehicleAsDriver, SkipExitOnLocation) == 0x000008, "Member 'AVS_VehicleMaster_C_MultiCallExitVehicleAsDriver::SkipExitOnLocation' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.MultiCallExitVehicleAsPassenger
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_MultiCallExitVehicleAsPassenger final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipExitOnLocation;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_MultiCallExitVehicleAsPassenger) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_MultiCallExitVehicleAsPassenger");
static_assert(sizeof(AVS_VehicleMaster_C_MultiCallExitVehicleAsPassenger) == 0x000010, "Wrong size on AVS_VehicleMaster_C_MultiCallExitVehicleAsPassenger");
static_assert(offsetof(AVS_VehicleMaster_C_MultiCallExitVehicleAsPassenger, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_MultiCallExitVehicleAsPassenger::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_MultiCallExitVehicleAsPassenger, SkipExitOnLocation) == 0x000008, "Member 'AVS_VehicleMaster_C_MultiCallExitVehicleAsPassenger::SkipExitOnLocation' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.multo_SetReplicateMovement
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_Multo_SetReplicateMovement final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bInReplicateMovement;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Multo_SetReplicateMovement) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Multo_SetReplicateMovement");
static_assert(sizeof(AVS_VehicleMaster_C_Multo_SetReplicateMovement) == 0x000010, "Wrong size on AVS_VehicleMaster_C_Multo_SetReplicateMovement");
static_assert(offsetof(AVS_VehicleMaster_C_Multo_SetReplicateMovement, Target) == 0x000000, "Member 'AVS_VehicleMaster_C_Multo_SetReplicateMovement::Target' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Multo_SetReplicateMovement, bInReplicateMovement) == 0x000008, "Member 'AVS_VehicleMaster_C_Multo_SetReplicateMovement::bInReplicateMovement' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnBeginInteract final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnBeginInteract) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnBeginInteract");
static_assert(sizeof(AVS_VehicleMaster_C_OnBeginInteract) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnBeginInteract");
static_assert(offsetof(AVS_VehicleMaster_C_OnBeginInteract, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_OnBeginInteract::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnBlendOut_74EEDDDE40927650F01D18B3256F472C
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnBlendOut_74EEDDDE40927650F01D18B3256F472C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnBlendOut_74EEDDDE40927650F01D18B3256F472C) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_OnBlendOut_74EEDDDE40927650F01D18B3256F472C");
static_assert(sizeof(AVS_VehicleMaster_C_OnBlendOut_74EEDDDE40927650F01D18B3256F472C) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnBlendOut_74EEDDDE40927650F01D18B3256F472C");
static_assert(offsetof(AVS_VehicleMaster_C_OnBlendOut_74EEDDDE40927650F01D18B3256F472C, NotifyName) == 0x000000, "Member 'AVS_VehicleMaster_C_OnBlendOut_74EEDDDE40927650F01D18B3256F472C::NotifyName' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnCompleted_74EEDDDE40927650F01D18B3256F472C
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnCompleted_74EEDDDE40927650F01D18B3256F472C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnCompleted_74EEDDDE40927650F01D18B3256F472C) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_OnCompleted_74EEDDDE40927650F01D18B3256F472C");
static_assert(sizeof(AVS_VehicleMaster_C_OnCompleted_74EEDDDE40927650F01D18B3256F472C) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnCompleted_74EEDDDE40927650F01D18B3256F472C");
static_assert(offsetof(AVS_VehicleMaster_C_OnCompleted_74EEDDDE40927650F01D18B3256F472C, NotifyName) == 0x000000, "Member 'AVS_VehicleMaster_C_OnCompleted_74EEDDDE40927650F01D18B3256F472C::NotifyName' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnDestroy
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnDestroy final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnDestroy) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnDestroy");
static_assert(sizeof(AVS_VehicleMaster_C_OnDestroy) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnDestroy");
static_assert(offsetof(AVS_VehicleMaster_C_OnDestroy, DestroyedActor) == 0x000000, "Member 'AVS_VehicleMaster_C_OnDestroy::DestroyedActor' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnFocused
// 0x0090 (0x0090 - 0x0000)
struct AVS_VehicleMaster_C_OnFocused final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_PlayerMain_C*                      GUI;                                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlayerSits_CanEnter;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckPlayerSits_SitIndex;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetInteractTimeVehicleByActiveIndex_Time; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Interact_C*                          CallFunc_GetInteractTimeVehicleByActiveIndex_InteractWidget; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowed_Showed;                         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnFocused) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnFocused");
static_assert(sizeof(AVS_VehicleMaster_C_OnFocused) == 0x000090, "Wrong size on AVS_VehicleMaster_C_OnFocused");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_OnFocused::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, HighlightActor) == 0x000008, "Member 'AVS_VehicleMaster_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'AVS_VehicleMaster_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, InteractType) == 0x000018, "Member 'AVS_VehicleMaster_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, LateTime) == 0x000020, "Member 'AVS_VehicleMaster_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, GUI) == 0x000028, "Member 'AVS_VehicleMaster_C_OnFocused::GUI' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'AVS_VehicleMaster_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, K2Node_DynamicCast_AsSurvival_Player) == 0x000038, "Member 'AVS_VehicleMaster_C_OnFocused::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'AVS_VehicleMaster_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, CallFunc_GetHUD_ReturnValue) == 0x000048, "Member 'AVS_VehicleMaster_C_OnFocused::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, CallFunc_CheckPlayerSits_CanEnter) == 0x000050, "Member 'AVS_VehicleMaster_C_OnFocused::CallFunc_CheckPlayerSits_CanEnter' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, CallFunc_CheckPlayerSits_SitIndex) == 0x000054, "Member 'AVS_VehicleMaster_C_OnFocused::CallFunc_CheckPlayerSits_SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000058, "Member 'AVS_VehicleMaster_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'AVS_VehicleMaster_C_OnFocused::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000070, "Member 'AVS_VehicleMaster_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, CallFunc_GetInteractTimeVehicleByActiveIndex_Time) == 0x000078, "Member 'AVS_VehicleMaster_C_OnFocused::CallFunc_GetInteractTimeVehicleByActiveIndex_Time' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, CallFunc_GetInteractTimeVehicleByActiveIndex_InteractWidget) == 0x000080, "Member 'AVS_VehicleMaster_C_OnFocused::CallFunc_GetInteractTimeVehicleByActiveIndex_InteractWidget' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnFocused, CallFunc_GetShowed_Showed) == 0x000088, "Member 'AVS_VehicleMaster_C_OnFocused::CallFunc_GetShowed_Showed' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnInteract final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnInteract) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnInteract");
static_assert(sizeof(AVS_VehicleMaster_C_OnInteract) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnInteract");
static_assert(offsetof(AVS_VehicleMaster_C_OnInteract, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_OnInteract::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnInteract2 final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnInteract2) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnInteract2");
static_assert(sizeof(AVS_VehicleMaster_C_OnInteract2) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnInteract2");
static_assert(offsetof(AVS_VehicleMaster_C_OnInteract2, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_OnInteract2::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnInteract3 final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnInteract3) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnInteract3");
static_assert(sizeof(AVS_VehicleMaster_C_OnInteract3) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnInteract3");
static_assert(offsetof(AVS_VehicleMaster_C_OnInteract3, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_OnInteract3::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_OnInteractVehicle final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnInteractVehicle) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnInteractVehicle");
static_assert(sizeof(AVS_VehicleMaster_C_OnInteractVehicle) == 0x000010, "Wrong size on AVS_VehicleMaster_C_OnInteractVehicle");
static_assert(offsetof(AVS_VehicleMaster_C_OnInteractVehicle, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_OnInteractVehicle::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'AVS_VehicleMaster_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnInterrupted_74EEDDDE40927650F01D18B3256F472C
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnInterrupted_74EEDDDE40927650F01D18B3256F472C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnInterrupted_74EEDDDE40927650F01D18B3256F472C) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_OnInterrupted_74EEDDDE40927650F01D18B3256F472C");
static_assert(sizeof(AVS_VehicleMaster_C_OnInterrupted_74EEDDDE40927650F01D18B3256F472C) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnInterrupted_74EEDDDE40927650F01D18B3256F472C");
static_assert(offsetof(AVS_VehicleMaster_C_OnInterrupted_74EEDDDE40927650F01D18B3256F472C, NotifyName) == 0x000000, "Member 'AVS_VehicleMaster_C_OnInterrupted_74EEDDDE40927650F01D18B3256F472C::NotifyName' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnLevelLoaded
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_OnLevelLoaded final
{
public:
	class FName                                   Level;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_Player;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnLevelLoaded) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnLevelLoaded");
static_assert(sizeof(AVS_VehicleMaster_C_OnLevelLoaded) == 0x000010, "Wrong size on AVS_VehicleMaster_C_OnLevelLoaded");
static_assert(offsetof(AVS_VehicleMaster_C_OnLevelLoaded, Level) == 0x000000, "Member 'AVS_VehicleMaster_C_OnLevelLoaded::Level' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnLevelLoaded, Param_Player) == 0x000008, "Member 'AVS_VehicleMaster_C_OnLevelLoaded::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnLevelUnloaded
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_OnLevelUnloaded final
{
public:
	class FName                                   Level;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_Player;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnLevelUnloaded) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnLevelUnloaded");
static_assert(sizeof(AVS_VehicleMaster_C_OnLevelUnloaded) == 0x000010, "Wrong size on AVS_VehicleMaster_C_OnLevelUnloaded");
static_assert(offsetof(AVS_VehicleMaster_C_OnLevelUnloaded, Level) == 0x000000, "Member 'AVS_VehicleMaster_C_OnLevelUnloaded::Level' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OnLevelUnloaded, Param_Player) == 0x000008, "Member 'AVS_VehicleMaster_C_OnLevelUnloaded::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnLocalInteract final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnLocalInteract) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnLocalInteract");
static_assert(sizeof(AVS_VehicleMaster_C_OnLocalInteract) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnLocalInteract");
static_assert(offsetof(AVS_VehicleMaster_C_OnLocalInteract, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_OnLocalInteract::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnLostFocus final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnLostFocus) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnLostFocus");
static_assert(sizeof(AVS_VehicleMaster_C_OnLostFocus) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnLostFocus");
static_assert(offsetof(AVS_VehicleMaster_C_OnLostFocus, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_OnLostFocus::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnNotifyBegin_74EEDDDE40927650F01D18B3256F472C
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnNotifyBegin_74EEDDDE40927650F01D18B3256F472C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnNotifyBegin_74EEDDDE40927650F01D18B3256F472C) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_OnNotifyBegin_74EEDDDE40927650F01D18B3256F472C");
static_assert(sizeof(AVS_VehicleMaster_C_OnNotifyBegin_74EEDDDE40927650F01D18B3256F472C) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnNotifyBegin_74EEDDDE40927650F01D18B3256F472C");
static_assert(offsetof(AVS_VehicleMaster_C_OnNotifyBegin_74EEDDDE40927650F01D18B3256F472C, NotifyName) == 0x000000, "Member 'AVS_VehicleMaster_C_OnNotifyBegin_74EEDDDE40927650F01D18B3256F472C::NotifyName' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnNotifyEnd_74EEDDDE40927650F01D18B3256F472C
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnNotifyEnd_74EEDDDE40927650F01D18B3256F472C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnNotifyEnd_74EEDDDE40927650F01D18B3256F472C) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_OnNotifyEnd_74EEDDDE40927650F01D18B3256F472C");
static_assert(sizeof(AVS_VehicleMaster_C_OnNotifyEnd_74EEDDDE40927650F01D18B3256F472C) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnNotifyEnd_74EEDDDE40927650F01D18B3256F472C");
static_assert(offsetof(AVS_VehicleMaster_C_OnNotifyEnd_74EEDDDE40927650F01D18B3256F472C, NotifyName) == 0x000000, "Member 'AVS_VehicleMaster_C_OnNotifyEnd_74EEDDDE40927650F01D18B3256F472C::NotifyName' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnRep_bBlockInputs
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_OnRep_bBlockInputs final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnRep_bBlockInputs) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_OnRep_bBlockInputs");
static_assert(sizeof(AVS_VehicleMaster_C_OnRep_bBlockInputs) == 0x000001, "Wrong size on AVS_VehicleMaster_C_OnRep_bBlockInputs");
static_assert(offsetof(AVS_VehicleMaster_C_OnRep_bBlockInputs, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'AVS_VehicleMaster_C_OnRep_bBlockInputs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnSeen final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnSeen) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnSeen");
static_assert(sizeof(AVS_VehicleMaster_C_OnSeen) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnSeen");
static_assert(offsetof(AVS_VehicleMaster_C_OnSeen, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_OnSeen::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnSimulatedPhysicsChanged
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_OnSimulatedPhysicsChanged final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnSimulatedPhysicsChanged) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_OnSimulatedPhysicsChanged");
static_assert(sizeof(AVS_VehicleMaster_C_OnSimulatedPhysicsChanged) == 0x000001, "Wrong size on AVS_VehicleMaster_C_OnSimulatedPhysicsChanged");
static_assert(offsetof(AVS_VehicleMaster_C_OnSimulatedPhysicsChanged, IsEnabled) == 0x000000, "Member 'AVS_VehicleMaster_C_OnSimulatedPhysicsChanged::IsEnabled' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_OnStopInteract final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OnStopInteract) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OnStopInteract");
static_assert(sizeof(AVS_VehicleMaster_C_OnStopInteract) == 0x000008, "Wrong size on AVS_VehicleMaster_C_OnStopInteract");
static_assert(offsetof(AVS_VehicleMaster_C_OnStopInteract, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_OnStopInteract::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.OwnerDeathOrDestroy
// 0x0020 (0x0020 - 0x0000)
struct AVS_VehicleMaster_C_OwnerDeathOrDestroy final
{
public:
	bool                                          Param_OwnerDeadOrDestroyed;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_OwnerDeathOrDestroy) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_OwnerDeathOrDestroy");
static_assert(sizeof(AVS_VehicleMaster_C_OwnerDeathOrDestroy) == 0x000020, "Wrong size on AVS_VehicleMaster_C_OwnerDeathOrDestroy");
static_assert(offsetof(AVS_VehicleMaster_C_OwnerDeathOrDestroy, Param_OwnerDeadOrDestroyed) == 0x000000, "Member 'AVS_VehicleMaster_C_OwnerDeathOrDestroy::Param_OwnerDeadOrDestroyed' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OwnerDeathOrDestroy, CallFunc_Array_IsEmpty_ReturnValue) == 0x000001, "Member 'AVS_VehicleMaster_C_OwnerDeathOrDestroy::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OwnerDeathOrDestroy, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'AVS_VehicleMaster_C_OwnerDeathOrDestroy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_OwnerDeathOrDestroy, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'AVS_VehicleMaster_C_OwnerDeathOrDestroy::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.PassengerGetInCar
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_PassengerGetInCar final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_PassengerGetInCar) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_PassengerGetInCar");
static_assert(sizeof(AVS_VehicleMaster_C_PassengerGetInCar) == 0x000010, "Wrong size on AVS_VehicleMaster_C_PassengerGetInCar");
static_assert(offsetof(AVS_VehicleMaster_C_PassengerGetInCar, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_PassengerGetInCar::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_PassengerGetInCar, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_PassengerGetInCar::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_PassengerGetInCar, SkipAnimation) == 0x00000C, "Member 'AVS_VehicleMaster_C_PassengerGetInCar::SkipAnimation' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.PassengerGetOutCar
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_PassengerGetOutCar final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipExitOnLocation;                                // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_PassengerGetOutCar) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_PassengerGetOutCar");
static_assert(sizeof(AVS_VehicleMaster_C_PassengerGetOutCar) == 0x000010, "Wrong size on AVS_VehicleMaster_C_PassengerGetOutCar");
static_assert(offsetof(AVS_VehicleMaster_C_PassengerGetOutCar, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_PassengerGetOutCar::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_PassengerGetOutCar, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_PassengerGetOutCar::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_PassengerGetOutCar, SkipAnimation) == 0x00000C, "Member 'AVS_VehicleMaster_C_PassengerGetOutCar::SkipAnimation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_PassengerGetOutCar, SkipExitOnLocation) == 0x00000D, "Member 'AVS_VehicleMaster_C_PassengerGetOutCar::SkipExitOnLocation' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.PlayDriverIdleAnim
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_PlayDriverIdleAnim final
{
public:
	class ASurvivalPlayer_C*                      Surv;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_PlayDriverIdleAnim) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_PlayDriverIdleAnim");
static_assert(sizeof(AVS_VehicleMaster_C_PlayDriverIdleAnim) == 0x000008, "Wrong size on AVS_VehicleMaster_C_PlayDriverIdleAnim");
static_assert(offsetof(AVS_VehicleMaster_C_PlayDriverIdleAnim, Surv) == 0x000000, "Member 'AVS_VehicleMaster_C_PlayDriverIdleAnim::Surv' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.PlayPassengerIdleAnim
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_PlayPassengerIdleAnim final
{
public:
	class ASurvivalPlayer_C*                      Surv;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_PlayPassengerIdleAnim) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_PlayPassengerIdleAnim");
static_assert(sizeof(AVS_VehicleMaster_C_PlayPassengerIdleAnim) == 0x000010, "Wrong size on AVS_VehicleMaster_C_PlayPassengerIdleAnim");
static_assert(offsetof(AVS_VehicleMaster_C_PlayPassengerIdleAnim, Surv) == 0x000000, "Member 'AVS_VehicleMaster_C_PlayPassengerIdleAnim::Surv' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_PlayPassengerIdleAnim, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_PlayPassengerIdleAnim::SitIndex' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct AVS_VehicleMaster_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ReceiveAnyDamage");
static_assert(sizeof(AVS_VehicleMaster_C_ReceiveAnyDamage) == 0x000020, "Wrong size on AVS_VehicleMaster_C_ReceiveAnyDamage");
static_assert(offsetof(AVS_VehicleMaster_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'AVS_VehicleMaster_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'AVS_VehicleMaster_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'AVS_VehicleMaster_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'AVS_VehicleMaster_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AVS_VehicleMaster_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ReceiveTick) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_ReceiveTick");
static_assert(sizeof(AVS_VehicleMaster_C_ReceiveTick) == 0x000004, "Wrong size on AVS_VehicleMaster_C_ReceiveTick");
static_assert(offsetof(AVS_VehicleMaster_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AVS_VehicleMaster_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.RemovePlayerFromCarOnLogOut
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut final
{
public:
	const class ASurvivalPlayer_C*                Surv;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         _Index;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut");
static_assert(sizeof(AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut) == 0x000018, "Wrong size on AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut");
static_assert(offsetof(AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut, Surv) == 0x000000, "Member 'AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut::Surv' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut, _Index) == 0x000008, "Member 'AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut::_Index' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut, CallFunc_Array_RemoveItem_ReturnValue) == 0x00000E, "Member 'AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut, CallFunc_Array_Find_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000014, "Member 'AVS_VehicleMaster_C_RemovePlayerFromCarOnLogOut::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ReroutePlayerIndex
// 0x0078 (0x0078 - 0x0000)
struct AVS_VehicleMaster_C_ReroutePlayerIndex final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Surv;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         NewSitIndex;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnim;                                          // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Allow_;                                            // 0x001D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleSit                          CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AnySitsEmpty_Zaebis1;                     // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AnySitsEmpty_EmptyIndex1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AnySitsEmpty_Zaebis1_1;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AnySitsEmpty_EmptyIndex1_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleSit                          CallFunc_Array_Get_Item_1;                         // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VehicleSit                          CallFunc_Array_Get_Item_2;                         // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ReroutePlayerIndex) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ReroutePlayerIndex");
static_assert(sizeof(AVS_VehicleMaster_C_ReroutePlayerIndex) == 0x000078, "Wrong size on AVS_VehicleMaster_C_ReroutePlayerIndex");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, SkipAnimation) == 0x00000C, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::SkipAnimation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, Surv) == 0x000010, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::Surv' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, NewSitIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::NewSitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, SkipAnim) == 0x00001C, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::SkipAnim' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, Allow_) == 0x00001D, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::Allow_' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000031, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000033, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000035, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_AnySitsEmpty_Zaebis1) == 0x000036, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_AnySitsEmpty_Zaebis1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_AnySitsEmpty_EmptyIndex1) == 0x000038, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_AnySitsEmpty_EmptyIndex1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x00003C, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_AnySitsEmpty_Zaebis1_1) == 0x00003D, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_AnySitsEmpty_Zaebis1_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_AnySitsEmpty_EmptyIndex1_1) == 0x000040, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_AnySitsEmpty_EmptyIndex1_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_Not_PreBool_ReturnValue_1) == 0x000058, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_BooleanAND_ReturnValue_2) == 0x000070, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_BooleanOR_ReturnValue) == 0x000071, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_BooleanAND_ReturnValue_3) == 0x000072, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ReroutePlayerIndex, CallFunc_BooleanOR_ReturnValue_1) == 0x000073, "Member 'AVS_VehicleMaster_C_ReroutePlayerIndex::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.RunSetAnimFromCar
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_RunSetAnimFromCar final
{
public:
	class ASurvivalPlayer_C*                      Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InCar;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Driver;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CarTipe;                                           // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SitIndex;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_RunSetAnimFromCar) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_RunSetAnimFromCar");
static_assert(sizeof(AVS_VehicleMaster_C_RunSetAnimFromCar) == 0x000010, "Wrong size on AVS_VehicleMaster_C_RunSetAnimFromCar");
static_assert(offsetof(AVS_VehicleMaster_C_RunSetAnimFromCar, Target) == 0x000000, "Member 'AVS_VehicleMaster_C_RunSetAnimFromCar::Target' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_RunSetAnimFromCar, InCar) == 0x000008, "Member 'AVS_VehicleMaster_C_RunSetAnimFromCar::InCar' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_RunSetAnimFromCar, Driver) == 0x000009, "Member 'AVS_VehicleMaster_C_RunSetAnimFromCar::Driver' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_RunSetAnimFromCar, CarTipe) == 0x00000A, "Member 'AVS_VehicleMaster_C_RunSetAnimFromCar::CarTipe' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_RunSetAnimFromCar, SitIndex) == 0x00000C, "Member 'AVS_VehicleMaster_C_RunSetAnimFromCar::SitIndex' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.serv_ApplyDamage
// 0x0004 (0x0004 - 0x0000)
struct AVS_VehicleMaster_C_Serv_ApplyDamage final
{
public:
	float                                         BaseDamage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_ApplyDamage) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_Serv_ApplyDamage");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_ApplyDamage) == 0x000004, "Wrong size on AVS_VehicleMaster_C_Serv_ApplyDamage");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_ApplyDamage, BaseDamage) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_ApplyDamage::BaseDamage' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.Serv_BlockInputs
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_Serv_BlockInputs final
{
public:
	bool                                          Param_bBlockInputs;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_BlockInputs) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_Serv_BlockInputs");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_BlockInputs) == 0x000001, "Wrong size on AVS_VehicleMaster_C_Serv_BlockInputs");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_BlockInputs, Param_bBlockInputs) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_BlockInputs::Param_bBlockInputs' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.serv_FlatWheelsEnable
// 0x0004 (0x0004 - 0x0000)
struct AVS_VehicleMaster_C_Serv_FlatWheelsEnable final
{
public:
	int32                                         WheelIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_FlatWheelsEnable) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_Serv_FlatWheelsEnable");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_FlatWheelsEnable) == 0x000004, "Wrong size on AVS_VehicleMaster_C_Serv_FlatWheelsEnable");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_FlatWheelsEnable, WheelIndex) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_FlatWheelsEnable::WheelIndex' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.serv_PhysicsToggle
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_Serv_PhysicsToggle final
{
public:
	bool                                          NewEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_PhysicsToggle) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_Serv_PhysicsToggle");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_PhysicsToggle) == 0x000001, "Wrong size on AVS_VehicleMaster_C_Serv_PhysicsToggle");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_PhysicsToggle, NewEnable) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_PhysicsToggle::NewEnable' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.serv_ResetCameraPos
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_Serv_ResetCameraPos final
{
public:
	class ASurvivalPlayer_C*                      Surv;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_ResetCameraPos) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Serv_ResetCameraPos");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_ResetCameraPos) == 0x000008, "Wrong size on AVS_VehicleMaster_C_Serv_ResetCameraPos");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_ResetCameraPos, Surv) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_ResetCameraPos::Surv' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.serv_RPClocation
// 0x0060 (0x0060 - 0x0000)
struct AVS_VehicleMaster_C_Serv_RPClocation final
{
public:
	struct FTransform                             Location;                                          // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_RPClocation) == 0x000010, "Wrong alignment on AVS_VehicleMaster_C_Serv_RPClocation");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_RPClocation) == 0x000060, "Wrong size on AVS_VehicleMaster_C_Serv_RPClocation");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_RPClocation, Location) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_RPClocation::Location' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.serv_SetReplication
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_Serv_SetReplication final
{
public:
	bool                                          Replicate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_SetReplication) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_Serv_SetReplication");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_SetReplication) == 0x000001, "Wrong size on AVS_VehicleMaster_C_Serv_SetReplication");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_SetReplication, Replicate) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_SetReplication::Replicate' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.serv_SwitchSits
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_Serv_SwitchSits final
{
public:
	int32                                         DesireSitIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Player;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_SwitchSits) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Serv_SwitchSits");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_SwitchSits) == 0x000010, "Wrong size on AVS_VehicleMaster_C_Serv_SwitchSits");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_SwitchSits, DesireSitIndex) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_SwitchSits::DesireSitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_SwitchSits, Param_Player) == 0x000008, "Member 'AVS_VehicleMaster_C_Serv_SwitchSits::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.serv_TakenDamage
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_Serv_TakenDamage final
{
public:
	class ASurvivalPlayer_C*                      Surv;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DontAnimate;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EffectDamage;                                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HungerDamage;                                      // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_TakenDamage) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_Serv_TakenDamage");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_TakenDamage) == 0x000018, "Wrong size on AVS_VehicleMaster_C_Serv_TakenDamage");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_TakenDamage, Surv) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_TakenDamage::Surv' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_TakenDamage, Damage) == 0x000008, "Member 'AVS_VehicleMaster_C_Serv_TakenDamage::Damage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_TakenDamage, DontAnimate) == 0x000010, "Member 'AVS_VehicleMaster_C_Serv_TakenDamage::DontAnimate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_TakenDamage, EffectDamage) == 0x000011, "Member 'AVS_VehicleMaster_C_Serv_TakenDamage::EffectDamage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_TakenDamage, HungerDamage) == 0x000012, "Member 'AVS_VehicleMaster_C_Serv_TakenDamage::HungerDamage' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.serv_ToggleSwitchSitsCD
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_Serv_ToggleSwitchSitsCD final
{
public:
	bool                                          Param_SwitchCoolDown;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_ToggleSwitchSitsCD) == 0x000004, "Wrong alignment on AVS_VehicleMaster_C_Serv_ToggleSwitchSitsCD");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_ToggleSwitchSitsCD) == 0x000008, "Wrong size on AVS_VehicleMaster_C_Serv_ToggleSwitchSitsCD");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_ToggleSwitchSitsCD, Param_SwitchCoolDown) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_ToggleSwitchSitsCD::Param_SwitchCoolDown' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_ToggleSwitchSitsCD, Duration) == 0x000004, "Member 'AVS_VehicleMaster_C_Serv_ToggleSwitchSitsCD::Duration' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.serv_TurnLight
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_Serv_TurnLight final
{
public:
	bool                                          Visibility;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Serv_TurnLight) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_Serv_TurnLight");
static_assert(sizeof(AVS_VehicleMaster_C_Serv_TurnLight) == 0x000001, "Wrong size on AVS_VehicleMaster_C_Serv_TurnLight");
static_assert(offsetof(AVS_VehicleMaster_C_Serv_TurnLight, Visibility) == 0x000000, "Member 'AVS_VehicleMaster_C_Serv_TurnLight::Visibility' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ServerCallExitVehicle
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_ServerCallExitVehicle final
{
public:
	class AActor*                                 Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ServerCallExitVehicle) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ServerCallExitVehicle");
static_assert(sizeof(AVS_VehicleMaster_C_ServerCallExitVehicle) == 0x000010, "Wrong size on AVS_VehicleMaster_C_ServerCallExitVehicle");
static_assert(offsetof(AVS_VehicleMaster_C_ServerCallExitVehicle, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ServerCallExitVehicle::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ServerCallExitVehicle, SkipAnimation) == 0x000008, "Member 'AVS_VehicleMaster_C_ServerCallExitVehicle::SkipAnimation' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ServerCallSetEngineStarted
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_ServerCallSetEngineStarted final
{
public:
	bool                                          Param_EngineStarted;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ServerCallSetEngineStarted) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_ServerCallSetEngineStarted");
static_assert(sizeof(AVS_VehicleMaster_C_ServerCallSetEngineStarted) == 0x000001, "Wrong size on AVS_VehicleMaster_C_ServerCallSetEngineStarted");
static_assert(offsetof(AVS_VehicleMaster_C_ServerCallSetEngineStarted, Param_EngineStarted) == 0x000000, "Member 'AVS_VehicleMaster_C_ServerCallSetEngineStarted::Param_EngineStarted' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ServerEnterVehicleAsDriver
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_ServerEnterVehicleAsDriver final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FromRancho;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ServerEnterVehicleAsDriver) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ServerEnterVehicleAsDriver");
static_assert(sizeof(AVS_VehicleMaster_C_ServerEnterVehicleAsDriver) == 0x000018, "Wrong size on AVS_VehicleMaster_C_ServerEnterVehicleAsDriver");
static_assert(offsetof(AVS_VehicleMaster_C_ServerEnterVehicleAsDriver, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ServerEnterVehicleAsDriver::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ServerEnterVehicleAsDriver, FromRancho) == 0x000008, "Member 'AVS_VehicleMaster_C_ServerEnterVehicleAsDriver::FromRancho' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ServerEnterVehicleAsDriver, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_ServerEnterVehicleAsDriver::CallFunc_GetController_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ServerEnterVehicleAsPassenger
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_ServerEnterVehicleAsPassenger final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ServerEnterVehicleAsPassenger) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ServerEnterVehicleAsPassenger");
static_assert(sizeof(AVS_VehicleMaster_C_ServerEnterVehicleAsPassenger) == 0x000010, "Wrong size on AVS_VehicleMaster_C_ServerEnterVehicleAsPassenger");
static_assert(offsetof(AVS_VehicleMaster_C_ServerEnterVehicleAsPassenger, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ServerEnterVehicleAsPassenger::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ServerEnterVehicleAsPassenger, SitIndex) == 0x000008, "Member 'AVS_VehicleMaster_C_ServerEnterVehicleAsPassenger::SitIndex' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ServerExitVehicleAsDriver
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_ServerExitVehicleAsDriver final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipExitOnLocation;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CarIsEmpty_Empty;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ServerExitVehicleAsDriver) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ServerExitVehicleAsDriver");
static_assert(sizeof(AVS_VehicleMaster_C_ServerExitVehicleAsDriver) == 0x000010, "Wrong size on AVS_VehicleMaster_C_ServerExitVehicleAsDriver");
static_assert(offsetof(AVS_VehicleMaster_C_ServerExitVehicleAsDriver, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ServerExitVehicleAsDriver::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ServerExitVehicleAsDriver, SkipExitOnLocation) == 0x000008, "Member 'AVS_VehicleMaster_C_ServerExitVehicleAsDriver::SkipExitOnLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ServerExitVehicleAsDriver, CallFunc_CarIsEmpty_Empty) == 0x000009, "Member 'AVS_VehicleMaster_C_ServerExitVehicleAsDriver::CallFunc_CarIsEmpty_Empty' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ServerExitVehicleAsPassenger
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_ServerExitVehicleAsPassenger final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipExitOnLocation;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CarIsEmpty_Empty;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ServerExitVehicleAsPassenger) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ServerExitVehicleAsPassenger");
static_assert(sizeof(AVS_VehicleMaster_C_ServerExitVehicleAsPassenger) == 0x000010, "Wrong size on AVS_VehicleMaster_C_ServerExitVehicleAsPassenger");
static_assert(offsetof(AVS_VehicleMaster_C_ServerExitVehicleAsPassenger, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_ServerExitVehicleAsPassenger::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ServerExitVehicleAsPassenger, SkipExitOnLocation) == 0x000008, "Member 'AVS_VehicleMaster_C_ServerExitVehicleAsPassenger::SkipExitOnLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ServerExitVehicleAsPassenger, CallFunc_CarIsEmpty_Empty) == 0x000009, "Member 'AVS_VehicleMaster_C_ServerExitVehicleAsPassenger::CallFunc_CarIsEmpty_Empty' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_Set3DWidgetVisibility");
static_assert(sizeof(AVS_VehicleMaster_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on AVS_VehicleMaster_C_Set3DWidgetVisibility");
static_assert(offsetof(AVS_VehicleMaster_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'AVS_VehicleMaster_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SetActorToPelvisLocation
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_SetActorToPelvisLocation final
{
public:
	class ASurvivalPlayer_C*                      PlayerToKill;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SetActorToPelvisLocation) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SetActorToPelvisLocation");
static_assert(sizeof(AVS_VehicleMaster_C_SetActorToPelvisLocation) == 0x000008, "Wrong size on AVS_VehicleMaster_C_SetActorToPelvisLocation");
static_assert(offsetof(AVS_VehicleMaster_C_SetActorToPelvisLocation, PlayerToKill) == 0x000000, "Member 'AVS_VehicleMaster_C_SetActorToPelvisLocation::PlayerToKill' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SetBoost
// 0x0002 (0x0002 - 0x0000)
struct AVS_VehicleMaster_C_SetBoost final
{
public:
	bool                                          NewBoost;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SetBoost) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_SetBoost");
static_assert(sizeof(AVS_VehicleMaster_C_SetBoost) == 0x000002, "Wrong size on AVS_VehicleMaster_C_SetBoost");
static_assert(offsetof(AVS_VehicleMaster_C_SetBoost, NewBoost) == 0x000000, "Member 'AVS_VehicleMaster_C_SetBoost::NewBoost' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetBoost, Success) == 0x000001, "Member 'AVS_VehicleMaster_C_SetBoost::Success' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SetHighlightedCarWithDelay
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_SetHighlightedCarWithDelay final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      Surv;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SetHighlightedCarWithDelay) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SetHighlightedCarWithDelay");
static_assert(sizeof(AVS_VehicleMaster_C_SetHighlightedCarWithDelay) == 0x000010, "Wrong size on AVS_VehicleMaster_C_SetHighlightedCarWithDelay");
static_assert(offsetof(AVS_VehicleMaster_C_SetHighlightedCarWithDelay, Delay) == 0x000000, "Member 'AVS_VehicleMaster_C_SetHighlightedCarWithDelay::Delay' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetHighlightedCarWithDelay, Surv) == 0x000008, "Member 'AVS_VehicleMaster_C_SetHighlightedCarWithDelay::Surv' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SetPhysicsAfterDelay
// 0x0010 (0x0010 - 0x0000)
struct AVS_VehicleMaster_C_SetPhysicsAfterDelay final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewEnable;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SetPhysicsAfterDelay) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SetPhysicsAfterDelay");
static_assert(sizeof(AVS_VehicleMaster_C_SetPhysicsAfterDelay) == 0x000010, "Wrong size on AVS_VehicleMaster_C_SetPhysicsAfterDelay");
static_assert(offsetof(AVS_VehicleMaster_C_SetPhysicsAfterDelay, Delay) == 0x000000, "Member 'AVS_VehicleMaster_C_SetPhysicsAfterDelay::Delay' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetPhysicsAfterDelay, NewEnable) == 0x000008, "Member 'AVS_VehicleMaster_C_SetPhysicsAfterDelay::NewEnable' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SetStatBeforeSave
// 0x0090 (0x0090 - 0x0000)
struct AVS_VehicleMaster_C_SetStatBeforeSave final
{
public:
	class ASurvivalPlayer_C*                      Param_CarOwner;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Fuel;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Durablility;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_CarIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Stats;                                             // 0x0020(0x0010)(Parm, OutParm)
	TArray<class FString>                         CallFunc_GetCarsStat_Stats;                        // 0x0030(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_EncodeCarsStat_Fuel;                      // 0x0040(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_EncodeCarsStat_Durability;                // 0x0050(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_SetStatInArray_FuelStats;                 // 0x0060(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_SetStatInArray_DurabilityStats;           // 0x0070(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_CodeCarsStat_Stats;                       // 0x0080(0x0010)(ReferenceParm)
};
static_assert(alignof(AVS_VehicleMaster_C_SetStatBeforeSave) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SetStatBeforeSave");
static_assert(sizeof(AVS_VehicleMaster_C_SetStatBeforeSave) == 0x000090, "Wrong size on AVS_VehicleMaster_C_SetStatBeforeSave");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, Param_CarOwner) == 0x000000, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::Param_CarOwner' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, Fuel) == 0x000008, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::Fuel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, Durablility) == 0x000010, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::Durablility' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, Param_CarIndex) == 0x000018, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::Param_CarIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, Stats) == 0x000020, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::Stats' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, CallFunc_GetCarsStat_Stats) == 0x000030, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::CallFunc_GetCarsStat_Stats' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, CallFunc_EncodeCarsStat_Fuel) == 0x000040, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::CallFunc_EncodeCarsStat_Fuel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, CallFunc_EncodeCarsStat_Durability) == 0x000050, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::CallFunc_EncodeCarsStat_Durability' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, CallFunc_SetStatInArray_FuelStats) == 0x000060, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::CallFunc_SetStatInArray_FuelStats' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, CallFunc_SetStatInArray_DurabilityStats) == 0x000070, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::CallFunc_SetStatInArray_DurabilityStats' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatBeforeSave, CallFunc_CodeCarsStat_Stats) == 0x000080, "Member 'AVS_VehicleMaster_C_SetStatBeforeSave::CallFunc_CodeCarsStat_Stats' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SetStatInArray
// 0x0078 (0x0078 - 0x0000)
struct AVS_VehicleMaster_C_SetStatInArray final
{
public:
	TArray<double>                                FuelStat;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<double>                                DurabilityStat;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Fuel;                                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Durablility;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_CarIndex;                                    // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                FuelStats;                                         // 0x0038(0x0010)(Parm, OutParm)
	TArray<double>                                DurabilityStats;                                   // 0x0048(0x0010)(Parm, OutParm)
	TArray<double>                                _Durability_;                                      // 0x0058(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                _Fuel_;                                            // 0x0068(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(AVS_VehicleMaster_C_SetStatInArray) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SetStatInArray");
static_assert(sizeof(AVS_VehicleMaster_C_SetStatInArray) == 0x000078, "Wrong size on AVS_VehicleMaster_C_SetStatInArray");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatInArray, FuelStat) == 0x000000, "Member 'AVS_VehicleMaster_C_SetStatInArray::FuelStat' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatInArray, DurabilityStat) == 0x000010, "Member 'AVS_VehicleMaster_C_SetStatInArray::DurabilityStat' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatInArray, Fuel) == 0x000020, "Member 'AVS_VehicleMaster_C_SetStatInArray::Fuel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatInArray, Durablility) == 0x000028, "Member 'AVS_VehicleMaster_C_SetStatInArray::Durablility' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatInArray, Param_CarIndex) == 0x000030, "Member 'AVS_VehicleMaster_C_SetStatInArray::Param_CarIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatInArray, FuelStats) == 0x000038, "Member 'AVS_VehicleMaster_C_SetStatInArray::FuelStats' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatInArray, DurabilityStats) == 0x000048, "Member 'AVS_VehicleMaster_C_SetStatInArray::DurabilityStats' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatInArray, _Durability_) == 0x000058, "Member 'AVS_VehicleMaster_C_SetStatInArray::_Durability_' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetStatInArray, _Fuel_) == 0x000068, "Member 'AVS_VehicleMaster_C_SetStatInArray::_Fuel_' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SetSurvIdleAnimation
// 0x00C0 (0x00C0 - 0x0000)
struct AVS_VehicleMaster_C_SetSurvIdleAnimation final
{
public:
	class ASurvivalPlayer_C*                      SurvivalPlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InCar;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Driver;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SitIndex;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECarTipe                                      CallFunc_GetCarTipe_CarTipe;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class ISurvAnimInterface_C>  K2Node_DynamicCast_AsSurv_Anim_Interface;          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDriving_Nothing;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SetSurvIdleAnimation) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SetSurvIdleAnimation");
static_assert(sizeof(AVS_VehicleMaster_C_SetSurvIdleAnimation) == 0x0000C0, "Wrong size on AVS_VehicleMaster_C_SetSurvIdleAnimation");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, SurvivalPlayer) == 0x000000, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, InCar) == 0x000008, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::InCar' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, Driver) == 0x000009, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::Driver' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, SitIndex) == 0x00000C, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::SitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_GetCarTipe_CarTipe) == 0x000010, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_GetCarTipe_CarTipe' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_Conv_BoolToString_ReturnValue) == 0x000028, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000038, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000048, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, K2Node_DynamicCast_AsSurv_Anim_Interface) == 0x000060, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::K2Node_DynamicCast_AsSurv_Anim_Interface' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_SetDriving_Nothing) == 0x000088, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_SetDriving_Nothing' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetSurvIdleAnimation, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'AVS_VehicleMaster_C_SetSurvIdleAnimation::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct AVS_VehicleMaster_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(AVS_VehicleMaster_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on AVS_VehicleMaster_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(AVS_VehicleMaster_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'AVS_VehicleMaster_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SetupCarNoiseTimer
// 0x0020 (0x0020 - 0x0000)
struct AVS_VehicleMaster_C_SetupCarNoiseTimer final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SetupCarNoiseTimer) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SetupCarNoiseTimer");
static_assert(sizeof(AVS_VehicleMaster_C_SetupCarNoiseTimer) == 0x000020, "Wrong size on AVS_VehicleMaster_C_SetupCarNoiseTimer");
static_assert(offsetof(AVS_VehicleMaster_C_SetupCarNoiseTimer, Enable) == 0x000000, "Member 'AVS_VehicleMaster_C_SetupCarNoiseTimer::Enable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetupCarNoiseTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000001, "Member 'AVS_VehicleMaster_C_SetupCarNoiseTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetupCarNoiseTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'AVS_VehicleMaster_C_SetupCarNoiseTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetupCarNoiseTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'AVS_VehicleMaster_C_SetupCarNoiseTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SetVehicleSit
// 0x0020 (0x0020 - 0x0000)
struct AVS_VehicleMaster_C_SetVehicleSit final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Item_Is_Busy;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Item_Sitter;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_VehicleSit                          K2Node_MakeStruct_S_VehicleSit;                    // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SetVehicleSit) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SetVehicleSit");
static_assert(sizeof(AVS_VehicleMaster_C_SetVehicleSit) == 0x000020, "Wrong size on AVS_VehicleMaster_C_SetVehicleSit");
static_assert(offsetof(AVS_VehicleMaster_C_SetVehicleSit, Param_Index) == 0x000000, "Member 'AVS_VehicleMaster_C_SetVehicleSit::Param_Index' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetVehicleSit, Item_Is_Busy) == 0x000004, "Member 'AVS_VehicleMaster_C_SetVehicleSit::Item_Is_Busy' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetVehicleSit, Item_Sitter) == 0x000008, "Member 'AVS_VehicleMaster_C_SetVehicleSit::Item_Sitter' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SetVehicleSit, K2Node_MakeStruct_S_VehicleSit) == 0x000010, "Member 'AVS_VehicleMaster_C_SetVehicleSit::K2Node_MakeStruct_S_VehicleSit' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.Show_Hide All Mesh
// 0x0003 (0x0003 - 0x0000)
struct AVS_VehicleMaster_C_Show_Hide_All_Mesh final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Show_Hide_All_Mesh) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_Show_Hide_All_Mesh");
static_assert(sizeof(AVS_VehicleMaster_C_Show_Hide_All_Mesh) == 0x000003, "Wrong size on AVS_VehicleMaster_C_Show_Hide_All_Mesh");
static_assert(offsetof(AVS_VehicleMaster_C_Show_Hide_All_Mesh, Hide) == 0x000000, "Member 'AVS_VehicleMaster_C_Show_Hide_All_Mesh::Hide' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Show_Hide_All_Mesh, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'AVS_VehicleMaster_C_Show_Hide_All_Mesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Show_Hide_All_Mesh, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'AVS_VehicleMaster_C_Show_Hide_All_Mesh::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ShowHideDestroyed Mesh
// 0x0002 (0x0002 - 0x0000)
struct AVS_VehicleMaster_C_ShowHideDestroyed_Mesh final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ShowHideDestroyed_Mesh) == 0x000001, "Wrong alignment on AVS_VehicleMaster_C_ShowHideDestroyed_Mesh");
static_assert(sizeof(AVS_VehicleMaster_C_ShowHideDestroyed_Mesh) == 0x000002, "Wrong size on AVS_VehicleMaster_C_ShowHideDestroyed_Mesh");
static_assert(offsetof(AVS_VehicleMaster_C_ShowHideDestroyed_Mesh, Hide) == 0x000000, "Member 'AVS_VehicleMaster_C_ShowHideDestroyed_Mesh::Hide' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowHideDestroyed_Mesh, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'AVS_VehicleMaster_C_ShowHideDestroyed_Mesh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.ShowWidgets
// 0x00F0 (0x00F0 - 0x0000)
struct AVS_VehicleMaster_C_ShowWidgets final
{
public:
	bool                                          CanEnter;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetInteractTimeVehicleByActiveIndex_Time; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Interact_C*                          CallFunc_GetInteractTimeVehicleByActiveIndex_InteractWidget; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0040(0x0018)()
	bool                                          CallFunc_GetShowed_Showed;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0088(0x0018)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors;               // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_ShowWidgets) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_ShowWidgets");
static_assert(sizeof(AVS_VehicleMaster_C_ShowWidgets) == 0x0000F0, "Wrong size on AVS_VehicleMaster_C_ShowWidgets");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CanEnter) == 0x000000, "Member 'AVS_VehicleMaster_C_ShowWidgets::CanEnter' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, Param_Player) == 0x000008, "Member 'AVS_VehicleMaster_C_ShowWidgets::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'AVS_VehicleMaster_C_ShowWidgets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_GetInteractTimeVehicleByActiveIndex_Time) == 0x000028, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_GetInteractTimeVehicleByActiveIndex_Time' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_GetInteractTimeVehicleByActiveIndex_InteractWidget) == 0x000030, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_GetInteractTimeVehicleByActiveIndex_InteractWidget' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_GetShowed_Showed) == 0x000058, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_GetShowed_Showed' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_GetStat_Value) == 0x000060, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000068, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000088, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_GetPlayerController_ReturnValue) == 0x0000A0, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, Temp_object_Variable) == 0x0000A8, "Member 'AVS_VehicleMaster_C_ShowWidgets::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_GetHUD_ReturnValue) == 0x0000B8, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_BoxOverlapActors_OutActors) == 0x0000C0, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_BoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_BoxOverlapActors_ReturnValue) == 0x0000D0, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_BoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x0000D8, "Member 'AVS_VehicleMaster_C_ShowWidgets::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'AVS_VehicleMaster_C_ShowWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_Array_Contains_ReturnValue) == 0x0000E9, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_ShowWidgets, CallFunc_BooleanAND_ReturnValue) == 0x0000EA, "Member 'AVS_VehicleMaster_C_ShowWidgets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SpawnNiagaraFX
// 0x0058 (0x0058 - 0x0000)
struct AVS_VehicleMaster_C_SpawnNiagaraFX final
{
public:
	class USceneComponent*                        SkeletalMesh;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         SystemTemplate;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SpawnNiagaraFX) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SpawnNiagaraFX");
static_assert(sizeof(AVS_VehicleMaster_C_SpawnNiagaraFX) == 0x000058, "Wrong size on AVS_VehicleMaster_C_SpawnNiagaraFX");
static_assert(offsetof(AVS_VehicleMaster_C_SpawnNiagaraFX, SkeletalMesh) == 0x000000, "Member 'AVS_VehicleMaster_C_SpawnNiagaraFX::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SpawnNiagaraFX, SystemTemplate) == 0x000008, "Member 'AVS_VehicleMaster_C_SpawnNiagaraFX::SystemTemplate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SpawnNiagaraFX, AttachPointName) == 0x000010, "Member 'AVS_VehicleMaster_C_SpawnNiagaraFX::AttachPointName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SpawnNiagaraFX, Location) == 0x000018, "Member 'AVS_VehicleMaster_C_SpawnNiagaraFX::Location' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SpawnNiagaraFX, Rotation) == 0x000030, "Member 'AVS_VehicleMaster_C_SpawnNiagaraFX::Rotation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SpawnNiagaraFX, ReturnValue) == 0x000048, "Member 'AVS_VehicleMaster_C_SpawnNiagaraFX::ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SpawnNiagaraFX, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000050, "Member 'AVS_VehicleMaster_C_SpawnNiagaraFX::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.StabilizeVehicleUpdate
// 0x0088 (0x0088 - 0x0000)
struct AVS_VehicleMaster_C_StabilizeVehicleUpdate final
{
public:
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_StabilizeVehicleUpdate) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_StabilizeVehicleUpdate");
static_assert(sizeof(AVS_VehicleMaster_C_StabilizeVehicleUpdate) == 0x000088, "Wrong size on AVS_VehicleMaster_C_StabilizeVehicleUpdate");
static_assert(offsetof(AVS_VehicleMaster_C_StabilizeVehicleUpdate, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000000, "Member 'AVS_VehicleMaster_C_StabilizeVehicleUpdate::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_StabilizeVehicleUpdate, CallFunc_GetUpVector_ReturnValue) == 0x000018, "Member 'AVS_VehicleMaster_C_StabilizeVehicleUpdate::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_StabilizeVehicleUpdate, CallFunc_Dot_VectorVector_ReturnValue) == 0x000030, "Member 'AVS_VehicleMaster_C_StabilizeVehicleUpdate::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_StabilizeVehicleUpdate, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000038, "Member 'AVS_VehicleMaster_C_StabilizeVehicleUpdate::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_StabilizeVehicleUpdate, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'AVS_VehicleMaster_C_StabilizeVehicleUpdate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_StabilizeVehicleUpdate, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000058, "Member 'AVS_VehicleMaster_C_StabilizeVehicleUpdate::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_StabilizeVehicleUpdate, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000070, "Member 'AVS_VehicleMaster_C_StabilizeVehicleUpdate::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.StealCar
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_StealCar final
{
public:
	class APawn*                                  CarStealer;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_StealCar) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_StealCar");
static_assert(sizeof(AVS_VehicleMaster_C_StealCar) == 0x000008, "Wrong size on AVS_VehicleMaster_C_StealCar");
static_assert(offsetof(AVS_VehicleMaster_C_StealCar, CarStealer) == 0x000000, "Member 'AVS_VehicleMaster_C_StealCar::CarStealer' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SurvPlayerLogOut
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_SurvPlayerLogOut final
{
public:
	class ASurvivalPlayer_C*                      SurvivalPlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SurvPlayerLogOut) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SurvPlayerLogOut");
static_assert(sizeof(AVS_VehicleMaster_C_SurvPlayerLogOut) == 0x000008, "Wrong size on AVS_VehicleMaster_C_SurvPlayerLogOut");
static_assert(offsetof(AVS_VehicleMaster_C_SurvPlayerLogOut, SurvivalPlayer) == 0x000000, "Member 'AVS_VehicleMaster_C_SurvPlayerLogOut::SurvivalPlayer' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.SwitchSits
// 0x0018 (0x0018 - 0x0000)
struct AVS_VehicleMaster_C_SwitchSits final
{
public:
	int32                                         DesireSitIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Player;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         _PreviousSitIndex;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_SwitchSits) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_SwitchSits");
static_assert(sizeof(AVS_VehicleMaster_C_SwitchSits) == 0x000018, "Wrong size on AVS_VehicleMaster_C_SwitchSits");
static_assert(offsetof(AVS_VehicleMaster_C_SwitchSits, DesireSitIndex) == 0x000000, "Member 'AVS_VehicleMaster_C_SwitchSits::DesireSitIndex' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SwitchSits, Param_Player) == 0x000008, "Member 'AVS_VehicleMaster_C_SwitchSits::Param_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_SwitchSits, _PreviousSitIndex) == 0x000010, "Member 'AVS_VehicleMaster_C_SwitchSits::_PreviousSitIndex' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.TakedDamageClient
// 0x0070 (0x0070 - 0x0000)
struct AVS_VehicleMaster_C_TakedDamageClient final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DDLocation;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DontAnimate;                                       // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Killer;                                            // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRadialDamage;                                    // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFireDamage;                                      // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceToExplosion;                               // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          StaminaDecrease;                                   // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Zombie_;                                           // 0x0069(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                AmmoClass;                                         // 0x006A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectDamageType                    NegativeEffectDamageType;                          // 0x006B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_TakedDamageClient) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_TakedDamageClient");
static_assert(sizeof(AVS_VehicleMaster_C_TakedDamageClient) == 0x000070, "Wrong size on AVS_VehicleMaster_C_TakedDamageClient");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, Damage) == 0x000000, "Member 'AVS_VehicleMaster_C_TakedDamageClient::Damage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, DDLocation) == 0x000008, "Member 'AVS_VehicleMaster_C_TakedDamageClient::DDLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, BoneName) == 0x000020, "Member 'AVS_VehicleMaster_C_TakedDamageClient::BoneName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, HitLocation) == 0x000028, "Member 'AVS_VehicleMaster_C_TakedDamageClient::HitLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, DontAnimate) == 0x000040, "Member 'AVS_VehicleMaster_C_TakedDamageClient::DontAnimate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, Killer) == 0x000048, "Member 'AVS_VehicleMaster_C_TakedDamageClient::Killer' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, IsRadialDamage) == 0x000050, "Member 'AVS_VehicleMaster_C_TakedDamageClient::IsRadialDamage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, IsFireDamage) == 0x000051, "Member 'AVS_VehicleMaster_C_TakedDamageClient::IsFireDamage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, DistanceToExplosion) == 0x000058, "Member 'AVS_VehicleMaster_C_TakedDamageClient::DistanceToExplosion' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, DamageCauser) == 0x000060, "Member 'AVS_VehicleMaster_C_TakedDamageClient::DamageCauser' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, StaminaDecrease) == 0x000068, "Member 'AVS_VehicleMaster_C_TakedDamageClient::StaminaDecrease' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, Zombie_) == 0x000069, "Member 'AVS_VehicleMaster_C_TakedDamageClient::Zombie_' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, AmmoClass) == 0x00006A, "Member 'AVS_VehicleMaster_C_TakedDamageClient::AmmoClass' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageClient, NegativeEffectDamageType) == 0x00006B, "Member 'AVS_VehicleMaster_C_TakedDamageClient::NegativeEffectDamageType' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.TakedDamageServer
// 0x0070 (0x0070 - 0x0000)
struct AVS_VehicleMaster_C_TakedDamageServer final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DDLocation;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DontAnimate;                                       // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Killer;                                            // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRadialDamage;                                    // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFireDamage;                                      // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceToExplosion;                               // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          StaminaDecrease;                                   // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Zombie_;                                           // 0x0069(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                AmmoClass;                                         // 0x006A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectDamageType                    NegativeEffectDamageType;                          // 0x006B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_TakedDamageServer) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_TakedDamageServer");
static_assert(sizeof(AVS_VehicleMaster_C_TakedDamageServer) == 0x000070, "Wrong size on AVS_VehicleMaster_C_TakedDamageServer");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, Damage) == 0x000000, "Member 'AVS_VehicleMaster_C_TakedDamageServer::Damage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, DDLocation) == 0x000008, "Member 'AVS_VehicleMaster_C_TakedDamageServer::DDLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, BoneName) == 0x000020, "Member 'AVS_VehicleMaster_C_TakedDamageServer::BoneName' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, HitLocation) == 0x000028, "Member 'AVS_VehicleMaster_C_TakedDamageServer::HitLocation' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, DontAnimate) == 0x000040, "Member 'AVS_VehicleMaster_C_TakedDamageServer::DontAnimate' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, Killer) == 0x000048, "Member 'AVS_VehicleMaster_C_TakedDamageServer::Killer' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, IsRadialDamage) == 0x000050, "Member 'AVS_VehicleMaster_C_TakedDamageServer::IsRadialDamage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, IsFireDamage) == 0x000051, "Member 'AVS_VehicleMaster_C_TakedDamageServer::IsFireDamage' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, DistanceToExplosion) == 0x000058, "Member 'AVS_VehicleMaster_C_TakedDamageServer::DistanceToExplosion' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, DamageCauser) == 0x000060, "Member 'AVS_VehicleMaster_C_TakedDamageServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, StaminaDecrease) == 0x000068, "Member 'AVS_VehicleMaster_C_TakedDamageServer::StaminaDecrease' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, Zombie_) == 0x000069, "Member 'AVS_VehicleMaster_C_TakedDamageServer::Zombie_' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, AmmoClass) == 0x00006A, "Member 'AVS_VehicleMaster_C_TakedDamageServer::AmmoClass' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_TakedDamageServer, NegativeEffectDamageType) == 0x00006B, "Member 'AVS_VehicleMaster_C_TakedDamageServer::NegativeEffectDamageType' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.Teleporting Logic
// 0x0270 (0x0270 - 0x0000)
struct AVS_VehicleMaster_C_Teleporting_Logic final
{
public:
	class UClass*                                 CarClass;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CarTrans;                                          // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB;                       // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB_1;                     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSpawnPoint_C*                 CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0108(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UObject*, int32>                   CallFunc_MapSortByValue_ReturnValue;               // 0x0120(0x0050)()
	TArray<class UObject*>                        CallFunc_Map_Keys_Keys;                            // 0x0170(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_Array_Get_Item_1;                         // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSpawnPoint_C*                 CallFunc_Array_Get_Item_2;                         // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerSpawnPoint_C*                 K2Node_DynamicCast_AsBP_Player_Spawn_Point;        // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01A0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0210(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0220(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_Teleporting_Logic) == 0x000010, "Wrong alignment on AVS_VehicleMaster_C_Teleporting_Logic");
static_assert(sizeof(AVS_VehicleMaster_C_Teleporting_Logic) == 0x000270, "Wrong size on AVS_VehicleMaster_C_Teleporting_Logic");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CarClass) == 0x000000, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CarClass' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CarTrans) == 0x000010, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CarTrans' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, K2Node_DynamicCast_AsPS_TDB) == 0x000088, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::K2Node_DynamicCast_AsPS_TDB' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000091, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_GetPlayerController_ReturnValue_1) == 0x000098, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_GetObjectClass_ReturnValue) == 0x0000A0, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, K2Node_DynamicCast_AsPS_TDB_1) == 0x0000A8, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::K2Node_DynamicCast_AsPS_TDB_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Greater_IntInt_ReturnValue) == 0x0000BC, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, Temp_int_Array_Index_Variable_1) == 0x0000C0, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, Temp_int_Loop_Counter_Variable_1) == 0x0000C4, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, Temp_int_Loop_Counter_Variable_2) == 0x0000CC, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_Length_ReturnValue_1) == 0x0000D8, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000DC, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Max_ReturnValue) == 0x0000E0, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E8, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Add_IntInt_ReturnValue_2) == 0x000100, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, Temp_object_Variable) == 0x000108, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000118, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, Temp_int_Array_Index_Variable_2) == 0x00011C, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_MapSortByValue_ReturnValue) == 0x000120, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_MapSortByValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Map_Keys_Keys) == 0x000170, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_Get_Item_2) == 0x000188, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, K2Node_DynamicCast_AsBP_Player_Spawn_Point) == 0x000190, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::K2Node_DynamicCast_AsBP_Player_Spawn_Point' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, K2Node_DynamicCast_bSuccess_2) == 0x000198, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_GetTransform_ReturnValue) == 0x0001A0, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_Length_ReturnValue_2) == 0x000200, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Less_IntInt_ReturnValue) == 0x000204, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_Length_ReturnValue_3) == 0x000208, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00020C, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, K2Node_MakeArray_Array) == 0x000210, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_SphereOverlapActors_OutActors) == 0x000220, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_SphereOverlapActors_ReturnValue) == 0x000230, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_Get_Item_3) == 0x000238, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_AddUnique_ReturnValue) == 0x000240, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, K2Node_DynamicCast_AsSurvival_Player) == 0x000248, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, K2Node_DynamicCast_bSuccess_3) == 0x000250, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_Length_ReturnValue_4) == 0x000254, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Less_IntInt_ReturnValue_1) == 0x000258, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_Array_Find_ReturnValue) == 0x00025C, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_Teleporting_Logic, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000260, "Member 'AVS_VehicleMaster_C_Teleporting_Logic::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.TeleportInteract
// 0x0008 (0x0008 - 0x0000)
struct AVS_VehicleMaster_C_TeleportInteract final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_TeleportInteract) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_TeleportInteract");
static_assert(sizeof(AVS_VehicleMaster_C_TeleportInteract) == 0x000008, "Wrong size on AVS_VehicleMaster_C_TeleportInteract");
static_assert(offsetof(AVS_VehicleMaster_C_TeleportInteract, Param_Player) == 0x000000, "Member 'AVS_VehicleMaster_C_TeleportInteract::Param_Player' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.UserConstructionScript
// 0x0078 (0x0078 - 0x0000)
struct AVS_VehicleMaster_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_4;                         // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_3;       // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFGearWheel*>                    K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FName                                   CallFunc_Array_Get_Item_5;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_4;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              K2Node_MakeArray_Array_1;                          // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(AVS_VehicleMaster_C_UserConstructionScript) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_UserConstructionScript");
static_assert(sizeof(AVS_VehicleMaster_C_UserConstructionScript) == 0x000078, "Wrong size on AVS_VehicleMaster_C_UserConstructionScript");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AVS_VehicleMaster_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000008, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x000014, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_Array_Get_Item_2) == 0x00001C, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_Array_Get_Item_3) == 0x000024, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_Array_Get_Item_4) == 0x00002C, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000034, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000035, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x000036, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue_3) == 0x000037, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'AVS_VehicleMaster_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000048, "Member 'AVS_VehicleMaster_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_Array_Get_Item_5) == 0x000058, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue_4) == 0x000060, "Member 'AVS_VehicleMaster_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_UserConstructionScript, K2Node_MakeArray_Array_1) == 0x000068, "Member 'AVS_VehicleMaster_C_UserConstructionScript::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function AVS_VehicleMaster.AVS_VehicleMaster_C.WheelLastTouchSurface
// 0x0100 (0x0100 - 0x0000)
struct AVS_VehicleMaster_C_WheelLastTouchSurface final
{
public:
	class UFGearWheel*                            Wheel;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_getRayHit_ReturnValue;                    // 0x0010(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AVS_VehicleMaster_C_WheelLastTouchSurface) == 0x000008, "Wrong alignment on AVS_VehicleMaster_C_WheelLastTouchSurface");
static_assert(sizeof(AVS_VehicleMaster_C_WheelLastTouchSurface) == 0x000100, "Wrong size on AVS_VehicleMaster_C_WheelLastTouchSurface");
static_assert(offsetof(AVS_VehicleMaster_C_WheelLastTouchSurface, Wheel) == 0x000000, "Member 'AVS_VehicleMaster_C_WheelLastTouchSurface::Wheel' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_WheelLastTouchSurface, ReturnValue) == 0x000008, "Member 'AVS_VehicleMaster_C_WheelLastTouchSurface::ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_WheelLastTouchSurface, CallFunc_getRayHit_ReturnValue) == 0x000010, "Member 'AVS_VehicleMaster_C_WheelLastTouchSurface::CallFunc_getRayHit_ReturnValue' has a wrong offset!");
static_assert(offsetof(AVS_VehicleMaster_C_WheelLastTouchSurface, CallFunc_GetSurfaceType_ReturnValue) == 0x0000F8, "Member 'AVS_VehicleMaster_C_WheelLastTouchSurface::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");

}

