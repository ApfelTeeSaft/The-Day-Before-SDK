#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurviveAnimator1_Sound

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SurviveAnimator2_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass SurviveAnimator1_Sound.SurviveAnimator1_Sound_C
// 0x0020 (0x17700 - 0x176E0)
class USurviveAnimator1_Sound_C final : public USurviveAnimator2_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_SurviveAnimator1_Sound_C;           // 0x176D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Player_Hided;                                      // 0x176E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176E1[0x7];                                    // 0x176E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    EatAudio;                                          // 0x176E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        SurfaceTypeParameter;                              // 0x176F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimNotify_AK_Equip();
	void AnimNotify_AK_Unequip();
	void AnimNotify_AK_Unequip_Change();
	void AnimNotify_BackSteps();
	void AnimNotify_BarStandUpSound();
	void AnimNotify_BarStoolSound1();
	void AnimNotify_BarTableSitSound();
	void AnimNotify_BarTableUpSound();
	void AnimNotify_BassEndSound();
	void AnimNotify_BassGetSound();
	void AnimNotify_Beretta_Reload_Crouch();
	void AnimNotify_BinocularsTakeSound();
	void AnimNotify_BinocularsUntakeSound();
	void AnimNotify_BlueBerryEating();
	void AnimNotify_BottleSound1();
	void AnimNotify_BottleSound2();
	void AnimNotify_BottleSoundFem_2();
	void AnimNotify_BottleSoundFem1();
	void AnimNotify_bush_sound();
	void AnimNotify_ChocolateEat();
	void AnimNotify_CleanerEndSound();
	void AnimNotify_CleanerSound();
	void AnimNotify_CleanerSound2();
	void AnimNotify_CleanerStartSound();
	void AnimNotify_Compas_Equip();
	void AnimNotify_Compas_Unequip();
	void AnimNotify_CrawlMale();
	void AnimNotify_crouch_step_sound();
	void AnimNotify_DB_Equip();
	void AnimNotify_DB_EquipChange();
	void AnimNotify_DB_ReloadSound();
	void AnimNotify_DB_Unequip();
	void AnimNotify_DB_UnequipChange();
	void AnimNotify_DodgeOut();
	void AnimNotify_Door_Hub_Open();
	void AnimNotify_Drink_Energy();
	void AnimNotify_Drink_Energy_Fem();
	void AnimNotify_Drink_TetraPak();
	void AnimNotify_Drink_TetraPak_female();
	void AnimNotify_Drink_Water();
	void AnimNotify_Drink_Water_Fem();
	void AnimNotify_Drink_Whiskey();
	void AnimNotify_Drink_Whiskey_Fem();
	void AnimNotify_DrinkSound();
	void AnimNotify_Drop_Assault_Magazine_Sound();
	void AnimNotify_Drop_Magazin_Pistol();
	void AnimNotify_Eat_Can_Food_02();
	void AnimNotify_Eat_CanFood();
	void AnimNotify_Eat_Chips();
	void AnimNotify_Eat_Chocolate();
	void AnimNotify_Eat_Chocolate_Fem();
	void AnimNotify_Eat_Cornflakes();
	void AnimNotify_Eat_Sandwich();
	void AnimNotify_Eating_CanFood();
	void AnimNotify_eating_mre();
	void AnimNotify_EatSound();
	void AnimNotify_EatSound2();
	void AnimNotify_EatSound3();
	void AnimNotify_EatSound4();
	void AnimNotify_Eatsound5();
	void AnimNotify_ElectricSound();
	void AnimNotify_equip_melee();
	void AnimNotify_Equip_Pistol_Sound();
	void AnimNotify_Equip_Rifle_Sound();
	void AnimNotify_ExercBikeSound2();
	void AnimNotify_ExercBikeStartSound();
	void AnimNotify_ExercBikeStopSound();
	void AnimNotify_G_Equip();
	void AnimNotify_G_Equip_Change();
	void AnimNotify_G_PinPull();
	void AnimNotify_G_Throw();
	void AnimNotify_G_Unequip();
	void AnimNotify_GanteliEndSound();
	void AnimNotify_GanteliSound();
	void AnimNotify_GanteliSoundStart();
	void AnimNotify_GarandEquipChangeSound();
	void AnimNotify_GarandEquipSound();
	void AnimNotify_GarandUnequipChangeSound();
	void AnimNotify_GarandUnequipSound();
	void AnimNotify_GetDodge();
	void AnimNotify_GPS_EquipSound();
	void AnimNotify_GPS_UnEquipSound();
	void AnimNotify_GuitarEndSound();
	void AnimNotify_GuitarGetSound();
	void AnimNotify_Healing();
	void AnimNotify_Healing_END();
	void AnimNotify_Healing_Loop();
	void AnimNotify_Healing_Start_Large();
	void AnimNotify_Healing_start_Mid();
	void AnimNotify_Healing_Start_Small();
	void AnimNotify_HealingBigSound();
	void AnimNotify_HealingSound();
	void AnimNotify_HealingSoundMid();
	void AnimNotify_HummerGet();
	void AnimNotify_HummerOut();
	void AnimNotify_Jerked_Pistol();
	void AnimNotify_Jerket_Assault_Sound();
	void AnimNotify_Jump_End_fmod();
	void AnimNotify_Jump_End_Sound();
	void AnimNotify_jump_voice();
	void AnimNotify_Knelt_Sit();
	void AnimNotify_Knelt_Up();
	void AnimNotify_LamboGet();
	void AnimNotify_LamboOut();
	void AnimNotify_Load_Assault_Magazine_Sound();
	void AnimNotify_Load_Magazin_Pistol();
	void AnimNotify_Load_Shotgun_Sound();
	void AnimNotify_LoaderPickUpFemale();
	void AnimNotify_LoaderPickUpSound();
	void AnimNotify_LoaderPutFemale();
	void AnimNotify_LoaderPutSound();
	void AnimNotify_M4_Equip();
	void AnimNotify_M4_Pick_Up();
	void AnimNotify_M4_Put_Down();
	void AnimNotify_M4_Unequip();
	void AnimNotify_M4_Unequip_Change();
	void AnimNotify_MenuEnd();
	void AnimNotify_MenuStartSound();
	void AnimNotify_Moss_Equip();
	void AnimNotify_Moss_Equip_Change();
	void AnimNotify_moss_reload_end();
	void AnimNotify_moss_reload_loop();
	void AnimNotify_Moss_Reload_Start();
	void AnimNotify_Moss_Unequip();
	void AnimNotify_Moss_Unequip_Change();
	void AnimNotify_PillsSound();
	void AnimNotify_Pistol_equip();
	void AnimNotify_Pistol_Equip_Change();
	void AnimNotify_Pistol_Unequip();
	void AnimNotify_Pistol_Unequip_Change();
	void AnimNotify_PlumberSound();
	void AnimNotify_Punch();
	void AnimNotify_PunchFem();
	void AnimNotify_PushUpSound();
	void AnimNotify_PushUpStartSound();
	void AnimNotify_Return_Equip_Assault();
	void AnimNotify_Run_Notif();
	void AnimNotify_Run_Sound();
	void AnimNotify_Sako_Equip();
	void AnimNotify_Sako_Unequip();
	void AnimNotify_Sako_Unequip_Change();
	void AnimNotify_ShtangaDownFem();
	void AnimNotify_ShtangaDownSound();
	void AnimNotify_ShtangaEndFem();
	void AnimNotify_ShtangaEndSound();
	void AnimNotify_ShtangaFemale();
	void AnimNotify_ShtangaSound();
	void AnimNotify_ShtangaUpFem();
	void AnimNotify_ShtangaUpSound();
	void AnimNotify_SitSound();
	void AnimNotify_SodaDrinking();
	void AnimNotify_SofaSitSound();
	void AnimNotify_SofaUpSound();
	void AnimNotify_SpoonEndSound();
	void AnimNotify_SpoonKnifeSound();
	void AnimNotify_StandUpSound();
	void AnimNotify_Step_Notif();
	void AnimNotify_step_scuff();
	void AnimNotify_Step_Soft_Sound();
	void AnimNotify_Step_Sound();
	void AnimNotify_StimulSound();
	void AnimNotify_Surv_walk();
	void AnimNotify_Swim();
	void AnimNotify_SwimBack();
	void AnimNotify_SwimIdle();
	void AnimNotify_treadmillOnSound();
	void AnimNotify_UMP_Equip();
	void AnimNotify_UMP_Unequip();
	void AnimNotify_UMP_Unequip_Change();
	void AnimNotify_VacumStartSound();
	void AnimNotify_VectorEquip();
	void AnimNotify_VectorEquipChange();
	void AnimNotify_VectorUnequip();
	void AnimNotify_VectorUnequipChange();
	void AnimNotify_VendingFailSound();
	void AnimNotify_VendingSuccSound();
	void AnimNotify_Walk_Sound();
	void AnimNotify_Weapon_Step();
	void CustomEvent();
	void ExecuteUbergraph_SurviveAnimator1_Sound(int32 EntryPoint);
	void StopSound();
	void BlueprintUpdateAnimation(float DeltaTimeX);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SurviveAnimator1_Sound_C">();
	}
	static class USurviveAnimator1_Sound_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USurviveAnimator1_Sound_C>();
	}
};
static_assert(alignof(USurviveAnimator1_Sound_C) == 0x000010, "Wrong alignment on USurviveAnimator1_Sound_C");
static_assert(sizeof(USurviveAnimator1_Sound_C) == 0x017700, "Wrong size on USurviveAnimator1_Sound_C");
static_assert(offsetof(USurviveAnimator1_Sound_C, UberGraphFrame_SurviveAnimator1_Sound_C) == 0x0176D8, "Member 'USurviveAnimator1_Sound_C::UberGraphFrame_SurviveAnimator1_Sound_C' has a wrong offset!");
static_assert(offsetof(USurviveAnimator1_Sound_C, Player_Hided) == 0x0176E0, "Member 'USurviveAnimator1_Sound_C::Player_Hided' has a wrong offset!");
static_assert(offsetof(USurviveAnimator1_Sound_C, EatAudio) == 0x0176E8, "Member 'USurviveAnimator1_Sound_C::EatAudio' has a wrong offset!");
static_assert(offsetof(USurviveAnimator1_Sound_C, SurfaceTypeParameter) == 0x0176F0, "Member 'USurviveAnimator1_Sound_C::SurfaceTypeParameter' has a wrong offset!");

}

