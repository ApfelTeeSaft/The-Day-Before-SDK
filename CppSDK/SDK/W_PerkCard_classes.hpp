#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PerkCard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "WS_CharaterPerks_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PerkCard.W_PerkCard_C
// 0x01A8 (0x0428 - 0x0280)
class UW_PerkCard_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Points;                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Hover;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Selected;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Price;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Sign;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           Color_Positive;                                    // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Negative;                                    // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Image_Size;                                        // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Name_W_PerkCard_C;                                 // 0x02FC(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWS_CharaterPerks                      PerkInfo;                                          // 0x0308(0x00B8)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             PressedPerkButton_ED;                              // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector2D                              Size;                                              // 0x03D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bSelected;                                         // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Price_Real;                                        // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ClickedPerkButtonCC;                               // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bEmpty;                                            // 0x03F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PerkInfo_C*                        Perk_Info;                                         // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bHovered;                                          // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowInfoCard;                                     // 0x0409(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_40A[0x6];                                      // 0x040A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bShowPointsCost;                                   // 0x0420(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__W_PerkCard_Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__W_PerkCard_Button_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_PerkCard_Button_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void ClickedPerkButtonCC__DelegateSignature();
	void ExecuteUbergraph_W_PerkCard(int32 EntryPoint);
	void GetIsSelected(bool* Param_bSelected);
	void GetName(class FName* Param_Name);
	void GetPerkInfo(struct FWS_CharaterPerks* Param_PerkInfo);
	void GetPriceReal(int32* Param_Price_Real);
	void Init();
	void OnHovered__DelegateSignature(class UW_PerkCard_C* PerkCardRef, bool Show);
	void PreConstruct(bool IsDesignTime);
	void PressedPerkButton_ED__DelegateSignature(class UW_PerkCard_C* GivenPerkCard);
	void Select(bool Param_Select);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PerkCard_C">();
	}
	static class UW_PerkCard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PerkCard_C>();
	}
};
static_assert(alignof(UW_PerkCard_C) == 0x000008, "Wrong alignment on UW_PerkCard_C");
static_assert(sizeof(UW_PerkCard_C) == 0x000428, "Wrong size on UW_PerkCard_C");
static_assert(offsetof(UW_PerkCard_C, UberGraphFrame) == 0x000280, "Member 'UW_PerkCard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Hover) == 0x000288, "Member 'UW_PerkCard_C::Hover' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Button) == 0x000290, "Member 'UW_PerkCard_C::Button' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, HorizontalBox_Points) == 0x000298, "Member 'UW_PerkCard_C::HorizontalBox_Points' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Image_BG) == 0x0002A0, "Member 'UW_PerkCard_C::Image_BG' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Image_Hover) == 0x0002A8, "Member 'UW_PerkCard_C::Image_Hover' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Image_Icon) == 0x0002B0, "Member 'UW_PerkCard_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Image_Selected) == 0x0002B8, "Member 'UW_PerkCard_C::Image_Selected' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, SizeBox) == 0x0002C0, "Member 'UW_PerkCard_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Text_Price) == 0x0002C8, "Member 'UW_PerkCard_C::Text_Price' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Text_Sign) == 0x0002D0, "Member 'UW_PerkCard_C::Text_Sign' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Color_Positive) == 0x0002D8, "Member 'UW_PerkCard_C::Color_Positive' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Color_Negative) == 0x0002E8, "Member 'UW_PerkCard_C::Color_Negative' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Image_Size) == 0x0002F8, "Member 'UW_PerkCard_C::Image_Size' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Name_W_PerkCard_C) == 0x0002FC, "Member 'UW_PerkCard_C::Name_W_PerkCard_C' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, PerkInfo) == 0x000308, "Member 'UW_PerkCard_C::PerkInfo' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, PressedPerkButton_ED) == 0x0003C0, "Member 'UW_PerkCard_C::PressedPerkButton_ED' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Size) == 0x0003D0, "Member 'UW_PerkCard_C::Size' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, bSelected) == 0x0003E0, "Member 'UW_PerkCard_C::bSelected' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Price_Real) == 0x0003E4, "Member 'UW_PerkCard_C::Price_Real' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, ClickedPerkButtonCC) == 0x0003E8, "Member 'UW_PerkCard_C::ClickedPerkButtonCC' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, bEmpty) == 0x0003F8, "Member 'UW_PerkCard_C::bEmpty' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, Perk_Info) == 0x000400, "Member 'UW_PerkCard_C::Perk_Info' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, bHovered) == 0x000408, "Member 'UW_PerkCard_C::bHovered' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, bShowInfoCard) == 0x000409, "Member 'UW_PerkCard_C::bShowInfoCard' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, OnHovered) == 0x000410, "Member 'UW_PerkCard_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UW_PerkCard_C, bShowPointsCost) == 0x000420, "Member 'UW_PerkCard_C::bShowPointsCost' has a wrong offset!");

}

