#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeerManager

#include "Basic.hpp"

#include "DeerManager_classes.hpp"
#include "DeerManager_parameters.hpp"


namespace SDK
{

// Function DeerManager.DeerManager_C.CheckPlayers
// (Private, BlueprintCallable, BlueprintEvent)

void ADeerManager_C::CheckPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "CheckPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DeerManager.DeerManager_C.ExecuteUbergraph_DeerManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADeerManager_C::ExecuteUbergraph_DeerManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "ExecuteUbergraph_DeerManager");

	Params::DeerManager_C_ExecuteUbergraph_DeerManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DeerManager.DeerManager_C.GetActiveDeers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ABP_DeerV2_C*>             ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class ABP_DeerV2_C*> ADeerManager_C::GetActiveDeers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "GetActiveDeers");

	Params::DeerManager_C_GetActiveDeers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DeerManager.DeerManager_C.GetAllDeers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ABP_DeerV2_C*>             ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class ABP_DeerV2_C*> ADeerManager_C::GetAllDeers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "GetAllDeers");

	Params::DeerManager_C_GetAllDeers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DeerManager.DeerManager_C.GetFreeDeerIndex
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ADeerManager_C::GetFreeDeerIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "GetFreeDeerIndex");

	Params::DeerManager_C_GetFreeDeerIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DeerManager.DeerManager_C.KillAllActiveDeers
// (Public, BlueprintCallable, BlueprintEvent)

void ADeerManager_C::KillAllActiveDeers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "KillAllActiveDeers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DeerManager.DeerManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADeerManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DeerManager.DeerManager_C.RequestSpawnOfDeer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_DeerSpawnType                         Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_DeerV2_C*                     SpawnedDeer                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ADeerManager_C::RequestSpawnOfDeer(const struct FVector& Location, const struct FRotator& Rotation, E_DeerSpawnType Type, class ABP_DeerV2_C** SpawnedDeer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "RequestSpawnOfDeer");

	Params::DeerManager_C_RequestSpawnOfDeer Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnedDeer != nullptr)
		*SpawnedDeer = Parms.SpawnedDeer;
}


// Function DeerManager.DeerManager_C.ResetDeer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DeerManagerIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_DeerV2_C*                     DeerRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ADeerManager_C::ResetDeer(int32 DeerManagerIndex, class ABP_DeerV2_C* DeerRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "ResetDeer");

	Params::DeerManager_C_ResetDeer Parms{};

	Parms.DeerManagerIndex = DeerManagerIndex;
	Parms.DeerRef = DeerRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DeerManager.DeerManager_C.SpawnDeer
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADeerManager_C::SpawnDeer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "SpawnDeer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DeerManager.DeerManager_C.SpawnerRequest
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AmountOfDeers                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADeerManager_C::SpawnerRequest(int32 AmountOfDeers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeerManager_C", "SpawnerRequest");

	Params::DeerManager_C_SpawnerRequest Parms{};

	Parms.AmountOfDeers = AmountOfDeers;

	UObject::ProcessEvent(Func, &Parms);
}

}

