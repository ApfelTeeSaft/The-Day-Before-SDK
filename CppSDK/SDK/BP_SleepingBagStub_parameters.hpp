#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SleepingBagStub

#include "Basic.hpp"

#include "E_ActorType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_InteractType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.AddExcludedClasses
// 0x0020 (0x0020 - 0x0000)
struct BP_SleepingBagStub_C_AddExcludedClasses final
{
public:
	TArray<class UClass*>                         Classes;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BP_SleepingBagStub_C_AddExcludedClasses) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_AddExcludedClasses");
static_assert(sizeof(BP_SleepingBagStub_C_AddExcludedClasses) == 0x000020, "Wrong size on BP_SleepingBagStub_C_AddExcludedClasses");
static_assert(offsetof(BP_SleepingBagStub_C_AddExcludedClasses, Classes) == 0x000000, "Member 'BP_SleepingBagStub_C_AddExcludedClasses::Classes' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_AddExcludedClasses, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_SleepingBagStub_C_AddExcludedClasses::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.CanPlaced
// 0x0090 (0x0090 - 0x0000)
struct BP_SleepingBagStub_C_CanPlaced final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0028(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_CanPlaced) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_CanPlaced");
static_assert(sizeof(BP_SleepingBagStub_C_CanPlaced) == 0x000090, "Wrong size on BP_SleepingBagStub_C_CanPlaced");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, Res) == 0x000000, "Member 'BP_SleepingBagStub_C_CanPlaced::Res' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, Result) == 0x000001, "Member 'BP_SleepingBagStub_C_CanPlaced::Result' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, Temp_bool_True_if_break_was_hit_Variable) == 0x000002, "Member 'BP_SleepingBagStub_C_CanPlaced::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SleepingBagStub_C_CanPlaced::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00000C, "Member 'BP_SleepingBagStub_C_CanPlaced::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SleepingBagStub_C_CanPlaced::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Not_PreBool_ReturnValue_1) == 0x000014, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_SleepingBagStub_C_CanPlaced::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_SleepingBagStub_C_CanPlaced::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000028, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_GetObjectClass_ReturnValue) == 0x000048, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Array_Contains_ReturnValue) == 0x000051, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x000058, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_GetObjectClass_ReturnValue_1) == 0x000080, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_BooleanAND_ReturnValue_1) == 0x000088, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_CanPlaced, CallFunc_Array_Contains_ReturnValue_1) == 0x000089, "Member 'BP_SleepingBagStub_C_CanPlaced::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.ExecuteUbergraph_BP_SleepingBagStub
// 0x05F0 (0x05F0 - 0x0000)
struct BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0030(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0108(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0250(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0340(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373[0x1];                                      // 0x0373(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x0448(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0534(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_2;                             // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0558(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0570(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0578(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582[0x6];                                      // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue_2;        // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x05A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlaced_Res;                            // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C2[0x6];                                      // 0x05C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D5[0x3];                                      // 0x05D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub");
static_assert(sizeof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub) == 0x0005F0, "Wrong size on BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, EntryPoint) == 0x000000, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, Temp_bool_Variable) == 0x000008, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, Temp_struct_Variable) == 0x000010, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, Temp_object_Variable) == 0x000030, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, Temp_int_Variable) == 0x000040, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Player_8) == 0x000048, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Player_7) == 0x000050, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Player_6) == 0x000058, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Player_5) == 0x000060, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_SitIndex) == 0x000068, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_SkipAnimation) == 0x00006C, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Player_4) == 0x000070, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Player_3) == 0x000078, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Visible_1) == 0x000080, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Visible) == 0x000081, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_DeltaSeconds) == 0x000084, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000088, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000A0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000108, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0001F0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakVector_X) == 0x0001F8, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakVector_Y) == 0x000200, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakVector_Z) == 0x000208, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000210, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_MakeVector_ReturnValue) == 0x000218, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000230, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_MakeVector_ReturnValue_1) == 0x000238, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_LineTraceSingle_OutHit) == 0x000250, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_LineTraceSingle_ReturnValue) == 0x000338, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000340, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Array_Get_Item) == 0x000350, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Array_Length_ReturnValue) == 0x000358, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_GetDisplayName_ReturnValue) == 0x000360, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Less_IntInt_ReturnValue) == 0x000370, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_bBlockingHit) == 0x000371, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_bInitialOverlap) == 0x000372, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_Time) == 0x000374, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_Distance) == 0x000378, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_Location) == 0x000380, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_ImpactPoint) == 0x000398, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_Normal) == 0x0003B0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_ImpactNormal) == 0x0003C8, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_PhysMat) == 0x0003E0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_HitActor) == 0x0003E8, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_HitComponent) == 0x0003F0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_HitBoneName) == 0x0003F8, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_BoneName) == 0x000400, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_HitItem) == 0x000408, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_ElementIndex) == 0x00040C, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_FaceIndex) == 0x000410, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_TraceStart) == 0x000418, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_BreakHitResult_TraceEnd) == 0x000430, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x000448, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x000530, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, Temp_struct_Variable_1) == 0x000534, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Player_2) == 0x000548, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Player_1) == 0x000550, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Select_Default) == 0x000558, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, K2Node_Event_Player) == 0x000568, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_GetComponentByClass_ReturnValue) == 0x000570, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000578, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_IsValid_ReturnValue_1) == 0x000580, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_IsValid_ReturnValue_2) == 0x000581, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000588, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0005A0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0005A8, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_IsValid_ReturnValue_3) == 0x0005C0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_CanPlaced_Res) == 0x0005C1, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_CanPlaced_Res' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Array_Get_Item_1) == 0x0005C8, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Array_Length_ReturnValue_1) == 0x0005D0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Less_IntInt_ReturnValue_1) == 0x0005D4, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0005D8, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_GetNumMaterials_ReturnValue) == 0x0005E0, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Array_Add_ReturnValue) == 0x0005E4, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_Subtract_IntInt_ReturnValue) == 0x0005E8, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0005EC, "Member 'BP_SleepingBagStub_C_ExecuteUbergraph_BP_SleepingBagStub::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct BP_SleepingBagStub_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_GetActorType) == 0x000001, "Wrong alignment on BP_SleepingBagStub_C_GetActorType");
static_assert(sizeof(BP_SleepingBagStub_C_GetActorType) == 0x000001, "Wrong size on BP_SleepingBagStub_C_GetActorType");
static_assert(offsetof(BP_SleepingBagStub_C_GetActorType, ActorType) == 0x000000, "Member 'BP_SleepingBagStub_C_GetActorType::ActorType' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct BP_SleepingBagStub_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_IsLocked_) == 0x000001, "Wrong alignment on BP_SleepingBagStub_C_IsLocked_");
static_assert(sizeof(BP_SleepingBagStub_C_IsLocked_) == 0x000001, "Wrong size on BP_SleepingBagStub_C_IsLocked_");
static_assert(offsetof(BP_SleepingBagStub_C_IsLocked_, Result) == 0x000000, "Member 'BP_SleepingBagStub_C_IsLocked_::Result' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBagStub_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_OnBeginInteract");
static_assert(sizeof(BP_SleepingBagStub_C_OnBeginInteract) == 0x000008, "Wrong size on BP_SleepingBagStub_C_OnBeginInteract");
static_assert(offsetof(BP_SleepingBagStub_C_OnBeginInteract, Player) == 0x000000, "Member 'BP_SleepingBagStub_C_OnBeginInteract::Player' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.OnFocused
// 0x0060 (0x0060 - 0x0000)
struct BP_SleepingBagStub_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_OnFocused) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_OnFocused");
static_assert(sizeof(BP_SleepingBagStub_C_OnFocused) == 0x000060, "Wrong size on BP_SleepingBagStub_C_OnFocused");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, Player) == 0x000000, "Member 'BP_SleepingBagStub_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, HighlightActor) == 0x000008, "Member 'BP_SleepingBagStub_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'BP_SleepingBagStub_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, InteractType) == 0x000018, "Member 'BP_SleepingBagStub_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, LateTime) == 0x000020, "Member 'BP_SleepingBagStub_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'BP_SleepingBagStub_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, CallFunc_IsLocallyControlled_ReturnValue) == 0x000030, "Member 'BP_SleepingBagStub_C_OnFocused::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, CallFunc_GetHUD_ReturnValue) == 0x000038, "Member 'BP_SleepingBagStub_C_OnFocused::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000040, "Member 'BP_SleepingBagStub_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_SleepingBagStub_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000058, "Member 'BP_SleepingBagStub_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBagStub_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_OnInteract) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_OnInteract");
static_assert(sizeof(BP_SleepingBagStub_C_OnInteract) == 0x000008, "Wrong size on BP_SleepingBagStub_C_OnInteract");
static_assert(offsetof(BP_SleepingBagStub_C_OnInteract, Player) == 0x000000, "Member 'BP_SleepingBagStub_C_OnInteract::Player' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBagStub_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_OnInteract2) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_OnInteract2");
static_assert(sizeof(BP_SleepingBagStub_C_OnInteract2) == 0x000008, "Wrong size on BP_SleepingBagStub_C_OnInteract2");
static_assert(offsetof(BP_SleepingBagStub_C_OnInteract2, Player) == 0x000000, "Member 'BP_SleepingBagStub_C_OnInteract2::Player' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBagStub_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_OnInteract3) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_OnInteract3");
static_assert(sizeof(BP_SleepingBagStub_C_OnInteract3) == 0x000008, "Wrong size on BP_SleepingBagStub_C_OnInteract3");
static_assert(offsetof(BP_SleepingBagStub_C_OnInteract3, Player) == 0x000000, "Member 'BP_SleepingBagStub_C_OnInteract3::Player' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct BP_SleepingBagStub_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_OnInteractVehicle) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_OnInteractVehicle");
static_assert(sizeof(BP_SleepingBagStub_C_OnInteractVehicle) == 0x000010, "Wrong size on BP_SleepingBagStub_C_OnInteractVehicle");
static_assert(offsetof(BP_SleepingBagStub_C_OnInteractVehicle, Player) == 0x000000, "Member 'BP_SleepingBagStub_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'BP_SleepingBagStub_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(BP_SleepingBagStub_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'BP_SleepingBagStub_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBagStub_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_OnLocalInteract) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_OnLocalInteract");
static_assert(sizeof(BP_SleepingBagStub_C_OnLocalInteract) == 0x000008, "Wrong size on BP_SleepingBagStub_C_OnLocalInteract");
static_assert(offsetof(BP_SleepingBagStub_C_OnLocalInteract, Player) == 0x000000, "Member 'BP_SleepingBagStub_C_OnLocalInteract::Player' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBagStub_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_OnLostFocus) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_OnLostFocus");
static_assert(sizeof(BP_SleepingBagStub_C_OnLostFocus) == 0x000008, "Wrong size on BP_SleepingBagStub_C_OnLostFocus");
static_assert(offsetof(BP_SleepingBagStub_C_OnLostFocus, Player) == 0x000000, "Member 'BP_SleepingBagStub_C_OnLostFocus::Player' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBagStub_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_OnSeen) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_OnSeen");
static_assert(sizeof(BP_SleepingBagStub_C_OnSeen) == 0x000008, "Wrong size on BP_SleepingBagStub_C_OnSeen");
static_assert(offsetof(BP_SleepingBagStub_C_OnSeen, Player) == 0x000000, "Member 'BP_SleepingBagStub_C_OnSeen::Player' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBagStub_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_OnStopInteract) == 0x000008, "Wrong alignment on BP_SleepingBagStub_C_OnStopInteract");
static_assert(sizeof(BP_SleepingBagStub_C_OnStopInteract) == 0x000008, "Wrong size on BP_SleepingBagStub_C_OnStopInteract");
static_assert(offsetof(BP_SleepingBagStub_C_OnStopInteract, Player) == 0x000000, "Member 'BP_SleepingBagStub_C_OnStopInteract::Player' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SleepingBagStub_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SleepingBagStub_C_ReceiveTick");
static_assert(sizeof(BP_SleepingBagStub_C_ReceiveTick) == 0x000004, "Wrong size on BP_SleepingBagStub_C_ReceiveTick");
static_assert(offsetof(BP_SleepingBagStub_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SleepingBagStub_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_SleepingBagStub_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_SleepingBagStub_C_Set3DWidgetVisibility");
static_assert(sizeof(BP_SleepingBagStub_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on BP_SleepingBagStub_C_Set3DWidgetVisibility");
static_assert(offsetof(BP_SleepingBagStub_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_SleepingBagStub_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function BP_SleepingBagStub.BP_SleepingBagStub_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_SleepingBagStub_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBagStub_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_SleepingBagStub_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(BP_SleepingBagStub_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on BP_SleepingBagStub_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(BP_SleepingBagStub_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_SleepingBagStub_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

}

