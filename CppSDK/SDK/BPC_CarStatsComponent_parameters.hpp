#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_CarStatsComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FGrenadeInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "StatType_structs.hpp"


namespace SDK::Params
{

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.AddImpulseVehicle
// 0x0018 (0x0018 - 0x0000)
struct BPC_CarStatsComponent_C_AddImpulseVehicle final
{
public:
	class AAVS_VehicleMaster_C*                   Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_AddImpulseVehicle) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_AddImpulseVehicle");
static_assert(sizeof(BPC_CarStatsComponent_C_AddImpulseVehicle) == 0x000018, "Wrong size on BPC_CarStatsComponent_C_AddImpulseVehicle");
static_assert(offsetof(BPC_CarStatsComponent_C_AddImpulseVehicle, Vehicle) == 0x000000, "Member 'BPC_CarStatsComponent_C_AddImpulseVehicle::Vehicle' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_AddImpulseVehicle, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BPC_CarStatsComponent_C_AddImpulseVehicle::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_AddImpulseVehicle, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000010, "Member 'BPC_CarStatsComponent_C_AddImpulseVehicle::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.CalculateFuel
// 0x0068 (0x0068 - 0x0000)
struct BPC_CarStatsComponent_C_CalculateFuel final
{
public:
	double                                        Delta;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Vehicle_C>          K2Node_DynamicCast_AsI_Vehicle;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_Vehicle_C>          K2Node_DynamicCast_AsI_Vehicle_1;                  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEngineStarted_Started;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsAccelerating_IsAccelerating;         // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_CalculateFuel) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_CalculateFuel");
static_assert(sizeof(BPC_CarStatsComponent_C_CalculateFuel) == 0x000068, "Wrong size on BPC_CarStatsComponent_C_CalculateFuel");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, Delta) == 0x000000, "Member 'BPC_CarStatsComponent_C_CalculateFuel::Delta' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, Temp_bool_Variable) == 0x000008, "Member 'BPC_CarStatsComponent_C_CalculateFuel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, CallFunc_GetStat_Value) == 0x000010, "Member 'BPC_CarStatsComponent_C_CalculateFuel::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, CallFunc_GetStat_Value_1) == 0x000018, "Member 'BPC_CarStatsComponent_C_CalculateFuel::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BPC_CarStatsComponent_C_CalculateFuel::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, K2Node_DynamicCast_AsI_Vehicle) == 0x000028, "Member 'BPC_CarStatsComponent_C_CalculateFuel::K2Node_DynamicCast_AsI_Vehicle' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPC_CarStatsComponent_C_CalculateFuel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, K2Node_DynamicCast_AsI_Vehicle_1) == 0x000040, "Member 'BPC_CarStatsComponent_C_CalculateFuel::K2Node_DynamicCast_AsI_Vehicle_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPC_CarStatsComponent_C_CalculateFuel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, CallFunc_GetEngineStarted_Started) == 0x000051, "Member 'BPC_CarStatsComponent_C_CalculateFuel::CallFunc_GetEngineStarted_Started' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, CallFunc_GetIsAccelerating_IsAccelerating) == 0x000052, "Member 'BPC_CarStatsComponent_C_CalculateFuel::CallFunc_GetIsAccelerating_IsAccelerating' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, K2Node_Select_Default) == 0x000058, "Member 'BPC_CarStatsComponent_C_CalculateFuel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_CalculateFuel, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BPC_CarStatsComponent_C_CalculateFuel::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.DecreaseDurability
// 0x0048 (0x0048 - 0x0000)
struct BPC_CarStatsComponent_C_DecreaseDurability final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStat_ReturnValue;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_DecreaseDurability) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_DecreaseDurability");
static_assert(sizeof(BPC_CarStatsComponent_C_DecreaseDurability) == 0x000048, "Wrong size on BPC_CarStatsComponent_C_DecreaseDurability");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, Value) == 0x000000, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_GetStat_Value) == 0x000010, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_Not_PreBool_ReturnValue_1) == 0x000018, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_GetStat_Value_1) == 0x000020, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_SetStat_ReturnValue) == 0x000038, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_SetStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000041, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_BooleanAND_ReturnValue_1) == 0x000042, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseDurability, CallFunc_BooleanAND_ReturnValue_2) == 0x000043, "Member 'BPC_CarStatsComponent_C_DecreaseDurability::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.DecreaseFuel
// 0x0040 (0x0040 - 0x0000)
struct BPC_CarStatsComponent_C_DecreaseFuel final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStat_ReturnValue;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_DecreaseFuel) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_DecreaseFuel");
static_assert(sizeof(BPC_CarStatsComponent_C_DecreaseFuel) == 0x000040, "Wrong size on BPC_CarStatsComponent_C_DecreaseFuel");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseFuel, Value) == 0x000000, "Member 'BPC_CarStatsComponent_C_DecreaseFuel::Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseFuel, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BPC_CarStatsComponent_C_DecreaseFuel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseFuel, CallFunc_GetStat_Value) == 0x000010, "Member 'BPC_CarStatsComponent_C_DecreaseFuel::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseFuel, CallFunc_GetStat_Value_1) == 0x000018, "Member 'BPC_CarStatsComponent_C_DecreaseFuel::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseFuel, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BPC_CarStatsComponent_C_DecreaseFuel::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseFuel, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'BPC_CarStatsComponent_C_DecreaseFuel::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseFuel, CallFunc_SetStat_ReturnValue) == 0x000030, "Member 'BPC_CarStatsComponent_C_DecreaseFuel::CallFunc_SetStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseFuel, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'BPC_CarStatsComponent_C_DecreaseFuel::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DecreaseFuel, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BPC_CarStatsComponent_C_DecreaseFuel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.DestroyCar
// 0x0018 (0x0018 - 0x0000)
struct BPC_CarStatsComponent_C_DestroyCar final
{
public:
	class UFMODEvent*                             SFX;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VFX;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Mesh;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_DestroyCar) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_DestroyCar");
static_assert(sizeof(BPC_CarStatsComponent_C_DestroyCar) == 0x000018, "Wrong size on BPC_CarStatsComponent_C_DestroyCar");
static_assert(offsetof(BPC_CarStatsComponent_C_DestroyCar, SFX) == 0x000000, "Member 'BPC_CarStatsComponent_C_DestroyCar::SFX' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DestroyCar, VFX) == 0x000008, "Member 'BPC_CarStatsComponent_C_DestroyCar::VFX' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_DestroyCar, Mesh) == 0x000010, "Member 'BPC_CarStatsComponent_C_DestroyCar::Mesh' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.ExecuteUbergraph_BPC_CarStatsComponent
// 0x0038 (0x0038 - 0x0000)
struct BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAVS_VehicleMaster_C*                   K2Node_DynamicCast_AsAVS_Vehicle_Master;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStatType                                     K2Node_CustomEvent_Key;                            // 0x0019(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Value;                          // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateFuel_Delta_ImplicitCast;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent");
static_assert(sizeof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent) == 0x000038, "Wrong size on BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent");
static_assert(offsetof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent, EntryPoint) == 0x000000, "Member 'BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent, K2Node_DynamicCast_AsAVS_Vehicle_Master) == 0x000010, "Member 'BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent::K2Node_DynamicCast_AsAVS_Vehicle_Master' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent, K2Node_CustomEvent_Key) == 0x000019, "Member 'BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent, K2Node_CustomEvent_Value) == 0x000020, "Member 'BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent, K2Node_Event_DeltaSeconds) == 0x00002C, "Member 'BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent, CallFunc_CalculateFuel_Delta_ImplicitCast) == 0x000030, "Member 'BPC_CarStatsComponent_C_ExecuteUbergraph_BPC_CarStatsComponent::CallFunc_CalculateFuel_Delta_ImplicitCast' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.GetStat
// 0x0020 (0x0020 - 0x0000)
struct BPC_CarStatsComponent_C_GetStat final
{
public:
	EStatType                                     Key;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_GetStat) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_GetStat");
static_assert(sizeof(BPC_CarStatsComponent_C_GetStat) == 0x000020, "Wrong size on BPC_CarStatsComponent_C_GetStat");
static_assert(offsetof(BPC_CarStatsComponent_C_GetStat, Key) == 0x000000, "Member 'BPC_CarStatsComponent_C_GetStat::Key' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_GetStat, Value) == 0x000008, "Member 'BPC_CarStatsComponent_C_GetStat::Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_GetStat, CallFunc_Map_Find_Value) == 0x000010, "Member 'BPC_CarStatsComponent_C_GetStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_GetStat, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BPC_CarStatsComponent_C_GetStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.IncreaseDurability
// 0x0030 (0x0030 - 0x0000)
struct BPC_CarStatsComponent_C_IncreaseDurability final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStat_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_IncreaseDurability) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_IncreaseDurability");
static_assert(sizeof(BPC_CarStatsComponent_C_IncreaseDurability) == 0x000030, "Wrong size on BPC_CarStatsComponent_C_IncreaseDurability");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseDurability, Value) == 0x000000, "Member 'BPC_CarStatsComponent_C_IncreaseDurability::Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseDurability, CallFunc_GetStat_Value) == 0x000008, "Member 'BPC_CarStatsComponent_C_IncreaseDurability::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseDurability, CallFunc_GetStat_Value_1) == 0x000010, "Member 'BPC_CarStatsComponent_C_IncreaseDurability::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseDurability, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'BPC_CarStatsComponent_C_IncreaseDurability::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseDurability, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'BPC_CarStatsComponent_C_IncreaseDurability::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseDurability, CallFunc_SetStat_ReturnValue) == 0x000028, "Member 'BPC_CarStatsComponent_C_IncreaseDurability::CallFunc_SetStat_ReturnValue' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.IncreaseFuel
// 0x0030 (0x0030 - 0x0000)
struct BPC_CarStatsComponent_C_IncreaseFuel final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetStat_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_IncreaseFuel) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_IncreaseFuel");
static_assert(sizeof(BPC_CarStatsComponent_C_IncreaseFuel) == 0x000030, "Wrong size on BPC_CarStatsComponent_C_IncreaseFuel");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseFuel, Value) == 0x000000, "Member 'BPC_CarStatsComponent_C_IncreaseFuel::Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseFuel, CallFunc_GetStat_Value) == 0x000008, "Member 'BPC_CarStatsComponent_C_IncreaseFuel::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseFuel, CallFunc_GetStat_Value_1) == 0x000010, "Member 'BPC_CarStatsComponent_C_IncreaseFuel::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseFuel, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'BPC_CarStatsComponent_C_IncreaseFuel::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseFuel, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'BPC_CarStatsComponent_C_IncreaseFuel::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IncreaseFuel, CallFunc_SetStat_ReturnValue) == 0x000028, "Member 'BPC_CarStatsComponent_C_IncreaseFuel::CallFunc_SetStat_ReturnValue' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.IsFullDurability
// 0x0020 (0x0020 - 0x0000)
struct BPC_CarStatsComponent_C_IsFullDurability final
{
public:
	bool                                          IsFull;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_IsFullDurability) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_IsFullDurability");
static_assert(sizeof(BPC_CarStatsComponent_C_IsFullDurability) == 0x000020, "Wrong size on BPC_CarStatsComponent_C_IsFullDurability");
static_assert(offsetof(BPC_CarStatsComponent_C_IsFullDurability, IsFull) == 0x000000, "Member 'BPC_CarStatsComponent_C_IsFullDurability::IsFull' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IsFullDurability, CallFunc_GetStat_Value) == 0x000008, "Member 'BPC_CarStatsComponent_C_IsFullDurability::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IsFullDurability, CallFunc_GetStat_Value_1) == 0x000010, "Member 'BPC_CarStatsComponent_C_IsFullDurability::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IsFullDurability, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BPC_CarStatsComponent_C_IsFullDurability::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.IsFullFuel
// 0x0020 (0x0020 - 0x0000)
struct BPC_CarStatsComponent_C_IsFullFuel final
{
public:
	bool                                          IsFull;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_IsFullFuel) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_IsFullFuel");
static_assert(sizeof(BPC_CarStatsComponent_C_IsFullFuel) == 0x000020, "Wrong size on BPC_CarStatsComponent_C_IsFullFuel");
static_assert(offsetof(BPC_CarStatsComponent_C_IsFullFuel, IsFull) == 0x000000, "Member 'BPC_CarStatsComponent_C_IsFullFuel::IsFull' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IsFullFuel, CallFunc_GetStat_Value) == 0x000008, "Member 'BPC_CarStatsComponent_C_IsFullFuel::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IsFullFuel, CallFunc_GetStat_Value_1) == 0x000010, "Member 'BPC_CarStatsComponent_C_IsFullFuel::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_IsFullFuel, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BPC_CarStatsComponent_C_IsFullFuel::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.NeedFuelAmount
// 0x0020 (0x0020 - 0x0000)
struct BPC_CarStatsComponent_C_NeedFuelAmount final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_NeedFuelAmount) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_NeedFuelAmount");
static_assert(sizeof(BPC_CarStatsComponent_C_NeedFuelAmount) == 0x000020, "Wrong size on BPC_CarStatsComponent_C_NeedFuelAmount");
static_assert(offsetof(BPC_CarStatsComponent_C_NeedFuelAmount, Value) == 0x000000, "Member 'BPC_CarStatsComponent_C_NeedFuelAmount::Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_NeedFuelAmount, CallFunc_GetStat_Value) == 0x000008, "Member 'BPC_CarStatsComponent_C_NeedFuelAmount::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_NeedFuelAmount, CallFunc_GetStat_Value_1) == 0x000010, "Member 'BPC_CarStatsComponent_C_NeedFuelAmount::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_NeedFuelAmount, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BPC_CarStatsComponent_C_NeedFuelAmount::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.OnDurabilityChange__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BPC_CarStatsComponent_C_OnDurabilityChange__DelegateSignature final
{
public:
	double                                        Durability;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_OnDurabilityChange__DelegateSignature) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_OnDurabilityChange__DelegateSignature");
static_assert(sizeof(BPC_CarStatsComponent_C_OnDurabilityChange__DelegateSignature) == 0x000008, "Wrong size on BPC_CarStatsComponent_C_OnDurabilityChange__DelegateSignature");
static_assert(offsetof(BPC_CarStatsComponent_C_OnDurabilityChange__DelegateSignature, Durability) == 0x000000, "Member 'BPC_CarStatsComponent_C_OnDurabilityChange__DelegateSignature::Durability' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.OnFuelChange__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BPC_CarStatsComponent_C_OnFuelChange__DelegateSignature final
{
public:
	double                                        Fuel;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_OnFuelChange__DelegateSignature) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_OnFuelChange__DelegateSignature");
static_assert(sizeof(BPC_CarStatsComponent_C_OnFuelChange__DelegateSignature) == 0x000008, "Wrong size on BPC_CarStatsComponent_C_OnFuelChange__DelegateSignature");
static_assert(offsetof(BPC_CarStatsComponent_C_OnFuelChange__DelegateSignature, Fuel) == 0x000000, "Member 'BPC_CarStatsComponent_C_OnFuelChange__DelegateSignature::Fuel' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.RadialDamage
// 0x05B0 (0x05B0 - 0x0000)
struct BPC_CarStatsComponent_C_RadialDamage final
{
public:
	class AAVS_VehicleMaster_C*                   Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         _PlayerToIgnore;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFGrenadeInfo                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0348)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyRadialDamageWithFalloff_ReturnValue; // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x03B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x03C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x04B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B3[0x1];                                      // 0x04B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0520(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0530(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyRadialDamageWithFalloff_BaseDamage_ImplicitCast; // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyRadialDamageWithFalloff_MinimumDamage_ImplicitCast; // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyRadialDamageWithFalloff_DamageInnerRadius_ImplicitCast; // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyRadialDamageWithFalloff_DamageOuterRadius_ImplicitCast; // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyRadialDamageWithFalloff_DamageFalloff_ImplicitCast; // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceMulti_Radius_ImplicitCast;     // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_RadialDamage) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_RadialDamage");
static_assert(sizeof(BPC_CarStatsComponent_C_RadialDamage) == 0x0005B0, "Wrong size on BPC_CarStatsComponent_C_RadialDamage");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, Vehicle) == 0x000000, "Member 'BPC_CarStatsComponent_C_RadialDamage::Vehicle' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, _PlayerToIgnore) == 0x000008, "Member 'BPC_CarStatsComponent_C_RadialDamage::_PlayerToIgnore' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BPC_CarStatsComponent_C_RadialDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BPC_CarStatsComponent_C_RadialDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003A0, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_Array_Add_ReturnValue) == 0x0003A4, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_ApplyRadialDamageWithFalloff_ReturnValue) == 0x0003A8, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_ApplyRadialDamageWithFalloff_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_SphereTraceMulti_OutHits) == 0x0003B0, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_SphereTraceMulti_ReturnValue) == 0x0003C0, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_Array_Length_ReturnValue) == 0x0003C4, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_Array_Get_Item) == 0x0003C8, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_Less_IntInt_ReturnValue) == 0x0004B0, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x0004B1, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x0004B2, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_Time) == 0x0004B4, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_Distance) == 0x0004B8, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_Location) == 0x0004C0, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0004D8, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_Normal) == 0x0004F0, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x000508, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_PhysMat) == 0x000520, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_HitActor) == 0x000528, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_HitComponent) == 0x000530, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_HitBoneName) == 0x000538, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_BoneName) == 0x000540, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_HitItem) == 0x000548, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_ElementIndex) == 0x00054C, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_FaceIndex) == 0x000550, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_TraceStart) == 0x000558, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_BreakHitResult_TraceEnd) == 0x000570, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, K2Node_DynamicCast_AsSurvival_Player) == 0x000588, "Member 'BPC_CarStatsComponent_C_RadialDamage::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, K2Node_DynamicCast_bSuccess) == 0x000590, "Member 'BPC_CarStatsComponent_C_RadialDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_ApplyRadialDamageWithFalloff_BaseDamage_ImplicitCast) == 0x000594, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_ApplyRadialDamageWithFalloff_BaseDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_ApplyRadialDamageWithFalloff_MinimumDamage_ImplicitCast) == 0x000598, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_ApplyRadialDamageWithFalloff_MinimumDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_ApplyRadialDamageWithFalloff_DamageInnerRadius_ImplicitCast) == 0x00059C, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_ApplyRadialDamageWithFalloff_DamageInnerRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_ApplyRadialDamageWithFalloff_DamageOuterRadius_ImplicitCast) == 0x0005A0, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_ApplyRadialDamageWithFalloff_DamageOuterRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_ApplyRadialDamageWithFalloff_DamageFalloff_ImplicitCast) == 0x0005A4, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_ApplyRadialDamageWithFalloff_DamageFalloff_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_RadialDamage, CallFunc_SphereTraceMulti_Radius_ImplicitCast) == 0x0005A8, "Member 'BPC_CarStatsComponent_C_RadialDamage::CallFunc_SphereTraceMulti_Radius_ImplicitCast' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPC_CarStatsComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BPC_CarStatsComponent_C_ReceiveTick");
static_assert(sizeof(BPC_CarStatsComponent_C_ReceiveTick) == 0x000004, "Wrong size on BPC_CarStatsComponent_C_ReceiveTick");
static_assert(offsetof(BPC_CarStatsComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPC_CarStatsComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.SetStat
// 0x0018 (0x0018 - 0x0000)
struct BPC_CarStatsComponent_C_SetStat final
{
public:
	EStatType                                     Stat;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_SetStat) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_SetStat");
static_assert(sizeof(BPC_CarStatsComponent_C_SetStat) == 0x000018, "Wrong size on BPC_CarStatsComponent_C_SetStat");
static_assert(offsetof(BPC_CarStatsComponent_C_SetStat, Stat) == 0x000000, "Member 'BPC_CarStatsComponent_C_SetStat::Stat' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_SetStat, Value) == 0x000008, "Member 'BPC_CarStatsComponent_C_SetStat::Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_SetStat, ReturnValue) == 0x000010, "Member 'BPC_CarStatsComponent_C_SetStat::ReturnValue' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.SetStat_Multi
// 0x0010 (0x0010 - 0x0000)
struct BPC_CarStatsComponent_C_SetStat_Multi final
{
public:
	EStatType                                     Key;                                               // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_SetStat_Multi) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_SetStat_Multi");
static_assert(sizeof(BPC_CarStatsComponent_C_SetStat_Multi) == 0x000010, "Wrong size on BPC_CarStatsComponent_C_SetStat_Multi");
static_assert(offsetof(BPC_CarStatsComponent_C_SetStat_Multi, Key) == 0x000000, "Member 'BPC_CarStatsComponent_C_SetStat_Multi::Key' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_SetStat_Multi, Value) == 0x000008, "Member 'BPC_CarStatsComponent_C_SetStat_Multi::Value' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.StatInitialize
// 0x0020 (0x0020 - 0x0000)
struct BPC_CarStatsComponent_C_StatInitialize final
{
public:
	double                                        CallFunc_GetStat_Value;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value_1;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_StatInitialize) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_StatInitialize");
static_assert(sizeof(BPC_CarStatsComponent_C_StatInitialize) == 0x000020, "Wrong size on BPC_CarStatsComponent_C_StatInitialize");
static_assert(offsetof(BPC_CarStatsComponent_C_StatInitialize, CallFunc_GetStat_Value) == 0x000000, "Member 'BPC_CarStatsComponent_C_StatInitialize::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_StatInitialize, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'BPC_CarStatsComponent_C_StatInitialize::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_StatInitialize, CallFunc_GetStat_Value_1) == 0x000010, "Member 'BPC_CarStatsComponent_C_StatInitialize::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_StatInitialize, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BPC_CarStatsComponent_C_StatInitialize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_StatInitialize, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000019, "Member 'BPC_CarStatsComponent_C_StatInitialize::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_StatInitialize, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'BPC_CarStatsComponent_C_StatInitialize::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_StatInitialize, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001B, "Member 'BPC_CarStatsComponent_C_StatInitialize::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_StatInitialize, CallFunc_BooleanAND_ReturnValue_1) == 0x00001C, "Member 'BPC_CarStatsComponent_C_StatInitialize::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BPC_CarStatsComponent.BPC_CarStatsComponent_C.UpdateCriticalState
// 0x0020 (0x0020 - 0x0000)
struct BPC_CarStatsComponent_C_UpdateCriticalState final
{
public:
	double                                        CallFunc_GetStat_Value;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value_1;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CarStatsComponent_C_UpdateCriticalState) == 0x000008, "Wrong alignment on BPC_CarStatsComponent_C_UpdateCriticalState");
static_assert(sizeof(BPC_CarStatsComponent_C_UpdateCriticalState) == 0x000020, "Wrong size on BPC_CarStatsComponent_C_UpdateCriticalState");
static_assert(offsetof(BPC_CarStatsComponent_C_UpdateCriticalState, CallFunc_GetStat_Value) == 0x000000, "Member 'BPC_CarStatsComponent_C_UpdateCriticalState::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_UpdateCriticalState, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'BPC_CarStatsComponent_C_UpdateCriticalState::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_UpdateCriticalState, CallFunc_GetStat_Value_1) == 0x000010, "Member 'BPC_CarStatsComponent_C_UpdateCriticalState::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_CarStatsComponent_C_UpdateCriticalState, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BPC_CarStatsComponent_C_UpdateCriticalState::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");

}

