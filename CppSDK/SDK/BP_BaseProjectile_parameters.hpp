#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPS_HitDecals_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "PenetrationData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "S_Float_structs.hpp"
#include "BPS_HitParticles_structs.hpp"
#include "BPS_DamageInfo_structs.hpp"
#include "S_BulletInfo_structs.hpp"
#include "S_GameplaySettings_structs.hpp"
#include "S_SimplifiedHitInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_BaseProjectile.BP_BaseProjectile_C.AngleBetweenVectorsInDegrees
// 0x0078 (0x0078 - 0x0000)
struct BP_BaseProjectile_C_AngleBetweenVectorsInDegrees final
{
public:
	struct FVector                                Vector1;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector2;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_AngleBetweenVectorsInDegrees) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_AngleBetweenVectorsInDegrees");
static_assert(sizeof(BP_BaseProjectile_C_AngleBetweenVectorsInDegrees) == 0x000078, "Wrong size on BP_BaseProjectile_C_AngleBetweenVectorsInDegrees");
static_assert(offsetof(BP_BaseProjectile_C_AngleBetweenVectorsInDegrees, Vector1) == 0x000000, "Member 'BP_BaseProjectile_C_AngleBetweenVectorsInDegrees::Vector1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_AngleBetweenVectorsInDegrees, Vector2) == 0x000018, "Member 'BP_BaseProjectile_C_AngleBetweenVectorsInDegrees::Vector2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_AngleBetweenVectorsInDegrees, Angle) == 0x000030, "Member 'BP_BaseProjectile_C_AngleBetweenVectorsInDegrees::Angle' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_AngleBetweenVectorsInDegrees, CallFunc_Normal_ReturnValue) == 0x000038, "Member 'BP_BaseProjectile_C_AngleBetweenVectorsInDegrees::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_AngleBetweenVectorsInDegrees, CallFunc_Normal_ReturnValue_1) == 0x000050, "Member 'BP_BaseProjectile_C_AngleBetweenVectorsInDegrees::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_AngleBetweenVectorsInDegrees, CallFunc_Dot_VectorVector_ReturnValue) == 0x000068, "Member 'BP_BaseProjectile_C_AngleBetweenVectorsInDegrees::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_AngleBetweenVectorsInDegrees, CallFunc_DegAcos_ReturnValue) == 0x000070, "Member 'BP_BaseProjectile_C_AngleBetweenVectorsInDegrees::CallFunc_DegAcos_ReturnValue' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.BndEvt__BP_BaseProjectile_ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature
// 0x0100 (0x0100 - 0x0000)
struct BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x00E8(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature");
static_assert(sizeof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature) == 0x000100, "Wrong size on BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature, ImpactResult) == 0x000000, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature::ImpactResult' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature, ImpactVelocity) == 0x0000E8, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_ProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature::ImpactVelocity' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'BP_BaseProjectile_C_BndEvt__BP_BaseProjectile_Sphere_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.CalculateDamageBySpeed
// 0x0060 (0x0060 - 0x0000)
struct BP_BaseProjectile_C_CalculateDamageBySpeed final
{
public:
	double                                        Param_Damage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CalculatedDmg;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_CalculateDamageBySpeed) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_CalculateDamageBySpeed");
static_assert(sizeof(BP_BaseProjectile_C_CalculateDamageBySpeed) == 0x000060, "Wrong size on BP_BaseProjectile_C_CalculateDamageBySpeed");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, Param_Damage) == 0x000000, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::Param_Damage' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, Result) == 0x000008, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::Result' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, CalculatedDmg) == 0x000010, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::CalculatedDmg' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, CallFunc_VSize_ReturnValue) == 0x000018, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast) == 0x000050, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDamageBySpeed, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000058, "Member 'BP_BaseProjectile_C_CalculateDamageBySpeed::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.CalculateDistance
// 0x0028 (0x0028 - 0x0000)
struct BP_BaseProjectile_C_CalculateDistance final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_CalculateDistance) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_CalculateDistance");
static_assert(sizeof(BP_BaseProjectile_C_CalculateDistance) == 0x000028, "Wrong size on BP_BaseProjectile_C_CalculateDistance");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_BaseProjectile_C_CalculateDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDistance, CallFunc_Vector_Distance_ReturnValue) == 0x000018, "Member 'BP_BaseProjectile_C_CalculateDistance::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateDistance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_BaseProjectile_C_CalculateDistance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.CalculateSpeed
// 0x0028 (0x0028 - 0x0000)
struct BP_BaseProjectile_C_CalculateSpeed final
{
public:
	double                                        CurrentSpeed;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeA_ImplicitCast;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxSpeed_ImplicitCast;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_CalculateSpeed) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_CalculateSpeed");
static_assert(sizeof(BP_BaseProjectile_C_CalculateSpeed) == 0x000028, "Wrong size on BP_BaseProjectile_C_CalculateSpeed");
static_assert(offsetof(BP_BaseProjectile_C_CalculateSpeed, CurrentSpeed) == 0x000000, "Member 'BP_BaseProjectile_C_CalculateSpeed::CurrentSpeed' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateSpeed, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_BaseProjectile_C_CalculateSpeed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateSpeed, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast) == 0x000010, "Member 'BP_BaseProjectile_C_CalculateSpeed::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateSpeed, CallFunc_MapRangeClamped_OutRangeA_ImplicitCast) == 0x000018, "Member 'BP_BaseProjectile_C_CalculateSpeed::CallFunc_MapRangeClamped_OutRangeA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_CalculateSpeed, K2Node_VariableSet_MaxSpeed_ImplicitCast) == 0x000020, "Member 'BP_BaseProjectile_C_CalculateSpeed::K2Node_VariableSet_MaxSpeed_ImplicitCast' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.ComputeExitLocation
// 0x06E0 (0x06E0 - 0x0000)
struct BP_BaseProjectile_C_ComputeExitLocation final
{
public:
	struct FHitResult                             Param_HitResult;                                   // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x00E8(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ExitLocation;                                      // 0x0100(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultFound;                                       // 0x0118(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ExitNormal;                                        // 0x0120(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0138(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x2];                                      // 0x029A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x03C0(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x03D8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x03E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x04D8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x04E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x3];                                      // 0x04F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0508(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F2[0x2];                                      // 0x05F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0670(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C9[0x7];                                      // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x06D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_ComputeExitLocation) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_ComputeExitLocation");
static_assert(sizeof(BP_BaseProjectile_C_ComputeExitLocation) == 0x0006E0, "Wrong size on BP_BaseProjectile_C_ComputeExitLocation");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, Param_HitResult) == 0x000000, "Member 'BP_BaseProjectile_C_ComputeExitLocation::Param_HitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, ImpactVelocity) == 0x0000E8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::ImpactVelocity' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, ExitLocation) == 0x000100, "Member 'BP_BaseProjectile_C_ComputeExitLocation::ExitLocation' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, ResultFound) == 0x000118, "Member 'BP_BaseProjectile_C_ComputeExitLocation::ResultFound' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, ExitNormal) == 0x000120, "Member 'BP_BaseProjectile_C_ComputeExitLocation::ExitNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, Temp_object_Variable) == 0x000138, "Member 'BP_BaseProjectile_C_ComputeExitLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Normal_ReturnValue) == 0x000148, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x000160, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x000161, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Time) == 0x000164, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Distance) == 0x000168, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_BoneName) == 0x0001F0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_TraceStart) == 0x000208, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000220, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000238, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000250, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000268, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Normal_ReturnValue_1) == 0x000280, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000298, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000299, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Time_1) == 0x00029C, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Distance_1) == 0x0002A0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Location_1) == 0x0002A8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0002C0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Normal_1) == 0x0002D8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0002F0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_PhysMat_1) == 0x000308, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitActor_1) == 0x000310, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitComponent_1) == 0x000318, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitBoneName_1) == 0x000320, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_BoneName_1) == 0x000328, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitItem_1) == 0x000330, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_ElementIndex_1) == 0x000334, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_FaceIndex_1) == 0x000338, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_TraceStart_1) == 0x000340, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_TraceEnd_1) == 0x000358, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000370, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000388, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0003A0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, Temp_int_Variable) == 0x0003B8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, K2Node_MakeArray_Array) == 0x0003C0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Add_IntInt_ReturnValue) == 0x0003D0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, Temp_object_Variable_1) == 0x0003D8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0003E8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0004D0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, K2Node_MakeArray_Array_1) == 0x0004D8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x0004E8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x0004F8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Array_LastIndex_ReturnValue) == 0x0004FC, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000500, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000504, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_Array_Get_Item) == 0x000508, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0005F0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0005F1, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Time_2) == 0x0005F4, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Distance_2) == 0x0005F8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Location_2) == 0x000600, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000618, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_Normal_2) == 0x000630, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000648, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_PhysMat_2) == 0x000660, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitActor_2) == 0x000668, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitComponent_2) == 0x000670, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitBoneName_2) == 0x000678, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_BoneName_2) == 0x000680, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_HitItem_2) == 0x000688, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_ElementIndex_2) == 0x00068C, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_FaceIndex_2) == 0x000690, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_TraceStart_2) == 0x000698, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_BreakHitResult_TraceEnd_2) == 0x0006B0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0006C8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, K2Node_DynamicCast_AsSurvival_Player) == 0x0006D0, "Member 'BP_BaseProjectile_C_ComputeExitLocation::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, K2Node_DynamicCast_bSuccess) == 0x0006D8, "Member 'BP_BaseProjectile_C_ComputeExitLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ComputeExitLocation, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0006D9, "Member 'BP_BaseProjectile_C_ComputeExitLocation::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.DecideWhetherToPenetrate
// 0x02E8 (0x02E8 - 0x0000)
struct BP_BaseProjectile_C_DecideWhetherToPenetrate final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x00E8(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Penetrate;                                         // 0x0100(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPenetrationData                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0220(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AngleBetweenVectorsInDegrees_Angle;       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_DecideWhetherToPenetrate) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_DecideWhetherToPenetrate");
static_assert(sizeof(BP_BaseProjectile_C_DecideWhetherToPenetrate) == 0x0002E8, "Wrong size on BP_BaseProjectile_C_DecideWhetherToPenetrate");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, Hit) == 0x000000, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::Hit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, ImpactVelocity) == 0x0000E8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::ImpactVelocity' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, Penetrate) == 0x000100, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::Penetrate' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_RandomFloatInRange_ReturnValue) == 0x000108, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_VSize_ReturnValue) == 0x000110, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_bBlockingHit) == 0x000118, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_bInitialOverlap) == 0x000119, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_Location) == 0x000128, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_ImpactPoint) == 0x000140, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_Normal) == 0x000158, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_ImpactNormal) == 0x000170, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_PhysMat) == 0x000188, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_HitActor) == 0x000190, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_HitComponent) == 0x000198, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_HitBoneName) == 0x0001A0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_BoneName) == 0x0001A8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_HitItem) == 0x0001B0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_ElementIndex) == 0x0001B4, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_FaceIndex) == 0x0001B8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_TraceStart) == 0x0001C0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_BreakHitResult_TraceEnd) == 0x0001D8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_GetObjectName_ReturnValue) == 0x0001F8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000208, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Conv_StringToName_ReturnValue) == 0x000210, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_FClamp_ReturnValue) == 0x000218, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_GetDataTableRowFromName_OutRow) == 0x000220, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000234, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000238, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_AngleBetweenVectorsInDegrees_Angle) == 0x000250, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_AngleBetweenVectorsInDegrees_Angle' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000260, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000268, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000270, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_FClamp_ReturnValue_1) == 0x000278, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_FClamp_ReturnValue_2) == 0x000280, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000288, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000290, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000298, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0002A0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_FClamp_ReturnValue_3) == 0x0002A8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0002B0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0002B8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0002C0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0002C8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0002D0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0002D8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x0002E0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.DecideWhetherToPenetrate_Simple
// 0x01F0 (0x01F0 - 0x0000)
struct BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Penetrate;                                         // 0x00E8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPenetrationData                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x01D8(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple");
static_assert(sizeof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple) == 0x0001F0, "Wrong size on BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, Hit) == 0x000000, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::Hit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, Penetrate) == 0x0000E8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::Penetrate' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_bBlockingHit) == 0x0000E9, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000EA, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_Time) == 0x0000EC, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_Distance) == 0x0000F0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_Location) == 0x0000F8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_ImpactPoint) == 0x000110, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_Normal) == 0x000128, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_ImpactNormal) == 0x000140, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_BoneName) == 0x000178, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_HitItem) == 0x000180, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_ElementIndex) == 0x000184, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_FaceIndex) == 0x000188, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_TraceStart) == 0x000190, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_BreakHitResult_TraceEnd) == 0x0001A8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_GetObjectName_ReturnValue) == 0x0001C0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_Conv_StringToName_ReturnValue) == 0x0001D0, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001D8, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001EC, "Member 'BP_BaseProjectile_C_DecideWhetherToPenetrate_Simple::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.DelayDecalSpawn
// 0x0048 (0x0048 - 0x0000)
struct BP_BaseProjectile_C_DelayDecalSpawn final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DecalMaterial;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_BaseProjectile_C_DelayDecalSpawn) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_DelayDecalSpawn");
static_assert(sizeof(BP_BaseProjectile_C_DelayDecalSpawn) == 0x000048, "Wrong size on BP_BaseProjectile_C_DelayDecalSpawn");
static_assert(offsetof(BP_BaseProjectile_C_DelayDecalSpawn, Location) == 0x000000, "Member 'BP_BaseProjectile_C_DelayDecalSpawn::Location' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DelayDecalSpawn, Forward) == 0x000018, "Member 'BP_BaseProjectile_C_DelayDecalSpawn::Forward' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DelayDecalSpawn, DecalMaterial) == 0x000030, "Member 'BP_BaseProjectile_C_DelayDecalSpawn::DecalMaterial' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_DelayDecalSpawn, ActorsToIgnore) == 0x000038, "Member 'BP_BaseProjectile_C_DelayDecalSpawn::ActorsToIgnore' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.ExecuteUbergraph_BP_BaseProjectile
// 0x1010 (0x1010 - 0x0000)
struct BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit_1;                          // 0x0010(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_HitHandling_ImpactPoint;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_HitHandling_ImpactNormal;                 // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_HitHandling_SurfaceType;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_CustomEvent_HitPlayer;                      // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent; // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SimplifiedHitInfo                   CallFunc_SimplifyHitInfo_S_SimplifiedHitInfo;      // 0x0180(0x0080)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GameplaySettings                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComponent;                 // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x0260(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x2];                                      // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Light_MASTER_C*                     K2Node_DynamicCast_AsBP_Light_MASTER;              // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACutscenePersAnim_C*                    K2Node_DynamicCast_AsCutscene_Pers_Anim;           // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAVS_VehicleMaster_C*                   K2Node_DynamicCast_AsAVS_Vehicle_Master;           // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DeerV2_C*                           K2Node_DynamicCast_AsBP_Deer_V2;                   // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x3];                                      // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              K2Node_DynamicCast_AsZombie;                       // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483[0x1];                                      // 0x0483(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0500(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Float                               CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D[0x3];                                      // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582[0x6];                                      // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Forward;                        // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_CustomEvent_DecalMaterial;                  // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_CustomEvent_ActorsToIgnore;                 // 0x05C0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateDamageBySpeed_Result;            // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0620(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0709(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x070A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x070B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_714[0x4];                                      // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0778(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0788(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_821[0x7];                                      // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalDelaySpawner_C*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0828(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0831(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0832(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_833[0x5];                                      // 0x0833(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_ImpactResult;           // 0x0848(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_ComponentBoundEvent_ImpactVelocity;         // 0x0930(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateDamageBySpeed_Result_1;          // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyPointDamage_ReturnValue;             // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_954[0x4];                                      // 0x0954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0958(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0960(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0968(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0974(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_975[0x3];                                      // 0x0975(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0978(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0A60(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0A68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0A70(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0A78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0A90(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AZombie_C*                              K2Node_DynamicCast_AsZombie_1;                     // 0x0B78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B81[0x7];                                      // 0x0B81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_HitHandling_ImpactPoint_1;                // 0x0B88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_HitHandling_ImpactNormal_1;               // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_HitHandling_SurfaceType_1;                // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x0BB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x0BBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BBB[0x1];                                      // 0x0BBB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC4[0x4];                                      // 0x0BC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x0BC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x0BE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x0BF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x0C10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x0C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x0C30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x0C38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_3;                // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0C50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x0C54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x0C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5C[0x4];                                      // 0x0C5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x0C60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0C78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAVS_VehicleMaster_C*                   K2Node_DynamicCast_AsAVS_Vehicle_Master_1;         // 0x0C90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C99[0x7];                                      // 0x0C99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0CA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0CA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CAA[0x6];                                      // 0x0CAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit_2;                          // 0x0CB0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0D98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_HitHandling_ImpactPoint_2;                // 0x0DA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_HitHandling_ImpactNormal_2;               // 0x0DC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_HitHandling_SurfaceType_2;                // 0x0DD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD9[0x3];                                      // 0x0DD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0DDC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE4[0x4];                                      // 0x0DE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BulletInfo                          CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0DE8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF9[0x7];                                      // 0x0DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_DamageInfo                        K2Node_MakeStruct_BPS_DamageInfo;                  // 0x0E00(0x0098)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FBPS_DamageInfo>                K2Node_MakeArray_Array;                            // 0x0E98(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_4;        // 0x0EA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0EAA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_5;        // 0x0EAB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0EAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EAD[0x3];                                      // 0x0EAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0EB0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_HitHandling_ImpactPoint_3;                // 0x0F98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_HitHandling_ImpactNormal_3;               // 0x0FB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_HitHandling_SurfaceType_3;                // 0x0FC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC9[0x7];                                      // 0x0FC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0FD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_6;        // 0x0FD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x0FDA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FDB[0x1];                                      // 0x0FDB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_InitBullet_bulletSpeedMultiplier_ImplicitCast; // 0x0FDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InitBullet_bulletSlowCoef_ImplicitCast;   // 0x0FE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE4[0x4];                                      // 0x0FE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast; // 0x0FF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InitBullet_bulletSpeed_ImplicitCast;      // 0x0FFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InitBullet_bulletSpeedFinal_ImplicitCast; // 0x1000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InitBulletParam_fTrueCaliber_ImplicitCast; // 0x1004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InitBulletParam_fMass_ImplicitCast;       // 0x1008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile");
static_assert(sizeof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile) == 0x001010, "Wrong size on BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, EntryPoint) == 0x000000, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_Hit_1) == 0x000010, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_Hit_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_ImpactPoint) == 0x000100, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_ImpactNormal) == 0x000118, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_SurfaceType) == 0x000130, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsLocallyControlled_ReturnValue) == 0x000131, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_HitPlayer) == 0x000138, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_HitPlayer' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000140, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsValid_ReturnValue) == 0x000141, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Not_PreBool_ReturnValue) == 0x000142, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000143, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_PlayEventWithOcclusion_FMODAudioComponent) == 0x000148, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_PlayEventWithOcclusion_FMODAudioComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsValid_ReturnValue_1) == 0x000150, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsPlaying_ReturnValue) == 0x000151, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, Temp_bool_Has_Been_Initd_Variable) == 0x000152, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BooleanAND_ReturnValue) == 0x000153, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsSurvival_Player) == 0x000158, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Not_PreBool_ReturnValue_1) == 0x000161, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x000162, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, Temp_bool_IsClosed_Variable) == 0x000163, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HasAuthority_ReturnValue) == 0x000164, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HasAuthority_ReturnValue_1) == 0x000165, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetPlayerController_ReturnValue) == 0x000168, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsSurv_PC) == 0x000170, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess_1) == 0x000178, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_SimplifyHitInfo_S_SimplifiedHitInfo) == 0x000180, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_SimplifyHitInfo_S_SimplifiedHitInfo' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HasAuthority_ReturnValue_2) == 0x000200, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetDataTableRowFromName_OutRow) == 0x000208, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000218, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000220, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_OtherActor) == 0x000238, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_OtherComponent) == 0x000240, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_OtherComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_NormalImpulse) == 0x000248, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_HitResult) == 0x000260, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_bBlockingHit) == 0x000348, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_bInitialOverlap) == 0x000349, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Time) == 0x00034C, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Distance) == 0x000350, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Location) == 0x000358, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ImpactPoint) == 0x000370, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Normal) == 0x000388, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ImpactNormal) == 0x0003A0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_PhysMat) == 0x0003B8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitActor) == 0x0003C0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitComponent) == 0x0003C8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitBoneName) == 0x0003D0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_BoneName) == 0x0003D8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitItem) == 0x0003E0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ElementIndex) == 0x0003E4, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_FaceIndex) == 0x0003E8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_TraceStart) == 0x0003F0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_TraceEnd) == 0x000408, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000420, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsBP_Light_MASTER) == 0x000428, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsBP_Light_MASTER' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess_2) == 0x000430, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsCutscene_Pers_Anim) == 0x000438, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsCutscene_Pers_Anim' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess_3) == 0x000440, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsAVS_Vehicle_Master) == 0x000448, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsAVS_Vehicle_Master' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess_4) == 0x000450, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsBP_Deer_V2) == 0x000458, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsBP_Deer_V2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess_5) == 0x000460, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_ApplyDamage_ReturnValue) == 0x000464, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsZombie) == 0x000468, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsZombie' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess_6) == 0x000470, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsSurvival_Player_1) == 0x000478, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess_7) == 0x000480, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000481, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000482, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Time_1) == 0x000484, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Distance_1) == 0x000488, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Location_1) == 0x000490, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0004A8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Normal_1) == 0x0004C0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0004D8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_PhysMat_1) == 0x0004F0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitActor_1) == 0x0004F8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitComponent_1) == 0x000500, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitBoneName_1) == 0x000508, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_BoneName_1) == 0x000510, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitItem_1) == 0x000518, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ElementIndex_1) == 0x00051C, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_FaceIndex_1) == 0x000520, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_TraceStart_1) == 0x000528, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_TraceEnd_1) == 0x000540, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000558, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x00055C, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetController_ReturnValue) == 0x000560, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_SwitchName_CmpSuccess) == 0x000568, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000570, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000578, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsValid_ReturnValue_2) == 0x000580, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HasAuthority_ReturnValue_3) == 0x000581, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_Location) == 0x000588, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_Forward) == 0x0005A0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_Forward' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_DecalMaterial) == 0x0005B8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_DecalMaterial' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_ActorsToIgnore) == 0x0005C0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0005D0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0005E8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_CalculateDamageBySpeed_Result) == 0x000600, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_CalculateDamageBySpeed_Result' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000608, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_LineTraceSingle_OutHit) == 0x000620, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_LineTraceSingle_ReturnValue) == 0x000708, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsValid_ReturnValue_3) == 0x000709, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_bBlockingHit_2) == 0x00070A, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x00070B, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Time_2) == 0x00070C, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Distance_2) == 0x000710, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Location_2) == 0x000718, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000730, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Normal_2) == 0x000748, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000760, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_PhysMat_2) == 0x000778, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitActor_2) == 0x000780, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitComponent_2) == 0x000788, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitBoneName_2) == 0x000790, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_BoneName_2) == 0x000798, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitItem_2) == 0x0007A0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ElementIndex_2) == 0x0007A4, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_FaceIndex_2) == 0x0007A8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_TraceStart_2) == 0x0007B0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_TraceEnd_2) == 0x0007C8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0007E0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0007F8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000800, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetOwner_ReturnValue) == 0x000818, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000820, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_SpawnObject_ReturnValue) == 0x000828, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000830, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BooleanAND_ReturnValue_1) == 0x000831, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HasAuthority_ReturnValue_4) == 0x000832, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000838, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000840, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_ImpactResult) == 0x000848, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_ImpactResult' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_ImpactVelocity) == 0x000930, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_ImpactVelocity' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_CalculateDamageBySpeed_Result_1) == 0x000948, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_CalculateDamageBySpeed_Result_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_ApplyPointDamage_ReturnValue) == 0x000950, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_ApplyPointDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000958, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000960, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000968, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000970, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_bFromSweep) == 0x000974, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_SweepResult) == 0x000978, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_HitComponent) == 0x000A60, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_OtherActor) == 0x000A68, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_OtherComp) == 0x000A70, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000A78, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_ComponentBoundEvent_Hit) == 0x000A90, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsZombie_1) == 0x000B78, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsZombie_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess_8) == 0x000B80, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_ImpactPoint_1) == 0x000B88, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_ImpactNormal_1) == 0x000BA0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_SurfaceType_1) == 0x000BB8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_SurfaceType_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_bBlockingHit_3) == 0x000BB9, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x000BBA, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Time_3) == 0x000BBC, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Distance_3) == 0x000BC0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Location_3) == 0x000BC8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ImpactPoint_3) == 0x000BE0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_Normal_3) == 0x000BF8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ImpactNormal_3) == 0x000C10, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_PhysMat_3) == 0x000C28, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitActor_3) == 0x000C30, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitComponent_3) == 0x000C38, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitBoneName_3) == 0x000C40, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_BoneName_3) == 0x000C48, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_BoneName_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_HitItem_3) == 0x000C50, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_ElementIndex_3) == 0x000C54, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_FaceIndex_3) == 0x000C58, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_TraceStart_3) == 0x000C60, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BreakHitResult_TraceEnd_3) == 0x000C78, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsAVS_Vehicle_Master_1) == 0x000C90, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsAVS_Vehicle_Master_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess_9) == 0x000C98, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000CA0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_DynamicCast_bSuccess_10) == 0x000CA8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000CA9, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_Hit_2) == 0x000CB0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_Hit_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000D98, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_ImpactPoint_2) == 0x000DA8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_ImpactNormal_2) == 0x000DC0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_SurfaceType_2) == 0x000DD8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_SurfaceType_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Conv_StringToName_ReturnValue) == 0x000DDC, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000DE8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000DF8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_MakeStruct_BPS_DamageInfo) == 0x000E00, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_MakeStruct_BPS_DamageInfo' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_MakeArray_Array) == 0x000E98, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_SwitchEnum_CmpSuccess) == 0x000EA8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsLocallyControlled_ReturnValue_4) == 0x000EA9, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsLocallyControlled_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_BooleanAND_ReturnValue_2) == 0x000EAA, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsLocallyControlled_ReturnValue_5) == 0x000EAB, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsLocallyControlled_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Not_PreBool_ReturnValue_2) == 0x000EAC, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, K2Node_CustomEvent_Hit) == 0x000EB0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_ImpactPoint_3) == 0x000F98, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_ImpactNormal_3) == 0x000FB0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HitHandling_SurfaceType_3) == 0x000FC8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HitHandling_SurfaceType_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000FD0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000FD8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_IsLocallyControlled_ReturnValue_6) == 0x000FD9, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_IsLocallyControlled_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_HasAuthority_ReturnValue_5) == 0x000FDA, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_InitBullet_bulletSpeedMultiplier_ImplicitCast) == 0x000FDC, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_InitBullet_bulletSpeedMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_InitBullet_bulletSlowCoef_ImplicitCast) == 0x000FE0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_InitBullet_bulletSlowCoef_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000FE8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000FF0, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast) == 0x000FF8, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_InitBullet_bulletSpeed_ImplicitCast) == 0x000FFC, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_InitBullet_bulletSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_InitBullet_bulletSpeedFinal_ImplicitCast) == 0x001000, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_InitBullet_bulletSpeedFinal_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_InitBulletParam_fTrueCaliber_ImplicitCast) == 0x001004, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_InitBulletParam_fTrueCaliber_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile, CallFunc_InitBulletParam_fMass_ImplicitCast) == 0x001008, "Member 'BP_BaseProjectile_C_ExecuteUbergraph_BP_BaseProjectile::CallFunc_InitBulletParam_fMass_ImplicitCast' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.GetNewSpeed
// 0x02A8 (0x02A8 - 0x0000)
struct BP_BaseProjectile_C_GetNewSpeed final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ExitLocation;                                      // 0x00E8(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactVelocity;                                    // 0x0100(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewSpeed;                                          // 0x0118(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JoulesPerCM;                                       // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPenetrationData                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0230(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sqrt_ReturnValue;                         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_JoulesPerCM_ImplicitCast;       // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_GetNewSpeed) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_GetNewSpeed");
static_assert(sizeof(BP_BaseProjectile_C_GetNewSpeed) == 0x0002A8, "Wrong size on BP_BaseProjectile_C_GetNewSpeed");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, Hit) == 0x000000, "Member 'BP_BaseProjectile_C_GetNewSpeed::Hit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, ExitLocation) == 0x0000E8, "Member 'BP_BaseProjectile_C_GetNewSpeed::ExitLocation' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, ImpactVelocity) == 0x000100, "Member 'BP_BaseProjectile_C_GetNewSpeed::ImpactVelocity' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, NewSpeed) == 0x000118, "Member 'BP_BaseProjectile_C_GetNewSpeed::NewSpeed' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, JoulesPerCM) == 0x000120, "Member 'BP_BaseProjectile_C_GetNewSpeed::JoulesPerCM' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_VSizeSquared_ReturnValue) == 0x000128, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_bBlockingHit) == 0x000130, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_bInitialOverlap) == 0x000131, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_Time) == 0x000134, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_Distance) == 0x000138, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_Location) == 0x000140, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_ImpactPoint) == 0x000158, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_Normal) == 0x000170, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_ImpactNormal) == 0x000188, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_PhysMat) == 0x0001A0, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_HitActor) == 0x0001A8, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_HitComponent) == 0x0001B0, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_HitBoneName) == 0x0001B8, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_BoneName) == 0x0001C0, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_HitItem) == 0x0001C8, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_ElementIndex) == 0x0001CC, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_FaceIndex) == 0x0001D0, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_TraceStart) == 0x0001D8, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_BreakHitResult_TraceEnd) == 0x0001F0, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_GetObjectName_ReturnValue) == 0x000208, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000218, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Conv_StringToName_ReturnValue) == 0x000220, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000228, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_GetDataTableRowFromName_OutRow) == 0x000230, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000244, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000248, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_VSize_ReturnValue) == 0x000260, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000268, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000270, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000278, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000280, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Sqrt_ReturnValue) == 0x000288, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000290, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, K2Node_VariableSet_JoulesPerCM_ImplicitCast) == 0x000298, "Member 'BP_BaseProjectile_C_GetNewSpeed::K2Node_VariableSet_JoulesPerCM_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetNewSpeed, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0002A0, "Member 'BP_BaseProjectile_C_GetNewSpeed::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.GetTraceColor
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BaseProjectile_C_GetTraceColor final
{
public:
	struct FVector                                A;                                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_3;            // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_2;     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_3;     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_GetTraceColor) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_GetTraceColor");
static_assert(sizeof(BP_BaseProjectile_C_GetTraceColor) == 0x0000E0, "Wrong size on BP_BaseProjectile_C_GetTraceColor");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, A) == 0x000000, "Member 'BP_BaseProjectile_C_GetTraceColor::A' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, ReturnValue) == 0x000018, "Member 'BP_BaseProjectile_C_GetTraceColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_LinearColorLerp_ReturnValue) == 0x000048, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_LinearColorLerp_ReturnValue_1) == 0x00006C, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_LinearColorLerp_ReturnValue_2) == 0x000098, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_LinearColorLerp_ReturnValue_3) == 0x0000B8, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_LinearColorLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0000C8, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0000D0, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x0000D4, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_LinearColorLerp_Alpha_ImplicitCast_2) == 0x0000D8, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_LinearColorLerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetTraceColor, CallFunc_LinearColorLerp_Alpha_ImplicitCast_3) == 0x0000DC, "Member 'BP_BaseProjectile_C_GetTraceColor::CallFunc_LinearColorLerp_Alpha_ImplicitCast_3' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.Hit_VisualLow
// 0x00E8 (0x00E8 - 0x0000)
struct BP_BaseProjectile_C_Hit_VisualLow final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseProjectile_C_Hit_VisualLow) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_Hit_VisualLow");
static_assert(sizeof(BP_BaseProjectile_C_Hit_VisualLow) == 0x0000E8, "Wrong size on BP_BaseProjectile_C_Hit_VisualLow");
static_assert(offsetof(BP_BaseProjectile_C_Hit_VisualLow, Hit) == 0x000000, "Member 'BP_BaseProjectile_C_Hit_VisualLow::Hit' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.Hit_VisualPart
// 0x00E8 (0x00E8 - 0x0000)
struct BP_BaseProjectile_C_Hit_VisualPart final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseProjectile_C_Hit_VisualPart) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_Hit_VisualPart");
static_assert(sizeof(BP_BaseProjectile_C_Hit_VisualPart) == 0x0000E8, "Wrong size on BP_BaseProjectile_C_Hit_VisualPart");
static_assert(offsetof(BP_BaseProjectile_C_Hit_VisualPart, Hit) == 0x000000, "Member 'BP_BaseProjectile_C_Hit_VisualPart::Hit' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.HitEvent
// 0x0110 (0x0110 - 0x0000)
struct BP_BaseProjectile_C_HitEvent final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComponent;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Param_HitResult;                                   // 0x0028(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseProjectile_C_HitEvent) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_HitEvent");
static_assert(sizeof(BP_BaseProjectile_C_HitEvent) == 0x000110, "Wrong size on BP_BaseProjectile_C_HitEvent");
static_assert(offsetof(BP_BaseProjectile_C_HitEvent, OtherActor) == 0x000000, "Member 'BP_BaseProjectile_C_HitEvent::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitEvent, OtherComponent) == 0x000008, "Member 'BP_BaseProjectile_C_HitEvent::OtherComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitEvent, NormalImpulse) == 0x000010, "Member 'BP_BaseProjectile_C_HitEvent::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitEvent, Param_HitResult) == 0x000028, "Member 'BP_BaseProjectile_C_HitEvent::Param_HitResult' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.HitHandling
// 0x0290 (0x0290 - 0x0000)
struct BP_BaseProjectile_C_HitHandling final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Param_Owner;                                       // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ImpactPoint;                                       // 0x00F0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x0108(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0120(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              OutSurfaceType;                                    // 0x0121(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        HitParticle;                                       // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HitParticleFinded;                                 // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RebaseZeroOriginOntoLocal_ReturnValue;    // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_HitHandling) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_HitHandling");
static_assert(sizeof(BP_BaseProjectile_C_HitHandling) == 0x000290, "Wrong size on BP_BaseProjectile_C_HitHandling");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, Hit) == 0x000000, "Member 'BP_BaseProjectile_C_HitHandling::Hit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, Param_Owner) == 0x0000E8, "Member 'BP_BaseProjectile_C_HitHandling::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, ImpactPoint) == 0x0000F0, "Member 'BP_BaseProjectile_C_HitHandling::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, ImpactNormal) == 0x000108, "Member 'BP_BaseProjectile_C_HitHandling::ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, SurfaceType) == 0x000120, "Member 'BP_BaseProjectile_C_HitHandling::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, OutSurfaceType) == 0x000121, "Member 'BP_BaseProjectile_C_HitHandling::OutSurfaceType' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, HitParticle) == 0x000128, "Member 'BP_BaseProjectile_C_HitHandling::HitParticle' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, HitParticleFinded) == 0x000130, "Member 'BP_BaseProjectile_C_HitHandling::HitParticleFinded' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, Temp_bool_Variable) == 0x000131, "Member 'BP_BaseProjectile_C_HitHandling::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_bBlockingHit) == 0x000132, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_bInitialOverlap) == 0x000133, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_Time) == 0x000134, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_Distance) == 0x000138, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_Location) == 0x000140, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_ImpactPoint) == 0x000158, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_Normal) == 0x000170, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_ImpactNormal) == 0x000188, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_PhysMat) == 0x0001A0, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_HitActor) == 0x0001A8, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_HitComponent) == 0x0001B0, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_HitBoneName) == 0x0001B8, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_BoneName) == 0x0001C0, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_HitItem) == 0x0001C8, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_ElementIndex) == 0x0001CC, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_FaceIndex) == 0x0001D0, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_TraceStart) == 0x0001D8, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_BreakHitResult_TraceEnd) == 0x0001F0, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000208, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_IsValid_ReturnValue) == 0x000220, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000228, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_Normal_ReturnValue) == 0x000240, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_IsValid_ReturnValue_1) == 0x000258, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, CallFunc_RebaseZeroOriginOntoLocal_ReturnValue) == 0x000260, "Member 'BP_BaseProjectile_C_HitHandling::CallFunc_RebaseZeroOriginOntoLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitHandling, K2Node_Select_Default) == 0x000278, "Member 'BP_BaseProjectile_C_HitHandling::K2Node_Select_Default' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.HitZombie
// 0x0258 (0x0258 - 0x0000)
struct BP_BaseProjectile_C_HitZombie final
{
public:
	struct FHitResult                             Param_HitResult;                                   // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AZombie_C*                              HittedZombie;                                      // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x00F0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Float                               CallFunc_GetDataTableRowFromName_OutRow;           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateDamageBySpeed_Result;            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_HitZombie) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_HitZombie");
static_assert(sizeof(BP_BaseProjectile_C_HitZombie) == 0x000258, "Wrong size on BP_BaseProjectile_C_HitZombie");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, Param_HitResult) == 0x000000, "Member 'BP_BaseProjectile_C_HitZombie::Param_HitResult' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, HittedZombie) == 0x0000E8, "Member 'BP_BaseProjectile_C_HitZombie::HittedZombie' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, NormalImpulse) == 0x0000F0, "Member 'BP_BaseProjectile_C_HitZombie::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001E0, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001E4, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_GetDisplayName_ReturnValue) == 0x0001E8, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_Concat_StrStr_ReturnValue) == 0x0001F8, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, K2Node_DynamicCast_AsSurvival_Player) == 0x000208, "Member 'BP_BaseProjectile_C_HitZombie::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'BP_BaseProjectile_C_HitZombie::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000218, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000220, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_CalculateDamageBySpeed_Result) == 0x000228, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_CalculateDamageBySpeed_Result' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000230, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000240, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_HitZombie, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000250, "Member 'BP_BaseProjectile_C_HitZombie::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.LocalImpulse
// 0x0040 (0x0040 - 0x0000)
struct BP_BaseProjectile_C_LocalImpulse final
{
public:
	class UPrimitiveComponent*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_LocalImpulse) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_LocalImpulse");
static_assert(sizeof(BP_BaseProjectile_C_LocalImpulse) == 0x000040, "Wrong size on BP_BaseProjectile_C_LocalImpulse");
static_assert(offsetof(BP_BaseProjectile_C_LocalImpulse, Target) == 0x000000, "Member 'BP_BaseProjectile_C_LocalImpulse::Target' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_LocalImpulse, CallFunc_GetVelocity_ReturnValue) == 0x000008, "Member 'BP_BaseProjectile_C_LocalImpulse::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_LocalImpulse, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000020, "Member 'BP_BaseProjectile_C_LocalImpulse::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_LocalImpulse, CallFunc_Divide_VectorVector_ReturnValue) == 0x000028, "Member 'BP_BaseProjectile_C_LocalImpulse::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.MultiNearProjectile
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseProjectile_C_MultiNearProjectile final
{
public:
	class ASurvivalPlayer_V2_C*                   HitPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_MultiNearProjectile) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_MultiNearProjectile");
static_assert(sizeof(BP_BaseProjectile_C_MultiNearProjectile) == 0x000008, "Wrong size on BP_BaseProjectile_C_MultiNearProjectile");
static_assert(offsetof(BP_BaseProjectile_C_MultiNearProjectile, HitPlayer) == 0x000000, "Member 'BP_BaseProjectile_C_MultiNearProjectile::HitPlayer' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.OwnerVisualPart
// 0x00E8 (0x00E8 - 0x0000)
struct BP_BaseProjectile_C_OwnerVisualPart final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BaseProjectile_C_OwnerVisualPart) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_OwnerVisualPart");
static_assert(sizeof(BP_BaseProjectile_C_OwnerVisualPart) == 0x0000E8, "Wrong size on BP_BaseProjectile_C_OwnerVisualPart");
static_assert(offsetof(BP_BaseProjectile_C_OwnerVisualPart, Hit) == 0x000000, "Member 'BP_BaseProjectile_C_OwnerVisualPart::Hit' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.PlayHitParticle
// 0x08D0 (0x08D0 - 0x0000)
struct BP_BaseProjectile_C_PlayHitParticle final
{
public:
	EPhysicalSurface                              Enumerator;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InputPin;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward;                                           // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   bone;                                              // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Component_To_Attach;                               // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Normal;                                        // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoSound;                                           // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         NiagaraSystemToSpawn;                              // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ParticleToSpawn;                                   // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<EPhysicalSurface, double>                ImpactsParameter;                                  // 0x0080(0x0050)(Edit, BlueprintVisible)
	class FName                                   Temp_name_Variable;                                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_HitParticles                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0190(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPhysicalSurface, double>                K2Node_MakeVariable_MakeVariableOutput;            // 0x01C8(0x0050)()
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseProjectile_C*                   K2Node_DynamicCast_AsBP_Base_Projectile;           // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_Array_Random_OutItem;                     // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x023C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_25;                             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              K2Node_DynamicCast_AsZombie;                       // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetPseudoSurfaceTypeByBone_ResultSurface; // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_26;                             // 0x026C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x0274(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_28;                             // 0x027C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODOcclusionDetails                  K2Node_MakeStruct_FMODOcclusionDetails;            // 0x02A0(0x0003)(NoDestructor)
	uint8                                         Pad_2A3[0x5];                                      // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_29;                             // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_30;                             // 0x02D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_31;                             // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_2;               // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0350(0x0010)(ConstParm, ReferenceParm)
	class FName                                   Temp_name_Variable_32;                             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_33;                             // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_34;                             // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_35;                             // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_36;                             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_37;                             // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_38;                             // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_39;                             // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_40;                             // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_41;                             // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_3;               // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_4;               // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_5;               // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue_1;            // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ElectricDoorBox_C*                  K2Node_DynamicCast_AsBP_Electric_Door_Box;         // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AElectricityBlocker_C*                  K2Node_DynamicCast_AsElectricity_Blocker;          // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADestructibleActor*                     K2Node_DynamicCast_AsDestructible_Actor;           // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDecalMaterial_DynMat;                  // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDecalMaterial_Size;                    // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDecalMaterial_Size_X;                  // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDecalMaterial_Size_Y;                  // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDecalMaterial_Size_Z;                  // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46B[0x5];                                      // 0x046B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0488(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49A[0x6];                                      // 0x049A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_1;        // 0x04D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttachedBullet_ReturnValue;  // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_42;                             // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x04F8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0508(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61A[0x2];                                      // 0x061A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0698(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x06D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x06F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0758(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_D2S_Glass_DDecal_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0760(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0768(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_771[0x7];                                      // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_D2S_Glass_Translucent_C*            CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0778(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781[0x7];                                      // 0x0781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0788(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0790(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_D2S_Glass_C*                        CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x07A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x07A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C1[0x7];                                      // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x07E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_43;                             // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue;           // 0x0820(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_44;                             // 0x082C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0834(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_835[0x3];                                      // 0x0835(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0838(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue_1;         // 0x0848(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FBPS_HitParticles                      CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0850(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0881(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_882[0x6];                                      // 0x0882(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_Array_Random_OutItem_1;                   // 0x0888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_2;           // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_895[0x3];                                      // 0x0895(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        CallFunc_Array_Random_OutItem_2;                   // 0x0898(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_2;                  // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x08A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A5[0x3];                                      // 0x08A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8AC[0x4];                                      // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B9[0x3];                                      // 0x08B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetParameter_Value_ImplicitCast;          // 0x08BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast_1;        // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_PlayHitParticle) == 0x000010, "Wrong alignment on BP_BaseProjectile_C_PlayHitParticle");
static_assert(sizeof(BP_BaseProjectile_C_PlayHitParticle) == 0x0008D0, "Wrong size on BP_BaseProjectile_C_PlayHitParticle");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Enumerator) == 0x000000, "Member 'BP_BaseProjectile_C_PlayHitParticle::Enumerator' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, InputPin) == 0x000008, "Member 'BP_BaseProjectile_C_PlayHitParticle::InputPin' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Forward) == 0x000020, "Member 'BP_BaseProjectile_C_PlayHitParticle::Forward' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, bone) == 0x000038, "Member 'BP_BaseProjectile_C_PlayHitParticle::bone' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Component_To_Attach) == 0x000040, "Member 'BP_BaseProjectile_C_PlayHitParticle::Component_To_Attach' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, HitActor) == 0x000048, "Member 'BP_BaseProjectile_C_PlayHitParticle::HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Hit_Normal) == 0x000050, "Member 'BP_BaseProjectile_C_PlayHitParticle::Hit_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, NoSound) == 0x000068, "Member 'BP_BaseProjectile_C_PlayHitParticle::NoSound' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, NiagaraSystemToSpawn) == 0x000070, "Member 'BP_BaseProjectile_C_PlayHitParticle::NiagaraSystemToSpawn' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, ParticleToSpawn) == 0x000078, "Member 'BP_BaseProjectile_C_PlayHitParticle::ParticleToSpawn' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, ImpactsParameter) == 0x000080, "Member 'BP_BaseProjectile_C_PlayHitParticle::ImpactsParameter' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable) == 0x0000D0, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_1) == 0x0000D8, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_2) == 0x0000E0, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_3) == 0x0000E8, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_4) == 0x0000F0, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_5) == 0x0000F8, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_6) == 0x000100, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_7) == 0x000108, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_8) == 0x000110, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_9) == 0x000118, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_10) == 0x000120, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_11) == 0x000128, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_12) == 0x000130, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_13) == 0x000138, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_14) == 0x000140, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_15) == 0x000148, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_16) == 0x000150, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_17) == 0x000158, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_18) == 0x000160, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_19) == 0x000168, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_20) == 0x000170, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_21) == 0x000178, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_22) == 0x000180, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_23) == 0x000188, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000190, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001C0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_MakeVariable_MakeVariableOutput) == 0x0001C8, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000218, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_AsBP_Base_Projectile) == 0x000220, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_AsBP_Base_Projectile' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_bSuccess) == 0x000228, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Array_Random_OutItem) == 0x000230, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Array_Random_OutIndex) == 0x000238, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_24) == 0x00023C, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_IsValid_ReturnValue) == 0x000244, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_25) == 0x000248, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_AsZombie) == 0x000250, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_AsZombie' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_GetPseudoSurfaceTypeByBone_ResultSurface) == 0x000259, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_GetPseudoSurfaceTypeByBone_ResultSurface' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Map_Find_Value) == 0x000260, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Map_Find_ReturnValue) == 0x000268, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_26) == 0x00026C, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_27) == 0x000274, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_28) == 0x00027C, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000288, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_MakeStruct_FMODOcclusionDetails) == 0x0002A0, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_MakeStruct_FMODOcclusionDetails' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue) == 0x0002A8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_29) == 0x0002C0, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakRotator_Roll) == 0x0002C8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakRotator_Pitch) == 0x0002CC, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakRotator_Yaw) == 0x0002D0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_30) == 0x0002D4, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue_1) == 0x0002E0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_1) == 0x0002F8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000300, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_31) == 0x000308, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000310, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue_2) == 0x000328, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakRotator_Roll_1) == 0x000340, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakRotator_Pitch_1) == 0x000344, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakRotator_Yaw_1) == 0x000348, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_MakeArray_Array) == 0x000350, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_32) == 0x000360, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_33) == 0x000368, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_34) == 0x000370, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_35) == 0x000378, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_36) == 0x000380, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_37) == 0x000388, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_38) == 0x000390, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_39) == 0x000398, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_40) == 0x0003A0, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_41) == 0x0003A8, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue_3) == 0x0003B0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue_4) == 0x0003C8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeRotFromX_ReturnValue_5) == 0x0003E0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeRotFromX_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_ComponentHasTag_ReturnValue) == 0x0003F8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_ComponentHasTag_ReturnValue_1) == 0x0003F9, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_ComponentHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BooleanOR_ReturnValue) == 0x0003FA, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_2) == 0x0003FB, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_AsBP_Electric_Door_Box) == 0x000400, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_AsBP_Electric_Door_Box' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_2) == 0x000408, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_AsElectricity_Blocker) == 0x000410, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_AsElectricity_Blocker' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_3) == 0x000418, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_AsDestructible_Actor) == 0x000420, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_AsDestructible_Actor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_4) == 0x000428, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_GetDecalMaterial_DynMat) == 0x000430, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_GetDecalMaterial_DynMat' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_GetDecalMaterial_Size) == 0x000438, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_GetDecalMaterial_Size' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_GetDecalMaterial_Size_X) == 0x000450, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_GetDecalMaterial_Size_X' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_GetDecalMaterial_Size_Y) == 0x000458, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_GetDecalMaterial_Size_Y' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_GetDecalMaterial_Size_Z) == 0x000460, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_GetDecalMaterial_Size_Z' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000468, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000469, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00046A, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000470, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000488, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Map_Find_Value_1) == 0x000490, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Map_Find_ReturnValue_1) == 0x000498, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_3) == 0x000499, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0004A0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Add_VectorVector_ReturnValue) == 0x0004B8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_SpawnSystemAttached_ReturnValue_1) == 0x0004D0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_SpawnSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0004D8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_IsDedicatedServer_ReturnValue) == 0x0004E0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_FMODPlayEventAttachedBullet_ReturnValue) == 0x0004E8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_FMODPlayEventAttachedBullet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_42) == 0x0004F0, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_MakeArray_Array_1) == 0x0004F8, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_LineTraceSingle_OutHit) == 0x000508, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_LineTraceSingle_ReturnValue) == 0x0005F0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_RandomFloatInRange_ReturnValue) == 0x0005F8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeRotator_ReturnValue) == 0x000600, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_bBlockingHit) == 0x000618, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_bInitialOverlap) == 0x000619, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_Time) == 0x00061C, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_Distance) == 0x000620, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_Location) == 0x000628, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_ImpactPoint) == 0x000640, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_Normal) == 0x000658, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_ImpactNormal) == 0x000670, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_PhysMat) == 0x000688, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_HitActor) == 0x000690, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_HitComponent) == 0x000698, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_HitBoneName) == 0x0006A0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_BoneName) == 0x0006A8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_HitItem) == 0x0006B0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_ElementIndex) == 0x0006B4, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_FaceIndex) == 0x0006B8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_TraceStart) == 0x0006C0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BreakHitResult_TraceEnd) == 0x0006D8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeTransform_ReturnValue) == 0x0006F0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_4) == 0x000750, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000758, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_FinishSpawningActor_ReturnValue) == 0x000760, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000768, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000770, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000778, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000780, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000788, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_AsPawn) == 0x000790, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_DynamicCast_bSuccess_5) == 0x000798, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x0007A0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_SelectVector_ReturnValue) == 0x0007A8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x0007C0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0007C8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0007E0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0007E8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeRotator_ReturnValue_1) == 0x000800, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_43) == 0x000818, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_SpawnDecalAttached_ReturnValue) == 0x000820, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_SpawnDecalAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_5) == 0x000828, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_name_Variable_44) == 0x00082C, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_name_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, Temp_byte_Variable) == 0x000834, "Member 'BP_BaseProjectile_C_PlayHitParticle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000838, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, K2Node_Select_Default) == 0x000840, "Member 'BP_BaseProjectile_C_PlayHitParticle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_SpawnDecalAttached_ReturnValue_1) == 0x000848, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_SpawnDecalAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000850, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000880, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000881, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Array_Random_OutItem_1) == 0x000888, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Array_Random_OutIndex_1) == 0x000890, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Array_IsNotEmpty_ReturnValue_2) == 0x000894, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Array_IsNotEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Array_Random_OutItem_2) == 0x000898, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Array_Random_OutItem_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Array_Random_OutIndex_2) == 0x0008A0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Array_Random_OutIndex_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0008A4, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0008A8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0008B0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_IsValid_ReturnValue_6) == 0x0008B8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_SetParameter_Value_ImplicitCast) == 0x0008BC, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_SetParameter_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_SetParameter_Value_ImplicitCast_1) == 0x0008C0, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_SetParameter_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0008C4, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x0008C8, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_PlayHitParticle, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0008CC, "Member 'BP_BaseProjectile_C_PlayHitParticle::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.SimulateLocalMontage
// 0x00E8 (0x00E8 - 0x0000)
struct BP_BaseProjectile_C_SimulateLocalMontage final
{
public:
	class UObject*                                Attacked;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Damage;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerDeadBody_C*                      K2Node_DynamicCast_AsPlayer_Dead_Body;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AParentZombieAI_C*                      K2Node_DynamicCast_AsParent_Zombie_AI;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_SimulateLocalMontage) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_SimulateLocalMontage");
static_assert(sizeof(BP_BaseProjectile_C_SimulateLocalMontage) == 0x0000E8, "Wrong size on BP_BaseProjectile_C_SimulateLocalMontage");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, Attacked) == 0x000000, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::Attacked' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, BoneName) == 0x000008, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::BoneName' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, Param_Damage) == 0x000010, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::Param_Damage' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, HitLocation) == 0x000018, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, K2Node_DynamicCast_AsPlayer_Dead_Body) == 0x000030, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::K2Node_DynamicCast_AsPlayer_Dead_Body' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, K2Node_DynamicCast_AsParent_Zombie_AI) == 0x000058, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::K2Node_DynamicCast_AsParent_Zombie_AI' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, K2Node_DynamicCast_AsSurvival_Player) == 0x000068, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000078, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, CallFunc_GetStat_Value) == 0x000090, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000098, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, CallFunc_Normal_ReturnValue) == 0x0000B8, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_SimulateLocalMontage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D0, "Member 'BP_BaseProjectile_C_SimulateLocalMontage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.VaryTrajectory
// 0x0050 (0x0050 - 0x0000)
struct BP_BaseProjectile_C_VaryTrajectory final
{
public:
	struct FVector                                SurfaceNormal;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactVelocity;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseProjectile_C*                   Projectile;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitialAnswer;                                     // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_VaryTrajectory) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_VaryTrajectory");
static_assert(sizeof(BP_BaseProjectile_C_VaryTrajectory) == 0x000050, "Wrong size on BP_BaseProjectile_C_VaryTrajectory");
static_assert(offsetof(BP_BaseProjectile_C_VaryTrajectory, SurfaceNormal) == 0x000000, "Member 'BP_BaseProjectile_C_VaryTrajectory::SurfaceNormal' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_VaryTrajectory, ImpactVelocity) == 0x000018, "Member 'BP_BaseProjectile_C_VaryTrajectory::ImpactVelocity' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_VaryTrajectory, Projectile) == 0x000030, "Member 'BP_BaseProjectile_C_VaryTrajectory::Projectile' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_VaryTrajectory, InitialAnswer) == 0x000038, "Member 'BP_BaseProjectile_C_VaryTrajectory::InitialAnswer' has a wrong offset!");

// Function BP_BaseProjectile.BP_BaseProjectile_C.GetDecalMaterial
// 0x0258 (0x0258 - 0x0000)
struct BP_BaseProjectile_C_GetDecalMaterial final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynMat;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Size;                                              // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size_X;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size_Y;                                            // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size_Z;                                            // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_25;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_26;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_28;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_29;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_30;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_31;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_32;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_33;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_34;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_35;                             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_36;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_37;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_38;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_39;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_40;                             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_41;                             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_42;                             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_43;                             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_44;                             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_HitDecals                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x01D0(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CallFunc_Array_Get_Item_1;                         // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseProjectile_C_GetDecalMaterial) == 0x000008, "Wrong alignment on BP_BaseProjectile_C_GetDecalMaterial");
static_assert(sizeof(BP_BaseProjectile_C_GetDecalMaterial) == 0x000258, "Wrong size on BP_BaseProjectile_C_GetDecalMaterial");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, SurfaceType) == 0x000000, "Member 'BP_BaseProjectile_C_GetDecalMaterial::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, DynMat) == 0x000008, "Member 'BP_BaseProjectile_C_GetDecalMaterial::DynMat' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Size) == 0x000010, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Size' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Size_X) == 0x000028, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Size_X' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Size_Y) == 0x000030, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Size_Y' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Size_Z) == 0x000038, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Size_Z' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, ID) == 0x000040, "Member 'BP_BaseProjectile_C_GetDecalMaterial::ID' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_byte_Variable) == 0x000044, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x000045, "Member 'BP_BaseProjectile_C_GetDecalMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable) == 0x000048, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_1) == 0x000050, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_2) == 0x000058, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_3) == 0x000060, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_4) == 0x000068, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_5) == 0x000070, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_6) == 0x000078, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_7) == 0x000080, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_8) == 0x000088, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_9) == 0x000090, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_10) == 0x000098, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_11) == 0x0000A0, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_12) == 0x0000A8, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_13) == 0x0000B0, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_14) == 0x0000B8, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_15) == 0x0000C0, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_16) == 0x0000C8, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_17) == 0x0000D0, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_18) == 0x0000D8, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_19) == 0x0000E0, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_20) == 0x0000E8, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_21) == 0x0000F0, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_22) == 0x0000F8, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_23) == 0x000100, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_24) == 0x000108, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_25) == 0x000110, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_26) == 0x000118, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_27) == 0x000120, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_28) == 0x000128, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_29) == 0x000130, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_30) == 0x000138, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_31) == 0x000140, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_32) == 0x000148, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_33) == 0x000150, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_34) == 0x000158, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_35) == 0x000160, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_36) == 0x000168, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_37) == 0x000170, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_38) == 0x000178, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_39) == 0x000180, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_40) == 0x000188, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_41) == 0x000190, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_42) == 0x000198, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_43) == 0x0001A0, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, Temp_name_Variable_44) == 0x0001A8, "Member 'BP_BaseProjectile_C_GetDecalMaterial::Temp_name_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_BreakVector_X) == 0x0001B0, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_BreakVector_Y) == 0x0001B8, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_BreakVector_Z) == 0x0001C0, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, K2Node_Select_Default) == 0x0001C8, "Member 'BP_BaseProjectile_C_GetDecalMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001D0, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000200, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_Array_Get_Item) == 0x000208, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_Array_Get_Item_1) == 0x000210, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000218, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000220, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000228, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_Array_Length_ReturnValue) == 0x000230, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_MakeVector_ReturnValue) == 0x000238, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_Subtract_IntInt_ReturnValue) == 0x000250, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseProjectile_C_GetDecalMaterial, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000254, "Member 'BP_BaseProjectile_C_GetDecalMaterial::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

}

