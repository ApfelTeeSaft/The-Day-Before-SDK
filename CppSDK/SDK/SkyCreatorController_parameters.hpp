#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkyCreatorController

#include "Basic.hpp"

#include "DayCycleState_structs.hpp"
#include "SkyCreatorLightStateEnum_structs.hpp"
#include "SkyCreatorPlugin_structs.hpp"
#include "Engine_structs.hpp"
#include "SkyCreatorDayTimeStruct_structs.hpp"


namespace SDK::Params
{

// Function SkyCreatorController.SkyCreatorController_C.CalculateDayCycleState
// 0x0150 (0x0150 - 0x0000)
struct SkyCreatorController_C_CalculateDayCycleState final
{
public:
	bool                                          Construct;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeTime_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeTime_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeTime_ReturnValue_2;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeTime_ReturnValue_3;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeTime_ReturnValue_4;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeTime_ReturnValue_5;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeTime_ReturnValue_6;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeTime_ReturnValue_7;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeTime_Time_ImplicitCast;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeTime_Time_ImplicitCast_1;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast_1;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_CalculateDayCycleState) == 0x000008, "Wrong alignment on SkyCreatorController_C_CalculateDayCycleState");
static_assert(sizeof(SkyCreatorController_C_CalculateDayCycleState) == 0x000150, "Wrong size on SkyCreatorController_C_CalculateDayCycleState");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, Construct) == 0x000000, "Member 'SkyCreatorController_C_CalculateDayCycleState::Construct' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_NormalizeTime_ReturnValue) == 0x000008, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_NormalizeTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000011, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_NormalizeTime_ReturnValue_1) == 0x000018, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_NormalizeTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_NormalizeTime_ReturnValue_2) == 0x000020, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_NormalizeTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_NormalizeTime_ReturnValue_3) == 0x000050, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_NormalizeTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_NormalizeTime_ReturnValue_4) == 0x000078, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_NormalizeTime_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_NormalizeTime_ReturnValue_5) == 0x000080, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_NormalizeTime_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_NormalizeTime_ReturnValue_6) == 0x000088, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_NormalizeTime_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A8, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_FClamp_ReturnValue_1) == 0x0000B0, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_FClamp_ReturnValue_2) == 0x0000B8, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000C8, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000D0, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000D8, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_NormalizeTime_ReturnValue_7) == 0x0000E0, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_NormalizeTime_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0000E8, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000F0, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000F8, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000100, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_FClamp_ReturnValue_3) == 0x000108, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000110, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000118, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_NormalizeTime_Time_ImplicitCast) == 0x000120, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_NormalizeTime_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000128, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_NormalizeTime_Time_ImplicitCast_1) == 0x000130, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_NormalizeTime_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Less_DoubleDouble_B_ImplicitCast_1) == 0x000138, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Less_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000140, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateDayCycleState, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000148, "Member 'SkyCreatorController_C_CalculateDayCycleState::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.CalculateInterpolationAlpha
// 0x0020 (0x0020 - 0x0000)
struct SkyCreatorController_C_CalculateInterpolationAlpha final
{
public:
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalParameterByName_Value_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalParameterByName_Value_ImplicitCast_1; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_CalculateInterpolationAlpha) == 0x000008, "Wrong alignment on SkyCreatorController_C_CalculateInterpolationAlpha");
static_assert(sizeof(SkyCreatorController_C_CalculateInterpolationAlpha) == 0x000020, "Wrong size on SkyCreatorController_C_CalculateInterpolationAlpha");
static_assert(offsetof(SkyCreatorController_C_CalculateInterpolationAlpha, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000000, "Member 'SkyCreatorController_C_CalculateInterpolationAlpha::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateInterpolationAlpha, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'SkyCreatorController_C_CalculateInterpolationAlpha::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateInterpolationAlpha, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'SkyCreatorController_C_CalculateInterpolationAlpha::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateInterpolationAlpha, CallFunc_SetGlobalParameterByName_Value_ImplicitCast) == 0x000018, "Member 'SkyCreatorController_C_CalculateInterpolationAlpha::CallFunc_SetGlobalParameterByName_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_CalculateInterpolationAlpha, CallFunc_SetGlobalParameterByName_Value_ImplicitCast_1) == 0x00001C, "Member 'SkyCreatorController_C_CalculateInterpolationAlpha::CallFunc_SetGlobalParameterByName_Value_ImplicitCast_1' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.ExecuteUbergraph_SkyCreatorController
// 0x08A0 (0x08A0 - 0x0000)
struct SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkyCreatorLightStateEnum                     Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESkyCreatorLightStateEnum Setting_State)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkyCreatorDayTimeStruct               K2Node_Select_Default;                             // 0x0078(0x0130)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x01B8(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_1;                         // 0x01E8(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkyCreatorWeatherPreset*               K2Node_DynamicCast_AsSky_Creator_Weather_Preset;   // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyCreatorWeatherPreset*               K2Node_DynamicCast_AsSky_Creator_Weather_Preset_1; // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_2;                         // 0x0258(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyCreatorWeatherPreset*               K2Node_DynamicCast_AsSky_Creator_Weather_Preset_2; // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_3;                         // 0x02B0(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyCreatorWeatherPreset*               K2Node_DynamicCast_AsSky_Creator_Weather_Preset_3; // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item_4;                         // 0x0308(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_4;         // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyCreatorWeatherPreset*               K2Node_DynamicCast_AsSky_Creator_Weather_Preset_4; // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyCreatorWeatherPreset*               CallFunc_Array_Get_Item_5;                         // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkyCreatorWeatherPreset*               CallFunc_Array_Get_Item_6;                         // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkyCreatorWeatherPreset*               CallFunc_Array_Get_Item_7;                         // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkyCreatorWeatherPreset*               CallFunc_Array_Get_Item_8;                         // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkyCreatorWeatherPreset*               CallFunc_Array_Get_Item_9;                         // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue;     // 0x0390(0x04E8)(NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87A[0x6];                                      // 0x087A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController) == 0x000008, "Wrong alignment on SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController");
static_assert(sizeof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController) == 0x0008A0, "Wrong size on SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, EntryPoint) == 0x000000, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::EntryPoint' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, Temp_int_Variable) == 0x000008, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Add_IntInt_ReturnValue_2) == 0x000010, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Add_IntInt_ReturnValue_3) == 0x000014, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Add_IntInt_ReturnValue_4) == 0x000018, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, Temp_byte_Variable) == 0x000028, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, Temp_int_Variable_1) == 0x000058, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_AsSurv_PC) == 0x000060, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, Temp_int_Variable_2) == 0x00006C, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, Temp_int_Variable_3) == 0x000070, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_Select_Default) == 0x000078, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_MakeArray_Array) == 0x0001A8, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Get_Item_1) == 0x0001E8, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000218, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000220, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_AsSky_Creator_Weather_Preset) == 0x000228, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_AsSky_Creator_Weather_Preset' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_bSuccess_1) == 0x000230, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_AsSky_Creator_Weather_Preset_1) == 0x000238, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_AsSky_Creator_Weather_Preset_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_bSuccess_2) == 0x000240, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Add_ReturnValue) == 0x000244, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Add_ReturnValue_1) == 0x000248, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Length_ReturnValue) == 0x00024C, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Length_ReturnValue_1) == 0x000250, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000254, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000255, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Get_Item_2) == 0x000258, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Length_ReturnValue_2) == 0x000288, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000290, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000298, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_AsSky_Creator_Weather_Preset_2) == 0x0002A0, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_AsSky_Creator_Weather_Preset_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_bSuccess_3) == 0x0002A8, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Add_ReturnValue_2) == 0x0002AC, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Get_Item_3) == 0x0002B0, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Length_ReturnValue_3) == 0x0002E0, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x0002E8, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0002F0, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_AsSky_Creator_Weather_Preset_3) == 0x0002F8, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_AsSky_Creator_Weather_Preset_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_bSuccess_4) == 0x000300, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Add_ReturnValue_3) == 0x000304, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Get_Item_4) == 0x000308, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Length_ReturnValue_4) == 0x000338, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_LoadAsset_Blocking_ReturnValue_4) == 0x000340, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_LoadAsset_Blocking_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000348, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_AsSky_Creator_Weather_Preset_4) == 0x000350, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_AsSky_Creator_Weather_Preset_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, K2Node_DynamicCast_bSuccess_5) == 0x000358, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Add_ReturnValue_4) == 0x00035C, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, Temp_int_Variable_4) == 0x000360, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Get_Item_5) == 0x000368, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Get_Item_6) == 0x000370, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Get_Item_7) == 0x000378, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Get_Item_8) == 0x000380, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Array_Get_Item_9) == 0x000388, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_GetWeatherPresetSettings_ReturnValue) == 0x000390, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_GetWeatherPresetSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_HasAuthority_ReturnValue) == 0x000878, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_HasAuthority_ReturnValue_1) == 0x000879, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000880, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000888, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000890, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController, CallFunc_SelectFloat_ReturnValue) == 0x000898, "Member 'SkyCreatorController_C_ExecuteUbergraph_SkyCreatorController::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.GetDayCycleState
// 0x0001 (0x0001 - 0x0000)
struct SkyCreatorController_C_GetDayCycleState final
{
public:
	EDayCycleState                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_GetDayCycleState) == 0x000001, "Wrong alignment on SkyCreatorController_C_GetDayCycleState");
static_assert(sizeof(SkyCreatorController_C_GetDayCycleState) == 0x000001, "Wrong size on SkyCreatorController_C_GetDayCycleState");
static_assert(offsetof(SkyCreatorController_C_GetDayCycleState, ReturnValue) == 0x000000, "Member 'SkyCreatorController_C_GetDayCycleState::ReturnValue' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.GetWeatherPreset
// 0x0A08 (0x0A08 - 0x0000)
struct SkyCreatorController_C_GetWeatherPreset final
{
public:
	bool                                          Prev;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkyCreatorWeatherSettings             ReturnValue;                                       // 0x0004(0x04E8)(Parm, OutParm, ReturnParm, NoDestructor)
	EDayCycleState                                Temp_byte_Variable;                                // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable_1;                              // 0x04ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable_2;                              // 0x04EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable_3;                              // 0x04EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable_4;                              // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable_5;                              // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                K2Node_Select_Default;                             // 0x04F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                K2Node_Select_Default_1;                           // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkyCreatorWeatherPreset*>       K2Node_Select_Default_2;                           // 0x04F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyCreatorWeatherPreset*               CallFunc_Array_Get_Item;                           // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue;     // 0x0520(0x04E8)(NoDestructor)
};
static_assert(alignof(SkyCreatorController_C_GetWeatherPreset) == 0x000008, "Wrong alignment on SkyCreatorController_C_GetWeatherPreset");
static_assert(sizeof(SkyCreatorController_C_GetWeatherPreset) == 0x000A08, "Wrong size on SkyCreatorController_C_GetWeatherPreset");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, Prev) == 0x000000, "Member 'SkyCreatorController_C_GetWeatherPreset::Prev' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, ReturnValue) == 0x000004, "Member 'SkyCreatorController_C_GetWeatherPreset::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, Temp_byte_Variable) == 0x0004EC, "Member 'SkyCreatorController_C_GetWeatherPreset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, Temp_byte_Variable_1) == 0x0004ED, "Member 'SkyCreatorController_C_GetWeatherPreset::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, Temp_byte_Variable_2) == 0x0004EE, "Member 'SkyCreatorController_C_GetWeatherPreset::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, Temp_byte_Variable_3) == 0x0004EF, "Member 'SkyCreatorController_C_GetWeatherPreset::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, Temp_byte_Variable_4) == 0x0004F0, "Member 'SkyCreatorController_C_GetWeatherPreset::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, Temp_byte_Variable_5) == 0x0004F1, "Member 'SkyCreatorController_C_GetWeatherPreset::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, Temp_bool_Variable) == 0x0004F2, "Member 'SkyCreatorController_C_GetWeatherPreset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, K2Node_Select_Default) == 0x0004F3, "Member 'SkyCreatorController_C_GetWeatherPreset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, K2Node_Select_Default_1) == 0x0004F4, "Member 'SkyCreatorController_C_GetWeatherPreset::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, K2Node_Select_Default_2) == 0x0004F8, "Member 'SkyCreatorController_C_GetWeatherPreset::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, CallFunc_Array_LastIndex_ReturnValue) == 0x000508, "Member 'SkyCreatorController_C_GetWeatherPreset::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, CallFunc_Greater_IntInt_ReturnValue) == 0x00050C, "Member 'SkyCreatorController_C_GetWeatherPreset::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, CallFunc_SelectInt_ReturnValue) == 0x000510, "Member 'SkyCreatorController_C_GetWeatherPreset::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, CallFunc_Array_Get_Item) == 0x000518, "Member 'SkyCreatorController_C_GetWeatherPreset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_GetWeatherPreset, CallFunc_GetWeatherPresetSettings_ReturnValue) == 0x000520, "Member 'SkyCreatorController_C_GetWeatherPreset::CallFunc_GetWeatherPresetSettings_ReturnValue' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.HiddenCalc
// 0x0040 (0x0040 - 0x0000)
struct SkyCreatorController_C_HiddenCalc final
{
public:
	bool                                          NotHub;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_HiddenCalc) == 0x000008, "Wrong alignment on SkyCreatorController_C_HiddenCalc");
static_assert(sizeof(SkyCreatorController_C_HiddenCalc) == 0x000040, "Wrong size on SkyCreatorController_C_HiddenCalc");
static_assert(offsetof(SkyCreatorController_C_HiddenCalc, NotHub) == 0x000000, "Member 'SkyCreatorController_C_HiddenCalc::NotHub' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_HiddenCalc, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'SkyCreatorController_C_HiddenCalc::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_HiddenCalc, K2Node_DynamicCast_AsSurv_PC) == 0x000010, "Member 'SkyCreatorController_C_HiddenCalc::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_HiddenCalc, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SkyCreatorController_C_HiddenCalc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_HiddenCalc, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'SkyCreatorController_C_HiddenCalc::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_HiddenCalc, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'SkyCreatorController_C_HiddenCalc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_HiddenCalc, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000030, "Member 'SkyCreatorController_C_HiddenCalc::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_HiddenCalc, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'SkyCreatorController_C_HiddenCalc::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_HiddenCalc, CallFunc_Not_PreBool_ReturnValue_1) == 0x000039, "Member 'SkyCreatorController_C_HiddenCalc::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_HiddenCalc, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00003A, "Member 'SkyCreatorController_C_HiddenCalc::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.InitSkyCreator
// 0x0038 (0x0038 - 0x0000)
struct SkyCreatorController_C_InitSkyCreator final
{
public:
	TArray<class ASkyCreator*>                    CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0000(0x0010)(ReferenceParm)
	TArray<class ASkyCreator*>                    CallFunc_GetAllActorsOfClassWithTag_OutActors_1;   // 0x0010(0x0010)(ReferenceParm)
	class ASkyCreator*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASkyCreator*                            CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue_1;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_InitSkyCreator) == 0x000008, "Wrong alignment on SkyCreatorController_C_InitSkyCreator");
static_assert(sizeof(SkyCreatorController_C_InitSkyCreator) == 0x000038, "Wrong size on SkyCreatorController_C_InitSkyCreator");
static_assert(offsetof(SkyCreatorController_C_InitSkyCreator, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000000, "Member 'SkyCreatorController_C_InitSkyCreator::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_InitSkyCreator, CallFunc_GetAllActorsOfClassWithTag_OutActors_1) == 0x000010, "Member 'SkyCreatorController_C_InitSkyCreator::CallFunc_GetAllActorsOfClassWithTag_OutActors_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_InitSkyCreator, CallFunc_Array_Get_Item) == 0x000020, "Member 'SkyCreatorController_C_InitSkyCreator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_InitSkyCreator, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'SkyCreatorController_C_InitSkyCreator::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_InitSkyCreator, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'SkyCreatorController_C_InitSkyCreator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_InitSkyCreator, CallFunc_K2_AttachToActor_ReturnValue) == 0x000031, "Member 'SkyCreatorController_C_InitSkyCreator::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_InitSkyCreator, CallFunc_K2_AttachToActor_ReturnValue_1) == 0x000032, "Member 'SkyCreatorController_C_InitSkyCreator::CallFunc_K2_AttachToActor_ReturnValue_1' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.IsHub
// 0x0020 (0x0020 - 0x0000)
struct SkyCreatorController_C_IsHub final
{
public:
	bool                                          Param_IsHub;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_IsHub) == 0x000008, "Wrong alignment on SkyCreatorController_C_IsHub");
static_assert(sizeof(SkyCreatorController_C_IsHub) == 0x000020, "Wrong size on SkyCreatorController_C_IsHub");
static_assert(offsetof(SkyCreatorController_C_IsHub, Param_IsHub) == 0x000000, "Member 'SkyCreatorController_C_IsHub::Param_IsHub' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_IsHub, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'SkyCreatorController_C_IsHub::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_IsHub, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'SkyCreatorController_C_IsHub::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_IsHub, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000010, "Member 'SkyCreatorController_C_IsHub::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_IsHub, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SkyCreatorController_C_IsHub::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_IsHub, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000019, "Member 'SkyCreatorController_C_IsHub::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_IsHub, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'SkyCreatorController_C_IsHub::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.LerpSettings
// 0x76C8 (0x76C8 - 0x0000)
struct SkyCreatorController_C_LerpSettings final
{
public:
	bool                                          Construct;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue;     // 0x0020(0x04E8)(NoDestructor)
	EDayCycleState                                Temp_byte_Variable_3;                              // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_1;   // 0x050C(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_2;   // 0x09F4(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_3;   // 0x0EDC(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_4;   // 0x13C4(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             K2Node_Select_Default;                             // 0x18AC(0x04E8)(NoDestructor)
	EDayCycleState                                Temp_byte_Variable_4;                              // 0x1D94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D95[0x3];                                     // 0x1D95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_5;   // 0x1D98(0x04E8)(NoDestructor)
	double                                        K2Node_Select_Default_1;                           // 0x2280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_6;   // 0x2288(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_7;   // 0x2770(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_8;   // 0x2C58(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             K2Node_Select_Default_2;                           // 0x3140(0x04E8)(NoDestructor)
	class USkyCreatorWeatherPreset*               CallFunc_Array_Get_Item;                           // 0x3628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkyCreatorWeatherPreset*               CallFunc_Array_Get_Item_1;                         // 0x3630(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_9;   // 0x3638(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_10;  // 0x3B20(0x04E8)(NoDestructor)
	class USkyCreatorWeatherPreset*               CallFunc_Array_Get_Item_2;                         // 0x4008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkyCreatorWeatherPreset*               CallFunc_Array_Get_Item_3;                         // 0x4010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_11;  // 0x4018(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPresetSettings_ReturnValue_12;  // 0x4500(0x04E8)(NoDestructor)
	bool                                          CallFunc_IsHub_IsHub;                              // 0x49E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable_5;                              // 0x49E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable_6;                              // 0x49EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49EB[0x5];                                     // 0x49EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_3;                           // 0x49F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x49F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             K2Node_Select_Default_5;                           // 0x4A00(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             K2Node_Select_Default_6;                           // 0x4EE8(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherSettings_ReturnValue;           // 0x53D0(0x04E8)(NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x58B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x58C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x58C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C9[0x3];                                     // 0x58C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkyCreatorWeatherSettings             K2Node_Select_Default_7;                           // 0x58CC(0x04E8)(NoDestructor)
	struct FSkyCreatorWeatherSettings             K2Node_Select_Default_8;                           // 0x5DB4(0x04E8)(NoDestructor)
	uint8                                         Pad_629C[0x4];                                     // 0x629C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x62A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPreset_ReturnValue;             // 0x62A8(0x04E8)(NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x6790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x6798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6799[0x7];                                     // 0x6799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x67A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             K2Node_Select_Default_9;                           // 0x67A8(0x04E8)(NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x6C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPreset_ReturnValue_1;           // 0x6C98(0x04E8)(NoDestructor)
	double                                        K2Node_Select_Default_10;                          // 0x7180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             K2Node_Select_Default_11;                          // 0x7188(0x04E8)(NoDestructor)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x7670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x7678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                Temp_byte_Variable_7;                              // 0x7680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7681[0x7];                                     // 0x7681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x7688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_12;                          // 0x7690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x7698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x76A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x76A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x76A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x76A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76A4[0x4];                                     // 0x76A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x76A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Alpha_ImplicitCast;             // 0x76B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LerpWeatherSettings_Alpha_ImplicitCast;   // 0x76B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LerpWeatherSettings_Alpha_ImplicitCast_1; // 0x76B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTime_InTime_ImplicitCast;              // 0x76BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTime_InTime_ImplicitCast_1;            // 0x76C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_LerpSettings) == 0x000008, "Wrong alignment on SkyCreatorController_C_LerpSettings");
static_assert(sizeof(SkyCreatorController_C_LerpSettings) == 0x0076C8, "Wrong size on SkyCreatorController_C_LerpSettings");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Construct) == 0x000000, "Member 'SkyCreatorController_C_LerpSettings::Construct' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_bool_Variable) == 0x000001, "Member 'SkyCreatorController_C_LerpSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_byte_Variable) == 0x000002, "Member 'SkyCreatorController_C_LerpSettings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_bool_Variable_1) == 0x000003, "Member 'SkyCreatorController_C_LerpSettings::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_bool_Variable_2) == 0x000004, "Member 'SkyCreatorController_C_LerpSettings::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_bool_Variable_3) == 0x000005, "Member 'SkyCreatorController_C_LerpSettings::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_byte_Variable_1) == 0x000006, "Member 'SkyCreatorController_C_LerpSettings::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_byte_Variable_2) == 0x000007, "Member 'SkyCreatorController_C_LerpSettings::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_bool_Variable_4) == 0x000010, "Member 'SkyCreatorController_C_LerpSettings::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue) == 0x000020, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_byte_Variable_3) == 0x000508, "Member 'SkyCreatorController_C_LerpSettings::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_1) == 0x00050C, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_2) == 0x0009F4, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_3) == 0x000EDC, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_4) == 0x0013C4, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default) == 0x0018AC, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_byte_Variable_4) == 0x001D94, "Member 'SkyCreatorController_C_LerpSettings::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_5) == 0x001D98, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_1) == 0x002280, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_6) == 0x002288, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_7) == 0x002770, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_8) == 0x002C58, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_2) == 0x003140, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Array_Get_Item) == 0x003628, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Array_Get_Item_1) == 0x003630, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_9) == 0x003638, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_10) == 0x003B20, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Array_Get_Item_2) == 0x004008, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Array_Get_Item_3) == 0x004010, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_11) == 0x004018, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPresetSettings_ReturnValue_12) == 0x004500, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPresetSettings_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_IsHub_IsHub) == 0x0049E8, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_IsHub_IsHub' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_byte_Variable_5) == 0x0049E9, "Member 'SkyCreatorController_C_LerpSettings::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_byte_Variable_6) == 0x0049EA, "Member 'SkyCreatorController_C_LerpSettings::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_3) == 0x0049F0, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_4) == 0x0049F8, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_5) == 0x004A00, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_6) == 0x004EE8, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherSettings_ReturnValue) == 0x0053D0, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_MapRangeClamped_ReturnValue) == 0x0058B8, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0058C0, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0058C8, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_7) == 0x0058CC, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_8) == 0x005DB4, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_SelectFloat_ReturnValue) == 0x0062A0, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPreset_ReturnValue) == 0x0062A8, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPreset_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x006790, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x006798, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0067A0, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_9) == 0x0067A8, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_MapRangeClamped_ReturnValue_2) == 0x006C90, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWeatherPreset_ReturnValue_1) == 0x006C98, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWeatherPreset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_10) == 0x007180, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_11) == 0x007188, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Lerp_ReturnValue) == 0x007670, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x007678, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, Temp_byte_Variable_7) == 0x007680, "Member 'SkyCreatorController_C_LerpSettings::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x007688, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_Select_Default_12) == 0x007690, "Member 'SkyCreatorController_C_LerpSettings::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Lerp_ReturnValue_1) == 0x007698, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0076A0, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0076A1, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_BooleanAND_ReturnValue) == 0x0076A2, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0076A3, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0076A8, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, K2Node_VariableSet_Alpha_ImplicitCast) == 0x0076B0, "Member 'SkyCreatorController_C_LerpSettings::K2Node_VariableSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_LerpWeatherSettings_Alpha_ImplicitCast) == 0x0076B4, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_LerpWeatherSettings_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_LerpWeatherSettings_Alpha_ImplicitCast_1) == 0x0076B8, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_LerpWeatherSettings_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_SetTime_InTime_ImplicitCast) == 0x0076BC, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_SetTime_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_LerpSettings, CallFunc_SetTime_InTime_ImplicitCast_1) == 0x0076C0, "Member 'SkyCreatorController_C_LerpSettings::CallFunc_SetTime_InTime_ImplicitCast_1' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.LightChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SkyCreatorController_C_LightChange__DelegateSignature final
{
public:
	ESkyCreatorLightStateEnum                     Setting_State;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_LightChange__DelegateSignature) == 0x000001, "Wrong alignment on SkyCreatorController_C_LightChange__DelegateSignature");
static_assert(sizeof(SkyCreatorController_C_LightChange__DelegateSignature) == 0x000001, "Wrong size on SkyCreatorController_C_LightChange__DelegateSignature");
static_assert(offsetof(SkyCreatorController_C_LightChange__DelegateSignature, Setting_State) == 0x000000, "Member 'SkyCreatorController_C_LightChange__DelegateSignature::Setting_State' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.NormalizeTime
// 0x0048 (0x0048 - 0x0000)
struct SkyCreatorController_C_NormalizeTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_NormalizeTime) == 0x000008, "Wrong alignment on SkyCreatorController_C_NormalizeTime");
static_assert(sizeof(SkyCreatorController_C_NormalizeTime) == 0x000048, "Wrong size on SkyCreatorController_C_NormalizeTime");
static_assert(offsetof(SkyCreatorController_C_NormalizeTime, Time) == 0x000000, "Member 'SkyCreatorController_C_NormalizeTime::Time' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_NormalizeTime, ReturnValue) == 0x000008, "Member 'SkyCreatorController_C_NormalizeTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_NormalizeTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'SkyCreatorController_C_NormalizeTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_NormalizeTime, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'SkyCreatorController_C_NormalizeTime::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_NormalizeTime, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'SkyCreatorController_C_NormalizeTime::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_NormalizeTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'SkyCreatorController_C_NormalizeTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_NormalizeTime, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'SkyCreatorController_C_NormalizeTime::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_NormalizeTime, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'SkyCreatorController_C_NormalizeTime::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_NormalizeTime, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000040, "Member 'SkyCreatorController_C_NormalizeTime::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.OnCycleChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct SkyCreatorController_C_OnCycleChange__DelegateSignature final
{
public:
	EDayCycleState                                Param_DayCycleState;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_OnCycleChange__DelegateSignature) == 0x000001, "Wrong alignment on SkyCreatorController_C_OnCycleChange__DelegateSignature");
static_assert(sizeof(SkyCreatorController_C_OnCycleChange__DelegateSignature) == 0x000001, "Wrong size on SkyCreatorController_C_OnCycleChange__DelegateSignature");
static_assert(offsetof(SkyCreatorController_C_OnCycleChange__DelegateSignature, Param_DayCycleState) == 0x000000, "Member 'SkyCreatorController_C_OnCycleChange__DelegateSignature::Param_DayCycleState' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.OnDayStateChange
// 0x09F8 (0x09F8 - 0x0000)
struct SkyCreatorController_C_OnDayStateChange final
{
public:
	bool                                          Construct;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPreset_ReturnValue;             // 0x0004(0x04E8)(NoDestructor)
	EDayCycleState                                Temp_byte_Variable;                                // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkyCreatorWeatherSettings             CallFunc_GetWeatherPreset_ReturnValue_1;           // 0x04F4(0x04E8)(NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x09DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x09E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E5[0x3];                                      // 0x09E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_NewEnumerator3_ImplicitCast;         // 0x09E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator2_ImplicitCast;         // 0x09EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator1_ImplicitCast;         // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator0_ImplicitCast;         // 0x09F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_OnDayStateChange) == 0x000004, "Wrong alignment on SkyCreatorController_C_OnDayStateChange");
static_assert(sizeof(SkyCreatorController_C_OnDayStateChange) == 0x0009F8, "Wrong size on SkyCreatorController_C_OnDayStateChange");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, Construct) == 0x000000, "Member 'SkyCreatorController_C_OnDayStateChange::Construct' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, CallFunc_GetWeatherPreset_ReturnValue) == 0x000004, "Member 'SkyCreatorController_C_OnDayStateChange::CallFunc_GetWeatherPreset_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, Temp_byte_Variable) == 0x0004EC, "Member 'SkyCreatorController_C_OnDayStateChange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, K2Node_Select_Default) == 0x0004F0, "Member 'SkyCreatorController_C_OnDayStateChange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, CallFunc_GetWeatherPreset_ReturnValue_1) == 0x0004F4, "Member 'SkyCreatorController_C_OnDayStateChange::CallFunc_GetWeatherPreset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0009DC, "Member 'SkyCreatorController_C_OnDayStateChange::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0009E0, "Member 'SkyCreatorController_C_OnDayStateChange::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0009E4, "Member 'SkyCreatorController_C_OnDayStateChange::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, K2Node_Select_NewEnumerator3_ImplicitCast) == 0x0009E8, "Member 'SkyCreatorController_C_OnDayStateChange::K2Node_Select_NewEnumerator3_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, K2Node_Select_NewEnumerator2_ImplicitCast) == 0x0009EC, "Member 'SkyCreatorController_C_OnDayStateChange::K2Node_Select_NewEnumerator2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, K2Node_Select_NewEnumerator1_ImplicitCast) == 0x0009F0, "Member 'SkyCreatorController_C_OnDayStateChange::K2Node_Select_NewEnumerator1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_OnDayStateChange, K2Node_Select_NewEnumerator0_ImplicitCast) == 0x0009F4, "Member 'SkyCreatorController_C_OnDayStateChange::K2Node_Select_NewEnumerator0_ImplicitCast' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.OnSettingsStateChange
// 0x0001 (0x0001 - 0x0000)
struct SkyCreatorController_C_OnSettingsStateChange final
{
public:
	ESkyCreatorLightStateEnum                     Param_SettingsState;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_OnSettingsStateChange) == 0x000001, "Wrong alignment on SkyCreatorController_C_OnSettingsStateChange");
static_assert(sizeof(SkyCreatorController_C_OnSettingsStateChange) == 0x000001, "Wrong size on SkyCreatorController_C_OnSettingsStateChange");
static_assert(offsetof(SkyCreatorController_C_OnSettingsStateChange, Param_SettingsState) == 0x000000, "Member 'SkyCreatorController_C_OnSettingsStateChange::Param_SettingsState' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct SkyCreatorController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_ReceiveTick) == 0x000004, "Wrong alignment on SkyCreatorController_C_ReceiveTick");
static_assert(sizeof(SkyCreatorController_C_ReceiveTick) == 0x000004, "Wrong size on SkyCreatorController_C_ReceiveTick");
static_assert(offsetof(SkyCreatorController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'SkyCreatorController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.SetNextCycle
// 0x0048 (0x0048 - 0x0000)
struct SkyCreatorController_C_SetNextCycle final
{
public:
	EDayCycleState                                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator1_ImplicitCast;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator0_ImplicitCast;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_SetNextCycle) == 0x000008, "Wrong alignment on SkyCreatorController_C_SetNextCycle");
static_assert(sizeof(SkyCreatorController_C_SetNextCycle) == 0x000048, "Wrong size on SkyCreatorController_C_SetNextCycle");
static_assert(offsetof(SkyCreatorController_C_SetNextCycle, Temp_byte_Variable) == 0x000000, "Member 'SkyCreatorController_C_SetNextCycle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_SetNextCycle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'SkyCreatorController_C_SetNextCycle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_SetNextCycle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'SkyCreatorController_C_SetNextCycle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_SetNextCycle, K2Node_Select_Default) == 0x000018, "Member 'SkyCreatorController_C_SetNextCycle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_SetNextCycle, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'SkyCreatorController_C_SetNextCycle::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_SetNextCycle, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'SkyCreatorController_C_SetNextCycle::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_SetNextCycle, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'SkyCreatorController_C_SetNextCycle::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_SetNextCycle, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000038, "Member 'SkyCreatorController_C_SetNextCycle::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_SetNextCycle, K2Node_Select_NewEnumerator1_ImplicitCast) == 0x000040, "Member 'SkyCreatorController_C_SetNextCycle::K2Node_Select_NewEnumerator1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_SetNextCycle, K2Node_Select_NewEnumerator0_ImplicitCast) == 0x000044, "Member 'SkyCreatorController_C_SetNextCycle::K2Node_Select_NewEnumerator0_ImplicitCast' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct SkyCreatorController_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_UserConstructionScript) == 0x000001, "Wrong alignment on SkyCreatorController_C_UserConstructionScript");
static_assert(sizeof(SkyCreatorController_C_UserConstructionScript) == 0x000001, "Wrong size on SkyCreatorController_C_UserConstructionScript");
static_assert(offsetof(SkyCreatorController_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'SkyCreatorController_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SkyCreatorController.SkyCreatorController_C.WeatherTimerCheck
// 0x0040 (0x0040 - 0x0000)
struct SkyCreatorController_C_WeatherTimerCheck final
{
public:
	EDayCycleState                                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkyCreatorController_C_WeatherTimerCheck) == 0x000008, "Wrong alignment on SkyCreatorController_C_WeatherTimerCheck");
static_assert(sizeof(SkyCreatorController_C_WeatherTimerCheck) == 0x000040, "Wrong size on SkyCreatorController_C_WeatherTimerCheck");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, Temp_byte_Variable) == 0x000000, "Member 'SkyCreatorController_C_WeatherTimerCheck::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, CallFunc_Array_LastIndex_ReturnValue) == 0x000004, "Member 'SkyCreatorController_C_WeatherTimerCheck::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000008, "Member 'SkyCreatorController_C_WeatherTimerCheck::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, CallFunc_Array_LastIndex_ReturnValue_2) == 0x00000C, "Member 'SkyCreatorController_C_WeatherTimerCheck::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000010, "Member 'SkyCreatorController_C_WeatherTimerCheck::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'SkyCreatorController_C_WeatherTimerCheck::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, K2Node_Select_Default) == 0x000020, "Member 'SkyCreatorController_C_WeatherTimerCheck::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000024, "Member 'SkyCreatorController_C_WeatherTimerCheck::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000028, "Member 'SkyCreatorController_C_WeatherTimerCheck::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, CallFunc_K2_SetTimer_ReturnValue) == 0x000030, "Member 'SkyCreatorController_C_WeatherTimerCheck::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkyCreatorController_C_WeatherTimerCheck, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000038, "Member 'SkyCreatorController_C_WeatherTimerCheck::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

}

