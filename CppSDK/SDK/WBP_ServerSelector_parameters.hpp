#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ServerSelector

#include "Basic.hpp"

#include "ENUM_ServerRegions_structs.hpp"
#include "UMG_structs.hpp"
#include "S_ServerInfo_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function WBP_ServerSelector.WBP_ServerSelector_C.ChangeSelectedWidget
// 0x0018 (0x0018 - 0x0000)
struct WBP_ServerSelector_C_ChangeSelectedWidget final
{
public:
	class UWBP_ServerCell_C*                      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_ChangeSelectedWidget) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_ChangeSelectedWidget");
static_assert(sizeof(WBP_ServerSelector_C_ChangeSelectedWidget) == 0x000018, "Wrong size on WBP_ServerSelector_C_ChangeSelectedWidget");
static_assert(offsetof(WBP_ServerSelector_C_ChangeSelectedWidget, Widget) == 0x000000, "Member 'WBP_ServerSelector_C_ChangeSelectedWidget::Widget' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ChangeSelectedWidget, CallFunc_Array_Find_ReturnValue) == 0x000008, "Member 'WBP_ServerSelector_C_ChangeSelectedWidget::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ChangeSelectedWidget, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ServerSelector_C_ChangeSelectedWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ChangeSelectedWidget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'WBP_ServerSelector_C_ChangeSelectedWidget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ChangeSelectedWidget, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_ServerSelector_C_ChangeSelectedWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ChangeSelectedWidget, CallFunc_Array_Contains_ReturnValue) == 0x000012, "Member 'WBP_ServerSelector_C_ChangeSelectedWidget::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.Check Server Have Empty Slots
// 0x0078 (0x0078 - 0x0000)
struct WBP_ServerSelector_C_Check_Server_Have_Empty_Slots final
{
public:
	class UWBP_ServerCell_C*                      ServerCell;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetServerName_ServerName;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0050(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_Check_Server_Have_Empty_Slots");
static_assert(sizeof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots) == 0x000078, "Wrong size on WBP_ServerSelector_C_Check_Server_Have_Empty_Slots");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, ServerCell) == 0x000000, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::ServerCell' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, ReturnValue) == 0x000008, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, CallFunc_GetServerName_ServerName) == 0x000018, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::CallFunc_GetServerName_ServerName' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, K2Node_DynamicCast_AsGI_Survival) == 0x000028, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, CallFunc_Map_Find_Value) == 0x000038, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, CallFunc_ParseIntoArray_ReturnValue) == 0x000050, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, CallFunc_Array_Get_Item) == 0x000060, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, CallFunc_Conv_StringToInt_ReturnValue) == 0x000070, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Check_Server_Have_Empty_Slots, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'WBP_ServerSelector_C_Check_Server_Have_Empty_Slots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.ClearOfficialServersList
// 0x0020 (0x0020 - 0x0000)
struct WBP_ServerSelector_C_ClearOfficialServersList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ServerCell_C*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_ClearOfficialServersList) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_ClearOfficialServersList");
static_assert(sizeof(WBP_ServerSelector_C_ClearOfficialServersList) == 0x000020, "Wrong size on WBP_ServerSelector_C_ClearOfficialServersList");
static_assert(offsetof(WBP_ServerSelector_C_ClearOfficialServersList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_ServerSelector_C_ClearOfficialServersList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ClearOfficialServersList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_ServerSelector_C_ClearOfficialServersList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ClearOfficialServersList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ServerSelector_C_ClearOfficialServersList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ClearOfficialServersList, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_ServerSelector_C_ClearOfficialServersList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ClearOfficialServersList, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_ServerSelector_C_ClearOfficialServersList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ClearOfficialServersList, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WBP_ServerSelector_C_ClearOfficialServersList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ClearOfficialServersList, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WBP_ServerSelector_C_ClearOfficialServersList::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.ExecuteUbergraph_WBP_ServerSelector
// 0x0080 (0x0080 - 0x0000)
struct WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_RegionCellEmpty_C*                   CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_ServerInfo                          K2Node_CustomEvent_ServerInfo;                     // 0x0010(0x0040)(HasGetValueTypeHash)
	class UWBP_ServerCell_C*                      K2Node_CustomEvent_Widget;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_Server_Have_Empty_Slots_ReturnValue; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ServerCell_C*                      K2Node_CustomEvent_Target;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector");
static_assert(sizeof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector) == 0x000080, "Wrong size on WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector");
static_assert(offsetof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector, EntryPoint) == 0x000000, "Member 'WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector, K2Node_CustomEvent_ServerInfo) == 0x000010, "Member 'WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector::K2Node_CustomEvent_ServerInfo' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector, K2Node_CustomEvent_Widget) == 0x000050, "Member 'WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector, CallFunc_Check_Server_Have_Empty_Slots_ReturnValue) == 0x000058, "Member 'WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector::CallFunc_Check_Server_Have_Empty_Slots_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector, K2Node_Event_IsDesignTime) == 0x000059, "Member 'WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector, CallFunc_AddChild_ReturnValue) == 0x000060, "Member 'WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector, K2Node_CustomEvent_Target) == 0x000068, "Member 'WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector, CallFunc_PlayEvent2D_ReturnValue) == 0x000070, "Member 'WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'WBP_ServerSelector_C_ExecuteUbergraph_WBP_ServerSelector::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.GetSelectedServer
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerSelector_C_GetSelectedServer final
{
public:
	class UWBP_ServerCell_C*                      Param_SelectedServer;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_GetSelectedServer) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_GetSelectedServer");
static_assert(sizeof(WBP_ServerSelector_C_GetSelectedServer) == 0x000008, "Wrong size on WBP_ServerSelector_C_GetSelectedServer");
static_assert(offsetof(WBP_ServerSelector_C_GetSelectedServer, Param_SelectedServer) == 0x000000, "Member 'WBP_ServerSelector_C_GetSelectedServer::Param_SelectedServer' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.GetServerIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_ServerSelector_C_GetServerIndex final
{
public:
	int32                                         Param_ServerIndex;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_GetServerIndex) == 0x000004, "Wrong alignment on WBP_ServerSelector_C_GetServerIndex");
static_assert(sizeof(WBP_ServerSelector_C_GetServerIndex) == 0x000004, "Wrong size on WBP_ServerSelector_C_GetServerIndex");
static_assert(offsetof(WBP_ServerSelector_C_GetServerIndex, Param_ServerIndex) == 0x000000, "Member 'WBP_ServerSelector_C_GetServerIndex::Param_ServerIndex' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.InitOfficialServerByRegion
// 0x01F8 (0x01F8 - 0x0000)
struct WBP_ServerSelector_C_InitOfficialServerByRegion final
{
public:
	ENUM_ServerRegions                            InputPin;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MinServerEntries;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_ServerCell_C* Widget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FS_ServerInfo& ServerInfo, class UWBP_ServerCell_C* Widget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ServerCell_C*                      CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_ServerCell_C* ServerCell)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectServerTag_ReturnValue;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Sort_By_SortedMapKeys;                    // 0x0068(0x0010)(ReferenceParm)
	TMap<class FString, class FString>            CallFunc_Sort_By_Servers;                          // 0x0078(0x0050)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0118(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue_1;             // 0x0128(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0150(0x0018)()
	struct FS_ServerInfo                          K2Node_MakeStruct_S_ServerInfo;                    // 0x0168(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x2];                                      // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ServerCell_C*                      CallFunc_Create_ReturnValue_1;                     // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Set_Population_Range_Text;                // 0x01D0(0x0018)()
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_InitOfficialServerByRegion) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_InitOfficialServerByRegion");
static_assert(sizeof(WBP_ServerSelector_C_InitOfficialServerByRegion) == 0x0001F8, "Wrong size on WBP_ServerSelector_C_InitOfficialServerByRegion");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, InputPin) == 0x000000, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::InputPin' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, MinServerEntries) == 0x000004, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::MinServerEntries' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, K2Node_DynamicCast_AsGI_Survival) == 0x000038, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_SelectServerTag_ReturnValue) == 0x000058, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_SelectServerTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Sort_By_SortedMapKeys) == 0x000068, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Sort_By_SortedMapKeys' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Sort_By_Servers) == 0x000078, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Sort_By_Servers' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000C8, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0000D0, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D8, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, Temp_int_Array_Index_Variable) == 0x0000E0, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Array_Length_ReturnValue_2) == 0x0000E4, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Map_Find_Value) == 0x000100, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Map_Find_ReturnValue) == 0x000110, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_ParseIntoArray_ReturnValue) == 0x000118, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_ParseIntoArray_ReturnValue_1) == 0x000128, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_ParseIntoArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Conv_StringToInt_ReturnValue) == 0x000148, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Conv_StringToText_ReturnValue) == 0x000150, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, K2Node_MakeStruct_S_ServerInfo) == 0x000168, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::K2Node_MakeStruct_S_ServerInfo' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0001A8, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x0001A9, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, Temp_int_Loop_Counter_Variable) == 0x0001AC, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001B0, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Add_IntInt_ReturnValue) == 0x0001B4, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, Temp_int_Variable) == 0x0001B8, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Create_ReturnValue_1) == 0x0001C0, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Array_AddUnique_ReturnValue) == 0x0001C8, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Set_Population_Range_Text) == 0x0001D0, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Set_Population_Range_Text' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x0001E8, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001F0, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitOfficialServerByRegion, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001F4, "Member 'WBP_ServerSelector_C_InitOfficialServerByRegion::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.InitScrollCount
// 0x0040 (0x0040 - 0x0000)
struct WBP_ServerSelector_C_InitScrollCount final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0028(0x0018)()
};
static_assert(alignof(WBP_ServerSelector_C_InitScrollCount) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_InitScrollCount");
static_assert(sizeof(WBP_ServerSelector_C_InitScrollCount) == 0x000040, "Wrong size on WBP_ServerSelector_C_InitScrollCount");
static_assert(offsetof(WBP_ServerSelector_C_InitScrollCount, Current) == 0x000000, "Member 'WBP_ServerSelector_C_InitScrollCount::Current' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitScrollCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_ServerSelector_C_InitScrollCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitScrollCount, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_ServerSelector_C_InitScrollCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_InitScrollCount, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000028, "Member 'WBP_ServerSelector_C_InitScrollCount::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.OnPlayAnimation
// 0x0018 (0x0018 - 0x0000)
struct WBP_ServerSelector_C_OnPlayAnimation final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewState;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_OnPlayAnimation) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_OnPlayAnimation");
static_assert(sizeof(WBP_ServerSelector_C_OnPlayAnimation) == 0x000018, "Wrong size on WBP_ServerSelector_C_OnPlayAnimation");
static_assert(offsetof(WBP_ServerSelector_C_OnPlayAnimation, Animation) == 0x000000, "Member 'WBP_ServerSelector_C_OnPlayAnimation::Animation' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_OnPlayAnimation, NewState) == 0x000008, "Member 'WBP_ServerSelector_C_OnPlayAnimation::NewState' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_OnPlayAnimation, Temp_bool_Variable) == 0x000009, "Member 'WBP_ServerSelector_C_OnPlayAnimation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_OnPlayAnimation, Temp_byte_Variable) == 0x00000A, "Member 'WBP_ServerSelector_C_OnPlayAnimation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_OnPlayAnimation, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_ServerSelector_C_OnPlayAnimation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_OnPlayAnimation, K2Node_Select_Default) == 0x00000C, "Member 'WBP_ServerSelector_C_OnPlayAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_OnPlayAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_ServerSelector_C_OnPlayAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.OnServerSelected__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct WBP_ServerSelector_C_OnServerSelected__DelegateSignature final
{
public:
	struct FS_ServerInfo                          ServerInfo;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_OnServerSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_OnServerSelected__DelegateSignature");
static_assert(sizeof(WBP_ServerSelector_C_OnServerSelected__DelegateSignature) == 0x000040, "Wrong size on WBP_ServerSelector_C_OnServerSelected__DelegateSignature");
static_assert(offsetof(WBP_ServerSelector_C_OnServerSelected__DelegateSignature, ServerInfo) == 0x000000, "Member 'WBP_ServerSelector_C_OnServerSelected__DelegateSignature::ServerInfo' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ServerSelector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ServerSelector_C_PreConstruct");
static_assert(sizeof(WBP_ServerSelector_C_PreConstruct) == 0x000001, "Wrong size on WBP_ServerSelector_C_PreConstruct");
static_assert(offsetof(WBP_ServerSelector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ServerSelector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.SelectDoubleClickedServer
// 0x0008 (0x0008 - 0x0000)
struct WBP_ServerSelector_C_SelectDoubleClickedServer final
{
public:
	class UWBP_ServerCell_C*                      Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_SelectDoubleClickedServer) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_SelectDoubleClickedServer");
static_assert(sizeof(WBP_ServerSelector_C_SelectDoubleClickedServer) == 0x000008, "Wrong size on WBP_ServerSelector_C_SelectDoubleClickedServer");
static_assert(offsetof(WBP_ServerSelector_C_SelectDoubleClickedServer, Target) == 0x000000, "Member 'WBP_ServerSelector_C_SelectDoubleClickedServer::Target' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.SelectFirstServer
// 0x0030 (0x0030 - 0x0000)
struct WBP_ServerSelector_C_SelectFirstServer final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ServerCell_C*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_SelectFirstServer) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_SelectFirstServer");
static_assert(sizeof(WBP_ServerSelector_C_SelectFirstServer) == 0x000030, "Wrong size on WBP_ServerSelector_C_SelectFirstServer");
static_assert(offsetof(WBP_ServerSelector_C_SelectFirstServer, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_ServerSelector_C_SelectFirstServer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_SelectFirstServer, CallFunc_GetAllChildren_ReturnValue) == 0x000008, "Member 'WBP_ServerSelector_C_SelectFirstServer::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_SelectFirstServer, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'WBP_ServerSelector_C_SelectFirstServer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_SelectFirstServer, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_ServerSelector_C_SelectFirstServer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_SelectFirstServer, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_ServerSelector_C_SelectFirstServer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.ServerSelectd
// 0x0048 (0x0048 - 0x0000)
struct WBP_ServerSelector_C_ServerSelectd final
{
public:
	struct FS_ServerInfo                          ServerInfo;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UWBP_ServerCell_C*                      Widget;                                            // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_ServerSelectd) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_ServerSelectd");
static_assert(sizeof(WBP_ServerSelector_C_ServerSelectd) == 0x000048, "Wrong size on WBP_ServerSelector_C_ServerSelectd");
static_assert(offsetof(WBP_ServerSelector_C_ServerSelectd, ServerInfo) == 0x000000, "Member 'WBP_ServerSelector_C_ServerSelectd::ServerInfo' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_ServerSelectd, Widget) == 0x000040, "Member 'WBP_ServerSelector_C_ServerSelectd::Widget' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.SetActiveIndexSwitcher
// 0x0004 (0x0004 - 0x0000)
struct WBP_ServerSelector_C_SetActiveIndexSwitcher final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ServerSelector_C_SetActiveIndexSwitcher) == 0x000004, "Wrong alignment on WBP_ServerSelector_C_SetActiveIndexSwitcher");
static_assert(sizeof(WBP_ServerSelector_C_SetActiveIndexSwitcher) == 0x000004, "Wrong size on WBP_ServerSelector_C_SetActiveIndexSwitcher");
static_assert(offsetof(WBP_ServerSelector_C_SetActiveIndexSwitcher, Param_Index) == 0x000000, "Member 'WBP_ServerSelector_C_SetActiveIndexSwitcher::Param_Index' has a wrong offset!");

// Function WBP_ServerSelector.WBP_ServerSelector_C.Sort By
// 0x0140 (0x0140 - 0x0000)
struct WBP_ServerSelector_C_Sort_By final
{
public:
	class UGI_Survival_C*                         GI_Survival;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         SortedMapKeys;                                     // 0x0008(0x0010)(Parm, OutParm)
	TMap<class FString, class FString>            Servers;                                           // 0x0018(0x0050)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0070(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x00B0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, int32>                    CallFunc_StringMapSortByInt_ReturnValue;           // 0x00E0(0x0050)()
	TArray<class FString>                         CallFunc_Map_Keys_Keys_1;                          // 0x0130(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_ServerSelector_C_Sort_By) == 0x000008, "Wrong alignment on WBP_ServerSelector_C_Sort_By");
static_assert(sizeof(WBP_ServerSelector_C_Sort_By) == 0x000140, "Wrong size on WBP_ServerSelector_C_Sort_By");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, GI_Survival) == 0x000000, "Member 'WBP_ServerSelector_C_Sort_By::GI_Survival' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, SortedMapKeys) == 0x000008, "Member 'WBP_ServerSelector_C_Sort_By::SortedMapKeys' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, Servers) == 0x000018, "Member 'WBP_ServerSelector_C_Sort_By::Servers' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, Temp_int_Array_Index_Variable) == 0x000068, "Member 'WBP_ServerSelector_C_Sort_By::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_Map_Keys_Keys) == 0x000070, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'WBP_ServerSelector_C_Sort_By::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_Array_Get_Item) == 0x000088, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_Map_Find_Value) == 0x000098, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_ParseIntoArray_ReturnValue) == 0x0000B0, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000D0, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_StringMapSortByInt_ReturnValue) == 0x0000E0, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_StringMapSortByInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ServerSelector_C_Sort_By, CallFunc_Map_Keys_Keys_1) == 0x000130, "Member 'WBP_ServerSelector_C_Sort_By::CallFunc_Map_Keys_Keys_1' has a wrong offset!");

}

