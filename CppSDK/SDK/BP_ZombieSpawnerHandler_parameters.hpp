#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZombieSpawnerHandler

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ZombieSpawnerHandler.BP_ZombieSpawnerHandler_C.CREATEDELEGATE_PROXYFUNCTION_0
// 0x0108 (0x0108 - 0x0000)
struct BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000008, "Wrong alignment on BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(sizeof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000108, "Wrong size on BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0, OverlappedComponent) == 0x000000, "Member 'BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0, OtherActor) == 0x000008, "Member 'BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0, OtherComp) == 0x000010, "Member 'BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0, OtherBodyIndex) == 0x000018, "Member 'BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0, bFromSweep) == 0x00001C, "Member 'BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0, SweepResult) == 0x000020, "Member 'BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_0::SweepResult' has a wrong offset!");

// Function BP_ZombieSpawnerHandler.BP_ZombieSpawnerHandler_C.CREATEDELEGATE_PROXYFUNCTION_1
// 0x0020 (0x0020 - 0x0000)
struct BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000008, "Wrong alignment on BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(sizeof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000020, "Wrong size on BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1, OverlappedComponent) == 0x000000, "Member 'BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1, OtherActor) == 0x000008, "Member 'BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1, OtherComp) == 0x000010, "Member 'BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1, OtherBodyIndex) == 0x000018, "Member 'BP_ZombieSpawnerHandler_C_CREATEDELEGATE_PROXYFUNCTION_1::OtherBodyIndex' has a wrong offset!");

// Function BP_ZombieSpawnerHandler.BP_ZombieSpawnerHandler_C.ExecuteUbergraph_BP_ZombieSpawnerHandler
// 0x0004 (0x0004 - 0x0000)
struct BP_ZombieSpawnerHandler_C_ExecuteUbergraph_BP_ZombieSpawnerHandler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawnerHandler_C_ExecuteUbergraph_BP_ZombieSpawnerHandler) == 0x000004, "Wrong alignment on BP_ZombieSpawnerHandler_C_ExecuteUbergraph_BP_ZombieSpawnerHandler");
static_assert(sizeof(BP_ZombieSpawnerHandler_C_ExecuteUbergraph_BP_ZombieSpawnerHandler) == 0x000004, "Wrong size on BP_ZombieSpawnerHandler_C_ExecuteUbergraph_BP_ZombieSpawnerHandler");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_ExecuteUbergraph_BP_ZombieSpawnerHandler, EntryPoint) == 0x000000, "Member 'BP_ZombieSpawnerHandler_C_ExecuteUbergraph_BP_ZombieSpawnerHandler::EntryPoint' has a wrong offset!");

// Function BP_ZombieSpawnerHandler.BP_ZombieSpawnerHandler_C.GetAllOverlappingSpawners
// 0x0068 (0x0068 - 0x0000)
struct BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ZombieSpawner_C*                    K2Node_DynamicCast_AsBP_Zombie_Spawner;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners) == 0x000008, "Wrong alignment on BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners");
static_assert(sizeof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners) == 0x000068, "Wrong size on BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000030, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, K2Node_DynamicCast_AsBP_Zombie_Spawner) == 0x000058, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::K2Node_DynamicCast_AsBP_Zombie_Spawner' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'BP_ZombieSpawnerHandler_C_GetAllOverlappingSpawners::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawnerHandler.BP_ZombieSpawnerHandler_C.GetSpawnMultiplier
// 0x0018 (0x0018 - 0x0000)
struct BP_ZombieSpawnerHandler_C_GetSpawnMultiplier final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawnerHandler_C_GetSpawnMultiplier) == 0x000008, "Wrong alignment on BP_ZombieSpawnerHandler_C_GetSpawnMultiplier");
static_assert(sizeof(BP_ZombieSpawnerHandler_C_GetSpawnMultiplier) == 0x000018, "Wrong size on BP_ZombieSpawnerHandler_C_GetSpawnMultiplier");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetSpawnMultiplier, ReturnValue) == 0x000000, "Member 'BP_ZombieSpawnerHandler_C_GetSpawnMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetSpawnMultiplier, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'BP_ZombieSpawnerHandler_C_GetSpawnMultiplier::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_GetSpawnMultiplier, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'BP_ZombieSpawnerHandler_C_GetSpawnMultiplier::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawnerHandler.BP_ZombieSpawnerHandler_C.OnBoxBeginOverlap
// 0x0120 (0x0120 - 0x0000)
struct BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap) == 0x000008, "Wrong alignment on BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap");
static_assert(sizeof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap) == 0x000120, "Wrong size on BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap, OverlappedComponent) == 0x000000, "Member 'BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap, OtherActor) == 0x000008, "Member 'BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap, OtherComp) == 0x000010, "Member 'BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap, bFromSweep) == 0x00001C, "Member 'BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap, SweepResult) == 0x000020, "Member 'BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap::SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap, Temp_int_Variable) == 0x000108, "Member 'BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap, K2Node_DynamicCast_AsSurvival_Player) == 0x000110, "Member 'BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_ZombieSpawnerHandler_C_OnBoxBeginOverlap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawnerHandler.BP_ZombieSpawnerHandler_C.OnBoxEndOverlap
// 0x0030 (0x0030 - 0x0000)
struct BP_ZombieSpawnerHandler_C_OnBoxEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawnerHandler_C_OnBoxEndOverlap) == 0x000008, "Wrong alignment on BP_ZombieSpawnerHandler_C_OnBoxEndOverlap");
static_assert(sizeof(BP_ZombieSpawnerHandler_C_OnBoxEndOverlap) == 0x000030, "Wrong size on BP_ZombieSpawnerHandler_C_OnBoxEndOverlap");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxEndOverlap, OverlappedComponent) == 0x000000, "Member 'BP_ZombieSpawnerHandler_C_OnBoxEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxEndOverlap, OtherActor) == 0x000008, "Member 'BP_ZombieSpawnerHandler_C_OnBoxEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxEndOverlap, OtherComp) == 0x000010, "Member 'BP_ZombieSpawnerHandler_C_OnBoxEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxEndOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_ZombieSpawnerHandler_C_OnBoxEndOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxEndOverlap, Temp_int_Variable) == 0x00001C, "Member 'BP_ZombieSpawnerHandler_C_OnBoxEndOverlap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxEndOverlap, K2Node_DynamicCast_AsSurvival_Player) == 0x000020, "Member 'BP_ZombieSpawnerHandler_C_OnBoxEndOverlap::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxEndOverlap, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ZombieSpawnerHandler_C_OnBoxEndOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawnerHandler_C_OnBoxEndOverlap, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ZombieSpawnerHandler_C_OnBoxEndOverlap::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

}

