#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HintButtonCircular

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_HintButtonCircular.W_HintButtonCircular_C
// 0x00F0 (0x0370 - 0x0280)
class UW_HintButtonCircular_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Fill_Anim;                                         // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_Hint;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ButtonBG;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ButtonIcon;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_FillingRing;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Buttun;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Title;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ButtonKeyText;                                     // 0x02C8(0x0018)(Edit, BlueprintVisible)
	class FText                                   ButtonTitleText;                                   // 0x02E0(0x0018)(Edit, BlueprintVisible)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPressed;                                         // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleased;                                        // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMaterialInstanceDynamic*               RingMaterial;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          UseIcon;                                           // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              IconSize;                                          // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           IconSprite;                                        // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnFilled;                                          // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FMargin                                LetterMargin;                                      // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void BndEvt__Button_Hint_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_Hint_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__Button_Hint_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_W_HintButtonCircular(int32 EntryPoint);
	void Filled();
	void OnClicked__DelegateSignature();
	void OnFilled__DelegateSignature();
	void OnPressed__DelegateSignature();
	void OnReleased__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void SequenceEvent__ENTRYPOINTW_HintButtonCircular();
	void StartFilling(double PlaybackSpeed);
	void StopFilling();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_HintButtonCircular_C">();
	}
	static class UW_HintButtonCircular_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_HintButtonCircular_C>();
	}
};
static_assert(alignof(UW_HintButtonCircular_C) == 0x000008, "Wrong alignment on UW_HintButtonCircular_C");
static_assert(sizeof(UW_HintButtonCircular_C) == 0x000370, "Wrong size on UW_HintButtonCircular_C");
static_assert(offsetof(UW_HintButtonCircular_C, UberGraphFrame) == 0x000280, "Member 'UW_HintButtonCircular_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, Fill_Anim) == 0x000288, "Member 'UW_HintButtonCircular_C::Fill_Anim' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, Button_Hint) == 0x000290, "Member 'UW_HintButtonCircular_C::Button_Hint' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, Image_BG) == 0x000298, "Member 'UW_HintButtonCircular_C::Image_BG' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, Image_ButtonBG) == 0x0002A0, "Member 'UW_HintButtonCircular_C::Image_ButtonBG' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, Image_ButtonIcon) == 0x0002A8, "Member 'UW_HintButtonCircular_C::Image_ButtonIcon' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, Image_FillingRing) == 0x0002B0, "Member 'UW_HintButtonCircular_C::Image_FillingRing' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, Text_Buttun) == 0x0002B8, "Member 'UW_HintButtonCircular_C::Text_Buttun' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, Text_Title) == 0x0002C0, "Member 'UW_HintButtonCircular_C::Text_Title' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, ButtonKeyText) == 0x0002C8, "Member 'UW_HintButtonCircular_C::ButtonKeyText' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, ButtonTitleText) == 0x0002E0, "Member 'UW_HintButtonCircular_C::ButtonTitleText' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, OnClicked) == 0x0002F8, "Member 'UW_HintButtonCircular_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, OnPressed) == 0x000308, "Member 'UW_HintButtonCircular_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, OnReleased) == 0x000318, "Member 'UW_HintButtonCircular_C::OnReleased' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, RingMaterial) == 0x000328, "Member 'UW_HintButtonCircular_C::RingMaterial' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, UseIcon) == 0x000330, "Member 'UW_HintButtonCircular_C::UseIcon' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, IconSize) == 0x000338, "Member 'UW_HintButtonCircular_C::IconSize' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, IconSprite) == 0x000348, "Member 'UW_HintButtonCircular_C::IconSprite' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, OnFilled) == 0x000350, "Member 'UW_HintButtonCircular_C::OnFilled' has a wrong offset!");
static_assert(offsetof(UW_HintButtonCircular_C, LetterMargin) == 0x000360, "Member 'UW_HintButtonCircular_C::LetterMargin' has a wrong offset!");

}

