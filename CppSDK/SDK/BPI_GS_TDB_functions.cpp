#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_GS_TDB

#include "Basic.hpp"

#include "BPI_GS_TDB_classes.hpp"
#include "BPI_GS_TDB_parameters.hpp"


namespace SDK
{

// Function BPI_GS_TDB.BPI_GS_TDB_C.GetBunkerSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBunkerSystem_C*                  BunkerSystem                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::GetBunkerSystem(class UBunkerSystem_C** BunkerSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "GetBunkerSystem");

	Params::BPI_GS_TDB_C_GetBunkerSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BunkerSystem != nullptr)
		*BunkerSystem = Parms.BunkerSystem;
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.GetLootZonesByQuests
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UQuest*>                   Quests                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class ABP_QuestItemsSpawnZone_C*>Zones                                                  (Parm, OutParm)

void IBPI_GS_TDB_C::GetLootZonesByQuests(const TArray<class UQuest*>& Quests, TArray<class ABP_QuestItemsSpawnZone_C*>* Zones)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "GetLootZonesByQuests");

	Params::BPI_GS_TDB_C_GetLootZonesByQuests Parms{};

	Parms.Quests = std::move(Quests);

	UObject::ProcessEvent(Func, &Parms);

	if (Zones != nullptr)
		*Zones = std::move(Parms.Zones);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.GetQuestActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ActorClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::GetQuestActor(class FName Tag, class UClass* ActorClass, class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "GetQuestActor");

	Params::BPI_GS_TDB_C_GetQuestActor Parms{};

	Parms.Tag = Tag;
	Parms.ActorClass = ActorClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.GetQuestSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestSystemV3_C*                 QuestSystem                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::GetQuestSystem(class UQuestSystemV3_C** QuestSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "GetQuestSystem");

	Params::BPI_GS_TDB_C_GetQuestSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (QuestSystem != nullptr)
		*QuestSystem = Parms.QuestSystem;
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.GetQuestZone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_QuestItemsSpawnZone_C*        Zone                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::GetQuestZone(class UQuest* Quest, class ABP_QuestItemsSpawnZone_C** Zone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "GetQuestZone");

	Params::BPI_GS_TDB_C_GetQuestZone Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);

	if (Zone != nullptr)
		*Zone = Parms.Zone;
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.GetQuestZoneByJobName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Works                                 JobType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_QuestZone_C*>          Zones                                                  (Parm, OutParm)
// TArray<class ABP_QuestZone_C*>          ProgressZones                                          (Parm, OutParm)

void IBPI_GS_TDB_C::GetQuestZoneByJobName(E_Works JobType, TArray<class ABP_QuestZone_C*>* Zones, TArray<class ABP_QuestZone_C*>* ProgressZones)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "GetQuestZoneByJobName");

	Params::BPI_GS_TDB_C_GetQuestZoneByJobName Parms{};

	Parms.JobType = JobType;

	UObject::ProcessEvent(Func, &Parms);

	if (Zones != nullptr)
		*Zones = std::move(Parms.Zones);

	if (ProgressZones != nullptr)
		*ProgressZones = std::move(Parms.ProgressZones);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.GetTowersZones
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           TowerQuestAsset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_QuestZone_C*>          Zones                                                  (Parm, OutParm)

void IBPI_GS_TDB_C::GetTowersZones(class UQuest* TowerQuestAsset, TArray<class ABP_QuestZone_C*>* Zones)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "GetTowersZones");

	Params::BPI_GS_TDB_C_GetTowersZones Parms{};

	Parms.TowerQuestAsset = TowerQuestAsset;

	UObject::ProcessEvent(Func, &Parms);

	if (Zones != nullptr)
		*Zones = std::move(Parms.Zones);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.InitLootZones
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_QuestItemsSpawnZone_C*        LootZpawnZone                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::InitLootZones(class ABP_QuestItemsSpawnZone_C* LootZpawnZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "InitLootZones");

	Params::BPI_GS_TDB_C_InitLootZones Parms{};

	Parms.LootZpawnZone = LootZpawnZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.InitQuestActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::InitQuestActor(class AActor* ActorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "InitQuestActor");

	Params::BPI_GS_TDB_C_InitQuestActor Parms{};

	Parms.ActorRef = ActorRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.InitQuestZone
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_QuestZone_C*                  QuestZone                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::InitQuestZone(class ABP_QuestZone_C* QuestZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "InitQuestZone");

	Params::BPI_GS_TDB_C_InitQuestZone Parms{};

	Parms.QuestZone = QuestZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.InitTowerZone
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_QuestZone_Towers_C*           Zone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::InitTowerZone(class ABP_QuestZone_Towers_C* Zone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "InitTowerZone");

	Params::BPI_GS_TDB_C_InitTowerZone Parms{};

	Parms.Zone = Zone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.OnEnterBunkerArea
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           BunkerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::OnEnterBunkerArea(const class FString& BunkerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "OnEnterBunkerArea");

	Params::BPI_GS_TDB_C_OnEnterBunkerArea Parms{};

	Parms.BunkerID = std::move(BunkerID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.OnFinishQuestRemotely
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::OnFinishQuestRemotely(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "OnFinishQuestRemotely");

	Params::BPI_GS_TDB_C_OnFinishQuestRemotely Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.OnLeaveBunkerArea
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_GS_TDB_C::OnLeaveBunkerArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "OnLeaveBunkerArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.OnPlayerSpawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::OnPlayerSpawned(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "OnPlayerSpawned");

	Params::BPI_GS_TDB_C_OnPlayerSpawned Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.OnQuestTrigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           QuestTrigger                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::OnQuestTrigger(const class FString& QuestTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "OnQuestTrigger");

	Params::BPI_GS_TDB_C_OnQuestTrigger Parms{};

	Parms.QuestTrigger = std::move(QuestTrigger);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.PlayCS
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_GS_TDB_C::PlayCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "PlayCS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.PlayOM
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_GS_TDB_C::PlayOM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "PlayOM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.PlayOS
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_GS_TDB_C::PlayOS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "PlayOS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.SetShopOpened
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOpened                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_GS_TDB_C::SetShopOpened(bool IsOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "SetShopOpened");

	Params::BPI_GS_TDB_C_SetShopOpened Parms{};

	Parms.IsOpened = IsOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_GS_TDB.BPI_GS_TDB_C.SyncQuests
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_GS_TDB_C::SyncQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_GS_TDB_C", "SyncQuests");

	UObject::ProcessEvent(Func, nullptr);
}

}

