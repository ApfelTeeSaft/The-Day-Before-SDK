#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayerNamePlate

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_PlayerNamePlate.W_PlayerNamePlate_C.ExecuteUbergraph_W_PlayerNamePlate
// 0x0058 (0x0058 - 0x0000)
struct W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_CustomEvent_TintColor;                      // 0x0004(0x0014)()
	class FText                                   K2Node_CustomEvent_InText;                         // 0x0018(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Scale;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate) == 0x000008, "Wrong alignment on W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate");
static_assert(sizeof(W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate) == 0x000058, "Wrong size on W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate");
static_assert(offsetof(W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate, EntryPoint) == 0x000000, "Member 'W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate, K2Node_CustomEvent_TintColor) == 0x000004, "Member 'W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate::K2Node_CustomEvent_TintColor' has a wrong offset!");
static_assert(offsetof(W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate, K2Node_CustomEvent_InText) == 0x000018, "Member 'W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate, CallFunc_PlayAnimation_ReturnValue_1) == 0x000038, "Member 'W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate, K2Node_CustomEvent_Scale) == 0x000040, "Member 'W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate::K2Node_CustomEvent_Scale' has a wrong offset!");
static_assert(offsetof(W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'W_PlayerNamePlate_C_ExecuteUbergraph_W_PlayerNamePlate::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_PlayerNamePlate.W_PlayerNamePlate_C.SetColorAndName
// 0x0030 (0x0030 - 0x0000)
struct W_PlayerNamePlate_C_SetColorAndName final
{
public:
	struct FSlateColor                            TintColor;                                         // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InText;                                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_PlayerNamePlate_C_SetColorAndName) == 0x000008, "Wrong alignment on W_PlayerNamePlate_C_SetColorAndName");
static_assert(sizeof(W_PlayerNamePlate_C_SetColorAndName) == 0x000030, "Wrong size on W_PlayerNamePlate_C_SetColorAndName");
static_assert(offsetof(W_PlayerNamePlate_C_SetColorAndName, TintColor) == 0x000000, "Member 'W_PlayerNamePlate_C_SetColorAndName::TintColor' has a wrong offset!");
static_assert(offsetof(W_PlayerNamePlate_C_SetColorAndName, InText) == 0x000018, "Member 'W_PlayerNamePlate_C_SetColorAndName::InText' has a wrong offset!");

// Function W_PlayerNamePlate.W_PlayerNamePlate_C.SetScale
// 0x0008 (0x0008 - 0x0000)
struct W_PlayerNamePlate_C_SetScale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerNamePlate_C_SetScale) == 0x000008, "Wrong alignment on W_PlayerNamePlate_C_SetScale");
static_assert(sizeof(W_PlayerNamePlate_C_SetScale) == 0x000008, "Wrong size on W_PlayerNamePlate_C_SetScale");
static_assert(offsetof(W_PlayerNamePlate_C_SetScale, Scale) == 0x000000, "Member 'W_PlayerNamePlate_C_SetScale::Scale' has a wrong offset!");

}

