#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Zombie

#include "Basic.hpp"

#include "Zombie_classes.hpp"
#include "Zombie_parameters.hpp"


namespace SDK
{

// Function Zombie.Zombie_C.Activate Dismember Emitter
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDismembermentPart                      DismembermentPart                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::Activate_Dismember_Emitter(EDismembermentPart DismembermentPart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Activate Dismember Emitter");

	Params::Zombie_C_Activate_Dismember_Emitter Parms{};

	Parms.DismembermentPart = DismembermentPart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.AddVertexBulletHole
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitInfo                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZombie_C::AddVertexBulletHole(struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "AddVertexBulletHole");

	Params::Zombie_C_AddVertexBulletHole Parms{};

	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);

	HitInfo = std::move(Parms.HitInfo);
}


// Function Zombie.Zombie_C.Adjust Server Movement Tickrate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    High_tickrate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::Adjust_Server_Movement_Tickrate(bool High_tickrate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Adjust Server Movement Tickrate");

	Params::Zombie_C_Adjust_Server_Movement_Tickrate Parms{};

	Parms.High_tickrate = High_tickrate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.AdjustNetUpdateFrequency
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Net_Update_Frequency                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::AdjustNetUpdateFrequency(float Net_Update_Frequency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "AdjustNetUpdateFrequency");

	Params::Zombie_C_AdjustNetUpdateFrequency Parms{};

	Parms.Net_Update_Frequency = Net_Update_Frequency;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.AfterDeath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::AfterDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "AfterDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.AIInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Door_C*                       Door                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UArrowComponent*                  Arrow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AZombie_C::AIInteract(class ABP_Door_C* Door, class UArrowComponent* Arrow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "AIInteract");

	Params::Zombie_C_AIInteract Parms{};

	Parms.Door = Door;
	Parms.Arrow = Arrow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.AnimTypeConfiguration
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::AnimTypeConfiguration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "AnimTypeConfiguration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ApplyWoundsAfterDismemberment
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVertexDetectAndPaintFundementalsStruct>WoundsArray                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AZombie_C::ApplyWoundsAfterDismemberment(class UPrimitiveComponent* MeshComponent, TArray<struct FVertexDetectAndPaintFundementalsStruct>& WoundsArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ApplyWoundsAfterDismemberment");

	Params::Zombie_C_ApplyWoundsAfterDismemberment Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.WoundsArray = std::move(WoundsArray);

	UObject::ProcessEvent(Func, &Parms);

	WoundsArray = std::move(Parms.WoundsArray);
}


// Function Zombie.Zombie_C.ArmoredZombieParams
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::ArmoredZombieParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ArmoredZombieParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.AttachLootPoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           LootPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::AttachLootPoint(class AActor* LootPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "AttachLootPoint");

	Params::Zombie_C_AttachLootPoint Parms{};

	Parms.LootPoint = LootPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.AttackInProgress
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::AttackInProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "AttackInProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.AvoidFire
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::AvoidFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "AvoidFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.BeforePlayDamageMontage
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::BeforePlayDamageMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "BeforePlayDamageMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.BeginPlaySetup
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::BeginPlaySetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "BeginPlaySetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.BloodNiagaraDeactivated
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::BloodNiagaraDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "BloodNiagaraDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZombie_C::BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZombie_C::BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");

	Params::Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");

	Params::Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZombie_C::BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");

	Params::Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.CalculateDeathImpulse
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// double                                  LastDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DiedByCar                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BodyImpulse                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AZombie_C::CalculateDeathImpulse(class AController*& InstigatedBy, double LastDamage, bool DiedByCar, const struct FVector& BodyImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CalculateDeathImpulse");

	Params::Zombie_C_CalculateDeathImpulse Parms{};

	Parms.InstigatedBy = InstigatedBy;
	Parms.LastDamage = LastDamage;
	Parms.DiedByCar = DiedByCar;
	Parms.BodyImpulse = std::move(BodyImpulse);

	UObject::ProcessEvent(Func, &Parms);

	InstigatedBy = Parms.InstigatedBy;

	return Parms.ReturnValue;
}


// Function Zombie.Zombie_C.CarHitParticlesAndSound
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactNormal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::CarHitParticlesAndSound(const struct FVector& HitLocation, const struct FVector& ImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CarHitParticlesAndSound");

	Params::Zombie_C_CarHitParticlesAndSound Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.ImpactNormal = std::move(ImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ChangeIdleSound
// (BlueprintCallable, BlueprintEvent)

void AZombie_C::ChangeIdleSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ChangeIdleSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ChangeMeshByDismembermentPart
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDismembermentPart                      DismembermentPart                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMesh*                    DismembermentMesh                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ChangeMeshByDismembermentPart(EDismembermentPart DismembermentPart, class USkeletalMesh* DismembermentMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ChangeMeshByDismembermentPart");

	Params::Zombie_C_ChangeMeshByDismembermentPart Parms{};

	Parms.DismembermentPart = DismembermentPart;
	Parms.DismembermentMesh = DismembermentMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.CheckDIsmemberDistance
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ExplosionLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanBeDismembered                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::CheckDIsmemberDistance(const struct FVector& ExplosionLocation, bool* CanBeDismembered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CheckDIsmemberDistance");

	Params::Zombie_C_CheckDIsmemberDistance Parms{};

	Parms.ExplosionLocation = std::move(ExplosionLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (CanBeDismembered != nullptr)
		*CanBeDismembered = Parms.CanBeDismembered;
}


// Function Zombie.Zombie_C.CheckDrown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::CheckDrown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CheckDrown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.CheckForHalfHPStunAnimation
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AZombie_C::CheckForHalfHPStunAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CheckForHalfHPStunAnimation");

	Params::Zombie_C_CheckForHalfHPStunAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Zombie.Zombie_C.CheckIsUnderFloor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::CheckIsUnderFloor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CheckIsUnderFloor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.CheckLinkedQuests
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AZombie_C::CheckLinkedQuests(class UQuest*& Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CheckLinkedQuests");

	Params::Zombie_C_CheckLinkedQuests Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);

	Quest = Parms.Quest;

	return Parms.ReturnValue;
}


// Function Zombie.Zombie_C.CheckMeshStopped
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  VelocityLimit                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MeshStopped                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::CheckMeshStopped(double VelocityLimit, bool* MeshStopped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CheckMeshStopped");

	Params::Zombie_C_CheckMeshStopped Parms{};

	Parms.VelocityLimit = VelocityLimit;

	UObject::ProcessEvent(Func, &Parms);

	if (MeshStopped != nullptr)
		*MeshStopped = Parms.MeshStopped;
}


// Function Zombie.Zombie_C.CheckPlayerIsNear
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::CheckPlayerIsNear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CheckPlayerIsNear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.CheckRepairInvisibleZombie
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::CheckRepairInvisibleZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CheckRepairInvisibleZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ClearAllTimers
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::ClearAllTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ClearAllTimers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ClearAttackTimer
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::ClearAttackTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ClearAttackTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ClownZombieParams
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::ClownZombieParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ClownZombieParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ContinueMovement__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AZombie_C::ContinueMovement__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ContinueMovement__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.CorrectDismembermentPart
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDismembermentPart                      DismemberPart                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDismembermentPart                      DismembermentPart                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::CorrectDismembermentPart(EDismembermentPart DismemberPart, EDismembermentPart* DismembermentPart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CorrectDismembermentPart");

	Params::Zombie_C_CorrectDismembermentPart Parms{};

	Parms.DismemberPart = DismemberPart;

	UObject::ProcessEvent(Func, &Parms);

	if (DismembermentPart != nullptr)
		*DismembermentPart = Parms.DismembermentPart;
}


// Function Zombie.Zombie_C.CouldBeDismembered
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDismembermentPart                      DismembermentPart                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Yes                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::CouldBeDismembered(EDismembermentPart DismembermentPart, bool* Yes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "CouldBeDismembered");

	Params::Zombie_C_CouldBeDismembered Parms{};

	Parms.DismembermentPart = DismembermentPart;

	UObject::ProcessEvent(Func, &Parms);

	if (Yes != nullptr)
		*Yes = Parms.Yes;
}


// Function Zombie.Zombie_C.DamageAnimReset
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::DamageAnimReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DamageAnimReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.DayZombieParams
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::DayZombieParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DayZombieParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.DealDamageToActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZombie_C::DealDamageToActor(struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DealDamageToActor");

	Params::Zombie_C_DealDamageToActor Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);
}


// Function Zombie.Zombie_C.Decals Hit Checker
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::Decals_Hit_Checker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Decals Hit Checker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.DecalsLimitter
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::DecalsLimitter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DecalsLimitter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.DecreaseHelmetDurability
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::DecreaseHelmetDurability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DecreaseHelmetDurability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.DefineAdditiveDamageMontage
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MontageType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::DefineAdditiveDamageMontage(class FName BoneName, const struct FVector& HitLocation, int32* MontageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DefineAdditiveDamageMontage");

	Params::Zombie_C_DefineAdditiveDamageMontage Parms{};

	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (MontageType != nullptr)
		*MontageType = Parms.MontageType;
}


// Function Zombie.Zombie_C.DefineAngleForMontage
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EAngleMontage                           AngleMontage                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::DefineAngleForMontage(double HitAngle, EAngleMontage* AngleMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DefineAngleForMontage");

	Params::Zombie_C_DefineAngleForMontage Parms{};

	Parms.HitAngle = HitAngle;

	UObject::ProcessEvent(Func, &Parms);

	if (AngleMontage != nullptr)
		*AngleMontage = Parms.AngleMontage;
}


// Function Zombie.Zombie_C.DefineDismembermentbyBone
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDismembermentPart                      DismembermentPart                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PartFounded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::DefineDismembermentbyBone(class FName BoneName, EDismembermentPart* DismembermentPart, bool* PartFounded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DefineDismembermentbyBone");

	Params::Zombie_C_DefineDismembermentbyBone Parms{};

	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (DismembermentPart != nullptr)
		*DismembermentPart = Parms.DismembermentPart;

	if (PartFounded != nullptr)
		*PartFounded = Parms.PartFounded;
}


// Function Zombie.Zombie_C.DefineDismemberPartsForExplosion
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ExplosionLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     BonesToDismember                                       (Parm, OutParm)

void AZombie_C::DefineDismemberPartsForExplosion(const struct FVector& ExplosionLocation, TArray<class FName>* BonesToDismember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DefineDismemberPartsForExplosion");

	Params::Zombie_C_DefineDismemberPartsForExplosion Parms{};

	Parms.ExplosionLocation = std::move(ExplosionLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (BonesToDismember != nullptr)
		*BonesToDismember = std::move(Parms.BonesToDismember);
}


// Function Zombie.Zombie_C.DelayedDisableSMTick
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::DelayedDisableSMTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DelayedDisableSMTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.DetectAllLimbsHit
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::DetectAllLimbsHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DetectAllLimbsHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.DiedByMolotov
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::DiedByMolotov()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DiedByMolotov");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.DisableDismemberedBonesCollision
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDismembermentState                     DismembermentState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::DisableDismemberedBonesCollision(EDismembermentState DismembermentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "DisableDismemberedBonesCollision");

	Params::Zombie_C_DisableDismemberedBonesCollision Parms{};

	Parms.DismembermentState = DismembermentState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.EndDoorAttack
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::EndDoorAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "EndDoorAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ExecuteUbergraph_Zombie
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ExecuteUbergraph_Zombie(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ExecuteUbergraph_Zombie");

	Params::Zombie_C_ExecuteUbergraph_Zombie Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ExplosionDismemberment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ExplosionLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ExplosionDismemberment(const struct FVector& ExplosionLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ExplosionDismemberment");

	Params::Zombie_C_ExplosionDismemberment Parms{};

	Parms.ExplosionLocation = std::move(ExplosionLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.FilterQuests
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSet<class UQuest*>                     LinkedQuestsSet                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EZombieType                             ZombieType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::FilterQuests(TSet<class UQuest*>& LinkedQuestsSet, EZombieType ZombieType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "FilterQuests");

	Params::Zombie_C_FilterQuests Parms{};

	Parms.LinkedQuestsSet = std::move(LinkedQuestsSet);
	Parms.ZombieType = ZombieType;

	UObject::ProcessEvent(Func, &Parms);

	LinkedQuestsSet = std::move(Parms.LinkedQuestsSet);
}


// Function Zombie.Zombie_C.GenerateLootFromTables
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ItemsToSpawn                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FDefaultItemInfo>         OldContainerItems                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FDefaultItemInfo>         NewContainerItems                                      (Parm, OutParm, ContainsInstancedReference)

void AZombie_C::GenerateLootFromTables(const TArray<class FName>& ItemsToSpawn, TArray<struct FDefaultItemInfo>& OldContainerItems, TArray<struct FDefaultItemInfo>* NewContainerItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GenerateLootFromTables");

	Params::Zombie_C_GenerateLootFromTables Parms{};

	Parms.ItemsToSpawn = std::move(ItemsToSpawn);
	Parms.OldContainerItems = std::move(OldContainerItems);

	UObject::ProcessEvent(Func, &Parms);

	OldContainerItems = std::move(Parms.OldContainerItems);

	if (NewContainerItems != nullptr)
		*NewContainerItems = std::move(Parms.NewContainerItems);
}


// Function Zombie.Zombie_C.GenerateRandomLootOfType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELootTypes                              Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESlotRarity                             LootTier                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Canstack                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxCountStack                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATDB_GameMode_C*                  AsTDB_Game_Mode                                        (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void AZombie_C::GenerateRandomLootOfType(ELootTypes Type, ESlotRarity LootTier, class FName* ID, bool* Canstack, int32* MaxCountStack, class ATDB_GameMode_C** AsTDB_Game_Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GenerateRandomLootOfType");

	Params::Zombie_C_GenerateRandomLootOfType Parms{};

	Parms.Type = Type;
	Parms.LootTier = LootTier;

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;

	if (Canstack != nullptr)
		*Canstack = Parms.Canstack;

	if (MaxCountStack != nullptr)
		*MaxCountStack = Parms.MaxCountStack;

	if (AsTDB_Game_Mode != nullptr)
		*AsTDB_Game_Mode = Parms.AsTDB_Game_Mode;
}


// Function Zombie.Zombie_C.Get Agressive Montage Name
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SectionName                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AZombie_C::Get_Agressive_Montage_Name(double Angle, class FString* SectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Get Agressive Montage Name");

	Params::Zombie_C_Get_Agressive_Montage_Name Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);

	if (SectionName != nullptr)
		*SectionName = std::move(Parms.SectionName);
}


// Function Zombie.Zombie_C.Get Degrees to Target
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DesiredDegrees                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::Get_Degrees_to_Target(const struct FVector& TargetLocation, double* DesiredDegrees)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Get Degrees to Target");

	Params::Zombie_C_Get_Degrees_to_Target Parms{};

	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (DesiredDegrees != nullptr)
		*DesiredDegrees = Parms.DesiredDegrees;
}


// Function Zombie.Zombie_C.GetAllDecalHitBones
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::GetAllDecalHitBones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetAllDecalHitBones");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.GetDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AZombie_C::GetDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetDead");

	Params::Zombie_C_GetDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Zombie.Zombie_C.GetDeadBody
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AZombieDeadBody_C*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AZombieDeadBody_C* AZombie_C::GetDeadBody()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetDeadBody");

	Params::Zombie_C_GetDeadBody Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Zombie.Zombie_C.GetDestinationToMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UNavigationPath*                  Path                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DestinationToMove                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::GetDestinationToMove(class UNavigationPath* Path, struct FVector* DestinationToMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetDestinationToMove");

	Params::Zombie_C_GetDestinationToMove Parms{};

	Parms.Path = Path;

	UObject::ProcessEvent(Func, &Parms);

	if (DestinationToMove != nullptr)
		*DestinationToMove = std::move(Parms.DestinationToMove);
}


// Function Zombie.Zombie_C.GetDIsmemberedLimbBones
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     DismemberedBones                                       (Parm, OutParm)

void AZombie_C::GetDIsmemberedLimbBones(TArray<class FName>* DismemberedBones)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetDIsmemberedLimbBones");

	Params::Zombie_C_GetDIsmemberedLimbBones Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DismemberedBones != nullptr)
		*DismemberedBones = std::move(Parms.DismemberedBones);
}


// Function Zombie.Zombie_C.GetDismembermentMesh
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDismembermentPart                      DismembermentPart                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class USkeletalMesh>     DismembermentMesh                                      (Parm, OutParm, HasGetValueTypeHash)

void AZombie_C::GetDismembermentMesh(EDismembermentPart DismembermentPart, TSoftObjectPtr<class USkeletalMesh>* DismembermentMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetDismembermentMesh");

	Params::Zombie_C_GetDismembermentMesh Parms{};

	Parms.DismembermentPart = DismembermentPart;

	UObject::ProcessEvent(Func, &Parms);

	if (DismembermentMesh != nullptr)
		*DismembermentMesh = Parms.DismembermentMesh;
}


// Function Zombie.Zombie_C.GetHeadDismembermentMesh
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class USkeletalMesh>     Param_Mesh                                             (Parm, OutParm, HasGetValueTypeHash)

void AZombie_C::GetHeadDismembermentMesh(TSoftObjectPtr<class USkeletalMesh>* Param_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetHeadDismembermentMesh");

	Params::Zombie_C_GetHeadDismembermentMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Mesh != nullptr)
		*Param_Mesh = Parms.Param_Mesh;
}


// Function Zombie.Zombie_C.GetHitAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  HitAngle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::GetHitAngle(class AController* InstigatedBy, double* HitAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetHitAngle");

	Params::Zombie_C_GetHitAngle Parms{};

	Parms.InstigatedBy = InstigatedBy;

	UObject::ProcessEvent(Func, &Parms);

	if (HitAngle != nullptr)
		*HitAngle = Parms.HitAngle;
}


// Function Zombie.Zombie_C.GetItemNamesForLoot
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class FName> AZombie_C::GetItemNamesForLoot(class AController*& InstigatedBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetItemNamesForLoot");

	Params::Zombie_C_GetItemNamesForLoot Parms{};

	Parms.InstigatedBy = InstigatedBy;

	UObject::ProcessEvent(Func, &Parms);

	InstigatedBy = Parms.InstigatedBy;

	return Parms.ReturnValue;
}


// Function Zombie.Zombie_C.GetLowerBodyDismembermentMesh
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class USkeletalMesh>     Param_Mesh                                             (Parm, OutParm, HasGetValueTypeHash)

void AZombie_C::GetLowerBodyDismembermentMesh(TSoftObjectPtr<class USkeletalMesh>* Param_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetLowerBodyDismembermentMesh");

	Params::Zombie_C_GetLowerBodyDismembermentMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Mesh != nullptr)
		*Param_Mesh = Parms.Param_Mesh;
}


// Function Zombie.Zombie_C.GetNavData
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::GetNavData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetNavData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.GetPseudoSurfaceTypeByBone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        ResultSurface                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::GetPseudoSurfaceTypeByBone(class FName BoneName, EPhysicalSurface* ResultSurface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetPseudoSurfaceTypeByBone");

	Params::Zombie_C_GetPseudoSurfaceTypeByBone Parms{};

	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultSurface != nullptr)
		*ResultSurface = Parms.ResultSurface;
}


// Function Zombie.Zombie_C.GetUpperBodyDismembermentMesh
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class USkeletalMesh>     Param_Mesh                                             (Parm, OutParm, HasGetValueTypeHash)

void AZombie_C::GetUpperBodyDismembermentMesh(TSoftObjectPtr<class USkeletalMesh>* Param_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetUpperBodyDismembermentMesh");

	Params::Zombie_C_GetUpperBodyDismembermentMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Mesh != nullptr)
		*Param_Mesh = Parms.Param_Mesh;
}


// Function Zombie.Zombie_C.GetWoundedMeshByBone
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVertexDetectAndPaintFundementalsStructWoundToArray                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class USkeletalMeshComponent*           WoundedMesh                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AZombie_C::GetWoundedMeshByBone(class FName BoneName, const struct FVertexDetectAndPaintFundementalsStruct& WoundToArray, class USkeletalMeshComponent** WoundedMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetWoundedMeshByBone");

	Params::Zombie_C_GetWoundedMeshByBone Parms{};

	Parms.BoneName = BoneName;
	Parms.WoundToArray = std::move(WoundToArray);

	UObject::ProcessEvent(Func, &Parms);

	if (WoundedMesh != nullptr)
		*WoundedMesh = Parms.WoundedMesh;
}


// Function Zombie.Zombie_C.GetXP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  XP                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::GetXP(double* XP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "GetXP");

	Params::Zombie_C_GetXP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (XP != nullptr)
		*XP = Parms.XP;
}


// Function Zombie.Zombie_C.HeadDamageDismemberment
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableHeadDismemberment                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class USkeletalMesh>     Param_Mesh                                             (Parm, OutParm, HasGetValueTypeHash)

void AZombie_C::HeadDamageDismemberment(bool EnableHeadDismemberment, TSoftObjectPtr<class USkeletalMesh>* Param_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "HeadDamageDismemberment");

	Params::Zombie_C_HeadDamageDismemberment Parms{};

	Parms.EnableHeadDismemberment = EnableHeadDismemberment;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Mesh != nullptr)
		*Param_Mesh = Parms.Param_Mesh;
}


// Function Zombie.Zombie_C.HeadDamageHandler
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstagatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_Weapon_Type                        Param_WeaponType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::HeadDamageHandler(class AActor*& DamageCauser, double HitAngle, const struct FVector& HitLocation, class FName BoneName, class AController* InstagatedBy, struct FHitResult& HitResult, double Damage, EBPE_Weapon_Type Param_WeaponType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "HeadDamageHandler");

	Params::Zombie_C_HeadDamageHandler Parms{};

	Parms.DamageCauser = DamageCauser;
	Parms.HitAngle = HitAngle;
	Parms.HitLocation = std::move(HitLocation);
	Parms.BoneName = BoneName;
	Parms.InstagatedBy = InstagatedBy;
	Parms.HitResult = std::move(HitResult);
	Parms.Damage = Damage;
	Parms.Param_WeaponType = Param_WeaponType;

	UObject::ProcessEvent(Func, &Parms);

	DamageCauser = Parms.DamageCauser;
	HitResult = std::move(Parms.HitResult);
}


// Function Zombie.Zombie_C.HideZombie
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::HideZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "HideZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.HitRegistered__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Door                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::HitRegistered__DelegateSignature(bool Door)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "HitRegistered__DelegateSignature");

	Params::Zombie_C_HitRegistered__DelegateSignature Parms{};

	Parms.Door = Door;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.Initialize
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_MeshType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EZombieType                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EZombieAnimType                         AnimType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ZombieManagerIndex                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AZombie_C::Initialize(int32 Param_MeshType, EZombieType Type, EZombieAnimType AnimType, int32 Param_ZombieManagerIndex, const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Initialize");

	Params::Zombie_C_Initialize Parms{};

	Parms.Param_MeshType = Param_MeshType;
	Parms.Type = Type;
	Parms.AnimType = AnimType;
	Parms.Param_ZombieManagerIndex = Param_ZombieManagerIndex;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.InitializeOnBeginPlayClient
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::InitializeOnBeginPlayClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "InitializeOnBeginPlayClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.InitializeZombie
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_MeshType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EZombieType                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EZombieAnimType                         AnimType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ZombieManagerIndex                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AZombie_C::InitializeZombie(int32 Param_MeshType, EZombieType Type, EZombieAnimType AnimType, int32 Param_ZombieManagerIndex, const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "InitializeZombie");

	Params::Zombie_C_InitializeZombie Parms{};

	Parms.Param_MeshType = Param_MeshType;
	Parms.Type = Type;
	Parms.AnimType = AnimType;
	Parms.Param_ZombieManagerIndex = Param_ZombieManagerIndex;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.InitializeZombie_RPC
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_MeshType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EZombieType                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EZombieAnimType                         AnimType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ZombieManagerIndex                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TSet<class UQuest*>                     Quests                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// class ABP_Door_C*                       Param_ConnectedDoor                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// TArray<class ATargetPoint*>             PatrollingPath                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Param_bIsCityZombie                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::InitializeZombie_RPC(int32 Param_MeshType, EZombieType Type, EZombieAnimType AnimType, int32 Param_ZombieManagerIndex, const struct FVector& Location, const struct FRotator& Rotation, const TSet<class UQuest*>& Quests, const class ABP_Door_C*& Param_ConnectedDoor, const TArray<class ATargetPoint*>& PatrollingPath, bool Param_bIsCityZombie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "InitializeZombie_RPC");

	Params::Zombie_C_InitializeZombie_RPC Parms{};

	Parms.Param_MeshType = Param_MeshType;
	Parms.Type = Type;
	Parms.AnimType = AnimType;
	Parms.Param_ZombieManagerIndex = Param_ZombieManagerIndex;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.Quests = std::move(Quests);
	Parms.Param_ConnectedDoor = Param_ConnectedDoor;
	Parms.PatrollingPath = std::move(PatrollingPath);
	Parms.Param_bIsCityZombie = Param_bIsCityZombie;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.InitializeZombieController
// (BlueprintCallable, BlueprintEvent)

void AZombie_C::InitializeZombieController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "InitializeZombieController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.IsBandit?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsBandit_                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::IsBandit_(bool* Param_IsBandit_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "IsBandit?");

	Params::Zombie_C_IsBandit_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsBandit_ != nullptr)
		*Param_IsBandit_ = Parms.Param_IsBandit_;
}


// Function Zombie.Zombie_C.IsDead?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsDead_                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::IsDead_(bool* Param_IsDead_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "IsDead?");

	Params::Zombie_C_IsDead_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsDead_ != nullptr)
		*Param_IsDead_ = Parms.Param_IsDead_;
}


// Function Zombie.Zombie_C.IsPlayingAttackMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlaying_                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::IsPlayingAttackMontage(bool* IsPlaying_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "IsPlayingAttackMontage");

	Params::Zombie_C_IsPlayingAttackMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaying_ != nullptr)
		*IsPlaying_ = Parms.IsPlaying_;
}


// Function Zombie.Zombie_C.IsSpecialZombie
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsSpecial                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::IsSpecialZombie(bool* IsSpecial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "IsSpecialZombie");

	Params::Zombie_C_IsSpecialZombie Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSpecial != nullptr)
		*IsSpecial = Parms.IsSpecial;
}


// Function Zombie.Zombie_C.IsZombie?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsZombie_                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Zombie                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::IsZombie_(bool* Param_IsZombie_, class APawn** Zombie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "IsZombie?");

	Params::Zombie_C_IsZombie_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsZombie_ != nullptr)
		*Param_IsZombie_ = Parms.Param_IsZombie_;

	if (Zombie != nullptr)
		*Zombie = Parms.Zombie;
}


// Function Zombie.Zombie_C.IsZombie?!
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsZombie_                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::IsZombie__(bool* IsZombie_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "IsZombie?!");

	Params::Zombie_C_IsZombie__ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsZombie_ != nullptr)
		*IsZombie_ = Parms.IsZombie_;
}


// Function Zombie.Zombie_C.KillBuggedZombie
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::KillBuggedZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "KillBuggedZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.KillByZombieManager
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      InstigatedBy                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::KillByZombieManager(const class AController* InstigatedBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "KillByZombieManager");

	Params::Zombie_C_KillByZombieManager Parms{};

	Parms.InstigatedBy = InstigatedBy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.KillZombie
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::KillZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "KillZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.LoadSoundsFunction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::LoadSoundsFunction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "LoadSoundsFunction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.MakeBodyBleeding
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::MakeBodyBleeding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MakeBodyBleeding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.MakeNoiseOnScream
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::MakeNoiseOnScream()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MakeNoiseOnScream");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.MoveAfterDamage__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AZombie_C::MoveAfterDamage__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MoveAfterDamage__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.Multicast AttachLootPoint
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           LootPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::Multicast_AttachLootPoint(class AActor* LootPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Multicast AttachLootPoint");

	Params::Zombie_C_Multicast_AttachLootPoint Parms{};

	Parms.LootPoint = LootPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.Multicast CarHitEffects
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactNormal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::Multicast_CarHitEffects(const struct FVector& HitLocation, const struct FVector& ImpactNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Multicast CarHitEffects");

	Params::Zombie_C_Multicast_CarHitEffects Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.ImpactNormal = std::move(ImpactNormal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.Multicast ClearSoundsOnDrown
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::Multicast_ClearSoundsOnDrown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Multicast ClearSoundsOnDrown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.Multicast RegChaseSound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::Multicast_RegChaseSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Multicast RegChaseSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.Multicast ReturnLaggedZombie
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::Multicast_ReturnLaggedZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Multicast ReturnLaggedZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.Multicast SetMovementSettings
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// Survival::EMovementType                 CPPMovementType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  SprintMaxSpeed                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  SprintAcceleration                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::Multicast_SetMovementSettings(Survival::EMovementType CPPMovementType, double SprintMaxSpeed, double SprintAcceleration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Multicast SetMovementSettings");

	Params::Zombie_C_Multicast_SetMovementSettings Parms{};

	Parms.CPPMovementType = CPPMovementType;
	Parms.SprintMaxSpeed = SprintMaxSpeed;
	Parms.SprintAcceleration = SprintAcceleration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.Multicast Setup sounds
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::Multicast_Setup_sounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Multicast Setup sounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.MulticastAddVertexBulletHole
// (Net, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZombie_C::MulticastAddVertexBulletHole(const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastAddVertexBulletHole");

	Params::Zombie_C_MulticastAddVertexBulletHole Parms{};

	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.MulticastAfterDeath
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::MulticastAfterDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastAfterDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.MulticastDismemberment
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// EDismembermentPart                      DismembermentPart                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_Weapon_Type                        Param_WeaponType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_FullHeadDismemberment                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DoubleDismemberment                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::MulticastDismemberment(const struct FHitResult& HitInfo, EDismembermentPart DismembermentPart, EBPE_Weapon_Type Param_WeaponType, bool Param_FullHeadDismemberment, bool DoubleDismemberment, double Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastDismemberment");

	Params::Zombie_C_MulticastDismemberment Parms{};

	Parms.HitInfo = std::move(HitInfo);
	Parms.DismembermentPart = DismembermentPart;
	Parms.Param_WeaponType = Param_WeaponType;
	Parms.Param_FullHeadDismemberment = Param_FullHeadDismemberment;
	Parms.DoubleDismemberment = DoubleDismemberment;
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.MulticastFullDismemberment
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_LimbImpulse                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::MulticastFullDismemberment(const struct FVector& Param_LimbImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastFullDismemberment");

	Params::Zombie_C_MulticastFullDismemberment Parms{};

	Parms.Param_LimbImpulse = std::move(Param_LimbImpulse);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.MulticastMuteZombie
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::MulticastMuteZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastMuteZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.MulticastPlayAdditiveDamage
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MontageType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::MulticastPlayAdditiveDamage(int32 MontageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastPlayAdditiveDamage");

	Params::Zombie_C_MulticastPlayAdditiveDamage Parms{};

	Parms.MontageType = MontageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.MulticastPlayAgressiveMontage
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UAnimMontage>      AgressiveMontageToPlay                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// double                                  Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::MulticastPlayAgressiveMontage(const TSoftObjectPtr<class UAnimMontage>& AgressiveMontageToPlay, double Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastPlayAgressiveMontage");

	Params::Zombie_C_MulticastPlayAgressiveMontage Parms{};

	Parms.AgressiveMontageToPlay = AgressiveMontageToPlay;
	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.MulticastPlayDamagedMontage
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AttackAngle                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_OneShotSWATAnimation                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HitByKnife                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::MulticastPlayDamagedMontage(double AttackAngle, bool Param_OneShotSWATAnimation, bool HitByKnife)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastPlayDamagedMontage");

	Params::Zombie_C_MulticastPlayDamagedMontage Parms{};

	Parms.AttackAngle = AttackAngle;
	Parms.Param_OneShotSWATAnimation = Param_OneShotSWATAnimation;
	Parms.HitByKnife = HitByKnife;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.MulticastPlayHitSound
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::MulticastPlayHitSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastPlayHitSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.MulticastPlayReadyScreamMontage
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::MulticastPlayReadyScreamMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastPlayReadyScreamMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.MulticastStartChasingSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::MulticastStartChasingSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastStartChasingSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.MulticastStopChasingSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::MulticastStopChasingSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastStopChasingSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.MulticastZombieDeath
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DeathImpulse                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DiedByGrenade                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DiedByCar                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    KilledInHead                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DeadByTimer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::MulticastZombieDeath(const struct FVector& HitLocation, const struct FVector& DeathImpulse, class FName BoneName, bool DiedByGrenade, bool DiedByCar, bool KilledInHead, bool DeadByTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "MulticastZombieDeath");

	Params::Zombie_C_MulticastZombieDeath Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.DeathImpulse = std::move(DeathImpulse);
	Parms.BoneName = BoneName;
	Parms.DiedByGrenade = DiedByGrenade;
	Parms.DiedByCar = DiedByCar;
	Parms.KilledInHead = KilledInHead;
	Parms.DeadByTimer = DeadByTimer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.NightZombieParams
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::NightZombieParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "NightZombieParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.On Completed Damage Montage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::On_Completed_Damage_Montage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "On Completed Damage Montage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.On Point Damage
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShotFromDirection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZombie_C::On_Point_Damage(double Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "On Point Damage");

	Params::Zombie_C_On_Point_Damage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlendOut_24581C954244391560E0DD9333B07FE6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlendOut_24581C954244391560E0DD9333B07FE6(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlendOut_24581C954244391560E0DD9333B07FE6");

	Params::Zombie_C_OnBlendOut_24581C954244391560E0DD9333B07FE6 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0");

	Params::Zombie_C_OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08");

	Params::Zombie_C_OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlendOut_519674FD4362099F2E3B8182606E4D28
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlendOut_519674FD4362099F2E3B8182606E4D28(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlendOut_519674FD4362099F2E3B8182606E4D28");

	Params::Zombie_C_OnBlendOut_519674FD4362099F2E3B8182606E4D28 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlendOut_7A74DE324CF2891674024C94AE2E3813
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlendOut_7A74DE324CF2891674024C94AE2E3813(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlendOut_7A74DE324CF2891674024C94AE2E3813");

	Params::Zombie_C_OnBlendOut_7A74DE324CF2891674024C94AE2E3813 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD");

	Params::Zombie_C_OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A");

	Params::Zombie_C_OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlendOut_C114BC7346807B7E596B22B90E553AB9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlendOut_C114BC7346807B7E596B22B90E553AB9(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlendOut_C114BC7346807B7E596B22B90E553AB9");

	Params::Zombie_C_OnBlendOut_C114BC7346807B7E596B22B90E553AB9 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlendOut_D46B79E94C7A53608075F692FA4836E1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlendOut_D46B79E94C7A53608075F692FA4836E1(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlendOut_D46B79E94C7A53608075F692FA4836E1");

	Params::Zombie_C_OnBlendOut_D46B79E94C7A53608075F692FA4836E1 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C");

	Params::Zombie_C_OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnBlockDoor
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLocked                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnBlockDoor(bool bLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnBlockDoor");

	Params::Zombie_C_OnBlockDoor Parms{};

	Parms.bLocked = bLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCarShotHear__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SenseSourceActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCarShotHear__DelegateSignature(class AActor* SenseSourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCarShotHear__DelegateSignature");

	Params::Zombie_C_OnCarShotHear__DelegateSignature Parms{};

	Parms.SenseSourceActor = SenseSourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnChangeAIState__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AZombie_C*                        Zombie                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_ZombieAIState                         FromState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ZombieAIState                         ToState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnChangeAIState__DelegateSignature(class AZombie_C* Zombie, E_ZombieAIState FromState, E_ZombieAIState ToState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnChangeAIState__DelegateSignature");

	Params::Zombie_C_OnChangeAIState__DelegateSignature Parms{};

	Parms.Zombie = Zombie;
	Parms.FromState = FromState;
	Parms.ToState = ToState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCompleted_24581C954244391560E0DD9333B07FE6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCompleted_24581C954244391560E0DD9333B07FE6(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCompleted_24581C954244391560E0DD9333B07FE6");

	Params::Zombie_C_OnCompleted_24581C954244391560E0DD9333B07FE6 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0");

	Params::Zombie_C_OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08");

	Params::Zombie_C_OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCompleted_519674FD4362099F2E3B8182606E4D28
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCompleted_519674FD4362099F2E3B8182606E4D28(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCompleted_519674FD4362099F2E3B8182606E4D28");

	Params::Zombie_C_OnCompleted_519674FD4362099F2E3B8182606E4D28 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCompleted_7A74DE324CF2891674024C94AE2E3813
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCompleted_7A74DE324CF2891674024C94AE2E3813(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCompleted_7A74DE324CF2891674024C94AE2E3813");

	Params::Zombie_C_OnCompleted_7A74DE324CF2891674024C94AE2E3813 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD");

	Params::Zombie_C_OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A");

	Params::Zombie_C_OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCompleted_C114BC7346807B7E596B22B90E553AB9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCompleted_C114BC7346807B7E596B22B90E553AB9(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCompleted_C114BC7346807B7E596B22B90E553AB9");

	Params::Zombie_C_OnCompleted_C114BC7346807B7E596B22B90E553AB9 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCompleted_D46B79E94C7A53608075F692FA4836E1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCompleted_D46B79E94C7A53608075F692FA4836E1(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCompleted_D46B79E94C7A53608075F692FA4836E1");

	Params::Zombie_C_OnCompleted_D46B79E94C7A53608075F692FA4836E1 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C");

	Params::Zombie_C_OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnDamageReaction
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AttackAngle                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnDamageReaction(double AttackAngle, class FName BoneName, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnDamageReaction");

	Params::Zombie_C_OnDamageReaction Parms{};

	Parms.AttackAngle = AttackAngle;
	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnDeath__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AZombie_C::OnDeath__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnDeath__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.OnEndAttack__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AZombie_C::OnEndAttack__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnEndAttack__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.OnEndScreaming__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AZombie_C::OnEndScreaming__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnEndScreaming__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.OnEndScreamingFunc
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::OnEndScreamingFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnEndScreamingFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.OnInterrupted_24581C954244391560E0DD9333B07FE6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnInterrupted_24581C954244391560E0DD9333B07FE6(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnInterrupted_24581C954244391560E0DD9333B07FE6");

	Params::Zombie_C_OnInterrupted_24581C954244391560E0DD9333B07FE6 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0");

	Params::Zombie_C_OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08");

	Params::Zombie_C_OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnInterrupted_519674FD4362099F2E3B8182606E4D28
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnInterrupted_519674FD4362099F2E3B8182606E4D28(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnInterrupted_519674FD4362099F2E3B8182606E4D28");

	Params::Zombie_C_OnInterrupted_519674FD4362099F2E3B8182606E4D28 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnInterrupted_7A74DE324CF2891674024C94AE2E3813
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnInterrupted_7A74DE324CF2891674024C94AE2E3813(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnInterrupted_7A74DE324CF2891674024C94AE2E3813");

	Params::Zombie_C_OnInterrupted_7A74DE324CF2891674024C94AE2E3813 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD");

	Params::Zombie_C_OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A");

	Params::Zombie_C_OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnInterrupted_C114BC7346807B7E596B22B90E553AB9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnInterrupted_C114BC7346807B7E596B22B90E553AB9(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnInterrupted_C114BC7346807B7E596B22B90E553AB9");

	Params::Zombie_C_OnInterrupted_C114BC7346807B7E596B22B90E553AB9 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnInterrupted_D46B79E94C7A53608075F692FA4836E1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnInterrupted_D46B79E94C7A53608075F692FA4836E1(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnInterrupted_D46B79E94C7A53608075F692FA4836E1");

	Params::Zombie_C_OnInterrupted_D46B79E94C7A53608075F692FA4836E1 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C");

	Params::Zombie_C_OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047");

	Params::Zombie_C_OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F");

	Params::Zombie_C_OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822");

	Params::Zombie_C_OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_7DF9BE7C436B339D70C702A8A019FE69
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_7DF9BE7C436B339D70C702A8A019FE69(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_7DF9BE7C436B339D70C702A8A019FE69");

	Params::Zombie_C_OnLoaded_7DF9BE7C436B339D70C702A8A019FE69 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_839E2C0B402628950BCB4C889400C126
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_839E2C0B402628950BCB4C889400C126(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_839E2C0B402628950BCB4C889400C126");

	Params::Zombie_C_OnLoaded_839E2C0B402628950BCB4C889400C126 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_8A6E506A4A312AE6846B14B2D6124182
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_8A6E506A4A312AE6846B14B2D6124182(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_8A6E506A4A312AE6846B14B2D6124182");

	Params::Zombie_C_OnLoaded_8A6E506A4A312AE6846B14B2D6124182 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_9D069B3643019F44798A7D8DB754C908
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_9D069B3643019F44798A7D8DB754C908(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_9D069B3643019F44798A7D8DB754C908");

	Params::Zombie_C_OnLoaded_9D069B3643019F44798A7D8DB754C908 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_B34E310B4038E7659CC67680B2E4A3F3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_B34E310B4038E7659CC67680B2E4A3F3(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_B34E310B4038E7659CC67680B2E4A3F3");

	Params::Zombie_C_OnLoaded_B34E310B4038E7659CC67680B2E4A3F3 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC");

	Params::Zombie_C_OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_D25AEA964E5920875498D4BF0EEE3D93
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_D25AEA964E5920875498D4BF0EEE3D93(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_D25AEA964E5920875498D4BF0EEE3D93");

	Params::Zombie_C_OnLoaded_D25AEA964E5920875498D4BF0EEE3D93 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_DBB4292043DA8186858E4F8829D5273F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_DBB4292043DA8186858E4F8829D5273F(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_DBB4292043DA8186858E4F8829D5273F");

	Params::Zombie_C_OnLoaded_DBB4292043DA8186858E4F8829D5273F Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3");

	Params::Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF269103814709
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_F5D7EA2A48A3AC0C34FF269103814709(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_F5D7EA2A48A3AC0C34FF269103814709");

	Params::Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269103814709 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45");

	Params::Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1");

	Params::Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE");

	Params::Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843");

	Params::Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003");

	Params::Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30");

	Params::Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyBegin_24581C954244391560E0DD9333B07FE6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyBegin_24581C954244391560E0DD9333B07FE6(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyBegin_24581C954244391560E0DD9333B07FE6");

	Params::Zombie_C_OnNotifyBegin_24581C954244391560E0DD9333B07FE6 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0");

	Params::Zombie_C_OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08");

	Params::Zombie_C_OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyBegin_519674FD4362099F2E3B8182606E4D28
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyBegin_519674FD4362099F2E3B8182606E4D28(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyBegin_519674FD4362099F2E3B8182606E4D28");

	Params::Zombie_C_OnNotifyBegin_519674FD4362099F2E3B8182606E4D28 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813");

	Params::Zombie_C_OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD");

	Params::Zombie_C_OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A");

	Params::Zombie_C_OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9");

	Params::Zombie_C_OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1");

	Params::Zombie_C_OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C");

	Params::Zombie_C_OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyEnd_24581C954244391560E0DD9333B07FE6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyEnd_24581C954244391560E0DD9333B07FE6(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyEnd_24581C954244391560E0DD9333B07FE6");

	Params::Zombie_C_OnNotifyEnd_24581C954244391560E0DD9333B07FE6 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0");

	Params::Zombie_C_OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08");

	Params::Zombie_C_OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyEnd_519674FD4362099F2E3B8182606E4D28
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyEnd_519674FD4362099F2E3B8182606E4D28(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyEnd_519674FD4362099F2E3B8182606E4D28");

	Params::Zombie_C_OnNotifyEnd_519674FD4362099F2E3B8182606E4D28 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813");

	Params::Zombie_C_OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD");

	Params::Zombie_C_OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A");

	Params::Zombie_C_OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9");

	Params::Zombie_C_OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1");

	Params::Zombie_C_OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C");

	Params::Zombie_C_OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnRadialDamgeDeath
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnRadialDamgeDeath(const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnRadialDamgeDeath");

	Params::Zombie_C_OnRadialDamgeDeath Parms{};

	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnRep_CurrentTarget
// (BlueprintCallable, BlueprintEvent)

void AZombie_C::OnRep_CurrentTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnRep_CurrentTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.OnRep_LootPoingBag
// (BlueprintCallable, BlueprintEvent)

void AZombie_C::OnRep_LootPoingBag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnRep_LootPoingBag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.OnReset__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AZombie_C::OnReset__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnReset__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.OnSeenActor
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SeenActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnSeenActor(class AActor* SeenActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnSeenActor");

	Params::Zombie_C_OnSeenActor Parms{};

	Parms.SeenActor = SeenActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.OnSetTargetActor__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::OnSetTargetActor__DelegateSignature(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "OnSetTargetActor__DelegateSignature");

	Params::Zombie_C_OnSetTargetActor__DelegateSignature Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.PlayDeathMontage
// (BlueprintCallable, BlueprintEvent)

void AZombie_C::PlayDeathMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "PlayDeathMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.PlayDismembermentSound
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDismembermentPart                      DismemberedLimb                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::PlayDismembermentSound(EDismembermentPart DismemberedLimb)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "PlayDismembermentSound");

	Params::Zombie_C_PlayDismembermentSound Parms{};

	Parms.DismemberedLimb = DismemberedLimb;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.PlayHeadAdditiveDamage
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  HitAngle                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::PlayHeadAdditiveDamage(const double HitAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "PlayHeadAdditiveDamage");

	Params::Zombie_C_PlayHeadAdditiveDamage Parms{};

	Parms.HitAngle = HitAngle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.PreDamageAnimationPhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IgnoreVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HeadShot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Continue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::PreDamageAnimationPhase(bool IgnoreVelocity, bool HeadShot, bool* Continue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "PreDamageAnimationPhase");

	Params::Zombie_C_PreDamageAnimationPhase Parms{};

	Parms.IgnoreVelocity = IgnoreVelocity;
	Parms.HeadShot = HeadShot;

	UObject::ProcessEvent(Func, &Parms);

	if (Continue != nullptr)
		*Continue = Parms.Continue;
}


// Function Zombie.Zombie_C.Ragdoll Updating
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::Ragdoll_Updating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Ragdoll Updating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.RagdollStopChecker
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::RagdollStopChecker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RagdollStopChecker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AZombie_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ReceiveParticleData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBasicParticleData>       Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UNiagaraSystem*                   NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SimulationPositionOffset                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem, const struct FVector& SimulationPositionOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ReceiveParticleData");

	Params::Zombie_C_ReceiveParticleData Parms{};

	Parms.Data = std::move(Data);
	Parms.NiagaraSystem = NiagaraSystem;
	Parms.SimulationPositionOffset = std::move(SimulationPositionOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ReceivePointDamage
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShotFromDirection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZombie_C::ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ReceivePointDamage");

	Params::Zombie_C_ReceivePointDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ReceiveRadialDamage
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DamageReceived                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Origin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ReceiveRadialDamage(float DamageReceived, const class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ReceiveRadialDamage");

	Params::Zombie_C_ReceiveRadialDamage Parms{};

	Parms.DamageReceived = DamageReceived;
	Parms.DamageType = DamageType;
	Parms.Origin = std::move(Origin);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ReceiveTick");

	Params::Zombie_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.RegisterAgressiveSound
// (BlueprintCallable, BlueprintEvent)

void AZombie_C::RegisterAgressiveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RegisterAgressiveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.RemoveHeadNiagara
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::RemoveHeadNiagara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RemoveHeadNiagara");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.RemoveHelmet
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::RemoveHelmet(const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RemoveHelmet");

	Params::Zombie_C_RemoveHelmet Parms{};

	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.RemoveLeftHandNiagara
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::RemoveLeftHandNiagara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RemoveLeftHandNiagara");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.RemoveLeftLegNiagara
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::RemoveLeftLegNiagara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RemoveLeftLegNiagara");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.RemoveRightHandNiagara
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::RemoveRightHandNiagara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RemoveRightHandNiagara");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.RemoveRightLegNiagara
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::RemoveRightLegNiagara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RemoveRightLegNiagara");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ResetAttack
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::ResetAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ResetAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ResetChangeIdleSound
// (BlueprintCallable, BlueprintEvent)

void AZombie_C::ResetChangeIdleSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ResetChangeIdleSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ResetZombie
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::ResetZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ResetZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ReturnReplicateMovement
// (BlueprintCallable, BlueprintEvent)

void AZombie_C::ReturnReplicateMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ReturnReplicateMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.RPC Multicast AddBlood
// (Net, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZombie_C::RPC_Multicast_AddBlood(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RPC Multicast AddBlood");

	Params::Zombie_C_RPC_Multicast_AddBlood Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.RPC Multicast SetWoundsOnNewMesh
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AZombie_C::RPC_Multicast_SetWoundsOnNewMesh(class USkeletalMeshComponent* MeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RPC Multicast SetWoundsOnNewMesh");

	Params::Zombie_C_RPC_Multicast_SetWoundsOnNewMesh Parms{};

	Parms.MeshComponent = MeshComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.RPC ReturnLaggedZombie
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AZombie_C::RPC_ReturnLaggedZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RPC ReturnLaggedZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.RPC Server Setup Sounds
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AZombie_C::RPC_Server_Setup_Sounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "RPC Server Setup Sounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.Server RegChaseSound
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AZombie_C::Server_RegChaseSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Server RegChaseSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.Server ReplicateMovementSettings
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AZombie_C::Server_ReplicateMovementSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Server ReplicateMovementSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ServerApplyDismemberment
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_Weapon_Type                        Param_WeaponType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ServerApplyDismemberment(class FName BoneName, double Damage, EBPE_Weapon_Type Param_WeaponType, const struct FHitResult& HitInfo, const struct FVector& HitLocation, double HitAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ServerApplyDismemberment");

	Params::Zombie_C_ServerApplyDismemberment Parms{};

	Parms.BoneName = BoneName;
	Parms.Damage = Damage;
	Parms.Param_WeaponType = Param_WeaponType;
	Parms.HitInfo = std::move(HitInfo);
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitAngle = HitAngle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ServerFullDismemberment
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BodyImpulse                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_LimbImpulse                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ServerFullDismemberment(const struct FVector& BodyImpulse, const struct FVector& Param_LimbImpulse, const class AController*& InstigatedBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ServerFullDismemberment");

	Params::Zombie_C_ServerFullDismemberment Parms{};

	Parms.BodyImpulse = std::move(BodyImpulse);
	Parms.Param_LimbImpulse = std::move(Param_LimbImpulse);
	Parms.InstigatedBy = InstigatedBy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ServerMuteZombie
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AZombie_C::ServerMuteZombie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ServerMuteZombie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ServerPlayAdditiveDamage
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ServerPlayAdditiveDamage(class FName BoneName, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ServerPlayAdditiveDamage");

	Params::Zombie_C_ServerPlayAdditiveDamage Parms{};

	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ServerPlayAgressiveMontage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ServerPlayAgressiveMontage(double Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ServerPlayAgressiveMontage");

	Params::Zombie_C_ServerPlayAgressiveMontage Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ServerPlayDamagedMontage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AttackAngle                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamageInHead                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ServerPlayDamagedMontage(double AttackAngle, bool IgnoreVelocity, bool DamageInHead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ServerPlayDamagedMontage");

	Params::Zombie_C_ServerPlayDamagedMontage Parms{};

	Parms.AttackAngle = AttackAngle;
	Parms.IgnoreVelocity = IgnoreVelocity;
	Parms.DamageInHead = DamageInHead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ServerStartChasingSound
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AZombie_C::ServerStartChasingSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ServerStartChasingSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ServerStopChasingSound
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AZombie_C::ServerStopChasingSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ServerStopChasingSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ServerTriggerCarZombie
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractedActor                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ServerTriggerCarZombie(const class AActor* InteractedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ServerTriggerCarZombie");

	Params::Zombie_C_ServerTriggerCarZombie Parms{};

	Parms.InteractedActor = InteractedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.Set Loot Point
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AZombieDeadBodyLootPoint_C*       LootPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::Set_Loot_Point(class AZombieDeadBodyLootPoint_C* LootPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Set Loot Point");

	Params::Zombie_C_Set_Loot_Point Parms{};

	Parms.LootPoint = LootPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.SetCoreMeshes
// (BlueprintCallable, BlueprintEvent)

void AZombie_C::SetCoreMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SetCoreMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.SetLootPoint_Server
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AZombieDeadBodyLootPoint_C*       LootPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AZombie_C::SetLootPoint_Server(class AZombieDeadBodyLootPoint_C* LootPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SetLootPoint_Server");

	Params::Zombie_C_SetLootPoint_Server Parms{};

	Parms.LootPoint = LootPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.SetLowMovementTickrate
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::SetLowMovementTickrate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SetLowMovementTickrate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.SetSkeletalMeshesTickEnabled
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::SetSkeletalMeshesTickEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SetSkeletalMeshesTickEnabled");

	Params::Zombie_C_SetSkeletalMeshesTickEnabled Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.SetupAttackTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AttackingArm                          Param_AttackingArm                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::SetupAttackTimer(E_AttackingArm Param_AttackingArm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SetupAttackTimer");

	Params::Zombie_C_SetupAttackTimer Parms{};

	Parms.Param_AttackingArm = Param_AttackingArm;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.SetupCheckDrownTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::SetupCheckDrownTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SetupCheckDrownTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.SetupSounds
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::SetupSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SetupSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.SetZombieTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)

void AZombie_C::SetZombieTransform(struct FVector& Location, struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SetZombieTransform");

	Params::Zombie_C_SetZombieTransform Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);

	Location = std::move(Parms.Location);
	Rotation = std::move(Parms.Rotation);
}


// Function Zombie.Zombie_C.ShowMeshes
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::ShowMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ShowMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.SoldierZombieParams
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::SoldierZombieParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SoldierZombieParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.SoundsOnDeath
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KilledInHead                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::SoundsOnDeath(bool KilledInHead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SoundsOnDeath");

	Params::Zombie_C_SoundsOnDeath Parms{};

	Parms.KilledInHead = KilledInHead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.Spawn Decal for Blood
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::Spawn_Decal_for_Blood(class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Spawn Decal for Blood");

	Params::Zombie_C_Spawn_Decal_for_Blood Parms{};

	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.SpawnChunksDecals
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBasicParticleData>       Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AZombie_C::SpawnChunksDecals(TArray<struct FBasicParticleData>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SpawnChunksDecals");

	Params::Zombie_C_SpawnChunksDecals Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	Data = std::move(Parms.Data);
}


// Function Zombie.Zombie_C.SpawnDeadBody
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombie_C::SpawnDeadBody()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SpawnDeadBody");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.SpawnDecalUnderLimb
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          LimbLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LimbDirectionAdjustment                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               DecalToSpawn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   DecalMinSize                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DecalMaxSize                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DecalLifeSpan                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EDrawDebugTrace                         DrawDebug                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDecalComponent*                  SpawnedDecal                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AZombie_C::SpawnDecalUnderLimb(const struct FVector& LimbLocation, const struct FVector& LimbDirectionAdjustment, class UMaterialInterface* DecalToSpawn, int32 DecalMinSize, int32 DecalMaxSize, double DecalLifeSpan, EDrawDebugTrace DrawDebug, class UDecalComponent** SpawnedDecal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SpawnDecalUnderLimb");

	Params::Zombie_C_SpawnDecalUnderLimb Parms{};

	Parms.LimbLocation = std::move(LimbLocation);
	Parms.LimbDirectionAdjustment = std::move(LimbDirectionAdjustment);
	Parms.DecalToSpawn = DecalToSpawn;
	Parms.DecalMinSize = DecalMinSize;
	Parms.DecalMaxSize = DecalMaxSize;
	Parms.DecalLifeSpan = DecalLifeSpan;
	Parms.DrawDebug = DrawDebug;

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnedDecal != nullptr)
		*SpawnedDecal = Parms.SpawnedDecal;
}


// Function Zombie.Zombie_C.SpawnFallBloodDecal
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDismembermentPart                      DismembermentPart                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::SpawnFallBloodDecal(EDismembermentPart DismembermentPart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SpawnFallBloodDecal");

	Params::Zombie_C_SpawnFallBloodDecal Parms{};

	Parms.DismembermentPart = DismembermentPart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.SpawnHelmetSpark
// (Net, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AZombie_C::SpawnHelmetSpark(const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SpawnHelmetSpark");

	Params::Zombie_C_SpawnHelmetSpark Parms{};

	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.SpawnLootPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ItemsToSpawn                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AZombie_C::SpawnLootPoint(TArray<class FName>& ItemsToSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "SpawnLootPoint");

	Params::Zombie_C_SpawnLootPoint Parms{};

	Parms.ItemsToSpawn = std::move(ItemsToSpawn);

	UObject::ProcessEvent(Func, &Parms);

	ItemsToSpawn = std::move(Parms.ItemsToSpawn);
}


// Function Zombie.Zombie_C.Start Dismemberment
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_Weapon_Type                        Param_WeaponType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Start                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::Start_Dismemberment(class FName BoneName, double Damage, EBPE_Weapon_Type Param_WeaponType, const struct FHitResult& HitResult, const struct FVector& HitLocation, double HitAngle, bool* Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "Start Dismemberment");

	Params::Zombie_C_Start_Dismemberment Parms{};

	Parms.BoneName = BoneName;
	Parms.Damage = Damage;
	Parms.Param_WeaponType = Param_WeaponType;
	Parms.HitResult = std::move(HitResult);
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitAngle = HitAngle;

	UObject::ProcessEvent(Func, &Parms);

	if (Start != nullptr)
		*Start = Parms.Start;
}


// Function Zombie.Zombie_C.StopAgressiveSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::StopAgressiveSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "StopAgressiveSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.StopIdleSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombie_C::StopIdleSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "StopIdleSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.StopStateSounds
// (BlueprintCallable, BlueprintEvent)

void AZombie_C::StopStateSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "StopStateSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.TypeConfiguration
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::TypeConfiguration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "TypeConfiguration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.UnsetJustInitialized
// (Public, BlueprintCallable, BlueprintEvent)

void AZombie_C::UnsetJustInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "UnsetJustInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.UpdateLimbDurability
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDismembermentPart                      DismemberPart                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PartIsBroken                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::UpdateLimbDurability(EDismembermentPart DismemberPart, double Damage, bool* PartIsBroken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "UpdateLimbDurability");

	Params::Zombie_C_UpdateLimbDurability Parms{};

	Parms.DismemberPart = DismemberPart;
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);

	if (PartIsBroken != nullptr)
		*PartIsBroken = Parms.PartIsBroken;
}


// Function Zombie.Zombie_C.VertexPaintOnAllMeshes
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVertexPaintAtLocationStruct     InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void AZombie_C::VertexPaintOnAllMeshes(const struct FVertexPaintAtLocationStruct& InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "VertexPaintOnAllMeshes");

	Params::Zombie_C_VertexPaintOnAllMeshes Parms{};

	Parms.InputPin = std::move(InputPin);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.WitchZombieParams
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::WitchZombieParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "WitchZombieParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Zombie.Zombie_C.ZombieAttack_RPC
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AttackingArm                          Param_AttackingArm                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MovingAttack                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DoorAttack                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CarAttack                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ZombieAttack_RPC(E_AttackingArm Param_AttackingArm, bool MovingAttack, bool DoorAttack, bool CarAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ZombieAttack_RPC");

	Params::Zombie_C_ZombieAttack_RPC Parms{};

	Parms.Param_AttackingArm = Param_AttackingArm;
	Parms.MovingAttack = MovingAttack;
	Parms.DoorAttack = DoorAttack;
	Parms.CarAttack = CarAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ZombieDeath_RPC
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    DiedByGrenade                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DiedByCar                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    KilledInHead                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LastDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DeathImpulse                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DeadByTimer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ZombieDeath_RPC(const struct FVector& HitLocation, class FName BoneName, const class AController*& InstigatedBy, bool DiedByGrenade, bool DiedByCar, bool KilledInHead, double LastDamage, const struct FVector& DeathImpulse, bool DeadByTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ZombieDeath_RPC");

	Params::Zombie_C_ZombieDeath_RPC Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.BoneName = BoneName;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DiedByGrenade = DiedByGrenade;
	Parms.DiedByCar = DiedByCar;
	Parms.KilledInHead = KilledInHead;
	Parms.LastDamage = LastDamage;
	Parms.DeathImpulse = std::move(DeathImpulse);
	Parms.DeadByTimer = DeadByTimer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ZombieDeathOnClients
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DeathImpulse                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DiedByGrenade                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DiedByCar                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    KilledInHead                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DeadByTimer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ZombieDeathOnClients(const struct FVector& HitLocation, const struct FVector& DeathImpulse, class FName BoneName, bool DiedByGrenade, bool DiedByCar, bool KilledInHead, bool DeadByTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ZombieDeathOnClients");

	Params::Zombie_C_ZombieDeathOnClients Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.DeathImpulse = std::move(DeathImpulse);
	Parms.BoneName = BoneName;
	Parms.DiedByGrenade = DiedByGrenade;
	Parms.DiedByCar = DiedByCar;
	Parms.KilledInHead = KilledInHead;
	Parms.DeadByTimer = DeadByTimer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Zombie.Zombie_C.ZombieDeathOnServer
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DeathImpulse                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DiedByGrenade                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DiedByCar                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    KilledInHead                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    DeadByTimer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombie_C::ZombieDeathOnServer(const struct FVector& HitLocation, const struct FVector& DeathImpulse, class FName BoneName, bool DiedByGrenade, bool DiedByCar, bool KilledInHead, class AController*& InstigatedBy, bool DeadByTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ZombieDeathOnServer");

	Params::Zombie_C_ZombieDeathOnServer Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.DeathImpulse = std::move(DeathImpulse);
	Parms.BoneName = BoneName;
	Parms.DiedByGrenade = DiedByGrenade;
	Parms.DiedByCar = DiedByCar;
	Parms.KilledInHead = KilledInHead;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DeadByTimer = DeadByTimer;

	UObject::ProcessEvent(Func, &Parms);

	InstigatedBy = Parms.InstigatedBy;
}


// Function Zombie.Zombie_C.ZombieManagerNotify
// (Private, BlueprintCallable, BlueprintEvent)

void AZombie_C::ZombieManagerNotify()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Zombie_C", "ZombieManagerNotify");

	UObject::ProcessEvent(Func, nullptr);
}

}

