#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Point

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Point.WBP_Point_C.AimStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_Point_C_AimStateChanged final
{
public:
	bool                                          Aim;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Point_C_AimStateChanged) == 0x000001, "Wrong alignment on WBP_Point_C_AimStateChanged");
static_assert(sizeof(WBP_Point_C_AimStateChanged) == 0x000001, "Wrong size on WBP_Point_C_AimStateChanged");
static_assert(offsetof(WBP_Point_C_AimStateChanged, Aim) == 0x000000, "Member 'WBP_Point_C_AimStateChanged::Aim' has a wrong offset!");

// Function WBP_Point.WBP_Point_C.ExecuteUbergraph_WBP_Point
// 0x0058 (0x0058 - 0x0000)
struct WBP_Point_C_ExecuteUbergraph_WBP_Point final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Aim;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(double ReloadDuration)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_ReloadDuration;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Aim)>                     K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Point_C_ExecuteUbergraph_WBP_Point) == 0x000008, "Wrong alignment on WBP_Point_C_ExecuteUbergraph_WBP_Point");
static_assert(sizeof(WBP_Point_C_ExecuteUbergraph_WBP_Point) == 0x000058, "Wrong size on WBP_Point_C_ExecuteUbergraph_WBP_Point");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, EntryPoint) == 0x000000, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, K2Node_CustomEvent_Aim) == 0x000004, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::K2Node_CustomEvent_Aim' has a wrong offset!");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, K2Node_CustomEvent_ReloadDuration) == 0x000028, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::K2Node_CustomEvent_ReloadDuration' has a wrong offset!");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, K2Node_DynamicCast_AsSurvival_Player) == 0x000030, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, CallFunc_Not_PreBool_ReturnValue) == 0x00004C, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Point_C_ExecuteUbergraph_WBP_Point, CallFunc_Delay_Duration_ImplicitCast) == 0x000050, "Member 'WBP_Point_C_ExecuteUbergraph_WBP_Point::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function WBP_Point.WBP_Point_C.Reloading
// 0x0008 (0x0008 - 0x0000)
struct WBP_Point_C_Reloading final
{
public:
	double                                        ReloadDuration;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Point_C_Reloading) == 0x000008, "Wrong alignment on WBP_Point_C_Reloading");
static_assert(sizeof(WBP_Point_C_Reloading) == 0x000008, "Wrong size on WBP_Point_C_Reloading");
static_assert(offsetof(WBP_Point_C_Reloading, ReloadDuration) == 0x000000, "Member 'WBP_Point_C_Reloading::ReloadDuration' has a wrong offset!");

}

