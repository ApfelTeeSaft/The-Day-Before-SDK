#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Compass

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Compass.BP_Compass_C.ExecuteUbergraph_BP_Compass
// 0x0038 (0x0038 - 0x0000)
struct BP_Compass_C_ExecuteUbergraph_BP_Compass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DoorTeleport_C*                     CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_TeleportToRegion_C*                 CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Compass_C_ExecuteUbergraph_BP_Compass) == 0x000008, "Wrong alignment on BP_Compass_C_ExecuteUbergraph_BP_Compass");
static_assert(sizeof(BP_Compass_C_ExecuteUbergraph_BP_Compass) == 0x000038, "Wrong size on BP_Compass_C_ExecuteUbergraph_BP_Compass");
static_assert(offsetof(BP_Compass_C_ExecuteUbergraph_BP_Compass, EntryPoint) == 0x000000, "Member 'BP_Compass_C_ExecuteUbergraph_BP_Compass::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Compass_C_ExecuteUbergraph_BP_Compass, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_Compass_C_ExecuteUbergraph_BP_Compass::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Compass_C_ExecuteUbergraph_BP_Compass, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'BP_Compass_C_ExecuteUbergraph_BP_Compass::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Compass_C_ExecuteUbergraph_BP_Compass, K2Node_Event_EndPlayReason) == 0x000010, "Member 'BP_Compass_C_ExecuteUbergraph_BP_Compass::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_Compass_C_ExecuteUbergraph_BP_Compass, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'BP_Compass_C_ExecuteUbergraph_BP_Compass::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Compass_C_ExecuteUbergraph_BP_Compass, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000020, "Member 'BP_Compass_C_ExecuteUbergraph_BP_Compass::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Compass_C_ExecuteUbergraph_BP_Compass, K2Node_DynamicCast_AsSurvival_Player) == 0x000028, "Member 'BP_Compass_C_ExecuteUbergraph_BP_Compass::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_Compass_C_ExecuteUbergraph_BP_Compass, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Compass_C_ExecuteUbergraph_BP_Compass::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Compass.BP_Compass_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Compass_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Compass_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Compass_C_ReceiveEndPlay");
static_assert(sizeof(BP_Compass_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Compass_C_ReceiveEndPlay");
static_assert(offsetof(BP_Compass_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Compass_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Compass.BP_Compass_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Compass_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Compass_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Compass_C_ReceiveTick");
static_assert(sizeof(BP_Compass_C_ReceiveTick) == 0x000004, "Wrong size on BP_Compass_C_ReceiveTick");
static_assert(offsetof(BP_Compass_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Compass_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

