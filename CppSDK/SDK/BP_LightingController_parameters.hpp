#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightingController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LightingController.BP_LightingController_C.ExecuteUbergraph_BP_LightingController
// 0x00A8 (0x00A8 - 0x0000)
struct BP_LightingController_C_ExecuteUbergraph_BP_LightingController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_Color;                                // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InHUB;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue;                // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CInterpTo_ReturnValue;                    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Offset;                               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast_1;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFogDensity_Value_ImplicitCast;         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController) == 0x000008, "Wrong alignment on BP_LightingController_C_ExecuteUbergraph_BP_LightingController");
static_assert(sizeof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController) == 0x0000A8, "Wrong size on BP_LightingController_C_ExecuteUbergraph_BP_LightingController");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, EntryPoint) == 0x000000, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, K2Node_Event_Color) == 0x000004, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::K2Node_Event_Color' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, K2Node_Event_InHUB) == 0x000014, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::K2Node_Event_InHUB' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_FInterpTo_ReturnValue) == 0x000018, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_GetLightColor_ReturnValue) == 0x000024, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_GetLightColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_CInterpTo_ReturnValue) == 0x000034, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_CInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, K2Node_Event_DeltaSeconds) == 0x000054, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_IsValid_ReturnValue_3) == 0x000060, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_FInterpTo_ReturnValue_1) == 0x000070, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, K2Node_Event_Offset) == 0x000078, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::K2Node_Event_Offset' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x000080, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_FInterpTo_DeltaTime_ImplicitCast_1) == 0x000088, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_FInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000090, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000098, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightingController_C_ExecuteUbergraph_BP_LightingController, CallFunc_SetFogDensity_Value_ImplicitCast) == 0x0000A0, "Member 'BP_LightingController_C_ExecuteUbergraph_BP_LightingController::CallFunc_SetFogDensity_Value_ImplicitCast' has a wrong offset!");

// Function BP_LightingController.BP_LightingController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_LightingController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingController_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_LightingController_C_ReceiveTick");
static_assert(sizeof(BP_LightingController_C_ReceiveTick) == 0x000004, "Wrong size on BP_LightingController_C_ReceiveTick");
static_assert(offsetof(BP_LightingController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_LightingController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_LightingController.BP_LightingController_C.SetPlayerInHUB
// 0x0001 (0x0001 - 0x0000)
struct BP_LightingController_C_SetPlayerInHUB final
{
public:
	bool                                          InHub;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingController_C_SetPlayerInHUB) == 0x000001, "Wrong alignment on BP_LightingController_C_SetPlayerInHUB");
static_assert(sizeof(BP_LightingController_C_SetPlayerInHUB) == 0x000001, "Wrong size on BP_LightingController_C_SetPlayerInHUB");
static_assert(offsetof(BP_LightingController_C_SetPlayerInHUB, InHub) == 0x000000, "Member 'BP_LightingController_C_SetPlayerInHUB::InHub' has a wrong offset!");

// Function BP_LightingController.BP_LightingController_C.SetSkyLightColor
// 0x0010 (0x0010 - 0x0000)
struct BP_LightingController_C_SetSkyLightColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingController_C_SetSkyLightColor) == 0x000004, "Wrong alignment on BP_LightingController_C_SetSkyLightColor");
static_assert(sizeof(BP_LightingController_C_SetSkyLightColor) == 0x000010, "Wrong size on BP_LightingController_C_SetSkyLightColor");
static_assert(offsetof(BP_LightingController_C_SetSkyLightColor, Color) == 0x000000, "Member 'BP_LightingController_C_SetSkyLightColor::Color' has a wrong offset!");

// Function BP_LightingController.BP_LightingController_C.SetSkylightOffset
// 0x0008 (0x0008 - 0x0000)
struct BP_LightingController_C_SetSkylightOffset final
{
public:
	double                                        Offset;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightingController_C_SetSkylightOffset) == 0x000008, "Wrong alignment on BP_LightingController_C_SetSkylightOffset");
static_assert(sizeof(BP_LightingController_C_SetSkylightOffset) == 0x000008, "Wrong size on BP_LightingController_C_SetSkylightOffset");
static_assert(offsetof(BP_LightingController_C_SetSkylightOffset, Offset) == 0x000000, "Member 'BP_LightingController_C_SetSkylightOffset::Offset' has a wrong offset!");

}

