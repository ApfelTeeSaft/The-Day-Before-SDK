#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Scroller

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Scroller.WBP_Scroller_C
// 0x0060 (0x02E0 - 0x0280)
class UWBP_Scroller_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_BackpackScrollInfo;                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Current;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Max;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         In_Height_Override;                                // 0x02B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                TargetWidget;                                      // 0x02B8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UWidget*                                ContainerTarget;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ESlateVisibility                              ChangeVisibilityTo;                                // 0x02C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BG_Color;                                          // 0x02CC(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsServer;                                          // 0x02DC(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Scroller(int32 EntryPoint);
	void InitScroller();
	void PreConstruct(bool IsDesignTime);
	void SetServerCount(const class FText& Current, const class FText& Max);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Scroller_C">();
	}
	static class UWBP_Scroller_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Scroller_C>();
	}
};
static_assert(alignof(UWBP_Scroller_C) == 0x000008, "Wrong alignment on UWBP_Scroller_C");
static_assert(sizeof(UWBP_Scroller_C) == 0x0002E0, "Wrong size on UWBP_Scroller_C");
static_assert(offsetof(UWBP_Scroller_C, UberGraphFrame) == 0x000280, "Member 'UWBP_Scroller_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, Border_BackpackScrollInfo) == 0x000288, "Member 'UWBP_Scroller_C::Border_BackpackScrollInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, SizeBox) == 0x000290, "Member 'UWBP_Scroller_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, Text_Current) == 0x000298, "Member 'UWBP_Scroller_C::Text_Current' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, Text_Max) == 0x0002A0, "Member 'UWBP_Scroller_C::Text_Max' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, WidgetSwitcher) == 0x0002A8, "Member 'UWBP_Scroller_C::WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, In_Height_Override) == 0x0002B0, "Member 'UWBP_Scroller_C::In_Height_Override' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, TargetWidget) == 0x0002B8, "Member 'UWBP_Scroller_C::TargetWidget' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, ContainerTarget) == 0x0002C0, "Member 'UWBP_Scroller_C::ContainerTarget' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, ChangeVisibilityTo) == 0x0002C8, "Member 'UWBP_Scroller_C::ChangeVisibilityTo' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, BG_Color) == 0x0002CC, "Member 'UWBP_Scroller_C::BG_Color' has a wrong offset!");
static_assert(offsetof(UWBP_Scroller_C, IsServer) == 0x0002DC, "Member 'UWBP_Scroller_C::IsServer' has a wrong offset!");

}

