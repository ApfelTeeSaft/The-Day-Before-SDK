#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CarWithZombie

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Survival_structs.hpp"
#include "Survival_classes.hpp"
#include "DayCycleState_structs.hpp"
#include "E_ZombieAnimType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CarWithZombie.BP_CarWithZombie_C
// 0x0180 (0x0410 - 0x0290)
class ABP_CarWithZombie_C final : public ACarWithZombie
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          SpawnTrigger;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       TriggerZone;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ZombieOpenDoorTimeline_ZombieOpenDoor_3849FCCA487D1764E984BD8EA9DAE638; // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ZombieOpenDoorTimeline__Direction_3849FCCA487D1764E984BD8EA9DAE638; // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ZombieOpenDoorTimeline;                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_ZombieOpenDoor_1C0B35C548140C9445E570A6545AE590; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_1C0B35C548140C9445E570A6545AE590; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        TDBGameMode;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AZombieManager_C*                       ZombieManager;                                     // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 DayMeshTypes;                                      // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Ready;                                             // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              Zombie;                                            // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ALootPoint_C*>                   LootPoints;                                        // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class FName                                   ZombieSpawnPointSocketName;                        // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cooldown;                                          // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CooldownTimer;                                     // 0x0328(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ZombieTriggered;                                   // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 NightMeshTypes;                                    // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ASkyCreatorController_C*                SkyCreatorController;                              // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          NightZombie;                                       // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpawnZoneRadius;                                   // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TriggerZoneRadius;                                 // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class UQuest*>                           LinkedQuests;                                      // 0x0368(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   NavModifierSocketName;                             // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MainMesh;                                          // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ALootPoint_C*                           ZombieDoorLootPoint;                               // 0x03C8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         RotationStartZ;                                    // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFMODEvent>              DoorOpenSound;                                     // 0x03D8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bCanRecieveSphereOverlap;                          // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_City_ZombieCar;                                 // 0x0409(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool Check_Could_Spawn();
	void CheckZombieSpawn();
	void DelayedTriggerZombie(class AActor* TrigerredActor);
	void ExecuteUbergraph_BP_CarWithZombie(int32 EntryPoint);
	void GenerateDayMeshType(int32* MeshType);
	void GenerateNightMeshType(int32* MeshType);
	void InitializeLootPoints();
	void MulticastRapidOpenDoor();
	void NightZombieChance();
	void OnBoxOverlap(class AActor* Other_Actor);
	void OnInteracted(class AActor* InteractedActor);
	void OnSphereOverlap(class AActor* OtherActor);
	void OpenDoorByRotation();
	void ReceiveBeginPlay();
	void Reset_Spawner();
	void ServerRapidOpenDoor();
	void SetLinkedQuests(TArray<class UQuest*>& Param_LinkedQuests);
	void SetupCooldownTimer();
	void SetZombieDoorLootPoint();
	void Single_Open_Door();
	void Spawn_Zombie();
	void TriggerZombie(class AActor* InteractedActor);
	void UserConstructionScript();
	void ZombieDied();
	void ZombieOpenDoorTimeline__FinishedFunc();
	void ZombieOpenDoorTimeline__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CarWithZombie_C">();
	}
	static class ABP_CarWithZombie_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CarWithZombie_C>();
	}
};
static_assert(alignof(ABP_CarWithZombie_C) == 0x000008, "Wrong alignment on ABP_CarWithZombie_C");
static_assert(sizeof(ABP_CarWithZombie_C) == 0x000410, "Wrong size on ABP_CarWithZombie_C");
static_assert(offsetof(ABP_CarWithZombie_C, UberGraphFrame) == 0x000290, "Member 'ABP_CarWithZombie_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, SpawnTrigger) == 0x000298, "Member 'ABP_CarWithZombie_C::SpawnTrigger' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, ChildActor) == 0x0002A0, "Member 'ABP_CarWithZombie_C::ChildActor' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, TriggerZone) == 0x0002A8, "Member 'ABP_CarWithZombie_C::TriggerZone' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_CarWithZombie_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, ZombieOpenDoorTimeline_ZombieOpenDoor_3849FCCA487D1764E984BD8EA9DAE638) == 0x0002B8, "Member 'ABP_CarWithZombie_C::ZombieOpenDoorTimeline_ZombieOpenDoor_3849FCCA487D1764E984BD8EA9DAE638' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, ZombieOpenDoorTimeline__Direction_3849FCCA487D1764E984BD8EA9DAE638) == 0x0002BC, "Member 'ABP_CarWithZombie_C::ZombieOpenDoorTimeline__Direction_3849FCCA487D1764E984BD8EA9DAE638' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, ZombieOpenDoorTimeline) == 0x0002C0, "Member 'ABP_CarWithZombie_C::ZombieOpenDoorTimeline' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, Timeline_ZombieOpenDoor_1C0B35C548140C9445E570A6545AE590) == 0x0002C8, "Member 'ABP_CarWithZombie_C::Timeline_ZombieOpenDoor_1C0B35C548140C9445E570A6545AE590' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, Timeline__Direction_1C0B35C548140C9445E570A6545AE590) == 0x0002CC, "Member 'ABP_CarWithZombie_C::Timeline__Direction_1C0B35C548140C9445E570A6545AE590' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, Timeline) == 0x0002D0, "Member 'ABP_CarWithZombie_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, TDBGameMode) == 0x0002D8, "Member 'ABP_CarWithZombie_C::TDBGameMode' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, ZombieManager) == 0x0002E0, "Member 'ABP_CarWithZombie_C::ZombieManager' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, DayMeshTypes) == 0x0002E8, "Member 'ABP_CarWithZombie_C::DayMeshTypes' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, Ready) == 0x0002F8, "Member 'ABP_CarWithZombie_C::Ready' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, Zombie) == 0x000300, "Member 'ABP_CarWithZombie_C::Zombie' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, LootPoints) == 0x000308, "Member 'ABP_CarWithZombie_C::LootPoints' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, ZombieSpawnPointSocketName) == 0x000318, "Member 'ABP_CarWithZombie_C::ZombieSpawnPointSocketName' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, Cooldown) == 0x000320, "Member 'ABP_CarWithZombie_C::Cooldown' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, CooldownTimer) == 0x000328, "Member 'ABP_CarWithZombie_C::CooldownTimer' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, ZombieTriggered) == 0x000330, "Member 'ABP_CarWithZombie_C::ZombieTriggered' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, NightMeshTypes) == 0x000338, "Member 'ABP_CarWithZombie_C::NightMeshTypes' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, SkyCreatorController) == 0x000348, "Member 'ABP_CarWithZombie_C::SkyCreatorController' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, NightZombie) == 0x000350, "Member 'ABP_CarWithZombie_C::NightZombie' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, SpawnZoneRadius) == 0x000358, "Member 'ABP_CarWithZombie_C::SpawnZoneRadius' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, TriggerZoneRadius) == 0x000360, "Member 'ABP_CarWithZombie_C::TriggerZoneRadius' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, LinkedQuests) == 0x000368, "Member 'ABP_CarWithZombie_C::LinkedQuests' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, NavModifierSocketName) == 0x0003B8, "Member 'ABP_CarWithZombie_C::NavModifierSocketName' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, MainMesh) == 0x0003C0, "Member 'ABP_CarWithZombie_C::MainMesh' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, ZombieDoorLootPoint) == 0x0003C8, "Member 'ABP_CarWithZombie_C::ZombieDoorLootPoint' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, RotationStartZ) == 0x0003D0, "Member 'ABP_CarWithZombie_C::RotationStartZ' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, DoorOpenSound) == 0x0003D8, "Member 'ABP_CarWithZombie_C::DoorOpenSound' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, bCanRecieveSphereOverlap) == 0x000408, "Member 'ABP_CarWithZombie_C::bCanRecieveSphereOverlap' has a wrong offset!");
static_assert(offsetof(ABP_CarWithZombie_C, Is_City_ZombieCar) == 0x000409, "Member 'ABP_CarWithZombie_C::Is_City_ZombieCar' has a wrong offset!");

}

