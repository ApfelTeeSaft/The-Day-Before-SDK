#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Square_lamp_Blueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Square_lamp_Blueprint.Square_lamp_Blueprint_C
// 0x0030 (0x02C0 - 0x0290)
class ASquare_lamp_Blueprint_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USpotLightComponent*                    SpotLight;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent0;                              // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    LightComponent1;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SharedRoot;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Square_lamp_Blueprint(int32 EntryPoint);
	void SetLightColor(const struct FLinearColor& Color);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Square_lamp_Blueprint_C">();
	}
	static class ASquare_lamp_Blueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASquare_lamp_Blueprint_C>();
	}
};
static_assert(alignof(ASquare_lamp_Blueprint_C) == 0x000008, "Wrong alignment on ASquare_lamp_Blueprint_C");
static_assert(sizeof(ASquare_lamp_Blueprint_C) == 0x0002C0, "Wrong size on ASquare_lamp_Blueprint_C");
static_assert(offsetof(ASquare_lamp_Blueprint_C, UberGraphFrame) == 0x000290, "Member 'ASquare_lamp_Blueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASquare_lamp_Blueprint_C, SpotLight) == 0x000298, "Member 'ASquare_lamp_Blueprint_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ASquare_lamp_Blueprint_C, StaticMeshComponent0) == 0x0002A0, "Member 'ASquare_lamp_Blueprint_C::StaticMeshComponent0' has a wrong offset!");
static_assert(offsetof(ASquare_lamp_Blueprint_C, LightComponent1) == 0x0002A8, "Member 'ASquare_lamp_Blueprint_C::LightComponent1' has a wrong offset!");
static_assert(offsetof(ASquare_lamp_Blueprint_C, SharedRoot) == 0x0002B0, "Member 'ASquare_lamp_Blueprint_C::SharedRoot' has a wrong offset!");
static_assert(offsetof(ASquare_lamp_Blueprint_C, DefaultSceneRoot) == 0x0002B8, "Member 'ASquare_lamp_Blueprint_C::DefaultSceneRoot' has a wrong offset!");

}

