#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MainWeaponTab

#include "Basic.hpp"

#include "AttachmentInfo_structs.hpp"
#include "E_TypesOfModes_structs.hpp"
#include "E_DependenciesRule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "Slate_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_AttachmentDependencyTypes_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "WE_WorkbenchCategoryType_structs.hpp"
#include "BPS_CustomizationData_structs.hpp"
#include "BPS_WeaponData_structs.hpp"
#include "WE_MessageTypes_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.ActivateWeaponRow
// 0x0318 (0x0318 - 0x0000)
struct WBP_MainWeaponTab_C_ActivateWeaponRow final
{
public:
	class UWBP_WeaponRow_C*                       ActiveWeapon;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Weight;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0010(0x0018)()
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0070(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x00B0(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttachmentInfo                        CallFunc_Array_Get_Item;                           // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x00E8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_ActivateWeaponRow) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_ActivateWeaponRow");
static_assert(sizeof(WBP_MainWeaponTab_C_ActivateWeaponRow) == 0x000318, "Wrong size on WBP_MainWeaponTab_C_ActivateWeaponRow");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, ActiveWeapon) == 0x000000, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::ActiveWeapon' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, Weight) == 0x000008, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::Weight' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000010, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_FTrunc_ReturnValue_1) == 0x000040, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000060, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000070, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_BreakVector2D_X) == 0x000090, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_BreakVector2D_Y) == 0x000098, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x0000B0, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Array_Get_Item) == 0x0000D4, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000E8, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000308, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ActivateWeaponRow, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000310, "Member 'WBP_MainWeaponTab_C_ActivateWeaponRow::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.BindInventoryUpdate
// 0x0040 (0x0040 - 0x0000)
struct WBP_MainWeaponTab_C_BindInventoryUpdate final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_BindInventoryUpdate) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_BindInventoryUpdate");
static_assert(sizeof(WBP_MainWeaponTab_C_BindInventoryUpdate) == 0x000040, "Wrong size on WBP_MainWeaponTab_C_BindInventoryUpdate");
static_assert(offsetof(WBP_MainWeaponTab_C_BindInventoryUpdate, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MainWeaponTab_C_BindInventoryUpdate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_BindInventoryUpdate, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_MainWeaponTab_C_BindInventoryUpdate::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_BindInventoryUpdate, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000018, "Member 'WBP_MainWeaponTab_C_BindInventoryUpdate::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_BindInventoryUpdate, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_MainWeaponTab_C_BindInventoryUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_BindInventoryUpdate, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000030, "Member 'WBP_MainWeaponTab_C_BindInventoryUpdate::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_BindInventoryUpdate, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_MainWeaponTab_C_BindInventoryUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.BndEvt__WBP_MainWeaponTab_W_CategorySelector_K2Node_ComponentBoundEvent_1_OnCategoryChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_MainWeaponTab_C_BndEvt__WBP_MainWeaponTab_W_CategorySelector_K2Node_ComponentBoundEvent_1_OnCategoryChanged__DelegateSignature final
{
public:
	int32                                         CategoryIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_BndEvt__WBP_MainWeaponTab_W_CategorySelector_K2Node_ComponentBoundEvent_1_OnCategoryChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_MainWeaponTab_C_BndEvt__WBP_MainWeaponTab_W_CategorySelector_K2Node_ComponentBoundEvent_1_OnCategoryChanged__DelegateSignature");
static_assert(sizeof(WBP_MainWeaponTab_C_BndEvt__WBP_MainWeaponTab_W_CategorySelector_K2Node_ComponentBoundEvent_1_OnCategoryChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_MainWeaponTab_C_BndEvt__WBP_MainWeaponTab_W_CategorySelector_K2Node_ComponentBoundEvent_1_OnCategoryChanged__DelegateSignature");
static_assert(offsetof(WBP_MainWeaponTab_C_BndEvt__WBP_MainWeaponTab_W_CategorySelector_K2Node_ComponentBoundEvent_1_OnCategoryChanged__DelegateSignature, CategoryIndex) == 0x000000, "Member 'WBP_MainWeaponTab_C_BndEvt__WBP_MainWeaponTab_W_CategorySelector_K2Node_ComponentBoundEvent_1_OnCategoryChanged__DelegateSignature::CategoryIndex' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.CheckContainsWeapon
// 0x0018 (0x0018 - 0x0000)
struct WBP_MainWeaponTab_C_CheckContainsWeapon final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindItems__Valid__Result;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     CallFunc_FindItems__Valid__ValidItems;             // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_MainWeaponTab_C_CheckContainsWeapon) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_CheckContainsWeapon");
static_assert(sizeof(WBP_MainWeaponTab_C_CheckContainsWeapon) == 0x000018, "Wrong size on WBP_MainWeaponTab_C_CheckContainsWeapon");
static_assert(offsetof(WBP_MainWeaponTab_C_CheckContainsWeapon, Result) == 0x000000, "Member 'WBP_MainWeaponTab_C_CheckContainsWeapon::Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_CheckContainsWeapon, CallFunc_FindItems__Valid__Result) == 0x000001, "Member 'WBP_MainWeaponTab_C_CheckContainsWeapon::CallFunc_FindItems__Valid__Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_CheckContainsWeapon, CallFunc_FindItems__Valid__ValidItems) == 0x000008, "Member 'WBP_MainWeaponTab_C_CheckContainsWeapon::CallFunc_FindItems__Valid__ValidItems' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.CheckWeaponOnTagsPosition
// 0x0028 (0x0028 - 0x0000)
struct WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition final
{
public:
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition");
static_assert(sizeof(WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition) == 0x000028, "Wrong size on WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition");
static_assert(offsetof(WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000000, "Member 'WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000008, "Member 'WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000010, "Member 'WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000018, "Member 'WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'WBP_MainWeaponTab_C_CheckWeaponOnTagsPosition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.ExecuteUbergraph_WBP_MainWeaponTab
// 0x07E0 (0x07E0 - 0x0000)
struct WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewPosition;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_CategoryIndex;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_WeaponCategory_C*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_WeaponRow_C*                       K2Node_CustomEvent_Active_weapon;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             K2Node_CustomEvent_Weapon_Info;                    // 0x0028(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_Event_NewItem;                              // 0x0250(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateWeaponStructure_bResult;            // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x049B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWE_MessageTypes                              K2Node_Event_Type;                                 // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Text;                                 // 0x04A8(0x0018)()
	double                                        K2Node_Event_Duration_1;                           // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Duration;                             // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Lock;                                 // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x04D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_WeaponCategory_C*                  CallFunc_Array_Get_Item_1;                         // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_WeaponRow_C*                       CallFunc_Array_Get_Item_2;                         // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_IsSelected;                 // 0x0505(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0506(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewState;                       // 0x0507(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_ModeCategoryTag_C*>         K2Node_MakeArray_Array;                            // 0x0510(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x3];                                      // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerItems_Result;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     CallFunc_GetPlayerItems_Items;                     // 0x0530(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0540(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0550(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Set_ToArray_Result;                       // 0x0558(0x0010)(ReferenceParm)
	TScriptInterface<class IWI_Workbench_C>       K2Node_DynamicCast_AsWI_Workbench;                 // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x057A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bPressed;                       // 0x057B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bPlayAnim;                      // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x057D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x057E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAttachments_Empty;                     // 0x057F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFItemInfo>                     CallFunc_GetAttachments_Attachments;               // 0x0580(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FFItemInfo                             CallFunc_Array_Get_Item_3;                         // 0x0590(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x07B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x07B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x07B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B7[0x1];                                      // 0x07B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x07B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x07C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C9[0x3];                                      // 0x07C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x07CC(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x07D4(0x0008)(NoDestructor)
};
static_assert(alignof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab");
static_assert(sizeof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab) == 0x0007E0, "Wrong size on WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, EntryPoint) == 0x000000, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_Event_NewPosition) == 0x000008, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_Event_NewPosition' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_ComponentBoundEvent_CategoryIndex) == 0x000010, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_ComponentBoundEvent_CategoryIndex' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_CustomEvent_Active_weapon) == 0x000020, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_CustomEvent_Active_weapon' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_CustomEvent_Weapon_Info) == 0x000028, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_CustomEvent_Weapon_Info' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Array_Length_ReturnValue) == 0x000248, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_Event_NewItem) == 0x000250, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_Event_NewItem' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, Temp_int_Loop_Counter_Variable) == 0x000470, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Add_IntInt_ReturnValue) == 0x000474, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_SwitchEnum_CmpSuccess) == 0x000478, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_GetOwningPlayer_ReturnValue) == 0x000480, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_K2_GetPawn_ReturnValue) == 0x000488, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_DynamicCast_AsSurvival_Player) == 0x000490, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_DynamicCast_bSuccess) == 0x000498, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_IsValid_ReturnValue) == 0x000499, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_UpdateWeaponStructure_bResult) == 0x00049A, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_UpdateWeaponStructure_bResult' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_IsValid_ReturnValue_1) == 0x00049B, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, Temp_int_Array_Index_Variable_1) == 0x00049C, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_Event_Type) == 0x0004A0, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_Event_Text) == 0x0004A8, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_Event_Duration_1) == 0x0004C0, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_Event_Duration_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_Event_Duration) == 0x0004C8, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_Event_Duration' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_Event_Lock) == 0x0004D0, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_Event_Lock' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, Temp_int_Loop_Counter_Variable_1) == 0x0004D4, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_CreateDelegate_OutputDelegate) == 0x0004D8, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Add_IntInt_ReturnValue_1) == 0x0004E8, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, Temp_int_Array_Index_Variable_2) == 0x0004EC, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Array_Get_Item_1) == 0x0004F0, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Array_Get_Item_2) == 0x0004F8, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Array_Length_ReturnValue_1) == 0x000500, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Less_IntInt_ReturnValue) == 0x000504, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_GetIsSelected_IsSelected) == 0x000505, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_GetIsSelected_IsSelected' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_IsValid_ReturnValue_2) == 0x000506, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_CustomEvent_NewState) == 0x000507, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, Temp_int_Loop_Counter_Variable_2) == 0x000508, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_MakeArray_Array) == 0x000510, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Less_IntInt_ReturnValue_1) == 0x000520, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Add_IntInt_ReturnValue_2) == 0x000524, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_GetPlayerItems_Result) == 0x000528, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_GetPlayerItems_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_GetPlayerItems_Items) == 0x000530, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_GetPlayerItems_Items' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_CreateDelegate_OutputDelegate_1) == 0x000540, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000550, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Set_ToArray_Result) == 0x000558, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_DynamicCast_AsWI_Workbench) == 0x000568, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_DynamicCast_AsWI_Workbench' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_DynamicCast_bSuccess_1) == 0x000578, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000579, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_BooleanAND_ReturnValue) == 0x00057A, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_CustomEvent_bPressed) == 0x00057B, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_CustomEvent_bPressed' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_CustomEvent_bPlayAnim) == 0x00057C, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_CustomEvent_bPlayAnim' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00057D, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_IsValid_ReturnValue_3) == 0x00057E, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_GetAttachments_Empty) == 0x00057F, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_GetAttachments_Empty' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_GetAttachments_Attachments) == 0x000580, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_GetAttachments_Attachments' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Array_Get_Item_3) == 0x000590, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Array_Length_ReturnValue_2) == 0x0007B0, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Less_IntInt_ReturnValue_2) == 0x0007B4, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Array_Contains_ReturnValue) == 0x0007B5, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_Not_PreBool_ReturnValue) == 0x0007B6, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x0007B8, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x0007C0, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, CallFunc_IsValid_ReturnValue_4) == 0x0007C8, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_Event_InFocusEvent_1) == 0x0007CC, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab, K2Node_Event_InFocusEvent) == 0x0007D4, "Member 'WBP_MainWeaponTab_C_ExecuteUbergraph_WBP_MainWeaponTab::K2Node_Event_InFocusEvent' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.FindItems (Valid)
// 0x0370 (0x0370 - 0x0000)
struct WBP_MainWeaponTab_C_FindItems__Valid_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     ValidItems;                                        // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TSet<class UJSIContainer_C*>                  Containers;                                        // 0x0018(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FFItemInfo>                     Items;                                             // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Dublicate;                                         // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainerItems;         // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainersData;         // 0x00C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x00D0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0140(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_FindItems__Valid_) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_FindItems__Valid_");
static_assert(sizeof(WBP_MainWeaponTab_C_FindItems__Valid_) == 0x000370, "Wrong size on WBP_MainWeaponTab_C_FindItems__Valid_");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, Result) == 0x000000, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, ValidItems) == 0x000008, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::ValidItems' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, Containers) == 0x000018, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::Containers' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, Items) == 0x000068, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::Items' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, Dublicate) == 0x000078, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::Dublicate' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000080, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_GetOwningPlayer_ReturnValue) == 0x000088, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_K2_GetPawn_ReturnValue) == 0x000090, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, Temp_int_Array_Index_Variable) == 0x000098, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, K2Node_DynamicCast_AsSurvival_Player) == 0x0000A0, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_getItemsInventory_ContainerItems) == 0x0000B0, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_getItemsInventory_ContainerItems' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_getItemsInventory_ContainersData) == 0x0000C0, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_getItemsInventory_ContainersData' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000140, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_Less_IntInt_ReturnValue) == 0x000360, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_Array_Add_ReturnValue) == 0x000364, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_IsValid_ReturnValue) == 0x000368, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, K2Node_SwitchEnum_CmpSuccess) == 0x000369, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_FindItems__Valid_, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00036A, "Member 'WBP_MainWeaponTab_C_FindItems__Valid_::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetActiveAttachment
// 0x0228 (0x0228 - 0x0000)
struct WBP_MainWeaponTab_C_GetActiveAttachment final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             Item;                                              // 0x0008(0x0220)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetActiveAttachment) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_GetActiveAttachment");
static_assert(sizeof(WBP_MainWeaponTab_C_GetActiveAttachment) == 0x000228, "Wrong size on WBP_MainWeaponTab_C_GetActiveAttachment");
static_assert(offsetof(WBP_MainWeaponTab_C_GetActiveAttachment, Result) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetActiveAttachment::Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetActiveAttachment, Item) == 0x000008, "Member 'WBP_MainWeaponTab_C_GetActiveAttachment::Item' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetActiveCategory
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainWeaponTab_C_GetActiveCategory final
{
public:
	class UWBP_ModeCategoryTag_C*                 Param_ActiveCategory;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetActiveCategory) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_GetActiveCategory");
static_assert(sizeof(WBP_MainWeaponTab_C_GetActiveCategory) == 0x000008, "Wrong size on WBP_MainWeaponTab_C_GetActiveCategory");
static_assert(offsetof(WBP_MainWeaponTab_C_GetActiveCategory, Param_ActiveCategory) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetActiveCategory::Param_ActiveCategory' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetAttachmentTagsWindowVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainWeaponTab_C_GetAttachmentTagsWindowVisible final
{
public:
	bool                                          Param_bAttachmentTagsWindowVisible;                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetAttachmentTagsWindowVisible) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_GetAttachmentTagsWindowVisible");
static_assert(sizeof(WBP_MainWeaponTab_C_GetAttachmentTagsWindowVisible) == 0x000001, "Wrong size on WBP_MainWeaponTab_C_GetAttachmentTagsWindowVisible");
static_assert(offsetof(WBP_MainWeaponTab_C_GetAttachmentTagsWindowVisible, Param_bAttachmentTagsWindowVisible) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetAttachmentTagsWindowVisible::Param_bAttachmentTagsWindowVisible' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetAttachmentWindowVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainWeaponTab_C_GetAttachmentWindowVisible final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetAttachmentWindowVisible) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_GetAttachmentWindowVisible");
static_assert(sizeof(WBP_MainWeaponTab_C_GetAttachmentWindowVisible) == 0x000001, "Wrong size on WBP_MainWeaponTab_C_GetAttachmentWindowVisible");
static_assert(offsetof(WBP_MainWeaponTab_C_GetAttachmentWindowVisible, Param_IsVisible) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetAttachmentWindowVisible::Param_IsVisible' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetBaseAttachment
// 0x0014 (0x0014 - 0x0000)
struct WBP_MainWeaponTab_C_GetBaseAttachment final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentInfo                        Attchment;                                         // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetBaseAttachment) == 0x000004, "Wrong alignment on WBP_MainWeaponTab_C_GetBaseAttachment");
static_assert(sizeof(WBP_MainWeaponTab_C_GetBaseAttachment) == 0x000014, "Wrong size on WBP_MainWeaponTab_C_GetBaseAttachment");
static_assert(offsetof(WBP_MainWeaponTab_C_GetBaseAttachment, Result) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetBaseAttachment::Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetBaseAttachment, Attchment) == 0x000004, "Member 'WBP_MainWeaponTab_C_GetBaseAttachment::Attchment' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetDefaultCustomizations
// 0x0300 (0x0300 - 0x0000)
struct WBP_MainWeaponTab_C_GetDefaultCustomizations final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     Items;                                             // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          FunctionResult;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     FunctionItems;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_CustomizationData                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UPaperSprite>            CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00A8(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	struct FFItemInfo                             K2Node_MakeStruct_FItemInfo;                       // 0x00D8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetDefaultCustomizations) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_GetDefaultCustomizations");
static_assert(sizeof(WBP_MainWeaponTab_C_GetDefaultCustomizations) == 0x000300, "Wrong size on WBP_MainWeaponTab_C_GetDefaultCustomizations");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, Result) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, Items) == 0x000008, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::Items' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, FunctionResult) == 0x000018, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::FunctionResult' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, FunctionItems) == 0x000020, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::FunctionItems' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00003C, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000040, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, CallFunc_Array_Get_Item) == 0x000054, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A0, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000A8, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, K2Node_MakeStruct_FItemInfo) == 0x0000D8, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::K2Node_MakeStruct_FItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDefaultCustomizations, CallFunc_Array_Add_ReturnValue) == 0x0002F8, "Member 'WBP_MainWeaponTab_C_GetDefaultCustomizations::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetDependencyAttachment
// 0x0230 (0x0230 - 0x0000)
struct WBP_MainWeaponTab_C_GetDependencyAttachment final
{
public:
	E_TypesOfModes                                Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             Item;                                              // 0x0008(0x0220)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	E_DependenciesRule                            Rule;                                              // 0x0228(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetDependencyAttachment) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_GetDependencyAttachment");
static_assert(sizeof(WBP_MainWeaponTab_C_GetDependencyAttachment) == 0x000230, "Wrong size on WBP_MainWeaponTab_C_GetDependencyAttachment");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDependencyAttachment, Result) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetDependencyAttachment::Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDependencyAttachment, Item) == 0x000008, "Member 'WBP_MainWeaponTab_C_GetDependencyAttachment::Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetDependencyAttachment, Rule) == 0x000228, "Member 'WBP_MainWeaponTab_C_GetDependencyAttachment::Rule' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetLock
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainWeaponTab_C_GetLock final
{
public:
	bool                                          Param_Lock;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetLock) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_GetLock");
static_assert(sizeof(WBP_MainWeaponTab_C_GetLock) == 0x000001, "Wrong size on WBP_MainWeaponTab_C_GetLock");
static_assert(offsetof(WBP_MainWeaponTab_C_GetLock, Param_Lock) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetLock::Param_Lock' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetLocked
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainWeaponTab_C_GetLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetLocked) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_GetLocked");
static_assert(sizeof(WBP_MainWeaponTab_C_GetLocked) == 0x000001, "Wrong size on WBP_MainWeaponTab_C_GetLocked");
static_assert(offsetof(WBP_MainWeaponTab_C_GetLocked, Locked) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetLocked::Locked' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetNewCategoryType
// 0x0012 (0x0012 - 0x0000)
struct WBP_MainWeaponTab_C_GetNewCategoryType final
{
public:
	EWE_WorkbenchCategoryType                     CategoryType;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWE_WorkbenchCategoryType                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWE_WorkbenchCategoryType                     Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWE_WorkbenchCategoryType                     Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWE_WorkbenchCategoryType                     K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWE_WorkbenchCategoryType                     K2Node_Select_Default_1;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetNewCategoryType) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_GetNewCategoryType");
static_assert(sizeof(WBP_MainWeaponTab_C_GetNewCategoryType) == 0x000012, "Wrong size on WBP_MainWeaponTab_C_GetNewCategoryType");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CategoryType) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CategoryType' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, Temp_byte_Variable) == 0x000001, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, Temp_bool_Variable) == 0x000003, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000007, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000008, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000009, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00000A, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00000C, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CallFunc_BooleanOR_ReturnValue_1) == 0x00000D, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CallFunc_BooleanOR_ReturnValue_2) == 0x00000E, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, CallFunc_BooleanOR_ReturnValue_3) == 0x00000F, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, K2Node_Select_Default) == 0x000010, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetNewCategoryType, K2Node_Select_Default_1) == 0x000011, "Member 'WBP_MainWeaponTab_C_GetNewCategoryType::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetPlayerItems
// 0x0310 (0x0310 - 0x0000)
struct WBP_MainWeaponTab_C_GetPlayerItems final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     Items;                                             // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FFItemInfo>                     FunctionItems;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          FunctionResult;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainerItems;         // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          CallFunc_getItemsInventory_ContainersData;         // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0078(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x00E8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetPlayerItems) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_GetPlayerItems");
static_assert(sizeof(WBP_MainWeaponTab_C_GetPlayerItems) == 0x000310, "Wrong size on WBP_MainWeaponTab_C_GetPlayerItems");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, Result) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, Items) == 0x000008, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::Items' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, FunctionItems) == 0x000018, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::FunctionItems' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, FunctionResult) == 0x000028, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::FunctionResult' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000038, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000040, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, K2Node_DynamicCast_AsSurvival_Player) == 0x000048, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, CallFunc_getItemsInventory_ContainerItems) == 0x000058, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::CallFunc_getItemsInventory_ContainerItems' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, CallFunc_getItemsInventory_ContainersData) == 0x000068, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::CallFunc_getItemsInventory_ContainersData' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, CallFunc_Array_Get_Item) == 0x000078, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x0000E8, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, CallFunc_Less_IntInt_ReturnValue) == 0x000308, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_GetPlayerItems, CallFunc_Array_Add_ReturnValue) == 0x00030C, "Member 'WBP_MainWeaponTab_C_GetPlayerItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.LockWeaponListsScroll
// 0x0009 (0x0009 - 0x0000)
struct WBP_MainWeaponTab_C_LockWeaponListsScroll final
{
public:
	bool                                          bLock;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeMouseWheel                            Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeMouseWheel                            Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeMouseWheel                            K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_LockWeaponListsScroll) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_LockWeaponListsScroll");
static_assert(sizeof(WBP_MainWeaponTab_C_LockWeaponListsScroll) == 0x000009, "Wrong size on WBP_MainWeaponTab_C_LockWeaponListsScroll");
static_assert(offsetof(WBP_MainWeaponTab_C_LockWeaponListsScroll, bLock) == 0x000000, "Member 'WBP_MainWeaponTab_C_LockWeaponListsScroll::bLock' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_LockWeaponListsScroll, Temp_byte_Variable) == 0x000001, "Member 'WBP_MainWeaponTab_C_LockWeaponListsScroll::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_LockWeaponListsScroll, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_MainWeaponTab_C_LockWeaponListsScroll::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_LockWeaponListsScroll, Temp_bool_Variable) == 0x000003, "Member 'WBP_MainWeaponTab_C_LockWeaponListsScroll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_LockWeaponListsScroll, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_MainWeaponTab_C_LockWeaponListsScroll::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_LockWeaponListsScroll, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_MainWeaponTab_C_LockWeaponListsScroll::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_LockWeaponListsScroll, K2Node_Select_Default) == 0x000006, "Member 'WBP_MainWeaponTab_C_LockWeaponListsScroll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_LockWeaponListsScroll, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_MainWeaponTab_C_LockWeaponListsScroll::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_LockWeaponListsScroll, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_MainWeaponTab_C_LockWeaponListsScroll::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.On Play Animation 
// 0x0018 (0x0018 - 0x0000)
struct WBP_MainWeaponTab_C_On_Play_Animation_ final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewState;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_On_Play_Animation_) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_On_Play_Animation_");
static_assert(sizeof(WBP_MainWeaponTab_C_On_Play_Animation_) == 0x000018, "Wrong size on WBP_MainWeaponTab_C_On_Play_Animation_");
static_assert(offsetof(WBP_MainWeaponTab_C_On_Play_Animation_, Animation) == 0x000000, "Member 'WBP_MainWeaponTab_C_On_Play_Animation_::Animation' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_On_Play_Animation_, NewState) == 0x000008, "Member 'WBP_MainWeaponTab_C_On_Play_Animation_::NewState' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_On_Play_Animation_, Temp_bool_Variable) == 0x000009, "Member 'WBP_MainWeaponTab_C_On_Play_Animation_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_On_Play_Animation_, Temp_byte_Variable) == 0x00000A, "Member 'WBP_MainWeaponTab_C_On_Play_Animation_::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_On_Play_Animation_, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_MainWeaponTab_C_On_Play_Animation_::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_On_Play_Animation_, K2Node_Select_Default) == 0x00000C, "Member 'WBP_MainWeaponTab_C_On_Play_Animation_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_On_Play_Animation_, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_MainWeaponTab_C_On_Play_Animation_::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnActiveWeaponRowChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainWeaponTab_C_OnActiveWeaponRowChanged__DelegateSignature final
{
public:
	class UWBP_WeaponRow_C*                       NewActiveWeaponRow;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnActiveWeaponRowChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnActiveWeaponRowChanged__DelegateSignature");
static_assert(sizeof(WBP_MainWeaponTab_C_OnActiveWeaponRowChanged__DelegateSignature) == 0x000008, "Wrong size on WBP_MainWeaponTab_C_OnActiveWeaponRowChanged__DelegateSignature");
static_assert(offsetof(WBP_MainWeaponTab_C_OnActiveWeaponRowChanged__DelegateSignature, NewActiveWeaponRow) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnActiveWeaponRowChanged__DelegateSignature::NewActiveWeaponRow' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnAddedInFocusPath__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainWeaponTab_C_OnAddedInFocusPath__DelegateSignature final
{
public:
	bool                                          bAdded;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnAddedInFocusPath__DelegateSignature) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_OnAddedInFocusPath__DelegateSignature");
static_assert(sizeof(WBP_MainWeaponTab_C_OnAddedInFocusPath__DelegateSignature) == 0x000001, "Wrong size on WBP_MainWeaponTab_C_OnAddedInFocusPath__DelegateSignature");
static_assert(offsetof(WBP_MainWeaponTab_C_OnAddedInFocusPath__DelegateSignature, bAdded) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnAddedInFocusPath__DelegateSignature::bAdded' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainWeaponTab_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on WBP_MainWeaponTab_C_OnAddedToFocusPath");
static_assert(sizeof(WBP_MainWeaponTab_C_OnAddedToFocusPath) == 0x000008, "Wrong size on WBP_MainWeaponTab_C_OnAddedToFocusPath");
static_assert(offsetof(WBP_MainWeaponTab_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnAttachmentChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainWeaponTab_C_OnAttachmentChanged__DelegateSignature final
{
public:
	class UWBP_WeaponRow_C*                       WeaponRow;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnAttachmentChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnAttachmentChanged__DelegateSignature");
static_assert(sizeof(WBP_MainWeaponTab_C_OnAttachmentChanged__DelegateSignature) == 0x000008, "Wrong size on WBP_MainWeaponTab_C_OnAttachmentChanged__DelegateSignature");
static_assert(offsetof(WBP_MainWeaponTab_C_OnAttachmentChanged__DelegateSignature, WeaponRow) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnAttachmentChanged__DelegateSignature::WeaponRow' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnAttachmentVisibilityChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainWeaponTab_C_OnAttachmentVisibilityChange__DelegateSignature final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnAttachmentVisibilityChange__DelegateSignature) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_OnAttachmentVisibilityChange__DelegateSignature");
static_assert(sizeof(WBP_MainWeaponTab_C_OnAttachmentVisibilityChange__DelegateSignature) == 0x000001, "Wrong size on WBP_MainWeaponTab_C_OnAttachmentVisibilityChange__DelegateSignature");
static_assert(offsetof(WBP_MainWeaponTab_C_OnAttachmentVisibilityChange__DelegateSignature, Visible) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnAttachmentVisibilityChange__DelegateSignature::Visible' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnInitialize
// 0x0068 (0x0068 - 0x0000)
struct WBP_MainWeaponTab_C_OnInitialize final
{
public:
	bool                                          ReMinusInit;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class UWBP_WeaponCategory_C*                  CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFItemInfo& WeaponInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_WeaponRow_C* NewActiveWeaponRow)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_WeaponCategory_C*                  CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_WeaponRow_C*                       CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnInitialize) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnInitialize");
static_assert(sizeof(WBP_MainWeaponTab_C_OnInitialize) == 0x000068, "Wrong size on WBP_MainWeaponTab_C_OnInitialize");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, ReMinusInit) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnInitialize::ReMinusInit' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_MainWeaponTab_C_OnInitialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, K2Node_MakeArray_Array) == 0x000008, "Member 'WBP_MainWeaponTab_C_OnInitialize::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WBP_MainWeaponTab_C_OnInitialize::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_MainWeaponTab_C_OnInitialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'WBP_MainWeaponTab_C_OnInitialize::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_MainWeaponTab_C_OnInitialize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, CallFunc_Array_AddUnique_ReturnValue) == 0x000048, "Member 'WBP_MainWeaponTab_C_OnInitialize::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, CallFunc_IsValid_ReturnValue_1) == 0x00004C, "Member 'WBP_MainWeaponTab_C_OnInitialize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'WBP_MainWeaponTab_C_OnInitialize::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, CallFunc_IsValid_ReturnValue_2) == 0x000058, "Member 'WBP_MainWeaponTab_C_OnInitialize::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnInitialize, CallFunc_AddChild_ReturnValue) == 0x000060, "Member 'WBP_MainWeaponTab_C_OnInitialize::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnKeyDown
// 0x01E8 (0x01E8 - 0x0000)
struct WBP_MainWeaponTab_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0130(0x00B8)()
};
static_assert(alignof(WBP_MainWeaponTab_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnKeyDown");
static_assert(sizeof(WBP_MainWeaponTab_C_OnKeyDown) == 0x0001E8, "Wrong size on WBP_MainWeaponTab_C_OnKeyDown");
static_assert(offsetof(WBP_MainWeaponTab_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_MainWeaponTab_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'WBP_MainWeaponTab_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000130, "Member 'WBP_MainWeaponTab_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnLockOperation
// 0x0010 (0x0010 - 0x0000)
struct WBP_MainWeaponTab_C_OnLockOperation final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Lock;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnLockOperation) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnLockOperation");
static_assert(sizeof(WBP_MainWeaponTab_C_OnLockOperation) == 0x000010, "Wrong size on WBP_MainWeaponTab_C_OnLockOperation");
static_assert(offsetof(WBP_MainWeaponTab_C_OnLockOperation, Duration) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnLockOperation::Duration' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnLockOperation, Param_Lock) == 0x000008, "Member 'WBP_MainWeaponTab_C_OnLockOperation::Param_Lock' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnMouseMove
// 0x0238 (0x0238 - 0x0000)
struct WBP_MainWeaponTab_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetCursorDelta_ReturnValue;  // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnMouseMove) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnMouseMove");
static_assert(sizeof(WBP_MainWeaponTab_C_OnMouseMove) == 0x000238, "Wrong size on WBP_MainWeaponTab_C_OnMouseMove");
static_assert(offsetof(WBP_MainWeaponTab_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'WBP_MainWeaponTab_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnMouseMove, ReturnValue) == 0x0000B0, "Member 'WBP_MainWeaponTab_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnMouseMove, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_MainWeaponTab_C_OnMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnMouseMove, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000220, "Member 'WBP_MainWeaponTab_C_OnMouseMove::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnMouseMove, CallFunc_PointerEvent_GetCursorDelta_ReturnValue) == 0x000228, "Member 'WBP_MainWeaponTab_C_OnMouseMove::CallFunc_PointerEvent_GetCursorDelta_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnPushMessage
// 0x0028 (0x0028 - 0x0000)
struct WBP_MainWeaponTab_C_OnPushMessage final
{
public:
	EWE_MessageTypes                              Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        Duration;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnPushMessage) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnPushMessage");
static_assert(sizeof(WBP_MainWeaponTab_C_OnPushMessage) == 0x000028, "Wrong size on WBP_MainWeaponTab_C_OnPushMessage");
static_assert(offsetof(WBP_MainWeaponTab_C_OnPushMessage, Type) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnPushMessage::Type' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnPushMessage, Text) == 0x000008, "Member 'WBP_MainWeaponTab_C_OnPushMessage::Text' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnPushMessage, Duration) == 0x000020, "Member 'WBP_MainWeaponTab_C_OnPushMessage::Duration' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainWeaponTab_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on WBP_MainWeaponTab_C_OnRemovedFromFocusPath");
static_assert(sizeof(WBP_MainWeaponTab_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on WBP_MainWeaponTab_C_OnRemovedFromFocusPath");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnRotateActor
// 0x0078 (0x0078 - 0x0000)
struct WBP_MainWeaponTab_C_OnRotateActor final
{
public:
	struct FVector2D                              Delta;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PointTwo;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PointOne;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnRotateActor) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnRotateActor");
static_assert(sizeof(WBP_MainWeaponTab_C_OnRotateActor) == 0x000078, "Wrong size on WBP_MainWeaponTab_C_OnRotateActor");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, Delta) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnRotateActor::Delta' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, PointTwo) == 0x000010, "Member 'WBP_MainWeaponTab_C_OnRotateActor::PointTwo' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, PointOne) == 0x000020, "Member 'WBP_MainWeaponTab_C_OnRotateActor::PointOne' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, CallFunc_BreakVector2D_X) == 0x000030, "Member 'WBP_MainWeaponTab_C_OnRotateActor::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'WBP_MainWeaponTab_C_OnRotateActor::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_MainWeaponTab_C_OnRotateActor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'WBP_MainWeaponTab_C_OnRotateActor::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'WBP_MainWeaponTab_C_OnRotateActor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_MainWeaponTab_C_OnRotateActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x00006C, "Member 'WBP_MainWeaponTab_C_OnRotateActor::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnRotateActor, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000070, "Member 'WBP_MainWeaponTab_C_OnRotateActor::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnSelecetedWeaponTag
// 0x0348 (0x0348 - 0x0000)
struct WBP_MainWeaponTab_C_OnSelecetedWeaponTag final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            UserWidget;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 K2Node_DynamicCast_AsWBP_Mode_Category_Tag;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetButtonText_Text;                       // 0x0020(0x0018)()
	bool                                          CallFunc_GetDefaultAttachment_Result;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttachmentInfo                        CallFunc_GetDefaultAttachment_Attachment;          // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TypesOfModes                                CallFunc_GetModeType_Type;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             CallFunc_GetFMODDetachEvent_Event;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             CallFunc_GetFMODAttachEvent_Event;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDefaultSpecailAttachments_Result;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAttachmentInfo>                CallFunc_GetDefaultSpecailAttachments_Attachment;  // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetSpecailAttachments_Result;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAttachmentInfo>                CallFunc_GetSpecailAttachments_Attachment;         // 0x0080(0x0010)(ReferenceParm)
	E_TypesOfModes                                CallFunc_GetModeType_Type_1;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAttachments_Empty;                     // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     CallFunc_GetAttachments_Attachments;               // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	E_AttachmentDependencyTypes                   CallFunc_GetCurrentTypeOfDependency_Type;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetButtonIndex_Index;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_Array_Get_Item;                           // 0x00C0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02E0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnValidateDependencies_Result;            // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_8;                               // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AttachmentCell_C*                  CallFunc_AddItem_NewCellWidget;                    // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TypesOfModes                                Temp_byte_Variable;                                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x2];                                      // 0x0342(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnSelecetedWeaponTag");
static_assert(sizeof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag) == 0x000348, "Wrong size on WBP_MainWeaponTab_C_OnSelecetedWeaponTag");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Param_Index) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, UserWidget) == 0x000008, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::UserWidget' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, K2Node_DynamicCast_AsWBP_Mode_Category_Tag) == 0x000010, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::K2Node_DynamicCast_AsWBP_Mode_Category_Tag' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetButtonText_Text) == 0x000020, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetButtonText_Text' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetDefaultAttachment_Result) == 0x000038, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetDefaultAttachment_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetDefaultAttachment_Attachment) == 0x00003C, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetDefaultAttachment_Attachment' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetModeType_Type) == 0x00004C, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetModeType_Type' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetFMODDetachEvent_Event) == 0x000050, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetFMODDetachEvent_Event' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetFMODAttachEvent_Event) == 0x000058, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetFMODAttachEvent_Event' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetDefaultSpecailAttachments_Result) == 0x000060, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetDefaultSpecailAttachments_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetDefaultSpecailAttachments_Attachment) == 0x000068, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetDefaultSpecailAttachments_Attachment' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetSpecailAttachments_Result) == 0x000078, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetSpecailAttachments_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetSpecailAttachments_Attachment) == 0x000080, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetSpecailAttachments_Attachment' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetModeType_Type_1) == 0x000090, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetModeType_Type_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetAttachments_Empty) == 0x000091, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetAttachments_Empty' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetAttachments_Attachments) == 0x000098, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetAttachments_Attachments' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetCurrentTypeOfDependency_Type) == 0x0000A8, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetCurrentTypeOfDependency_Type' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B0, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_GetButtonIndex_Index) == 0x0000B4, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_GetButtonIndex_Index' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable) == 0x0002E0, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_1) == 0x0002E4, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_2) == 0x0002E8, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_3) == 0x0002EC, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_4) == 0x0002F0, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_5) == 0x0002F4, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_6) == 0x0002F8, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_7) == 0x0002FC, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_OnValidateDependencies_Result) == 0x000300, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_OnValidateDependencies_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_8) == 0x000304, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_9) == 0x000308, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_10) == 0x00030C, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_11) == 0x000310, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_12) == 0x000314, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_13) == 0x000318, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Loop_Counter_Variable) == 0x00031C, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_Less_IntInt_ReturnValue) == 0x000320, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_Add_IntInt_ReturnValue) == 0x000324, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_14) == 0x000328, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_AddItem_NewCellWidget) == 0x000330, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_AddItem_NewCellWidget' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_15) == 0x000338, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_int_Variable_16) == 0x00033C, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, Temp_byte_Variable) == 0x000340, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000341, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnSelecetedWeaponTag, K2Node_Select_Default) == 0x000344, "Member 'WBP_MainWeaponTab_C_OnSelecetedWeaponTag::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnUnSelectedWeaponTags
// 0x0070 (0x0070 - 0x0000)
struct WBP_MainWeaponTab_C_OnUnSelectedWeaponTags final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            UserWidget;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 K2Node_DynamicCast_AsWBP_Mode_Category_Tag;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AttachmentDependencyTypes                   CallFunc_GetCurrentTypeOfDependency_Type;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModeCategoryTag_C*                 K2Node_DynamicCast_AsWBP_Mode_Category_Tag_1;      // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetButtonLinked_Linked;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetButtonIndex_Index;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnUnSelectedWeaponTags");
static_assert(sizeof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags) == 0x000070, "Wrong size on WBP_MainWeaponTab_C_OnUnSelectedWeaponTags");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, Param_Index) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, UserWidget) == 0x000008, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::UserWidget' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, K2Node_DynamicCast_AsWBP_Mode_Category_Tag) == 0x000010, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::K2Node_DynamicCast_AsWBP_Mode_Category_Tag' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_GetCurrentTypeOfDependency_Type) == 0x000020, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_GetCurrentTypeOfDependency_Type' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_GetAllChildren_ReturnValue) == 0x000030, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, K2Node_DynamicCast_AsWBP_Mode_Category_Tag_1) == 0x000058, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::K2Node_DynamicCast_AsWBP_Mode_Category_Tag_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_GetButtonLinked_Linked) == 0x000061, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_GetButtonLinked_Linked' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_GetButtonIndex_Index) == 0x000064, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_GetButtonIndex_Index' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000069, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUnSelectedWeaponTags, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'WBP_MainWeaponTab_C_OnUnSelectedWeaponTags::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnUpdateAttachments
// 0x0220 (0x0220 - 0x0000)
struct WBP_MainWeaponTab_C_OnUpdateAttachments final
{
public:
	struct FFItemInfo                             NewItem;                                           // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnUpdateAttachments) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnUpdateAttachments");
static_assert(sizeof(WBP_MainWeaponTab_C_OnUpdateAttachments) == 0x000220, "Wrong size on WBP_MainWeaponTab_C_OnUpdateAttachments");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateAttachments, NewItem) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnUpdateAttachments::NewItem' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnUpdateTags
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_MainWeaponTab_C_OnUpdateTags final
{
public:
	bool                                          WithoutAnimation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewCategory;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     Items;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CountTags;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWE_WorkbenchCategoryType                     CallFunc_GetNewCategoryType_CategoryType;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDefaultCustomizations_Result;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     CallFunc_GetDefaultCustomizations_Items;           // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerItems_Result;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     CallFunc_GetPlayerItems_Items;                     // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void(int32 Index, class UUserWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index, class UUserWidget* UserWidget)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F[0x1];                                       // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModeCategoryTag_C*                 K2Node_DynamicCast_AsWBP_Mode_Category_Tag;        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartChangeAnimationForCurrentSlot_Result; // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnUpdateTags) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnUpdateTags");
static_assert(sizeof(WBP_MainWeaponTab_C_OnUpdateTags) == 0x0000D8, "Wrong size on WBP_MainWeaponTab_C_OnUpdateTags");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, WithoutAnimation) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::WithoutAnimation' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, NewCategory) == 0x000001, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::NewCategory' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, Items) == 0x000008, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::Items' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CountTags) == 0x000018, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CountTags' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_GetNewCategoryType_CategoryType) == 0x000044, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_GetNewCategoryType_CategoryType' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000045, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, K2Node_SwitchEnum_CmpSuccess) == 0x000046, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_GetDefaultCustomizations_Result) == 0x00004C, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_GetDefaultCustomizations_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_GetDefaultCustomizations_Items) == 0x000050, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_GetDefaultCustomizations_Items' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_GetPlayerItems_Result) == 0x000064, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_GetPlayerItems_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_GetPlayerItems_Items) == 0x000068, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_GetPlayerItems_Items' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, K2Node_CreateDelegate_OutputDelegate_2) == 0x000078, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, K2Node_CreateDelegate_OutputDelegate_3) == 0x000088, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, Temp_int_Variable) == 0x000098, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00009C, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_Not_PreBool_ReturnValue) == 0x00009D, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_BooleanOR_ReturnValue) == 0x00009E, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_GetAllChildren_ReturnValue) == 0x0000A0, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_BooleanOR_ReturnValue_1) == 0x0000B0, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, K2Node_DynamicCast_AsWBP_Mode_Category_Tag) == 0x0000C8, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::K2Node_DynamicCast_AsWBP_Mode_Category_Tag' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_Less_IntInt_ReturnValue) == 0x0000D1, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_OnUpdateTags, CallFunc_StartChangeAnimationForCurrentSlot_Result) == 0x0000D2, "Member 'WBP_MainWeaponTab_C_OnUpdateTags::CallFunc_StartChangeAnimationForCurrentSlot_Result' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnWeaponInfoChanged__DelegateSignature
// 0x0220 (0x0220 - 0x0000)
struct WBP_MainWeaponTab_C_OnWeaponInfoChanged__DelegateSignature final
{
public:
	struct FFItemInfo                             WeaponInfo;                                        // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnWeaponInfoChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnWeaponInfoChanged__DelegateSignature");
static_assert(sizeof(WBP_MainWeaponTab_C_OnWeaponInfoChanged__DelegateSignature) == 0x000220, "Wrong size on WBP_MainWeaponTab_C_OnWeaponInfoChanged__DelegateSignature");
static_assert(offsetof(WBP_MainWeaponTab_C_OnWeaponInfoChanged__DelegateSignature, WeaponInfo) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnWeaponInfoChanged__DelegateSignature::WeaponInfo' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.OnWeaponRowActivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainWeaponTab_C_OnWeaponRowActivated__DelegateSignature final
{
public:
	class UWBP_WeaponRow_C*                       WeaponRow;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_OnWeaponRowActivated__DelegateSignature) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_OnWeaponRowActivated__DelegateSignature");
static_assert(sizeof(WBP_MainWeaponTab_C_OnWeaponRowActivated__DelegateSignature) == 0x000008, "Wrong size on WBP_MainWeaponTab_C_OnWeaponRowActivated__DelegateSignature");
static_assert(offsetof(WBP_MainWeaponTab_C_OnWeaponRowActivated__DelegateSignature, WeaponRow) == 0x000000, "Member 'WBP_MainWeaponTab_C_OnWeaponRowActivated__DelegateSignature::WeaponRow' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainWeaponTab_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_PreConstruct");
static_assert(sizeof(WBP_MainWeaponTab_C_PreConstruct) == 0x000001, "Wrong size on WBP_MainWeaponTab_C_PreConstruct");
static_assert(offsetof(WBP_MainWeaponTab_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MainWeaponTab_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.PreparingActiveSlotForAnimation
// 0x0050 (0x0050 - 0x0000)
struct WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModeCategoryTag_C*                 K2Node_DynamicCast_AsWBP_Mode_Category_Tag;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation");
static_assert(sizeof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation) == 0x000050, "Wrong size on WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, CallFunc_GetAllChildren_ReturnValue) == 0x000018, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, K2Node_DynamicCast_AsWBP_Mode_Category_Tag) == 0x000040, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::K2Node_DynamicCast_AsWBP_Mode_Category_Tag' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00004A, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation, CallFunc_BooleanAND_ReturnValue_1) == 0x00004B, "Member 'WBP_MainWeaponTab_C_PreparingActiveSlotForAnimation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.Select_Ilem
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainWeaponTab_C_Select_Ilem final
{
public:
	class UWBP_WeaponRow_C*                       Param_Active_weapon;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_Select_Ilem) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_Select_Ilem");
static_assert(sizeof(WBP_MainWeaponTab_C_Select_Ilem) == 0x000008, "Wrong size on WBP_MainWeaponTab_C_Select_Ilem");
static_assert(offsetof(WBP_MainWeaponTab_C_Select_Ilem, Param_Active_weapon) == 0x000000, "Member 'WBP_MainWeaponTab_C_Select_Ilem::Param_Active_weapon' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.SetDefaultChangeAnimation
// 0x0048 (0x0048 - 0x0000)
struct WBP_MainWeaponTab_C_SetDefaultChangeAnimation final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModeCategoryTag_C*                 K2Node_DynamicCast_AsWBP_Mode_Category_Tag;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_SetDefaultChangeAnimation");
static_assert(sizeof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation) == 0x000048, "Wrong size on WBP_MainWeaponTab_C_SetDefaultChangeAnimation");
static_assert(offsetof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MainWeaponTab_C_SetDefaultChangeAnimation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MainWeaponTab_C_SetDefaultChangeAnimation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MainWeaponTab_C_SetDefaultChangeAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_MainWeaponTab_C_SetDefaultChangeAnimation::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_MainWeaponTab_C_SetDefaultChangeAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MainWeaponTab_C_SetDefaultChangeAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_MainWeaponTab_C_SetDefaultChangeAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation, K2Node_DynamicCast_AsWBP_Mode_Category_Tag) == 0x000038, "Member 'WBP_MainWeaponTab_C_SetDefaultChangeAnimation::K2Node_DynamicCast_AsWBP_Mode_Category_Tag' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetDefaultChangeAnimation, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_MainWeaponTab_C_SetDefaultChangeAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.SetParentReference
// 0x0008 (0x0008 - 0x0000)
struct WBP_MainWeaponTab_C_SetParentReference final
{
public:
	class UWBP_Workbench_C*                       Workbench_Ref;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_SetParentReference) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_SetParentReference");
static_assert(sizeof(WBP_MainWeaponTab_C_SetParentReference) == 0x000008, "Wrong size on WBP_MainWeaponTab_C_SetParentReference");
static_assert(offsetof(WBP_MainWeaponTab_C_SetParentReference, Workbench_Ref) == 0x000000, "Member 'WBP_MainWeaponTab_C_SetParentReference::Workbench_Ref' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.SetPositionActiveAttachment
// 0x0004 (0x0004 - 0x0000)
struct WBP_MainWeaponTab_C_SetPositionActiveAttachment final
{
public:
	int32                                         NewPosition;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_SetPositionActiveAttachment) == 0x000004, "Wrong alignment on WBP_MainWeaponTab_C_SetPositionActiveAttachment");
static_assert(sizeof(WBP_MainWeaponTab_C_SetPositionActiveAttachment) == 0x000004, "Wrong size on WBP_MainWeaponTab_C_SetPositionActiveAttachment");
static_assert(offsetof(WBP_MainWeaponTab_C_SetPositionActiveAttachment, NewPosition) == 0x000000, "Member 'WBP_MainWeaponTab_C_SetPositionActiveAttachment::NewPosition' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.SetRotateActor
// 0x0004 (0x0004 - 0x0000)
struct WBP_MainWeaponTab_C_SetRotateActor final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_SetRotateActor) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_SetRotateActor");
static_assert(sizeof(WBP_MainWeaponTab_C_SetRotateActor) == 0x000004, "Wrong size on WBP_MainWeaponTab_C_SetRotateActor");
static_assert(offsetof(WBP_MainWeaponTab_C_SetRotateActor, NewState) == 0x000000, "Member 'WBP_MainWeaponTab_C_SetRotateActor::NewState' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetRotateActor, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'WBP_MainWeaponTab_C_SetRotateActor::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetRotateActor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WBP_MainWeaponTab_C_SetRotateActor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetRotateActor, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000003, "Member 'WBP_MainWeaponTab_C_SetRotateActor::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.SetVisibilityAttahments
// 0x0003 (0x0003 - 0x0000)
struct WBP_MainWeaponTab_C_SetVisibilityAttahments final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayAnimation;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_SetVisibilityAttahments) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_SetVisibilityAttahments");
static_assert(sizeof(WBP_MainWeaponTab_C_SetVisibilityAttahments) == 0x000003, "Wrong size on WBP_MainWeaponTab_C_SetVisibilityAttahments");
static_assert(offsetof(WBP_MainWeaponTab_C_SetVisibilityAttahments, NewState) == 0x000000, "Member 'WBP_MainWeaponTab_C_SetVisibilityAttahments::NewState' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetVisibilityAttahments, bPlayAnimation) == 0x000001, "Member 'WBP_MainWeaponTab_C_SetVisibilityAttahments::bPlayAnimation' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetVisibilityAttahments, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'WBP_MainWeaponTab_C_SetVisibilityAttahments::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.SetVisibilityWeaponTags
// 0x0002 (0x0002 - 0x0000)
struct WBP_MainWeaponTab_C_SetVisibilityWeaponTags final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_SetVisibilityWeaponTags) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_SetVisibilityWeaponTags");
static_assert(sizeof(WBP_MainWeaponTab_C_SetVisibilityWeaponTags) == 0x000002, "Wrong size on WBP_MainWeaponTab_C_SetVisibilityWeaponTags");
static_assert(offsetof(WBP_MainWeaponTab_C_SetVisibilityWeaponTags, NewState) == 0x000000, "Member 'WBP_MainWeaponTab_C_SetVisibilityWeaponTags::NewState' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetVisibilityWeaponTags, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'WBP_MainWeaponTab_C_SetVisibilityWeaponTags::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.SetWeaponInfo
// 0x0220 (0x0220 - 0x0000)
struct WBP_MainWeaponTab_C_SetWeaponInfo final
{
public:
	struct FFItemInfo                             Param_Weapon_Info;                                 // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_SetWeaponInfo) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_SetWeaponInfo");
static_assert(sizeof(WBP_MainWeaponTab_C_SetWeaponInfo) == 0x000220, "Wrong size on WBP_MainWeaponTab_C_SetWeaponInfo");
static_assert(offsetof(WBP_MainWeaponTab_C_SetWeaponInfo, Param_Weapon_Info) == 0x000000, "Member 'WBP_MainWeaponTab_C_SetWeaponInfo::Param_Weapon_Info' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.SetWeaponStats
// 0x04D8 (0x04D8 - 0x0000)
struct WBP_MainWeaponTab_C_SetWeaponStats final
{
public:
	struct FBPS_WeaponData                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x04C0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x3];                                      // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Set_Percent_for_All_Rate_ImplicitCast;    // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Set_Percent_for_All_Power_ImplicitCast;   // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Set_Percent_for_All_Range_ImplicitCast;   // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Set_Percent_for_All_Stability_ImplicitCast; // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_SetWeaponStats) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_SetWeaponStats");
static_assert(sizeof(WBP_MainWeaponTab_C_SetWeaponStats) == 0x0004D8, "Wrong size on WBP_MainWeaponTab_C_SetWeaponStats");
static_assert(offsetof(WBP_MainWeaponTab_C_SetWeaponStats, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'WBP_MainWeaponTab_C_SetWeaponStats::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetWeaponStats, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0004C0, "Member 'WBP_MainWeaponTab_C_SetWeaponStats::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetWeaponStats, CallFunc_Set_Percent_for_All_Rate_ImplicitCast) == 0x0004C4, "Member 'WBP_MainWeaponTab_C_SetWeaponStats::CallFunc_Set_Percent_for_All_Rate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetWeaponStats, CallFunc_Set_Percent_for_All_Power_ImplicitCast) == 0x0004C8, "Member 'WBP_MainWeaponTab_C_SetWeaponStats::CallFunc_Set_Percent_for_All_Power_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetWeaponStats, CallFunc_Set_Percent_for_All_Range_ImplicitCast) == 0x0004CC, "Member 'WBP_MainWeaponTab_C_SetWeaponStats::CallFunc_Set_Percent_for_All_Range_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_SetWeaponStats, CallFunc_Set_Percent_for_All_Stability_ImplicitCast) == 0x0004D0, "Member 'WBP_MainWeaponTab_C_SetWeaponStats::CallFunc_Set_Percent_for_All_Stability_ImplicitCast' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.StartChangeAnimationForCurrentSlot
// 0x0030 (0x0030 - 0x0000)
struct WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot final
{
public:
	bool                                          WithoutAnimation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModeCategoryTag_C*                 ModeCategoreTagWidget;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFItemInfo>                     Item;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnUpdate_Result;                          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TypesOfModes                                CallFunc_GetModeType_Type;                         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnUpdate_Result_1;                        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmptySupportedAttachmentsList_Result;   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot");
static_assert(sizeof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot) == 0x000030, "Wrong size on WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, WithoutAnimation) == 0x000000, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::WithoutAnimation' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, ModeCategoreTagWidget) == 0x000008, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::ModeCategoreTagWidget' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, Item) == 0x000010, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, Result) == 0x000020, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, CallFunc_OnUpdate_Result) == 0x000021, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::CallFunc_OnUpdate_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, CallFunc_GetModeType_Type) == 0x000022, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::CallFunc_GetModeType_Type' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, CallFunc_IsValid_ReturnValue) == 0x000023, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, CallFunc_OnUpdate_Result_1) == 0x000024, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::CallFunc_OnUpdate_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, CallFunc_IsEmptySupportedAttachmentsList_Result) == 0x000025, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::CallFunc_IsEmptySupportedAttachmentsList_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000026, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000027, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x000028, "Member 'WBP_MainWeaponTab_C_StartChangeAnimationForCurrentSlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.ToggleFunctionButtons
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainWeaponTab_C_ToggleFunctionButtons final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_ToggleFunctionButtons) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_ToggleFunctionButtons");
static_assert(sizeof(WBP_MainWeaponTab_C_ToggleFunctionButtons) == 0x000001, "Wrong size on WBP_MainWeaponTab_C_ToggleFunctionButtons");
static_assert(offsetof(WBP_MainWeaponTab_C_ToggleFunctionButtons, NewState) == 0x000000, "Member 'WBP_MainWeaponTab_C_ToggleFunctionButtons::NewState' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.UnbindInventoryUpdate
// 0x0040 (0x0040 - 0x0000)
struct WBP_MainWeaponTab_C_UnbindInventoryUpdate final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_UnbindInventoryUpdate) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_UnbindInventoryUpdate");
static_assert(sizeof(WBP_MainWeaponTab_C_UnbindInventoryUpdate) == 0x000040, "Wrong size on WBP_MainWeaponTab_C_UnbindInventoryUpdate");
static_assert(offsetof(WBP_MainWeaponTab_C_UnbindInventoryUpdate, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_MainWeaponTab_C_UnbindInventoryUpdate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_UnbindInventoryUpdate, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_MainWeaponTab_C_UnbindInventoryUpdate::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_UnbindInventoryUpdate, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000018, "Member 'WBP_MainWeaponTab_C_UnbindInventoryUpdate::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_UnbindInventoryUpdate, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_MainWeaponTab_C_UnbindInventoryUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_UnbindInventoryUpdate, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000030, "Member 'WBP_MainWeaponTab_C_UnbindInventoryUpdate::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_UnbindInventoryUpdate, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_MainWeaponTab_C_UnbindInventoryUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.ValidateAttachments
// 0x04E0 (0x04E0 - 0x0000)
struct WBP_MainWeaponTab_C_ValidateAttachments final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Set_ToArray_Result;                       // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AttachmentCell_C*                  K2Node_DynamicCast_AsWBP_Attachment_Cell;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetItem_Item;                             // 0x0060(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x2];                                      // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0284(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAttachments_Empty;                     // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     CallFunc_GetAttachments_Attachments;               // 0x0290(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_GetPlayerItems_Result;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     CallFunc_GetPlayerItems_Items;                     // 0x02A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FFItemInfo                             CallFunc_Array_Get_Item_1;                         // 0x02B8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_ValidateAttachments) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_ValidateAttachments");
static_assert(sizeof(WBP_MainWeaponTab_C_ValidateAttachments) == 0x0004E0, "Wrong size on WBP_MainWeaponTab_C_ValidateAttachments");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Set_ToArray_Result) == 0x000010, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_GetAllChildren_ReturnValue) == 0x000030, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, K2Node_DynamicCast_AsWBP_Attachment_Cell) == 0x000050, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::K2Node_DynamicCast_AsWBP_Attachment_Cell' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_GetItem_Item) == 0x000060, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_GetItem_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Array_Contains_ReturnValue) == 0x000280, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Not_PreBool_ReturnValue) == 0x000281, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, Temp_int_Variable) == 0x000284, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_IsValid_ReturnValue_1) == 0x000288, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_GetAttachments_Empty) == 0x000289, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_GetAttachments_Empty' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_GetAttachments_Attachments) == 0x000290, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_GetAttachments_Attachments' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_GetPlayerItems_Result) == 0x0002A0, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_GetPlayerItems_Result' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_GetPlayerItems_Items) == 0x0002A8, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_GetPlayerItems_Items' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Array_Get_Item_1) == 0x0002B8, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Array_Length_ReturnValue_1) == 0x0004D8, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateAttachments, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004DC, "Member 'WBP_MainWeaponTab_C_ValidateAttachments::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.ValidateWeaponCategories
// 0x0020 (0x0020 - 0x0000)
struct WBP_MainWeaponTab_C_ValidateWeaponCategories final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_WeaponCategory_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_ValidateWeaponCategories) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_ValidateWeaponCategories");
static_assert(sizeof(WBP_MainWeaponTab_C_ValidateWeaponCategories) == 0x000020, "Wrong size on WBP_MainWeaponTab_C_ValidateWeaponCategories");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateWeaponCategories, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MainWeaponTab_C_ValidateWeaponCategories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateWeaponCategories, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MainWeaponTab_C_ValidateWeaponCategories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateWeaponCategories, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MainWeaponTab_C_ValidateWeaponCategories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateWeaponCategories, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WBP_MainWeaponTab_C_ValidateWeaponCategories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateWeaponCategories, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_MainWeaponTab_C_ValidateWeaponCategories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_ValidateWeaponCategories, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WBP_MainWeaponTab_C_ValidateWeaponCategories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.WeaponInfoChanged
// 0x0220 (0x0220 - 0x0000)
struct WBP_MainWeaponTab_C_WeaponInfoChanged final
{
public:
	struct FFItemInfo                             Param_Weapon_Info;                                 // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_WeaponInfoChanged) == 0x000008, "Wrong alignment on WBP_MainWeaponTab_C_WeaponInfoChanged");
static_assert(sizeof(WBP_MainWeaponTab_C_WeaponInfoChanged) == 0x000220, "Wrong size on WBP_MainWeaponTab_C_WeaponInfoChanged");
static_assert(offsetof(WBP_MainWeaponTab_C_WeaponInfoChanged, Param_Weapon_Info) == 0x000000, "Member 'WBP_MainWeaponTab_C_WeaponInfoChanged::Param_Weapon_Info' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.WeaponRowPressed
// 0x0002 (0x0002 - 0x0000)
struct WBP_MainWeaponTab_C_WeaponRowPressed final
{
public:
	bool                                          bPressed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayAnim;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_WeaponRowPressed) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_WeaponRowPressed");
static_assert(sizeof(WBP_MainWeaponTab_C_WeaponRowPressed) == 0x000002, "Wrong size on WBP_MainWeaponTab_C_WeaponRowPressed");
static_assert(offsetof(WBP_MainWeaponTab_C_WeaponRowPressed, bPressed) == 0x000000, "Member 'WBP_MainWeaponTab_C_WeaponRowPressed::bPressed' has a wrong offset!");
static_assert(offsetof(WBP_MainWeaponTab_C_WeaponRowPressed, bPlayAnim) == 0x000001, "Member 'WBP_MainWeaponTab_C_WeaponRowPressed::bPlayAnim' has a wrong offset!");

// Function WBP_MainWeaponTab.WBP_MainWeaponTab_C.GetIsSupportedAttachments
// 0x0001 (0x0001 - 0x0000)
struct WBP_MainWeaponTab_C_GetIsSupportedAttachments final
{
public:
	bool                                          bHasWeapon;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MainWeaponTab_C_GetIsSupportedAttachments) == 0x000001, "Wrong alignment on WBP_MainWeaponTab_C_GetIsSupportedAttachments");
static_assert(sizeof(WBP_MainWeaponTab_C_GetIsSupportedAttachments) == 0x000001, "Wrong size on WBP_MainWeaponTab_C_GetIsSupportedAttachments");
static_assert(offsetof(WBP_MainWeaponTab_C_GetIsSupportedAttachments, bHasWeapon) == 0x000000, "Member 'WBP_MainWeaponTab_C_GetIsSupportedAttachments::bHasWeapon' has a wrong offset!");

}

