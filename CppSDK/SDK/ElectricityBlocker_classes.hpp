#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElectricityBlocker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ElectricityBlocker.ElectricityBlocker_C
// 0x0088 (0x0318 - 0x0290)
class AElectricityBlocker_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ParticleLocation;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BasicMesh;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<TScriptInterface<class IElectricityBlockerListener_C>> Listeners;                                         // 0x02B8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	bool                                          IsBroken;                                          // 0x02C8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTrigger;                                        // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Trigger;                                           // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    FMODAudioCompnent;                                 // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        LerpAlpha;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartAlpha;                                        // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EndAlpha;                                          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Direction;                                         // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddListener(TScriptInterface<class IElectricityBlockerListener_C> Listener);
	void BreakBlocker();
	void BreakClientSide();
	void ExecuteUbergraph_ElectricityBlocker(int32 EntryPoint);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ElectricityBlocker_C">();
	}
	static class AElectricityBlocker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AElectricityBlocker_C>();
	}
};
static_assert(alignof(AElectricityBlocker_C) == 0x000008, "Wrong alignment on AElectricityBlocker_C");
static_assert(sizeof(AElectricityBlocker_C) == 0x000318, "Wrong size on AElectricityBlocker_C");
static_assert(offsetof(AElectricityBlocker_C, UberGraphFrame) == 0x000290, "Member 'AElectricityBlocker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, PointLight) == 0x000298, "Member 'AElectricityBlocker_C::PointLight' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, ParticleLocation) == 0x0002A0, "Member 'AElectricityBlocker_C::ParticleLocation' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, BasicMesh) == 0x0002A8, "Member 'AElectricityBlocker_C::BasicMesh' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, DefaultSceneRoot) == 0x0002B0, "Member 'AElectricityBlocker_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, Listeners) == 0x0002B8, "Member 'AElectricityBlocker_C::Listeners' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, IsBroken) == 0x0002C8, "Member 'AElectricityBlocker_C::IsBroken' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, HasTrigger) == 0x0002C9, "Member 'AElectricityBlocker_C::HasTrigger' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, Trigger) == 0x0002D0, "Member 'AElectricityBlocker_C::Trigger' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, FMODAudioCompnent) == 0x0002E0, "Member 'AElectricityBlocker_C::FMODAudioCompnent' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, Material) == 0x0002E8, "Member 'AElectricityBlocker_C::Material' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, LerpAlpha) == 0x0002F0, "Member 'AElectricityBlocker_C::LerpAlpha' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, StartAlpha) == 0x0002F8, "Member 'AElectricityBlocker_C::StartAlpha' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, EndAlpha) == 0x000300, "Member 'AElectricityBlocker_C::EndAlpha' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, Speed) == 0x000308, "Member 'AElectricityBlocker_C::Speed' has a wrong offset!");
static_assert(offsetof(AElectricityBlocker_C, Direction) == 0x000310, "Member 'AElectricityBlocker_C::Direction' has a wrong offset!");

}

