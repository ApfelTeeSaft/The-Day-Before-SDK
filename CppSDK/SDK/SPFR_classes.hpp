#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SPFR

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "SurvivalPlayer_V2_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SPFR.SPFR_C
// 0x0100 (0x4EE0 - 0x4DE0)
class ASPFR_C final : public ASurvivalPlayer_V2_C
{
public:
	uint8                                         Pad_4DD1[0x7];                                     // 0x4DD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_SPFR_C;                             // 0x4DD8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Soda_SodaBody;                                     // 0x4DE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow2_0;                                          // 0x4DE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ACameraDummy_C*                         CameraDummy;                                       // 0x4DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APositionDummy_C*                       PositionDummy;                                     // 0x4DF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AFlashlightDummy_C*                     FlashlightDummy;                                   // 0x4E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LootPoint1;                                        // 0x4E08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LootPoint2;                                        // 0x4E10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          Temp;                                              // 0x4E18(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        ClothBlendWeight;                                  // 0x4E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          Looting;                                           // 0x4E30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E31[0x7];                                     // 0x4E31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class UClass*>                    IntShakes;                                         // 0x4E38(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, int32>                    ShakesInt;                                         // 0x4E88(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AssignBlizzardController(bool FollowNow);
	void BleedWidget(bool Show);
	void ClientFunc_OnDistanceCloseContainer();
	void ExecuteUbergraph_SPFR(int32 EntryPoint);
	void FlashlightEnable(bool bNewVisibility);
	void HighlightActor();
	void InpActEvt_G_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_G_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_ThumbMouseButton2_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InteractUpdate();
	void OnBlendOut_1BD2CF324A2B700B1CDA1280516FD26D(class FName NotifyName);
	void OnBlendOut_3E23762F4C2309B1DD195BA646FC0F45(class FName NotifyName);
	void OnBlendOut_AC163B0B4250F4789333D3A89D35464A(class FName NotifyName);
	void OnCompleted_1BD2CF324A2B700B1CDA1280516FD26D(class FName NotifyName);
	void OnCompleted_3E23762F4C2309B1DD195BA646FC0F45(class FName NotifyName);
	void OnCompleted_AC163B0B4250F4789333D3A89D35464A(class FName NotifyName);
	void OnInterrupted_1BD2CF324A2B700B1CDA1280516FD26D(class FName NotifyName);
	void OnInterrupted_3E23762F4C2309B1DD195BA646FC0F45(class FName NotifyName);
	void OnInterrupted_AC163B0B4250F4789333D3A89D35464A(class FName NotifyName);
	void OnNotifyBegin_1BD2CF324A2B700B1CDA1280516FD26D(class FName NotifyName);
	void OnNotifyBegin_3E23762F4C2309B1DD195BA646FC0F45(class FName NotifyName);
	void OnNotifyBegin_AC163B0B4250F4789333D3A89D35464A(class FName NotifyName);
	void OnNotifyEnd_1BD2CF324A2B700B1CDA1280516FD26D(class FName NotifyName);
	void OnNotifyEnd_3E23762F4C2309B1DD195BA646FC0F45(class FName NotifyName);
	void OnNotifyEnd_AC163B0B4250F4789333D3A89D35464A(class FName NotifyName);
	void OpenLootPoint1();
	void OpenLootPoint2();
	void PlayCameraShake();
	void ShowF(bool Param_ShowF);
	void ShowInteractUI();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SPFR_C">();
	}
	static class ASPFR_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASPFR_C>();
	}
};
static_assert(alignof(ASPFR_C) == 0x000010, "Wrong alignment on ASPFR_C");
static_assert(sizeof(ASPFR_C) == 0x004EE0, "Wrong size on ASPFR_C");
static_assert(offsetof(ASPFR_C, UberGraphFrame_SPFR_C) == 0x004DD8, "Member 'ASPFR_C::UberGraphFrame_SPFR_C' has a wrong offset!");
static_assert(offsetof(ASPFR_C, Soda_SodaBody) == 0x004DE0, "Member 'ASPFR_C::Soda_SodaBody' has a wrong offset!");
static_assert(offsetof(ASPFR_C, Arrow2_0) == 0x004DE8, "Member 'ASPFR_C::Arrow2_0' has a wrong offset!");
static_assert(offsetof(ASPFR_C, CameraDummy) == 0x004DF0, "Member 'ASPFR_C::CameraDummy' has a wrong offset!");
static_assert(offsetof(ASPFR_C, PositionDummy) == 0x004DF8, "Member 'ASPFR_C::PositionDummy' has a wrong offset!");
static_assert(offsetof(ASPFR_C, FlashlightDummy) == 0x004E00, "Member 'ASPFR_C::FlashlightDummy' has a wrong offset!");
static_assert(offsetof(ASPFR_C, LootPoint1) == 0x004E08, "Member 'ASPFR_C::LootPoint1' has a wrong offset!");
static_assert(offsetof(ASPFR_C, LootPoint2) == 0x004E10, "Member 'ASPFR_C::LootPoint2' has a wrong offset!");
static_assert(offsetof(ASPFR_C, Temp) == 0x004E18, "Member 'ASPFR_C::Temp' has a wrong offset!");
static_assert(offsetof(ASPFR_C, ClothBlendWeight) == 0x004E28, "Member 'ASPFR_C::ClothBlendWeight' has a wrong offset!");
static_assert(offsetof(ASPFR_C, Looting) == 0x004E30, "Member 'ASPFR_C::Looting' has a wrong offset!");
static_assert(offsetof(ASPFR_C, IntShakes) == 0x004E38, "Member 'ASPFR_C::IntShakes' has a wrong offset!");
static_assert(offsetof(ASPFR_C, ShakesInt) == 0x004E88, "Member 'ASPFR_C::ShakesInt' has a wrong offset!");

}

