#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Objective

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function BP_Objective.BP_Objective_C.ActivateObjective
// 0x0008 (0x0008 - 0x0000)
struct BP_Objective_C_ActivateObjective final
{
public:
	class AHUD*                                   Param_HUD;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Objective_C_ActivateObjective) == 0x000008, "Wrong alignment on BP_Objective_C_ActivateObjective");
static_assert(sizeof(BP_Objective_C_ActivateObjective) == 0x000008, "Wrong size on BP_Objective_C_ActivateObjective");
static_assert(offsetof(BP_Objective_C_ActivateObjective, Param_HUD) == 0x000000, "Member 'BP_Objective_C_ActivateObjective::Param_HUD' has a wrong offset!");

// Function BP_Objective.BP_Objective_C.DeactivateObjective
// 0x0008 (0x0008 - 0x0000)
struct BP_Objective_C_DeactivateObjective final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Objective_C_DeactivateObjective) == 0x000008, "Wrong alignment on BP_Objective_C_DeactivateObjective");
static_assert(sizeof(BP_Objective_C_DeactivateObjective) == 0x000008, "Wrong size on BP_Objective_C_DeactivateObjective");
static_assert(offsetof(BP_Objective_C_DeactivateObjective, Delay) == 0x000000, "Member 'BP_Objective_C_DeactivateObjective::Delay' has a wrong offset!");

// Function BP_Objective.BP_Objective_C.ExecuteUbergraph_BP_Objective
// 0x0140 (0x0140 - 0x0000)
struct BP_Objective_C_ExecuteUbergraph_BP_Objective final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   K2Node_CustomEvent_HUD;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Delay;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveMark_Success;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddMark_Success;                          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Mark_C*                              CallFunc_AddMark_WMark;                            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventInstanceIsValid_ReturnValue;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Objective_C_ExecuteUbergraph_BP_Objective) == 0x000010, "Wrong alignment on BP_Objective_C_ExecuteUbergraph_BP_Objective");
static_assert(sizeof(BP_Objective_C_ExecuteUbergraph_BP_Objective) == 0x000140, "Wrong size on BP_Objective_C_ExecuteUbergraph_BP_Objective");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, EntryPoint) == 0x000000, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, K2Node_CustomEvent_HUD) == 0x000018, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::K2Node_CustomEvent_HUD' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, K2Node_CustomEvent_Delay) == 0x000020, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000048, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000060, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000078, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000088, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_RemoveMark_Success) == 0x000090, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_RemoveMark_Success' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_AddMark_Success) == 0x000091, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_AddMark_Success' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_AddMark_WMark) == 0x000098, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_AddMark_WMark' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_GetObjectClass_ReturnValue) == 0x0000A0, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0000A8, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000110, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_EventInstanceIsValid_ReturnValue) == 0x000118, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_EventInstanceIsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_Conv_BoolToString_ReturnValue) == 0x000120, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Objective_C_ExecuteUbergraph_BP_Objective, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000130, "Member 'BP_Objective_C_ExecuteUbergraph_BP_Objective::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_Objective.BP_Objective_C.OnActivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Objective_C_OnActivated__DelegateSignature final
{
public:
	class UBP_Objective_C*                        Objective;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Objective_C_OnActivated__DelegateSignature) == 0x000008, "Wrong alignment on BP_Objective_C_OnActivated__DelegateSignature");
static_assert(sizeof(BP_Objective_C_OnActivated__DelegateSignature) == 0x000008, "Wrong size on BP_Objective_C_OnActivated__DelegateSignature");
static_assert(offsetof(BP_Objective_C_OnActivated__DelegateSignature, Objective) == 0x000000, "Member 'BP_Objective_C_OnActivated__DelegateSignature::Objective' has a wrong offset!");

// Function BP_Objective.BP_Objective_C.OnCompleted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Objective_C_OnCompleted__DelegateSignature final
{
public:
	class UBP_Objective_C*                        Objective;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Objective_C_OnCompleted__DelegateSignature) == 0x000008, "Wrong alignment on BP_Objective_C_OnCompleted__DelegateSignature");
static_assert(sizeof(BP_Objective_C_OnCompleted__DelegateSignature) == 0x000008, "Wrong size on BP_Objective_C_OnCompleted__DelegateSignature");
static_assert(offsetof(BP_Objective_C_OnCompleted__DelegateSignature, Objective) == 0x000000, "Member 'BP_Objective_C_OnCompleted__DelegateSignature::Objective' has a wrong offset!");

// Function BP_Objective.BP_Objective_C.GetIsActive
// 0x0001 (0x0001 - 0x0000)
struct BP_Objective_C_GetIsActive final
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Objective_C_GetIsActive) == 0x000001, "Wrong alignment on BP_Objective_C_GetIsActive");
static_assert(sizeof(BP_Objective_C_GetIsActive) == 0x000001, "Wrong size on BP_Objective_C_GetIsActive");
static_assert(offsetof(BP_Objective_C_GetIsActive, Param_IsActive) == 0x000000, "Member 'BP_Objective_C_GetIsActive::Param_IsActive' has a wrong offset!");

// Function BP_Objective.BP_Objective_C.GetIsComplete
// 0x0001 (0x0001 - 0x0000)
struct BP_Objective_C_GetIsComplete final
{
public:
	bool                                          Param_IsComplete;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Objective_C_GetIsComplete) == 0x000001, "Wrong alignment on BP_Objective_C_GetIsComplete");
static_assert(sizeof(BP_Objective_C_GetIsComplete) == 0x000001, "Wrong size on BP_Objective_C_GetIsComplete");
static_assert(offsetof(BP_Objective_C_GetIsComplete, Param_IsComplete) == 0x000000, "Member 'BP_Objective_C_GetIsComplete::Param_IsComplete' has a wrong offset!");

// Function BP_Objective.BP_Objective_C.GetObjectiveName
// 0x0018 (0x0018 - 0x0000)
struct BP_Objective_C_GetObjectiveName final
{
public:
	class FText                                   Param_ObjectiveName;                               // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_Objective_C_GetObjectiveName) == 0x000008, "Wrong alignment on BP_Objective_C_GetObjectiveName");
static_assert(sizeof(BP_Objective_C_GetObjectiveName) == 0x000018, "Wrong size on BP_Objective_C_GetObjectiveName");
static_assert(offsetof(BP_Objective_C_GetObjectiveName, Param_ObjectiveName) == 0x000000, "Member 'BP_Objective_C_GetObjectiveName::Param_ObjectiveName' has a wrong offset!");

}

