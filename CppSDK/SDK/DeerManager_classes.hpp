#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeerManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_DeerSpawnType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass DeerManager.DeerManager_C
// 0x0068 (0x02F8 - 0x0290)
class ADeerManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxAmounOfDeers;                                   // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SpawningTimer;                                     // 0x02A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         AmountOfSpawnedDeers;                              // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_DeerV2_C*>                   AllDeers;                                          // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<int32>                                 ActiveDeersIndexes;                                // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class ABP_DeerV2_C*>                   ActiveDeers;                                       // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          NoPlayers;                                         // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CheckPlayersTimer;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CheckPlayers();
	void ExecuteUbergraph_DeerManager(int32 EntryPoint);
	TArray<class ABP_DeerV2_C*> GetActiveDeers();
	TArray<class ABP_DeerV2_C*> GetAllDeers();
	int32 GetFreeDeerIndex();
	void KillAllActiveDeers();
	void ReceiveBeginPlay();
	void RequestSpawnOfDeer(const struct FVector& Location, const struct FRotator& Rotation, E_DeerSpawnType Type, class ABP_DeerV2_C** SpawnedDeer);
	void ResetDeer(int32 DeerManagerIndex, class ABP_DeerV2_C* DeerRef);
	void SpawnDeer();
	void SpawnerRequest(int32 AmountOfDeers);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DeerManager_C">();
	}
	static class ADeerManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADeerManager_C>();
	}
};
static_assert(alignof(ADeerManager_C) == 0x000008, "Wrong alignment on ADeerManager_C");
static_assert(sizeof(ADeerManager_C) == 0x0002F8, "Wrong size on ADeerManager_C");
static_assert(offsetof(ADeerManager_C, UberGraphFrame) == 0x000290, "Member 'ADeerManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADeerManager_C, DefaultSceneRoot) == 0x000298, "Member 'ADeerManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ADeerManager_C, MaxAmounOfDeers) == 0x0002A0, "Member 'ADeerManager_C::MaxAmounOfDeers' has a wrong offset!");
static_assert(offsetof(ADeerManager_C, SpawningTimer) == 0x0002A8, "Member 'ADeerManager_C::SpawningTimer' has a wrong offset!");
static_assert(offsetof(ADeerManager_C, AmountOfSpawnedDeers) == 0x0002B0, "Member 'ADeerManager_C::AmountOfSpawnedDeers' has a wrong offset!");
static_assert(offsetof(ADeerManager_C, AllDeers) == 0x0002B8, "Member 'ADeerManager_C::AllDeers' has a wrong offset!");
static_assert(offsetof(ADeerManager_C, ActiveDeersIndexes) == 0x0002C8, "Member 'ADeerManager_C::ActiveDeersIndexes' has a wrong offset!");
static_assert(offsetof(ADeerManager_C, ActiveDeers) == 0x0002D8, "Member 'ADeerManager_C::ActiveDeers' has a wrong offset!");
static_assert(offsetof(ADeerManager_C, NoPlayers) == 0x0002E8, "Member 'ADeerManager_C::NoPlayers' has a wrong offset!");
static_assert(offsetof(ADeerManager_C, CheckPlayersTimer) == 0x0002F0, "Member 'ADeerManager_C::CheckPlayersTimer' has a wrong offset!");

}

