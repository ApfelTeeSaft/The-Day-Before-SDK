#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LockpickingInfo

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_LockpickingInfo.W_LockpickingInfo_C.ExecuteUbergraph_W_LockpickingInfo
// 0x00A0 (0x00A0 - 0x0000)
struct W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Message_1;                      // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	class FString                                 K2Node_CustomEvent_Message;                        // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Duration;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0050(0x0018)()
	class FString                                 K2Node_CustomEvent_InString;                       // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0078(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo) == 0x000008, "Wrong alignment on W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo");
static_assert(sizeof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo) == 0x0000A0, "Wrong size on W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, EntryPoint) == 0x000000, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, K2Node_CustomEvent_Message_1) == 0x000010, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::K2Node_CustomEvent_Message_1' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, K2Node_CustomEvent_Message) == 0x000038, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, K2Node_CustomEvent_Duration) == 0x000048, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000050, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, K2Node_CustomEvent_InString) == 0x000068, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::K2Node_CustomEvent_InString' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000078, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000090, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo, CallFunc_Delay_Duration_ImplicitCast) == 0x000098, "Member 'W_LockpickingInfo_C_ExecuteUbergraph_W_LockpickingInfo::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function W_LockpickingInfo.W_LockpickingInfo_C.ShowCustomMessage
// 0x0010 (0x0010 - 0x0000)
struct W_LockpickingInfo_C_ShowCustomMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LockpickingInfo_C_ShowCustomMessage) == 0x000008, "Wrong alignment on W_LockpickingInfo_C_ShowCustomMessage");
static_assert(sizeof(W_LockpickingInfo_C_ShowCustomMessage) == 0x000010, "Wrong size on W_LockpickingInfo_C_ShowCustomMessage");
static_assert(offsetof(W_LockpickingInfo_C_ShowCustomMessage, Message) == 0x000000, "Member 'W_LockpickingInfo_C_ShowCustomMessage::Message' has a wrong offset!");

// Function W_LockpickingInfo.W_LockpickingInfo_C.ShowCustomMessageAllTime
// 0x0010 (0x0010 - 0x0000)
struct W_LockpickingInfo_C_ShowCustomMessageAllTime final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LockpickingInfo_C_ShowCustomMessageAllTime) == 0x000008, "Wrong alignment on W_LockpickingInfo_C_ShowCustomMessageAllTime");
static_assert(sizeof(W_LockpickingInfo_C_ShowCustomMessageAllTime) == 0x000010, "Wrong size on W_LockpickingInfo_C_ShowCustomMessageAllTime");
static_assert(offsetof(W_LockpickingInfo_C_ShowCustomMessageAllTime, InString) == 0x000000, "Member 'W_LockpickingInfo_C_ShowCustomMessageAllTime::InString' has a wrong offset!");

// Function W_LockpickingInfo.W_LockpickingInfo_C.ShowCustomMessageWithTime
// 0x0018 (0x0018 - 0x0000)
struct W_LockpickingInfo_C_ShowCustomMessageWithTime final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LockpickingInfo_C_ShowCustomMessageWithTime) == 0x000008, "Wrong alignment on W_LockpickingInfo_C_ShowCustomMessageWithTime");
static_assert(sizeof(W_LockpickingInfo_C_ShowCustomMessageWithTime) == 0x000018, "Wrong size on W_LockpickingInfo_C_ShowCustomMessageWithTime");
static_assert(offsetof(W_LockpickingInfo_C_ShowCustomMessageWithTime, Message) == 0x000000, "Member 'W_LockpickingInfo_C_ShowCustomMessageWithTime::Message' has a wrong offset!");
static_assert(offsetof(W_LockpickingInfo_C_ShowCustomMessageWithTime, Duration) == 0x000010, "Member 'W_LockpickingInfo_C_ShowCustomMessageWithTime::Duration' has a wrong offset!");

}

