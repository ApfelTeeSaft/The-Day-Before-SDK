#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LP_TutorBag

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "Engine_structs.hpp"
#include "DefaultItemInfo_structs.hpp"
#include "LootPoint_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LP_TutorBag.LP_TutorBag_C
// 0x00B0 (0x0860 - 0x07B0)
class ALP_TutorBag_C final : public ALootPoint_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_LP_TutorBag_C;                      // 0x07A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       TutorialPoint3D;                                   // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Point3D;                                           // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          As_BP_Game_HUD;                                    // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              As_Surv_PC;                                        // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDefaultItemInfo>               TutorialItems;                                     // 0x07D8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, ExposeOnSpawn)
	class APlayerController*                      OwnedController;                                   // 0x07E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TSet<class FName>                             DTItemNames;                                       // 0x07F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bFreePickUp1;                                      // 0x0840(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_841[0x7];                                      // 0x0841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ActiveTutorialStage;                               // 0x0848(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ContainerOpened();
	void CustomEvent();
	void ExecuteUbergraph_LP_TutorBag(int32 EntryPoint);
	void FindItemToPoint();
	void MC_MPContainerMoveItem(int32 ContainerID, int32 ItemSlotIndex, int32 ToSlotIndex, bool Rotated_);
	void MC_RemoveItem(int32 ContainerUID, int32 ItemUID);
	void MPCFindItem(int32 ContainerUID, int32 ItemUID, bool IsContainer_, bool Shop, bool* Found, struct FContainerPickupsInfo* ItemInfo, int32* Param_Index);
	void OnTutorStageUpdated_Event(const class FString& TutorialStage);
	void Set3DWidgetVisibility(bool Visible);
	void SetItemsToPoint();
	void SetTutorial3DWidgetVisibility(bool Visible);
	void OnBeginInteract(class APawn* Player);
	void OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime);
	void OnSeen(class APawn* Player);
	void OnStopInteract(class APawn* Player);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LP_TutorBag_C">();
	}
	static class ALP_TutorBag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALP_TutorBag_C>();
	}
};
static_assert(alignof(ALP_TutorBag_C) == 0x000010, "Wrong alignment on ALP_TutorBag_C");
static_assert(sizeof(ALP_TutorBag_C) == 0x000860, "Wrong size on ALP_TutorBag_C");
static_assert(offsetof(ALP_TutorBag_C, UberGraphFrame_LP_TutorBag_C) == 0x0007A8, "Member 'ALP_TutorBag_C::UberGraphFrame_LP_TutorBag_C' has a wrong offset!");
static_assert(offsetof(ALP_TutorBag_C, TutorialPoint3D) == 0x0007B0, "Member 'ALP_TutorBag_C::TutorialPoint3D' has a wrong offset!");
static_assert(offsetof(ALP_TutorBag_C, SkeletalMesh) == 0x0007B8, "Member 'ALP_TutorBag_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ALP_TutorBag_C, Point3D) == 0x0007C0, "Member 'ALP_TutorBag_C::Point3D' has a wrong offset!");
static_assert(offsetof(ALP_TutorBag_C, As_BP_Game_HUD) == 0x0007C8, "Member 'ALP_TutorBag_C::As_BP_Game_HUD' has a wrong offset!");
static_assert(offsetof(ALP_TutorBag_C, As_Surv_PC) == 0x0007D0, "Member 'ALP_TutorBag_C::As_Surv_PC' has a wrong offset!");
static_assert(offsetof(ALP_TutorBag_C, TutorialItems) == 0x0007D8, "Member 'ALP_TutorBag_C::TutorialItems' has a wrong offset!");
static_assert(offsetof(ALP_TutorBag_C, OwnedController) == 0x0007E8, "Member 'ALP_TutorBag_C::OwnedController' has a wrong offset!");
static_assert(offsetof(ALP_TutorBag_C, DTItemNames) == 0x0007F0, "Member 'ALP_TutorBag_C::DTItemNames' has a wrong offset!");
static_assert(offsetof(ALP_TutorBag_C, bFreePickUp1) == 0x000840, "Member 'ALP_TutorBag_C::bFreePickUp1' has a wrong offset!");
static_assert(offsetof(ALP_TutorBag_C, ActiveTutorialStage) == 0x000848, "Member 'ALP_TutorBag_C::ActiveTutorialStage' has a wrong offset!");

}

