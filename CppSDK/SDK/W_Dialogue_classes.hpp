#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Dialogue

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "QuestFramework_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Dialogue.W_Dialogue_C
// 0x01F8 (0x0478 - 0x0280)
class UW_Dialogue_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HideComplete;                                      // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowComplete;                                      // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowHideSkip;                                      // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowPlayerPharases_Anim;                           // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_Shop;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FadeImage;                                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_PlayerAnswer;                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_ButtonText;                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_PlayerAnswers;                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CraftErrorMessage_C*               WBP_CraftErrorMessage;                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DialogueSubtitles_C*               WBP_DialogueSubtitles;                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_QuestCompleate_C*                  WBP_QuestCompleate;                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TipsInfo_C*                        WBP_TipsInfo;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UADSDialogue*                           Dialogue;                                          // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UADSDialogueNode*                       CurrentNode;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class UADSDialogueNode*, int32>          ResponsedDialogues;                                // 0x0308(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, Deprecated)
	FMulticastInlineDelegateProperty_             OnSelectedAnswerChanged;                           // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   NPC_TypeName;                                      // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UDataTable*                             CurrentDataTable;                                  // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexOfSelectedAnswer;                             // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvPC_C*                              CachedCotroller;                                   // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CachedPlayer;                                      // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   NPC_Personal_Name;                                 // 0x0390(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_GameHUD_C*                          CachedHUD;                                         // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnFadeAnimationStarted;                            // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           HandlerFadePhase;                                  // 0x03C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UADSDialoguePartecipantComponent*       DialogueComp;                                      // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FFMODEventInstance                     CurrentEvent;                                      // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AActor*                                 NPCTarget;                                         // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         SkipTalkingPressingCounter;                        // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SkipTalkingPressingTimer;                          // 0x03E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     NPC_Mute_Idle;                                     // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         PhrasesCount;                                      // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Phrases;                                           // 0x03FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 CurrentQuest;                                      // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           QuestTextTimer;                                    // 0x0408(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         QuestPhrasesCount;                                 // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         QuestTextUpdateFrequency;                          // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          QuestDialogueStarted;                              // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          QuestDialogueDebug;                                // 0x0419(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiscountUpdated;                                   // 0x041A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTakeItem__Tutorial_;                             // 0x041B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CloseSlide;                                        // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerCloseSlide;                                   // 0x0428(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bQuestCompleteScreenVisible;                       // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIHaveQuestions;                                   // 0x0431(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsButton;                                         // 0x0432(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433[0x1];                                      // 0x0433(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RandomN;                                           // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnSkippedCurrentPhrase;                            // 0x0438(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UQuest*                                 QuestCompleteCurrent;                              // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Quest_Gameplay_Tag;                                // 0x0450(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Big_Slides;                                   // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Slide_Name;                                        // 0x045C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Stage_Name;                                        // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void BndEvt__W_Dialogue_Button_Shop_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature();
	bool CheckSlidesWidgets();
	void ClearSkipCounter();
	void Construct();
	void Create_Player_Answers();
	void CustomSkip();
	void Destruct();
	void Discount_Upd_Fade_Notification();
	void EmptyDialogue();
	void EndingPhraseContinue(class FName RowName, double Delay);
	void ExecuteUbergraph_W_Dialogue(int32 EntryPoint);
	void ExitLeave();
	void FinishingNPCPhrases(class FName RowName);
	void Get_Animation(const struct FF_DialogueNodeInfo& DialogueInfo, int32 RandomNumber, class UAnimMontage** Animation);
	void GetDialogueSubtitleText(const struct FF_DialogueNodeInfo& DialogueNodeInfo, int32 RandomNumber, class FText* DialogueText);
	void GetFMODEvent(const struct FF_DialogueNodeInfo& DialogueInfo, int32 RandomNumber, TArray<class UFMODEvent*>& ZaglushkaSounds, TSoftObjectPtr<class UFMODEvent> ZombieSound, TSoftObjectPtr<class UFMODEvent>* OutFMODEvent);
	void GetSoundLength(const struct FF_DialogueNodeInfo& DialogueInfo, int32 RandomNumber, double* Param_SoundLength);
	void HidePressedButton(int32 PressedButtonIndex);
	void HideQuestCompleteScreen();
	void HideUnpressedButtons(int32 PressedButtonIndex);
	void IsCurrentLastPhrases(bool* Last);
	void IsCurrentPhraseDeadEnd(bool* IsDeadEnd);
	void IsTakeItem_Tutorial_(bool* TakeItem_tutorial_);
	void LoadSaveDialogue();
	void OnCloseSlide();
	void OnDiscountUpdated();
	void OnFadeAnimationStarted__DelegateSignature();
	void OnPhraseButtonClicked(int32 PhraseIndex);
	void OnPhraseButtonHovered(int32 PhraseIndex);
	void OnPhraseButtonUnhovered(int32 PhraseIndex);
	void OnQuestCompleteShow();
	void OnSelectedAnswerChanged__DelegateSignature(int32 PhraseIndex);
	void OnSelectedAnswerChanged_Callback(int32 PhraseIndex);
	void OnSkippedCurrentPhrase__DelegateSignature();
	void PickAnswer(int32 AnswerIndex);
	void PrintRandomPhrasesStates(const struct FF_DialogueNodeInfo& DialogueInfo);
	void QuestComplete(class UQuest* Object);
	void ReinitDialogue();
	void SetHasntBeenCompletedQuest(bool* Success);
	void SetTextPlayerAnswers();
	void ShowNPC_Phrase(bool* Success, double* Param_SoundLength);
	void ShowPlayerPhrases();
	void ShowSlider(bool bBigSlides, class FName SlideName);
	void SkipCurrentPhrase();
	void SoundLength(double* Sound_Length, bool* Skipped_);
	void StartFadeAnimation();
	void StopDialogue();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TimerCloseSlide_();
	void UpdateData();
	void UpdatePhrases();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Dialogue_C">();
	}
	static class UW_Dialogue_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Dialogue_C>();
	}
};
static_assert(alignof(UW_Dialogue_C) == 0x000008, "Wrong alignment on UW_Dialogue_C");
static_assert(sizeof(UW_Dialogue_C) == 0x000478, "Wrong size on UW_Dialogue_C");
static_assert(offsetof(UW_Dialogue_C, UberGraphFrame) == 0x000280, "Member 'UW_Dialogue_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, HideComplete) == 0x000288, "Member 'UW_Dialogue_C::HideComplete' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, ShowComplete) == 0x000290, "Member 'UW_Dialogue_C::ShowComplete' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, ShowHideSkip) == 0x000298, "Member 'UW_Dialogue_C::ShowHideSkip' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, ShowPlayerPharases_Anim) == 0x0002A0, "Member 'UW_Dialogue_C::ShowPlayerPharases_Anim' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, FadeIn) == 0x0002A8, "Member 'UW_Dialogue_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, Button_Shop) == 0x0002B0, "Member 'UW_Dialogue_C::Button_Shop' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, FadeImage) == 0x0002B8, "Member 'UW_Dialogue_C::FadeImage' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, Overlay_PlayerAnswer) == 0x0002C0, "Member 'UW_Dialogue_C::Overlay_PlayerAnswer' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, TextBlock_ButtonText) == 0x0002C8, "Member 'UW_Dialogue_C::TextBlock_ButtonText' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, VerticalBox_PlayerAnswers) == 0x0002D0, "Member 'UW_Dialogue_C::VerticalBox_PlayerAnswers' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, WBP_CraftErrorMessage) == 0x0002D8, "Member 'UW_Dialogue_C::WBP_CraftErrorMessage' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, WBP_DialogueSubtitles) == 0x0002E0, "Member 'UW_Dialogue_C::WBP_DialogueSubtitles' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, WBP_QuestCompleate) == 0x0002E8, "Member 'UW_Dialogue_C::WBP_QuestCompleate' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, WBP_TipsInfo) == 0x0002F0, "Member 'UW_Dialogue_C::WBP_TipsInfo' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, Dialogue) == 0x0002F8, "Member 'UW_Dialogue_C::Dialogue' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, CurrentNode) == 0x000300, "Member 'UW_Dialogue_C::CurrentNode' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, ResponsedDialogues) == 0x000308, "Member 'UW_Dialogue_C::ResponsedDialogues' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, OnSelectedAnswerChanged) == 0x000358, "Member 'UW_Dialogue_C::OnSelectedAnswerChanged' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, NPC_TypeName) == 0x000368, "Member 'UW_Dialogue_C::NPC_TypeName' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, CurrentDataTable) == 0x000370, "Member 'UW_Dialogue_C::CurrentDataTable' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, IndexOfSelectedAnswer) == 0x000378, "Member 'UW_Dialogue_C::IndexOfSelectedAnswer' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, CachedCotroller) == 0x000380, "Member 'UW_Dialogue_C::CachedCotroller' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, CachedPlayer) == 0x000388, "Member 'UW_Dialogue_C::CachedPlayer' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, NPC_Personal_Name) == 0x000390, "Member 'UW_Dialogue_C::NPC_Personal_Name' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, CachedHUD) == 0x0003A8, "Member 'UW_Dialogue_C::CachedHUD' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, OnFadeAnimationStarted) == 0x0003B0, "Member 'UW_Dialogue_C::OnFadeAnimationStarted' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, HandlerFadePhase) == 0x0003C0, "Member 'UW_Dialogue_C::HandlerFadePhase' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, DialogueComp) == 0x0003C8, "Member 'UW_Dialogue_C::DialogueComp' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, CurrentEvent) == 0x0003D0, "Member 'UW_Dialogue_C::CurrentEvent' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, NPCTarget) == 0x0003D8, "Member 'UW_Dialogue_C::NPCTarget' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, SkipTalkingPressingCounter) == 0x0003E0, "Member 'UW_Dialogue_C::SkipTalkingPressingCounter' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, SkipTalkingPressingTimer) == 0x0003E8, "Member 'UW_Dialogue_C::SkipTalkingPressingTimer' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, NPC_Mute_Idle) == 0x0003F0, "Member 'UW_Dialogue_C::NPC_Mute_Idle' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, PhrasesCount) == 0x0003F8, "Member 'UW_Dialogue_C::PhrasesCount' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, Phrases) == 0x0003FC, "Member 'UW_Dialogue_C::Phrases' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, CurrentQuest) == 0x000400, "Member 'UW_Dialogue_C::CurrentQuest' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, QuestTextTimer) == 0x000408, "Member 'UW_Dialogue_C::QuestTextTimer' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, QuestPhrasesCount) == 0x000410, "Member 'UW_Dialogue_C::QuestPhrasesCount' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, QuestTextUpdateFrequency) == 0x000414, "Member 'UW_Dialogue_C::QuestTextUpdateFrequency' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, QuestDialogueStarted) == 0x000418, "Member 'UW_Dialogue_C::QuestDialogueStarted' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, QuestDialogueDebug) == 0x000419, "Member 'UW_Dialogue_C::QuestDialogueDebug' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, DiscountUpdated) == 0x00041A, "Member 'UW_Dialogue_C::DiscountUpdated' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, IsTakeItem__Tutorial_) == 0x00041B, "Member 'UW_Dialogue_C::IsTakeItem__Tutorial_' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, CloseSlide) == 0x000420, "Member 'UW_Dialogue_C::CloseSlide' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, TimerCloseSlide) == 0x000428, "Member 'UW_Dialogue_C::TimerCloseSlide' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, bQuestCompleteScreenVisible) == 0x000430, "Member 'UW_Dialogue_C::bQuestCompleteScreenVisible' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, bIHaveQuestions) == 0x000431, "Member 'UW_Dialogue_C::bIHaveQuestions' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, bIsButton) == 0x000432, "Member 'UW_Dialogue_C::bIsButton' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, RandomN) == 0x000434, "Member 'UW_Dialogue_C::RandomN' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, OnSkippedCurrentPhrase) == 0x000438, "Member 'UW_Dialogue_C::OnSkippedCurrentPhrase' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, QuestCompleteCurrent) == 0x000448, "Member 'UW_Dialogue_C::QuestCompleteCurrent' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, Quest_Gameplay_Tag) == 0x000450, "Member 'UW_Dialogue_C::Quest_Gameplay_Tag' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, Show_Big_Slides) == 0x000458, "Member 'UW_Dialogue_C::Show_Big_Slides' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, Slide_Name) == 0x00045C, "Member 'UW_Dialogue_C::Slide_Name' has a wrong offset!");
static_assert(offsetof(UW_Dialogue_C, Stage_Name) == 0x000468, "Member 'UW_Dialogue_C::Stage_Name' has a wrong offset!");

}

