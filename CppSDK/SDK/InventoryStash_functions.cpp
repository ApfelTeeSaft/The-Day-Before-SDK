#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventoryStash

#include "Basic.hpp"

#include "InventoryStash_classes.hpp"
#include "InventoryStash_parameters.hpp"


namespace SDK
{

// Function InventoryStash.InventoryStash_C.BuildData (OnlyServer)
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LootChanceModifier            LootChanceMod                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReMinusBuild                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInventoryStash_C::BuildData__OnlyServer_(const struct FS_LootChanceModifier& LootChanceMod, bool ReMinusBuild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "BuildData (OnlyServer)");

	Params::InventoryStash_C_BuildData__OnlyServer_ Parms{};

	Parms.LootChanceMod = std::move(LootChanceMod);
	Parms.ReMinusBuild = ReMinusBuild;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryStash.InventoryStash_C.ContainerBoxClosed
// (BlueprintCallable, BlueprintEvent)

void AInventoryStash_C::ContainerBoxClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "ContainerBoxClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryStash.InventoryStash_C.ExecuteUbergraph_InventoryStash
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInventoryStash_C::ExecuteUbergraph_InventoryStash(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "ExecuteUbergraph_InventoryStash");

	Params::InventoryStash_C_ExecuteUbergraph_InventoryStash Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryStash.InventoryStash_C.GetReplicatedData (OnlyServer)
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_LootChanceModifier            LootChanceMod                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMpContentRep                    Data                                                   (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void AInventoryStash_C::GetReplicatedData__OnlyServer_(class APawn* Player, const struct FS_LootChanceModifier& LootChanceMod, struct FMpContentRep* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "GetReplicatedData (OnlyServer)");

	Params::InventoryStash_C_GetReplicatedData__OnlyServer_ Parms{};

	Parms.Player = Player;
	Parms.LootChanceMod = std::move(LootChanceMod);

	UObject::ProcessEvent(Func, &Parms);

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function InventoryStash.InventoryStash_C.InMPCMoveItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ToIndex                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInventoryStash_C::InMPCMoveItem(int32 ItemUID, int32 ToContainerUID, int32 ToIndex, bool Rotated_, bool IsContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "InMPCMoveItem");

	Params::InventoryStash_C_InMPCMoveItem Parms{};

	Parms.ItemUID = ItemUID;
	Parms.ToContainerUID = ToContainerUID;
	Parms.ToIndex = ToIndex;
	Parms.Rotated_ = Rotated_;
	Parms.IsContainer = IsContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryStash.InventoryStash_C.MC_AddNewItemToContainer
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FContainerPickupsInfo            PickupItem                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   ToSlot                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInventoryStash_C::MC_AddNewItemToContainer(int32 ToContainerUID, const struct FContainerPickupsInfo& PickupItem, int32 ToSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "MC_AddNewItemToContainer");

	Params::InventoryStash_C_MC_AddNewItemToContainer Parms{};

	Parms.ToContainerUID = ToContainerUID;
	Parms.PickupItem = std::move(PickupItem);
	Parms.ToSlot = ToSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryStash.InventoryStash_C.MC_RemoveItem
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ContainerUID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInventoryStash_C::MC_RemoveItem(int32 ContainerUID, int32 ItemUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "MC_RemoveItem");

	Params::InventoryStash_C_MC_RemoveItem Parms{};

	Parms.ContainerUID = ContainerUID;
	Parms.ItemUID = ItemUID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryStash.InventoryStash_C.MPCRemoveItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Shop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Removed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInventoryStash_C::MPCRemoveItem(int32 Uid, bool IsContainer_, bool Shop, bool* Removed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "MPCRemoveItem");

	Params::InventoryStash_C_MPCRemoveItem Parms{};

	Parms.Uid = Uid;
	Parms.IsContainer_ = IsContainer_;
	Parms.Shop = Shop;

	UObject::ProcessEvent(Func, &Parms);

	if (Removed != nullptr)
		*Removed = Parms.Removed;
}


// Function InventoryStash.InventoryStash_C.OnChangeContent
// (BlueprintCallable, BlueprintEvent)

void AInventoryStash_C::OnChangeContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "OnChangeContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryStash.InventoryStash_C.OnRep_AnimState
// (BlueprintCallable, BlueprintEvent)

void AInventoryStash_C::OnRep_AnimState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "OnRep_AnimState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryStash.InventoryStash_C.OnRep_Idle
// (BlueprintCallable, BlueprintEvent)

void AInventoryStash_C::OnRep_Idle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "OnRep_Idle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryStash.InventoryStash_C.OnRep_InventoryFetched
// (BlueprintCallable, BlueprintEvent)

void AInventoryStash_C::OnRep_InventoryFetched()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "OnRep_InventoryFetched");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryStash.InventoryStash_C.GetActorType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ActorType                             ActorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AInventoryStash_C::GetActorType(E_ActorType* ActorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "GetActorType");

	Params::InventoryStash_C_GetActorType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorType != nullptr)
		*ActorType = Parms.ActorType;
}


// Function InventoryStash.InventoryStash_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AInventoryStash_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryStash_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

