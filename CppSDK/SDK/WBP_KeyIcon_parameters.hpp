#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyIcon

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "F_KeysInfo_structs.hpp"


namespace SDK::Params
{

// Function WBP_KeyIcon.WBP_KeyIcon_C.ExecuteUbergraph_WBP_KeyIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_KeyIcon_C_ExecuteUbergraph_WBP_KeyIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyIcon_C_ExecuteUbergraph_WBP_KeyIcon) == 0x000004, "Wrong alignment on WBP_KeyIcon_C_ExecuteUbergraph_WBP_KeyIcon");
static_assert(sizeof(WBP_KeyIcon_C_ExecuteUbergraph_WBP_KeyIcon) == 0x000008, "Wrong size on WBP_KeyIcon_C_ExecuteUbergraph_WBP_KeyIcon");
static_assert(offsetof(WBP_KeyIcon_C_ExecuteUbergraph_WBP_KeyIcon, EntryPoint) == 0x000000, "Member 'WBP_KeyIcon_C_ExecuteUbergraph_WBP_KeyIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_ExecuteUbergraph_WBP_KeyIcon, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_KeyIcon_C_ExecuteUbergraph_WBP_KeyIcon::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_KeyIcon.WBP_KeyIcon_C.FindKeyIcon
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_KeyIcon_C_FindKeyIcon final
{
public:
	struct FKey                                   Param_Key;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_KeysInfo                            Out_Row;                                           // 0x0020(0x0050)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0080(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_KeysInfo                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyIcon_C_FindKeyIcon) == 0x000008, "Wrong alignment on WBP_KeyIcon_C_FindKeyIcon");
static_assert(sizeof(WBP_KeyIcon_C_FindKeyIcon) == 0x0000F8, "Wrong size on WBP_KeyIcon_C_FindKeyIcon");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, Param_Key) == 0x000000, "Member 'WBP_KeyIcon_C_FindKeyIcon::Param_Key' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, Found) == 0x000018, "Member 'WBP_KeyIcon_C_FindKeyIcon::Found' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, Out_Row) == 0x000020, "Member 'WBP_KeyIcon_C_FindKeyIcon::Out_Row' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000070, "Member 'WBP_KeyIcon_C_FindKeyIcon::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, Temp_int_Array_Index_Variable) == 0x000074, "Member 'WBP_KeyIcon_C_FindKeyIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'WBP_KeyIcon_C_FindKeyIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'WBP_KeyIcon_C_FindKeyIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000080, "Member 'WBP_KeyIcon_C_FindKeyIcon::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'WBP_KeyIcon_C_FindKeyIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, CallFunc_Array_Get_Item) == 0x000094, "Member 'WBP_KeyIcon_C_FindKeyIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'WBP_KeyIcon_C_FindKeyIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'WBP_KeyIcon_C_FindKeyIcon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000F0, "Member 'WBP_KeyIcon_C_FindKeyIcon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_FindKeyIcon, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0000F1, "Member 'WBP_KeyIcon_C_FindKeyIcon::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");

// Function WBP_KeyIcon.WBP_KeyIcon_C.GetKey
// 0x0018 (0x0018 - 0x0000)
struct WBP_KeyIcon_C_GetKey final
{
public:
	struct FKey                                   Param_Key;                                         // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyIcon_C_GetKey) == 0x000008, "Wrong alignment on WBP_KeyIcon_C_GetKey");
static_assert(sizeof(WBP_KeyIcon_C_GetKey) == 0x000018, "Wrong size on WBP_KeyIcon_C_GetKey");
static_assert(offsetof(WBP_KeyIcon_C_GetKey, Param_Key) == 0x000000, "Member 'WBP_KeyIcon_C_GetKey::Param_Key' has a wrong offset!");

// Function WBP_KeyIcon.WBP_KeyIcon_C.HoverButton
// 0x0010 (0x0010 - 0x0000)
struct WBP_KeyIcon_C_HoverButton final
{
public:
	bool                                          bHover;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyIcon_C_HoverButton) == 0x000008, "Wrong alignment on WBP_KeyIcon_C_HoverButton");
static_assert(sizeof(WBP_KeyIcon_C_HoverButton) == 0x000010, "Wrong size on WBP_KeyIcon_C_HoverButton");
static_assert(offsetof(WBP_KeyIcon_C_HoverButton, bHover) == 0x000000, "Member 'WBP_KeyIcon_C_HoverButton::bHover' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_HoverButton, Temp_bool_Variable) == 0x000001, "Member 'WBP_KeyIcon_C_HoverButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_HoverButton, Temp_byte_Variable) == 0x000002, "Member 'WBP_KeyIcon_C_HoverButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_HoverButton, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_KeyIcon_C_HoverButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_HoverButton, K2Node_Select_Default) == 0x000004, "Member 'WBP_KeyIcon_C_HoverButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_HoverButton, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_KeyIcon_C_HoverButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_KeyIcon.WBP_KeyIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_KeyIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyIcon_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_KeyIcon_C_PreConstruct");
static_assert(sizeof(WBP_KeyIcon_C_PreConstruct) == 0x000001, "Wrong size on WBP_KeyIcon_C_PreConstruct");
static_assert(offsetof(WBP_KeyIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_KeyIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_KeyIcon.WBP_KeyIcon_C.SetAdditionalControlKey
// 0x04D0 (0x04D0 - 0x0000)
struct WBP_KeyIcon_C_SetAdditionalControlKey final
{
public:
	bool                                          Shift;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ctrl;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Alt;                                               // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cmd;                                               // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Edit, BlueprintVisible)
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0020(0x00D0)()
	bool                                          CallFunc_FindKeyIcon_Found;                        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_KeysInfo                            CallFunc_FindKeyIcon_Out_Row;                      // 0x00F8(0x0050)(HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue_1;        // 0x0150(0x00D0)()
	bool                                          CallFunc_FindKeyIcon_Found_1;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_KeysInfo                            CallFunc_FindKeyIcon_Out_Row_1;                    // 0x0228(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_FindKeyIcon_Found_2;                      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_KeysInfo                            CallFunc_FindKeyIcon_Out_Row_2;                    // 0x0280(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_FindKeyIcon_Found_3;                      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_KeysInfo                            CallFunc_FindKeyIcon_Out_Row_3;                    // 0x02D8(0x0050)(HasGetValueTypeHash)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue_2;        // 0x0330(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue_3;        // 0x0400(0x00D0)()
};
static_assert(alignof(WBP_KeyIcon_C_SetAdditionalControlKey) == 0x000010, "Wrong alignment on WBP_KeyIcon_C_SetAdditionalControlKey");
static_assert(sizeof(WBP_KeyIcon_C_SetAdditionalControlKey) == 0x0004D0, "Wrong size on WBP_KeyIcon_C_SetAdditionalControlKey");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, Shift) == 0x000000, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::Shift' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, Ctrl) == 0x000001, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::Ctrl' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, Alt) == 0x000002, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::Alt' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, Cmd) == 0x000003, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::Cmd' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, Text) == 0x000008, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::Text' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000020, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_FindKeyIcon_Found) == 0x0000F0, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_FindKeyIcon_Found' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_FindKeyIcon_Out_Row) == 0x0000F8, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_FindKeyIcon_Out_Row' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_MakeBrushFromSprite_ReturnValue_1) == 0x000150, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_MakeBrushFromSprite_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_FindKeyIcon_Found_1) == 0x000220, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_FindKeyIcon_Found_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_FindKeyIcon_Out_Row_1) == 0x000228, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_FindKeyIcon_Out_Row_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_FindKeyIcon_Found_2) == 0x000278, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_FindKeyIcon_Found_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_FindKeyIcon_Out_Row_2) == 0x000280, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_FindKeyIcon_Out_Row_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_FindKeyIcon_Found_3) == 0x0002D0, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_FindKeyIcon_Found_3' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_FindKeyIcon_Out_Row_3) == 0x0002D8, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_FindKeyIcon_Out_Row_3' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_MakeBrushFromSprite_ReturnValue_2) == 0x000330, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_MakeBrushFromSprite_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetAdditionalControlKey, CallFunc_MakeBrushFromSprite_ReturnValue_3) == 0x000400, "Member 'WBP_KeyIcon_C_SetAdditionalControlKey::CallFunc_MakeBrushFromSprite_ReturnValue_3' has a wrong offset!");

// Function WBP_KeyIcon.WBP_KeyIcon_C.SetContent
// 0x01D0 (0x01D0 - 0x0000)
struct WBP_KeyIcon_C_SetContent final
{
public:
	struct FKey                                   Param_Key;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsMouseButton_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0020(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindKeyIcon_Found;                        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_KeysInfo                            CallFunc_FindKeyIcon_Out_Row;                      // 0x0040(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default_2;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetSwitcherSlot*                    CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue;     // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x00F0(0x00D0)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyIcon_C_SetContent) == 0x000010, "Wrong alignment on WBP_KeyIcon_C_SetContent");
static_assert(sizeof(WBP_KeyIcon_C_SetContent) == 0x0001D0, "Wrong size on WBP_KeyIcon_C_SetContent");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, Param_Key) == 0x000000, "Member 'WBP_KeyIcon_C_SetContent::Param_Key' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_Not_PreBool_ReturnValue_1) == 0x000019, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x00001A, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_Key_IsMouseButton_ReturnValue) == 0x00001B, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_Key_IsMouseButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000020, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_FindKeyIcon_Found) == 0x000039, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_FindKeyIcon_Found' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_FindKeyIcon_Out_Row) == 0x000040, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_FindKeyIcon_Out_Row' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_BooleanAND_ReturnValue) == 0x000092, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_BooleanAND_ReturnValue_1) == 0x000093, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_TextIsEmpty_ReturnValue) == 0x000094, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_Key_IsValid_ReturnValue) == 0x000095, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_Not_PreBool_ReturnValue_2) == 0x000096, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_Not_PreBool_ReturnValue_3) == 0x000097, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, Temp_bool_Variable) == 0x000098, "Member 'WBP_KeyIcon_C_SetContent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, K2Node_Select_Default) == 0x0000A0, "Member 'WBP_KeyIcon_C_SetContent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, Temp_bool_Variable_1) == 0x0000A8, "Member 'WBP_KeyIcon_C_SetContent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, K2Node_Select_Default_1) == 0x0000B0, "Member 'WBP_KeyIcon_C_SetContent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C8, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_Len_ReturnValue) == 0x0000D8, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, Temp_bool_Variable_2) == 0x0000DD, "Member 'WBP_KeyIcon_C_SetContent::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, K2Node_Select_Default_2) == 0x0000E0, "Member 'WBP_KeyIcon_C_SetContent::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue) == 0x0000E8, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x0000F0, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_IsValid_ReturnValue_2) == 0x0001C0, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetContent, CallFunc_IsValid_ReturnValue_3) == 0x0001C1, "Member 'WBP_KeyIcon_C_SetContent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function WBP_KeyIcon.WBP_KeyIcon_C.SetOutline
// 0x0230 (0x0230 - 0x0000)
struct WBP_KeyIcon_C_SetOutline final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0050(0x00D0)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default_1;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue_1;        // 0x0140(0x00D0)()
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue;            // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue_1;          // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyIcon_C_SetOutline) == 0x000010, "Wrong alignment on WBP_KeyIcon_C_SetOutline");
static_assert(sizeof(WBP_KeyIcon_C_SetOutline) == 0x000230, "Wrong size on WBP_KeyIcon_C_SetOutline");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, bShow) == 0x000000, "Member 'WBP_KeyIcon_C_SetOutline::bShow' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, Temp_bool_Variable) == 0x000001, "Member 'WBP_KeyIcon_C_SetOutline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, K2Node_MakeStruct_Margin) == 0x000010, "Member 'WBP_KeyIcon_C_SetOutline::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, K2Node_MakeStruct_Margin_1) == 0x000020, "Member 'WBP_KeyIcon_C_SetOutline::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000030, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, Temp_bool_Variable_1) == 0x000038, "Member 'WBP_KeyIcon_C_SetOutline::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, K2Node_Select_Default) == 0x000040, "Member 'WBP_KeyIcon_C_SetOutline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000050, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_BooleanAND_ReturnValue) == 0x000121, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_SelectInt_ReturnValue) == 0x000124, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_IsValid_ReturnValue_2) == 0x000128, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, K2Node_Select_Default_1) == 0x000130, "Member 'WBP_KeyIcon_C_SetOutline::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_MakeBrushFromSprite_ReturnValue_1) == 0x000140, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_MakeBrushFromSprite_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_IsValid_ReturnValue_3) == 0x000210, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_BooleanAND_ReturnValue_1) == 0x000211, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_GetEffectMaterial_ReturnValue) == 0x000218, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_GetEffectMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_GetEffectMaterial_ReturnValue_1) == 0x000220, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_GetEffectMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetOutline, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000228, "Member 'WBP_KeyIcon_C_SetOutline::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_KeyIcon.WBP_KeyIcon_C.SetTextPadding
// 0x0048 (0x0048 - 0x0000)
struct WBP_KeyIcon_C_SetTextPadding final
{
public:
	bool                                          OneSymbol;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcherSlot*                    CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyIcon_C_SetTextPadding) == 0x000008, "Wrong alignment on WBP_KeyIcon_C_SetTextPadding");
static_assert(sizeof(WBP_KeyIcon_C_SetTextPadding) == 0x000048, "Wrong size on WBP_KeyIcon_C_SetTextPadding");
static_assert(offsetof(WBP_KeyIcon_C_SetTextPadding, OneSymbol) == 0x000000, "Member 'WBP_KeyIcon_C_SetTextPadding::OneSymbol' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetTextPadding, K2Node_MakeStruct_Margin) == 0x000004, "Member 'WBP_KeyIcon_C_SetTextPadding::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetTextPadding, K2Node_MakeStruct_Margin_1) == 0x000014, "Member 'WBP_KeyIcon_C_SetTextPadding::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetTextPadding, Temp_bool_Variable) == 0x000024, "Member 'WBP_KeyIcon_C_SetTextPadding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetTextPadding, CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue) == 0x000028, "Member 'WBP_KeyIcon_C_SetTextPadding::CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetTextPadding, K2Node_Select_Default) == 0x000030, "Member 'WBP_KeyIcon_C_SetTextPadding::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_KeyIcon_C_SetTextPadding, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_KeyIcon_C_SetTextPadding::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_KeyIcon.WBP_KeyIcon_C.SetUsePositiveValue
// 0x0001 (0x0001 - 0x0000)
struct WBP_KeyIcon_C_SetUsePositiveValue final
{
public:
	bool                                          Param_bUsePositiveValue;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyIcon_C_SetUsePositiveValue) == 0x000001, "Wrong alignment on WBP_KeyIcon_C_SetUsePositiveValue");
static_assert(sizeof(WBP_KeyIcon_C_SetUsePositiveValue) == 0x000001, "Wrong size on WBP_KeyIcon_C_SetUsePositiveValue");
static_assert(offsetof(WBP_KeyIcon_C_SetUsePositiveValue, Param_bUsePositiveValue) == 0x000000, "Member 'WBP_KeyIcon_C_SetUsePositiveValue::Param_bUsePositiveValue' has a wrong offset!");

}

