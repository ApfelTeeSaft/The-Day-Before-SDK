#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Interact

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Interact.W_Interact_C
// 0x0168 (0x03E8 - 0x0280)
class UW_Interact_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hovered;                                           // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideLootPoint_Anim;                                // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowLootPoint_Anim;                                // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Show_Anim;                                         // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hide_Anim;                                         // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_Click;                                      // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Inactive;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_KeyIcon;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_BG;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Content;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Fill;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Inactive;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Progress_BG;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Progress_BG_1;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Progress_BG_Shadow;                                // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Progress_Fill;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Progress_Fill_Shadow;                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_23;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_60;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Interact;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Interact_Letter;                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Type;                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RingMaterial;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHold;                                            // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Letter;                                            // 0x0348(0x0018)(Edit, BlueprintVisible)
	class FText                                   Text;                                              // 0x0360(0x0018)(Edit, BlueprintVisible)
	bool                                          IsHidden;                                          // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x3];                                      // 0x0379(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                LetterOffset;                                      // 0x037C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TextOpacity;                                       // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImageOpacity;                                      // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsImageUsing;                                     // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Width;                                             // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Sprite;                                            // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnPressed;                                         // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleased;                                        // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__W_Interact_Button_Click_K2Node_ComponentBoundEvent_0_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_Interact_Button_Click_K2Node_ComponentBoundEvent_1_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__W_Interact_Button_Click_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__W_Interact_Button_Click_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void ButtonHovered(bool bIsHovered);
	void Construct();
	void ExecuteUbergraph_W_Interact(int32 EntryPoint);
	void Finished_5B7B8E9943CD2076D97CBCA421AEC644();
	void Finished_89DBDD3C4517BE018CFC9B9B26E9725A();
	void OnHovered__DelegateSignature();
	void OnPressed__DelegateSignature();
	void OnReleased__DelegateSignature();
	void OnUnhovered__DelegateSignature();
	void PlayHideAnim(bool Long);
	void PlayHideLootPointAnim(bool Long);
	void PlayShowAnim();
	void PlayShowLoopPointAnim();
	void PreConstruct(bool IsDesignTime);
	void SetFillValue(double Value, bool IsReverse);
	void SetImageOpacity(float InOpacity);
	void SetLetterText(const class FText& NewText);
	void SetState(int32 Param_Index);
	void SetText(const class FText& InText);
	void SetTextOpacity(float InOpacity);
	void StopAnimations();
	void UpdateType(bool Param_IsHold);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Interact_C">();
	}
	static class UW_Interact_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Interact_C>();
	}
};
static_assert(alignof(UW_Interact_C) == 0x000008, "Wrong alignment on UW_Interact_C");
static_assert(sizeof(UW_Interact_C) == 0x0003E8, "Wrong size on UW_Interact_C");
static_assert(offsetof(UW_Interact_C, UberGraphFrame) == 0x000280, "Member 'UW_Interact_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Hovered) == 0x000288, "Member 'UW_Interact_C::Hovered' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, HideLootPoint_Anim) == 0x000290, "Member 'UW_Interact_C::HideLootPoint_Anim' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, ShowLootPoint_Anim) == 0x000298, "Member 'UW_Interact_C::ShowLootPoint_Anim' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Show_Anim) == 0x0002A0, "Member 'UW_Interact_C::Show_Anim' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Hide_Anim) == 0x0002A8, "Member 'UW_Interact_C::Hide_Anim' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Button_Click) == 0x0002B0, "Member 'UW_Interact_C::Button_Click' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Image_Inactive) == 0x0002B8, "Member 'UW_Interact_C::Image_Inactive' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Image_KeyIcon) == 0x0002C0, "Member 'UW_Interact_C::Image_KeyIcon' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Overlay_BG) == 0x0002C8, "Member 'UW_Interact_C::Overlay_BG' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Overlay_Content) == 0x0002D0, "Member 'UW_Interact_C::Overlay_Content' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Overlay_Fill) == 0x0002D8, "Member 'UW_Interact_C::Overlay_Fill' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Overlay_Inactive) == 0x0002E0, "Member 'UW_Interact_C::Overlay_Inactive' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Progress_BG) == 0x0002E8, "Member 'UW_Interact_C::Progress_BG' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Progress_BG_1) == 0x0002F0, "Member 'UW_Interact_C::Progress_BG_1' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Progress_BG_Shadow) == 0x0002F8, "Member 'UW_Interact_C::Progress_BG_Shadow' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Progress_Fill) == 0x000300, "Member 'UW_Interact_C::Progress_Fill' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Progress_Fill_Shadow) == 0x000308, "Member 'UW_Interact_C::Progress_Fill_Shadow' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, ProgressBar_23) == 0x000310, "Member 'UW_Interact_C::ProgressBar_23' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, SizeBox_60) == 0x000318, "Member 'UW_Interact_C::SizeBox_60' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, TextBlock_Interact) == 0x000320, "Member 'UW_Interact_C::TextBlock_Interact' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, TextBlock_Interact_Letter) == 0x000328, "Member 'UW_Interact_C::TextBlock_Interact_Letter' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, WidgetSwitcher_Type) == 0x000330, "Member 'UW_Interact_C::WidgetSwitcher_Type' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, RingMaterial) == 0x000338, "Member 'UW_Interact_C::RingMaterial' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, IsHold) == 0x000340, "Member 'UW_Interact_C::IsHold' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Letter) == 0x000348, "Member 'UW_Interact_C::Letter' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Text) == 0x000360, "Member 'UW_Interact_C::Text' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, IsHidden) == 0x000378, "Member 'UW_Interact_C::IsHidden' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, LetterOffset) == 0x00037C, "Member 'UW_Interact_C::LetterOffset' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, TextOpacity) == 0x00038C, "Member 'UW_Interact_C::TextOpacity' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, ImageOpacity) == 0x000390, "Member 'UW_Interact_C::ImageOpacity' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, bIsImageUsing) == 0x000394, "Member 'UW_Interact_C::bIsImageUsing' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Width) == 0x000398, "Member 'UW_Interact_C::Width' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Height) == 0x00039C, "Member 'UW_Interact_C::Height' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, Sprite) == 0x0003A0, "Member 'UW_Interact_C::Sprite' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, OnUnhovered) == 0x0003A8, "Member 'UW_Interact_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, OnHovered) == 0x0003B8, "Member 'UW_Interact_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, OnPressed) == 0x0003C8, "Member 'UW_Interact_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UW_Interact_C, OnReleased) == 0x0003D8, "Member 'UW_Interact_C::OnReleased' has a wrong offset!");

}

