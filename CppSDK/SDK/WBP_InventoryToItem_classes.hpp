#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryToItem

#include "Basic.hpp"

#include "InfoType_structs.hpp"
#include "Engine_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "E_ShopContainer_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlotRarity_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InventoryToItem.WBP_InventoryToItem_C
// 0x0600 (0x0880 - 0x0280)
class UWBP_InventoryToItem_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CloseDialogue;                                     // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpenDialogue;                                      // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SwitchContainerCategory;                           // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_0;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Main;                                // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Pockets;                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_Shop;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_1;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_2;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_TitleContainer;                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_TitleContainer_1;                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Items;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Items_Shop;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Items_ShopCategory;                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Emptylabel;                                // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Emptylabel_1;                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_backpack;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_Buyback;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_Opacue;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_EmptyPageLabel;                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_EmptyPageLabel_1;                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextShop;                                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextShop_1;                                        // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextShopRight;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_Backpack;                            // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_Sell;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Backpack;                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_ContentBuy;                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_ContentCategory;                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_NoItems;                               // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Shop;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_ShopCategory;                          // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ScrollboxSlider_C*                 WBP_ScrollboxSlider_Backpack;                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ScrollboxSlider_C*                 WBP_ScrollboxSlider_Shop;                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ShopDialogue_C*                    WBP_ShopDialogue;                                  // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemInteractionInfo_C*             WBP_WorkbenchCraftInfo;                            // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_LabelText;                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_NoItems;                            // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_TitleContainer;                     // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SellSelectedSlot;                                  // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Craft_Item_Name;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             EntrySelected;                                     // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ProcessFinished;                                   // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FFItemInfo                             Item_Info;                                         // 0x03F0(0x0220)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             InventoryUpdated;                                  // 0x0610(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          BoundToInventoryUpdate;                            // 0x0620(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseMoney;                                          // 0x0621(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_622[0x6];                                      // 0x0622(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Action;                                            // 0x0628(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	class FText                                   Processing;                                        // 0x0640(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	class FText                                   Error_No_Free_Space;                               // 0x0658(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	class FText                                   Resource_Label;                                    // 0x0670(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             OnCreateCountChanged;                              // 0x0688(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Count;                                             // 0x0698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSelectedSlotRMBDown;                             // 0x06A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnProcessStarted;                                  // 0x06B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bPlaySwapAnimation;                                // 0x06C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar;                                            // 0x06C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C2[0x6];                                      // 0x06C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             SoundEvent_ActionStart;                            // 0x06C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FFMODEventInstance                     ProcessSound;                                      // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FText                                   Shop_Title_Text;                                   // 0x06D8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	class FText                                   ShopTitleRightText;                                // 0x06F0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             OnSellProcessStarted;                              // 0x0708(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnBuyProcessFinished;                              // 0x0718(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   ContainerBuyback;                                  // 0x0728(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnBuyBackProcessFinished;                          // 0x0740(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShopCategoryOpacue;                                // 0x0750(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ShopCategory_C*                      ShopCategoryRef;                                   // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ShopCategory_C*                      Selected_Slot_Category;                            // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_ShopCategory_C*>              EntryList;                                         // 0x0768(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<EInfoType, class UW_ShopCategory_C*>     EntryListCategory;                                 // 0x0778(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<EInfoType, class UJSI_Slot_C*>           CategoryItems;                                     // 0x07C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_ShopCategoryContainer_C*             ShopContainerRef;                                  // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   SellContainerName;                                 // 0x0820(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Container_Name;                                    // 0x0838(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             OnUpdateContainerBuyback;                          // 0x0850(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UJSIContainer_C*                        BuybackContainer;                                  // 0x0860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Buyback_Slot_Ref;                                  // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Label_Text_Switcher;                               // 0x0870(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         TitleContainerSwithcer;                            // 0x0874(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         CountItem;                                         // 0x0878(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FText Add_Item(int32 ToSlot, TSoftObjectPtr<class UObject> Image, const struct FVector2D& SlotVector, ESlotRarity Rarity, const struct FFItemInfo& ItemInfo, struct FFItemInfo* Info, class UJSI_Slot_C** SlotItemRef, class UJSIContainer_C** Container, EInfoType* InfoType, int32* AddedToSlot);
	void BndEvt__WBP_InventoryToItem_JSIContainer_Shop_K2Node_ComponentBoundEvent_2_OnContainerUpdate__DelegateSignature();
	void BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_5_OnPressedAccept__DelegateSignature(int32 Param_Count, class UJSI_Slot_C* Ref_slot);
	void BndEvt__WBP_InventoryToItem_WBP_ShopDialogue_K2Node_ComponentBoundEvent_6_OnPressedDecline__DelegateSignature();
	void BndEvt__WBP_InventoryToItem_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_1_OnParentNavigation__DelegateSignature();
	void ButtonSelected(class UW_ShopCategory_C* Param_ShopCategoryRef);
	void BuyRightMouseButtonDown(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void CalculateSellPrice(const struct FFItemInfo& ItemInfo, int32* Price);
	void ChangeSelectedSlot(class UJSI_Slot_C* SlotWidgetRef);
	void ChcekFreeSpace(bool* Return);
	void Check_Free_Space_to_Add_Item(bool* Return);
	void ClearContainer(class UJSIContainer_C* Container);
	void ClearEntryListCategory();
	void CloseDialogue_();
	void Construct();
	void CreateBuybackContainer();
	class UWidget* CustomNavigation_InfoRight(EUINavigation Param_Navigation);
	void EnableDismantleProgressBars(bool Enable);
	void EntrySelected__DelegateSignature();
	void ExecuteUbergraph_WBP_InventoryToItem(int32 EntryPoint);
	void FinalizeInit();
	void GetListEntryCategory(TArray<class UW_ShopCategory_C*>* Param_EntryList);
	void GetSelectedSlot(class UJSI_Slot_C** SelectedSlot);
	void HideAllCategory();
	void HideCategory();
	void HideOpacityAllCategory();
	void Init();
	void InventoryUpdate();
	void InventoryUpdated__DelegateSignature();
	void OnBuyBackProcessFinished__DelegateSignature(const struct FFItemInfo& FItem, class UJSI_Slot_C* Slot_Ref, int32 Param_Count);
	void OnBuyProcessFinished__DelegateSignature(const struct FFItemInfo& FItem, class UJSI_Slot_C* Slot_Ref);
	void OnCreateCountChanged__DelegateSignature(int32 Param_Count);
	void OnDownKeyConfirm();
	void OnKeyDownAccept(int32 Param_Count, class UJSI_Slot_C* Ref);
	void OnProcessStarted__DelegateSignature(const struct FFItemInfo& ItemInfo);
	void OnSelectedSlotRMBDown__DelegateSignature(class UJSI_Slot_C* SlotWidgetRef, int32 Param_Count);
	void OnSellProcessStarted__DelegateSignature(const struct FFItemInfo& FItem);
	void OnUpdateContainerBuyback__DelegateSignature();
	void OpenDialogue_(class UJSI_Slot_C* Slot_Ref);
	void PreConstruct(bool IsDesignTime);
	void ProcessFinished__DelegateSignature(const struct FFItemInfo& ItemInfo, int32 Param_Count, class UJSI_Slot_C* Ref);
	void RebindSelectionDelegate();
	void SelectedSlotBuy(class UJSI_Slot_C* Slot_Ref);
	void SelectedSlotBuyBack(class UJSI_Slot_C* Slot_Ref);
	void SelectedSlotSell(class UJSI_Slot_C* Target);
	void SellRMBClick(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void SetCount(class UJSI_Slot_C* Target, struct FFItemInfo* ItemInfo);
	void ShowAllCategory();
	void UnbindInventoryUpdate();
	void UpdateItemInfo();
	void ValidateItemInfoCount();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InventoryToItem_C">();
	}
	static class UWBP_InventoryToItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InventoryToItem_C>();
	}
};
static_assert(alignof(UWBP_InventoryToItem_C) == 0x000008, "Wrong alignment on UWBP_InventoryToItem_C");
static_assert(sizeof(UWBP_InventoryToItem_C) == 0x000880, "Wrong size on UWBP_InventoryToItem_C");
static_assert(offsetof(UWBP_InventoryToItem_C, UberGraphFrame) == 0x000280, "Member 'UWBP_InventoryToItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, CloseDialogue) == 0x000288, "Member 'UWBP_InventoryToItem_C::CloseDialogue' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, OpenDialogue) == 0x000290, "Member 'UWBP_InventoryToItem_C::OpenDialogue' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, SwitchContainerCategory) == 0x000298, "Member 'UWBP_InventoryToItem_C::SwitchContainerCategory' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, HorizontalBox_0) == 0x0002A0, "Member 'UWBP_InventoryToItem_C::HorizontalBox_0' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, HorizontalBox_Main) == 0x0002A8, "Member 'UWBP_InventoryToItem_C::HorizontalBox_Main' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, HorizontalBox_Pockets) == 0x0002B0, "Member 'UWBP_InventoryToItem_C::HorizontalBox_Pockets' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, JSIContainer_Shop) == 0x0002B8, "Member 'UWBP_InventoryToItem_C::JSIContainer_Shop' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Overlay_1) == 0x0002C0, "Member 'UWBP_InventoryToItem_C::Overlay_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Overlay_2) == 0x0002C8, "Member 'UWBP_InventoryToItem_C::Overlay_2' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Overlay_TitleContainer) == 0x0002D0, "Member 'UWBP_InventoryToItem_C::Overlay_TitleContainer' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Overlay_TitleContainer_1) == 0x0002D8, "Member 'UWBP_InventoryToItem_C::Overlay_TitleContainer_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, ScrollBox_Items) == 0x0002E0, "Member 'UWBP_InventoryToItem_C::ScrollBox_Items' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, ScrollBox_Items_Shop) == 0x0002E8, "Member 'UWBP_InventoryToItem_C::ScrollBox_Items_Shop' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, ScrollBox_Items_ShopCategory) == 0x0002F0, "Member 'UWBP_InventoryToItem_C::ScrollBox_Items_ShopCategory' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, SizeBox_Emptylabel) == 0x0002F8, "Member 'UWBP_InventoryToItem_C::SizeBox_Emptylabel' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, SizeBox_Emptylabel_1) == 0x000300, "Member 'UWBP_InventoryToItem_C::SizeBox_Emptylabel_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Spacer_backpack) == 0x000308, "Member 'UWBP_InventoryToItem_C::Spacer_backpack' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Spacer_Buyback) == 0x000310, "Member 'UWBP_InventoryToItem_C::Spacer_Buyback' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Spacer_Opacue) == 0x000318, "Member 'UWBP_InventoryToItem_C::Spacer_Opacue' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, TextBlock_EmptyPageLabel) == 0x000320, "Member 'UWBP_InventoryToItem_C::TextBlock_EmptyPageLabel' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, TextBlock_EmptyPageLabel_1) == 0x000328, "Member 'UWBP_InventoryToItem_C::TextBlock_EmptyPageLabel_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, TextShop) == 0x000330, "Member 'UWBP_InventoryToItem_C::TextShop' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, TextShop_1) == 0x000338, "Member 'UWBP_InventoryToItem_C::TextShop_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, TextShopRight) == 0x000340, "Member 'UWBP_InventoryToItem_C::TextShopRight' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, UMG_LabelText_Backpack) == 0x000348, "Member 'UWBP_InventoryToItem_C::UMG_LabelText_Backpack' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, UMG_LabelText_Sell) == 0x000350, "Member 'UWBP_InventoryToItem_C::UMG_LabelText_Sell' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, VerticalBox_Backpack) == 0x000358, "Member 'UWBP_InventoryToItem_C::VerticalBox_Backpack' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, VerticalBox_ContentBuy) == 0x000360, "Member 'UWBP_InventoryToItem_C::VerticalBox_ContentBuy' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, VerticalBox_ContentCategory) == 0x000368, "Member 'UWBP_InventoryToItem_C::VerticalBox_ContentCategory' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, VerticalBox_NoItems) == 0x000370, "Member 'UWBP_InventoryToItem_C::VerticalBox_NoItems' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, VerticalBox_Shop) == 0x000378, "Member 'UWBP_InventoryToItem_C::VerticalBox_Shop' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, VerticalBox_ShopCategory) == 0x000380, "Member 'UWBP_InventoryToItem_C::VerticalBox_ShopCategory' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, WBP_ScrollboxSlider_Backpack) == 0x000388, "Member 'UWBP_InventoryToItem_C::WBP_ScrollboxSlider_Backpack' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, WBP_ScrollboxSlider_Shop) == 0x000390, "Member 'UWBP_InventoryToItem_C::WBP_ScrollboxSlider_Shop' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, WBP_ShopDialogue) == 0x000398, "Member 'UWBP_InventoryToItem_C::WBP_ShopDialogue' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, WBP_WorkbenchCraftInfo) == 0x0003A0, "Member 'UWBP_InventoryToItem_C::WBP_WorkbenchCraftInfo' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, WidgetSwitcher_LabelText) == 0x0003A8, "Member 'UWBP_InventoryToItem_C::WidgetSwitcher_LabelText' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, WidgetSwitcher_NoItems) == 0x0003B0, "Member 'UWBP_InventoryToItem_C::WidgetSwitcher_NoItems' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, WidgetSwitcher_TitleContainer) == 0x0003B8, "Member 'UWBP_InventoryToItem_C::WidgetSwitcher_TitleContainer' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, SellSelectedSlot) == 0x0003C0, "Member 'UWBP_InventoryToItem_C::SellSelectedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Craft_Item_Name) == 0x0003C8, "Member 'UWBP_InventoryToItem_C::Craft_Item_Name' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, EntrySelected) == 0x0003D0, "Member 'UWBP_InventoryToItem_C::EntrySelected' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, ProcessFinished) == 0x0003E0, "Member 'UWBP_InventoryToItem_C::ProcessFinished' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Item_Info) == 0x0003F0, "Member 'UWBP_InventoryToItem_C::Item_Info' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, InventoryUpdated) == 0x000610, "Member 'UWBP_InventoryToItem_C::InventoryUpdated' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, BoundToInventoryUpdate) == 0x000620, "Member 'UWBP_InventoryToItem_C::BoundToInventoryUpdate' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, UseMoney) == 0x000621, "Member 'UWBP_InventoryToItem_C::UseMoney' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Action) == 0x000628, "Member 'UWBP_InventoryToItem_C::Action' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Processing) == 0x000640, "Member 'UWBP_InventoryToItem_C::Processing' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Error_No_Free_Space) == 0x000658, "Member 'UWBP_InventoryToItem_C::Error_No_Free_Space' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Resource_Label) == 0x000670, "Member 'UWBP_InventoryToItem_C::Resource_Label' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, OnCreateCountChanged) == 0x000688, "Member 'UWBP_InventoryToItem_C::OnCreateCountChanged' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Count) == 0x000698, "Member 'UWBP_InventoryToItem_C::Count' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, OnSelectedSlotRMBDown) == 0x0006A0, "Member 'UWBP_InventoryToItem_C::OnSelectedSlotRMBDown' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, OnProcessStarted) == 0x0006B0, "Member 'UWBP_InventoryToItem_C::OnProcessStarted' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, bPlaySwapAnimation) == 0x0006C0, "Member 'UWBP_InventoryToItem_C::bPlaySwapAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, NewVar) == 0x0006C1, "Member 'UWBP_InventoryToItem_C::NewVar' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, SoundEvent_ActionStart) == 0x0006C8, "Member 'UWBP_InventoryToItem_C::SoundEvent_ActionStart' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, ProcessSound) == 0x0006D0, "Member 'UWBP_InventoryToItem_C::ProcessSound' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Shop_Title_Text) == 0x0006D8, "Member 'UWBP_InventoryToItem_C::Shop_Title_Text' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, ShopTitleRightText) == 0x0006F0, "Member 'UWBP_InventoryToItem_C::ShopTitleRightText' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, OnSellProcessStarted) == 0x000708, "Member 'UWBP_InventoryToItem_C::OnSellProcessStarted' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, OnBuyProcessFinished) == 0x000718, "Member 'UWBP_InventoryToItem_C::OnBuyProcessFinished' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, ContainerBuyback) == 0x000728, "Member 'UWBP_InventoryToItem_C::ContainerBuyback' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, OnBuyBackProcessFinished) == 0x000740, "Member 'UWBP_InventoryToItem_C::OnBuyBackProcessFinished' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, ShopCategoryOpacue) == 0x000750, "Member 'UWBP_InventoryToItem_C::ShopCategoryOpacue' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, ShopCategoryRef) == 0x000758, "Member 'UWBP_InventoryToItem_C::ShopCategoryRef' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Selected_Slot_Category) == 0x000760, "Member 'UWBP_InventoryToItem_C::Selected_Slot_Category' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, EntryList) == 0x000768, "Member 'UWBP_InventoryToItem_C::EntryList' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, EntryListCategory) == 0x000778, "Member 'UWBP_InventoryToItem_C::EntryListCategory' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, CategoryItems) == 0x0007C8, "Member 'UWBP_InventoryToItem_C::CategoryItems' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, ShopContainerRef) == 0x000818, "Member 'UWBP_InventoryToItem_C::ShopContainerRef' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, SellContainerName) == 0x000820, "Member 'UWBP_InventoryToItem_C::SellContainerName' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Container_Name) == 0x000838, "Member 'UWBP_InventoryToItem_C::Container_Name' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, OnUpdateContainerBuyback) == 0x000850, "Member 'UWBP_InventoryToItem_C::OnUpdateContainerBuyback' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, BuybackContainer) == 0x000860, "Member 'UWBP_InventoryToItem_C::BuybackContainer' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Buyback_Slot_Ref) == 0x000868, "Member 'UWBP_InventoryToItem_C::Buyback_Slot_Ref' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, Label_Text_Switcher) == 0x000870, "Member 'UWBP_InventoryToItem_C::Label_Text_Switcher' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, TitleContainerSwithcer) == 0x000874, "Member 'UWBP_InventoryToItem_C::TitleContainerSwithcer' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryToItem_C, CountItem) == 0x000878, "Member 'UWBP_InventoryToItem_C::CountItem' has a wrong offset!");

}

