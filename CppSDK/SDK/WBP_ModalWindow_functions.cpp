#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModalWindow

#include "Basic.hpp"

#include "WBP_ModalWindow_classes.hpp"
#include "WBP_ModalWindow_parameters.hpp"


namespace SDK
{

// Function WBP_ModalWindow.WBP_ModalWindow_C.BndEvt__WBP_CharacterCreate_Button_133_K2Node_ComponentBoundEvent_12_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_ModalWindow_C::BndEvt__WBP_CharacterCreate_Button_133_K2Node_ComponentBoundEvent_12_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "BndEvt__WBP_CharacterCreate_Button_133_K2Node_ComponentBoundEvent_12_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.BndEvt__WBP_CharacterCreate_EditableTextBox_175_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_ModalWindow_C::BndEvt__WBP_CharacterCreate_EditableTextBox_175_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "BndEvt__WBP_CharacterCreate_EditableTextBox_175_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");

	Params::WBP_ModalWindow_C_BndEvt__WBP_CharacterCreate_EditableTextBox_175_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.BndEvt__WBP_CharacterCreate_EditableTextBox_175_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ModalWindow_C::BndEvt__WBP_CharacterCreate_EditableTextBox_175_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "BndEvt__WBP_CharacterCreate_EditableTextBox_175_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WBP_ModalWindow_C_BndEvt__WBP_CharacterCreate_EditableTextBox_175_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.BndEvt__WBP_ModalWindow_Button_CreateAccept_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature
// (BlueprintEvent)

void UWBP_ModalWindow_C::BndEvt__WBP_ModalWindow_Button_CreateAccept_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "BndEvt__WBP_ModalWindow_Button_CreateAccept_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.BndEvt__WBP_ModalWindow_Button_CreateAccept_K2Node_ComponentBoundEvent_2_OnSpaceBarPressed__DelegateSignature
// (BlueprintEvent)

void UWBP_ModalWindow_C::BndEvt__WBP_ModalWindow_Button_CreateAccept_K2Node_ComponentBoundEvent_2_OnSpaceBarPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "BndEvt__WBP_ModalWindow_Button_CreateAccept_K2Node_ComponentBoundEvent_2_OnSpaceBarPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.BndEvt__WBP_ModalWindow_Button_CreateDecline_K2Node_ComponentBoundEvent_10_OnTabPressed__DelegateSignature
// (BlueprintEvent)

void UWBP_ModalWindow_C::BndEvt__WBP_ModalWindow_Button_CreateDecline_K2Node_ComponentBoundEvent_10_OnTabPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "BndEvt__WBP_ModalWindow_Button_CreateDecline_K2Node_ComponentBoundEvent_10_OnTabPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.BndEvt__WBP_ModalWindow_Button_CreateDecline_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature
// (BlueprintEvent)

void UWBP_ModalWindow_C::BndEvt__WBP_ModalWindow_Button_CreateDecline_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "BndEvt__WBP_ModalWindow_Button_CreateDecline_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.CheckCanCreateCharacter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_ModalWindow_C::CheckCanCreateCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "CheckCanCreateCharacter");

	Params::WBP_ModalWindow_C_CheckCanCreateCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.ClearEditableText
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ModalWindow_C::ClearEditableText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "ClearEditableText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ModalWindow_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.Contains Incorrect Text
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_ModalWindow_C::Contains_Incorrect_Text(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "Contains Incorrect Text");

	Params::WBP_ModalWindow_C_Contains_Incorrect_Text Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.ExecuteUbergraph_WBP_ModalWindow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ModalWindow_C::ExecuteUbergraph_WBP_ModalWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "ExecuteUbergraph_WBP_ModalWindow");

	Params::WBP_ModalWindow_C_ExecuteUbergraph_WBP_ModalWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_ModalWindow_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.OnAccept__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_ModalWindow_C::OnAccept__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "OnAccept__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.OnAccept_Event
// (BlueprintCallable, BlueprintEvent)

void UWBP_ModalWindow_C::OnAccept_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "OnAccept_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.OnCancel__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_ModalWindow_C::OnCancel__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "OnCancel__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.OnCancel_Event
// (BlueprintCallable, BlueprintEvent)

void UWBP_ModalWindow_C::OnCancel_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "OnCancel_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ModalWindow_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "PreConstruct");

	Params::WBP_ModalWindow_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.SelectEditableTextBox
// (BlueprintCallable, BlueprintEvent)

void UWBP_ModalWindow_C::SelectEditableTextBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "SelectEditableTextBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.SetDescription
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ModalWindow_C::SetDescription(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "SetDescription");

	Params::WBP_ModalWindow_C_SetDescription Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.SetHeader
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_ModalWindow_C::SetHeader(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "SetHeader");

	Params::WBP_ModalWindow_C_SetHeader Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.Show
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNeedForwardAnimation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ModalWindow_C::Show(bool IsNeedForwardAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "Show");

	Params::WBP_ModalWindow_C_Show Parms{};

	Parms.IsNeedForwardAnimation = IsNeedForwardAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ModalWindow.WBP_ModalWindow_C.ShowTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RemainingTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ModalWindow_C::ShowTime(double RemainingTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ModalWindow_C", "ShowTime");

	Params::WBP_ModalWindow_C_ShowTime Parms{};

	Parms.RemainingTime = RemainingTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

