#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurvMale_Ragdoll

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass SurvMale_Ragdoll.SurvMale_Ragdoll_C
// 0x0110 (0x0460 - 0x0350)
class USurvMale_Ragdoll_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x0368(0x0090)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03F8(0x0020)()
	struct FPoseSnapshot                          K2Node_PropertyAccess;                             // 0x0418(0x0038)()
	class ASurvivalPlayer_C*                      SurvivorRef;                                       // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ExecuteUbergraph_SurvMale_Ragdoll(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SurvMale_Ragdoll_C">();
	}
	static class USurvMale_Ragdoll_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USurvMale_Ragdoll_C>();
	}
};
static_assert(alignof(USurvMale_Ragdoll_C) == 0x000010, "Wrong alignment on USurvMale_Ragdoll_C");
static_assert(sizeof(USurvMale_Ragdoll_C) == 0x000460, "Wrong size on USurvMale_Ragdoll_C");
static_assert(offsetof(USurvMale_Ragdoll_C, UberGraphFrame) == 0x000350, "Member 'USurvMale_Ragdoll_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USurvMale_Ragdoll_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'USurvMale_Ragdoll_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(USurvMale_Ragdoll_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'USurvMale_Ragdoll_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(USurvMale_Ragdoll_C, AnimGraphNode_PoseSnapshot) == 0x000368, "Member 'USurvMale_Ragdoll_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(USurvMale_Ragdoll_C, AnimGraphNode_Root) == 0x0003F8, "Member 'USurvMale_Ragdoll_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USurvMale_Ragdoll_C, K2Node_PropertyAccess) == 0x000418, "Member 'USurvMale_Ragdoll_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(USurvMale_Ragdoll_C, SurvivorRef) == 0x000450, "Member 'USurvMale_Ragdoll_C::SurvivorRef' has a wrong offset!");

}

