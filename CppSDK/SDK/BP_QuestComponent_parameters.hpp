#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuestComponent

#include "Basic.hpp"

#include "QuestSaveStructure_structs.hpp"
#include "Quest_structs.hpp"
#include "Objective_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_QuestComponent.BP_QuestComponent_C.ActivateQuest
// 0x0004 (0x0004 - 0x0000)
struct BP_QuestComponent_C_ActivateQuest final
{
public:
	int32                                         IndexInTable;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_ActivateQuest) == 0x000004, "Wrong alignment on BP_QuestComponent_C_ActivateQuest");
static_assert(sizeof(BP_QuestComponent_C_ActivateQuest) == 0x000004, "Wrong size on BP_QuestComponent_C_ActivateQuest");
static_assert(offsetof(BP_QuestComponent_C_ActivateQuest, IndexInTable) == 0x000000, "Member 'BP_QuestComponent_C_ActivateQuest::IndexInTable' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.CompleteObjective
// 0x0010 (0x0010 - 0x0000)
struct BP_QuestComponent_C_CompleteObjective final
{
public:
	int32                                         QuestIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ObjectiveIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_CompleteObjective) == 0x000008, "Wrong alignment on BP_QuestComponent_C_CompleteObjective");
static_assert(sizeof(BP_QuestComponent_C_CompleteObjective) == 0x000010, "Wrong size on BP_QuestComponent_C_CompleteObjective");
static_assert(offsetof(BP_QuestComponent_C_CompleteObjective, QuestIndex) == 0x000000, "Member 'BP_QuestComponent_C_CompleteObjective::QuestIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_CompleteObjective, ObjectiveIndex) == 0x000004, "Member 'BP_QuestComponent_C_CompleteObjective::ObjectiveIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_CompleteObjective, Delay) == 0x000008, "Member 'BP_QuestComponent_C_CompleteObjective::Delay' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.ConstructLoadedQuests
// 0x0180 (0x0180 - 0x0000)
struct BP_QuestComponent_C_ConstructLoadedQuests final
{
public:
	TMap<int32, struct FQuestSaveStructure>       QuestInfo;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Constructed;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ObjCollection_C*                    CurrentRootObjCollection;                          // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FQuestSaveStructure>            CallFunc_Map_Values_Values;                        // 0x00C8(0x0010)(ReferenceParm)
	struct FQuestSaveStructure                    CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0020)(HasGetValueTypeHash)
	struct FQuest                                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Objective_C*                        CallFunc_Array_Get_Item_3;                         // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Objective_C*                        CallFunc_Array_Get_Item_5;                         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ObjCollection_C*                    CallFunc_ConstructRootObjectiveCollection_RootObjectiveCollection; // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_ConstructLoadedQuests) == 0x000008, "Wrong alignment on BP_QuestComponent_C_ConstructLoadedQuests");
static_assert(sizeof(BP_QuestComponent_C_ConstructLoadedQuests) == 0x000180, "Wrong size on BP_QuestComponent_C_ConstructLoadedQuests");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, QuestInfo) == 0x000000, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::QuestInfo' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, Constructed) == 0x000050, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::Constructed' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CurrentRootObjCollection) == 0x000058, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CurrentRootObjCollection' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Map_Length_ReturnValue) == 0x000064, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000068, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, Temp_int_Array_Index_Variable_2) == 0x000078, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, Temp_int_Loop_Counter_Variable_1) == 0x000090, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Array_Get_Item) == 0x000094, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Conv_IntToString_ReturnValue) == 0x000098, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Conv_StringToName_ReturnValue) == 0x0000AC, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, Temp_int_Loop_Counter_Variable_2) == 0x0000BC, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C0, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Map_Values_Values) == 0x0000C8, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F8, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000140, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Array_Get_Item_2) == 0x000144, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Array_Length_ReturnValue_1) == 0x000148, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Array_Get_Item_3) == 0x000150, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Less_IntInt_ReturnValue_1) == 0x000158, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Array_Get_Item_4) == 0x00015C, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Array_Length_ReturnValue_2) == 0x000160, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Array_Get_Item_5) == 0x000168, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_Less_IntInt_ReturnValue_2) == 0x000170, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructLoadedQuests, CallFunc_ConstructRootObjectiveCollection_RootObjectiveCollection) == 0x000178, "Member 'BP_QuestComponent_C_ConstructLoadedQuests::CallFunc_ConstructRootObjectiveCollection_RootObjectiveCollection' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.ConstructRootObjectiveCollection
// 0x0048 (0x0048 - 0x0000)
struct BP_QuestComponent_C_ConstructRootObjectiveCollection final
{
public:
	class FText                                   ObjectiveName;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          OrderRequired;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ObjectiveDescription;                              // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UBP_ObjCollection_C*                    RootObjectiveCollection;                           // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ObjCollection_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_ConstructRootObjectiveCollection) == 0x000008, "Wrong alignment on BP_QuestComponent_C_ConstructRootObjectiveCollection");
static_assert(sizeof(BP_QuestComponent_C_ConstructRootObjectiveCollection) == 0x000048, "Wrong size on BP_QuestComponent_C_ConstructRootObjectiveCollection");
static_assert(offsetof(BP_QuestComponent_C_ConstructRootObjectiveCollection, ObjectiveName) == 0x000000, "Member 'BP_QuestComponent_C_ConstructRootObjectiveCollection::ObjectiveName' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructRootObjectiveCollection, OrderRequired) == 0x000018, "Member 'BP_QuestComponent_C_ConstructRootObjectiveCollection::OrderRequired' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructRootObjectiveCollection, ObjectiveDescription) == 0x000020, "Member 'BP_QuestComponent_C_ConstructRootObjectiveCollection::ObjectiveDescription' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructRootObjectiveCollection, RootObjectiveCollection) == 0x000038, "Member 'BP_QuestComponent_C_ConstructRootObjectiveCollection::RootObjectiveCollection' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ConstructRootObjectiveCollection, CallFunc_SpawnObject_ReturnValue) == 0x000040, "Member 'BP_QuestComponent_C_ConstructRootObjectiveCollection::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.ExecuteUbergraph_BP_QuestComponent
// 0x0090 (0x0090 - 0x0000)
struct BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FQuestSaveStructure>       CallFunc_MakeQuestsInfo_QuestsInfo;                // 0x0008(0x0050)()
	int32                                         K2Node_CustomEvent_QuestIndex;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ObjectiveIndex;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Delay;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_IndexInTable;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent) == 0x000008, "Wrong alignment on BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent");
static_assert(sizeof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent) == 0x000090, "Wrong size on BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent");
static_assert(offsetof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent, EntryPoint) == 0x000000, "Member 'BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent, CallFunc_MakeQuestsInfo_QuestsInfo) == 0x000008, "Member 'BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent::CallFunc_MakeQuestsInfo_QuestsInfo' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent, K2Node_CustomEvent_QuestIndex) == 0x000058, "Member 'BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent::K2Node_CustomEvent_QuestIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent, K2Node_CustomEvent_ObjectiveIndex) == 0x00005C, "Member 'BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent::K2Node_CustomEvent_ObjectiveIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent, K2Node_CustomEvent_Delay) == 0x000060, "Member 'BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent, K2Node_Event_EndPlayReason) == 0x000068, "Member 'BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent, CallFunc_GetGameInstance_ReturnValue) == 0x000070, "Member 'BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent, K2Node_CustomEvent_IndexInTable) == 0x000078, "Member 'BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent::K2Node_CustomEvent_IndexInTable' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent, K2Node_DynamicCast_AsGI_Survival) == 0x000080, "Member 'BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_QuestComponent_C_ExecuteUbergraph_BP_QuestComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.Get Objective
// 0x0048 (0x0048 - 0x0000)
struct BP_QuestComponent_C_Get_Objective final
{
public:
	int32                                         QuestIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ObjectiveIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Objective_C*                        Output;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_ObjCollection_C*>            CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ObjCollection_C*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_Objective_C*                        CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_Get_Objective) == 0x000008, "Wrong alignment on BP_QuestComponent_C_Get_Objective");
static_assert(sizeof(BP_QuestComponent_C_Get_Objective) == 0x000048, "Wrong size on BP_QuestComponent_C_Get_Objective");
static_assert(offsetof(BP_QuestComponent_C_Get_Objective, QuestIndex) == 0x000000, "Member 'BP_QuestComponent_C_Get_Objective::QuestIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_Get_Objective, ObjectiveIndex) == 0x000004, "Member 'BP_QuestComponent_C_Get_Objective::ObjectiveIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_Get_Objective, Output) == 0x000008, "Member 'BP_QuestComponent_C_Get_Objective::Output' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_Get_Objective, CallFunc_Map_Values_Values) == 0x000010, "Member 'BP_QuestComponent_C_Get_Objective::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_Get_Objective, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_QuestComponent_C_Get_Objective::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_Get_Objective, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'BP_QuestComponent_C_Get_Objective::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_Get_Objective, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_QuestComponent_C_Get_Objective::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_Get_Objective, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_QuestComponent_C_Get_Objective::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.GetAllQuests
// 0x0020 (0x0020 - 0x0000)
struct BP_QuestComponent_C_GetAllQuests final
{
public:
	TArray<class UBP_ObjCollection_C*>            Values;                                            // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UBP_ObjCollection_C*>            CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_QuestComponent_C_GetAllQuests) == 0x000008, "Wrong alignment on BP_QuestComponent_C_GetAllQuests");
static_assert(sizeof(BP_QuestComponent_C_GetAllQuests) == 0x000020, "Wrong size on BP_QuestComponent_C_GetAllQuests");
static_assert(offsetof(BP_QuestComponent_C_GetAllQuests, Values) == 0x000000, "Member 'BP_QuestComponent_C_GetAllQuests::Values' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_GetAllQuests, CallFunc_Map_Values_Values) == 0x000010, "Member 'BP_QuestComponent_C_GetAllQuests::CallFunc_Map_Values_Values' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.IsObjectiveActive
// 0x0060 (0x0060 - 0x0000)
struct BP_QuestComponent_C_IsObjectiveActive final
{
public:
	int32                                         QuestIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ObjectiveIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsActive;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Objective_C*                        Objective;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_ObjCollection_C*>            CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ObjCollection_C*                    CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Objective_C*                        CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_IsObjectiveActive) == 0x000008, "Wrong alignment on BP_QuestComponent_C_IsObjectiveActive");
static_assert(sizeof(BP_QuestComponent_C_IsObjectiveActive) == 0x000060, "Wrong size on BP_QuestComponent_C_IsObjectiveActive");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, QuestIndex) == 0x000000, "Member 'BP_QuestComponent_C_IsObjectiveActive::QuestIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, ObjectiveIndex) == 0x000004, "Member 'BP_QuestComponent_C_IsObjectiveActive::ObjectiveIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, Param_IsActive) == 0x000008, "Member 'BP_QuestComponent_C_IsObjectiveActive::Param_IsActive' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, Objective) == 0x000010, "Member 'BP_QuestComponent_C_IsObjectiveActive::Objective' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, CallFunc_Map_Values_Values) == 0x000018, "Member 'BP_QuestComponent_C_IsObjectiveActive::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'BP_QuestComponent_C_IsObjectiveActive::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, CallFunc_Array_Find_ReturnValue) == 0x000038, "Member 'BP_QuestComponent_C_IsObjectiveActive::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_QuestComponent_C_IsObjectiveActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_QuestComponent_C_IsObjectiveActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_QuestComponent_C_IsObjectiveActive::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveActive, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_QuestComponent_C_IsObjectiveActive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.IsObjectiveCompleted
// 0x0058 (0x0058 - 0x0000)
struct BP_QuestComponent_C_IsObjectiveCompleted final
{
public:
	int32                                         QuestIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ObjectiveIndex;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsComplete;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_ObjCollection_C*>            CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ObjCollection_C*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Objective_C*                        CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsComplete_IsComplete;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_IsObjectiveCompleted) == 0x000008, "Wrong alignment on BP_QuestComponent_C_IsObjectiveCompleted");
static_assert(sizeof(BP_QuestComponent_C_IsObjectiveCompleted) == 0x000058, "Wrong size on BP_QuestComponent_C_IsObjectiveCompleted");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, QuestIndex) == 0x000000, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::QuestIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, ObjectiveIndex) == 0x000004, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::ObjectiveIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, IsComplete) == 0x000008, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::IsComplete' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, CallFunc_Map_Values_Values) == 0x000010, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsObjectiveCompleted, CallFunc_GetIsComplete_IsComplete) == 0x000051, "Member 'BP_QuestComponent_C_IsObjectiveCompleted::CallFunc_GetIsComplete_IsComplete' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.IsQuestActive
// 0x0040 (0x0040 - 0x0000)
struct BP_QuestComponent_C_IsQuestActive final
{
public:
	int32                                         QuestIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsActive;                                    // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_ObjCollection_C*>            CallFunc_Map_Values_Values;                        // 0x0008(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ObjCollection_C*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActive_IsActive;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_IsQuestActive) == 0x000008, "Wrong alignment on BP_QuestComponent_C_IsQuestActive");
static_assert(sizeof(BP_QuestComponent_C_IsQuestActive) == 0x000040, "Wrong size on BP_QuestComponent_C_IsQuestActive");
static_assert(offsetof(BP_QuestComponent_C_IsQuestActive, QuestIndex) == 0x000000, "Member 'BP_QuestComponent_C_IsQuestActive::QuestIndex' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsQuestActive, Param_IsActive) == 0x000004, "Member 'BP_QuestComponent_C_IsQuestActive::Param_IsActive' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsQuestActive, CallFunc_Map_Values_Values) == 0x000008, "Member 'BP_QuestComponent_C_IsQuestActive::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsQuestActive, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BP_QuestComponent_C_IsQuestActive::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsQuestActive, CallFunc_Array_Find_ReturnValue) == 0x000028, "Member 'BP_QuestComponent_C_IsQuestActive::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsQuestActive, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_QuestComponent_C_IsQuestActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsQuestActive, CallFunc_GetIsActive_IsActive) == 0x000038, "Member 'BP_QuestComponent_C_IsQuestActive::CallFunc_GetIsActive_IsActive' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_IsQuestActive, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_QuestComponent_C_IsQuestActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.MakeQuestsInfo
// 0x0158 (0x0158 - 0x0000)
struct BP_QuestComponent_C_MakeQuestsInfo final
{
public:
	TMap<int32, struct FQuestSaveStructure>       QuestsInfo;                                        // 0x0000(0x0050)(Parm, OutParm)
	TMap<int32, struct FQuestSaveStructure>       QuestsInfoLocal;                                   // 0x0050(0x0050)(Edit, BlueprintVisible)
	TArray<int32>                                 CompletedObjectives;                               // 0x00A0(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 ActiveObjectives;                                  // 0x00B0(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuestSaveStructure                    K2Node_MakeStruct_QuestSaveStructure;              // 0x00D0(0x0020)(HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x00F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_ObjCollection_C*>            CallFunc_Map_Values_Values;                        // 0x0118(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ObjCollection_C*                    CallFunc_Array_Get_Item_1;                         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Objective_C*                        CallFunc_Array_Get_Item_2;                         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActive_IsActive;                     // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsComplete_IsComplete;                 // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B[0x1];                                      // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_MakeQuestsInfo) == 0x000008, "Wrong alignment on BP_QuestComponent_C_MakeQuestsInfo");
static_assert(sizeof(BP_QuestComponent_C_MakeQuestsInfo) == 0x000158, "Wrong size on BP_QuestComponent_C_MakeQuestsInfo");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, QuestsInfo) == 0x000000, "Member 'BP_QuestComponent_C_MakeQuestsInfo::QuestsInfo' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, QuestsInfoLocal) == 0x000050, "Member 'BP_QuestComponent_C_MakeQuestsInfo::QuestsInfoLocal' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CompletedObjectives) == 0x0000A0, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CompletedObjectives' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, ActiveObjectives) == 0x0000B0, "Member 'BP_QuestComponent_C_MakeQuestsInfo::ActiveObjectives' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'BP_QuestComponent_C_MakeQuestsInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, Temp_int_Loop_Counter_Variable) == 0x0000C4, "Member 'BP_QuestComponent_C_MakeQuestsInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, K2Node_MakeStruct_QuestSaveStructure) == 0x0000D0, "Member 'BP_QuestComponent_C_MakeQuestsInfo::K2Node_MakeStruct_QuestSaveStructure' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Map_Keys_Keys) == 0x0000F0, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Array_Get_Item) == 0x000100, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, Temp_int_Array_Index_Variable_1) == 0x000104, "Member 'BP_QuestComponent_C_MakeQuestsInfo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Array_Add_ReturnValue) == 0x000108, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Array_Add_ReturnValue_1) == 0x00010C, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, Temp_int_Loop_Counter_Variable_1) == 0x000110, "Member 'BP_QuestComponent_C_MakeQuestsInfo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Map_Values_Values) == 0x000118, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000128, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Array_Get_Item_2) == 0x000140, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_GetIsActive_IsActive) == 0x000149, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_GetIsActive_IsActive' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_GetIsComplete_IsComplete) == 0x00014A, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_GetIsComplete_IsComplete' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Array_Length_ReturnValue_1) == 0x00014C, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_MakeQuestsInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x000150, "Member 'BP_QuestComponent_C_MakeQuestsInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.OnActivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_QuestComponent_C_OnActivated__DelegateSignature final
{
public:
	class UBP_Objective_C*                        RootObjectiveCollection;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_OnActivated__DelegateSignature) == 0x000008, "Wrong alignment on BP_QuestComponent_C_OnActivated__DelegateSignature");
static_assert(sizeof(BP_QuestComponent_C_OnActivated__DelegateSignature) == 0x000008, "Wrong size on BP_QuestComponent_C_OnActivated__DelegateSignature");
static_assert(offsetof(BP_QuestComponent_C_OnActivated__DelegateSignature, RootObjectiveCollection) == 0x000000, "Member 'BP_QuestComponent_C_OnActivated__DelegateSignature::RootObjectiveCollection' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.PopulateObjectives
// 0x0078 (0x0078 - 0x0000)
struct BP_QuestComponent_C_PopulateObjectives final
{
public:
	class UBP_ObjCollection_C*                    RootObjCollection;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FObjective>                     Objectives;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FObjective                             CallFunc_Array_Get_Item;                           // 0x0028(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MainObjective_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_PopulateObjectives) == 0x000008, "Wrong alignment on BP_QuestComponent_C_PopulateObjectives");
static_assert(sizeof(BP_QuestComponent_C_PopulateObjectives) == 0x000078, "Wrong size on BP_QuestComponent_C_PopulateObjectives");
static_assert(offsetof(BP_QuestComponent_C_PopulateObjectives, RootObjCollection) == 0x000000, "Member 'BP_QuestComponent_C_PopulateObjectives::RootObjCollection' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_PopulateObjectives, Objectives) == 0x000008, "Member 'BP_QuestComponent_C_PopulateObjectives::Objectives' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_PopulateObjectives, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_QuestComponent_C_PopulateObjectives::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_PopulateObjectives, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_QuestComponent_C_PopulateObjectives::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_PopulateObjectives, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_QuestComponent_C_PopulateObjectives::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_PopulateObjectives, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_QuestComponent_C_PopulateObjectives::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_PopulateObjectives, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_QuestComponent_C_PopulateObjectives::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_PopulateObjectives, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_QuestComponent_C_PopulateObjectives::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_QuestComponent_C_PopulateObjectives, CallFunc_SpawnObject_ReturnValue) == 0x000070, "Member 'BP_QuestComponent_C_PopulateObjectives::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_QuestComponent.BP_QuestComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_QuestComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_QuestComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_QuestComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_QuestComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_QuestComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_QuestComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_QuestComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

}

