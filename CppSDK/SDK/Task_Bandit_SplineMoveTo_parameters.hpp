#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Bandit_SplineMoveTo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "E_Bandit_MovementMode_structs.hpp"


namespace SDK::Params
{

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.CalculateAngle
// 0x00E0 (0x00E0 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_CalculateAngle final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot;                                               // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0080(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        K2Node_FunctionResult_Angle_ImplicitCast;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_CalculateAngle) == 0x000008, "Wrong alignment on Task_Bandit_SplineMoveTo_C_CalculateAngle");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_CalculateAngle) == 0x0000E0, "Wrong size on Task_Bandit_SplineMoveTo_C_CalculateAngle");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, Angle) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::Angle' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, Rot) == 0x000008, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::Rot' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, Temp_bool_Variable) == 0x000020, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, CallFunc_Array_Get_Item) == 0x000028, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, K2Node_Select_Default) == 0x000080, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, CallFunc_FindLookAtRotation_ReturnValue) == 0x000098, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, CallFunc_BreakRotator_Roll) == 0x0000B0, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, CallFunc_BreakRotator_Pitch) == 0x0000B4, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, CallFunc_BreakRotator_Yaw) == 0x0000B8, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, CallFunc_MakeRotator_ReturnValue) == 0x0000C0, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_CalculateAngle, K2Node_FunctionResult_Angle_ImplicitCast) == 0x0000D8, "Member 'Task_Bandit_SplineMoveTo_C_CalculateAngle::K2Node_FunctionResult_Angle_ImplicitCast' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.Debug
// 0x01B0 (0x01B0 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_Debug final
{
public:
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI_1;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI_2;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI_3;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_2;                           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x013C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_4;                           // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_3;                         // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_Debug) == 0x000008, "Wrong alignment on Task_Bandit_SplineMoveTo_C_Debug");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_Debug) == 0x0001B0, "Wrong size on Task_Bandit_SplineMoveTo_C_Debug");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_struct_Variable) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_bool_Variable) == 0x000010, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_DynamicCast_AsMain_Bandit_AI) == 0x000018, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_DynamicCast_AsMain_Bandit_AI' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_DynamicCast_AsMain_Bandit_AI_1) == 0x000028, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_DynamicCast_AsMain_Bandit_AI_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_DynamicCast_AsMain_Bandit_AI_2) == 0x000038, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_DynamicCast_AsMain_Bandit_AI_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_DynamicCast_AsMain_Bandit_AI_3) == 0x000048, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_DynamicCast_AsMain_Bandit_AI_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_DynamicCast_bSuccess_3) == 0x000050, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_struct_Variable_1) == 0x000054, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_Array_Get_Item) == 0x000068, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_bool_Variable_1) == 0x000080, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_Select_Default) == 0x000088, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_struct_Variable_2) == 0x000098, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_struct_Variable_3) == 0x0000AC, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_bool_Variable_2) == 0x0000BD, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_struct_Variable_4) == 0x0000C0, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_Select_Default_1) == 0x0000D0, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_Select_Default_2) == 0x000110, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_struct_Variable_5) == 0x000128, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_bool_Variable_3) == 0x000138, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_Select_Default_3) == 0x00013C, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_IsValid_ReturnValue) == 0x00014C, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_IsValid_ReturnValue_1) == 0x00014D, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_struct_Variable_6) == 0x000150, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_struct_Variable_7) == 0x000160, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_bool_Variable_4) == 0x000170, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_int_Array_Index_Variable) == 0x000174, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, K2Node_Select_Default_4) == 0x000178, "Member 'Task_Bandit_SplineMoveTo_C_Debug::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_Array_Get_Item_3) == 0x000188, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001A0, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, Temp_int_Loop_Counter_Variable) == 0x0001A4, "Member 'Task_Bandit_SplineMoveTo_C_Debug::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_Less_IntInt_ReturnValue) == 0x0001A8, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_Debug, CallFunc_Add_IntInt_ReturnValue) == 0x0001AC, "Member 'Task_Bandit_SplineMoveTo_C_Debug::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.ExecuteUbergraph_Task_Bandit_SplineMoveTo
// 0x0680 (0x0680 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_5;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_4;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult Result, class AAIController* AIController)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_Result;                         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_CustomEvent_AIController;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_3;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_2;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_2;                              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateAngle_Angle;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalculateAngle_Rot;                       // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_3;                         // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_3;        // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5;                              // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI;               // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI_1;             // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI_2;             // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x039C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI_3;             // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         Temp_byte_Variable_3;                              // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x03C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_Result_1;                       // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_CustomEvent_AIController_1;                 // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult Result, class AAIController* AIController)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0404(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetBlackboardValueAsActor_ReturnValue;    // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAITask_MoveTo*                         CallFunc_AIMoveTo_ReturnValue;                     // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_1;    // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_7;                              // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI_4;             // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI_5;             // 0x0510(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A[0x6];                                      // 0x051A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_9;                              // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x6];                                      // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_7;               // 0x0562(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_563[0x5];                                      // 0x0563(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAITask_MoveTo*                         CallFunc_AIMoveTo_ReturnValue_1;                   // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_2;    // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A[0x6];                                      // 0x057A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_11;                             // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         Temp_byte_Variable_4;                              // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0598(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x05A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C2[0x6];                                      // 0x05C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x05C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_5;                              // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI_6;             // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_3;    // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default_2;                           // 0x0620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x0628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue_1; // 0x0630(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x063A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x063B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_6;               // 0x063D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63E[0x2];                                      // 0x063E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_DeltaS_ImplicitCast;            // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast; // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AIMoveTo_AcceptanceRadius_ImplicitCast;   // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast_1;       // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AIMoveTo_AcceptanceRadius_ImplicitCast_1; // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast_1; // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast_1;     // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo) == 0x000008, "Wrong alignment on Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo) == 0x000680, "Wrong size on Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, EntryPoint) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable) == 0x000008, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_1) == 0x000010, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_MovementResult_5) == 0x000018, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_MovementResult_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_MovementResult_4) == 0x00002C, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_MovementResult_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_byte_Variable) == 0x000040, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_Result) == 0x000054, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_AIController) == 0x000058, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_AIController' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_3) == 0x000060, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_MovementResult_3) == 0x000070, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_MovementResult_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_4) == 0x000074, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_MovementResult_2) == 0x000084, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_MovementResult_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_5) == 0x000088, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_byte_Variable_1) == 0x000098, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_bool_Variable) == 0x000099, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_class_Variable) == 0x0000A0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000A8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_MovementResult_1) == 0x0000B8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_MovementResult) == 0x0000B9, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000BC, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_byte_Variable_2) == 0x0000CC, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_Event_OwnerController_1) == 0x0000D0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_Event_ControlledPawn_1) == 0x0000D8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_Event_DeltaSeconds) == 0x0000E0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x0000E8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_Event_OwnerController) == 0x000100, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_Event_ControlledPawn) == 0x000108, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_CalculateAngle_Angle) == 0x000110, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_CalculateAngle_Angle' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_CalculateAngle_Rot) == 0x000118, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_CalculateAngle_Rot' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000130, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000148, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000160, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Roll) == 0x000178, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Pitch) == 0x00017C, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Yaw) == 0x000180, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Roll_1) == 0x000184, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Pitch_1) == 0x000188, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Yaw_1) == 0x00018C, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_MakeRotator_ReturnValue) == 0x000190, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Abs_ReturnValue) == 0x0001A8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_MakeRotator_ReturnValue_1) == 0x0001B0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001D0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_GetActorForwardVector_ReturnValue) == 0x0001E8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_2) == 0x000200, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Array_Get_Item) == 0x000208, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Array_Get_Item_1) == 0x000220, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Array_Get_Item_2) == 0x000238, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Vector_Distance2D_ReturnValue) == 0x000250, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_3) == 0x000258, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000260, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Array_Get_Item_3) == 0x000268, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000280, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_FindLookAtRotation_ReturnValue) == 0x000298, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorRotation_ReturnValue_3) == 0x0002B0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Roll_2) == 0x0002C8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Pitch_2) == 0x0002CC, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Yaw_2) == 0x0002D0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Roll_3) == 0x0002D4, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Pitch_3) == 0x0002D8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Yaw_3) == 0x0002DC, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_MakeRotator_ReturnValue_2) == 0x0002E0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_MakeRotator_ReturnValue_3) == 0x0002F8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x000310, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_MakeRotator_ReturnValue_4) == 0x000328, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Roll_4) == 0x000340, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Pitch_4) == 0x000344, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BreakRotator_Yaw_4) == 0x000348, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Abs_ReturnValue_1) == 0x000350, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_4) == 0x000358, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000360, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_5) == 0x000368, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_AsMain_Bandit_AI) == 0x000370, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_AsMain_Bandit_AI' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_bSuccess) == 0x000378, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_AsMain_Bandit_AI_1) == 0x000380, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_AsMain_Bandit_AI_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_bSuccess_1) == 0x000388, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_AsMain_Bandit_AI_2) == 0x000390, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_AsMain_Bandit_AI_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_bSuccess_2) == 0x000398, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_8) == 0x00039C, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_AsMain_Bandit_AI_3) == 0x0003B0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_AsMain_Bandit_AI_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_bSuccess_3) == 0x0003B8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_byte_Variable_3) == 0x0003B9, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_Select_Default) == 0x0003C0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_9) == 0x0003C8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_RInterpTo_ReturnValue) == 0x0003D8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_Result_1) == 0x0003F0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_Result_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_AIController_1) == 0x0003F8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_AIController_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000400, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_10) == 0x000404, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000418, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_GetBlackboardValueAsActor_ReturnValue) == 0x000430, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_GetBlackboardValueAsActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_AIMoveTo_ReturnValue) == 0x000438, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_AIMoveTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_IsValid_ReturnValue) == 0x000440, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000448, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_6) == 0x000450, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_IsValid_ReturnValue_1) == 0x000458, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000460, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000478, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Vector_Distance_ReturnValue) == 0x000490, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000498, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0004B0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0004B8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_CreateMoveToProxyObject_ReturnValue_1) == 0x0004D0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_CreateMoveToProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_IsValid_ReturnValue_2) == 0x0004D8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Array_Length_ReturnValue) == 0x0004DC, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0004E0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BooleanOR_ReturnValue) == 0x0004E1, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_7) == 0x0004E8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_bool_Has_Been_Initd_Variable) == 0x0004F0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_8) == 0x0004F8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_AsMain_Bandit_AI_4) == 0x000500, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_AsMain_Bandit_AI_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_bSuccess_4) == 0x000508, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_AsMain_Bandit_AI_5) == 0x000510, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_AsMain_Bandit_AI_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_bSuccess_5) == 0x000518, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000519, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_9) == 0x000520, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000528, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BooleanOR_ReturnValue_1) == 0x000529, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000530, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Vector_Distance_ReturnValue_1) == 0x000548, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000550, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Array_Length_ReturnValue_1) == 0x000554, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_10) == 0x000558, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000560, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_BooleanOR_ReturnValue_2) == 0x000561, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_MovementResult_7) == 0x000562, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_MovementResult_7' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_AIMoveTo_ReturnValue_1) == 0x000568, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_AIMoveTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_CreateMoveToProxyObject_ReturnValue_2) == 0x000570, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_CreateMoveToProxyObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_IsValid_ReturnValue_3) == 0x000578, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_IsValid_ReturnValue_4) == 0x000579, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_real_Variable_11) == 0x000580, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_byte_Variable_4) == 0x000588, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_Select_Default_1) == 0x000590, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CreateDelegate_OutputDelegate_11) == 0x000598, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_RInterpTo_ReturnValue_1) == 0x0005A8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x0005C0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0005C1, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_GetComponentByClass_ReturnValue) == 0x0005C8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, Temp_byte_Variable_5) == 0x0005D0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_AsMain_Bandit_AI_6) == 0x0005D8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_AsMain_Bandit_AI_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_DynamicCast_bSuccess_6) == 0x0005E0, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0005E8, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Add_VectorVector_ReturnValue) == 0x000600, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_CreateMoveToProxyObject_ReturnValue_3) == 0x000618, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_CreateMoveToProxyObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_Select_Default_2) == 0x000620, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x000628, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_FindPathToLocationSynchronously_ReturnValue_1) == 0x000630, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_FindPathToLocationSynchronously_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_IsValid_ReturnValue_5) == 0x000638, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_IsValid_ReturnValue_6) == 0x000639, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00063A, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00063B, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_IsValid_ReturnValue_7) == 0x00063C, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_CustomEvent_MovementResult_6) == 0x00063D, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_CustomEvent_MovementResult_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, K2Node_VariableSet_DeltaS_ImplicitCast) == 0x000640, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::K2Node_VariableSet_DeltaS_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast) == 0x000648, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_AIMoveTo_AcceptanceRadius_ImplicitCast) == 0x00064C, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_AIMoveTo_AcceptanceRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000650, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000654, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Abs_A_ImplicitCast) == 0x000658, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_Abs_A_ImplicitCast_1) == 0x000660, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_RInterpTo_DeltaTime_ImplicitCast_1) == 0x000668, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_RInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x00066C, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_AIMoveTo_AcceptanceRadius_ImplicitCast_1) == 0x000670, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_AIMoveTo_AcceptanceRadius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast_1) == 0x000674, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_CreateMoveToProxyObject_AcceptanceRadius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo, CallFunc_RInterpTo_InterpSpeed_ImplicitCast_1) == 0x000678, "Member 'Task_Bandit_SplineMoveTo_C_ExecuteUbergraph_Task_Bandit_SplineMoveTo::CallFunc_RInterpTo_InterpSpeed_ImplicitCast_1' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.OnFail_454DFE0F4FE8221544021C9A98B42212
// 0x0001 (0x0001 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_OnFail_454DFE0F4FE8221544021C9A98B42212 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_OnFail_454DFE0F4FE8221544021C9A98B42212) == 0x000001, "Wrong alignment on Task_Bandit_SplineMoveTo_C_OnFail_454DFE0F4FE8221544021C9A98B42212");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_OnFail_454DFE0F4FE8221544021C9A98B42212) == 0x000001, "Wrong size on Task_Bandit_SplineMoveTo_C_OnFail_454DFE0F4FE8221544021C9A98B42212");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnFail_454DFE0F4FE8221544021C9A98B42212, MovementResult) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_OnFail_454DFE0F4FE8221544021C9A98B42212::MovementResult' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.OnFail_5C538A7744043F743AD600858B7E3DDC
// 0x0001 (0x0001 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_OnFail_5C538A7744043F743AD600858B7E3DDC final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_OnFail_5C538A7744043F743AD600858B7E3DDC) == 0x000001, "Wrong alignment on Task_Bandit_SplineMoveTo_C_OnFail_5C538A7744043F743AD600858B7E3DDC");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_OnFail_5C538A7744043F743AD600858B7E3DDC) == 0x000001, "Wrong size on Task_Bandit_SplineMoveTo_C_OnFail_5C538A7744043F743AD600858B7E3DDC");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnFail_5C538A7744043F743AD600858B7E3DDC, MovementResult) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_OnFail_5C538A7744043F743AD600858B7E3DDC::MovementResult' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.OnFail_B5DD2B4C406AD22E329C328B5AFBAB97
// 0x0001 (0x0001 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_OnFail_B5DD2B4C406AD22E329C328B5AFBAB97 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_OnFail_B5DD2B4C406AD22E329C328B5AFBAB97) == 0x000001, "Wrong alignment on Task_Bandit_SplineMoveTo_C_OnFail_B5DD2B4C406AD22E329C328B5AFBAB97");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_OnFail_B5DD2B4C406AD22E329C328B5AFBAB97) == 0x000001, "Wrong size on Task_Bandit_SplineMoveTo_C_OnFail_B5DD2B4C406AD22E329C328B5AFBAB97");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnFail_B5DD2B4C406AD22E329C328B5AFBAB97, MovementResult) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_OnFail_B5DD2B4C406AD22E329C328B5AFBAB97::MovementResult' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.OnFail_EDCABC044790CF7C881E279AD76753E5
// 0x0001 (0x0001 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_OnFail_EDCABC044790CF7C881E279AD76753E5 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_OnFail_EDCABC044790CF7C881E279AD76753E5) == 0x000001, "Wrong alignment on Task_Bandit_SplineMoveTo_C_OnFail_EDCABC044790CF7C881E279AD76753E5");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_OnFail_EDCABC044790CF7C881E279AD76753E5) == 0x000001, "Wrong size on Task_Bandit_SplineMoveTo_C_OnFail_EDCABC044790CF7C881E279AD76753E5");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnFail_EDCABC044790CF7C881E279AD76753E5, MovementResult) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_OnFail_EDCABC044790CF7C881E279AD76753E5::MovementResult' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.OnMoveFinished_69D377704ECBCE63938134B85B3B6FBC
// 0x0010 (0x0010 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_OnMoveFinished_69D377704ECBCE63938134B85B3B6FBC final
{
public:
	EPathFollowingResult                          Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          AIController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_OnMoveFinished_69D377704ECBCE63938134B85B3B6FBC) == 0x000008, "Wrong alignment on Task_Bandit_SplineMoveTo_C_OnMoveFinished_69D377704ECBCE63938134B85B3B6FBC");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_OnMoveFinished_69D377704ECBCE63938134B85B3B6FBC) == 0x000010, "Wrong size on Task_Bandit_SplineMoveTo_C_OnMoveFinished_69D377704ECBCE63938134B85B3B6FBC");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnMoveFinished_69D377704ECBCE63938134B85B3B6FBC, Result) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_OnMoveFinished_69D377704ECBCE63938134B85B3B6FBC::Result' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnMoveFinished_69D377704ECBCE63938134B85B3B6FBC, AIController) == 0x000008, "Member 'Task_Bandit_SplineMoveTo_C_OnMoveFinished_69D377704ECBCE63938134B85B3B6FBC::AIController' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.OnMoveFinished_DF1103574AEC383895FE67B593AC26B0
// 0x0010 (0x0010 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_OnMoveFinished_DF1103574AEC383895FE67B593AC26B0 final
{
public:
	EPathFollowingResult                          Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          AIController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_OnMoveFinished_DF1103574AEC383895FE67B593AC26B0) == 0x000008, "Wrong alignment on Task_Bandit_SplineMoveTo_C_OnMoveFinished_DF1103574AEC383895FE67B593AC26B0");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_OnMoveFinished_DF1103574AEC383895FE67B593AC26B0) == 0x000010, "Wrong size on Task_Bandit_SplineMoveTo_C_OnMoveFinished_DF1103574AEC383895FE67B593AC26B0");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnMoveFinished_DF1103574AEC383895FE67B593AC26B0, Result) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_OnMoveFinished_DF1103574AEC383895FE67B593AC26B0::Result' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnMoveFinished_DF1103574AEC383895FE67B593AC26B0, AIController) == 0x000008, "Member 'Task_Bandit_SplineMoveTo_C_OnMoveFinished_DF1103574AEC383895FE67B593AC26B0::AIController' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.OnSuccess_454DFE0F4FE8221544021C9A98B42212
// 0x0001 (0x0001 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_OnSuccess_454DFE0F4FE8221544021C9A98B42212 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_OnSuccess_454DFE0F4FE8221544021C9A98B42212) == 0x000001, "Wrong alignment on Task_Bandit_SplineMoveTo_C_OnSuccess_454DFE0F4FE8221544021C9A98B42212");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_OnSuccess_454DFE0F4FE8221544021C9A98B42212) == 0x000001, "Wrong size on Task_Bandit_SplineMoveTo_C_OnSuccess_454DFE0F4FE8221544021C9A98B42212");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnSuccess_454DFE0F4FE8221544021C9A98B42212, MovementResult) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_OnSuccess_454DFE0F4FE8221544021C9A98B42212::MovementResult' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.OnSuccess_5C538A7744043F743AD600858B7E3DDC
// 0x0001 (0x0001 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_OnSuccess_5C538A7744043F743AD600858B7E3DDC final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_OnSuccess_5C538A7744043F743AD600858B7E3DDC) == 0x000001, "Wrong alignment on Task_Bandit_SplineMoveTo_C_OnSuccess_5C538A7744043F743AD600858B7E3DDC");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_OnSuccess_5C538A7744043F743AD600858B7E3DDC) == 0x000001, "Wrong size on Task_Bandit_SplineMoveTo_C_OnSuccess_5C538A7744043F743AD600858B7E3DDC");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnSuccess_5C538A7744043F743AD600858B7E3DDC, MovementResult) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_OnSuccess_5C538A7744043F743AD600858B7E3DDC::MovementResult' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.OnSuccess_B5DD2B4C406AD22E329C328B5AFBAB97
// 0x0001 (0x0001 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_OnSuccess_B5DD2B4C406AD22E329C328B5AFBAB97 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_OnSuccess_B5DD2B4C406AD22E329C328B5AFBAB97) == 0x000001, "Wrong alignment on Task_Bandit_SplineMoveTo_C_OnSuccess_B5DD2B4C406AD22E329C328B5AFBAB97");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_OnSuccess_B5DD2B4C406AD22E329C328B5AFBAB97) == 0x000001, "Wrong size on Task_Bandit_SplineMoveTo_C_OnSuccess_B5DD2B4C406AD22E329C328B5AFBAB97");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnSuccess_B5DD2B4C406AD22E329C328B5AFBAB97, MovementResult) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_OnSuccess_B5DD2B4C406AD22E329C328B5AFBAB97::MovementResult' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.OnSuccess_EDCABC044790CF7C881E279AD76753E5
// 0x0001 (0x0001 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_OnSuccess_EDCABC044790CF7C881E279AD76753E5 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_OnSuccess_EDCABC044790CF7C881E279AD76753E5) == 0x000001, "Wrong alignment on Task_Bandit_SplineMoveTo_C_OnSuccess_EDCABC044790CF7C881E279AD76753E5");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_OnSuccess_EDCABC044790CF7C881E279AD76753E5) == 0x000001, "Wrong size on Task_Bandit_SplineMoveTo_C_OnSuccess_EDCABC044790CF7C881E279AD76753E5");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_OnSuccess_EDCABC044790CF7C881E279AD76753E5, MovementResult) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_OnSuccess_EDCABC044790CF7C881E279AD76753E5::MovementResult' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on Task_Bandit_SplineMoveTo_C_ReceiveExecuteAI");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_ReceiveExecuteAI) == 0x000010, "Wrong size on Task_Bandit_SplineMoveTo_C_ReceiveExecuteAI");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'Task_Bandit_SplineMoveTo_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function Task_Bandit_SplineMoveTo.Task_Bandit_SplineMoveTo_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct Task_Bandit_SplineMoveTo_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SplineMoveTo_C_ReceiveTickAI) == 0x000008, "Wrong alignment on Task_Bandit_SplineMoveTo_C_ReceiveTickAI");
static_assert(sizeof(Task_Bandit_SplineMoveTo_C_ReceiveTickAI) == 0x000018, "Wrong size on Task_Bandit_SplineMoveTo_C_ReceiveTickAI");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'Task_Bandit_SplineMoveTo_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'Task_Bandit_SplineMoveTo_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SplineMoveTo_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'Task_Bandit_SplineMoveTo_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

