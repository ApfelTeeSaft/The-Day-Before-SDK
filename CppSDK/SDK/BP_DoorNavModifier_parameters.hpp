#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DoorNavModifier

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DoorNavModifier.BP_DoorNavModifier_C.DoubleDoorHandler
// 0x05D8 (0x05D8 - 0x0000)
struct BP_DoorNavModifier_C_DoubleDoorHandler final
{
public:
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UStaticMeshComponent*>           CallFunc_GetComponentsByTag_ReturnValue;           // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0070(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin_1;              // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_1;           // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_1;        // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0320(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0408(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x04F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DoorNavModifier_C_DoubleDoorHandler) == 0x000008, "Wrong alignment on BP_DoorNavModifier_C_DoubleDoorHandler");
static_assert(sizeof(BP_DoorNavModifier_C_DoubleDoorHandler) == 0x0005D8, "Wrong size on BP_DoorNavModifier_C_DoubleDoorHandler");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_GetActorForwardVector_ReturnValue) == 0x000000, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000018, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000030, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000048, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_GetComponentsByTag_ReturnValue) == 0x000060, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000070, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_Array_Get_Item_1) == 0x000160, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_GetComponentBounds_Origin) == 0x000168, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_GetComponentBounds_BoxExtent) == 0x000180, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_GetComponentBounds_SphereRadius) == 0x000198, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_GetComponentBounds_Origin_1) == 0x0001A0, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_GetComponentBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_GetComponentBounds_BoxExtent_1) == 0x0001B8, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_GetComponentBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_GetComponentBounds_SphereRadius_1) == 0x0001D0, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_GetComponentBounds_SphereRadius_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_X) == 0x0001D8, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_Y) == 0x0001E0, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_Z) == 0x0001E8, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_X_1) == 0x0001F0, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_Y_1) == 0x0001F8, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_Z_1) == 0x000200, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_MakeVector_ReturnValue) == 0x000208, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_MakeVector_ReturnValue_1) == 0x000220, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_X_2) == 0x000238, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_Y_2) == 0x000240, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_Z_2) == 0x000248, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_X_3) == 0x000250, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_Y_3) == 0x000258, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_BreakVector_Z_3) == 0x000260, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000268, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000269, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_SelectFloat_ReturnValue) == 0x000270, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_SelectFloat_ReturnValue_1) == 0x000278, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000280, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000288, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_MakeVector_ReturnValue_2) == 0x000290, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_MakeVector_ReturnValue_3) == 0x0002A8, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002C0, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_Add_VectorVector_ReturnValue) == 0x0002D8, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0002F0, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000308, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000320, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000408, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_DoubleDoorHandler, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0004F0, "Member 'BP_DoorNavModifier_C_DoubleDoorHandler::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");

// Function BP_DoorNavModifier.BP_DoorNavModifier_C.ExecuteUbergraph_BP_DoorNavModifier
// 0x0190 (0x0190 - 0x0000)
struct BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Door_C*                             K2Node_Event_ParentDoor;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Double_Store_Door_C*                K2Node_DynamicCast_AsBP_Double_Store_Door;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Event_SocketTransform;                      // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier) == 0x000010, "Wrong alignment on BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier");
static_assert(sizeof(BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier) == 0x000190, "Wrong size on BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier");
static_assert(offsetof(BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier, EntryPoint) == 0x000000, "Member 'BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier, K2Node_Event_ParentDoor) == 0x000020, "Member 'BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier::K2Node_Event_ParentDoor' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier, K2Node_DynamicCast_AsBP_Double_Store_Door) == 0x000028, "Member 'BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier::K2Node_DynamicCast_AsBP_Double_Store_Door' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier, K2Node_Event_SocketTransform) == 0x000040, "Member 'BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier::K2Node_Event_SocketTransform' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000A0, "Member 'BP_DoorNavModifier_C_ExecuteUbergraph_BP_DoorNavModifier::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_DoorNavModifier.BP_DoorNavModifier_C.SetCarNavModifierExtent
// 0x0060 (0x0060 - 0x0000)
struct BP_DoorNavModifier_C_SetCarNavModifierExtent final
{
public:
	struct FTransform                             SocketTransform;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorNavModifier_C_SetCarNavModifierExtent) == 0x000010, "Wrong alignment on BP_DoorNavModifier_C_SetCarNavModifierExtent");
static_assert(sizeof(BP_DoorNavModifier_C_SetCarNavModifierExtent) == 0x000060, "Wrong size on BP_DoorNavModifier_C_SetCarNavModifierExtent");
static_assert(offsetof(BP_DoorNavModifier_C_SetCarNavModifierExtent, SocketTransform) == 0x000000, "Member 'BP_DoorNavModifier_C_SetCarNavModifierExtent::SocketTransform' has a wrong offset!");

// Function BP_DoorNavModifier.BP_DoorNavModifier_C.SetDoorNavModifierExtent
// 0x0008 (0x0008 - 0x0000)
struct BP_DoorNavModifier_C_SetDoorNavModifierExtent final
{
public:
	class ABP_Door_C*                             Param_ParentDoor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorNavModifier_C_SetDoorNavModifierExtent) == 0x000008, "Wrong alignment on BP_DoorNavModifier_C_SetDoorNavModifierExtent");
static_assert(sizeof(BP_DoorNavModifier_C_SetDoorNavModifierExtent) == 0x000008, "Wrong size on BP_DoorNavModifier_C_SetDoorNavModifierExtent");
static_assert(offsetof(BP_DoorNavModifier_C_SetDoorNavModifierExtent, Param_ParentDoor) == 0x000000, "Member 'BP_DoorNavModifier_C_SetDoorNavModifierExtent::Param_ParentDoor' has a wrong offset!");

// Function BP_DoorNavModifier.BP_DoorNavModifier_C.SingleDoorHandler
// 0x02F8 (0x02F8 - 0x0000)
struct BP_DoorNavModifier_C_SingleDoorHandler final
{
public:
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0030(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           CallFunc_GetComponentsByTag_ReturnValue;           // 0x0118(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x01F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorNavModifier_C_SingleDoorHandler) == 0x000008, "Wrong alignment on BP_DoorNavModifier_C_SingleDoorHandler");
static_assert(sizeof(BP_DoorNavModifier_C_SingleDoorHandler) == 0x0002F8, "Wrong size on BP_DoorNavModifier_C_SingleDoorHandler");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_GetActorForwardVector_ReturnValue) == 0x000000, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000018, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000030, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_GetComponentsByTag_ReturnValue) == 0x000118, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_Array_Get_Item) == 0x000128, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000130, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_GetComponentBounds_Origin) == 0x000148, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_GetComponentBounds_BoxExtent) == 0x000160, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_GetComponentBounds_SphereRadius) == 0x000178, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_BreakVector_X) == 0x000180, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_BreakVector_Y) == 0x000188, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_BreakVector_Z) == 0x000190, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_BreakVector_X_1) == 0x000198, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_BreakVector_Y_1) == 0x0001A0, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_BreakVector_Z_1) == 0x0001A8, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_MakeVector_ReturnValue) == 0x0001B8, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_SelectFloat_ReturnValue) == 0x0001D0, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D8, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0001F8, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DoorNavModifier_C_SingleDoorHandler, CallFunc_MakeVector_ReturnValue_1) == 0x0002E0, "Member 'BP_DoorNavModifier_C_SingleDoorHandler::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

}

