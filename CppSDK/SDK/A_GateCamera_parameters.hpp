#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: A_GateCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function A_GateCamera.A_GateCamera_C.ExecuteUbergraph_A_GateCamera
// 0x0460 (0x0460 - 0x0000)
struct A_GateCamera_C_ExecuteUbergraph_A_GateCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0130(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0370(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera) == 0x000010, "Wrong alignment on A_GateCamera_C_ExecuteUbergraph_A_GateCamera");
static_assert(sizeof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera) == 0x000460, "Wrong size on A_GateCamera_C_ExecuteUbergraph_A_GateCamera");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, EntryPoint) == 0x000000, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_GetRelativeTransform_ReturnValue) == 0x000010, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Location) == 0x000070, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0000B8, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Location_1) == 0x0000D0, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Rotation_1) == 0x0000E8, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Scale_1) == 0x000100, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_VLerp_ReturnValue) == 0x000118, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000130, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Location_2) == 0x000218, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Rotation_2) == 0x000230, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Scale_2) == 0x000248, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x000260, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000278, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000290, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x0002A8, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002C0, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0002C8, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0002E0, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002F8, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Location_3) == 0x000310, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Rotation_3) == 0x000328, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_BreakTransform_Scale_3) == 0x000340, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_VLerp_ReturnValue_1) == 0x000358, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_ExecuteUbergraph_A_GateCamera, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000370, "Member 'A_GateCamera_C_ExecuteUbergraph_A_GateCamera::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");

// Function A_GateCamera.A_GateCamera_C.SetDefaultCameraPosition
// 0x0130 (0x0130 - 0x0000)
struct A_GateCamera_C_SetDefaultCameraPosition final
{
public:
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(A_GateCamera_C_SetDefaultCameraPosition) == 0x000008, "Wrong alignment on A_GateCamera_C_SetDefaultCameraPosition");
static_assert(sizeof(A_GateCamera_C_SetDefaultCameraPosition) == 0x000130, "Wrong size on A_GateCamera_C_SetDefaultCameraPosition");
static_assert(offsetof(A_GateCamera_C_SetDefaultCameraPosition, CallFunc_BreakTransform_Location) == 0x000000, "Member 'A_GateCamera_C_SetDefaultCameraPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_SetDefaultCameraPosition, CallFunc_BreakTransform_Rotation) == 0x000018, "Member 'A_GateCamera_C_SetDefaultCameraPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_SetDefaultCameraPosition, CallFunc_BreakTransform_Scale) == 0x000030, "Member 'A_GateCamera_C_SetDefaultCameraPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(A_GateCamera_C_SetDefaultCameraPosition, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000048, "Member 'A_GateCamera_C_SetDefaultCameraPosition::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

}

