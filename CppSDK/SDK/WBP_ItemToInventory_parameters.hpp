#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemToInventory

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "AttachmentInfo_structs.hpp"
#include "EDismantleType_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.Add Entry Item
// 0x02A8 (0x02A8 - 0x0000)
struct WBP_ItemToInventory_C_Add_Entry_Item final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UWBP_ItemInteractionContainerEntry_C*   OutputPin;                                         // 0x0220(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_ItemInteractionContainerEntry_C* Entry)> K2Node_CreateDelegate_OutputDelegate;              // 0x0228(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_ItemInteractionContainerEntry_C* Ref)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0238(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_ItemInteractionContainerEntry_C* ItemWidgetRef)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0248(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_ItemInteractionContainerEntry_C* Ref)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0258(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemInteractionContainerEntry_C*   CallFunc_Create_ReturnValue;                       // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_Add_Entry_Item) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_Add_Entry_Item");
static_assert(sizeof(WBP_ItemToInventory_C_Add_Entry_Item) == 0x0002A8, "Wrong size on WBP_ItemToInventory_C_Add_Entry_Item");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, ItemInfo) == 0x000000, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, OutputPin) == 0x000220, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::OutputPin' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, K2Node_CreateDelegate_OutputDelegate) == 0x000228, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, K2Node_CreateDelegate_OutputDelegate_1) == 0x000238, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, K2Node_CreateDelegate_OutputDelegate_2) == 0x000248, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, K2Node_CreateDelegate_OutputDelegate_3) == 0x000258, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, CallFunc_Create_ReturnValue) == 0x000268, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000270, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, CallFunc_Array_AddUnique_ReturnValue) == 0x000278, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, CallFunc_GetChildrenCount_ReturnValue) == 0x00027C, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, CallFunc_Greater_IntInt_ReturnValue) == 0x000280, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, CallFunc_SelectFloat_ReturnValue) == 0x000288, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, K2Node_MakeStruct_Margin) == 0x000290, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Add_Entry_Item, K2Node_MakeStruct_Top_ImplicitCast) == 0x0002A0, "Member 'WBP_ItemToInventory_C_Add_Entry_Item::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ItemToInventory_C_BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ItemToInventory_C_BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature");
static_assert(sizeof(WBP_ItemToInventory_C_BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_ItemToInventory_C_BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature");
static_assert(offsetof(WBP_ItemToInventory_C_BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature, Count) == 0x000000, "Member 'WBP_ItemToInventory_C_BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature::Count' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ButtonHovered
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemToInventory_C_ButtonHovered final
{
public:
	class UWBP_ItemInteractionContainerEntry_C*   Ref;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_ButtonHovered) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_ButtonHovered");
static_assert(sizeof(WBP_ItemToInventory_C_ButtonHovered) == 0x000008, "Wrong size on WBP_ItemToInventory_C_ButtonHovered");
static_assert(offsetof(WBP_ItemToInventory_C_ButtonHovered, Ref) == 0x000000, "Member 'WBP_ItemToInventory_C_ButtonHovered::Ref' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ButtonSelected
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemToInventory_C_ButtonSelected final
{
public:
	class UWBP_ItemInteractionContainerEntry_C*   ItemWidgetRef;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_ButtonSelected) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_ButtonSelected");
static_assert(sizeof(WBP_ItemToInventory_C_ButtonSelected) == 0x000008, "Wrong size on WBP_ItemToInventory_C_ButtonSelected");
static_assert(offsetof(WBP_ItemToInventory_C_ButtonSelected, ItemWidgetRef) == 0x000000, "Member 'WBP_ItemToInventory_C_ButtonSelected::ItemWidgetRef' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ButtonUnhovered
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemToInventory_C_ButtonUnhovered final
{
public:
	class UWBP_ItemInteractionContainerEntry_C*   Ref;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_ButtonUnhovered) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_ButtonUnhovered");
static_assert(sizeof(WBP_ItemToInventory_C_ButtonUnhovered) == 0x000008, "Wrong size on WBP_ItemToInventory_C_ButtonUnhovered");
static_assert(offsetof(WBP_ItemToInventory_C_ButtonUnhovered, Ref) == 0x000000, "Member 'WBP_ItemToInventory_C_ButtonUnhovered::Ref' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CalculateSellPrice
// 0x0488 (0x0488 - 0x0000)
struct WBP_ItemToInventory_C_CalculateSellPrice final
{
public:
	struct FFItemInfo                             Item;                                              // 0x0000(0x0220)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Price;                                             // 0x0220(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SellPrice;                                         // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttachmentInfo                        CallFunc_Array_Get_Item;                           // 0x0234(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0248(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_CalculateSellPrice) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_CalculateSellPrice");
static_assert(sizeof(WBP_ItemToInventory_C_CalculateSellPrice) == 0x000488, "Wrong size on WBP_ItemToInventory_C_CalculateSellPrice");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, Item) == 0x000000, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, Price) == 0x000220, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::Price' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, SellPrice) == 0x000228, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::SellPrice' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, Temp_int_Array_Index_Variable) == 0x000230, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, CallFunc_Array_Get_Item) == 0x000234, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, CallFunc_Array_Length_ReturnValue) == 0x000244, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, CallFunc_GetDataTableRowFromName_OutRow) == 0x000248, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000468, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, Temp_int_Loop_Counter_Variable) == 0x00046C, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, CallFunc_Less_IntInt_ReturnValue) == 0x000470, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, CallFunc_Add_IntInt_ReturnValue) == 0x000474, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, CallFunc_FTrunc_ReturnValue) == 0x000478, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CalculateSellPrice, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000480, "Member 'WBP_ItemToInventory_C_CalculateSellPrice::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CheckCanIncrease
// 0x0230 (0x0230 - 0x0000)
struct WBP_ItemToInventory_C_CheckCanIncrease final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0008(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_CheckCanIncrease) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_CheckCanIncrease");
static_assert(sizeof(WBP_ItemToInventory_C_CheckCanIncrease) == 0x000230, "Wrong size on WBP_ItemToInventory_C_CheckCanIncrease");
static_assert(offsetof(WBP_ItemToInventory_C_CheckCanIncrease, Count) == 0x000000, "Member 'WBP_ItemToInventory_C_CheckCanIncrease::Count' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckCanIncrease, CallFunc_GetItemInfo_ItemInfo) == 0x000008, "Member 'WBP_ItemToInventory_C_CheckCanIncrease::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckCanIncrease, CallFunc_Greater_IntInt_ReturnValue) == 0x000228, "Member 'WBP_ItemToInventory_C_CheckCanIncrease::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckCanIncrease, CallFunc_Less_IntInt_ReturnValue) == 0x000229, "Member 'WBP_ItemToInventory_C_CheckCanIncrease::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckCanIncrease, CallFunc_BooleanAND_ReturnValue) == 0x00022A, "Member 'WBP_ItemToInventory_C_CheckCanIncrease::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CheckFreeSpaceToAddItem
// 0x0260 (0x0260 - 0x0000)
struct WBP_ItemToInventory_C_CheckFreeSpaceToAddItem final
{
public:
	bool                                          HaveFreeSpace;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0038(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Add_or_Equip_Item_Return;             // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_CheckFreeSpaceToAddItem) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_CheckFreeSpaceToAddItem");
static_assert(sizeof(WBP_ItemToInventory_C_CheckFreeSpaceToAddItem) == 0x000260, "Wrong size on WBP_ItemToInventory_C_CheckFreeSpaceToAddItem");
static_assert(offsetof(WBP_ItemToInventory_C_CheckFreeSpaceToAddItem, HaveFreeSpace) == 0x000000, "Member 'WBP_ItemToInventory_C_CheckFreeSpaceToAddItem::HaveFreeSpace' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckFreeSpaceToAddItem, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_ItemToInventory_C_CheckFreeSpaceToAddItem::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckFreeSpaceToAddItem, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_ItemToInventory_C_CheckFreeSpaceToAddItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckFreeSpaceToAddItem, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000018, "Member 'WBP_ItemToInventory_C_CheckFreeSpaceToAddItem::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckFreeSpaceToAddItem, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_ItemToInventory_C_CheckFreeSpaceToAddItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckFreeSpaceToAddItem, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000030, "Member 'WBP_ItemToInventory_C_CheckFreeSpaceToAddItem::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckFreeSpaceToAddItem, CallFunc_GetItemInfo_ItemInfo) == 0x000038, "Member 'WBP_ItemToInventory_C_CheckFreeSpaceToAddItem::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckFreeSpaceToAddItem, CallFunc_Can_Add_or_Equip_Item_Return) == 0x000258, "Member 'WBP_ItemToInventory_C_CheckFreeSpaceToAddItem::CallFunc_Can_Add_or_Equip_Item_Return' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CheckFreeSpaceToDismantleItems
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemToInventory_C_CheckFreeSpaceToDismantleItems final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFItemInfo>                     Items;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
};
static_assert(alignof(WBP_ItemToInventory_C_CheckFreeSpaceToDismantleItems) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_CheckFreeSpaceToDismantleItems");
static_assert(sizeof(WBP_ItemToInventory_C_CheckFreeSpaceToDismantleItems) == 0x000018, "Wrong size on WBP_ItemToInventory_C_CheckFreeSpaceToDismantleItems");
static_assert(offsetof(WBP_ItemToInventory_C_CheckFreeSpaceToDismantleItems, Return) == 0x000000, "Member 'WBP_ItemToInventory_C_CheckFreeSpaceToDismantleItems::Return' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CheckFreeSpaceToDismantleItems, Items) == 0x000008, "Member 'WBP_ItemToInventory_C_CheckFreeSpaceToDismantleItems::Items' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ClearEntries
// 0x0020 (0x0020 - 0x0000)
struct WBP_ItemToInventory_C_ClearEntries final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemInteractionContainerEntry_C*   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_ClearEntries) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_ClearEntries");
static_assert(sizeof(WBP_ItemToInventory_C_ClearEntries) == 0x000020, "Wrong size on WBP_ItemToInventory_C_ClearEntries");
static_assert(offsetof(WBP_ItemToInventory_C_ClearEntries, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_ItemToInventory_C_ClearEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ClearEntries, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_ItemToInventory_C_ClearEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ClearEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ItemToInventory_C_ClearEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ClearEntries, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_ItemToInventory_C_ClearEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ClearEntries, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_ItemToInventory_C_ClearEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ClearEntries, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_ItemToInventory_C_ClearEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CustomNavigation_InfoRight
// 0x0050 (0x0050 - 0x0000)
struct WBP_ItemToInventory_C_CustomNavigation_InfoRight final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_CustomNavigation_InfoRight) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_CustomNavigation_InfoRight");
static_assert(sizeof(WBP_ItemToInventory_C_CustomNavigation_InfoRight) == 0x000050, "Wrong size on WBP_ItemToInventory_C_CustomNavigation_InfoRight");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InfoRight, Param_Navigation) == 0x000000, "Member 'WBP_ItemToInventory_C_CustomNavigation_InfoRight::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InfoRight, ReturnValue) == 0x000008, "Member 'WBP_ItemToInventory_C_CustomNavigation_InfoRight::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InfoRight, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_ItemToInventory_C_CustomNavigation_InfoRight::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InfoRight, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000018, "Member 'WBP_ItemToInventory_C_CustomNavigation_InfoRight::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InfoRight, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_ItemToInventory_C_CustomNavigation_InfoRight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InfoRight, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000030, "Member 'WBP_ItemToInventory_C_CustomNavigation_InfoRight::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InfoRight, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_ItemToInventory_C_CustomNavigation_InfoRight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InfoRight, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_ItemToInventory_C_CustomNavigation_InfoRight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InfoRight, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'WBP_ItemToInventory_C_CustomNavigation_InfoRight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CustomNavigation_InventoryLeft
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemToInventory_C_CustomNavigation_InventoryLeft final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnabled_Enabled;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_CustomNavigation_InventoryLeft) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_CustomNavigation_InventoryLeft");
static_assert(sizeof(WBP_ItemToInventory_C_CustomNavigation_InventoryLeft) == 0x000018, "Wrong size on WBP_ItemToInventory_C_CustomNavigation_InventoryLeft");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InventoryLeft, Param_Navigation) == 0x000000, "Member 'WBP_ItemToInventory_C_CustomNavigation_InventoryLeft::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InventoryLeft, ReturnValue) == 0x000008, "Member 'WBP_ItemToInventory_C_CustomNavigation_InventoryLeft::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_InventoryLeft, CallFunc_GetEnabled_Enabled) == 0x000010, "Member 'WBP_ItemToInventory_C_CustomNavigation_InventoryLeft::CallFunc_GetEnabled_Enabled' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CustomNavigation_ItemsRight
// 0x0050 (0x0050 - 0x0000)
struct WBP_ItemToInventory_C_CustomNavigation_ItemsRight final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnabled_Enabled;                       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_CustomNavigation_ItemsRight");
static_assert(sizeof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight) == 0x000050, "Wrong size on WBP_ItemToInventory_C_CustomNavigation_ItemsRight");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight, Param_Navigation) == 0x000000, "Member 'WBP_ItemToInventory_C_CustomNavigation_ItemsRight::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight, ReturnValue) == 0x000008, "Member 'WBP_ItemToInventory_C_CustomNavigation_ItemsRight::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_ItemToInventory_C_CustomNavigation_ItemsRight::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000018, "Member 'WBP_ItemToInventory_C_CustomNavigation_ItemsRight::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_ItemToInventory_C_CustomNavigation_ItemsRight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000030, "Member 'WBP_ItemToInventory_C_CustomNavigation_ItemsRight::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_ItemToInventory_C_CustomNavigation_ItemsRight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight, CallFunc_GetEnabled_Enabled) == 0x000039, "Member 'WBP_ItemToInventory_C_CustomNavigation_ItemsRight::CallFunc_GetEnabled_Enabled' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_ItemToInventory_C_CustomNavigation_ItemsRight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_CustomNavigation_ItemsRight, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'WBP_ItemToInventory_C_CustomNavigation_ItemsRight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ExecuteUbergraph_WBP_ItemToInventory
// 0x0760 (0x0760 - 0x0000)
struct WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCustomLock_bCustomLock;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemInteractionContainerEntry_C*   K2Node_CustomEvent_ItemWidgetRef_1;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOpaque_bOpaque;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_Count;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCount_Count;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0060(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo_1;                   // 0x0280(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_CustomNavigation_InfoRight_ReturnValue;   // 0x04A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProcessing_bProcessing;                 // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2[0x2];                                      // 0x04B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x04B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C6[0x2];                                      // 0x04C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x04D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x04F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemInteractionContainerEntry_C*   K2Node_CustomEvent_ItemWidgetRef;                  // 0x0508(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo_2;                   // 0x0518(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UWBP_ItemInteractionContainerEntry_C*   K2Node_CustomEvent_Ref_1;                          // 0x0738(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemInteractionContainerEntry_C*   K2Node_CustomEvent_Ref;                            // 0x0740(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x0749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74A[0x2];                                      // 0x074A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x074C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory");
static_assert(sizeof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory) == 0x000760, "Wrong size on WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, EntryPoint) == 0x000000, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, Temp_bool_Variable) == 0x000004, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, Temp_bool_Variable_1) == 0x000006, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_IsValid_ReturnValue_1) == 0x000007, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_GetCustomLock_bCustomLock) == 0x000008, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_GetCustomLock_bCustomLock' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_CustomEvent_ItemWidgetRef_1) == 0x000010, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_CustomEvent_ItemWidgetRef_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_GetOpaque_bOpaque) == 0x000018, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_GetOpaque_bOpaque' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_ComponentBoundEvent_Count) == 0x00001C, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_ComponentBoundEvent_Count' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_GetItemCount_Count) == 0x000020, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_GetItemCount_Count' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_IsValid_ReturnValue_2) == 0x000024, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_PlayEvent2D_ReturnValue) == 0x000028, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000030, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000038, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_IsValid_ReturnValue_3) == 0x000040, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000048, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000050, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_IsValid_ReturnValue_4) == 0x000058, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_IsValid_ReturnValue_5) == 0x000059, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_GetItemInfo_ItemInfo) == 0x000060, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_GetItemInfo_ItemInfo_1) == 0x000280, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_GetItemInfo_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x0004A0, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_CustomNavigation_InfoRight_ReturnValue) == 0x0004A8, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_CustomNavigation_InfoRight_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_Event_IsDesignTime) == 0x0004B0, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_IsProcessing_bProcessing) == 0x0004B1, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_IsProcessing_bProcessing' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_CreateDelegate_OutputDelegate) == 0x0004B4, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_Not_PreBool_ReturnValue) == 0x0004C4, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_BooleanAND_ReturnValue) == 0x0004C5, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_GetPlayerController_ReturnValue) == 0x0004C8, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_GetHUD_ReturnValue) == 0x0004D0, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x0004D8, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_DynamicCast_bSuccess) == 0x0004E8, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x0004F0, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_DynamicCast_bSuccess_1) == 0x000500, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_CustomEvent_ItemWidgetRef) == 0x000508, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_CustomEvent_ItemWidgetRef' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_Select_Default) == 0x000510, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_GetItemInfo_ItemInfo_2) == 0x000518, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_GetItemInfo_ItemInfo_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_CustomEvent_Ref_1) == 0x000738, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_CustomEvent_Ref_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_CustomEvent_Ref) == 0x000740, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_CustomEvent_Ref' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000748, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x000749, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory, K2Node_CreateDelegate_OutputDelegate_1) == 0x00074C, "Member 'WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.FinalizeInit
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemToInventory_C_FinalizeInit final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemInteractionContainerEntry_C*   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_FinalizeInit) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_FinalizeInit");
static_assert(sizeof(WBP_ItemToInventory_C_FinalizeInit) == 0x000018, "Wrong size on WBP_ItemToInventory_C_FinalizeInit");
static_assert(offsetof(WBP_ItemToInventory_C_FinalizeInit, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_ItemToInventory_C_FinalizeInit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_FinalizeInit, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_ItemToInventory_C_FinalizeInit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_FinalizeInit, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_ItemToInventory_C_FinalizeInit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_FinalizeInit, CallFunc_IsValid_ReturnValue_2) == 0x000010, "Member 'WBP_ItemToInventory_C_FinalizeInit::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_FinalizeInit, CallFunc_Array_IsEmpty_ReturnValue) == 0x000011, "Member 'WBP_ItemToInventory_C_FinalizeInit::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.GetListOfItems
// 0x0010 (0x0010 - 0x0000)
struct WBP_ItemToInventory_C_GetListOfItems final
{
public:
	TArray<class UWBP_ItemInteractionContainerEntry_C*> Param_EntryList;                                   // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_ItemToInventory_C_GetListOfItems) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_GetListOfItems");
static_assert(sizeof(WBP_ItemToInventory_C_GetListOfItems) == 0x000010, "Wrong size on WBP_ItemToInventory_C_GetListOfItems");
static_assert(offsetof(WBP_ItemToInventory_C_GetListOfItems, Param_EntryList) == 0x000000, "Member 'WBP_ItemToInventory_C_GetListOfItems::Param_EntryList' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.GetSelectedEntry
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemToInventory_C_GetSelectedEntry final
{
public:
	class UWBP_ItemInteractionContainerEntry_C*   Param_SelectedEntry;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_GetSelectedEntry) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_GetSelectedEntry");
static_assert(sizeof(WBP_ItemToInventory_C_GetSelectedEntry) == 0x000008, "Wrong size on WBP_ItemToInventory_C_GetSelectedEntry");
static_assert(offsetof(WBP_ItemToInventory_C_GetSelectedEntry, Param_SelectedEntry) == 0x000000, "Member 'WBP_ItemToInventory_C_GetSelectedEntry::Param_SelectedEntry' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.InstantCreate
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemToInventory_C_InstantCreate final
{
public:
	class UWBP_ItemInteractionContainerEntry_C*   ItemWidgetRef;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_InstantCreate) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_InstantCreate");
static_assert(sizeof(WBP_ItemToInventory_C_InstantCreate) == 0x000008, "Wrong size on WBP_ItemToInventory_C_InstantCreate");
static_assert(offsetof(WBP_ItemToInventory_C_InstantCreate, ItemWidgetRef) == 0x000000, "Member 'WBP_ItemToInventory_C_InstantCreate::ItemWidgetRef' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.LockItemsListScroll
// 0x0009 (0x0009 - 0x0000)
struct WBP_ItemToInventory_C_LockItemsListScroll final
{
public:
	bool                                          Lock;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeMouseWheel                            Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeMouseWheel                            Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeMouseWheel                            K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollWhenFocusChanges                       K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_LockItemsListScroll) == 0x000001, "Wrong alignment on WBP_ItemToInventory_C_LockItemsListScroll");
static_assert(sizeof(WBP_ItemToInventory_C_LockItemsListScroll) == 0x000009, "Wrong size on WBP_ItemToInventory_C_LockItemsListScroll");
static_assert(offsetof(WBP_ItemToInventory_C_LockItemsListScroll, Lock) == 0x000000, "Member 'WBP_ItemToInventory_C_LockItemsListScroll::Lock' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_LockItemsListScroll, Temp_byte_Variable) == 0x000001, "Member 'WBP_ItemToInventory_C_LockItemsListScroll::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_LockItemsListScroll, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_ItemToInventory_C_LockItemsListScroll::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_LockItemsListScroll, Temp_bool_Variable) == 0x000003, "Member 'WBP_ItemToInventory_C_LockItemsListScroll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_LockItemsListScroll, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_ItemToInventory_C_LockItemsListScroll::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_LockItemsListScroll, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_ItemToInventory_C_LockItemsListScroll::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_LockItemsListScroll, Temp_bool_Variable_1) == 0x000006, "Member 'WBP_ItemToInventory_C_LockItemsListScroll::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_LockItemsListScroll, K2Node_Select_Default) == 0x000007, "Member 'WBP_ItemToInventory_C_LockItemsListScroll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_LockItemsListScroll, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_ItemToInventory_C_LockItemsListScroll::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.OnCreateCountChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_ItemToInventory_C_OnCreateCountChanged__DelegateSignature final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_OnCreateCountChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_ItemToInventory_C_OnCreateCountChanged__DelegateSignature");
static_assert(sizeof(WBP_ItemToInventory_C_OnCreateCountChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_ItemToInventory_C_OnCreateCountChanged__DelegateSignature");
static_assert(offsetof(WBP_ItemToInventory_C_OnCreateCountChanged__DelegateSignature, Count) == 0x000000, "Member 'WBP_ItemToInventory_C_OnCreateCountChanged__DelegateSignature::Count' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.OnProcessStarted__DelegateSignature
// 0x0220 (0x0220 - 0x0000)
struct WBP_ItemToInventory_C_OnProcessStarted__DelegateSignature final
{
public:
	struct FFItemInfo                             Info;                                              // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_OnProcessStarted__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_OnProcessStarted__DelegateSignature");
static_assert(sizeof(WBP_ItemToInventory_C_OnProcessStarted__DelegateSignature) == 0x000220, "Wrong size on WBP_ItemToInventory_C_OnProcessStarted__DelegateSignature");
static_assert(offsetof(WBP_ItemToInventory_C_OnProcessStarted__DelegateSignature, Info) == 0x000000, "Member 'WBP_ItemToInventory_C_OnProcessStarted__DelegateSignature::Info' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.OnSetButtonEnable__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemToInventory_C_OnSetButtonEnable__DelegateSignature final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_OnSetButtonEnable__DelegateSignature) == 0x000001, "Wrong alignment on WBP_ItemToInventory_C_OnSetButtonEnable__DelegateSignature");
static_assert(sizeof(WBP_ItemToInventory_C_OnSetButtonEnable__DelegateSignature) == 0x000001, "Wrong size on WBP_ItemToInventory_C_OnSetButtonEnable__DelegateSignature");
static_assert(offsetof(WBP_ItemToInventory_C_OnSetButtonEnable__DelegateSignature, Enable) == 0x000000, "Member 'WBP_ItemToInventory_C_OnSetButtonEnable__DelegateSignature::Enable' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemToInventory_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ItemToInventory_C_PreConstruct");
static_assert(sizeof(WBP_ItemToInventory_C_PreConstruct) == 0x000001, "Wrong size on WBP_ItemToInventory_C_PreConstruct");
static_assert(offsetof(WBP_ItemToInventory_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ItemToInventory_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ProcessFinished__DelegateSignature
// 0x0220 (0x0220 - 0x0000)
struct WBP_ItemToInventory_C_ProcessFinished__DelegateSignature final
{
public:
	struct FFItemInfo                             ItemInfo;                                          // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_ProcessFinished__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_ProcessFinished__DelegateSignature");
static_assert(sizeof(WBP_ItemToInventory_C_ProcessFinished__DelegateSignature) == 0x000220, "Wrong size on WBP_ItemToInventory_C_ProcessFinished__DelegateSignature");
static_assert(offsetof(WBP_ItemToInventory_C_ProcessFinished__DelegateSignature, ItemInfo) == 0x000000, "Member 'WBP_ItemToInventory_C_ProcessFinished__DelegateSignature::ItemInfo' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.RemoveEntryByIndex
// 0x0018 (0x0018 - 0x0000)
struct WBP_ItemToInventory_C_RemoveEntryByIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemInteractionContainerEntry_C*   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_RemoveEntryByIndex) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_RemoveEntryByIndex");
static_assert(sizeof(WBP_ItemToInventory_C_RemoveEntryByIndex) == 0x000018, "Wrong size on WBP_ItemToInventory_C_RemoveEntryByIndex");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByIndex, Param_Index) == 0x000000, "Member 'WBP_ItemToInventory_C_RemoveEntryByIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByIndex, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_ItemToInventory_C_RemoveEntryByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByIndex, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_ItemToInventory_C_RemoveEntryByIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByIndex, CallFunc_Array_RemoveItem_ReturnValue) == 0x000011, "Member 'WBP_ItemToInventory_C_RemoveEntryByIndex::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.RemoveEntryByUID
// 0x0250 (0x0250 - 0x0000)
struct WBP_ItemToInventory_C_RemoveEntryByUID final
{
public:
	int32                                         Uid;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ItemInteractionContainerEntry_C*   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0028(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_RemoveEntryByUID) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_RemoveEntryByUID");
static_assert(sizeof(WBP_ItemToInventory_C_RemoveEntryByUID) == 0x000250, "Wrong size on WBP_ItemToInventory_C_RemoveEntryByUID");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, Uid) == 0x000000, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::Uid' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, CallFunc_Array_RemoveItem_ReturnValue) == 0x000021, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, CallFunc_GetItemInfo_ItemInfo) == 0x000028, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_RemoveEntryByUID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000248, "Member 'WBP_ItemToInventory_C_RemoveEntryByUID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.UnbindInventoryUpdate
// 0x0080 (0x0080 - 0x0000)
struct WBP_ItemToInventory_C_UnbindInventoryUpdate final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EventInstanceIsValid_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_UnbindInventoryUpdate) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_UnbindInventoryUpdate");
static_assert(sizeof(WBP_ItemToInventory_C_UnbindInventoryUpdate) == 0x000080, "Wrong size on WBP_ItemToInventory_C_UnbindInventoryUpdate");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, CallFunc_GetHUD_ReturnValue) == 0x000008, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000010, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000028, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, CallFunc_EventInstanceIsValid_ReturnValue) == 0x000039, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::CallFunc_EventInstanceIsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, CallFunc_GetPlayerController_ReturnValue_1) == 0x000050, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000058, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000070, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UnbindInventoryUpdate, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'WBP_ItemToInventory_C_UnbindInventoryUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.Update Required Resouces
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_ItemToInventory_C_Update_Required_Resouces final
{
public:
	TMap<EDismantleType, int32>                   ResourcesAvailable;                                // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<EDismantleType, int32>                   ResourcesRequired;                                 // 0x0050(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CanCreate;                                         // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProcessing_bProcessing;                 // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProcessing_bProcessing_1;               // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFreeSpaceToAddItem_HaveFreeSpace;    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7[0x1];                                       // 0x00A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_CraftIngredient_C*>         CallFunc_GetIngredients_CraftingIngredients;       // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CraftIngredient_C*                 CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDismantleType                                CallFunc_GetResourceType_ResourceType;             // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_Update_Required_Resouces) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_Update_Required_Resouces");
static_assert(sizeof(WBP_ItemToInventory_C_Update_Required_Resouces) == 0x0000F8, "Wrong size on WBP_ItemToInventory_C_Update_Required_Resouces");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, ResourcesAvailable) == 0x000000, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::ResourcesAvailable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, ResourcesRequired) == 0x000050, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::ResourcesRequired' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CanCreate) == 0x0000A0, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CanCreate' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_IsProcessing_bProcessing) == 0x0000A1, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_IsProcessing_bProcessing' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_IsProcessing_bProcessing_1) == 0x0000A2, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_IsProcessing_bProcessing_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_Not_PreBool_ReturnValue) == 0x0000A3, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_CheckFreeSpaceToAddItem_HaveFreeSpace) == 0x0000A4, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_CheckFreeSpaceToAddItem_HaveFreeSpace' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_BooleanAND_ReturnValue) == 0x0000A5, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A6, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_GetIngredients_CraftingIngredients) == 0x0000B8, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_GetIngredients_CraftingIngredients' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_GetResourceType_ResourceType) == 0x0000D9, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_GetResourceType_ResourceType' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_Map_Find_Value) == 0x0000DC, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_Map_Find_ReturnValue) == 0x0000E0, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_Map_Find_Value_1) == 0x0000E4, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_Map_Find_ReturnValue_1) == 0x0000E8, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_SelectInt_ReturnValue) == 0x0000EC, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_Update_Required_Resouces, CallFunc_SelectInt_ReturnValue_1) == 0x0000F0, "Member 'WBP_ItemToInventory_C_Update_Required_Resouces::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.UpdateEntryByIndex
// 0x0238 (0x0238 - 0x0000)
struct WBP_ItemToInventory_C_UpdateEntryByIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             Item;                                              // 0x0008(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UWBP_ItemInteractionContainerEntry_C*   CallFunc_Array_Get_Item;                           // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_UpdateEntryByIndex) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_UpdateEntryByIndex");
static_assert(sizeof(WBP_ItemToInventory_C_UpdateEntryByIndex) == 0x000238, "Wrong size on WBP_ItemToInventory_C_UpdateEntryByIndex");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByIndex, Param_Index) == 0x000000, "Member 'WBP_ItemToInventory_C_UpdateEntryByIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByIndex, Item) == 0x000008, "Member 'WBP_ItemToInventory_C_UpdateEntryByIndex::Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByIndex, CallFunc_Array_Get_Item) == 0x000228, "Member 'WBP_ItemToInventory_C_UpdateEntryByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByIndex, CallFunc_IsValid_ReturnValue) == 0x000230, "Member 'WBP_ItemToInventory_C_UpdateEntryByIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.UpdateEntryByUID
// 0x0468 (0x0468 - 0x0000)
struct WBP_ItemToInventory_C_UpdateEntryByUID final
{
public:
	int32                                         Uid;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             Item;                                              // 0x0008(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemInteractionContainerEntry_C*   CallFunc_Array_Get_Item;                           // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E[0x2];                                      // 0x023E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0240(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_UpdateEntryByUID) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_UpdateEntryByUID");
static_assert(sizeof(WBP_ItemToInventory_C_UpdateEntryByUID) == 0x000468, "Wrong size on WBP_ItemToInventory_C_UpdateEntryByUID");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, Uid) == 0x000000, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::Uid' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, Item) == 0x000008, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, Temp_int_Array_Index_Variable) == 0x000228, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, Temp_int_Loop_Counter_Variable) == 0x00022C, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, CallFunc_Array_Get_Item) == 0x000230, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, CallFunc_Array_Length_ReturnValue) == 0x000238, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, CallFunc_Less_IntInt_ReturnValue) == 0x00023C, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, CallFunc_IsValid_ReturnValue) == 0x00023D, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, CallFunc_GetItemInfo_ItemInfo) == 0x000240, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, CallFunc_Add_IntInt_ReturnValue) == 0x000460, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateEntryByUID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000464, "Member 'WBP_ItemToInventory_C_UpdateEntryByUID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.UpdateResources
// 0x0270 (0x0270 - 0x0000)
struct WBP_ItemToInventory_C_UpdateResources final
{
public:
	EDismantleType                                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFreeSpaceToDismantleItems_Return;    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProcessing_bProcessing;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0018(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_CalculateSellPrice_Price;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCount_Count;                       // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_CraftIngredient_C*>         CallFunc_GetIngredients_CraftingIngredients;       // 0x0240(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CraftIngredient_C*                 CallFunc_Array_Get_Item;                           // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDismantleType                                CallFunc_GetResourceType_ResourceType;             // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x2];                                      // 0x0262(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_UpdateResources) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_UpdateResources");
static_assert(sizeof(WBP_ItemToInventory_C_UpdateResources) == 0x000270, "Wrong size on WBP_ItemToInventory_C_UpdateResources");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, Temp_byte_Variable) == 0x000000, "Member 'WBP_ItemToInventory_C_UpdateResources::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, Temp_int_Variable) == 0x000004, "Member 'WBP_ItemToInventory_C_UpdateResources::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_ItemToInventory_C_UpdateResources::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_ItemToInventory_C_UpdateResources::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_CheckFreeSpaceToDismantleItems_Return) == 0x000014, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_CheckFreeSpaceToDismantleItems_Return' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_IsProcessing_bProcessing) == 0x000015, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_IsProcessing_bProcessing' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_IsValid_ReturnValue) == 0x000016, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_GetItemInfo_ItemInfo) == 0x000018, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_CalculateSellPrice_Price) == 0x000238, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_CalculateSellPrice_Price' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_GetItemCount_Count) == 0x00023C, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_GetItemCount_Count' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_GetIngredients_CraftingIngredients) == 0x000240, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_GetIngredients_CraftingIngredients' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_Array_Length_ReturnValue) == 0x000250, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_Array_Get_Item) == 0x000258, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_Less_IntInt_ReturnValue) == 0x000260, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_GetResourceType_ResourceType) == 0x000261, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_GetResourceType_ResourceType' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, K2Node_Select_Default) == 0x000264, "Member 'WBP_ItemToInventory_C_UpdateResources::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_UpdateResources, CallFunc_Multiply_IntInt_ReturnValue) == 0x000268, "Member 'WBP_ItemToInventory_C_UpdateResources::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ValidateItemInfoCount
// 0x0240 (0x0240 - 0x0000)
struct WBP_ItemToInventory_C_ValidateItemInfoCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCount_Count;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ItemInteractionContainerEntry_C*   CallFunc_GetSelectedEntry_SelectedEntry;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetItemInfo_ItemInfo;                     // 0x0010(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemToInventory_C_ValidateItemInfoCount) == 0x000008, "Wrong alignment on WBP_ItemToInventory_C_ValidateItemInfoCount");
static_assert(sizeof(WBP_ItemToInventory_C_ValidateItemInfoCount) == 0x000240, "Wrong size on WBP_ItemToInventory_C_ValidateItemInfoCount");
static_assert(offsetof(WBP_ItemToInventory_C_ValidateItemInfoCount, Count) == 0x000000, "Member 'WBP_ItemToInventory_C_ValidateItemInfoCount::Count' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ValidateItemInfoCount, CallFunc_GetItemCount_Count) == 0x000004, "Member 'WBP_ItemToInventory_C_ValidateItemInfoCount::CallFunc_GetItemCount_Count' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ValidateItemInfoCount, CallFunc_GetSelectedEntry_SelectedEntry) == 0x000008, "Member 'WBP_ItemToInventory_C_ValidateItemInfoCount::CallFunc_GetSelectedEntry_SelectedEntry' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ValidateItemInfoCount, CallFunc_GetItemInfo_ItemInfo) == 0x000010, "Member 'WBP_ItemToInventory_C_ValidateItemInfoCount::CallFunc_GetItemInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ValidateItemInfoCount, CallFunc_Min_ReturnValue) == 0x000230, "Member 'WBP_ItemToInventory_C_ValidateItemInfoCount::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ValidateItemInfoCount, CallFunc_Max_ReturnValue) == 0x000234, "Member 'WBP_ItemToInventory_C_ValidateItemInfoCount::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ValidateItemInfoCount, CallFunc_Less_IntInt_ReturnValue) == 0x000238, "Member 'WBP_ItemToInventory_C_ValidateItemInfoCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemToInventory_C_ValidateItemInfoCount, CallFunc_SelectInt_ReturnValue) == 0x00023C, "Member 'WBP_ItemToInventory_C_ValidateItemInfoCount::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

}

