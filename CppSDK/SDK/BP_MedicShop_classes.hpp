#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MedicShop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Shops_classes.hpp"
#include "E_ActorType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MedicShop.BP_MedicShop_C
// 0x0048 (0x0700 - 0x06B8)
class ABP_MedicShop_C final : public ABP_Shops_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MedicShop_C;                     // 0x06B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Pencil_01a;                                     // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Clipboard_Filled;                               // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsQuestActive;                                     // 0x06D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasThisItem;                                       // 0x06D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D2[0x6];                                      // 0x06D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Quest_C*>                    Quests;                                            // 0x06D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         ItemUniqID;                                        // 0x06E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EC[0x4];                                      // 0x06EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULegacyCameraShake*                     ShakeInstance;                                     // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ShopFOV;                                           // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CustomEvent();
	void CustomEvent_1();
	void ExecuteUbergraph_BP_MedicShop(int32 EntryPoint);
	void GetActorType(E_ActorType* ActorType);
	void IsLocked_(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MedicShop_C">();
	}
	static class ABP_MedicShop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MedicShop_C>();
	}
};
static_assert(alignof(ABP_MedicShop_C) == 0x000008, "Wrong alignment on ABP_MedicShop_C");
static_assert(sizeof(ABP_MedicShop_C) == 0x000700, "Wrong size on ABP_MedicShop_C");
static_assert(offsetof(ABP_MedicShop_C, UberGraphFrame_BP_MedicShop_C) == 0x0006B8, "Member 'ABP_MedicShop_C::UberGraphFrame_BP_MedicShop_C' has a wrong offset!");
static_assert(offsetof(ABP_MedicShop_C, SM_Pencil_01a) == 0x0006C0, "Member 'ABP_MedicShop_C::SM_Pencil_01a' has a wrong offset!");
static_assert(offsetof(ABP_MedicShop_C, SM_Clipboard_Filled) == 0x0006C8, "Member 'ABP_MedicShop_C::SM_Clipboard_Filled' has a wrong offset!");
static_assert(offsetof(ABP_MedicShop_C, IsQuestActive) == 0x0006D0, "Member 'ABP_MedicShop_C::IsQuestActive' has a wrong offset!");
static_assert(offsetof(ABP_MedicShop_C, HasThisItem) == 0x0006D1, "Member 'ABP_MedicShop_C::HasThisItem' has a wrong offset!");
static_assert(offsetof(ABP_MedicShop_C, Quests) == 0x0006D8, "Member 'ABP_MedicShop_C::Quests' has a wrong offset!");
static_assert(offsetof(ABP_MedicShop_C, ItemUniqID) == 0x0006E8, "Member 'ABP_MedicShop_C::ItemUniqID' has a wrong offset!");
static_assert(offsetof(ABP_MedicShop_C, ShakeInstance) == 0x0006F0, "Member 'ABP_MedicShop_C::ShakeInstance' has a wrong offset!");
static_assert(offsetof(ABP_MedicShop_C, ShopFOV) == 0x0006F8, "Member 'ABP_MedicShop_C::ShopFOV' has a wrong offset!");

}

