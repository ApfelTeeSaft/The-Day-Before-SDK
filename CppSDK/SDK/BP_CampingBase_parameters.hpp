#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampingBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CampingBase.BP_CampingBase_C.ChangeToDefaultMaterials
// 0x0048 (0x0048 - 0x0000)
struct BP_CampingBase_C_ChangeToDefaultMaterials final
{
public:
	int32                                         DefaultMatIndex;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampingBase_C_ChangeToDefaultMaterials) == 0x000008, "Wrong alignment on BP_CampingBase_C_ChangeToDefaultMaterials");
static_assert(sizeof(BP_CampingBase_C_ChangeToDefaultMaterials) == 0x000048, "Wrong size on BP_CampingBase_C_ChangeToDefaultMaterials");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, DefaultMatIndex) == 0x000000, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::DefaultMatIndex' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, Temp_int_Variable) == 0x000014, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, CallFunc_GetNumMaterials_ReturnValue) == 0x000038, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToDefaultMaterials, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_CampingBase_C_ChangeToDefaultMaterials::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CampingBase.BP_CampingBase_C.ChangeToStateMaterials
// 0x0040 (0x0040 - 0x0000)
struct BP_CampingBase_C_ChangeToStateMaterials final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampingBase_C_ChangeToStateMaterials) == 0x000008, "Wrong alignment on BP_CampingBase_C_ChangeToStateMaterials");
static_assert(sizeof(BP_CampingBase_C_ChangeToStateMaterials) == 0x000040, "Wrong size on BP_CampingBase_C_ChangeToStateMaterials");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_CampingBase_C_ChangeToStateMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_CampingBase_C_ChangeToStateMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CampingBase_C_ChangeToStateMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, Temp_int_Variable) == 0x00000C, "Member 'BP_CampingBase_C_ChangeToStateMaterials::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_CampingBase_C_ChangeToStateMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_CampingBase_C_ChangeToStateMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BP_CampingBase_C_ChangeToStateMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_CampingBase_C_ChangeToStateMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_CampingBase_C_ChangeToStateMaterials::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, CallFunc_GetNumMaterials_ReturnValue) == 0x000030, "Member 'BP_CampingBase_C_ChangeToStateMaterials::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_CampingBase_C_ChangeToStateMaterials::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'BP_CampingBase_C_ChangeToStateMaterials::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ChangeToStateMaterials, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_CampingBase_C_ChangeToStateMaterials::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CampingBase.BP_CampingBase_C.CheckForSurface
// 0x0328 (0x0328 - 0x0000)
struct BP_CampingBase_C_CheckForSurface final
{
public:
	bool                                          CanBePlaced;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Max;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                ZPoints;                                           // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        TPoints;                                           // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        VPorints;                                          // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3[0x1];                                      // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0298(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast;  // 0x02F8(0x0010)(ConstParm, ReferenceParm)
	double                                        K2Node_VariableSet_Max_ImplicitCast;               // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x0310(0x0010)(ConstParm, ReferenceParm)
	double                                        K2Node_VariableSet_Min_ImplicitCast;               // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampingBase_C_CheckForSurface) == 0x000008, "Wrong alignment on BP_CampingBase_C_CheckForSurface");
static_assert(sizeof(BP_CampingBase_C_CheckForSurface) == 0x000328, "Wrong size on BP_CampingBase_C_CheckForSurface");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CanBePlaced) == 0x000000, "Member 'BP_CampingBase_C_CheckForSurface::CanBePlaced' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, Max) == 0x000008, "Member 'BP_CampingBase_C_CheckForSurface::Max' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, Min) == 0x000010, "Member 'BP_CampingBase_C_CheckForSurface::Min' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, ZPoints) == 0x000018, "Member 'BP_CampingBase_C_CheckForSurface::ZPoints' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, TPoints) == 0x000028, "Member 'BP_CampingBase_C_CheckForSurface::TPoints' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, VPorints) == 0x000038, "Member 'BP_CampingBase_C_CheckForSurface::VPorints' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_CampingBase_C_CheckForSurface::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_CampingBase_C_CheckForSurface::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000060, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_MaxOfFloatArray_MaxValue) == 0x000064, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x00006C, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_MinOfFloatArray_MinValue) == 0x000070, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'BP_CampingBase_C_CheckForSurface::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'BP_CampingBase_C_CheckForSurface::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_LineTraceSingle_OutHit) == 0x0000B8, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_LineTraceSingle_ReturnValue) == 0x0001A0, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A1, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001A2, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_Time) == 0x0001A4, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_Distance) == 0x0001A8, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_Location) == 0x0001B0, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C8, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_Normal) == 0x0001E0, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F8, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_PhysMat) == 0x000210, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_HitActor) == 0x000218, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_HitComponent) == 0x000220, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_HitBoneName) == 0x000228, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_BoneName) == 0x000230, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_HitItem) == 0x000238, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_ElementIndex) == 0x00023C, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_FaceIndex) == 0x000240, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_TraceStart) == 0x000248, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakHitResult_TraceEnd) == 0x000260, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakVector_X) == 0x000278, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakVector_Y) == 0x000280, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_BreakVector_Z) == 0x000288, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Array_Add_ReturnValue) == 0x000290, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Array_Add_ReturnValue_1) == 0x000294, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_GetChildrenComponents_Children) == 0x000298, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002A8, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Array_Get_Item_1) == 0x0002C0, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Array_Add_ReturnValue_2) == 0x0002C8, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0002D0, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Array_Length_ReturnValue_1) == 0x0002E8, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Array_Add_ReturnValue_3) == 0x0002EC, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F0, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast) == 0x0002F8, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, K2Node_VariableSet_Max_ImplicitCast) == 0x000308, "Member 'BP_CampingBase_C_CheckForSurface::K2Node_VariableSet_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x000310, "Member 'BP_CampingBase_C_CheckForSurface::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_CheckForSurface, K2Node_VariableSet_Min_ImplicitCast) == 0x000320, "Member 'BP_CampingBase_C_CheckForSurface::K2Node_VariableSet_Min_ImplicitCast' has a wrong offset!");

// Function BP_CampingBase.BP_CampingBase_C.ExecuteUbergraph_BP_CampingBase
// 0x0128 (0x0128 - 0x0000)
struct BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0038(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase) == 0x000008, "Wrong alignment on BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase");
static_assert(sizeof(BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase) == 0x000128, "Wrong size on BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase");
static_assert(offsetof(BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase, EntryPoint) == 0x000000, "Member 'BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase, K2Node_CustomEvent_Location) == 0x000008, "Member 'BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase, K2Node_CustomEvent_Rotation) == 0x000020, "Member 'BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000038, "Member 'BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000120, "Member 'BP_CampingBase_C_ExecuteUbergraph_BP_CampingBase::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function BP_CampingBase.BP_CampingBase_C.SetCampBuildingState
// 0x0058 (0x0058 - 0x0000)
struct BP_CampingBase_C_SetCampBuildingState final
{
public:
	bool                                          CanBuildCamping;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampingBase_C_SetCampBuildingState) == 0x000008, "Wrong alignment on BP_CampingBase_C_SetCampBuildingState");
static_assert(sizeof(BP_CampingBase_C_SetCampBuildingState) == 0x000058, "Wrong size on BP_CampingBase_C_SetCampBuildingState");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, CanBuildCamping) == 0x000000, "Member 'BP_CampingBase_C_SetCampBuildingState::CanBuildCamping' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, Temp_struct_Variable) == 0x000004, "Member 'BP_CampingBase_C_SetCampBuildingState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, Temp_struct_Variable_1) == 0x000014, "Member 'BP_CampingBase_C_SetCampBuildingState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_CampingBase_C_SetCampBuildingState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_CampingBase_C_SetCampBuildingState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_CampingBase_C_SetCampBuildingState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, Temp_bool_Variable) == 0x000030, "Member 'BP_CampingBase_C_SetCampBuildingState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_CampingBase_C_SetCampBuildingState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, K2Node_Select_Default) == 0x000040, "Member 'BP_CampingBase_C_SetCampBuildingState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_CampingBase_C_SetCampBuildingState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_SetCampBuildingState, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_CampingBase_C_SetCampBuildingState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CampingBase.BP_CampingBase_C.SetCollisionResponse
// 0x0001 (0x0001 - 0x0000)
struct BP_CampingBase_C_SetCollisionResponse final
{
public:
	bool                                          CollisionEnabled;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampingBase_C_SetCollisionResponse) == 0x000001, "Wrong alignment on BP_CampingBase_C_SetCollisionResponse");
static_assert(sizeof(BP_CampingBase_C_SetCollisionResponse) == 0x000001, "Wrong size on BP_CampingBase_C_SetCollisionResponse");
static_assert(offsetof(BP_CampingBase_C_SetCollisionResponse, CollisionEnabled) == 0x000000, "Member 'BP_CampingBase_C_SetCollisionResponse::CollisionEnabled' has a wrong offset!");

// Function BP_CampingBase.BP_CampingBase_C.StoreAllMaterials
// 0x0058 (0x0058 - 0x0000)
struct BP_CampingBase_C_StoreAllMaterials final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampingBase_C_StoreAllMaterials) == 0x000008, "Wrong alignment on BP_CampingBase_C_StoreAllMaterials");
static_assert(sizeof(BP_CampingBase_C_StoreAllMaterials) == 0x000058, "Wrong size on BP_CampingBase_C_StoreAllMaterials");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_CampingBase_C_StoreAllMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_CampingBase_C_StoreAllMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CampingBase_C_StoreAllMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_CampingBase_C_StoreAllMaterials::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_CampingBase_C_StoreAllMaterials::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_CampingBase_C_StoreAllMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_CampingBase_C_StoreAllMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, CallFunc_GetMaterials_ReturnValue) == 0x000028, "Member 'BP_CampingBase_C_StoreAllMaterials::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_CampingBase_C_StoreAllMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_CampingBase_C_StoreAllMaterials::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BP_CampingBase_C_StoreAllMaterials::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_CampingBase_C_StoreAllMaterials::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_CampingBase_C_StoreAllMaterials::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMaterials, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_CampingBase_C_StoreAllMaterials::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CampingBase.BP_CampingBase_C.StoreAllMeshes
// 0x0038 (0x0038 - 0x0000)
struct BP_CampingBase_C_StoreAllMeshes final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CampingBase_C_StoreAllMeshes) == 0x000008, "Wrong alignment on BP_CampingBase_C_StoreAllMeshes");
static_assert(sizeof(BP_CampingBase_C_StoreAllMeshes) == 0x000038, "Wrong size on BP_CampingBase_C_StoreAllMeshes");
static_assert(offsetof(BP_CampingBase_C_StoreAllMeshes, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CampingBase_C_StoreAllMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMeshes, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CampingBase_C_StoreAllMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CampingBase_C_StoreAllMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMeshes, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_CampingBase_C_StoreAllMeshes::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMeshes, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_CampingBase_C_StoreAllMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMeshes, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_CampingBase_C_StoreAllMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMeshes, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_CampingBase_C_StoreAllMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_StoreAllMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_CampingBase_C_StoreAllMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CampingBase.BP_CampingBase_C.UpdateLocationAndRotation
// 0x0030 (0x0030 - 0x0000)
struct BP_CampingBase_C_UpdateLocationAndRotation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CampingBase_C_UpdateLocationAndRotation) == 0x000008, "Wrong alignment on BP_CampingBase_C_UpdateLocationAndRotation");
static_assert(sizeof(BP_CampingBase_C_UpdateLocationAndRotation) == 0x000030, "Wrong size on BP_CampingBase_C_UpdateLocationAndRotation");
static_assert(offsetof(BP_CampingBase_C_UpdateLocationAndRotation, Location) == 0x000000, "Member 'BP_CampingBase_C_UpdateLocationAndRotation::Location' has a wrong offset!");
static_assert(offsetof(BP_CampingBase_C_UpdateLocationAndRotation, Rotation) == 0x000018, "Member 'BP_CampingBase_C_UpdateLocationAndRotation::Rotation' has a wrong offset!");

}

