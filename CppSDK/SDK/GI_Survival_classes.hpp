#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GI_Survival

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "ENUM_ServerRegions_structs.hpp"
#include "Survival_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_WarningMessageType_structs.hpp"
#include "NISBlueprint_structs.hpp"
#include "SkyCreatorLightStateEnum_structs.hpp"
#include "DLSSBlueprint_structs.hpp"
#include "BattlEye_structs.hpp"
#include "FirebaseFeatures_structs.hpp"
#include "NetCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GI_Survival.GI_Survival_C
// 0x0318 (0x0530 - 0x0218)
class UGI_Survival_C final : public USurvivalGameInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0218(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UObject*>                        PreLoadedTiles;                                    // 0x0220(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 PlayFabUserID;                                     // 0x0230(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   SpawnRegion;                                       // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PendingTeleport;                                   // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ServerAddress;                                     // 0x0249(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DeathCounter;                                      // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentQuestIndex;                                 // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     LoadingScreenAmbient;                              // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USG_Tutorial_C*                         CurrentTutorialSaveSlot;                           // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAfterMenu;                                      // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    LoadingScreenTime;                                 // 0x026C(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ShadowsQuality;                                    // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TexturesQuality;                                   // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PostProcessQuality;                                // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AntiAliacingQuality;                               // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShadingQuality;                                    // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EffectsQuality;                                    // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSettings_C*                        GameSettings;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCharacterCreateSave_C*                 GI_CharacterSaveRef;                               // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CharactedCreated;                                  // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  PlayerPPV;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        LensIntensityDefault;                              // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class UQuest*>                           NPCQuests;                                         // 0x02C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          InHub;                                             // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class UQuest*>                           SpecQuests;                                        // 0x0318(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UPerkTestSave_C*                        PerkSaveRef;                                       // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewCharacter;                                    // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisclaimerShowed;                                 // 0x0371(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableVoiceLines;                                 // 0x0372(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableTextChat;                                   // 0x0373(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableVoiceChat;                                  // 0x0374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ConnectionErrorText;                               // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bConnectAttempt;                                   // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USG_Dialogue_C*                         As_SG_Dialogue;                                    // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         TDBSERVERCREDENTIALS;                              // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 VoiceCulture;                                      // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         MouseSensitivity;                                  // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MouseInverse;                                      // 0x03BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USavePrivacyPolicy_C*                   PrivacyPolicySaveRef;                              // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedTutorReset;                                   // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewCharacterCreated;                               // 0x03C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CA[0x6];                                      // 0x03CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDatabaseReference*                     DatabaseServerListReference;                       // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            NewServers;                                        // 0x03D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, class FString>            Servers;                                           // 0x0428(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             ServerListReady;                                   // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           LoadLevelTimerHandle;                              // 0x0488(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bMovieShowed;                                      // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_WarningMessageType                       Type_Message;                                      // 0x0491(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description_Text;                                  // 0x0498(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          New_State;                                         // 0x04B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bKickedFromAFK;                                    // 0x04B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Agones;                                            // 0x04B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B3[0x5];                                      // 0x04B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentServerList;                                 // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UFirestoreQuery*                        CurrentQuery;                                      // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 WarningMessageTime;                                // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 GameVersion;                                       // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          ResolutionFix;                                     // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUser*                                  User;                                              // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCharacterLoaded;                                 // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        RenderScale;                                       // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasCreated_;                                       // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Server;                                            // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ApplySettings();
	void ApplyUpscaling();
	void AuthToServer();
	int32 CalculateMinutesFrom2022();
	bool CheckReflexIsAvaliable();
	void ConsoleSettings();
	void CustomEvent();
	void CustomEvent_0();
	void CustomShadowQuality(int32 Quality);
	void DLSS(int32 Quality, double Sharpness);
	void DLSSFrameAndReflex(bool Enable, int32 Reflex);
	void DynamicGlobalIllumination(int32 Method);
	void ExecuteUbergraph_GI_Survival(int32 EntryPoint);
	void FirebaseArrayToStringArray(const TArray<struct FFirestoreFieldValue>& Value, const TArray<class FString>* Result);
	void FSR2(int32 Quality);
	void GetDisclaimerShowed(bool* Showed);
	void GetGIGraphicsSettings(int32* Param_ShadowsQuality, int32* Param_TexturesQuality, int32* Param_PostProcessQuality, int32* Param_AntiAliacingQuality, int32* Param_ShadingQuality, int32* Param_EffectsQuality);
	void GetIsFemale(bool* IsFemale);
	void GetKickedFromAFK(bool* OutKickedFromAFK);
	void GetMovieShowed(bool* Showed);
	void GetNormalSettings();
	void GetNPCQuests(bool Param_SpecQuests, TSet<class UQuest*>* Quests);
	void GetPathToServersCollection(const class FString& Region, class UFirestoreCollectionReference** Collection);
	void GetSaveCharsFromServer();
	void GetShadersRemainingPSO(int64* Count);
	void GetTextChatEnabled(bool* bEnabled);
	class FString GetTimeTag();
	void GetVoiceChatEnabled(bool* bEnabled);
	void GetVoiceLinesEnabled(bool* bEnabled);
	void GetWarningMessage(Enum_WarningMessageType* Param_Type_Message, class FText* Param_Description_Text, class FString* Time, bool* Param_New_State);
	void HandleNetworkError(ENetworkFailure FailureType, bool bIsServer);
	void HandleTravelError(ETravelFailure FailureType);
	void HideLoadingScreenAfterLoadLevel();
	void Init_NPCQuests();
	void InitSpecQuests();
	void IsFirstStart(bool* Param_IsFirstStart);
	void IsRadioMessagePlayed(bool* IsPlayed);
	void IsStashTutorialCompleted(bool* Completed);
	void IsTutorialBeginCompleted(bool* Completed);
	void IsTutorialCompleted(bool* Completed);
	void JoinToServer();
	void LightStateChanged();
	void LoadCharacter();
	void LoadCharacterInfo();
	void LoadDeathCount(int32* DeathCount);
	void LoadDialogue();
	void LoadGameSettings();
	void LoadPolicy();
	void LoadQuests(TMap<int32, struct FQuestSaveStructure>* QuestsInfo);
	class FString LowEncString(int64 Input);
	void NeedTutorReset();
	void NewCharCreated();
	void NIS(int32 Param_NIS);
	void OnCharacterLoaded__DelegateSignature();
	void OnCharLoadMeshes_Event();
	void OnError_23CC9A174CA102442FB54A8830395DF8(const EFirebaseAuthError Error, const class UUser* Param_User);
	void OnError_6835CB6744EE185D3F5D78926D3BD00B(const EFirestoreError Error, const TArray<struct FFirestoreDocumentSnapshot>& DocumentSnapshots, const TArray<class UFirestoreDocumentChange*>& DocumentChanges);
	void OnError_6835CB6744EE185D3F5D7892C1B52321(const EFirestoreError Error, const TArray<struct FFirestoreDocumentSnapshot>& DocumentSnapshots, const TArray<class UFirestoreDocumentChange*>& DocumentChanges);
	void OnError_6835CB6744EE185D3F5D7892F0891E7E(const EFirestoreError Error, const TArray<struct FFirestoreDocumentSnapshot>& DocumentSnapshots, const TArray<class UFirestoreDocumentChange*>& DocumentChanges);
	void OnError_6835CB6744EE185D3F5D7892FAB18A59(const EFirestoreError Error, const TArray<struct FFirestoreDocumentSnapshot>& DocumentSnapshots, const TArray<class UFirestoreDocumentChange*>& DocumentChanges);
	void OnError_A95FB9504F6A9A8A567CB4BB4EEB4351(const EFirebaseAuthError Error, const class UUser* Param_User);
	void OnError_BAC59632492DB18DF9AE5F94ECBDAA46(const EFirestoreError Error, const struct FFirestoreDocumentSnapshot& DocumentSnapshot);
	void OnFailure_11AA78EF4DED4BFEB577A28ABD444A7E();
	void OnFailure_AF6BB2BE4E8813202D7A81BD3F550645();
	void OnFailure_BA4A1E39414381EFD864E1AEBDC2BC27();
	void OnGot_6835CB6744EE185D3F5D78926D3BD00B(const EFirestoreError Error, const TArray<struct FFirestoreDocumentSnapshot>& DocumentSnapshots, const TArray<class UFirestoreDocumentChange*>& DocumentChanges);
	void OnGot_6835CB6744EE185D3F5D7892C1B52321(const EFirestoreError Error, const TArray<struct FFirestoreDocumentSnapshot>& DocumentSnapshots, const TArray<class UFirestoreDocumentChange*>& DocumentChanges);
	void OnGot_6835CB6744EE185D3F5D7892F0891E7E(const EFirestoreError Error, const TArray<struct FFirestoreDocumentSnapshot>& DocumentSnapshots, const TArray<class UFirestoreDocumentChange*>& DocumentChanges);
	void OnGot_6835CB6744EE185D3F5D7892FAB18A59(const EFirestoreError Error, const TArray<struct FFirestoreDocumentSnapshot>& DocumentSnapshots, const TArray<class UFirestoreDocumentChange*>& DocumentChanges);
	void OnGot_BAC59632492DB18DF9AE5F94ECBDAA46(const EFirestoreError Error, const struct FFirestoreDocumentSnapshot& DocumentSnapshot);
	void OnPrintMessageClient(const class FString& PMessage);
	void OnPrintMessageServer(const class FString& PMessage, EMessageType PType);
	void OnRequestRestartClient(ERestartReason PReason);
	void OnSignedIn_23CC9A174CA102442FB54A8830395DF8(const EFirebaseAuthError Error, const class UUser* Param_User);
	void OnSuccess_11AA78EF4DED4BFEB577A28ABD444A7E();
	void OnSuccess_AF6BB2BE4E8813202D7A81BD3F550645();
	void OnSuccess_BA4A1E39414381EFD864E1AEBDC2BC27();
	void OnUserCreated_A95FB9504F6A9A8A567CB4BB4EEB4351(const EFirebaseAuthError Error, const class UUser* Param_User);
	void PerkLoad();
	void PerkSave();
	void PrepareServerList();
	void RayTracing(bool Enable);
	void RayTracingOff();
	void RayTracingOn();
	void ReceiveInit();
	void ReceiveShutdown();
	void ReflectionMethod(int32 Method);
	void SaveCharacter();
	void SaveCharacterInfo();
	void SaveDialogue();
	void SaveGameSettings();
	void SavePolicy();
	void SaveQuestInfo(const TMap<int32, struct FQuestSaveStructure>& QuestsInfo);
	class FString SelectServerTag(ENUM_ServerRegions Param_Index);
	void ServerListByRegion(ENUM_ServerRegions Region);
	void ServerListReady__DelegateSignature(ENUM_ServerRegions Region);
	void ServerListRearrange();
	void SetAfterMenu(bool AfterMenu);
	void SetBatchModePSO(int32 Mode);
	void SetDisclaimerShowed(bool Show);
	void SetFistStart(bool Param_IsFirstStart);
	void SetFMOD(const class FString& Language);
	void SetGameSettings(class USurvivalGameUserSettings* SurvivalGameUserSettings);
	void SetKickedFromAFK(bool NewKickedFromAFK);
	void SetMaxSettings();
	void SetMovieShowed(bool Show);
	void SetNormalSettings();
	void SetQuestDefaultValues(class FName Param_Name, class UQuest* Target);
	void SetRadioMessagePlayed(bool Played);
	void SetServerAddress(const class FString& IP, const class FString& Port);
	void SetSpawnRegion(class FName Region);
	void SetStashTutorialCompleted(bool Completed);
	void SetTextChatEnabled(bool bEnable);
	void SetTutorialBeginCompleted(bool Completed);
	void SetTutorialCompleted(bool Completed);
	void SetVoiceChatEnabled(bool bEnable);
	void SetVoiceLinesEnabled(bool bEnable);
	void SetWarningMessage(Enum_WarningMessageType Param_Type_Message, const class FText& Param_Description_Text, const class FString& Time, bool Param_New_State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GI_Survival_C">();
	}
	static class UGI_Survival_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGI_Survival_C>();
	}
};
static_assert(alignof(UGI_Survival_C) == 0x000008, "Wrong alignment on UGI_Survival_C");
static_assert(sizeof(UGI_Survival_C) == 0x000530, "Wrong size on UGI_Survival_C");
static_assert(offsetof(UGI_Survival_C, UberGraphFrame) == 0x000218, "Member 'UGI_Survival_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, PreLoadedTiles) == 0x000220, "Member 'UGI_Survival_C::PreLoadedTiles' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, PlayFabUserID) == 0x000230, "Member 'UGI_Survival_C::PlayFabUserID' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, SpawnRegion) == 0x000240, "Member 'UGI_Survival_C::SpawnRegion' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, PendingTeleport) == 0x000248, "Member 'UGI_Survival_C::PendingTeleport' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, ServerAddress) == 0x000249, "Member 'UGI_Survival_C::ServerAddress' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, DeathCounter) == 0x00024C, "Member 'UGI_Survival_C::DeathCounter' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, CurrentQuestIndex) == 0x000250, "Member 'UGI_Survival_C::CurrentQuestIndex' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, LoadingScreenAmbient) == 0x000258, "Member 'UGI_Survival_C::LoadingScreenAmbient' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, CurrentTutorialSaveSlot) == 0x000260, "Member 'UGI_Survival_C::CurrentTutorialSaveSlot' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, bIsAfterMenu) == 0x000268, "Member 'UGI_Survival_C::bIsAfterMenu' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, LoadingScreenTime) == 0x00026C, "Member 'UGI_Survival_C::LoadingScreenTime' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, ShadowsQuality) == 0x00027C, "Member 'UGI_Survival_C::ShadowsQuality' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, TexturesQuality) == 0x000280, "Member 'UGI_Survival_C::TexturesQuality' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, PostProcessQuality) == 0x000284, "Member 'UGI_Survival_C::PostProcessQuality' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, AntiAliacingQuality) == 0x000288, "Member 'UGI_Survival_C::AntiAliacingQuality' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, ShadingQuality) == 0x00028C, "Member 'UGI_Survival_C::ShadingQuality' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, EffectsQuality) == 0x000290, "Member 'UGI_Survival_C::EffectsQuality' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, GameSettings) == 0x000298, "Member 'UGI_Survival_C::GameSettings' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, GI_CharacterSaveRef) == 0x0002A0, "Member 'UGI_Survival_C::GI_CharacterSaveRef' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, CharactedCreated) == 0x0002A8, "Member 'UGI_Survival_C::CharactedCreated' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, PlayerPPV) == 0x0002B0, "Member 'UGI_Survival_C::PlayerPPV' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, LensIntensityDefault) == 0x0002B8, "Member 'UGI_Survival_C::LensIntensityDefault' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, NPCQuests) == 0x0002C0, "Member 'UGI_Survival_C::NPCQuests' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, InHub) == 0x000310, "Member 'UGI_Survival_C::InHub' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, SpecQuests) == 0x000318, "Member 'UGI_Survival_C::SpecQuests' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, PerkSaveRef) == 0x000368, "Member 'UGI_Survival_C::PerkSaveRef' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, IsNewCharacter) == 0x000370, "Member 'UGI_Survival_C::IsNewCharacter' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, bDisclaimerShowed) == 0x000371, "Member 'UGI_Survival_C::bDisclaimerShowed' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, bEnableVoiceLines) == 0x000372, "Member 'UGI_Survival_C::bEnableVoiceLines' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, bEnableTextChat) == 0x000373, "Member 'UGI_Survival_C::bEnableTextChat' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, bEnableVoiceChat) == 0x000374, "Member 'UGI_Survival_C::bEnableVoiceChat' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, ConnectionErrorText) == 0x000378, "Member 'UGI_Survival_C::ConnectionErrorText' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, bConnectAttempt) == 0x000388, "Member 'UGI_Survival_C::bConnectAttempt' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, As_SG_Dialogue) == 0x000390, "Member 'UGI_Survival_C::As_SG_Dialogue' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, TDBSERVERCREDENTIALS) == 0x000398, "Member 'UGI_Survival_C::TDBSERVERCREDENTIALS' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, VoiceCulture) == 0x0003A8, "Member 'UGI_Survival_C::VoiceCulture' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, MouseSensitivity) == 0x0003B8, "Member 'UGI_Survival_C::MouseSensitivity' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, MouseInverse) == 0x0003BC, "Member 'UGI_Survival_C::MouseInverse' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, PrivacyPolicySaveRef) == 0x0003C0, "Member 'UGI_Survival_C::PrivacyPolicySaveRef' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, bNeedTutorReset) == 0x0003C8, "Member 'UGI_Survival_C::bNeedTutorReset' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, NewCharacterCreated) == 0x0003C9, "Member 'UGI_Survival_C::NewCharacterCreated' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, DatabaseServerListReference) == 0x0003D0, "Member 'UGI_Survival_C::DatabaseServerListReference' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, NewServers) == 0x0003D8, "Member 'UGI_Survival_C::NewServers' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, Servers) == 0x000428, "Member 'UGI_Survival_C::Servers' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, ServerListReady) == 0x000478, "Member 'UGI_Survival_C::ServerListReady' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, LoadLevelTimerHandle) == 0x000488, "Member 'UGI_Survival_C::LoadLevelTimerHandle' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, bMovieShowed) == 0x000490, "Member 'UGI_Survival_C::bMovieShowed' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, Type_Message) == 0x000491, "Member 'UGI_Survival_C::Type_Message' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, Description_Text) == 0x000498, "Member 'UGI_Survival_C::Description_Text' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, New_State) == 0x0004B0, "Member 'UGI_Survival_C::New_State' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, bKickedFromAFK) == 0x0004B1, "Member 'UGI_Survival_C::bKickedFromAFK' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, Agones) == 0x0004B2, "Member 'UGI_Survival_C::Agones' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, CurrentServerList) == 0x0004B8, "Member 'UGI_Survival_C::CurrentServerList' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, CurrentQuery) == 0x0004C8, "Member 'UGI_Survival_C::CurrentQuery' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, WarningMessageTime) == 0x0004D0, "Member 'UGI_Survival_C::WarningMessageTime' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, GameVersion) == 0x0004E0, "Member 'UGI_Survival_C::GameVersion' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, ResolutionFix) == 0x0004F0, "Member 'UGI_Survival_C::ResolutionFix' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, User) == 0x0004F8, "Member 'UGI_Survival_C::User' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, OnCharacterLoaded) == 0x000500, "Member 'UGI_Survival_C::OnCharacterLoaded' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, RenderScale) == 0x000510, "Member 'UGI_Survival_C::RenderScale' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, WasCreated_) == 0x000518, "Member 'UGI_Survival_C::WasCreated_' has a wrong offset!");
static_assert(offsetof(UGI_Survival_C, Server) == 0x000520, "Member 'UGI_Survival_C::Server' has a wrong offset!");

}

