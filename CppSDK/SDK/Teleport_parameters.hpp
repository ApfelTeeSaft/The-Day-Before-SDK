#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Teleport

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Teleport.Teleport_C.AddTeleportableActor
// 0x0010 (0x0010 - 0x0000)
struct Teleport_C_AddTeleportableActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Teleport_C_AddTeleportableActor) == 0x000008, "Wrong alignment on Teleport_C_AddTeleportableActor");
static_assert(sizeof(Teleport_C_AddTeleportableActor) == 0x000010, "Wrong size on Teleport_C_AddTeleportableActor");
static_assert(offsetof(Teleport_C_AddTeleportableActor, Actor) == 0x000000, "Member 'Teleport_C_AddTeleportableActor::Actor' has a wrong offset!");
static_assert(offsetof(Teleport_C_AddTeleportableActor, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'Teleport_C_AddTeleportableActor::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function Teleport.Teleport_C.BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Teleport.Teleport_C.BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Teleport_C_BndEvt__Teleport_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function Teleport.Teleport_C.ExecuteUbergraph_Teleport
// 0x0188 (0x0188 - 0x0000)
struct Teleport_C_ExecuteUbergraph_Teleport final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0040(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTeleportableActor_IsTeleportable;       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Teleport_C_ExecuteUbergraph_Teleport) == 0x000008, "Wrong alignment on Teleport_C_ExecuteUbergraph_Teleport");
static_assert(sizeof(Teleport_C_ExecuteUbergraph_Teleport) == 0x000188, "Wrong size on Teleport_C_ExecuteUbergraph_Teleport");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, EntryPoint) == 0x000000, "Member 'Teleport_C_ExecuteUbergraph_Teleport::EntryPoint' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'Teleport_C_ExecuteUbergraph_Teleport::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, CallFunc_Array_IsEmpty_ReturnValue) == 0x00000C, "Member 'Teleport_C_ExecuteUbergraph_Teleport::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'Teleport_C_ExecuteUbergraph_Teleport::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000020, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000028, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000030, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000038, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_ComponentBoundEvent_bFromSweep) == 0x00003C, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_ComponentBoundEvent_SweepResult) == 0x000040, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000128, "Member 'Teleport_C_ExecuteUbergraph_Teleport::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, CallFunc_IsTeleportableActor_IsTeleportable) == 0x000140, "Member 'Teleport_C_ExecuteUbergraph_Teleport::CallFunc_IsTeleportableActor_IsTeleportable' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000148, "Member 'Teleport_C_ExecuteUbergraph_Teleport::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, CallFunc_HasAuthority_ReturnValue) == 0x000160, "Member 'Teleport_C_ExecuteUbergraph_Teleport::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000168, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_ComponentBoundEvent_OtherActor) == 0x000170, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_ComponentBoundEvent_OtherComp) == 0x000178, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000180, "Member 'Teleport_C_ExecuteUbergraph_Teleport::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Teleport_C_ExecuteUbergraph_Teleport, CallFunc_HasAuthority_ReturnValue_1) == 0x000184, "Member 'Teleport_C_ExecuteUbergraph_Teleport::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");

// Function Teleport.Teleport_C.IsTeleportableActor
// 0x0020 (0x0020 - 0x0000)
struct Teleport_C_IsTeleportableActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTeleportable;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Teleport_C_IsTeleportableActor) == 0x000008, "Wrong alignment on Teleport_C_IsTeleportableActor");
static_assert(sizeof(Teleport_C_IsTeleportableActor) == 0x000020, "Wrong size on Teleport_C_IsTeleportableActor");
static_assert(offsetof(Teleport_C_IsTeleportableActor, Actor) == 0x000000, "Member 'Teleport_C_IsTeleportableActor::Actor' has a wrong offset!");
static_assert(offsetof(Teleport_C_IsTeleportableActor, IsTeleportable) == 0x000008, "Member 'Teleport_C_IsTeleportableActor::IsTeleportable' has a wrong offset!");
static_assert(offsetof(Teleport_C_IsTeleportableActor, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'Teleport_C_IsTeleportableActor::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_IsTeleportableActor, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'Teleport_C_IsTeleportableActor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function Teleport.Teleport_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Teleport_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Teleport_C_ReceiveTick) == 0x000004, "Wrong alignment on Teleport_C_ReceiveTick");
static_assert(sizeof(Teleport_C_ReceiveTick) == 0x000004, "Wrong size on Teleport_C_ReceiveTick");
static_assert(offsetof(Teleport_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Teleport_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Teleport.Teleport_C.RemoveActor
// 0x0010 (0x0010 - 0x0000)
struct Teleport_C_RemoveActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Teleport_C_RemoveActor) == 0x000008, "Wrong alignment on Teleport_C_RemoveActor");
static_assert(sizeof(Teleport_C_RemoveActor) == 0x000010, "Wrong size on Teleport_C_RemoveActor");
static_assert(offsetof(Teleport_C_RemoveActor, Actor) == 0x000000, "Member 'Teleport_C_RemoveActor::Actor' has a wrong offset!");
static_assert(offsetof(Teleport_C_RemoveActor, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'Teleport_C_RemoveActor::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Teleport.Teleport_C.TeleportActor
// 0x01F8 (0x01F8 - 0x0000)
struct Teleport_C_TeleportActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0018(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0108(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Teleport_C_TeleportActor) == 0x000008, "Wrong alignment on Teleport_C_TeleportActor");
static_assert(sizeof(Teleport_C_TeleportActor) == 0x0001F8, "Wrong size on Teleport_C_TeleportActor");
static_assert(offsetof(Teleport_C_TeleportActor, Actor) == 0x000000, "Member 'Teleport_C_TeleportActor::Actor' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActor, K2Node_DynamicCast_AsSurvival_Player) == 0x000008, "Member 'Teleport_C_TeleportActor::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Teleport_C_TeleportActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActor, CallFunc_IsLocallyControlled_ReturnValue) == 0x000011, "Member 'Teleport_C_TeleportActor::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActor, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000018, "Member 'Teleport_C_TeleportActor::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActor, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000100, "Member 'Teleport_C_TeleportActor::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActor, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000108, "Member 'Teleport_C_TeleportActor::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActor, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0001F0, "Member 'Teleport_C_TeleportActor::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");

// Function Teleport.Teleport_C.TeleportActors
// 0x0030 (0x0030 - 0x0000)
struct Teleport_C_TeleportActors final
{
public:
	TArray<class AActor*>                         Temp;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Teleport_C_TeleportActors) == 0x000008, "Wrong alignment on Teleport_C_TeleportActors");
static_assert(sizeof(Teleport_C_TeleportActors) == 0x000030, "Wrong size on Teleport_C_TeleportActors");
static_assert(offsetof(Teleport_C_TeleportActors, Temp) == 0x000000, "Member 'Teleport_C_TeleportActors::Temp' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActors, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Teleport_C_TeleportActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActors, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Teleport_C_TeleportActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActors, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Teleport_C_TeleportActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActors, CallFunc_Array_Get_Item) == 0x000020, "Member 'Teleport_C_TeleportActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActors, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Teleport_C_TeleportActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Teleport_C_TeleportActors, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Teleport_C_TeleportActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

