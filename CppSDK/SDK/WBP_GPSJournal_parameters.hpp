#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GPSJournal

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_GPSJournal.WBP_GPSJournal_C.BndEvt__WBP_GPSJournal_WBP_GPSQuestDetails_K2Node_ComponentBoundEvent_0_OnDecline__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GPSJournal_C_BndEvt__WBP_GPSJournal_WBP_GPSQuestDetails_K2Node_ComponentBoundEvent_0_OnDecline__DelegateSignature final
{
public:
	class UQuest*                                 Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSJournal_C_BndEvt__WBP_GPSJournal_WBP_GPSQuestDetails_K2Node_ComponentBoundEvent_0_OnDecline__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GPSJournal_C_BndEvt__WBP_GPSJournal_WBP_GPSQuestDetails_K2Node_ComponentBoundEvent_0_OnDecline__DelegateSignature");
static_assert(sizeof(WBP_GPSJournal_C_BndEvt__WBP_GPSJournal_WBP_GPSQuestDetails_K2Node_ComponentBoundEvent_0_OnDecline__DelegateSignature) == 0x000008, "Wrong size on WBP_GPSJournal_C_BndEvt__WBP_GPSJournal_WBP_GPSQuestDetails_K2Node_ComponentBoundEvent_0_OnDecline__DelegateSignature");
static_assert(offsetof(WBP_GPSJournal_C_BndEvt__WBP_GPSJournal_WBP_GPSQuestDetails_K2Node_ComponentBoundEvent_0_OnDecline__DelegateSignature, Quest) == 0x000000, "Member 'WBP_GPSJournal_C_BndEvt__WBP_GPSJournal_WBP_GPSQuestDetails_K2Node_ComponentBoundEvent_0_OnDecline__DelegateSignature::Quest' has a wrong offset!");

// Function WBP_GPSJournal.WBP_GPSJournal_C.ExecuteUbergraph_WBP_GPSJournal
// 0x0100 (0x0100 - 0x0000)
struct WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuest*                                 K2Node_CustomEvent_Quest_1;                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 K2Node_ComponentBoundEvent_Quest;                  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_2;  // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_3;  // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_3; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue_1;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 CallFunc_GetQuest_Quest;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue_2;       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 K2Node_CustomEvent_Quest;                          // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal) == 0x000008, "Wrong alignment on WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal");
static_assert(sizeof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal) == 0x000100, "Wrong size on WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, EntryPoint) == 0x000000, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_CustomEvent_Quest_1) == 0x000030, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_CustomEvent_Quest_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_DynamicCast_AsSurv_PC) == 0x000038, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_ComponentBoundEvent_Quest) == 0x000048, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_ComponentBoundEvent_Quest' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000060, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000068, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000070, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000078, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_IsValid_ReturnValue_2) == 0x000081, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_CreateDelegate_OutputDelegate_3) == 0x000084, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_CreatePlayAnimationProxyObject_Result_2) == 0x000098, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_CreatePlayAnimationProxyObject_Result_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2) == 0x0000A0, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_CreatePlayAnimationProxyObject_Result_3) == 0x0000A8, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_CreatePlayAnimationProxyObject_Result_3' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_3) == 0x0000B0, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_IsValid_ReturnValue_3) == 0x0000B8, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_IsValid_ReturnValue_4) == 0x0000B9, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x0000BC, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_GetActiveWidgetIndex_ReturnValue_1) == 0x0000C0, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_GetActiveWidgetIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000C5, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_GetQuest_Quest) == 0x0000C8, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_GetQuest_Quest' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_Array_Contains_ReturnValue) == 0x0000D0, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_GetActiveWidgetIndex_ReturnValue_2) == 0x0000D4, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_GetActiveWidgetIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_Event_IsDesignTime) == 0x0000D9, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000DC, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, K2Node_CustomEvent_Quest) == 0x0000F0, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::K2Node_CustomEvent_Quest' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0000F8, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_Not_PreBool_ReturnValue) == 0x0000F9, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x0000FA, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000FB, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000FC, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_BooleanAND_ReturnValue) == 0x0000FD, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal, CallFunc_BooleanAND_ReturnValue_1) == 0x0000FE, "Member 'WBP_GPSJournal_C_ExecuteUbergraph_WBP_GPSJournal::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_GPSJournal.WBP_GPSJournal_C.ExpandQuestDetails
// 0x0008 (0x0008 - 0x0000)
struct WBP_GPSJournal_C_ExpandQuestDetails final
{
public:
	class UQuest*                                 Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSJournal_C_ExpandQuestDetails) == 0x000008, "Wrong alignment on WBP_GPSJournal_C_ExpandQuestDetails");
static_assert(sizeof(WBP_GPSJournal_C_ExpandQuestDetails) == 0x000008, "Wrong size on WBP_GPSJournal_C_ExpandQuestDetails");
static_assert(offsetof(WBP_GPSJournal_C_ExpandQuestDetails, Quest) == 0x000000, "Member 'WBP_GPSJournal_C_ExpandQuestDetails::Quest' has a wrong offset!");

// Function WBP_GPSJournal.WBP_GPSJournal_C.Init
// 0x0028 (0x0028 - 0x0000)
struct WBP_GPSJournal_C_Init final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSJournal_C_Init) == 0x000008, "Wrong alignment on WBP_GPSJournal_C_Init");
static_assert(sizeof(WBP_GPSJournal_C_Init) == 0x000028, "Wrong size on WBP_GPSJournal_C_Init");
static_assert(offsetof(WBP_GPSJournal_C_Init, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_GPSJournal_C_Init::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_Init, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_GPSJournal_C_Init::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_GPSJournal_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_Init, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WBP_GPSJournal_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_Init, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_GPSJournal_C_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_Init, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'WBP_GPSJournal_C_Init::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_Init, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_GPSJournal_C_Init::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_Init, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_GPSJournal_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WBP_GPSJournal_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_GPSJournal.WBP_GPSJournal_C.InitQuestList
// 0x0108 (0x0108 - 0x0000)
struct WBP_GPSJournal_C_InitQuestList final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UQuest* Quest)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_GPSJournal_Entry_C*                CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_SlotAsVerticalBoxSlot_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UQuest*>                         CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	TArray<class UWBP_GPSJournal_Entry_C*>        CallFunc_Map_Values_Values;                        // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UQuest*                                 CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_GPSJournal_Entry_C*                CallFunc_Array_Get_Item_2;                         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GPSJournal_Entry_C*                CallFunc_Map_Find_Value;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UQuest*>                         CallFunc_Map_Keys_Keys_1;                          // 0x00C8(0x0010)(ReferenceParm)
	class UQuest*                                 CallFunc_Array_Get_Item_3;                         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_Map_Find_Value_1;                         // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTimerHandle>                   CallFunc_Map_Values_Values_1;                      // 0x00F8(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_GPSJournal_C_InitQuestList) == 0x000008, "Wrong alignment on WBP_GPSJournal_C_InitQuestList");
static_assert(sizeof(WBP_GPSJournal_C_InitQuestList) == 0x000108, "Wrong size on WBP_GPSJournal_C_InitQuestList");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'WBP_GPSJournal_C_InitQuestList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_GPSJournal_C_InitQuestList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'WBP_GPSJournal_C_InitQuestList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WBP_GPSJournal_C_InitQuestList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'WBP_GPSJournal_C_InitQuestList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, K2Node_MakeStruct_Margin) == 0x000030, "Member 'WBP_GPSJournal_C_InitQuestList::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000050, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Array_LastIndex_ReturnValue) == 0x000058, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Array_Get_Item) == 0x000060, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_SlotAsVerticalBoxSlot_ReturnValue) == 0x000070, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_SlotAsVerticalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Map_Values_Values) == 0x000088, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Array_Get_Item_2) == 0x0000A0, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Map_Keys_Keys_1) == 0x0000C8, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Array_Get_Item_3) == 0x0000D8, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Map_Remove_ReturnValue) == 0x0000E4, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E5, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Map_Find_Value_1) == 0x0000E8, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Map_Find_ReturnValue_1) == 0x0000F0, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GPSJournal_C_InitQuestList, CallFunc_Map_Values_Values_1) == 0x0000F8, "Member 'WBP_GPSJournal_C_InitQuestList::CallFunc_Map_Values_Values_1' has a wrong offset!");

// Function WBP_GPSJournal.WBP_GPSJournal_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_GPSJournal_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSJournal_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_GPSJournal_C_PreConstruct");
static_assert(sizeof(WBP_GPSJournal_C_PreConstruct) == 0x000001, "Wrong size on WBP_GPSJournal_C_PreConstruct");
static_assert(offsetof(WBP_GPSJournal_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_GPSJournal_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_GPSJournal.WBP_GPSJournal_C.SetLocked
// 0x0001 (0x0001 - 0x0000)
struct WBP_GPSJournal_C_SetLocked final
{
public:
	bool                                          Param_bLocked;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSJournal_C_SetLocked) == 0x000001, "Wrong alignment on WBP_GPSJournal_C_SetLocked");
static_assert(sizeof(WBP_GPSJournal_C_SetLocked) == 0x000001, "Wrong size on WBP_GPSJournal_C_SetLocked");
static_assert(offsetof(WBP_GPSJournal_C_SetLocked, Param_bLocked) == 0x000000, "Member 'WBP_GPSJournal_C_SetLocked::Param_bLocked' has a wrong offset!");

// Function WBP_GPSJournal.WBP_GPSJournal_C.ShowDetails
// 0x0008 (0x0008 - 0x0000)
struct WBP_GPSJournal_C_ShowDetails final
{
public:
	class UQuest*                                 Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GPSJournal_C_ShowDetails) == 0x000008, "Wrong alignment on WBP_GPSJournal_C_ShowDetails");
static_assert(sizeof(WBP_GPSJournal_C_ShowDetails) == 0x000008, "Wrong size on WBP_GPSJournal_C_ShowDetails");
static_assert(offsetof(WBP_GPSJournal_C_ShowDetails, Quest) == 0x000000, "Member 'WBP_GPSJournal_C_ShowDetails::Quest' has a wrong offset!");

}

