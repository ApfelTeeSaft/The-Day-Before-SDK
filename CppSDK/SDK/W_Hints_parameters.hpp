#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Hints

#include "Basic.hpp"

#include "E_NotificationType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_Hints.W_Hints_C.AddNewUniqueNotification
// 0x0138 (0x0138 - 0x0000)
struct W_Hints_C_AddNewUniqueNotification final
{
public:
	E_NotificationType                            NotificationType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Body;                                              // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	E_NotificationType                            Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NotificationType                            Temp_byte_Variable_1;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable;                              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_1;                            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_2;                            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_3;                            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_4;                            // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_5;                            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_Notification_C*                      CallFunc_Create_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_Select_Default;                             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Notification_C*                      CallFunc_Map_Find_Value;                           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Hints_C_AddNewUniqueNotification) == 0x000008, "Wrong alignment on W_Hints_C_AddNewUniqueNotification");
static_assert(sizeof(W_Hints_C_AddNewUniqueNotification) == 0x000138, "Wrong size on W_Hints_C_AddNewUniqueNotification");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, NotificationType) == 0x000000, "Member 'W_Hints_C_AddNewUniqueNotification::NotificationType' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Title) == 0x000008, "Member 'W_Hints_C_AddNewUniqueNotification::Title' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Body) == 0x000020, "Member 'W_Hints_C_AddNewUniqueNotification::Body' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_byte_Variable) == 0x000038, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_struct_Variable) == 0x00003C, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_struct_Variable_1) == 0x00004C, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_struct_Variable_2) == 0x00005C, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_struct_Variable_3) == 0x00006C, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_struct_Variable_4) == 0x00007C, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_struct_Variable_5) == 0x00008C, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_byte_Variable_1) == 0x00009C, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_object_Variable) == 0x0000A0, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_object_Variable_1) == 0x0000A8, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_object_Variable_2) == 0x0000B0, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_object_Variable_3) == 0x0000B8, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_object_Variable_4) == 0x0000C0, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, Temp_object_Variable_5) == 0x0000C8, "Member 'W_Hints_C_AddNewUniqueNotification::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, CallFunc_Create_ReturnValue) == 0x0000D0, "Member 'W_Hints_C_AddNewUniqueNotification::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, K2Node_Select_Default) == 0x0000D8, "Member 'W_Hints_C_AddNewUniqueNotification::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, K2Node_Select_Default_1) == 0x0000E0, "Member 'W_Hints_C_AddNewUniqueNotification::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, CallFunc_Map_Find_Value) == 0x0000F0, "Member 'W_Hints_C_AddNewUniqueNotification::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, CallFunc_Map_Find_ReturnValue) == 0x0000F8, "Member 'W_Hints_C_AddNewUniqueNotification::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, CallFunc_AddChild_ReturnValue) == 0x000100, "Member 'W_Hints_C_AddNewUniqueNotification::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, CallFunc_GetChildrenCount_ReturnValue) == 0x000108, "Member 'W_Hints_C_AddNewUniqueNotification::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x000110, "Member 'W_Hints_C_AddNewUniqueNotification::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'W_Hints_C_AddNewUniqueNotification::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000119, "Member 'W_Hints_C_AddNewUniqueNotification::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, CallFunc_AddChild_ReturnValue_1) == 0x000120, "Member 'W_Hints_C_AddNewUniqueNotification::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Hints_C_AddNewUniqueNotification, K2Node_MakeStruct_Margin) == 0x000128, "Member 'W_Hints_C_AddNewUniqueNotification::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function W_Hints.W_Hints_C.ExecuteUbergraph_W_Hints
// 0x0068 (0x0068 - 0x0000)
struct W_Hints_C_ExecuteUbergraph_W_Hints final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_CityName;                       // 0x0050(0x0018)()
};
static_assert(alignof(W_Hints_C_ExecuteUbergraph_W_Hints) == 0x000008, "Wrong alignment on W_Hints_C_ExecuteUbergraph_W_Hints");
static_assert(sizeof(W_Hints_C_ExecuteUbergraph_W_Hints) == 0x000068, "Wrong size on W_Hints_C_ExecuteUbergraph_W_Hints");
static_assert(offsetof(W_Hints_C_ExecuteUbergraph_W_Hints, EntryPoint) == 0x000000, "Member 'W_Hints_C_ExecuteUbergraph_W_Hints::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ExecuteUbergraph_W_Hints, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000004, "Member 'W_Hints_C_ExecuteUbergraph_W_Hints::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ExecuteUbergraph_W_Hints, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_Hints_C_ExecuteUbergraph_W_Hints::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ExecuteUbergraph_W_Hints, K2Node_Event_MyGeometry) == 0x000010, "Member 'W_Hints_C_ExecuteUbergraph_W_Hints::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ExecuteUbergraph_W_Hints, K2Node_Event_InDeltaTime) == 0x000048, "Member 'W_Hints_C_ExecuteUbergraph_W_Hints::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ExecuteUbergraph_W_Hints, K2Node_CustomEvent_CityName) == 0x000050, "Member 'W_Hints_C_ExecuteUbergraph_W_Hints::K2Node_CustomEvent_CityName' has a wrong offset!");

// Function W_Hints.W_Hints_C.RemoveUniqueNotification
// 0x0048 (0x0048 - 0x0000)
struct W_Hints_C_RemoveUniqueNotification final
{
public:
	E_NotificationType                            NotificationType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Notification_C*                      CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Hints_C_RemoveUniqueNotification) == 0x000008, "Wrong alignment on W_Hints_C_RemoveUniqueNotification");
static_assert(sizeof(W_Hints_C_RemoveUniqueNotification) == 0x000048, "Wrong size on W_Hints_C_RemoveUniqueNotification");
static_assert(offsetof(W_Hints_C_RemoveUniqueNotification, NotificationType) == 0x000000, "Member 'W_Hints_C_RemoveUniqueNotification::NotificationType' has a wrong offset!");
static_assert(offsetof(W_Hints_C_RemoveUniqueNotification, K2Node_MakeStruct_Margin) == 0x000004, "Member 'W_Hints_C_RemoveUniqueNotification::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_Hints_C_RemoveUniqueNotification, CallFunc_Map_Remove_ReturnValue) == 0x000014, "Member 'W_Hints_C_RemoveUniqueNotification::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_RemoveUniqueNotification, CallFunc_GetChildrenCount_ReturnValue) == 0x000018, "Member 'W_Hints_C_RemoveUniqueNotification::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_RemoveUniqueNotification, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'W_Hints_C_RemoveUniqueNotification::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_RemoveUniqueNotification, CallFunc_GetChildAt_ReturnValue) == 0x000020, "Member 'W_Hints_C_RemoveUniqueNotification::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_RemoveUniqueNotification, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x000028, "Member 'W_Hints_C_RemoveUniqueNotification::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(W_Hints_C_RemoveUniqueNotification, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_Hints_C_RemoveUniqueNotification::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Hints_C_RemoveUniqueNotification, CallFunc_Map_Find_Value) == 0x000038, "Member 'W_Hints_C_RemoveUniqueNotification::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Hints_C_RemoveUniqueNotification, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'W_Hints_C_RemoveUniqueNotification::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_Hints.W_Hints_C.ShowTips
// 0x0070 (0x0070 - 0x0000)
struct W_Hints_C_ShowTips final
{
public:
	class FText                                   ActualTip;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   TipName;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Hints_C_ShowTips) == 0x000008, "Wrong alignment on W_Hints_C_ShowTips");
static_assert(sizeof(W_Hints_C_ShowTips) == 0x000070, "Wrong size on W_Hints_C_ShowTips");
static_assert(offsetof(W_Hints_C_ShowTips, ActualTip) == 0x000000, "Member 'W_Hints_C_ShowTips::ActualTip' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ShowTips, TipName) == 0x000018, "Member 'W_Hints_C_ShowTips::TipName' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ShowTips, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'W_Hints_C_ShowTips::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ShowTips, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'W_Hints_C_ShowTips::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ShowTips, K2Node_DynamicCast_AsSurvival_Player) == 0x000040, "Member 'W_Hints_C_ShowTips::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ShowTips, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'W_Hints_C_ShowTips::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ShowTips, CallFunc_GetHUD_ReturnValue) == 0x000050, "Member 'W_Hints_C_ShowTips::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ShowTips, CallFunc_IsLocallyControlled_ReturnValue) == 0x000058, "Member 'W_Hints_C_ShowTips::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ShowTips, K2Node_DynamicCast_AsBP_Game_HUD) == 0x000060, "Member 'W_Hints_C_ShowTips::K2Node_DynamicCast_AsBP_Game_HUD' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ShowTips, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'W_Hints_C_ShowTips::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Hints_C_ShowTips, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'W_Hints_C_ShowTips::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_Hints.W_Hints_C.ShowWelcome
// 0x0018 (0x0018 - 0x0000)
struct W_Hints_C_ShowWelcome final
{
public:
	class FText                                   CityName;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Hints_C_ShowWelcome) == 0x000008, "Wrong alignment on W_Hints_C_ShowWelcome");
static_assert(sizeof(W_Hints_C_ShowWelcome) == 0x000018, "Wrong size on W_Hints_C_ShowWelcome");
static_assert(offsetof(W_Hints_C_ShowWelcome, CityName) == 0x000000, "Member 'W_Hints_C_ShowWelcome::CityName' has a wrong offset!");

// Function W_Hints.W_Hints_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Hints_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Hints_C_Tick) == 0x000004, "Wrong alignment on W_Hints_C_Tick");
static_assert(sizeof(W_Hints_C_Tick) == 0x00003C, "Wrong size on W_Hints_C_Tick");
static_assert(offsetof(W_Hints_C_Tick, MyGeometry) == 0x000000, "Member 'W_Hints_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Hints_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Hints_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_Hints.W_Hints_C.UpdateCriticalState
// 0x0040 (0x0040 - 0x0000)
struct W_Hints_C_UpdateCriticalState final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NotificationType                            NotificationType;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Body;                                              // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Hints_C_UpdateCriticalState) == 0x000008, "Wrong alignment on W_Hints_C_UpdateCriticalState");
static_assert(sizeof(W_Hints_C_UpdateCriticalState) == 0x000040, "Wrong size on W_Hints_C_UpdateCriticalState");
static_assert(offsetof(W_Hints_C_UpdateCriticalState, Condition) == 0x000000, "Member 'W_Hints_C_UpdateCriticalState::Condition' has a wrong offset!");
static_assert(offsetof(W_Hints_C_UpdateCriticalState, NotificationType) == 0x000001, "Member 'W_Hints_C_UpdateCriticalState::NotificationType' has a wrong offset!");
static_assert(offsetof(W_Hints_C_UpdateCriticalState, Title) == 0x000008, "Member 'W_Hints_C_UpdateCriticalState::Title' has a wrong offset!");
static_assert(offsetof(W_Hints_C_UpdateCriticalState, Body) == 0x000020, "Member 'W_Hints_C_UpdateCriticalState::Body' has a wrong offset!");
static_assert(offsetof(W_Hints_C_UpdateCriticalState, Temp_bool_IsClosed_Variable) == 0x000038, "Member 'W_Hints_C_UpdateCriticalState::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_Hints_C_UpdateCriticalState, Temp_bool_Has_Been_Initd_Variable) == 0x000039, "Member 'W_Hints_C_UpdateCriticalState::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_Hints_C_UpdateCriticalState, Temp_bool_IsClosed_Variable_1) == 0x00003A, "Member 'W_Hints_C_UpdateCriticalState::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Hints_C_UpdateCriticalState, Temp_bool_Has_Been_Initd_Variable_1) == 0x00003B, "Member 'W_Hints_C_UpdateCriticalState::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");

}

