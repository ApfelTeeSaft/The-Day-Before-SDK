#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Zombie_MoveAttack1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_AttackingArm_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Task_Zombie_MoveAttack1.Task_Zombie_MoveAttack1_C
// 0x0128 (0x01D0 - 0x00A8)
class UTask_Zombie_MoveAttack1_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AAIController*                          Controller;                                        // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              Zombie;                                            // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AZombie_C*>                      ZombieArr;                                         // 0x00C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FBlackboardKeySelector                 StopRun;                                           // 0x00D0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 Enemy;                                             // 0x00F8(0x0028)(Edit, BlueprintVisible)
	double                                        DistanceLimit;                                     // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 RightHand;                                         // 0x0128(0x0028)(Edit, BlueprintVisible)
	E_AttackingArm                                AttackingArm;                                      // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           StoppingTimer;                                     // 0x0158(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAIMovementComponent_C*                 AIMovementComp;                                    // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 EnemyActor;                                        // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          MovingAttack;                                      // 0x0170(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TickEnabled;                                       // 0x0171(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 NeedOpenDoorKey;                                   // 0x0178(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 DoorKey;                                           // 0x01A0(0x0028)(Edit, BlueprintVisible)
	bool                                          Car_Attack;                                        // 0x01C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckDistanceAndStop();
	void CheckNotify(class FName NotifyName);
	void CheckScreaming(bool* StartScreaming);
	void ClampDelayByTargetSpeed(double* DelayDuration);
	void ClampStopDistanceByTargetSpeed(double* StopDistance);
	void DefineAttackingArm();
	void ExecuteUbergraph_Task_Zombie_MoveAttack1(int32 EntryPoint);
	void GetCorrectAttackMontage(class UAnimMontage** MontageToPlay, float* PlayRate);
	void On_Death_Bind_Func();
	void On_Death_EP_Bind_Func(class AActor* Actor, EEndPlayReason EndPlayReason);
	void OnAttacking();
	void OnBlendOut_5D65380B4DE58406D3D3049CCE240C9E(class FName NotifyName);
	void OnBlendOut_ACAE742741FA9C3062AA768DF7F2C114(class FName NotifyName);
	void OnCompleted_5D65380B4DE58406D3D3049CCE240C9E(class FName NotifyName);
	void OnCompleted_ACAE742741FA9C3062AA768DF7F2C114(class FName NotifyName);
	void OnEndAttack();
	void OnHitRegistered(bool Door);
	void OnInterrupted_5D65380B4DE58406D3D3049CCE240C9E(class FName NotifyName);
	void OnInterrupted_ACAE742741FA9C3062AA768DF7F2C114(class FName NotifyName);
	void OnNotifyBegin_5D65380B4DE58406D3D3049CCE240C9E(class FName NotifyName);
	void OnNotifyBegin_ACAE742741FA9C3062AA768DF7F2C114(class FName NotifyName);
	void OnNotifyEnd_5D65380B4DE58406D3D3049CCE240C9E(class FName NotifyName);
	void OnNotifyEnd_ACAE742741FA9C3062AA768DF7F2C114(class FName NotifyName);
	void OnStartAttack(class AAIController* OwnerController, class APawn* ControlledPawn);
	void OnStopRunning();
	void RapidStop();
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Task_Zombie_MoveAttack1_C">();
	}
	static class UTask_Zombie_MoveAttack1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTask_Zombie_MoveAttack1_C>();
	}
};
static_assert(alignof(UTask_Zombie_MoveAttack1_C) == 0x000008, "Wrong alignment on UTask_Zombie_MoveAttack1_C");
static_assert(sizeof(UTask_Zombie_MoveAttack1_C) == 0x0001D0, "Wrong size on UTask_Zombie_MoveAttack1_C");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, UberGraphFrame) == 0x0000A8, "Member 'UTask_Zombie_MoveAttack1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, Controller) == 0x0000B0, "Member 'UTask_Zombie_MoveAttack1_C::Controller' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, Zombie) == 0x0000B8, "Member 'UTask_Zombie_MoveAttack1_C::Zombie' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, ZombieArr) == 0x0000C0, "Member 'UTask_Zombie_MoveAttack1_C::ZombieArr' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, StopRun) == 0x0000D0, "Member 'UTask_Zombie_MoveAttack1_C::StopRun' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, Enemy) == 0x0000F8, "Member 'UTask_Zombie_MoveAttack1_C::Enemy' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, DistanceLimit) == 0x000120, "Member 'UTask_Zombie_MoveAttack1_C::DistanceLimit' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, RightHand) == 0x000128, "Member 'UTask_Zombie_MoveAttack1_C::RightHand' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, AttackingArm) == 0x000150, "Member 'UTask_Zombie_MoveAttack1_C::AttackingArm' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, StoppingTimer) == 0x000158, "Member 'UTask_Zombie_MoveAttack1_C::StoppingTimer' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, AIMovementComp) == 0x000160, "Member 'UTask_Zombie_MoveAttack1_C::AIMovementComp' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, EnemyActor) == 0x000168, "Member 'UTask_Zombie_MoveAttack1_C::EnemyActor' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, MovingAttack) == 0x000170, "Member 'UTask_Zombie_MoveAttack1_C::MovingAttack' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, TickEnabled) == 0x000171, "Member 'UTask_Zombie_MoveAttack1_C::TickEnabled' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, NeedOpenDoorKey) == 0x000178, "Member 'UTask_Zombie_MoveAttack1_C::NeedOpenDoorKey' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, DoorKey) == 0x0001A0, "Member 'UTask_Zombie_MoveAttack1_C::DoorKey' has a wrong offset!");
static_assert(offsetof(UTask_Zombie_MoveAttack1_C, Car_Attack) == 0x0001C8, "Member 'UTask_Zombie_MoveAttack1_C::Car_Attack' has a wrong offset!");

}

