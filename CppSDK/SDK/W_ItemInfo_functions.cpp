#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ItemInfo

#include "Basic.hpp"

#include "W_ItemInfo_classes.hpp"
#include "W_ItemInfo_parameters.hpp"


namespace SDK
{

// Function W_ItemInfo.W_ItemInfo_C.AddAttachmentEffects
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EffectiveRange                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stability                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FiringRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PowerModdifu                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EffectiveRangeModdifu                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  StabilityModdifu                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FiringRateModdifu                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAttachmentStats                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::AddAttachmentEffects(double Power, double EffectiveRange, double Stability, double FiringRate, double PowerModdifu, double EffectiveRangeModdifu, double StabilityModdifu, double FiringRateModdifu, bool IsAttachmentStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "AddAttachmentEffects");

	Params::W_ItemInfo_C_AddAttachmentEffects Parms{};

	Parms.Power = Power;
	Parms.EffectiveRange = EffectiveRange;
	Parms.Stability = Stability;
	Parms.FiringRate = FiringRate;
	Parms.PowerModdifu = PowerModdifu;
	Parms.EffectiveRangeModdifu = EffectiveRangeModdifu;
	Parms.StabilityModdifu = StabilityModdifu;
	Parms.FiringRateModdifu = FiringRateModdifu;
	Parms.IsAttachmentStats = IsAttachmentStats;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.AddStatsModifiersForAttachment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Stats                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stats1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stats2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stats3                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::AddStatsModifiersForAttachment(double Stats, double Stats1, double Stats2, double Stats3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "AddStatsModifiersForAttachment");

	Params::W_ItemInfo_C_AddStatsModifiersForAttachment Parms{};

	Parms.Stats = Stats;
	Parms.Stats1 = Stats1;
	Parms.Stats2 = Stats2;
	Parms.Stats3 = Stats3;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.CalculatePrice
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UW_ItemInfo_C::CalculatePrice(const struct FFItemInfo& ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "CalculatePrice");

	Params::W_ItemInfo_C_CalculatePrice Parms{};

	Parms.ItemInfo = std::move(ItemInfo);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ItemInfo.W_ItemInfo_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ItemInfo_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ItemInfo.W_ItemInfo_C.ConvertInfoType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             Out                                                    (Parm, OutParm)

void UW_ItemInfo_C::ConvertInfoType(const class FString& In, class FText* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "ConvertInfoType");

	Params::W_ItemInfo_C_ConvertInfoType Parms{};

	Parms.In = std::move(In);

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function W_ItemInfo.W_ItemInfo_C.CreateEffectRowWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             EffectName                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// double                                  Stats                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  StatsModdifu                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowNumericValues                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMargin                          InPadding                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UW_ItemInfo_C::CreateEffectRowWidget(const class FText& EffectName, double Stats, double StatsModdifu, bool ShowNumericValues, const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "CreateEffectRowWidget");

	Params::W_ItemInfo_C_CreateEffectRowWidget Parms{};

	Parms.EffectName = std::move(EffectName);
	Parms.Stats = Stats;
	Parms.StatsModdifu = StatsModdifu;
	Parms.ShowNumericValues = ShowNumericValues;
	Parms.InPadding = std::move(InPadding);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ItemInfo_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ItemInfo.W_ItemInfo_C.ExecuteUbergraph_W_ItemInfo
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::ExecuteUbergraph_W_ItemInfo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "ExecuteUbergraph_W_ItemInfo");

	Params::W_ItemInfo_C_ExecuteUbergraph_W_ItemInfo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.FindBaseStatsWeapon
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Power                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EffectiveRange                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stability                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FireRatio                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::FindBaseStatsWeapon(class FName Param_Name, double* Power, double* EffectiveRange, double* Stability, double* FireRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "FindBaseStatsWeapon");

	Params::W_ItemInfo_C_FindBaseStatsWeapon Parms{};

	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);

	if (Power != nullptr)
		*Power = Parms.Power;

	if (EffectiveRange != nullptr)
		*EffectiveRange = Parms.EffectiveRange;

	if (Stability != nullptr)
		*Stability = Parms.Stability;

	if (FireRatio != nullptr)
		*FireRatio = Parms.FireRatio;
}


// Function W_ItemInfo.W_ItemInfo_C.GetItemInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       ItemInfo                                               (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
// class UUserWidget*                      Param_TriggerUserWidget                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::GetItemInfo(struct FFItemInfo* ItemInfo, class UUserWidget** Param_TriggerUserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "GetItemInfo");

	Params::W_ItemInfo_C_GetItemInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemInfo != nullptr)
		*ItemInfo = std::move(Parms.ItemInfo);

	if (Param_TriggerUserWidget != nullptr)
		*Param_TriggerUserWidget = Parms.Param_TriggerUserWidget;
}


// Function W_ItemInfo.W_ItemInfo_C.GetRepairPrice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RepairPrice                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::GetRepairPrice(int32* RepairPrice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "GetRepairPrice");

	Params::W_ItemInfo_C_GetRepairPrice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RepairPrice != nullptr)
		*RepairPrice = Parms.RepairPrice;
}


// Function W_ItemInfo.W_ItemInfo_C.OnHideWidget
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EffectiveRange                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stability                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FiringRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithoutAnim                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::OnHideWidget(double Power, double EffectiveRange, double Stability, double FiringRate, bool WithoutAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnHideWidget");

	Params::W_ItemInfo_C_OnHideWidget Parms{};

	Parms.Power = Power;
	Parms.EffectiveRange = EffectiveRange;
	Parms.Stability = Stability;
	Parms.FiringRate = FiringRate;
	Parms.WithoutAnim = WithoutAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.OnPrepareAtatchmentsEffects
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_Item                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void UW_ItemInfo_C::OnPrepareAtatchmentsEffects(const struct FFItemInfo& Param_Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnPrepareAtatchmentsEffects");

	Params::W_ItemInfo_C_OnPrepareAtatchmentsEffects Parms{};

	Parms.Param_Item = std::move(Param_Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.OnPrepareAttachments
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_Item                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UW_ItemInfo_C::OnPrepareAttachments(const struct FFItemInfo& Param_Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnPrepareAttachments");

	Params::W_ItemInfo_C_OnPrepareAttachments Parms{};

	Parms.Param_Item = std::move(Param_Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.OnPrepareFoodEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_Item                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UW_ItemInfo_C::OnPrepareFoodEffects(const struct FFItemInfo& Param_Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnPrepareFoodEffects");

	Params::W_ItemInfo_C_OnPrepareFoodEffects Parms{};

	Parms.Param_Item = std::move(Param_Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.OnPrepareIcons
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_Item                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UW_ItemInfo_C::OnPrepareIcons(const struct FFItemInfo& Param_Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnPrepareIcons");

	Params::W_ItemInfo_C_OnPrepareIcons Parms{};

	Parms.Param_Item = std::move(Param_Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.OnPrepareWidget
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_Item                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::OnPrepareWidget(const struct FFItemInfo& Param_Item, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnPrepareWidget");

	Params::W_ItemInfo_C_OnPrepareWidget Parms{};

	Parms.Param_Item = std::move(Param_Item);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function W_ItemInfo.W_ItemInfo_C.OnPrepareWidgetTraits
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FWS_CharaterPerks                TRAITS                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::OnPrepareWidgetTraits(const struct FWS_CharaterPerks& TRAITS, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnPrepareWidgetTraits");

	Params::W_ItemInfo_C_OnPrepareWidgetTraits Parms{};

	Parms.TRAITS = std::move(TRAITS);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function W_ItemInfo.W_ItemInfo_C.OnShowWidget
// (Protected, BlueprintCallable, BlueprintEvent)

void UW_ItemInfo_C::OnShowWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnShowWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ItemInfo.W_ItemInfo_C.OnToggleWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      UserWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       Param_Item                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_CompareAttachmentToWeapon                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWS_CharaterPerks                TRAITS                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    IsTraits                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInfoType                               AttachmentType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_TypesOfModes                          TypeOfModes                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    JustHideWithoutAnim                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::OnToggleWidget(bool NewState, class UUserWidget* UserWidget, const struct FFItemInfo& Param_Item, double Delay, bool Param_CompareAttachmentToWeapon, const struct FWS_CharaterPerks& TRAITS, bool IsTraits, EInfoType AttachmentType, E_TypesOfModes TypeOfModes, bool JustHideWithoutAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnToggleWidget");

	Params::W_ItemInfo_C_OnToggleWidget Parms{};

	Parms.NewState = NewState;
	Parms.UserWidget = UserWidget;
	Parms.Param_Item = std::move(Param_Item);
	Parms.Delay = Delay;
	Parms.Param_CompareAttachmentToWeapon = Param_CompareAttachmentToWeapon;
	Parms.TRAITS = std::move(TRAITS);
	Parms.IsTraits = IsTraits;
	Parms.AttachmentType = AttachmentType;
	Parms.TypeOfModes = TypeOfModes;
	Parms.JustHideWithoutAnim = JustHideWithoutAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.OnUpdatePosition
// (BlueprintCallable, BlueprintEvent)

void UW_ItemInfo_C::OnUpdatePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnUpdatePosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ItemInfo.W_ItemInfo_C.OnUpdateWidgetPosition
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::OnUpdateWidgetPosition(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "OnUpdateWidgetPosition");

	Params::W_ItemInfo_C_OnUpdateWidgetPosition Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.ResetTextForDeutchLocalization
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       TextBlock                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_ItemInfo_C::ResetTextForDeutchLocalization(class UTextBlock* TextBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "ResetTextForDeutchLocalization");

	Params::W_ItemInfo_C_ResetTextForDeutchLocalization Parms{};

	Parms.TextBlock = TextBlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ItemInfo.W_ItemInfo_C.SamplePrice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UW_ItemInfo_C::SamplePrice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "SamplePrice");

	Params::W_ItemInfo_C_SamplePrice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_ItemInfo.W_ItemInfo_C.Set Color Durability
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_ItemInfo_C::Set_Color_Durability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ItemInfo_C", "Set Color Durability");

	UObject::ProcessEvent(Func, nullptr);
}

}

