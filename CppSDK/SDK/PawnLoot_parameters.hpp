#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PawnLoot

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PawnLoot.PawnLoot_C.ExecuteUbergraph_PawnLoot
// 0x0020 (0x0020 - 0x0000)
struct PawnLoot_C_ExecuteUbergraph_PawnLoot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PawnLoot_C_ExecuteUbergraph_PawnLoot) == 0x000008, "Wrong alignment on PawnLoot_C_ExecuteUbergraph_PawnLoot");
static_assert(sizeof(PawnLoot_C_ExecuteUbergraph_PawnLoot) == 0x000020, "Wrong size on PawnLoot_C_ExecuteUbergraph_PawnLoot");
static_assert(offsetof(PawnLoot_C_ExecuteUbergraph_PawnLoot, EntryPoint) == 0x000000, "Member 'PawnLoot_C_ExecuteUbergraph_PawnLoot::EntryPoint' has a wrong offset!");
static_assert(offsetof(PawnLoot_C_ExecuteUbergraph_PawnLoot, K2Node_MakeArray_Array) == 0x000008, "Member 'PawnLoot_C_ExecuteUbergraph_PawnLoot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PawnLoot_C_ExecuteUbergraph_PawnLoot, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'PawnLoot_C_ExecuteUbergraph_PawnLoot::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function PawnLoot.PawnLoot_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PawnLoot_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PawnLoot_C_ReceiveTick) == 0x000004, "Wrong alignment on PawnLoot_C_ReceiveTick");
static_assert(sizeof(PawnLoot_C_ReceiveTick) == 0x000004, "Wrong size on PawnLoot_C_ReceiveTick");
static_assert(offsetof(PawnLoot_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PawnLoot_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

