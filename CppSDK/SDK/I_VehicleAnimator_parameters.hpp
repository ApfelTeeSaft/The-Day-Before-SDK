#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: I_VehicleAnimator

#include "Basic.hpp"


namespace SDK::Params
{

// Function I_VehicleAnimator.I_VehicleAnimator_C.CallEntranceAnim
// 0x0008 (0x0008 - 0x0000)
struct I_VehicleAnimator_C_CallEntranceAnim final
{
public:
	class UAnimInstance*                          PlayerAnimInstance;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_CallEntranceAnim) == 0x000008, "Wrong alignment on I_VehicleAnimator_C_CallEntranceAnim");
static_assert(sizeof(I_VehicleAnimator_C_CallEntranceAnim) == 0x000008, "Wrong size on I_VehicleAnimator_C_CallEntranceAnim");
static_assert(offsetof(I_VehicleAnimator_C_CallEntranceAnim, PlayerAnimInstance) == 0x000000, "Member 'I_VehicleAnimator_C_CallEntranceAnim::PlayerAnimInstance' has a wrong offset!");

// Function I_VehicleAnimator.I_VehicleAnimator_C.CallExitAnim
// 0x0008 (0x0008 - 0x0000)
struct I_VehicleAnimator_C_CallExitAnim final
{
public:
	class UAnimInstance*                          PlayerAnimInstance;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_CallExitAnim) == 0x000008, "Wrong alignment on I_VehicleAnimator_C_CallExitAnim");
static_assert(sizeof(I_VehicleAnimator_C_CallExitAnim) == 0x000008, "Wrong size on I_VehicleAnimator_C_CallExitAnim");
static_assert(offsetof(I_VehicleAnimator_C_CallExitAnim, PlayerAnimInstance) == 0x000000, "Member 'I_VehicleAnimator_C_CallExitAnim::PlayerAnimInstance' has a wrong offset!");

// Function I_VehicleAnimator.I_VehicleAnimator_C.CallPassangerEntranceAnim
// 0x0008 (0x0008 - 0x0000)
struct I_VehicleAnimator_C_CallPassangerEntranceAnim final
{
public:
	class UAnimInstance*                          PlayerAnimInst;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_CallPassangerEntranceAnim) == 0x000008, "Wrong alignment on I_VehicleAnimator_C_CallPassangerEntranceAnim");
static_assert(sizeof(I_VehicleAnimator_C_CallPassangerEntranceAnim) == 0x000008, "Wrong size on I_VehicleAnimator_C_CallPassangerEntranceAnim");
static_assert(offsetof(I_VehicleAnimator_C_CallPassangerEntranceAnim, PlayerAnimInst) == 0x000000, "Member 'I_VehicleAnimator_C_CallPassangerEntranceAnim::PlayerAnimInst' has a wrong offset!");

// Function I_VehicleAnimator.I_VehicleAnimator_C.CallPassangerExitAnim
// 0x0008 (0x0008 - 0x0000)
struct I_VehicleAnimator_C_CallPassangerExitAnim final
{
public:
	class UAnimInstance*                          PlayerAnimInst;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_CallPassangerExitAnim) == 0x000008, "Wrong alignment on I_VehicleAnimator_C_CallPassangerExitAnim");
static_assert(sizeof(I_VehicleAnimator_C_CallPassangerExitAnim) == 0x000008, "Wrong size on I_VehicleAnimator_C_CallPassangerExitAnim");
static_assert(offsetof(I_VehicleAnimator_C_CallPassangerExitAnim, PlayerAnimInst) == 0x000000, "Member 'I_VehicleAnimator_C_CallPassangerExitAnim::PlayerAnimInst' has a wrong offset!");

// Function I_VehicleAnimator.I_VehicleAnimator_C.SetLBScale
// 0x0008 (0x0008 - 0x0000)
struct I_VehicleAnimator_C_SetLBScale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_SetLBScale) == 0x000008, "Wrong alignment on I_VehicleAnimator_C_SetLBScale");
static_assert(sizeof(I_VehicleAnimator_C_SetLBScale) == 0x000008, "Wrong size on I_VehicleAnimator_C_SetLBScale");
static_assert(offsetof(I_VehicleAnimator_C_SetLBScale, Scale) == 0x000000, "Member 'I_VehicleAnimator_C_SetLBScale::Scale' has a wrong offset!");

// Function I_VehicleAnimator.I_VehicleAnimator_C.SetLFScale
// 0x0008 (0x0008 - 0x0000)
struct I_VehicleAnimator_C_SetLFScale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_SetLFScale) == 0x000008, "Wrong alignment on I_VehicleAnimator_C_SetLFScale");
static_assert(sizeof(I_VehicleAnimator_C_SetLFScale) == 0x000008, "Wrong size on I_VehicleAnimator_C_SetLFScale");
static_assert(offsetof(I_VehicleAnimator_C_SetLFScale, Scale) == 0x000000, "Member 'I_VehicleAnimator_C_SetLFScale::Scale' has a wrong offset!");

// Function I_VehicleAnimator.I_VehicleAnimator_C.SetRBScale
// 0x0008 (0x0008 - 0x0000)
struct I_VehicleAnimator_C_SetRBScale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_SetRBScale) == 0x000008, "Wrong alignment on I_VehicleAnimator_C_SetRBScale");
static_assert(sizeof(I_VehicleAnimator_C_SetRBScale) == 0x000008, "Wrong size on I_VehicleAnimator_C_SetRBScale");
static_assert(offsetof(I_VehicleAnimator_C_SetRBScale, Scale) == 0x000000, "Member 'I_VehicleAnimator_C_SetRBScale::Scale' has a wrong offset!");

// Function I_VehicleAnimator.I_VehicleAnimator_C.SetRFScale
// 0x0008 (0x0008 - 0x0000)
struct I_VehicleAnimator_C_SetRFScale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_SetRFScale) == 0x000008, "Wrong alignment on I_VehicleAnimator_C_SetRFScale");
static_assert(sizeof(I_VehicleAnimator_C_SetRFScale) == 0x000008, "Wrong size on I_VehicleAnimator_C_SetRFScale");
static_assert(offsetof(I_VehicleAnimator_C_SetRFScale, Scale) == 0x000000, "Member 'I_VehicleAnimator_C_SetRFScale::Scale' has a wrong offset!");

// Function I_VehicleAnimator.I_VehicleAnimator_C.UpdateRubberSteering
// 0x0001 (0x0001 - 0x0000)
struct I_VehicleAnimator_C_UpdateRubberSteering final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_UpdateRubberSteering) == 0x000001, "Wrong alignment on I_VehicleAnimator_C_UpdateRubberSteering");
static_assert(sizeof(I_VehicleAnimator_C_UpdateRubberSteering) == 0x000001, "Wrong size on I_VehicleAnimator_C_UpdateRubberSteering");
static_assert(offsetof(I_VehicleAnimator_C_UpdateRubberSteering, NewParam) == 0x000000, "Member 'I_VehicleAnimator_C_UpdateRubberSteering::NewParam' has a wrong offset!");

// Function I_VehicleAnimator.I_VehicleAnimator_C.UpdateWheelRotation
// 0x0001 (0x0001 - 0x0000)
struct I_VehicleAnimator_C_UpdateWheelRotation final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_UpdateWheelRotation) == 0x000001, "Wrong alignment on I_VehicleAnimator_C_UpdateWheelRotation");
static_assert(sizeof(I_VehicleAnimator_C_UpdateWheelRotation) == 0x000001, "Wrong size on I_VehicleAnimator_C_UpdateWheelRotation");
static_assert(offsetof(I_VehicleAnimator_C_UpdateWheelRotation, NewParam) == 0x000000, "Member 'I_VehicleAnimator_C_UpdateWheelRotation::NewParam' has a wrong offset!");

// Function I_VehicleAnimator.I_VehicleAnimator_C.UpdateWheelTranslation
// 0x0001 (0x0001 - 0x0000)
struct I_VehicleAnimator_C_UpdateWheelTranslation final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_VehicleAnimator_C_UpdateWheelTranslation) == 0x000001, "Wrong alignment on I_VehicleAnimator_C_UpdateWheelTranslation");
static_assert(sizeof(I_VehicleAnimator_C_UpdateWheelTranslation) == 0x000001, "Wrong size on I_VehicleAnimator_C_UpdateWheelTranslation");
static_assert(offsetof(I_VehicleAnimator_C_UpdateWheelTranslation, NewParam) == 0x000000, "Member 'I_VehicleAnimator_C_UpdateWheelTranslation::NewParam' has a wrong offset!");

}

