#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemToInventory

#include "Basic.hpp"

#include "WBP_ItemToInventory_classes.hpp"
#include "WBP_ItemToInventory_parameters.hpp"


namespace SDK
{

// Function WBP_ItemToInventory.WBP_ItemToInventory_C.Add Entry Item
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class UWBP_ItemInteractionContainerEntry_C*OutputPin                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::Add_Entry_Item(const struct FFItemInfo& ItemInfo, class UWBP_ItemInteractionContainerEntry_C** OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "Add Entry Item");

	Params::WBP_ItemToInventory_C_Add_Entry_Item Parms{};

	Parms.ItemInfo = std::move(ItemInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature");

	Params::WBP_ItemToInventory_C_BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_0_OnCountChanged__DelegateSignature Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_1_OnParentNavigation__DelegateSignature
// (BlueprintEvent)

void UWBP_ItemToInventory_C::BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_1_OnParentNavigation__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_1_OnParentNavigation__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_3_ActionButtonPressed__DelegateSignature
// (BlueprintEvent)

void UWBP_ItemToInventory_C::BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_3_ActionButtonPressed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_3_ActionButtonPressed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_4_ProcessFinished__DelegateSignature
// (BlueprintEvent)

void UWBP_ItemToInventory_C::BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_4_ProcessFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "BndEvt__WBP_ItemToInventory_WBP_WorkbenchCraftInfo_K2Node_ComponentBoundEvent_4_ProcessFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ButtonHovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_ItemInteractionContainerEntry_C*Ref                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::ButtonHovered(class UWBP_ItemInteractionContainerEntry_C* Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "ButtonHovered");

	Params::WBP_ItemToInventory_C_ButtonHovered Parms{};

	Parms.Ref = Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ButtonPressed
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::ButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "ButtonPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ButtonSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_ItemInteractionContainerEntry_C*ItemWidgetRef                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::ButtonSelected(class UWBP_ItemInteractionContainerEntry_C* ItemWidgetRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "ButtonSelected");

	Params::WBP_ItemToInventory_C_ButtonSelected Parms{};

	Parms.ItemWidgetRef = ItemWidgetRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ButtonUnhovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_ItemInteractionContainerEntry_C*Ref                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::ButtonUnhovered(class UWBP_ItemInteractionContainerEntry_C* Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "ButtonUnhovered");

	Params::WBP_ItemToInventory_C_ButtonUnhovered Parms{};

	Parms.Ref = Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CalculateSellPrice
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Price                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::CalculateSellPrice(const struct FFItemInfo& Item, int32* Price)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "CalculateSellPrice");

	Params::WBP_ItemToInventory_C_CalculateSellPrice Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);

	if (Price != nullptr)
		*Price = Parms.Price;
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CheckCanIncrease
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::CheckCanIncrease(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "CheckCanIncrease");

	Params::WBP_ItemToInventory_C_CheckCanIncrease Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CheckFreeSpaceToAddItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HaveFreeSpace                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::CheckFreeSpaceToAddItem(bool* HaveFreeSpace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "CheckFreeSpaceToAddItem");

	Params::WBP_ItemToInventory_C_CheckFreeSpaceToAddItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HaveFreeSpace != nullptr)
		*HaveFreeSpace = Parms.HaveFreeSpace;
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CheckFreeSpaceToDismantleItems
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::CheckFreeSpaceToDismantleItems(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "CheckFreeSpaceToDismantleItems");

	Params::WBP_ItemToInventory_C_CheckFreeSpaceToDismantleItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ClearEntries
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::ClearEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "ClearEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_ItemToInventory_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CreateItem
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::CreateItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "CreateItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CustomNavigation_InfoRight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Param_Navigation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_ItemToInventory_C::CustomNavigation_InfoRight(EUINavigation Param_Navigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "CustomNavigation_InfoRight");

	Params::WBP_ItemToInventory_C_CustomNavigation_InfoRight Parms{};

	Parms.Param_Navigation = Param_Navigation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CustomNavigation_InventoryLeft
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Param_Navigation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_ItemToInventory_C::CustomNavigation_InventoryLeft(EUINavigation Param_Navigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "CustomNavigation_InventoryLeft");

	Params::WBP_ItemToInventory_C_CustomNavigation_InventoryLeft Parms{};

	Parms.Param_Navigation = Param_Navigation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.CustomNavigation_ItemsRight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Param_Navigation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UWBP_ItemToInventory_C::CustomNavigation_ItemsRight(EUINavigation Param_Navigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "CustomNavigation_ItemsRight");

	Params::WBP_ItemToInventory_C_CustomNavigation_ItemsRight Parms{};

	Parms.Param_Navigation = Param_Navigation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.EntrySelected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::EntrySelected__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "EntrySelected__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ExecuteUbergraph_WBP_ItemToInventory
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::ExecuteUbergraph_WBP_ItemToInventory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "ExecuteUbergraph_WBP_ItemToInventory");

	Params::WBP_ItemToInventory_C_ExecuteUbergraph_WBP_ItemToInventory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.FinalizeInit
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::FinalizeInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "FinalizeInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.Finished_497DCE5A4B680D7DE0007CA35FF7F849
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::Finished_497DCE5A4B680D7DE0007CA35FF7F849()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "Finished_497DCE5A4B680D7DE0007CA35FF7F849");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.Finished_586A4EE647726B3111384B8B8A26AF8B
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::Finished_586A4EE647726B3111384B8B8A26AF8B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "Finished_586A4EE647726B3111384B8B8A26AF8B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.GetListOfItems
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UWBP_ItemInteractionContainerEntry_C*>Param_EntryList                                        (Parm, OutParm, ContainsInstancedReference)

void UWBP_ItemToInventory_C::GetListOfItems(TArray<class UWBP_ItemInteractionContainerEntry_C*>* Param_EntryList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "GetListOfItems");

	Params::WBP_ItemToInventory_C_GetListOfItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_EntryList != nullptr)
		*Param_EntryList = std::move(Parms.Param_EntryList);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.GetSelectedEntry
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWBP_ItemInteractionContainerEntry_C*Param_SelectedEntry                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::GetSelectedEntry(class UWBP_ItemInteractionContainerEntry_C** Param_SelectedEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "GetSelectedEntry");

	Params::WBP_ItemToInventory_C_GetSelectedEntry Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SelectedEntry != nullptr)
		*Param_SelectedEntry = Parms.Param_SelectedEntry;
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.Init
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.InstantCreate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_ItemInteractionContainerEntry_C*ItemWidgetRef                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::InstantCreate(class UWBP_ItemInteractionContainerEntry_C* ItemWidgetRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "InstantCreate");

	Params::WBP_ItemToInventory_C_InstantCreate Parms{};

	Parms.ItemWidgetRef = ItemWidgetRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.InventoryUpdate
// (BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::InventoryUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "InventoryUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.InventoryUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::InventoryUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "InventoryUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.LockItemsListScroll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::LockItemsListScroll(bool Lock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "LockItemsListScroll");

	Params::WBP_ItemToInventory_C_LockItemsListScroll Parms{};

	Parms.Lock = Lock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.OnCreateCountChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::OnCreateCountChanged__DelegateSignature(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "OnCreateCountChanged__DelegateSignature");

	Params::WBP_ItemToInventory_C_OnCreateCountChanged__DelegateSignature Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.OnInstantCreateRequest__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::OnInstantCreateRequest__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "OnInstantCreateRequest__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.OnProcessStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::OnProcessStarted__DelegateSignature(const struct FFItemInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "OnProcessStarted__DelegateSignature");

	Params::WBP_ItemToInventory_C_OnProcessStarted__DelegateSignature Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.OnSetButtonEnable__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::OnSetButtonEnable__DelegateSignature(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "OnSetButtonEnable__DelegateSignature");

	Params::WBP_ItemToInventory_C_OnSetButtonEnable__DelegateSignature Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "PreConstruct");

	Params::WBP_ItemToInventory_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ProcessFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::ProcessFinished__DelegateSignature(const struct FFItemInfo& ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "ProcessFinished__DelegateSignature");

	Params::WBP_ItemToInventory_C_ProcessFinished__DelegateSignature Parms{};

	Parms.ItemInfo = std::move(ItemInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.RemoveEntryByIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::RemoveEntryByIndex(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "RemoveEntryByIndex");

	Params::WBP_ItemToInventory_C_RemoveEntryByIndex Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.RemoveEntryByUID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::RemoveEntryByUID(int32 Uid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "RemoveEntryByUID");

	Params::WBP_ItemToInventory_C_RemoveEntryByUID Parms{};

	Parms.Uid = Uid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.UnbindInventoryUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::UnbindInventoryUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "UnbindInventoryUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.Update Required Resouces
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<EDismantleType, int32>             ResourcesAvailable                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TMap<EDismantleType, int32>             ResourcesRequired                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    CanCreate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::Update_Required_Resouces(const TMap<EDismantleType, int32>& ResourcesAvailable, const TMap<EDismantleType, int32>& ResourcesRequired, bool CanCreate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "Update Required Resouces");

	Params::WBP_ItemToInventory_C_Update_Required_Resouces Parms{};

	Parms.ResourcesAvailable = std::move(ResourcesAvailable);
	Parms.ResourcesRequired = std::move(ResourcesRequired);
	Parms.CanCreate = CanCreate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.UpdateEntryByIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::UpdateEntryByIndex(int32 Param_Index, const struct FFItemInfo& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "UpdateEntryByIndex");

	Params::WBP_ItemToInventory_C_UpdateEntryByIndex Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.UpdateEntryByUID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::UpdateEntryByUID(int32 Uid, const struct FFItemInfo& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "UpdateEntryByUID");

	Params::WBP_ItemToInventory_C_UpdateEntryByUID Parms{};

	Parms.Uid = Uid;
	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.UpdateResources
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_ItemToInventory_C::UpdateResources()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "UpdateResources");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_ItemToInventory.WBP_ItemToInventory_C.ValidateItemInfoCount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ItemToInventory_C::ValidateItemInfoCount(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ItemToInventory_C", "ValidateItemInfoCount");

	Params::WBP_ItemToInventory_C_ValidateItemInfoCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}

}

