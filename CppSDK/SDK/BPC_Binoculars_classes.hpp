#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Binoculars

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_Binoculars.BPC_Binoculars_C
// 0x0068 (0x0108 - 0x00A0)
class UBPC_Binoculars_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bIsLookThroughBinoculars;                          // 0x00A8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CharRef;                                           // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Aperture__FMinusstop_;                             // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Maximum_Aperture__Min_FMinusstop_;                 // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Focal_Distance;                                    // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Depth_Blur_Km_For_50_;                             // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Depth_Blur_Radius;                                 // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Binoculars_C*                       BP_Binoculars;                                     // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CameraFOV;                                         // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnLookThroughBinocularsChanged;                    // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         UsualCameraFOV;                                    // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPC_Binoculars(int32 EntryPoint);
	void HideBinocularInGame(bool bIsHidden);
	void InpActEvt_ZoomIn_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_ZoomOut_K2Node_InputActionEvent_0(const struct FKey& Key);
	void OffStateEquipSurv();
	void OnBlendOut_2CFB31634500C45E62F961970FE3B055(class FName NotifyName);
	void OnBlendOut_848C5EAA4C1F4E4B87C1F1AA7EEF4709(class FName NotifyName);
	void OnBlendOut_AE5C42014C2633295DD80685A1D16528(class FName NotifyName);
	void OnCompleted_2CFB31634500C45E62F961970FE3B055(class FName NotifyName);
	void OnCompleted_848C5EAA4C1F4E4B87C1F1AA7EEF4709(class FName NotifyName);
	void OnCompleted_AE5C42014C2633295DD80685A1D16528(class FName NotifyName);
	void OnInterrupted_2CFB31634500C45E62F961970FE3B055(class FName NotifyName);
	void OnInterrupted_848C5EAA4C1F4E4B87C1F1AA7EEF4709(class FName NotifyName);
	void OnInterrupted_AE5C42014C2633295DD80685A1D16528(class FName NotifyName);
	void OnLoaded_00B5C9554485E7C9F93346A57A73B03B(class UObject* Loaded);
	void OnLoaded_5E3F9A4049E086018906CA98F305BE56(class UObject* Loaded);
	void OnLoaded_5F22B6EA4499029B1F2ADFB52BBF83A7(class UObject* Loaded);
	void OnLookThroughBinocularsChanged__DelegateSignature();
	void OnNotifyBegin_2CFB31634500C45E62F961970FE3B055(class FName NotifyName);
	void OnNotifyBegin_848C5EAA4C1F4E4B87C1F1AA7EEF4709(class FName NotifyName);
	void OnNotifyBegin_AE5C42014C2633295DD80685A1D16528(class FName NotifyName);
	void OnNotifyEnd_2CFB31634500C45E62F961970FE3B055(class FName NotifyName);
	void OnNotifyEnd_848C5EAA4C1F4E4B87C1F1AA7EEF4709(class FName NotifyName);
	void OnNotifyEnd_AE5C42014C2633295DD80685A1D16528(class FName NotifyName);
	void OnRep_bIsLookThroughBinoculars();
	void PlayAnimEquipEvent();
	void PlayUnequipAnimEvent();
	void ReceiveBeginPlay();
	void RemoveBinoculars();
	void ResetFOV();
	void SetCameraAndFOV();
	void SetLocalPlayerParamsEquip();
	void SetLocalPlayerParamsUnequip();
	void SetUsualCameraFOV();
	void ShowBinocularHintClient(bool Show);
	void SpawnBinoculars();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_Binoculars_C">();
	}
	static class UBPC_Binoculars_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_Binoculars_C>();
	}
};
static_assert(alignof(UBPC_Binoculars_C) == 0x000008, "Wrong alignment on UBPC_Binoculars_C");
static_assert(sizeof(UBPC_Binoculars_C) == 0x000108, "Wrong size on UBPC_Binoculars_C");
static_assert(offsetof(UBPC_Binoculars_C, UberGraphFrame) == 0x0000A0, "Member 'UBPC_Binoculars_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, bIsLookThroughBinoculars) == 0x0000A8, "Member 'UBPC_Binoculars_C::bIsLookThroughBinoculars' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, CharRef) == 0x0000B0, "Member 'UBPC_Binoculars_C::CharRef' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, Aperture__FMinusstop_) == 0x0000B8, "Member 'UBPC_Binoculars_C::Aperture__FMinusstop_' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, Maximum_Aperture__Min_FMinusstop_) == 0x0000C0, "Member 'UBPC_Binoculars_C::Maximum_Aperture__Min_FMinusstop_' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, Focal_Distance) == 0x0000C8, "Member 'UBPC_Binoculars_C::Focal_Distance' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, Depth_Blur_Km_For_50_) == 0x0000D0, "Member 'UBPC_Binoculars_C::Depth_Blur_Km_For_50_' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, Depth_Blur_Radius) == 0x0000D8, "Member 'UBPC_Binoculars_C::Depth_Blur_Radius' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, BP_Binoculars) == 0x0000E0, "Member 'UBPC_Binoculars_C::BP_Binoculars' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, CameraFOV) == 0x0000E8, "Member 'UBPC_Binoculars_C::CameraFOV' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, OnLookThroughBinocularsChanged) == 0x0000F0, "Member 'UBPC_Binoculars_C::OnLookThroughBinocularsChanged' has a wrong offset!");
static_assert(offsetof(UBPC_Binoculars_C, UsualCameraFOV) == 0x000100, "Member 'UBPC_Binoculars_C::UsualCameraFOV' has a wrong offset!");

}

