#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Surv_Simpled_Pose

#include "Basic.hpp"

#include "ABP_Surv_Simpled_Pose_classes.hpp"
#include "ABP_Surv_Simpled_Pose_parameters.hpp"


namespace SDK
{

// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.AddCharacterRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UABP_Surv_Simpled_Pose_C::AddCharacterRotation(const struct FRotator& Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "AddCharacterRotation");

	Params::ABP_Surv_Simpled_Pose_C_AddCharacterRotation Parms{};

	Parms.Amount = std::move(Amount);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void UABP_Surv_Simpled_Pose_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "AnimGraph");

	Params::ABP_Surv_Simpled_Pose_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.AnimNotifyTurningInPlace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     TurnIPMontage                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldTurn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TurningIP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TurningRight                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::AnimNotifyTurningInPlace(class UAnimMontage* TurnIPMontage, bool ShouldTurn, bool TurningIP, bool TurningRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "AnimNotifyTurningInPlace");

	Params::ABP_Surv_Simpled_Pose_C_AnimNotifyTurningInPlace Parms{};

	Parms.TurnIPMontage = TurnIPMontage;
	Parms.ShouldTurn = ShouldTurn;
	Parms.TurningIP = TurningIP;
	Parms.TurningRight = TurningRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.BlueprintInitializeAnimation
// (Event, Public, BlueprintEvent)

void UABP_Surv_Simpled_Pose_C::BlueprintInitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "BlueprintInitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.BlueprintThreadSafeUpdateAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::BlueprintThreadSafeUpdateAnimation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "BlueprintThreadSafeUpdateAnimation");

	Params::ABP_Surv_Simpled_Pose_C_BlueprintThreadSafeUpdateAnimation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "BlueprintUpdateAnimation");

	Params::ABP_Surv_Simpled_Pose_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.BPI_CameraShake
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ShakeClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    NeedChangeScale                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::BPI_CameraShake(class UClass* ShakeClass, bool NeedChangeScale, double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "BPI_CameraShake");

	Params::ABP_Surv_Simpled_Pose_C_BPI_CameraShake Parms{};

	Parms.ShakeClass = ShakeClass;
	Parms.NeedChangeScale = NeedChangeScale;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.CallEatMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DurationAttached                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AnimDelay                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DissappearDelay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::CallEatMesh(class FName ItemType, double DurationAttached, double AnimDelay, double DissappearDelay, double PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "CallEatMesh");

	Params::ABP_Surv_Simpled_Pose_C_CallEatMesh Parms{};

	Parms.ItemType = ItemType;
	Parms.DurationAttached = DurationAttached;
	Parms.AnimDelay = AnimDelay;
	Parms.DissappearDelay = DissappearDelay;
	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.CheckEndEat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Eat_                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::CheckEndEat(bool* Eat_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "CheckEndEat");

	Params::ABP_Surv_Simpled_Pose_C_CheckEndEat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Eat_ != nullptr)
		*Eat_ = Parms.Eat_;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.EndKnockDown
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Surv_Simpled_Pose_C::EndKnockDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "EndKnockDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.ExecuteUbergraph_ABP_Surv_Simpled_Pose
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::ExecuteUbergraph_ABP_Surv_Simpled_Pose(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "ExecuteUbergraph_ABP_Surv_Simpled_Pose");

	Params::ABP_Surv_Simpled_Pose_C_ExecuteUbergraph_ABP_Surv_Simpled_Pose Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.GetCameraOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          PelvisOffset                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InterpOffset                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::GetCameraOffset(struct FVector* PelvisOffset, struct FVector* InterpOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "GetCameraOffset");

	Params::ABP_Surv_Simpled_Pose_C_GetCameraOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PelvisOffset != nullptr)
		*PelvisOffset = std::move(Parms.PelvisOffset);

	if (InterpOffset != nullptr)
		*InterpOffset = std::move(Parms.InterpOffset);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.GetDriving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDriving                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::GetDriving(bool* IsDriving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "GetDriving");

	Params::ABP_Surv_Simpled_Pose_C_GetDriving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDriving != nullptr)
		*IsDriving = Parms.IsDriving;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.GetFireSprayOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  SprayOffset                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::GetFireSprayOffset(double* SprayOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "GetFireSprayOffset");

	Params::ABP_Surv_Simpled_Pose_C_GetFireSprayOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SprayOffset != nullptr)
		*SprayOffset = Parms.SprayOffset;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.GetFPPTacticalGripOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       GripOffset                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::GetFPPTacticalGripOffset(struct FTransform* GripOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "GetFPPTacticalGripOffset");

	Params::ABP_Surv_Simpled_Pose_C_GetFPPTacticalGripOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GripOffset != nullptr)
		*GripOffset = std::move(Parms.GripOffset);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.GetInteractAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    Sequence                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::GetInteractAnim(class UAnimSequence** Sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "GetInteractAnim");

	Params::ABP_Surv_Simpled_Pose_C_GetInteractAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Sequence != nullptr)
		*Sequence = Parms.Sequence;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.GetInventoryLayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active_                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::GetInventoryLayerState(bool* Active_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "GetInventoryLayerState");

	Params::ABP_Surv_Simpled_Pose_C_GetInventoryLayerState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Active_ != nullptr)
		*Active_ = Parms.Active_;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.GetKneltTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::GetKneltTime(double* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "GetKneltTime");

	Params::ABP_Surv_Simpled_Pose_C_GetKneltTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.GetSurvController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvPC_C*                        SurvPC                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::GetSurvController(class ASurvPC_C** SurvPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "GetSurvController");

	Params::ABP_Surv_Simpled_Pose_C_GetSurvController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SurvPC != nullptr)
		*SurvPC = Parms.SurvPC;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.GetTacticalGripOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       GripOffset                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::GetTacticalGripOffset(struct FTransform* GripOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "GetTacticalGripOffset");

	Params::ABP_Surv_Simpled_Pose_C_GetTacticalGripOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GripOffset != nullptr)
		*GripOffset = std::move(Parms.GripOffset);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.GetTacticalGripPoses
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_WeaponGripType                GripPoses                                              (Parm, OutParm, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::GetTacticalGripPoses(struct FS_WeaponGripType* GripPoses)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "GetTacticalGripPoses");

	Params::ABP_Surv_Simpled_Pose_C_GetTacticalGripPoses Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GripPoses != nullptr)
		*GripPoses = std::move(Parms.GripPoses);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.InFlatSurface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::InFlatSurface(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "InFlatSurface");

	Params::ABP_Surv_Simpled_Pose_C_InFlatSurface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.IsInTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::IsInTurn(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "IsInTurn");

	Params::ABP_Surv_Simpled_Pose_C_IsInTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.IsJumpPrepare
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::IsJumpPrepare(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "IsJumpPrepare");

	Params::ABP_Surv_Simpled_Pose_C_IsJumpPrepare Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.IsReloading
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsReloading                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::IsReloading(bool* Param_IsReloading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "IsReloading");

	Params::ABP_Surv_Simpled_Pose_C_IsReloading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsReloading != nullptr)
		*Param_IsReloading = Parms.Param_IsReloading;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.IsRootRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RM                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::IsRootRotation(bool* RM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "IsRootRotation");

	Params::ABP_Surv_Simpled_Pose_C_IsRootRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RM != nullptr)
		*RM = Parms.RM;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.IsSpineMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::IsSpineMontage(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "IsSpineMontage");

	Params::ABP_Surv_Simpled_Pose_C_IsSpineMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.MovementModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMovementMode                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::MovementModeChanged(EMovementMode NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "MovementModeChanged");

	Params::ABP_Surv_Simpled_Pose_C_MovementModeChanged Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.NotifyItemUsing
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Surv_Simpled_Pose_C::NotifyItemUsing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "NotifyItemUsing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.PlayMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHipfire                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reloading                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::PlayMontage(class UAnimMontage* AnimMontage, bool IsHipfire, bool Reloading, double PlayRate, double StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "PlayMontage");

	Params::ABP_Surv_Simpled_Pose_C_PlayMontage Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.IsHipfire = IsHipfire;
	Parms.Reloading = Reloading;
	Parms.PlayRate = PlayRate;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.ResetItemUsingAnim
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Surv_Simpled_Pose_C::ResetItemUsingAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "ResetItemUsingAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetDash
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Surv_Simpled_Pose_C::SetDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetDriving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InCar                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Driver                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarTipe                                CarTipe                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SitIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Nothing                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetDriving(bool InCar, bool Driver, ECarTipe CarTipe, int32 SitIndex, bool* Nothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetDriving");

	Params::ABP_Surv_Simpled_Pose_C_SetDriving Parms{};

	Parms.InCar = InCar;
	Parms.Driver = Driver;
	Parms.CarTipe = CarTipe;
	Parms.SitIndex = SitIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Nothing != nullptr)
		*Nothing = Parms.Nothing;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetFireSprayOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  SprayOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetFireSprayOffset(double SprayOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetFireSprayOffset");

	Params::ABP_Surv_Simpled_Pose_C_SetFireSprayOffset Parms{};

	Parms.SprayOffset = SprayOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetItemUsingAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SpecialItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanMove                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasStandAnim                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WepNotHiding                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetItemUsingAnim(class UAnimSequence* Anim, bool SpecialItem, bool CanMove, bool HasStandAnim, bool WepNotHiding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetItemUsingAnim");

	Params::ABP_Surv_Simpled_Pose_C_SetItemUsingAnim Parms{};

	Parms.Anim = Anim;
	Parms.SpecialItem = SpecialItem;
	Parms.CanMove = CanMove;
	Parms.HasStandAnim = HasStandAnim;
	Parms.WepNotHiding = WepNotHiding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetJumpPrepare
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Nothing                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetJumpPrepare(bool Value, bool* Nothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetJumpPrepare");

	Params::ABP_Surv_Simpled_Pose_C_SetJumpPrepare Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Nothing != nullptr)
		*Nothing = Parms.Nothing;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetLeftHandVariant
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Variant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetLeftHandVariant(double Variant, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetLeftHandVariant");

	Params::ABP_Surv_Simpled_Pose_C_SetLeftHandVariant Parms{};

	Parms.Variant = Variant;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetLootTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       TargetTransform                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetLootTarget(const struct FTransform& TargetTransform, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetLootTarget");

	Params::ABP_Surv_Simpled_Pose_C_SetLootTarget Parms{};

	Parms.TargetTransform = std::move(TargetTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetReloadingState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsReloading                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetReloadingState(bool Param_IsReloading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetReloadingState");

	Params::ABP_Surv_Simpled_Pose_C_SetReloadingState Parms{};

	Parms.Param_IsReloading = Param_IsReloading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetReloadState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetReloadState(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetReloadState");

	Params::ABP_Surv_Simpled_Pose_C_SetReloadState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetRubberDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_Direction                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Nothing                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetRubberDirection(double Param_Direction, bool* Nothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetRubberDirection");

	Params::ABP_Surv_Simpled_Pose_C_SetRubberDirection Parms{};

	Parms.Param_Direction = Param_Direction;

	UObject::ProcessEvent(Func, &Parms);

	if (Nothing != nullptr)
		*Nothing = Parms.Nothing;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetSpineMotageBool
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Nothing                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetSpineMotageBool(bool Value, bool* Nothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetSpineMotageBool");

	Params::ABP_Surv_Simpled_Pose_C_SetSpineMotageBool Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Nothing != nullptr)
		*Nothing = Parms.Nothing;
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetThrowableHandPose
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    HandPose                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetThrowableHandPose(class UAnimSequence* HandPose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetThrowableHandPose");

	Params::ABP_Surv_Simpled_Pose_C_SetThrowableHandPose Parms{};

	Parms.HandPose = HandPose;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetUsableItemSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_EatConfiguration              ItemSettings                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetUsableItemSettings(const struct FS_EatConfiguration& ItemSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetUsableItemSettings");

	Params::ABP_Surv_Simpled_Pose_C_SetUsableItemSettings Parms{};

	Parms.ItemSettings = std::move(ItemSettings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetWeaponAnims
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_PlayerWeaponAnim              WeaponAnims                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     HipFirePoseStand                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     HipFirePoseCrouch                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetWeaponAnims(const struct FS_PlayerWeaponAnim& WeaponAnims, class UAnimMontage* HipFirePoseStand, class UAnimMontage* HipFirePoseCrouch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetWeaponAnims");

	Params::ABP_Surv_Simpled_Pose_C_SetWeaponAnims Parms{};

	Parms.WeaponAnims = std::move(WeaponAnims);
	Parms.HipFirePoseStand = HipFirePoseStand;
	Parms.HipFirePoseCrouch = HipFirePoseCrouch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetWeaponGripType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           TacticalGripName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetWeaponGripType(const class FString& TacticalGripName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetWeaponGripType");

	Params::ABP_Surv_Simpled_Pose_C_SetWeaponGripType Parms{};

	Parms.TacticalGripName = std::move(TacticalGripName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.SetWeaponType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBPE_Weapon_Type                        WeaponType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABP_Surv_Simpled_Pose_C::SetWeaponType(EBPE_Weapon_Type WeaponType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "SetWeaponType");

	Params::ABP_Surv_Simpled_Pose_C_SetWeaponType Parms{};

	Parms.WeaponType = WeaponType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABP_Surv_Simpled_Pose.ABP_Surv_Simpled_Pose_C.StartKnockdown
// (Public, BlueprintCallable, BlueprintEvent)

void UABP_Surv_Simpled_Pose_C::StartKnockdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABP_Surv_Simpled_Pose_C", "StartKnockdown");

	UObject::ProcessEvent(Func, nullptr);
}

}

