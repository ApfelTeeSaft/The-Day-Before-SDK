#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LP_TutorBag

#include "Basic.hpp"

#include "GeneralChanceByType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_InteractType_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "S_PointerHintInfo_structs.hpp"


namespace SDK::Params
{

// Function LP_TutorBag.LP_TutorBag_C.ExecuteUbergraph_LP_TutorBag
// 0x0188 (0x0188 - 0x0000)
struct LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ContainerUID;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ItemUID;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue_1;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_QuestPoint3D_C*                    K2Node_DynamicCast_AsWBP_Quest_Point_3D;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GS_TDB_C>         K2Node_DynamicCast_AsBPI_GS_TDB;                   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue_1;                  // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_TutorialQuest3DTracker_C*          K2Node_DynamicCast_AsWBP_Tutorial_Quest_3DTracker; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_ContainerID;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ItemSlotIndex;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ToSlotIndex;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Rotated_;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_2;                             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_1;                             // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& TutorialStage)> K2Node_CreateDelegate_OutputDelegate;              // 0x00FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player;                               // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_137[0x1];                                      // 0x0137(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_TutorialStage;                  // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC_1;                    // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         CallFunc_GetTutorStage_self_CastInput;             // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTutorStage_StageName;                  // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag) == 0x000008, "Wrong alignment on LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag");
static_assert(sizeof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag) == 0x000188, "Wrong size on LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, EntryPoint) == 0x000000, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::EntryPoint' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_ContainerUID) == 0x000004, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_ContainerUID' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_ItemUID) == 0x000008, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_ItemUID' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetPlayerController_ReturnValue_1) == 0x000018, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetHUD_ReturnValue_1) == 0x000028, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetHUD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000038, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_AsBP_Game_HUD) == 0x000050, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_AsBP_Game_HUD' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_Visible_1) == 0x000059, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetWidget_ReturnValue) == 0x000060, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetGameState_ReturnValue) == 0x000068, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_AsWBP_Quest_Point_3D) == 0x000070, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_AsWBP_Quest_Point_3D' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_AsBPI_GS_TDB) == 0x000080, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_AsBPI_GS_TDB' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_Visible) == 0x000091, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetWidget_ReturnValue_1) == 0x000098, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_AsWBP_Tutorial_Quest_3DTracker) == 0x0000A0, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_AsWBP_Tutorial_Quest_3DTracker' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetPlayerController_ReturnValue_2) == 0x0000B0, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_AsSurv_PC) == 0x0000B8, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_bSuccess_5) == 0x0000C0, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_ContainerID) == 0x0000C4, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_ContainerID' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_ItemSlotIndex) == 0x0000C8, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_ItemSlotIndex' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_ToSlotIndex) == 0x0000CC, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_Rotated_) == 0x0000D0, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_Rotated_' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_Player_2) == 0x0000D8, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_AsSurvival_Player) == 0x0000E0, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_bSuccess_6) == 0x0000E8, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000E9, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_Player_1) == 0x0000F0, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_HasAuthority_ReturnValue) == 0x0000F8, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_CreateDelegate_OutputDelegate) == 0x0000FC, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_Event_Player) == 0x000110, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_AsSurvival_Player_1) == 0x000118, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_bSuccess_7) == 0x000120, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_CreateDelegate_OutputDelegate_1) == 0x000124, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000134, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_IsValid_ReturnValue_1) == 0x000135, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_IsLocalController_ReturnValue) == 0x000136, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetPlayerController_ReturnValue_3) == 0x000138, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_CustomEvent_TutorialStage) == 0x000140, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_CustomEvent_TutorialStage' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_AsSurv_PC_1) == 0x000150, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_AsSurv_PC_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, K2Node_DynamicCast_bSuccess_8) == 0x000158, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetTutorStage_self_CastInput) == 0x000160, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetTutorStage_self_CastInput' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_GetTutorStage_StageName) == 0x000170, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_GetTutorStage_StageName' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_Array_Contains_ReturnValue) == 0x000180, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_Array_Contains_ReturnValue_1) == 0x000181, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_Array_Contains_ReturnValue_2) == 0x000182, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_BooleanOR_ReturnValue) == 0x000183, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_Array_Contains_ReturnValue_3) == 0x000184, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag, CallFunc_BooleanOR_ReturnValue_1) == 0x000185, "Member 'LP_TutorBag_C_ExecuteUbergraph_LP_TutorBag::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.FindItemToPoint
// 0x02E8 (0x02E8 - 0x0000)
struct LP_TutorBag_C_FindItemToPoint final
{
public:
	TArray<class UJSI_Slot_C*>                    ArrayOfItems;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryTutorial_Enabled;             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_PointerHintInfo                     K2Node_MakeStruct_S_PointerHintInfo;               // 0x0100(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Set_ToArray_Result;                       // 0x0130(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0168(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01C8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_Map_Values_Values;                        // 0x0208(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_2;                         // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_3;                         // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowed_Showed;                         // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A[0x2];                                      // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_2;               // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetPointedWidget_PointedWidget;           // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PointerHintInfo                     K2Node_MakeStruct_S_PointerHintInfo_1;             // 0x02B8(0x0028)(HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_FindItemToPoint) == 0x000008, "Wrong alignment on LP_TutorBag_C_FindItemToPoint");
static_assert(sizeof(LP_TutorBag_C_FindItemToPoint) == 0x0002E8, "Wrong size on LP_TutorBag_C_FindItemToPoint");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, ArrayOfItems) == 0x000000, "Member 'LP_TutorBag_C_FindItemToPoint::ArrayOfItems' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, Temp_int_Array_Index_Variable) == 0x000010, "Member 'LP_TutorBag_C_FindItemToPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'LP_TutorBag_C_FindItemToPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'LP_TutorBag_C_FindItemToPoint::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'LP_TutorBag_C_FindItemToPoint::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'LP_TutorBag_C_FindItemToPoint::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'LP_TutorBag_C_FindItemToPoint::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, Temp_int_Loop_Counter_Variable_3) == 0x000034, "Member 'LP_TutorBag_C_FindItemToPoint::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Add_IntInt_ReturnValue_3) == 0x000038, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, Temp_int_Array_Index_Variable_3) == 0x00003C, "Member 'LP_TutorBag_C_FindItemToPoint::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000040, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_GetInventoryTutorial_Enabled) == 0x000052, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_GetInventoryTutorial_Enabled' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_IsValid_ReturnValue_1) == 0x000053, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000054, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_Contains_ReturnValue) == 0x000070, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_MakeArray_Array) == 0x0000C8, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F0, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_MakeStruct_S_PointerHintInfo) == 0x000100, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_MakeStruct_S_PointerHintInfo' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000128, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_IsValid_ReturnValue_2) == 0x000129, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_IsLocalController_ReturnValue) == 0x00012A, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Set_ToArray_Result) == 0x000130, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_Get_Item) == 0x000140, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Conv_NameToText_ReturnValue) == 0x000150, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_MakeStruct_FormatArgumentData_1) == 0x000168, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_MakeArray_Array_1) == 0x0001B8, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Format_ReturnValue_1) == 0x0001C8, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0001E0, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0001F0, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_Length_ReturnValue) == 0x0001F4, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Less_IntInt_ReturnValue) == 0x0001F8, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_Length_ReturnValue_1) == 0x0001FC, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Less_IntInt_ReturnValue_1) == 0x000200, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Map_Values_Values) == 0x000208, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_Get_Item_2) == 0x000218, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_IsValid_ReturnValue_3) == 0x000220, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_Get_Item_3) == 0x000228, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_Length_ReturnValue_2) == 0x000230, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_AddUnique_ReturnValue) == 0x000234, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Less_IntInt_ReturnValue_2) == 0x000238, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_GetShowed_Showed) == 0x000239, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_GetShowed_Showed' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Array_Length_ReturnValue_3) == 0x00023C, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_Less_IntInt_ReturnValue_3) == 0x000240, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_IsValid_ReturnValue_4) == 0x000241, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000248, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000259, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_BooleanAND_ReturnValue) == 0x00025A, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00025B, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_GetPlayerController_ReturnValue) == 0x000260, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_BooleanOR_ReturnValue) == 0x000268, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_GetHUD_ReturnValue) == 0x000270, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_DynamicCast_AsBPI_Game_HUD_2) == 0x000278, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_DynamicCast_AsBPI_Game_HUD_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_DynamicCast_bSuccess_2) == 0x000288, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_IsValid_ReturnValue_5) == 0x000289, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_GetPointedWidget_PointedWidget) == 0x000290, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_GetPointedWidget_PointedWidget' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000298, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, Temp_bool_Variable) == 0x000299, "Member 'LP_TutorBag_C_FindItemToPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, CallFunc_GetPlayerController_ReturnValue_1) == 0x0002A0, "Member 'LP_TutorBag_C_FindItemToPoint::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_DynamicCast_AsSurv_PC) == 0x0002A8, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_DynamicCast_bSuccess_3) == 0x0002B0, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, Temp_bool_Variable_1) == 0x0002B1, "Member 'LP_TutorBag_C_FindItemToPoint::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_MakeStruct_S_PointerHintInfo_1) == 0x0002B8, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_MakeStruct_S_PointerHintInfo_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_FindItemToPoint, K2Node_Select_Default) == 0x0002E0, "Member 'LP_TutorBag_C_FindItemToPoint::K2Node_Select_Default' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.MC_MPContainerMoveItem
// 0x0010 (0x0010 - 0x0000)
struct LP_TutorBag_C_MC_MPContainerMoveItem final
{
public:
	int32                                         ContainerID;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSlotIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlotIndex;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_MC_MPContainerMoveItem) == 0x000004, "Wrong alignment on LP_TutorBag_C_MC_MPContainerMoveItem");
static_assert(sizeof(LP_TutorBag_C_MC_MPContainerMoveItem) == 0x000010, "Wrong size on LP_TutorBag_C_MC_MPContainerMoveItem");
static_assert(offsetof(LP_TutorBag_C_MC_MPContainerMoveItem, ContainerID) == 0x000000, "Member 'LP_TutorBag_C_MC_MPContainerMoveItem::ContainerID' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MC_MPContainerMoveItem, ItemSlotIndex) == 0x000004, "Member 'LP_TutorBag_C_MC_MPContainerMoveItem::ItemSlotIndex' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MC_MPContainerMoveItem, ToSlotIndex) == 0x000008, "Member 'LP_TutorBag_C_MC_MPContainerMoveItem::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MC_MPContainerMoveItem, Rotated_) == 0x00000C, "Member 'LP_TutorBag_C_MC_MPContainerMoveItem::Rotated_' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.MC_RemoveItem
// 0x0008 (0x0008 - 0x0000)
struct LP_TutorBag_C_MC_RemoveItem final
{
public:
	int32                                         ContainerUID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_MC_RemoveItem) == 0x000004, "Wrong alignment on LP_TutorBag_C_MC_RemoveItem");
static_assert(sizeof(LP_TutorBag_C_MC_RemoveItem) == 0x000008, "Wrong size on LP_TutorBag_C_MC_RemoveItem");
static_assert(offsetof(LP_TutorBag_C_MC_RemoveItem, ContainerUID) == 0x000000, "Member 'LP_TutorBag_C_MC_RemoveItem::ContainerUID' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MC_RemoveItem, ItemUID) == 0x000004, "Member 'LP_TutorBag_C_MC_RemoveItem::ItemUID' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.MPCFindItem
// 0x0108 (0x0108 - 0x0000)
struct LP_TutorBag_C_MPCFindItem final
{
public:
	int32                                         ContainerUID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer_;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shop;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  ItemInfo;                                          // 0x0010(0x0068)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0078(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MPCFindItem_Found;                        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_MPCFindItem_ItemInfo;                     // 0x0080(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_MPCFindItem_Index;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowed_Showed;                         // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetPointedWidget_PointedWidget;           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_DynamicCast_AsJSI_Slot;                     // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_MPCFindItem) == 0x000008, "Wrong alignment on LP_TutorBag_C_MPCFindItem");
static_assert(sizeof(LP_TutorBag_C_MPCFindItem) == 0x000108, "Wrong size on LP_TutorBag_C_MPCFindItem");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, ContainerUID) == 0x000000, "Member 'LP_TutorBag_C_MPCFindItem::ContainerUID' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, ItemUID) == 0x000004, "Member 'LP_TutorBag_C_MPCFindItem::ItemUID' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, IsContainer_) == 0x000008, "Member 'LP_TutorBag_C_MPCFindItem::IsContainer_' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, Shop) == 0x000009, "Member 'LP_TutorBag_C_MPCFindItem::Shop' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, Found) == 0x00000A, "Member 'LP_TutorBag_C_MPCFindItem::Found' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, ItemInfo) == 0x000010, "Member 'LP_TutorBag_C_MPCFindItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, Param_Index) == 0x000078, "Member 'LP_TutorBag_C_MPCFindItem::Param_Index' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, CallFunc_MPCFindItem_Found) == 0x00007C, "Member 'LP_TutorBag_C_MPCFindItem::CallFunc_MPCFindItem_Found' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, CallFunc_MPCFindItem_ItemInfo) == 0x000080, "Member 'LP_TutorBag_C_MPCFindItem::CallFunc_MPCFindItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, CallFunc_MPCFindItem_Index) == 0x0000E8, "Member 'LP_TutorBag_C_MPCFindItem::CallFunc_MPCFindItem_Index' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, CallFunc_IsValid_ReturnValue) == 0x0000EC, "Member 'LP_TutorBag_C_MPCFindItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, CallFunc_GetShowed_Showed) == 0x0000ED, "Member 'LP_TutorBag_C_MPCFindItem::CallFunc_GetShowed_Showed' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, CallFunc_GetPointedWidget_PointedWidget) == 0x0000F0, "Member 'LP_TutorBag_C_MPCFindItem::CallFunc_GetPointedWidget_PointedWidget' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, K2Node_DynamicCast_AsJSI_Slot) == 0x0000F8, "Member 'LP_TutorBag_C_MPCFindItem::K2Node_DynamicCast_AsJSI_Slot' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'LP_TutorBag_C_MPCFindItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_MPCFindItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000101, "Member 'LP_TutorBag_C_MPCFindItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.OnTutorStageUpdated_Event
// 0x0010 (0x0010 - 0x0000)
struct LP_TutorBag_C_OnTutorStageUpdated_Event final
{
public:
	class FString                                 TutorialStage;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_OnTutorStageUpdated_Event) == 0x000008, "Wrong alignment on LP_TutorBag_C_OnTutorStageUpdated_Event");
static_assert(sizeof(LP_TutorBag_C_OnTutorStageUpdated_Event) == 0x000010, "Wrong size on LP_TutorBag_C_OnTutorStageUpdated_Event");
static_assert(offsetof(LP_TutorBag_C_OnTutorStageUpdated_Event, TutorialStage) == 0x000000, "Member 'LP_TutorBag_C_OnTutorStageUpdated_Event::TutorialStage' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct LP_TutorBag_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on LP_TutorBag_C_Set3DWidgetVisibility");
static_assert(sizeof(LP_TutorBag_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on LP_TutorBag_C_Set3DWidgetVisibility");
static_assert(offsetof(LP_TutorBag_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'LP_TutorBag_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.SetItemsToPoint
// 0x0078 (0x0078 - 0x0000)
struct LP_TutorBag_C_SetItemsToPoint final
{
public:
	int32                                         ItemCountToFreeSelect;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0018(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeneralChanceByType                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_SetItemsToPoint) == 0x000008, "Wrong alignment on LP_TutorBag_C_SetItemsToPoint");
static_assert(sizeof(LP_TutorBag_C_SetItemsToPoint) == 0x000078, "Wrong size on LP_TutorBag_C_SetItemsToPoint");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, ItemCountToFreeSelect) == 0x000000, "Member 'LP_TutorBag_C_SetItemsToPoint::ItemCountToFreeSelect' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, Temp_int_Array_Index_Variable) == 0x000004, "Member 'LP_TutorBag_C_SetItemsToPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'LP_TutorBag_C_SetItemsToPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_Set_Length_ReturnValue) == 0x000010, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000018, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_Array_Get_Item) == 0x000028, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000068, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_SetItemsToPoint, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'LP_TutorBag_C_SetItemsToPoint::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct LP_TutorBag_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on LP_TutorBag_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(LP_TutorBag_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on LP_TutorBag_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(LP_TutorBag_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'LP_TutorBag_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct LP_TutorBag_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_OnBeginInteract) == 0x000008, "Wrong alignment on LP_TutorBag_C_OnBeginInteract");
static_assert(sizeof(LP_TutorBag_C_OnBeginInteract) == 0x000008, "Wrong size on LP_TutorBag_C_OnBeginInteract");
static_assert(offsetof(LP_TutorBag_C_OnBeginInteract, Player) == 0x000000, "Member 'LP_TutorBag_C_OnBeginInteract::Player' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.OnFocused
// 0x0078 (0x0078 - 0x0000)
struct LP_TutorBag_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_OnFocused) == 0x000008, "Wrong alignment on LP_TutorBag_C_OnFocused");
static_assert(sizeof(LP_TutorBag_C_OnFocused) == 0x000078, "Wrong size on LP_TutorBag_C_OnFocused");
static_assert(offsetof(LP_TutorBag_C_OnFocused, Player) == 0x000000, "Member 'LP_TutorBag_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, HighlightActor) == 0x000008, "Member 'LP_TutorBag_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'LP_TutorBag_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, InteractType) == 0x000018, "Member 'LP_TutorBag_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, LateTime) == 0x000020, "Member 'LP_TutorBag_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'LP_TutorBag_C_OnFocused::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000029, "Member 'LP_TutorBag_C_OnFocused::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'LP_TutorBag_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, K2Node_DynamicCast_AsSurv_PC) == 0x000038, "Member 'LP_TutorBag_C_OnFocused::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'LP_TutorBag_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'LP_TutorBag_C_OnFocused::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'LP_TutorBag_C_OnFocused::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, CallFunc_GetPlayerController_ReturnValue_1) == 0x000048, "Member 'LP_TutorBag_C_OnFocused::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, CallFunc_GetHUD_ReturnValue) == 0x000050, "Member 'LP_TutorBag_C_OnFocused::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000058, "Member 'LP_TutorBag_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'LP_TutorBag_C_OnFocused::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LP_TutorBag_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000070, "Member 'LP_TutorBag_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct LP_TutorBag_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_OnSeen) == 0x000008, "Wrong alignment on LP_TutorBag_C_OnSeen");
static_assert(sizeof(LP_TutorBag_C_OnSeen) == 0x000008, "Wrong size on LP_TutorBag_C_OnSeen");
static_assert(offsetof(LP_TutorBag_C_OnSeen, Player) == 0x000000, "Member 'LP_TutorBag_C_OnSeen::Player' has a wrong offset!");

// Function LP_TutorBag.LP_TutorBag_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct LP_TutorBag_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LP_TutorBag_C_OnStopInteract) == 0x000008, "Wrong alignment on LP_TutorBag_C_OnStopInteract");
static_assert(sizeof(LP_TutorBag_C_OnStopInteract) == 0x000008, "Wrong size on LP_TutorBag_C_OnStopInteract");
static_assert(offsetof(LP_TutorBag_C_OnStopInteract, Player) == 0x000000, "Member 'LP_TutorBag_C_OnStopInteract::Player' has a wrong offset!");

}

