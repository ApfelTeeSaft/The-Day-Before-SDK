#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Interact

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Interact.W_Interact_C.ButtonHovered
// 0x0010 (0x0010 - 0x0000)
struct W_Interact_C_ButtonHovered final
{
public:
	bool                                          bIsHovered;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Interact_C_ButtonHovered) == 0x000008, "Wrong alignment on W_Interact_C_ButtonHovered");
static_assert(sizeof(W_Interact_C_ButtonHovered) == 0x000010, "Wrong size on W_Interact_C_ButtonHovered");
static_assert(offsetof(W_Interact_C_ButtonHovered, bIsHovered) == 0x000000, "Member 'W_Interact_C_ButtonHovered::bIsHovered' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ButtonHovered, Temp_bool_Variable) == 0x000001, "Member 'W_Interact_C_ButtonHovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ButtonHovered, Temp_byte_Variable) == 0x000002, "Member 'W_Interact_C_ButtonHovered::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ButtonHovered, Temp_byte_Variable_1) == 0x000003, "Member 'W_Interact_C_ButtonHovered::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ButtonHovered, K2Node_Select_Default) == 0x000004, "Member 'W_Interact_C_ButtonHovered::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ButtonHovered, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_Interact_C_ButtonHovered::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_Interact.W_Interact_C.ExecuteUbergraph_W_Interact
// 0x01E0 (0x01E0 - 0x0000)
struct W_Interact_C_ExecuteUbergraph_W_Interact final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_6;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_7;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_InText;                         // 0x0028(0x0018)(ConstParm)
	bool                                          K2Node_CustomEvent_Long_1;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Long;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_2;                           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default_3;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsHold;                         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x00F0(0x00D0)()
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Interact_C_ExecuteUbergraph_W_Interact) == 0x000010, "Wrong alignment on W_Interact_C_ExecuteUbergraph_W_Interact");
static_assert(sizeof(W_Interact_C_ExecuteUbergraph_W_Interact) == 0x0001E0, "Wrong size on W_Interact_C_ExecuteUbergraph_W_Interact");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, EntryPoint) == 0x000000, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_byte_Variable) == 0x000004, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_byte_Variable_1) == 0x000005, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_bool_Variable) == 0x000006, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_byte_Variable_2) == 0x000007, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_byte_Variable_3) == 0x000008, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_bool_Variable_1) == 0x000009, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_byte_Variable_4) == 0x00000A, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_byte_Variable_5) == 0x00000B, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_bool_Variable_2) == 0x00001C, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_bool_Variable_3) == 0x00001D, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_byte_Variable_6) == 0x00001E, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_byte_Variable_7) == 0x00001F, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_Event_IsDesignTime) == 0x000020, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_CustomEvent_InText) == 0x000028, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_CustomEvent_Long_1) == 0x000040, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_CustomEvent_Long_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_PlayAnimationForward_ReturnValue) == 0x000048, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_Select_Default) == 0x000050, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_Select_Default_1) == 0x000058, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000060, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000068, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_bool_Variable_4) == 0x000072, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000078, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000080, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_CustomEvent_Long) == 0x000088, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_CustomEvent_Long' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_Select_Default_2) == 0x000089, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, Temp_bool_Variable_5) == 0x00008A, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_Not_PreBool_ReturnValue_1) == 0x00008B, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_CreateDelegate_OutputDelegate_1) == 0x00008C, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_Select_Default_3) == 0x0000A0, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x0000A8, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x0000B0, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x0000C0, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_CustomEvent_IsHold) == 0x0000C8, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_CustomEvent_IsHold' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_SelectInt_ReturnValue) == 0x0000CC, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_TextIsEmpty_ReturnValue) == 0x0000D0, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_Select_Default_4) == 0x0000D1, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, K2Node_Select_Default_5) == 0x0000D2, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000D8, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000E0, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x0000F0, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_SelectFloat_ReturnValue) == 0x0001C0, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_SelectFloat_ReturnValue_1) == 0x0001C8, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x0001D0, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Interact_C_ExecuteUbergraph_W_Interact, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x0001D4, "Member 'W_Interact_C_ExecuteUbergraph_W_Interact::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function W_Interact.W_Interact_C.PlayHideAnim
// 0x0001 (0x0001 - 0x0000)
struct W_Interact_C_PlayHideAnim final
{
public:
	bool                                          Long;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Interact_C_PlayHideAnim) == 0x000001, "Wrong alignment on W_Interact_C_PlayHideAnim");
static_assert(sizeof(W_Interact_C_PlayHideAnim) == 0x000001, "Wrong size on W_Interact_C_PlayHideAnim");
static_assert(offsetof(W_Interact_C_PlayHideAnim, Long) == 0x000000, "Member 'W_Interact_C_PlayHideAnim::Long' has a wrong offset!");

// Function W_Interact.W_Interact_C.PlayHideLootPointAnim
// 0x0001 (0x0001 - 0x0000)
struct W_Interact_C_PlayHideLootPointAnim final
{
public:
	bool                                          Long;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Interact_C_PlayHideLootPointAnim) == 0x000001, "Wrong alignment on W_Interact_C_PlayHideLootPointAnim");
static_assert(sizeof(W_Interact_C_PlayHideLootPointAnim) == 0x000001, "Wrong size on W_Interact_C_PlayHideLootPointAnim");
static_assert(offsetof(W_Interact_C_PlayHideLootPointAnim, Long) == 0x000000, "Member 'W_Interact_C_PlayHideLootPointAnim::Long' has a wrong offset!");

// Function W_Interact.W_Interact_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Interact_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Interact_C_PreConstruct) == 0x000001, "Wrong alignment on W_Interact_C_PreConstruct");
static_assert(sizeof(W_Interact_C_PreConstruct) == 0x000001, "Wrong size on W_Interact_C_PreConstruct");
static_assert(offsetof(W_Interact_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Interact_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Interact.W_Interact_C.SetFillValue
// 0x0030 (0x0030 - 0x0000)
struct W_Interact_C_SetFillValue final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReverse;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Interact_C_SetFillValue) == 0x000008, "Wrong alignment on W_Interact_C_SetFillValue");
static_assert(sizeof(W_Interact_C_SetFillValue) == 0x000030, "Wrong size on W_Interact_C_SetFillValue");
static_assert(offsetof(W_Interact_C_SetFillValue, Value) == 0x000000, "Member 'W_Interact_C_SetFillValue::Value' has a wrong offset!");
static_assert(offsetof(W_Interact_C_SetFillValue, IsReverse) == 0x000008, "Member 'W_Interact_C_SetFillValue::IsReverse' has a wrong offset!");
static_assert(offsetof(W_Interact_C_SetFillValue, Temp_bool_Variable) == 0x000009, "Member 'W_Interact_C_SetFillValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Interact_C_SetFillValue, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00000A, "Member 'W_Interact_C_SetFillValue::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_SetFillValue, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'W_Interact_C_SetFillValue::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_SetFillValue, K2Node_Select_Default) == 0x000018, "Member 'W_Interact_C_SetFillValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Interact_C_SetFillValue, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'W_Interact_C_SetFillValue::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Interact_C_SetFillValue, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000028, "Member 'W_Interact_C_SetFillValue::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function W_Interact.W_Interact_C.SetImageOpacity
// 0x0004 (0x0004 - 0x0000)
struct W_Interact_C_SetImageOpacity final
{
public:
	float                                         InOpacity;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Interact_C_SetImageOpacity) == 0x000004, "Wrong alignment on W_Interact_C_SetImageOpacity");
static_assert(sizeof(W_Interact_C_SetImageOpacity) == 0x000004, "Wrong size on W_Interact_C_SetImageOpacity");
static_assert(offsetof(W_Interact_C_SetImageOpacity, InOpacity) == 0x000000, "Member 'W_Interact_C_SetImageOpacity::InOpacity' has a wrong offset!");

// Function W_Interact.W_Interact_C.SetLetterText
// 0x0018 (0x0018 - 0x0000)
struct W_Interact_C_SetLetterText final
{
public:
	class FText                                   NewText;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Interact_C_SetLetterText) == 0x000008, "Wrong alignment on W_Interact_C_SetLetterText");
static_assert(sizeof(W_Interact_C_SetLetterText) == 0x000018, "Wrong size on W_Interact_C_SetLetterText");
static_assert(offsetof(W_Interact_C_SetLetterText, NewText) == 0x000000, "Member 'W_Interact_C_SetLetterText::NewText' has a wrong offset!");

// Function W_Interact.W_Interact_C.SetState
// 0x0008 (0x0008 - 0x0000)
struct W_Interact_C_SetState final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Interact_C_SetState) == 0x000004, "Wrong alignment on W_Interact_C_SetState");
static_assert(sizeof(W_Interact_C_SetState) == 0x000008, "Wrong size on W_Interact_C_SetState");
static_assert(offsetof(W_Interact_C_SetState, Param_Index) == 0x000000, "Member 'W_Interact_C_SetState::Param_Index' has a wrong offset!");
static_assert(offsetof(W_Interact_C_SetState, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'W_Interact_C_SetState::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function W_Interact.W_Interact_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct W_Interact_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_Interact_C_SetText) == 0x000008, "Wrong alignment on W_Interact_C_SetText");
static_assert(sizeof(W_Interact_C_SetText) == 0x000018, "Wrong size on W_Interact_C_SetText");
static_assert(offsetof(W_Interact_C_SetText, InText) == 0x000000, "Member 'W_Interact_C_SetText::InText' has a wrong offset!");

// Function W_Interact.W_Interact_C.SetTextOpacity
// 0x0004 (0x0004 - 0x0000)
struct W_Interact_C_SetTextOpacity final
{
public:
	float                                         InOpacity;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Interact_C_SetTextOpacity) == 0x000004, "Wrong alignment on W_Interact_C_SetTextOpacity");
static_assert(sizeof(W_Interact_C_SetTextOpacity) == 0x000004, "Wrong size on W_Interact_C_SetTextOpacity");
static_assert(offsetof(W_Interact_C_SetTextOpacity, InOpacity) == 0x000000, "Member 'W_Interact_C_SetTextOpacity::InOpacity' has a wrong offset!");

// Function W_Interact.W_Interact_C.UpdateType
// 0x0001 (0x0001 - 0x0000)
struct W_Interact_C_UpdateType final
{
public:
	bool                                          Param_IsHold;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Interact_C_UpdateType) == 0x000001, "Wrong alignment on W_Interact_C_UpdateType");
static_assert(sizeof(W_Interact_C_UpdateType) == 0x000001, "Wrong size on W_Interact_C_UpdateType");
static_assert(offsetof(W_Interact_C_UpdateType, Param_IsHold) == 0x000000, "Member 'W_Interact_C_UpdateType::Param_IsHold' has a wrong offset!");

}

