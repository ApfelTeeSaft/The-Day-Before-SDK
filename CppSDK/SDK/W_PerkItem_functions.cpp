#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PerkItem

#include "Basic.hpp"

#include "W_PerkItem_classes.hpp"
#include "W_PerkItem_parameters.hpp"


namespace SDK
{

// Function W_PerkItem.W_PerkItem_C.Activate
// (BlueprintCallable, BlueprintEvent)

void UW_PerkItem_C::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PerkItem_C", "Activate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PerkItem.W_PerkItem_C.bLocked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_PerkBlocked                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PerkItem_C::bLocked(bool Param_PerkBlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PerkItem_C", "bLocked");

	Params::W_PerkItem_C_bLocked Parms{};

	Parms.Param_PerkBlocked = Param_PerkBlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PerkItem.W_PerkItem_C.Deactivate
// (BlueprintCallable, BlueprintEvent)

void UW_PerkItem_C::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PerkItem_C", "Deactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PerkItem.W_PerkItem_C.ExecuteUbergraph_W_PerkItem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_PerkItem_C::ExecuteUbergraph_W_PerkItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PerkItem_C", "ExecuteUbergraph_W_PerkItem");

	Params::W_PerkItem_C_ExecuteUbergraph_W_PerkItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_PerkItem.W_PerkItem_C.Init
// (BlueprintCallable, BlueprintEvent)

void UW_PerkItem_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PerkItem_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_PerkItem.W_PerkItem_C.On_PerkSprite_MouseButtonDown_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_PerkItem_C::On_PerkSprite_MouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_PerkItem_C", "On_PerkSprite_MouseButtonDown_0");

	Params::W_PerkItem_C_On_PerkSprite_MouseButtonDown_0 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

