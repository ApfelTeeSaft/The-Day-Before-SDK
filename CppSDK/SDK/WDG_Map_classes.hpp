#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WDG_Map

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WDG_Map.WDG_Map_C
// 0x00D0 (0x0350 - 0x0280)
class UWDG_Map_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Map;                                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MapsCanvas;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBoxHorizontal;                               // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBoxVertical;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        ZoomFactor;                                        // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultMapSize;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWDG_MapIcon_C*>                 Slots;                                             // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        X;                                                 // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Y;                                                 // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      CharRef;                                           // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UTexture2D*>                     IconsSquad;                                        // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ASurvivalPlayer_V2_C*                   SurfRef;                                           // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UWDG_MapIconQuest_C*>            SlotsQuest;                                        // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          ScrollUp;                                          // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ZoomMin;                                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZoomMax;                                           // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EbaniyCostil;                                      // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvPC_C*                              As_Surv_PC;                                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_GPSQuestDetails_C*                 GpsQuestDetails;                                   // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_GPSMain_C*                         SWITCH;                                            // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MapSize;                                           // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddIcon(class UWDG_MapIcon_C* Content, const struct FVector2D& A, const struct FVector2D& InSize, float Angle);
	void AddIconQuest(class UWDG_MapIconQuest_C* Content, const struct FVector2D& A, const struct FVector2D& InSize, float Angle);
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WDG_Map(int32 EntryPoint);
	void ForceUpdateIcons(bool QuestOnly);
	void ForceUpdIcons();
	class FText GetTime();
	void HorizontalA();
	void HorizontalD();
	void InpAxisEvt_HorizontalAD_K2Node_InputAxisEvent_1(float AxisValue);
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2(float AxisValue);
	void InpAxisEvt_MoveRight_K2Node_InputAxisEvent_3(float AxisValue);
	void InpAxisEvt_VerticalWS_K2Node_InputAxisEvent_0(float AxisValue);
	void RefreshAllIcons(bool QuestOnly);
	void SetCoordCity();
	void SetIndex(double* Param_Index);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TrackQuest(double Param_X, double Param_Y);
	void TrackQuestEvent(bool Track);
	void UpdateIconPosition(const struct FVector2D& Position);
	void VerticalS();
	void VerticalW();
	void Zoom(bool Out);
	void ZoomEvent(bool Out);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WDG_Map_C">();
	}
	static class UWDG_Map_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWDG_Map_C>();
	}
};
static_assert(alignof(UWDG_Map_C) == 0x000008, "Wrong alignment on UWDG_Map_C");
static_assert(sizeof(UWDG_Map_C) == 0x000350, "Wrong size on UWDG_Map_C");
static_assert(offsetof(UWDG_Map_C, UberGraphFrame) == 0x000280, "Member 'UWDG_Map_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, Map) == 0x000288, "Member 'UWDG_Map_C::Map' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, MapsCanvas) == 0x000290, "Member 'UWDG_Map_C::MapsCanvas' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, ScrollBoxHorizontal) == 0x000298, "Member 'UWDG_Map_C::ScrollBoxHorizontal' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, ScrollBoxVertical) == 0x0002A0, "Member 'UWDG_Map_C::ScrollBoxVertical' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, ZoomFactor) == 0x0002A8, "Member 'UWDG_Map_C::ZoomFactor' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, DefaultMapSize) == 0x0002B0, "Member 'UWDG_Map_C::DefaultMapSize' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, Slots) == 0x0002B8, "Member 'UWDG_Map_C::Slots' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, X) == 0x0002C8, "Member 'UWDG_Map_C::X' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, Y) == 0x0002D0, "Member 'UWDG_Map_C::Y' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, CharRef) == 0x0002D8, "Member 'UWDG_Map_C::CharRef' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, IconsSquad) == 0x0002E0, "Member 'UWDG_Map_C::IconsSquad' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, SurfRef) == 0x0002F0, "Member 'UWDG_Map_C::SurfRef' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, SlotsQuest) == 0x0002F8, "Member 'UWDG_Map_C::SlotsQuest' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, ScrollUp) == 0x000308, "Member 'UWDG_Map_C::ScrollUp' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, ZoomMin) == 0x000310, "Member 'UWDG_Map_C::ZoomMin' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, ZoomMax) == 0x000318, "Member 'UWDG_Map_C::ZoomMax' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, EbaniyCostil) == 0x000320, "Member 'UWDG_Map_C::EbaniyCostil' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, As_Surv_PC) == 0x000328, "Member 'UWDG_Map_C::As_Surv_PC' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, GpsQuestDetails) == 0x000330, "Member 'UWDG_Map_C::GpsQuestDetails' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, SWITCH) == 0x000338, "Member 'UWDG_Map_C::SWITCH' has a wrong offset!");
static_assert(offsetof(UWDG_Map_C, MapSize) == 0x000340, "Member 'UWDG_Map_C::MapSize' has a wrong offset!");

}

