#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_ChanceModifier

#include "Basic.hpp"

#include "S_LootChanceModifier_structs.hpp"


namespace SDK::Params
{

// Function PDA_ChanceModifier.PDA_ChanceModifier_C.GetCalculatedChance
// 0x0168 (0x0168 - 0x0000)
struct PDA_ChanceModifier_C_GetCalculatedChance final
{
public:
	int32                                         Chance;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootChanceModifier                  LootChanceMod;                                     // 0x0004(0x0009)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Food;                                              // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Drink;                                             // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Aid;                                               // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Pistol;                                            // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rifle;                                             // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Shotgun;                                           // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Backpack;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MeleeAndWeapon;                                    // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_6;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_7;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_8;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_4;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_5;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_6;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_7;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_9;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_8;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_9;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_10;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_11;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_12;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_10;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_11;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_12;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_13;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_5;                           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_14;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_13;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_6;                           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_15;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_7;                           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_16;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_8;                           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_ChanceModifier_C_GetCalculatedChance) == 0x000008, "Wrong alignment on PDA_ChanceModifier_C_GetCalculatedChance");
static_assert(sizeof(PDA_ChanceModifier_C_GetCalculatedChance) == 0x000168, "Wrong size on PDA_ChanceModifier_C_GetCalculatedChance");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Chance) == 0x000000, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Chance' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, LootChanceMod) == 0x000004, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::LootChanceMod' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Food) == 0x000010, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Food' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Drink) == 0x000014, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Drink' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Aid) == 0x000018, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Aid' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Pistol) == 0x00001C, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Pistol' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Rifle) == 0x000020, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Rifle' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Shotgun) == 0x000024, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Shotgun' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Backpack) == 0x000028, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Backpack' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, MeleeAndWeapon) == 0x00002C, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::MeleeAndWeapon' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Temp_bool_Variable) == 0x000030, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Temp_bool_Variable_1) == 0x000031, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Temp_bool_Variable_2) == 0x000032, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Temp_bool_Variable_3) == 0x000033, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Temp_bool_Variable_4) == 0x000034, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Temp_bool_Variable_5) == 0x000035, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Temp_bool_Variable_6) == 0x000036, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Temp_bool_Variable_7) == 0x000037, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000040, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000048, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000050, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x000058, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x000060, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_6) == 0x000068, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue) == 0x000080, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_1) == 0x000084, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_2) == 0x000088, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_3) == 0x00008C, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, K2Node_Select_Default) == 0x000090, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, K2Node_Select_Default_1) == 0x000094, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_7) == 0x000098, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_8) == 0x0000A0, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_4) == 0x0000B8, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_5) == 0x0000BC, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_6) == 0x0000C0, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_7) == 0x0000C4, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, K2Node_Select_Default_2) == 0x0000C8, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, K2Node_Select_Default_3) == 0x0000CC, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_9) == 0x0000D0, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, Temp_bool_Variable_8) == 0x0000D8, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0000E0, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_8) == 0x0000E8, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_9) == 0x0000EC, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, K2Node_Select_Default_4) == 0x0000F0, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_10) == 0x0000F8, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_11) == 0x000100, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_12) == 0x000108, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000110, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_10) == 0x000118, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_11) == 0x00011C, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000120, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000128, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_12) == 0x000130, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_13) == 0x000134, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, K2Node_Select_Default_5) == 0x000138, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_14) == 0x00013C, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Conv_IntToDouble_ReturnValue_13) == 0x000140, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Conv_IntToDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, K2Node_Select_Default_6) == 0x000148, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_15) == 0x00014C, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, K2Node_Select_Default_7) == 0x000150, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x000158, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, CallFunc_FTrunc_ReturnValue_16) == 0x000160, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::CallFunc_FTrunc_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PDA_ChanceModifier_C_GetCalculatedChance, K2Node_Select_Default_8) == 0x000164, "Member 'PDA_ChanceModifier_C_GetCalculatedChance::K2Node_Select_Default_8' has a wrong offset!");

}

