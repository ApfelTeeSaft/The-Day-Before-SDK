#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CutscenePersAnim

#include "Basic.hpp"

#include "EquipmentData_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "BPE_Weapon_Type_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CutscenePersAnim.CutscenePersAnim_C
// 0x0C20 (0x0EB0 - 0x0290)
class ACutscenePersAnim_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 AdditionalMesh3;                                   // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 AdditionalMesh2;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 AdditionalMesh1;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 AdditionalMesh;                                    // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HeadMesh;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight1;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PistolSlot;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   TrailSpine;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   TrailLeftHand;                                     // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   TrailPelvis;                                       // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   TrailLeftKnee1;                                    // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   TrailRightKnee2;                                   // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   TrailRightHand;                                    // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WEaponAttLeft;                                     // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MaskMesh;                                          // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        WeaponSlotPoints;                                  // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BarebackMelee2Point;                               // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BigMelee2Point;                                    // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BigMelee1Point;                                    // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MediumMelee2Point;                                 // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MediumMelee1Point;                                 // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightMelee2Point;                                  // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightMelee1Point;                                  // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BarebackMelee1Point;                               // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MediumBPRifle2Point;                               // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BarebackRifle1Point;                               // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MediumBPRifle1Point;                               // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BigBPRifle2Point;                                  // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BigBPRifle1Point;                                  // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightBPRifle2Point;                                // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LightBPRifle1Point;                                // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BarebackRifle2Point;                               // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WeaponSlots;                                       // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Melee2SM;                                          // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Melee2PhysicsSM;                                   // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            LowerBack2PC;                                      // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MeleeBack2Root;                                    // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Melee1SM;                                          // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Melee1PhysicsSM;                                   // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            LowerBack1PC;                                      // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MeleeBack1Root;                                    // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SecondarySM;                                       // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            UpperBack1PC;                                      // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PrimarySM;                                         // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PrimaryPhysicsSM;                                  // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   UpperBack1Root;                                    // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            UpperBack2PC;                                      // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SecondaryPhysicsSM;                                // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   UpperBack2Root;                                    // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   Foot_l;                                            // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   Calf_l;                                            // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   Foot_r;                                            // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   Calf_r;                                            // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WEaponAtt;                                         // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ArmorMesh;                                         // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BackpackMesh;                                      // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HelmetMesh;                                        // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HairMesh;                                          // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BodyMesh;                                          // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PantsMesh;                                         // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Main;                                              // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_815381434DDBC969FBE64EB9DB3B0CF2; // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_815381434DDBC969FBE64EB9DB3B0CF2; // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Helmet;                                            // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Body;                                              // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Pants;                                             // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Backpack;                                          // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Hairs;                                             // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Armor;                                             // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Head;                                              // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          WeaponMesh;                                        // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          AnimToPlay;                                        // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          HeadAnimToPlay;                                    // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomAnimStartPos;                                // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InitialAnimStartPos;                               // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update;                                            // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RagdollOnHit;                                      // 0x0509(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50A[0x6];                                      // 0x050A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsAsset*                          PhysicAsset;                                       // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           DeathAnim;                                         // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            IconTintColor;                                     // 0x0520(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   NameText;                                          // 0x0538(0x0018)(Edit, BlueprintVisible)
	class FName                                   ArmorName;                                         // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OuterwearName;                                     // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BackpackName;                                      // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HelmetName;                                        // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LookAtTarget;                                      // 0x0570(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NeedAO;                                            // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              WeaponType;                                        // 0x0589(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedHandEffector;                                  // 0x058A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B[0x5];                                      // 0x058B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipmentData                         PantsInfo;                                         // 0x0590(0x0180)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FEquipmentData                         HelmetInfo;                                        // 0x0710(0x0180)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FEquipmentData                         BackpackInfo;                                      // 0x0890(0x0180)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FEquipmentData                         JacketInfo;                                        // 0x0A10(0x0180)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FEquipmentData                         ArmorInfo;                                         // 0x0B90(0x0180)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                DeathImpulseDirection;                             // 0x0D10(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DeathCustomLocation;                               // 0x0D28(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeathImpulseScale;                                 // 0x0D40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneImpulse;                                       // 0x0D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InHit_R;                                           // 0x0D50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead_R;                                            // 0x0D51(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D52[0x6];                                      // 0x0D52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCutscene_AnimBP_C*                     AnimInsta;                                         // 0x0D58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_PlayerNamePlate_C*                   PlayerNameW;                                       // 0x0D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          WidgetVisible;                                     // 0x0D68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D69[0x7];                                      // 0x0D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WidgetOffset;                                      // 0x0D70(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        WigdetScale;                                       // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          WeaponMeshLeftHand;                                // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            WeaponMeshLeft;                                    // 0x0D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            WeaponMeshRight;                                   // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         BackpackType;                                      // 0x0DA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WidgetToRoot;                                      // 0x0DAC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DAD[0x3];                                      // 0x0DAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OnDamageImpulse;                                   // 0x0DB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HuntVorot;                                         // 0x0DB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    OnHitSeqStop;                                      // 0x0DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Mask;                                              // 0x0DC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Hunt_Trailer;                                      // 0x0DD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Vorot_SitAnim;                                     // 0x0DD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class ATrailerFunctions_C*                    TrFuncs;                                           // 0x0DE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_TrajectorySpline_C*                 Trajectory;                                        // 0x0DE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ACutsceneWeapon_C*                      BPWeaponRight;                                     // 0x0DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ACutsceneWeapon_C*                      BPWeaponLeft;                                      // 0x0DF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ACutsceneWeapon_C*                      BPWeaponHand;                                      // 0x0E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          AdditionalSkeletalMesh_1;                          // 0x0E08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          AdditionalSkeletalMesh_2;                          // 0x0E10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          AdditionalSkeletalMesh_3;                          // 0x0E18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          AdditionalSkeletalMesh_4;                          // 0x0E20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Health;                                            // 0x0E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MomentumDeath;                                     // 0x0E30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x0E31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E32[0xE];                                      // 0x0E32(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NewVar;                                            // 0x0E40(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActiveWeaponTag;                                   // 0x0EA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckBSHTick;                                      // 0x0EA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void AddTrajectory();
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CalculateAO();
	void CheckBlendshapes();
	void Death();
	void DestroyTrajectory();
	void ExecuteUbergraph_CutscenePersAnim(int32 EntryPoint);
	void FindEquipMeshes();
	void FindEquippableMesh(class USkeletalMeshComponent* SkComp, struct FEquipmentData* Out_Row);
	void HideNameplate();
	void HideWidget();
	void Hit(class FName HitBone1);
	void Hit_Hand_l();
	void Hit_Hand_R();
	void Hit_Random(class FName HitBone1);
	void Hit_UpperArm_l();
	void Hit_UpperArm_r();
	void HitEvent(double Damage);
	void HundBSh();
	void OnBlendOut_29FFF81249F1E175A7C9A18C1B3D408A(class FName NotifyName);
	void OnCompleted_29FFF81249F1E175A7C9A18C1B3D408A(class FName NotifyName);
	void OnInterrupted_29FFF81249F1E175A7C9A18C1B3D408A(class FName NotifyName);
	void OnLoaded_6317DDD0434A9C7900D40988EA01B5B4(TSubclassOf<class UObject> Loaded);
	void OnNotifyBegin_29FFF81249F1E175A7C9A18C1B3D408A(class FName NotifyName);
	void OnNotifyEnd_29FFF81249F1E175A7C9A18C1B3D408A(class FName NotifyName);
	void PhysicBodyReaction(class FName BoneName, double HitAngle, const struct FVector& HitLocation);
	void PlayAdditiveDamage();
	void Ragdoll();
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ShowWidget();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void TrajectoryUpdate();
	void UserConstructionScript();
	void WeaponFire();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CutscenePersAnim_C">();
	}
	static class ACutscenePersAnim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACutscenePersAnim_C>();
	}
};
static_assert(alignof(ACutscenePersAnim_C) == 0x000010, "Wrong alignment on ACutscenePersAnim_C");
static_assert(sizeof(ACutscenePersAnim_C) == 0x000EB0, "Wrong size on ACutscenePersAnim_C");
static_assert(offsetof(ACutscenePersAnim_C, UberGraphFrame) == 0x000290, "Member 'ACutscenePersAnim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, AdditionalMesh3) == 0x000298, "Member 'ACutscenePersAnim_C::AdditionalMesh3' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, AdditionalMesh2) == 0x0002A0, "Member 'ACutscenePersAnim_C::AdditionalMesh2' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, AdditionalMesh1) == 0x0002A8, "Member 'ACutscenePersAnim_C::AdditionalMesh1' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, AdditionalMesh) == 0x0002B0, "Member 'ACutscenePersAnim_C::AdditionalMesh' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, HeadMesh) == 0x0002B8, "Member 'ACutscenePersAnim_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, RectLight1) == 0x0002C0, "Member 'ACutscenePersAnim_C::RectLight1' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, PistolSlot) == 0x0002C8, "Member 'ACutscenePersAnim_C::PistolSlot' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, TrailSpine) == 0x0002D0, "Member 'ACutscenePersAnim_C::TrailSpine' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, TrailLeftHand) == 0x0002D8, "Member 'ACutscenePersAnim_C::TrailLeftHand' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, TrailPelvis) == 0x0002E0, "Member 'ACutscenePersAnim_C::TrailPelvis' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, TrailLeftKnee1) == 0x0002E8, "Member 'ACutscenePersAnim_C::TrailLeftKnee1' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, TrailRightKnee2) == 0x0002F0, "Member 'ACutscenePersAnim_C::TrailRightKnee2' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, TrailRightHand) == 0x0002F8, "Member 'ACutscenePersAnim_C::TrailRightHand' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WEaponAttLeft) == 0x000300, "Member 'ACutscenePersAnim_C::WEaponAttLeft' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, MaskMesh) == 0x000308, "Member 'ACutscenePersAnim_C::MaskMesh' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WeaponSlotPoints) == 0x000310, "Member 'ACutscenePersAnim_C::WeaponSlotPoints' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BarebackMelee2Point) == 0x000318, "Member 'ACutscenePersAnim_C::BarebackMelee2Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BigMelee2Point) == 0x000320, "Member 'ACutscenePersAnim_C::BigMelee2Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BigMelee1Point) == 0x000328, "Member 'ACutscenePersAnim_C::BigMelee1Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, MediumMelee2Point) == 0x000330, "Member 'ACutscenePersAnim_C::MediumMelee2Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, MediumMelee1Point) == 0x000338, "Member 'ACutscenePersAnim_C::MediumMelee1Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, LightMelee2Point) == 0x000340, "Member 'ACutscenePersAnim_C::LightMelee2Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, LightMelee1Point) == 0x000348, "Member 'ACutscenePersAnim_C::LightMelee1Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BarebackMelee1Point) == 0x000350, "Member 'ACutscenePersAnim_C::BarebackMelee1Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, MediumBPRifle2Point) == 0x000358, "Member 'ACutscenePersAnim_C::MediumBPRifle2Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BarebackRifle1Point) == 0x000360, "Member 'ACutscenePersAnim_C::BarebackRifle1Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, MediumBPRifle1Point) == 0x000368, "Member 'ACutscenePersAnim_C::MediumBPRifle1Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BigBPRifle2Point) == 0x000370, "Member 'ACutscenePersAnim_C::BigBPRifle2Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BigBPRifle1Point) == 0x000378, "Member 'ACutscenePersAnim_C::BigBPRifle1Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, LightBPRifle2Point) == 0x000380, "Member 'ACutscenePersAnim_C::LightBPRifle2Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, LightBPRifle1Point) == 0x000388, "Member 'ACutscenePersAnim_C::LightBPRifle1Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BarebackRifle2Point) == 0x000390, "Member 'ACutscenePersAnim_C::BarebackRifle2Point' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WeaponSlots) == 0x000398, "Member 'ACutscenePersAnim_C::WeaponSlots' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Melee2SM) == 0x0003A0, "Member 'ACutscenePersAnim_C::Melee2SM' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Melee2PhysicsSM) == 0x0003A8, "Member 'ACutscenePersAnim_C::Melee2PhysicsSM' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, LowerBack2PC) == 0x0003B0, "Member 'ACutscenePersAnim_C::LowerBack2PC' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, MeleeBack2Root) == 0x0003B8, "Member 'ACutscenePersAnim_C::MeleeBack2Root' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Melee1SM) == 0x0003C0, "Member 'ACutscenePersAnim_C::Melee1SM' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Melee1PhysicsSM) == 0x0003C8, "Member 'ACutscenePersAnim_C::Melee1PhysicsSM' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, LowerBack1PC) == 0x0003D0, "Member 'ACutscenePersAnim_C::LowerBack1PC' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, MeleeBack1Root) == 0x0003D8, "Member 'ACutscenePersAnim_C::MeleeBack1Root' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, SecondarySM) == 0x0003E0, "Member 'ACutscenePersAnim_C::SecondarySM' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, UpperBack1PC) == 0x0003E8, "Member 'ACutscenePersAnim_C::UpperBack1PC' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, PrimarySM) == 0x0003F0, "Member 'ACutscenePersAnim_C::PrimarySM' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, PrimaryPhysicsSM) == 0x0003F8, "Member 'ACutscenePersAnim_C::PrimaryPhysicsSM' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, UpperBack1Root) == 0x000400, "Member 'ACutscenePersAnim_C::UpperBack1Root' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, UpperBack2PC) == 0x000408, "Member 'ACutscenePersAnim_C::UpperBack2PC' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, SecondaryPhysicsSM) == 0x000410, "Member 'ACutscenePersAnim_C::SecondaryPhysicsSM' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, UpperBack2Root) == 0x000418, "Member 'ACutscenePersAnim_C::UpperBack2Root' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Sphere) == 0x000420, "Member 'ACutscenePersAnim_C::Sphere' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Foot_l) == 0x000428, "Member 'ACutscenePersAnim_C::Foot_l' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Calf_l) == 0x000430, "Member 'ACutscenePersAnim_C::Calf_l' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Foot_r) == 0x000438, "Member 'ACutscenePersAnim_C::Foot_r' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Calf_r) == 0x000440, "Member 'ACutscenePersAnim_C::Calf_r' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Widget) == 0x000448, "Member 'ACutscenePersAnim_C::Widget' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WEaponAtt) == 0x000450, "Member 'ACutscenePersAnim_C::WEaponAtt' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, ArmorMesh) == 0x000458, "Member 'ACutscenePersAnim_C::ArmorMesh' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BackpackMesh) == 0x000460, "Member 'ACutscenePersAnim_C::BackpackMesh' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, HelmetMesh) == 0x000468, "Member 'ACutscenePersAnim_C::HelmetMesh' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, HairMesh) == 0x000470, "Member 'ACutscenePersAnim_C::HairMesh' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BodyMesh) == 0x000478, "Member 'ACutscenePersAnim_C::BodyMesh' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, PantsMesh) == 0x000480, "Member 'ACutscenePersAnim_C::PantsMesh' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Main) == 0x000488, "Member 'ACutscenePersAnim_C::Main' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, DefaultSceneRoot) == 0x000490, "Member 'ACutscenePersAnim_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Timeline_0_NewTrack_0_815381434DDBC969FBE64EB9DB3B0CF2) == 0x000498, "Member 'ACutscenePersAnim_C::Timeline_0_NewTrack_0_815381434DDBC969FBE64EB9DB3B0CF2' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Timeline_0__Direction_815381434DDBC969FBE64EB9DB3B0CF2) == 0x00049C, "Member 'ACutscenePersAnim_C::Timeline_0__Direction_815381434DDBC969FBE64EB9DB3B0CF2' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Timeline_0) == 0x0004A0, "Member 'ACutscenePersAnim_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Helmet) == 0x0004A8, "Member 'ACutscenePersAnim_C::Helmet' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Body) == 0x0004B0, "Member 'ACutscenePersAnim_C::Body' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Pants) == 0x0004B8, "Member 'ACutscenePersAnim_C::Pants' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Backpack) == 0x0004C0, "Member 'ACutscenePersAnim_C::Backpack' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Hairs) == 0x0004C8, "Member 'ACutscenePersAnim_C::Hairs' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Armor) == 0x0004D0, "Member 'ACutscenePersAnim_C::Armor' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Head) == 0x0004D8, "Member 'ACutscenePersAnim_C::Head' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WeaponMesh) == 0x0004E0, "Member 'ACutscenePersAnim_C::WeaponMesh' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, AnimToPlay) == 0x0004E8, "Member 'ACutscenePersAnim_C::AnimToPlay' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, HeadAnimToPlay) == 0x0004F0, "Member 'ACutscenePersAnim_C::HeadAnimToPlay' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, RandomAnimStartPos) == 0x0004F8, "Member 'ACutscenePersAnim_C::RandomAnimStartPos' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, InitialAnimStartPos) == 0x000500, "Member 'ACutscenePersAnim_C::InitialAnimStartPos' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Update) == 0x000508, "Member 'ACutscenePersAnim_C::Update' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, RagdollOnHit) == 0x000509, "Member 'ACutscenePersAnim_C::RagdollOnHit' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, PhysicAsset) == 0x000510, "Member 'ACutscenePersAnim_C::PhysicAsset' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, DeathAnim) == 0x000518, "Member 'ACutscenePersAnim_C::DeathAnim' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, IconTintColor) == 0x000520, "Member 'ACutscenePersAnim_C::IconTintColor' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, NameText) == 0x000538, "Member 'ACutscenePersAnim_C::NameText' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, ArmorName) == 0x000550, "Member 'ACutscenePersAnim_C::ArmorName' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, OuterwearName) == 0x000558, "Member 'ACutscenePersAnim_C::OuterwearName' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BackpackName) == 0x000560, "Member 'ACutscenePersAnim_C::BackpackName' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, HelmetName) == 0x000568, "Member 'ACutscenePersAnim_C::HelmetName' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, LookAtTarget) == 0x000570, "Member 'ACutscenePersAnim_C::LookAtTarget' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, NeedAO) == 0x000588, "Member 'ACutscenePersAnim_C::NeedAO' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WeaponType) == 0x000589, "Member 'ACutscenePersAnim_C::WeaponType' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, NeedHandEffector) == 0x00058A, "Member 'ACutscenePersAnim_C::NeedHandEffector' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, PantsInfo) == 0x000590, "Member 'ACutscenePersAnim_C::PantsInfo' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, HelmetInfo) == 0x000710, "Member 'ACutscenePersAnim_C::HelmetInfo' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BackpackInfo) == 0x000890, "Member 'ACutscenePersAnim_C::BackpackInfo' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, JacketInfo) == 0x000A10, "Member 'ACutscenePersAnim_C::JacketInfo' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, ArmorInfo) == 0x000B90, "Member 'ACutscenePersAnim_C::ArmorInfo' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, DeathImpulseDirection) == 0x000D10, "Member 'ACutscenePersAnim_C::DeathImpulseDirection' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, DeathCustomLocation) == 0x000D28, "Member 'ACutscenePersAnim_C::DeathCustomLocation' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, DeathImpulseScale) == 0x000D40, "Member 'ACutscenePersAnim_C::DeathImpulseScale' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BoneImpulse) == 0x000D48, "Member 'ACutscenePersAnim_C::BoneImpulse' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, InHit_R) == 0x000D50, "Member 'ACutscenePersAnim_C::InHit_R' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Dead_R) == 0x000D51, "Member 'ACutscenePersAnim_C::Dead_R' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, AnimInsta) == 0x000D58, "Member 'ACutscenePersAnim_C::AnimInsta' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, PlayerNameW) == 0x000D60, "Member 'ACutscenePersAnim_C::PlayerNameW' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WidgetVisible) == 0x000D68, "Member 'ACutscenePersAnim_C::WidgetVisible' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WidgetOffset) == 0x000D70, "Member 'ACutscenePersAnim_C::WidgetOffset' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WigdetScale) == 0x000D88, "Member 'ACutscenePersAnim_C::WigdetScale' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WeaponMeshLeftHand) == 0x000D90, "Member 'ACutscenePersAnim_C::WeaponMeshLeftHand' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WeaponMeshLeft) == 0x000D98, "Member 'ACutscenePersAnim_C::WeaponMeshLeft' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WeaponMeshRight) == 0x000DA0, "Member 'ACutscenePersAnim_C::WeaponMeshRight' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BackpackType) == 0x000DA8, "Member 'ACutscenePersAnim_C::BackpackType' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, WidgetToRoot) == 0x000DAC, "Member 'ACutscenePersAnim_C::WidgetToRoot' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, OnDamageImpulse) == 0x000DB0, "Member 'ACutscenePersAnim_C::OnDamageImpulse' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, HuntVorot) == 0x000DB8, "Member 'ACutscenePersAnim_C::HuntVorot' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, OnHitSeqStop) == 0x000DC0, "Member 'ACutscenePersAnim_C::OnHitSeqStop' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Mask) == 0x000DC8, "Member 'ACutscenePersAnim_C::Mask' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Hunt_Trailer) == 0x000DD0, "Member 'ACutscenePersAnim_C::Hunt_Trailer' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Vorot_SitAnim) == 0x000DD8, "Member 'ACutscenePersAnim_C::Vorot_SitAnim' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, TrFuncs) == 0x000DE0, "Member 'ACutscenePersAnim_C::TrFuncs' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Trajectory) == 0x000DE8, "Member 'ACutscenePersAnim_C::Trajectory' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BPWeaponRight) == 0x000DF0, "Member 'ACutscenePersAnim_C::BPWeaponRight' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BPWeaponLeft) == 0x000DF8, "Member 'ACutscenePersAnim_C::BPWeaponLeft' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, BPWeaponHand) == 0x000E00, "Member 'ACutscenePersAnim_C::BPWeaponHand' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, AdditionalSkeletalMesh_1) == 0x000E08, "Member 'ACutscenePersAnim_C::AdditionalSkeletalMesh_1' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, AdditionalSkeletalMesh_2) == 0x000E10, "Member 'ACutscenePersAnim_C::AdditionalSkeletalMesh_2' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, AdditionalSkeletalMesh_3) == 0x000E18, "Member 'ACutscenePersAnim_C::AdditionalSkeletalMesh_3' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, AdditionalSkeletalMesh_4) == 0x000E20, "Member 'ACutscenePersAnim_C::AdditionalSkeletalMesh_4' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Health) == 0x000E28, "Member 'ACutscenePersAnim_C::Health' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, MomentumDeath) == 0x000E30, "Member 'ACutscenePersAnim_C::MomentumDeath' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, Dead) == 0x000E31, "Member 'ACutscenePersAnim_C::Dead' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, NewVar) == 0x000E40, "Member 'ACutscenePersAnim_C::NewVar' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, ActiveWeaponTag) == 0x000EA0, "Member 'ACutscenePersAnim_C::ActiveWeaponTag' has a wrong offset!");
static_assert(offsetof(ACutscenePersAnim_C, CheckBSHTick) == 0x000EA8, "Member 'ACutscenePersAnim_C::CheckBSHTick' has a wrong offset!");

}

