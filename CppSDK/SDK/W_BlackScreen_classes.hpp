#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BlackScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_BlackScreen.W_BlackScreen_C
// 0x0100 (0x0380 - 0x0280)
class UW_BlackScreen_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hide_Anim;                                         // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Show_Anim;                                         // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_74;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_134;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Black;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Logo;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_80;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_NewHint;                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_OldHint;                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_84;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_15;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_LoadPercent;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_154;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnOpened;                                          // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnClosed;                                          // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMediaPlayer*                           MedialPlayer;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     Loading_Location_2;                                // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     Root_loading_sound;                                // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UTexture2D*>                     SrcImageArray;                                     // 0x0330(0x0010)(Edit, BlueprintVisible)
	TArray<class UTexture2D*>                     TempSrcImageArray;                                 // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTexture2D*                             CurrentSrcImage;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LoadingPercentTimer;                               // 0x0358(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLoadingPercentTime;                         // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlackScreen;                                       // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnBlackScreenSee;                                  // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Close(bool OnCar);
	void ExecuteUbergraph_W_BlackScreen(int32 EntryPoint);
	void InitLoadingScreenArray();
	void OnBlackScreenSee__DelegateSignature();
	void OnClosed__DelegateSignature();
	void OnIncreaseLoadingPercent();
	void OnLoadingScreenInited();
	void OnOpened__DelegateSignature();
	void OnSetMaxLoadingPercent();
	void Open(bool WithoutShade);
	void OpenWithText(const class FText& Text);
	void SetTextAndHint(const class FText& MapName, const class FText& HintText, class UTexture2D* Texture);
	void StartInitial();
	void StopInitial();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_BlackScreen_C">();
	}
	static class UW_BlackScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_BlackScreen_C>();
	}
};
static_assert(alignof(UW_BlackScreen_C) == 0x000008, "Wrong alignment on UW_BlackScreen_C");
static_assert(sizeof(UW_BlackScreen_C) == 0x000380, "Wrong size on UW_BlackScreen_C");
static_assert(offsetof(UW_BlackScreen_C, UberGraphFrame) == 0x000280, "Member 'UW_BlackScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, Hide_Anim) == 0x000288, "Member 'UW_BlackScreen_C::Hide_Anim' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, Show_Anim) == 0x000290, "Member 'UW_BlackScreen_C::Show_Anim' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, Image_74) == 0x000298, "Member 'UW_BlackScreen_C::Image_74' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, Image_134) == 0x0002A0, "Member 'UW_BlackScreen_C::Image_134' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, Image_Black) == 0x0002A8, "Member 'UW_BlackScreen_C::Image_Black' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, Image_Logo) == 0x0002B0, "Member 'UW_BlackScreen_C::Image_Logo' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, Overlay) == 0x0002B8, "Member 'UW_BlackScreen_C::Overlay' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, Overlay_80) == 0x0002C0, "Member 'UW_BlackScreen_C::Overlay_80' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, RichTextBlock_NewHint) == 0x0002C8, "Member 'UW_BlackScreen_C::RichTextBlock_NewHint' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, RichTextBlock_OldHint) == 0x0002D0, "Member 'UW_BlackScreen_C::RichTextBlock_OldHint' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, SizeBox_84) == 0x0002D8, "Member 'UW_BlackScreen_C::SizeBox_84' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, TextBlock_15) == 0x0002E0, "Member 'UW_BlackScreen_C::TextBlock_15' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, TextBlock_LoadPercent) == 0x0002E8, "Member 'UW_BlackScreen_C::TextBlock_LoadPercent' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, WidgetSwitcher_154) == 0x0002F0, "Member 'UW_BlackScreen_C::WidgetSwitcher_154' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, OnOpened) == 0x0002F8, "Member 'UW_BlackScreen_C::OnOpened' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, OnClosed) == 0x000308, "Member 'UW_BlackScreen_C::OnClosed' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, MedialPlayer) == 0x000318, "Member 'UW_BlackScreen_C::MedialPlayer' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, Loading_Location_2) == 0x000320, "Member 'UW_BlackScreen_C::Loading_Location_2' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, Root_loading_sound) == 0x000328, "Member 'UW_BlackScreen_C::Root_loading_sound' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, SrcImageArray) == 0x000330, "Member 'UW_BlackScreen_C::SrcImageArray' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, TempSrcImageArray) == 0x000340, "Member 'UW_BlackScreen_C::TempSrcImageArray' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, CurrentSrcImage) == 0x000350, "Member 'UW_BlackScreen_C::CurrentSrcImage' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, LoadingPercentTimer) == 0x000358, "Member 'UW_BlackScreen_C::LoadingPercentTimer' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, CurrentLoadingPercentTime) == 0x000360, "Member 'UW_BlackScreen_C::CurrentLoadingPercentTime' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, BlackScreen) == 0x000368, "Member 'UW_BlackScreen_C::BlackScreen' has a wrong offset!");
static_assert(offsetof(UW_BlackScreen_C, OnBlackScreenSee) == 0x000370, "Member 'UW_BlackScreen_C::OnBlackScreenSee' has a wrong offset!");

}

