#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InventoryCapacity

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_InventoryCapacity.W_InventoryCapacity_C
// 0x0028 (0x02A8 - 0x0280)
class UW_InventoryCapacity_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_InventoryCounter_C*                  W_Counter_FreeSlots;                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_InventoryCounter_C*                  W_Counter_TotalSlots;                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle;                                       // 0x02A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Activate(class UJSIContainer_C* Param_Container);
	void Destruct();
	void Disable();
	void ExecuteUbergraph_W_InventoryCapacity(int32 EntryPoint);
	void UpdateData();
	void UpdateText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_InventoryCapacity_C">();
	}
	static class UW_InventoryCapacity_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_InventoryCapacity_C>();
	}
};
static_assert(alignof(UW_InventoryCapacity_C) == 0x000008, "Wrong alignment on UW_InventoryCapacity_C");
static_assert(sizeof(UW_InventoryCapacity_C) == 0x0002A8, "Wrong size on UW_InventoryCapacity_C");
static_assert(offsetof(UW_InventoryCapacity_C, UberGraphFrame) == 0x000280, "Member 'UW_InventoryCapacity_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_InventoryCapacity_C, W_Counter_FreeSlots) == 0x000288, "Member 'UW_InventoryCapacity_C::W_Counter_FreeSlots' has a wrong offset!");
static_assert(offsetof(UW_InventoryCapacity_C, W_Counter_TotalSlots) == 0x000290, "Member 'UW_InventoryCapacity_C::W_Counter_TotalSlots' has a wrong offset!");
static_assert(offsetof(UW_InventoryCapacity_C, Container) == 0x000298, "Member 'UW_InventoryCapacity_C::Container' has a wrong offset!");
static_assert(offsetof(UW_InventoryCapacity_C, TimerHandle) == 0x0002A0, "Member 'UW_InventoryCapacity_C::TimerHandle' has a wrong offset!");

}

