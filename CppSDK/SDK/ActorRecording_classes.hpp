#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActorRecording

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ActorRecording.ActorRecording_C
// 0x01D0 (0x0460 - 0x0290)
class AActorRecording_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  PostProcess;                                       // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Char3_Lighting;                                    // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL16;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL20;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL19;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL18;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL17;                                      // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Char2_Lighting;                                    // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL11;                                      // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL15;                                      // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL14;                                      // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL13;                                      // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL12;                                      // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Char1_Lighting;                                    // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL6;                                       // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL10;                                      // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL9;                                       // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL8;                                       // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL7;                                       // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Main_Lighting;                                     // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL4;                                       // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL3;                                       // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL2;                                       // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL5;                                       // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    CharLightL1;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D3;                          // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D2;                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D1;                          // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene1;                                            // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene2;                                            // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene3;                                            // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D;                           // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   PartyChar3;                                        // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   PartyChar2;                                        // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   PartyChar1;                                        // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2DMain;                       // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_ChooseCharacter;                                // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          CanRotate_;                                        // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              StartLocation;                                     // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       PlayerIconMaterialArray;                           // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class APawn*>                          PlayersIn;                                         // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class UCharacterCreateSave_C*>         Saves;                                             // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class APawn*, class UMaterialInstance*>  PlayersMaterials;                                  // 0x0410(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ClickedEnd();
	void ClickedStart(const struct FVector2D& MouseLocation);
	void CreateNewRenderTarget(int32 SlotID);
	void ExecuteUbergraph_ActorRecording(int32 EntryPoint);
	void Init();
	void MakeSaveFromSurvivalPlayer(class ASurvivalPlayer_V2_C* SurvivalPlayer, int32 Param_Index);
	void MouseMove(const struct FVector2D& MouseLocation);
	void ReceiveBeginPlay();
	void RefreshMesh(class UChildActorComponent* Target, bool LocalCharacter, class UCharacterCreateSave_C* Character_Save_Ref);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActorRecording_C">();
	}
	static class AActorRecording_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AActorRecording_C>();
	}
};
static_assert(alignof(AActorRecording_C) == 0x000008, "Wrong alignment on AActorRecording_C");
static_assert(sizeof(AActorRecording_C) == 0x000460, "Wrong size on AActorRecording_C");
static_assert(offsetof(AActorRecording_C, UberGraphFrame) == 0x000290, "Member 'AActorRecording_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, PostProcess) == 0x000298, "Member 'AActorRecording_C::PostProcess' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, Char3_Lighting) == 0x0002A0, "Member 'AActorRecording_C::Char3_Lighting' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL16) == 0x0002A8, "Member 'AActorRecording_C::CharLightL16' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL20) == 0x0002B0, "Member 'AActorRecording_C::CharLightL20' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL19) == 0x0002B8, "Member 'AActorRecording_C::CharLightL19' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL18) == 0x0002C0, "Member 'AActorRecording_C::CharLightL18' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL17) == 0x0002C8, "Member 'AActorRecording_C::CharLightL17' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, Char2_Lighting) == 0x0002D0, "Member 'AActorRecording_C::Char2_Lighting' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL11) == 0x0002D8, "Member 'AActorRecording_C::CharLightL11' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL15) == 0x0002E0, "Member 'AActorRecording_C::CharLightL15' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL14) == 0x0002E8, "Member 'AActorRecording_C::CharLightL14' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL13) == 0x0002F0, "Member 'AActorRecording_C::CharLightL13' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL12) == 0x0002F8, "Member 'AActorRecording_C::CharLightL12' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, Char1_Lighting) == 0x000300, "Member 'AActorRecording_C::Char1_Lighting' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL6) == 0x000308, "Member 'AActorRecording_C::CharLightL6' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL10) == 0x000310, "Member 'AActorRecording_C::CharLightL10' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL9) == 0x000318, "Member 'AActorRecording_C::CharLightL9' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL8) == 0x000320, "Member 'AActorRecording_C::CharLightL8' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL7) == 0x000328, "Member 'AActorRecording_C::CharLightL7' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, Main_Lighting) == 0x000330, "Member 'AActorRecording_C::Main_Lighting' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL4) == 0x000338, "Member 'AActorRecording_C::CharLightL4' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL3) == 0x000340, "Member 'AActorRecording_C::CharLightL3' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL2) == 0x000348, "Member 'AActorRecording_C::CharLightL2' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL5) == 0x000350, "Member 'AActorRecording_C::CharLightL5' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CharLightL1) == 0x000358, "Member 'AActorRecording_C::CharLightL1' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, SceneCaptureComponent2D3) == 0x000360, "Member 'AActorRecording_C::SceneCaptureComponent2D3' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, SceneCaptureComponent2D2) == 0x000368, "Member 'AActorRecording_C::SceneCaptureComponent2D2' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, SceneCaptureComponent2D1) == 0x000370, "Member 'AActorRecording_C::SceneCaptureComponent2D1' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, Scene1) == 0x000378, "Member 'AActorRecording_C::Scene1' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, Scene2) == 0x000380, "Member 'AActorRecording_C::Scene2' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, Scene3) == 0x000388, "Member 'AActorRecording_C::Scene3' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, SceneCaptureComponent2D) == 0x000390, "Member 'AActorRecording_C::SceneCaptureComponent2D' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, PartyChar3) == 0x000398, "Member 'AActorRecording_C::PartyChar3' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, PartyChar2) == 0x0003A0, "Member 'AActorRecording_C::PartyChar2' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, PartyChar1) == 0x0003A8, "Member 'AActorRecording_C::PartyChar1' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, SceneCaptureComponent2DMain) == 0x0003B0, "Member 'AActorRecording_C::SceneCaptureComponent2DMain' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, BP_ChooseCharacter) == 0x0003B8, "Member 'AActorRecording_C::BP_ChooseCharacter' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, Scene) == 0x0003C0, "Member 'AActorRecording_C::Scene' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, CanRotate_) == 0x0003C8, "Member 'AActorRecording_C::CanRotate_' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, StartLocation) == 0x0003D0, "Member 'AActorRecording_C::StartLocation' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, PlayerIconMaterialArray) == 0x0003E0, "Member 'AActorRecording_C::PlayerIconMaterialArray' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, PlayersIn) == 0x0003F0, "Member 'AActorRecording_C::PlayersIn' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, Saves) == 0x000400, "Member 'AActorRecording_C::Saves' has a wrong offset!");
static_assert(offsetof(AActorRecording_C, PlayersMaterials) == 0x000410, "Member 'AActorRecording_C::PlayersMaterials' has a wrong offset!");

}

