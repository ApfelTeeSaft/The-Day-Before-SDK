#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameHUD

#include "Basic.hpp"

#include "E_HouseType_structs.hpp"
#include "TranzitZone_Enum_structs.hpp"
#include "InfoType_structs.hpp"
#include "WE_UIMode_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MarkType_structs.hpp"
#include "E_NotificationType_structs.hpp"
#include "E_StaticInteractType_structs.hpp"
#include "E_ActorType_structs.hpp"
#include "E_NewLocation_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_GameHUD.BP_GameHUD_C.AcceptInvideHome
// 0x0048 (0x0048 - 0x0000)
struct BP_GameHUD_C_AcceptInvideHome final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_inviteHomeOffer_C*                 K2Node_DynamicCast_AsWBP_Invite_Home_Offer;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AcceptInvideHome) == 0x000008, "Wrong alignment on BP_GameHUD_C_AcceptInvideHome");
static_assert(sizeof(BP_GameHUD_C_AcceptInvideHome) == 0x000048, "Wrong size on BP_GameHUD_C_AcceptInvideHome");
static_assert(offsetof(BP_GameHUD_C_AcceptInvideHome, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GameHUD_C_AcceptInvideHome::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptInvideHome, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GameHUD_C_AcceptInvideHome::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptInvideHome, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GameHUD_C_AcceptInvideHome::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptInvideHome, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'BP_GameHUD_C_AcceptInvideHome::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptInvideHome, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GameHUD_C_AcceptInvideHome::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptInvideHome, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GameHUD_C_AcceptInvideHome::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptInvideHome, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_GameHUD_C_AcceptInvideHome::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptInvideHome, K2Node_DynamicCast_AsWBP_Invite_Home_Offer) == 0x000038, "Member 'BP_GameHUD_C_AcceptInvideHome::K2Node_DynamicCast_AsWBP_Invite_Home_Offer' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptInvideHome, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_GameHUD_C_AcceptInvideHome::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AcceptLastOffer
// 0x0028 (0x0028 - 0x0000)
struct BP_GameHUD_C_AcceptLastOffer final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLeaveCheckDisplayed_LeaveQueueDisplayed; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Offer_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AcceptLastOffer) == 0x000008, "Wrong alignment on BP_GameHUD_C_AcceptLastOffer");
static_assert(sizeof(BP_GameHUD_C_AcceptLastOffer) == 0x000028, "Wrong size on BP_GameHUD_C_AcceptLastOffer");
static_assert(offsetof(BP_GameHUD_C_AcceptLastOffer, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_GameHUD_C_AcceptLastOffer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptLastOffer, CallFunc_GetLeaveCheckDisplayed_LeaveQueueDisplayed) == 0x000008, "Member 'BP_GameHUD_C_AcceptLastOffer::CallFunc_GetLeaveCheckDisplayed_LeaveQueueDisplayed' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptLastOffer, K2Node_DynamicCast_AsPS_TDB) == 0x000010, "Member 'BP_GameHUD_C_AcceptLastOffer::K2Node_DynamicCast_AsPS_TDB' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptLastOffer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameHUD_C_AcceptLastOffer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptLastOffer, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'BP_GameHUD_C_AcceptLastOffer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AcceptLastOffer, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameHUD_C_AcceptLastOffer::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddGymBarWidget
// 0x0018 (0x0018 - 0x0000)
struct BP_GameHUD_C_AddGymBarWidget final
{
public:
	class UW_GymBar_C*                            CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddGymBarWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddGymBarWidget");
static_assert(sizeof(BP_GameHUD_C_AddGymBarWidget) == 0x000018, "Wrong size on BP_GameHUD_C_AddGymBarWidget");
static_assert(offsetof(BP_GameHUD_C_AddGymBarWidget, CallFunc_Create_ReturnValue) == 0x000000, "Member 'BP_GameHUD_C_AddGymBarWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddGymBarWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_GameHUD_C_AddGymBarWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddInviteHomeWidget
// 0x0028 (0x0028 - 0x0000)
struct BP_GameHUD_C_AddInviteHomeWidget final
{
public:
	int32                                         InviteIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerNameOfferer;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class APS_TDB_C*                              NewVar;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_inviteHomeOffer_C*                 CallFunc_AddInvideToHomeOffer_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddInviteHomeWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddInviteHomeWidget");
static_assert(sizeof(BP_GameHUD_C_AddInviteHomeWidget) == 0x000028, "Wrong size on BP_GameHUD_C_AddInviteHomeWidget");
static_assert(offsetof(BP_GameHUD_C_AddInviteHomeWidget, InviteIndex) == 0x000000, "Member 'BP_GameHUD_C_AddInviteHomeWidget::InviteIndex' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddInviteHomeWidget, PlayerNameOfferer) == 0x000008, "Member 'BP_GameHUD_C_AddInviteHomeWidget::PlayerNameOfferer' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddInviteHomeWidget, NewVar) == 0x000018, "Member 'BP_GameHUD_C_AddInviteHomeWidget::NewVar' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddInviteHomeWidget, CallFunc_AddInvideToHomeOffer_ReturnValue) == 0x000020, "Member 'BP_GameHUD_C_AddInviteHomeWidget::CallFunc_AddInvideToHomeOffer_ReturnValue' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddInviteWidget
// 0x0028 (0x0028 - 0x0000)
struct BP_GameHUD_C_AddInviteWidget final
{
public:
	int32                                         InvitedSquadIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerNameInviter;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UWBP_Offer_C*                           CallFunc_AddInvite_InviteWidget;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddInviteWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddInviteWidget");
static_assert(sizeof(BP_GameHUD_C_AddInviteWidget) == 0x000028, "Wrong size on BP_GameHUD_C_AddInviteWidget");
static_assert(offsetof(BP_GameHUD_C_AddInviteWidget, InvitedSquadIndex) == 0x000000, "Member 'BP_GameHUD_C_AddInviteWidget::InvitedSquadIndex' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddInviteWidget, PlayerNameInviter) == 0x000008, "Member 'BP_GameHUD_C_AddInviteWidget::PlayerNameInviter' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddInviteWidget, CallFunc_AddInvite_InviteWidget) == 0x000018, "Member 'BP_GameHUD_C_AddInviteWidget::CallFunc_AddInvite_InviteWidget' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddInviteWidget, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_GameHUD_C_AddInviteWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddLoanWidget
// 0x0018 (0x0018 - 0x0000)
struct BP_GameHUD_C_AddLoanWidget final
{
public:
	class UW_Loan_C*                              CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddLoanWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddLoanWidget");
static_assert(sizeof(BP_GameHUD_C_AddLoanWidget) == 0x000018, "Wrong size on BP_GameHUD_C_AddLoanWidget");
static_assert(offsetof(BP_GameHUD_C_AddLoanWidget, CallFunc_Create_ReturnValue) == 0x000000, "Member 'BP_GameHUD_C_AddLoanWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddLoanWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_GameHUD_C_AddLoanWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddMark
// 0x0048 (0x0048 - 0x0000)
struct BP_GameHUD_C_AddMark final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Quest;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowByLocation;                                    // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarkType                                     Type;                                              // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Mark_C*                              WMark;                                             // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Mark_C*                              CallFunc_AddMark_WMark;                            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddMark) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddMark");
static_assert(sizeof(BP_GameHUD_C_AddMark) == 0x000048, "Wrong size on BP_GameHUD_C_AddMark");
static_assert(offsetof(BP_GameHUD_C_AddMark, Key) == 0x000000, "Member 'BP_GameHUD_C_AddMark::Key' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddMark, ActorRef) == 0x000008, "Member 'BP_GameHUD_C_AddMark::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddMark, Quest) == 0x000010, "Member 'BP_GameHUD_C_AddMark::Quest' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddMark, ShowByLocation) == 0x000011, "Member 'BP_GameHUD_C_AddMark::ShowByLocation' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddMark, Location) == 0x000018, "Member 'BP_GameHUD_C_AddMark::Location' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddMark, Type) == 0x000030, "Member 'BP_GameHUD_C_AddMark::Type' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddMark, Success) == 0x000031, "Member 'BP_GameHUD_C_AddMark::Success' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddMark, WMark) == 0x000038, "Member 'BP_GameHUD_C_AddMark::WMark' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddMark, CallFunc_AddMark_WMark) == 0x000040, "Member 'BP_GameHUD_C_AddMark::CallFunc_AddMark_WMark' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddNewNotification
// 0x0040 (0x0040 - 0x0000)
struct BP_GameHUD_C_AddNewNotification final
{
public:
	E_NotificationType                            NotificationType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Body;                                              // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Success;                                           // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddNewNotification) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddNewNotification");
static_assert(sizeof(BP_GameHUD_C_AddNewNotification) == 0x000040, "Wrong size on BP_GameHUD_C_AddNewNotification");
static_assert(offsetof(BP_GameHUD_C_AddNewNotification, NotificationType) == 0x000000, "Member 'BP_GameHUD_C_AddNewNotification::NotificationType' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddNewNotification, Title) == 0x000008, "Member 'BP_GameHUD_C_AddNewNotification::Title' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddNewNotification, Body) == 0x000020, "Member 'BP_GameHUD_C_AddNewNotification::Body' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddNewNotification, Success) == 0x000038, "Member 'BP_GameHUD_C_AddNewNotification::Success' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddSquadMessage
// 0x0018 (0x0018 - 0x0000)
struct BP_GameHUD_C_AddSquadMessage final
{
public:
	int32                                         MessageIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddSquadMessage) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddSquadMessage");
static_assert(sizeof(BP_GameHUD_C_AddSquadMessage) == 0x000018, "Wrong size on BP_GameHUD_C_AddSquadMessage");
static_assert(offsetof(BP_GameHUD_C_AddSquadMessage, MessageIndex) == 0x000000, "Member 'BP_GameHUD_C_AddSquadMessage::MessageIndex' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddSquadMessage, PlayerName) == 0x000008, "Member 'BP_GameHUD_C_AddSquadMessage::PlayerName' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddStaticInteractWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_GameHUD_C_AddStaticInteractWidget final
{
public:
	E_StaticInteractType                          TypeInteract;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_StaticInteract_C*                    CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddStaticInteractWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddStaticInteractWidget");
static_assert(sizeof(BP_GameHUD_C_AddStaticInteractWidget) == 0x000020, "Wrong size on BP_GameHUD_C_AddStaticInteractWidget");
static_assert(offsetof(BP_GameHUD_C_AddStaticInteractWidget, TypeInteract) == 0x000000, "Member 'BP_GameHUD_C_AddStaticInteractWidget::TypeInteract' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddStaticInteractWidget, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_GameHUD_C_AddStaticInteractWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddStaticInteractWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_GameHUD_C_AddStaticInteractWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddTradeOfferWidget
// 0x0028 (0x0028 - 0x0000)
struct BP_GameHUD_C_AddTradeOfferWidget final
{
public:
	class FString                                 PlayerNameOfferer;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      TradeOfferer;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Offer_C*                           CallFunc_AddTradeOffer_TradeOfferWidget;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddTradeOfferWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddTradeOfferWidget");
static_assert(sizeof(BP_GameHUD_C_AddTradeOfferWidget) == 0x000028, "Wrong size on BP_GameHUD_C_AddTradeOfferWidget");
static_assert(offsetof(BP_GameHUD_C_AddTradeOfferWidget, PlayerNameOfferer) == 0x000000, "Member 'BP_GameHUD_C_AddTradeOfferWidget::PlayerNameOfferer' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddTradeOfferWidget, TradeOfferer) == 0x000010, "Member 'BP_GameHUD_C_AddTradeOfferWidget::TradeOfferer' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddTradeOfferWidget, CallFunc_AddTradeOffer_TradeOfferWidget) == 0x000018, "Member 'BP_GameHUD_C_AddTradeOfferWidget::CallFunc_AddTradeOffer_TradeOfferWidget' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddTradeOfferWidget, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_GameHUD_C_AddTradeOfferWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddTranzitZoneW
// 0x0028 (0x0028 - 0x0000)
struct BP_GameHUD_C_AddTranzitZoneW final
{
public:
	class ABP_TeleporterDoorMaster_C*             DoorRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETranzitZone_Enum                             SetTranzit;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_TranzitZone_C*                     CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddTranzitZoneW) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddTranzitZoneW");
static_assert(sizeof(BP_GameHUD_C_AddTranzitZoneW) == 0x000028, "Wrong size on BP_GameHUD_C_AddTranzitZoneW");
static_assert(offsetof(BP_GameHUD_C_AddTranzitZoneW, DoorRef) == 0x000000, "Member 'BP_GameHUD_C_AddTranzitZoneW::DoorRef' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddTranzitZoneW, SetTranzit) == 0x000008, "Member 'BP_GameHUD_C_AddTranzitZoneW::SetTranzit' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddTranzitZoneW, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_GameHUD_C_AddTranzitZoneW::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddTranzitZoneW, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_GameHUD_C_AddTranzitZoneW::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.AddWorkRPMessage
// 0x0070 (0x0070 - 0x0000)
struct BP_GameHUD_C_AddWorkRPMessage final
{
public:
	double                                        TotalTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   WorkRPName;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   WorkRPDescription;                                 // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   WorkRP_Count_current;                              // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   WorkRP_Count_total;                                // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UW_WorkRPNotification_C*                CallFunc_AddWorkRPMessage_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_AddWorkRPMessage) == 0x000008, "Wrong alignment on BP_GameHUD_C_AddWorkRPMessage");
static_assert(sizeof(BP_GameHUD_C_AddWorkRPMessage) == 0x000070, "Wrong size on BP_GameHUD_C_AddWorkRPMessage");
static_assert(offsetof(BP_GameHUD_C_AddWorkRPMessage, TotalTime) == 0x000000, "Member 'BP_GameHUD_C_AddWorkRPMessage::TotalTime' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddWorkRPMessage, WorkRPName) == 0x000008, "Member 'BP_GameHUD_C_AddWorkRPMessage::WorkRPName' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddWorkRPMessage, WorkRPDescription) == 0x000020, "Member 'BP_GameHUD_C_AddWorkRPMessage::WorkRPDescription' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddWorkRPMessage, WorkRP_Count_current) == 0x000038, "Member 'BP_GameHUD_C_AddWorkRPMessage::WorkRP_Count_current' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddWorkRPMessage, WorkRP_Count_total) == 0x000050, "Member 'BP_GameHUD_C_AddWorkRPMessage::WorkRP_Count_total' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_AddWorkRPMessage, CallFunc_AddWorkRPMessage_ReturnValue) == 0x000068, "Member 'BP_GameHUD_C_AddWorkRPMessage::CallFunc_AddWorkRPMessage_ReturnValue' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.BannerNewLocation
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_BannerNewLocation final
{
public:
	E_NewLocation                                 Location;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_BannerNewLocation) == 0x000001, "Wrong alignment on BP_GameHUD_C_BannerNewLocation");
static_assert(sizeof(BP_GameHUD_C_BannerNewLocation) == 0x000001, "Wrong size on BP_GameHUD_C_BannerNewLocation");
static_assert(offsetof(BP_GameHUD_C_BannerNewLocation, Location) == 0x000000, "Member 'BP_GameHUD_C_BannerNewLocation::Location' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.CanEnterVehicle
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_CanEnterVehicle final
{
public:
	bool                                          bCan;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SeatIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_CanEnterVehicle) == 0x000004, "Wrong alignment on BP_GameHUD_C_CanEnterVehicle");
static_assert(sizeof(BP_GameHUD_C_CanEnterVehicle) == 0x000008, "Wrong size on BP_GameHUD_C_CanEnterVehicle");
static_assert(offsetof(BP_GameHUD_C_CanEnterVehicle, bCan) == 0x000000, "Member 'BP_GameHUD_C_CanEnterVehicle::bCan' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CanEnterVehicle, SeatIndex) == 0x000004, "Member 'BP_GameHUD_C_CanEnterVehicle::SeatIndex' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.CheckPlayerBusy
// 0x0030 (0x0030 - 0x0000)
struct BP_GameHUD_C_CheckPlayerBusy final
{
public:
	class APS_TDB_C*                              PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Out;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   CallFunc_GetCharRef_OutputCharRef;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStashWidgetOpen_IsStashOpen;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_CheckPlayerBusy) == 0x000008, "Wrong alignment on BP_GameHUD_C_CheckPlayerBusy");
static_assert(sizeof(BP_GameHUD_C_CheckPlayerBusy) == 0x000030, "Wrong size on BP_GameHUD_C_CheckPlayerBusy");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, PlayerState) == 0x000000, "Member 'BP_GameHUD_C_CheckPlayerBusy::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, Out) == 0x000008, "Member 'BP_GameHUD_C_CheckPlayerBusy::Out' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, CallFunc_GetCharRef_OutputCharRef) == 0x000010, "Member 'BP_GameHUD_C_CheckPlayerBusy::CallFunc_GetCharRef_OutputCharRef' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000018, "Member 'BP_GameHUD_C_CheckPlayerBusy::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GameHUD_C_CheckPlayerBusy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, CallFunc_IsStashWidgetOpen_IsStashOpen) == 0x000029, "Member 'BP_GameHUD_C_CheckPlayerBusy::CallFunc_IsStashWidgetOpen_IsStashOpen' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'BP_GameHUD_C_CheckPlayerBusy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, CallFunc_BooleanOR_ReturnValue_1) == 0x00002B, "Member 'BP_GameHUD_C_CheckPlayerBusy::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, CallFunc_BooleanOR_ReturnValue_2) == 0x00002C, "Member 'BP_GameHUD_C_CheckPlayerBusy::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, CallFunc_BooleanOR_ReturnValue_3) == 0x00002D, "Member 'BP_GameHUD_C_CheckPlayerBusy::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, CallFunc_BooleanOR_ReturnValue_4) == 0x00002E, "Member 'BP_GameHUD_C_CheckPlayerBusy::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CheckPlayerBusy, CallFunc_BooleanOR_ReturnValue_5) == 0x00002F, "Member 'BP_GameHUD_C_CheckPlayerBusy::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.CreateLeaveCheck
// 0x0010 (0x0010 - 0x0000)
struct BP_GameHUD_C_CreateLeaveCheck final
{
public:
	TArray<class APS_TDB_C*>                      Members;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_GameHUD_C_CreateLeaveCheck) == 0x000008, "Wrong alignment on BP_GameHUD_C_CreateLeaveCheck");
static_assert(sizeof(BP_GameHUD_C_CreateLeaveCheck) == 0x000010, "Wrong size on BP_GameHUD_C_CreateLeaveCheck");
static_assert(offsetof(BP_GameHUD_C_CreateLeaveCheck, Members) == 0x000000, "Member 'BP_GameHUD_C_CreateLeaveCheck::Members' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.CreateWidgets
// 0x0118 (0x0118 - 0x0000)
struct BP_GameHUD_C_CreateWidgets final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_KilledByNotification_C*            CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SimpleFadeIn_C*                    CallFunc_Create_ReturnValue_1;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Surrender_C*                       CallFunc_Create_ReturnValue_2;                     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_NewDeathScreen_C*                  CallFunc_Create_ReturnValue_3;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_QuestCompleate_C*                  CallFunc_Create_ReturnValue_4;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_New_Location_C*                    CallFunc_Create_ReturnValue_5;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_TeleportTimer_C*                     CallFunc_Create_ReturnValue_6;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_CarGame_C*                         CallFunc_Create_ReturnValue_7;                     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_VoiceIndication_C*                   CallFunc_Create_ReturnValue_8;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_PauseMenu_C*                         CallFunc_Create_ReturnValue_9;                     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_CapacityMessage_C*                   CallFunc_Create_ReturnValue_10;                    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ChooseRegion_C*                      CallFunc_Create_ReturnValue_11;                    // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ChoosePoint_C*                       CallFunc_Create_ReturnValue_12;                    // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_AlarmSystem_C*                     CallFunc_Create_ReturnValue_13;                    // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ItemInfo_C*                          CallFunc_Create_ReturnValue_14;                    // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_CampTimer_C*                         CallFunc_Create_ReturnValue_15;                    // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_CampTent_C*                          CallFunc_Create_ReturnValue_16;                    // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_CampCooking_C*                       CallFunc_Create_ReturnValue_17;                    // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_CraftWindow_C*                      CallFunc_Create_ReturnValue_18;                    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_TabsWindow_C*                        CallFunc_Create_ReturnValue_19;                    // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ScreenMarkers_C*                     CallFunc_Create_ReturnValue_20;                    // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPInGameInventory_C*                   CallFunc_Create_ReturnValue_21;                    // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BlackScreen_C*                       CallFunc_Create_ReturnValue_22;                    // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_CarUpgradeMenu_C*                    CallFunc_Create_ReturnValue_23;                    // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_NewLocationBanner_C*               CallFunc_Create_ReturnValue_24;                    // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_BaseBuilding_C*                    CallFunc_Create_ReturnValue_25;                    // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PointerHint_C*                     CallFunc_Create_ReturnValue_26;                    // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_CutsceneTips_C*                    CallFunc_Create_ReturnValue_27;                    // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_TutorialItemReward_C*              CallFunc_Create_ReturnValue_28;                    // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SlidesTutorial_C*                  CallFunc_Create_ReturnValue_29;                    // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_BinocularUI_C*                     CallFunc_Create_ReturnValue_30;                    // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_CreateWidgets) == 0x000008, "Wrong alignment on BP_GameHUD_C_CreateWidgets");
static_assert(sizeof(BP_GameHUD_C_CreateWidgets) == 0x000118, "Wrong size on BP_GameHUD_C_CreateWidgets");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_GameHUD_C_CreateWidgets::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_GameHUD_C_CreateWidgets::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue) == 0x000020, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_1) == 0x000028, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_2) == 0x000030, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_3) == 0x000038, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_4) == 0x000040, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_5) == 0x000048, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_6) == 0x000050, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_7) == 0x000058, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_8) == 0x000060, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_9) == 0x000068, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_10) == 0x000070, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_11) == 0x000078, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_12) == 0x000080, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_13) == 0x000088, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_14) == 0x000090, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_15) == 0x000098, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_16) == 0x0000A0, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_17) == 0x0000A8, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_18) == 0x0000B0, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_19) == 0x0000B8, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_20) == 0x0000C0, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_21) == 0x0000C8, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_22) == 0x0000D0, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_23) == 0x0000D8, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_24) == 0x0000E0, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_25) == 0x0000E8, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_26) == 0x0000F0, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_27) == 0x0000F8, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_28) == 0x000100, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_29) == 0x000108, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_CreateWidgets, CallFunc_Create_ReturnValue_30) == 0x000110, "Member 'BP_GameHUD_C_CreateWidgets::CallFunc_Create_ReturnValue_30' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.DeclineLastOffer
// 0x0028 (0x0028 - 0x0000)
struct BP_GameHUD_C_DeclineLastOffer final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLeaveCheckDisplayed_LeaveQueueDisplayed; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Offer_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_DeclineLastOffer) == 0x000008, "Wrong alignment on BP_GameHUD_C_DeclineLastOffer");
static_assert(sizeof(BP_GameHUD_C_DeclineLastOffer) == 0x000028, "Wrong size on BP_GameHUD_C_DeclineLastOffer");
static_assert(offsetof(BP_GameHUD_C_DeclineLastOffer, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_GameHUD_C_DeclineLastOffer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_DeclineLastOffer, CallFunc_GetLeaveCheckDisplayed_LeaveQueueDisplayed) == 0x000008, "Member 'BP_GameHUD_C_DeclineLastOffer::CallFunc_GetLeaveCheckDisplayed_LeaveQueueDisplayed' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_DeclineLastOffer, K2Node_DynamicCast_AsPS_TDB) == 0x000010, "Member 'BP_GameHUD_C_DeclineLastOffer::K2Node_DynamicCast_AsPS_TDB' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_DeclineLastOffer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameHUD_C_DeclineLastOffer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_DeclineLastOffer, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'BP_GameHUD_C_DeclineLastOffer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_DeclineLastOffer, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_GameHUD_C_DeclineLastOffer::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ExecuteUbergraph_BP_GameHUD
// 0x0600 (0x0600 - 0x0000)
struct BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TutorHint_C*                         CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Cold_Actor;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_RagActor;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EWE_UIMode NewMode)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_ItemName;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Chat_C*                            CallFunc_Create_ReturnValue_1;                     // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Squad_C*                           CallFunc_Create_ReturnValue_2;                     // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_Create_ReturnValue_3;                     // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_PlayerPawn;                     // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHide;                          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Hide;                           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player;                         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_In_Is_Open;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InIsOpen;                             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_SizeX;                                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SizeY;                                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_IngameNotifications_C*             CallFunc_Create_ReturnValue_4;                     // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   K2Node_Event_RegionName;                           // 0x0150(0x0018)()
	class FText                                   K2Node_Event_LocationName;                         // 0x0168(0x0018)()
	bool                                          K2Node_Event_IsCity;                               // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventInstanceIsValid_ReturnValue;         // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EWE_UIMode                                    K2Node_Event_NewMode;                              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWE_UIMode                                    CallFunc_GetUIMode_ReturnedMode;                   // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NewLocation                                 Temp_byte_Variable;                                // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B3[0x5];                                      // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_NewLocation                                 Temp_byte_Variable_1;                              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NewLocation                                 Temp_byte_Variable_2;                              // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_OnHide_Time;                              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_2;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWBP_Workbench_C*                       K2Node_Event_WorkbenchWidgetRef;                   // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable_1;                             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Check;                                // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable;                               // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB[0x5];                                      // 0x01EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_NewLocation                                 Temp_byte_Variable_3;                              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NewLocation                                 Temp_byte_Variable_4;                              // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B[0x1];                                      // 0x020B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_MessageIndex;                   // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_PlayerName;                     // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22F[0x1];                                      // 0x022F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class APS_TDB_C*>                      K2Node_CustomEvent_Members;                        // 0x0258(0x0010)(ConstParm, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APS_TDB_C*                              CallFunc_Array_Get_Item_1;                         // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APS_TDB_C*                              K2Node_DynamicCast_AsPS_TDB;                       // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlayerBusy_Out;                      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HouseType                                   Temp_byte_Variable_5;                              // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCutsceneComponent_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show_4;                               // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_KillerName;                           // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Pressed;                              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Revive;                               // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_PlayerName;                           // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCheck;                               // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x02E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UPaperSprite>            K2Node_Event_WeaponIcon;                           // 0x0310(0x0030)(HasGetValueTypeHash)
	class FString                                 K2Node_Event_Nickname;                             // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsValid;                              // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Create_ReturnValue_5;                     // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show_3;                               // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_Object;                               // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_ActorType                                   K2Node_Event_ObjectType;                           // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373[0x5];                                      // 0x0373(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TeleporterDoorMaster_C*             K2Node_DynamicCast_AsBP_Teleporter_Door_Master;    // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCan;                                 // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A[0x2];                                      // 0x038A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_SeatIndex;                            // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x2];                                      // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0394(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enabled;                              // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x039E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F[0x1];                                      // 0x039F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<int32>                                   K2Node_MakeSet_Set;                                // 0x03A0(0x0050)()
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show_2;                               // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EventInstanceIsValid_ReturnValue_1;       // 0x0402(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0403(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetInputAction_Input_Action;              // 0x0404(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x040D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E[0x2];                                      // 0x040E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             K2Node_MakeSet_Set_1;                              // 0x0410(0x0050)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0460(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event__Stage;                               // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWBP_RUSure_C*                          CallFunc_Create_ReturnValue_6;                     // 0x0480(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x048A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show_1;                               // 0x048B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x048D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E[0x2];                                      // 0x048E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC_1;                    // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsBeginner_IsBeginner;                 // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3[0x5];                                      // 0x04A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_Interactable_C>     K2Node_DynamicCast_AsI_Interactable;               // 0x04A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x04BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BB[0x1];                                      // 0x04BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x04BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show;                                 // 0x04CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x04CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x04CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x04DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_3;                // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWBP_FurnitureShopButtons_C*            K2Node_Event_FurnitureCatalog;                     // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGUIHidden_Hidden;                      // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0504(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0515(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_516[0x2];                                      // 0x0516(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDoorActionIndex_ExitDoorActionIndex;   // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x051D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51E[0x2];                                      // 0x051E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0520(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0534(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0545(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0546(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_547[0x1];                                      // 0x0547(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_NewLocation                                 K2Node_Event_Location;                             // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NewLocation                                 K2Node_Select_Default_3;                           // 0x0562(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0563(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_NavigationHint_C*                    CallFunc_Create_ReturnValue_7;                     // 0x0568(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x3];                                      // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x3];                                      // 0x0579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_VehicleInteract;                      // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0582(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_583[0x1];                                      // 0x0583(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0584(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_595[0x3];                                      // 0x0595(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AUniversalMarkerSystem_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0598(0x0010)(ReferenceParm)
	class AUniversalMarkerSystem_C*               CallFunc_Array_Get_Item_3;                         // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B5[0x3];                                      // 0x05B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_GameLogo_C*                          CallFunc_Create_ReturnValue_8;                     // 0x05B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AUniversalMarkerSystem_C*>       CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x05C0(0x0010)(ReferenceParm)
	class AUniversalMarkerSystem_C*               CallFunc_Array_Get_Item_4;                         // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x05DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x05DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DE[0x2];                                      // 0x05DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Intro_C*                             CallFunc_Create_ReturnValue_9;                     // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_4;                           // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWE_UIMode                                    K2Node_CustomEvent_NewMode;                        // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x05EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x05EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ASurvivalPlayer_C* PlayerPawn)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x05EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD) == 0x000008, "Wrong alignment on BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD");
static_assert(sizeof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD) == 0x000600, "Wrong size on BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, EntryPoint) == 0x000000, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000018, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000028, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Cold_Actor) == 0x000030, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Cold_Actor' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_RagActor) == 0x000038, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_RagActor' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CustomEvent_ItemName) == 0x000068, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CustomEvent_ItemName' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetController_ReturnValue) == 0x000078, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_AsPlayer_Controller) == 0x000080, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetController_ReturnValue_1) == 0x000090, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Create_ReturnValue_1) == 0x000098, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x0000A0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Create_ReturnValue_2) == 0x0000B0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_2) == 0x0000B8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_3) == 0x0000B9, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Create_ReturnValue_3) == 0x0000C0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CustomEvent_PlayerPawn) == 0x0000C8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CustomEvent_PlayerPawn' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CustomEvent_bHide) == 0x0000D8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CustomEvent_bHide' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CustomEvent_Hide) == 0x0000D9, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CustomEvent_Hide' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CustomEvent_Player) == 0x0000E0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_In_Is_Open) == 0x0000E8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_In_Is_Open' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_InIsOpen) == 0x0000E9, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_InIsOpen' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_SizeX) == 0x0000EC, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_SizeX' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_SizeY) == 0x0000F0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_SizeY' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Create_ReturnValue_4) == 0x0000F8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Array_Index_Variable_2) == 0x000100, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CreateDelegate_OutputDelegate_2) == 0x000104, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Loop_Counter_Variable_1) == 0x000114, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Loop_Counter_Variable_2) == 0x000118, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Add_IntInt_ReturnValue_1) == 0x00011C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Add_IntInt_ReturnValue_2) == 0x000120, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Loop_Counter_Variable_3) == 0x000124, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Add_IntInt_ReturnValue_3) == 0x000128, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_4) == 0x00012C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Array_Index_Variable_3) == 0x000130, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_5) == 0x000134, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Add_IntInt_ReturnValue_4) == 0x000138, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_bool_Variable) == 0x00013C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000140, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_PlayEvent2D_ReturnValue) == 0x000148, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_RegionName) == 0x000150, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_RegionName' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_LocationName) == 0x000168, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_LocationName' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_IsCity) == 0x000180, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_IsCity' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000188, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_EventInstanceIsValid_ReturnValue) == 0x000190, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_EventInstanceIsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000198, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_NewMode) == 0x0001A0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_NewMode' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_AsSurv_PC) == 0x0001A8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_bSuccess_2) == 0x0001B0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetUIMode_ReturnedMode) == 0x0001B1, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetUIMode_ReturnedMode' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_byte_Variable) == 0x0001B2, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001B8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_byte_Variable_1) == 0x0001C8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_byte_Variable_2) == 0x0001C9, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_OnHide_Time) == 0x0001D0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_OnHide_Time' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_PlayEvent2D_ReturnValue_2) == 0x0001D8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_PlayEvent2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_WorkbenchWidgetRef) == 0x0001E0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_WorkbenchWidgetRef' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Enable_1) == 0x0001E8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Enable_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Check) == 0x0001E9, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Check' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Enable) == 0x0001EA, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0001F0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_byte_Variable_3) == 0x0001F8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_AsSurvival_Player) == 0x000200, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_bSuccess_3) == 0x000208, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_byte_Variable_4) == 0x000209, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_6) == 0x00020A, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CustomEvent_MessageIndex) == 0x00020C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CustomEvent_MessageIndex' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CustomEvent_PlayerName) == 0x000210, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Get_Item) == 0x000220, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Length_ReturnValue) == 0x000228, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Less_IntInt_ReturnValue) == 0x00022C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00022D, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_BooleanAND_ReturnValue) == 0x00022E, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Concat_StrStr_ReturnValue) == 0x000230, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Select_Default) == 0x000240, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000248, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CustomEvent_Members) == 0x000258, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CustomEvent_Members' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetPlayerController_ReturnValue) == 0x000268, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Get_Item_1) == 0x000270, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_AsPS_TDB) == 0x000278, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_AsPS_TDB' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_bSuccess_4) == 0x000280, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Length_ReturnValue_1) == 0x000284, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_CheckPlayerBusy_Out) == 0x000288, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_CheckPlayerBusy_Out' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Less_IntInt_ReturnValue_1) == 0x000289, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_byte_Variable_5) == 0x00028A, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_7) == 0x00028B, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetComponentByClass_ReturnValue) == 0x000290, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_8) == 0x000298, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Show_4) == 0x000299, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Show_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_KillerName) == 0x0002A0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_KillerName' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Pressed) == 0x0002B0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Pressed' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Revive) == 0x0002B1, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Revive' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_PlayerName) == 0x0002B8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_bCheck) == 0x0002C8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_bCheck' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x0002D0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_AsSurvival_Player_1) == 0x0002D8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_bSuccess_5) == 0x0002E0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_9) == 0x0002E1, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_10) == 0x0002E2, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_11) == 0x0002E3, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Length_ReturnValue_2) == 0x0002E4, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002E8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0002F0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000300, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_WeaponIcon) == 0x000310, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_WeaponIcon' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Nickname) == 0x000340, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Nickname' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_IsValid) == 0x000350, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_IsValid' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Create_ReturnValue_5) == 0x000358, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Create_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_bool_Variable_1) == 0x000360, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Show_3) == 0x000361, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Show_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Object) == 0x000368, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Object' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_ObjectType) == 0x000370, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_ObjectType' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_bool_Variable_2) == 0x000371, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_SwitchEnum_CmpSuccess) == 0x000372, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_AsBP_Teleporter_Door_Master) == 0x000378, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_AsBP_Teleporter_Door_Master' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_bSuccess_6) == 0x000380, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Variable) == 0x000384, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_byte_Variable_6) == 0x000388, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_bCan) == 0x000389, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_bCan' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_SeatIndex) == 0x00038C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_SeatIndex' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_byte_Variable_7) == 0x000390, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_12) == 0x000391, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_name_Variable) == 0x000394, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_bool_Variable_3) == 0x00039C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Enabled) == 0x00039D, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Select_Default_1) == 0x00039E, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_MakeSet_Set) == 0x0003A0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_MakeSet_Set' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0003F0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Array_Index_Variable_4) == 0x0003F4, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Get_Item_2) == 0x0003F8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Show_2) == 0x000400, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Show_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_NotEqual_NameName_ReturnValue) == 0x000401, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_EventInstanceIsValid_ReturnValue_1) == 0x000402, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_EventInstanceIsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_13) == 0x000403, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetInputAction_Input_Action) == 0x000404, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetInputAction_Input_Action' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00040C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_14) == 0x00040D, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_MakeSet_Set_1) == 0x000410, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_MakeSet_Set_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CreateDelegate_OutputDelegate_3) == 0x000460, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event__Stage) == 0x000470, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event__Stage' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Create_ReturnValue_6) == 0x000480, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Create_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000488, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000489, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Contains_ReturnValue) == 0x00048A, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Show_1) == 0x00048B, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Show_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_BooleanOR_ReturnValue) == 0x00048C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_BooleanOR_ReturnValue_1) == 0x00048D, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetPlayerController_ReturnValue_1) == 0x000490, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_AsSurv_PC_1) == 0x000498, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_AsSurv_PC_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_bSuccess_7) == 0x0004A0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_15) == 0x0004A1, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetIsBeginner_IsBeginner) == 0x0004A2, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetIsBeginner_IsBeginner' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_AsI_Interactable) == 0x0004A8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_AsI_Interactable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_DynamicCast_bSuccess_8) == 0x0004B8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_16) == 0x0004B9, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Contains_ReturnValue) == 0x0004BA, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CreateDelegate_OutputDelegate_4) == 0x0004BC, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_17) == 0x0004CC, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Show) == 0x0004CD, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Show' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_18) == 0x0004CE, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_19) == 0x0004CF, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Map_Find_Value) == 0x0004D0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Map_Find_ReturnValue) == 0x0004D8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CreateDelegate_OutputDelegate_5) == 0x0004DC, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_PlayEvent2D_ReturnValue_3) == 0x0004F0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_PlayEvent2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_FurnitureCatalog) == 0x0004F8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_FurnitureCatalog' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetGUIHidden_Hidden) == 0x000500, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetGUIHidden_Hidden' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_MakeStruct_Margin) == 0x000504, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_20) == 0x000514, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_21) == 0x000515, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetDoorActionIndex_ExitDoorActionIndex) == 0x000518, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetDoorActionIndex_ExitDoorActionIndex' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Select_Default_2) == 0x00051C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_22) == 0x00051D, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CreateDelegate_OutputDelegate_6) == 0x000520, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_23) == 0x000530, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CreateDelegate_OutputDelegate_7) == 0x000534, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_24) == 0x000544, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_25) == 0x000545, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_26) == 0x000546, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetPlayerController_ReturnValue_2) == 0x000548, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_27) == 0x000550, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_K2_GetPawn_ReturnValue) == 0x000558, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_Location) == 0x000560, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_28) == 0x000561, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Select_Default_3) == 0x000562, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_29) == 0x000563, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Create_ReturnValue_7) == 0x000568, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Create_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_bool_Has_Been_Initd_Variable) == 0x000570, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_int_Loop_Counter_Variable_4) == 0x000574, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Less_IntInt_ReturnValue_2) == 0x000578, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Add_IntInt_ReturnValue_5) == 0x00057C, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Not_PreBool_ReturnValue) == 0x000580, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Event_VehicleInteract) == 0x000581, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Event_VehicleInteract' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_bool_Variable_4) == 0x000582, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CreateDelegate_OutputDelegate_8) == 0x000584, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_bool_IsClosed_Variable) == 0x000594, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetAllActorsOfClass_OutActors) == 0x000598, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Get_Item_3) == 0x0005A8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Length_ReturnValue_3) == 0x0005B0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Less_IntInt_ReturnValue_3) == 0x0005B4, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Create_ReturnValue_8) == 0x0005B8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Create_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0005C0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Get_Item_4) == 0x0005D0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Array_Length_ReturnValue_4) == 0x0005D8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Less_IntInt_ReturnValue_4) == 0x0005DC, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, Temp_bool_Variable_5) == 0x0005DD, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_Create_ReturnValue_9) == 0x0005E0, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_Create_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_Select_Default_4) == 0x0005E8, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CustomEvent_NewMode) == 0x0005E9, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CustomEvent_NewMode' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_SwitchEnum_CmpSuccess_1) == 0x0005EA, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, CallFunc_IsValid_ReturnValue_30) == 0x0005EB, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD, K2Node_CreateDelegate_OutputDelegate_9) == 0x0005EC, "Member 'BP_GameHUD_C_ExecuteUbergraph_BP_GameHUD::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.FrameGenerationToggle
// 0x0048 (0x0048 - 0x0000)
struct BP_GameHUD_C_FrameGenerationToggle final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_FrameGenerationToggle) == 0x000008, "Wrong alignment on BP_GameHUD_C_FrameGenerationToggle");
static_assert(sizeof(BP_GameHUD_C_FrameGenerationToggle) == 0x000048, "Wrong size on BP_GameHUD_C_FrameGenerationToggle");
static_assert(offsetof(BP_GameHUD_C_FrameGenerationToggle, Enable) == 0x000000, "Member 'BP_GameHUD_C_FrameGenerationToggle::Enable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_FrameGenerationToggle, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_GameHUD_C_FrameGenerationToggle::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_FrameGenerationToggle, K2Node_DynamicCast_AsGI_Survival) == 0x000010, "Member 'BP_GameHUD_C_FrameGenerationToggle::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_FrameGenerationToggle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameHUD_C_FrameGenerationToggle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_FrameGenerationToggle, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_GameHUD_C_FrameGenerationToggle::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_FrameGenerationToggle, CallFunc_SelectString_ReturnValue) == 0x000028, "Member 'BP_GameHUD_C_FrameGenerationToggle::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_FrameGenerationToggle, CallFunc_SelectString_ReturnValue_1) == 0x000038, "Member 'BP_GameHUD_C_FrameGenerationToggle::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetDeathScreen (Widget)
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_GetDeathScreen__Widget_ final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetDeathScreen__Widget_) == 0x000008, "Wrong alignment on BP_GameHUD_C_GetDeathScreen__Widget_");
static_assert(sizeof(BP_GameHUD_C_GetDeathScreen__Widget_) == 0x000008, "Wrong size on BP_GameHUD_C_GetDeathScreen__Widget_");
static_assert(offsetof(BP_GameHUD_C_GetDeathScreen__Widget_, Widget) == 0x000000, "Member 'BP_GameHUD_C_GetDeathScreen__Widget_::Widget' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetDefaultUIMode
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_GetDefaultUIMode final
{
public:
	EWE_UIMode                                    ReturnedMode;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetDefaultUIMode) == 0x000001, "Wrong alignment on BP_GameHUD_C_GetDefaultUIMode");
static_assert(sizeof(BP_GameHUD_C_GetDefaultUIMode) == 0x000001, "Wrong size on BP_GameHUD_C_GetDefaultUIMode");
static_assert(offsetof(BP_GameHUD_C_GetDefaultUIMode, ReturnedMode) == 0x000000, "Member 'BP_GameHUD_C_GetDefaultUIMode::ReturnedMode' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetDragInventoryItemsAllowed
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_GetDragInventoryItemsAllowed final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetDragInventoryItemsAllowed) == 0x000001, "Wrong alignment on BP_GameHUD_C_GetDragInventoryItemsAllowed");
static_assert(sizeof(BP_GameHUD_C_GetDragInventoryItemsAllowed) == 0x000001, "Wrong size on BP_GameHUD_C_GetDragInventoryItemsAllowed");
static_assert(offsetof(BP_GameHUD_C_GetDragInventoryItemsAllowed, Enabled) == 0x000000, "Member 'BP_GameHUD_C_GetDragInventoryItemsAllowed::Enabled' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetFurnitureCatalogRef
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_GetFurnitureCatalogRef final
{
public:
	class UWBP_FurnitureShopButtons_C*            FurnitureShopButtons;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetFurnitureCatalogRef) == 0x000008, "Wrong alignment on BP_GameHUD_C_GetFurnitureCatalogRef");
static_assert(sizeof(BP_GameHUD_C_GetFurnitureCatalogRef) == 0x000008, "Wrong size on BP_GameHUD_C_GetFurnitureCatalogRef");
static_assert(offsetof(BP_GameHUD_C_GetFurnitureCatalogRef, FurnitureShopButtons) == 0x000000, "Member 'BP_GameHUD_C_GetFurnitureCatalogRef::FurnitureShopButtons' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetGUI
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_GetGUI final
{
public:
	class UUIW_PlayerMain_C*                      Param_GUI;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetGUI) == 0x000008, "Wrong alignment on BP_GameHUD_C_GetGUI");
static_assert(sizeof(BP_GameHUD_C_GetGUI) == 0x000008, "Wrong size on BP_GameHUD_C_GetGUI");
static_assert(offsetof(BP_GameHUD_C_GetGUI, Param_GUI) == 0x000000, "Member 'BP_GameHUD_C_GetGUI::Param_GUI' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetGUIHidden
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_GetGUIHidden final
{
public:
	bool                                          Hidden;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetGUIHidden) == 0x000001, "Wrong alignment on BP_GameHUD_C_GetGUIHidden");
static_assert(sizeof(BP_GameHUD_C_GetGUIHidden) == 0x000001, "Wrong size on BP_GameHUD_C_GetGUIHidden");
static_assert(offsetof(BP_GameHUD_C_GetGUIHidden, Hidden) == 0x000000, "Member 'BP_GameHUD_C_GetGUIHidden::Hidden' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetInventoryTutorial
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_GetInventoryTutorial final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetInventoryTutorial) == 0x000001, "Wrong alignment on BP_GameHUD_C_GetInventoryTutorial");
static_assert(sizeof(BP_GameHUD_C_GetInventoryTutorial) == 0x000001, "Wrong size on BP_GameHUD_C_GetInventoryTutorial");
static_assert(offsetof(BP_GameHUD_C_GetInventoryTutorial, Enabled) == 0x000000, "Member 'BP_GameHUD_C_GetInventoryTutorial::Enabled' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetInventoryWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_GetInventoryWidget final
{
public:
	class UMPInGameInventory_C*                   Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetInventoryWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_GetInventoryWidget");
static_assert(sizeof(BP_GameHUD_C_GetInventoryWidget) == 0x000008, "Wrong size on BP_GameHUD_C_GetInventoryWidget");
static_assert(offsetof(BP_GameHUD_C_GetInventoryWidget, Widget) == 0x000000, "Member 'BP_GameHUD_C_GetInventoryWidget::Widget' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetItemInfoWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_GetItemInfoWidget final
{
public:
	class UW_ItemInfo_C*                          Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetItemInfoWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_GetItemInfoWidget");
static_assert(sizeof(BP_GameHUD_C_GetItemInfoWidget) == 0x000008, "Wrong size on BP_GameHUD_C_GetItemInfoWidget");
static_assert(offsetof(BP_GameHUD_C_GetItemInfoWidget, Widget) == 0x000000, "Member 'BP_GameHUD_C_GetItemInfoWidget::Widget' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetTutorialRewardWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_GetTutorialRewardWidget final
{
public:
	class UWBP_TutorialItemReward_C*              Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetTutorialRewardWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_GetTutorialRewardWidget");
static_assert(sizeof(BP_GameHUD_C_GetTutorialRewardWidget) == 0x000008, "Wrong size on BP_GameHUD_C_GetTutorialRewardWidget");
static_assert(offsetof(BP_GameHUD_C_GetTutorialRewardWidget, Widget) == 0x000000, "Member 'BP_GameHUD_C_GetTutorialRewardWidget::Widget' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetTutorialSlidesWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_GetTutorialSlidesWidget final
{
public:
	class UWBP_SlidesTutorial_C*                  Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetTutorialSlidesWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_GetTutorialSlidesWidget");
static_assert(sizeof(BP_GameHUD_C_GetTutorialSlidesWidget) == 0x000008, "Wrong size on BP_GameHUD_C_GetTutorialSlidesWidget");
static_assert(offsetof(BP_GameHUD_C_GetTutorialSlidesWidget, Widget) == 0x000000, "Member 'BP_GameHUD_C_GetTutorialSlidesWidget::Widget' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetUIMode
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_GetUIMode final
{
public:
	EWE_UIMode                                    ReturnedMode;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetUIMode) == 0x000001, "Wrong alignment on BP_GameHUD_C_GetUIMode");
static_assert(sizeof(BP_GameHUD_C_GetUIMode) == 0x000001, "Wrong size on BP_GameHUD_C_GetUIMode");
static_assert(offsetof(BP_GameHUD_C_GetUIMode, ReturnedMode) == 0x000000, "Member 'BP_GameHUD_C_GetUIMode::ReturnedMode' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetVehicleInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_GetVehicleInteract final
{
public:
	bool                                          Interact;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetVehicleInteract) == 0x000001, "Wrong alignment on BP_GameHUD_C_GetVehicleInteract");
static_assert(sizeof(BP_GameHUD_C_GetVehicleInteract) == 0x000001, "Wrong size on BP_GameHUD_C_GetVehicleInteract");
static_assert(offsetof(BP_GameHUD_C_GetVehicleInteract, Interact) == 0x000000, "Member 'BP_GameHUD_C_GetVehicleInteract::Interact' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.GetWorkBenchWidgetRef
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_GetWorkBenchWidgetRef final
{
public:
	class UWBP_Workbench_C*                       Param_WorkbenchWidgetRef;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_GetWorkBenchWidgetRef) == 0x000008, "Wrong alignment on BP_GameHUD_C_GetWorkBenchWidgetRef");
static_assert(sizeof(BP_GameHUD_C_GetWorkBenchWidgetRef) == 0x000008, "Wrong size on BP_GameHUD_C_GetWorkBenchWidgetRef");
static_assert(offsetof(BP_GameHUD_C_GetWorkBenchWidgetRef, Param_WorkbenchWidgetRef) == 0x000000, "Member 'BP_GameHUD_C_GetWorkBenchWidgetRef::Param_WorkbenchWidgetRef' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.HideCapacityInfoWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_HideCapacityInfoWidget final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_HideCapacityInfoWidget) == 0x000001, "Wrong alignment on BP_GameHUD_C_HideCapacityInfoWidget");
static_assert(sizeof(BP_GameHUD_C_HideCapacityInfoWidget) == 0x000001, "Wrong size on BP_GameHUD_C_HideCapacityInfoWidget");
static_assert(offsetof(BP_GameHUD_C_HideCapacityInfoWidget, Hide) == 0x000000, "Member 'BP_GameHUD_C_HideCapacityInfoWidget::Hide' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.HideGUI
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_HideGUI final
{
public:
	bool                                          bHide;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_HideGUI) == 0x000001, "Wrong alignment on BP_GameHUD_C_HideGUI");
static_assert(sizeof(BP_GameHUD_C_HideGUI) == 0x000001, "Wrong size on BP_GameHUD_C_HideGUI");
static_assert(offsetof(BP_GameHUD_C_HideGUI, bHide) == 0x000000, "Member 'BP_GameHUD_C_HideGUI::bHide' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.InitHUD
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_InitHUD final
{
public:
	class ASurvivalPlayer_C*                      PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_InitHUD) == 0x000008, "Wrong alignment on BP_GameHUD_C_InitHUD");
static_assert(sizeof(BP_GameHUD_C_InitHUD) == 0x000008, "Wrong size on BP_GameHUD_C_InitHUD");
static_assert(offsetof(BP_GameHUD_C_InitHUD, PlayerPawn) == 0x000000, "Member 'BP_GameHUD_C_InitHUD::PlayerPawn' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.IsShopWidgetOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_IsShopWidgetOpen final
{
public:
	bool                                          IsOpen;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_IsShopWidgetOpen) == 0x000001, "Wrong alignment on BP_GameHUD_C_IsShopWidgetOpen");
static_assert(sizeof(BP_GameHUD_C_IsShopWidgetOpen) == 0x000001, "Wrong size on BP_GameHUD_C_IsShopWidgetOpen");
static_assert(offsetof(BP_GameHUD_C_IsShopWidgetOpen, IsOpen) == 0x000000, "Member 'BP_GameHUD_C_IsShopWidgetOpen::IsOpen' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.IsStashWidgetOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_IsStashWidgetOpen final
{
public:
	bool                                          IsStashOpen;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_IsStashWidgetOpen) == 0x000001, "Wrong alignment on BP_GameHUD_C_IsStashWidgetOpen");
static_assert(sizeof(BP_GameHUD_C_IsStashWidgetOpen) == 0x000001, "Wrong size on BP_GameHUD_C_IsStashWidgetOpen");
static_assert(offsetof(BP_GameHUD_C_IsStashWidgetOpen, IsStashOpen) == 0x000000, "Member 'BP_GameHUD_C_IsStashWidgetOpen::IsStashOpen' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ItemTypeToText
// 0x01F0 (0x01F0 - 0x0000)
struct BP_GameHUD_C_ItemTypeToText final
{
public:
	EInfoType                                     ItemType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	EInfoType                                     Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0118(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0130(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0160(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0178(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0190(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x01A8(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01C0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x01D8(0x0018)()
};
static_assert(alignof(BP_GameHUD_C_ItemTypeToText) == 0x000008, "Wrong alignment on BP_GameHUD_C_ItemTypeToText");
static_assert(sizeof(BP_GameHUD_C_ItemTypeToText) == 0x0001F0, "Wrong size on BP_GameHUD_C_ItemTypeToText");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, ItemType) == 0x000000, "Member 'BP_GameHUD_C_ItemTypeToText::ItemType' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Text) == 0x000008, "Member 'BP_GameHUD_C_ItemTypeToText::Text' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_byte_Variable) == 0x000020, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable) == 0x000028, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_1) == 0x000040, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_2) == 0x000058, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_3) == 0x000070, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_4) == 0x000088, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_5) == 0x0000A0, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_6) == 0x0000B8, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_7) == 0x0000D0, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_8) == 0x0000E8, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_9) == 0x000100, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_10) == 0x000118, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_11) == 0x000130, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_12) == 0x000148, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_13) == 0x000160, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_14) == 0x000178, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_15) == 0x000190, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_16) == 0x0001A8, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, Temp_text_Variable_17) == 0x0001C0, "Member 'BP_GameHUD_C_ItemTypeToText::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ItemTypeToText, K2Node_Select_Default) == 0x0001D8, "Member 'BP_GameHUD_C_ItemTypeToText::K2Node_Select_Default' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.NotifyNewLocation
// 0x0038 (0x0038 - 0x0000)
struct BP_GameHUD_C_NotifyNewLocation final
{
public:
	class FText                                   RegionName;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   LocationName;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsCity;                                            // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_NotifyNewLocation) == 0x000008, "Wrong alignment on BP_GameHUD_C_NotifyNewLocation");
static_assert(sizeof(BP_GameHUD_C_NotifyNewLocation) == 0x000038, "Wrong size on BP_GameHUD_C_NotifyNewLocation");
static_assert(offsetof(BP_GameHUD_C_NotifyNewLocation, RegionName) == 0x000000, "Member 'BP_GameHUD_C_NotifyNewLocation::RegionName' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_NotifyNewLocation, LocationName) == 0x000018, "Member 'BP_GameHUD_C_NotifyNewLocation::LocationName' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_NotifyNewLocation, IsCity) == 0x000030, "Member 'BP_GameHUD_C_NotifyNewLocation::IsCity' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.OnAcceptInviteHome__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_OnAcceptInviteHome__DelegateSignature final
{
public:
	class APS_TDB_C*                              NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_OnAcceptInviteHome__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameHUD_C_OnAcceptInviteHome__DelegateSignature");
static_assert(sizeof(BP_GameHUD_C_OnAcceptInviteHome__DelegateSignature) == 0x000008, "Wrong size on BP_GameHUD_C_OnAcceptInviteHome__DelegateSignature");
static_assert(offsetof(BP_GameHUD_C_OnAcceptInviteHome__DelegateSignature, NewParam) == 0x000000, "Member 'BP_GameHUD_C_OnAcceptInviteHome__DelegateSignature::NewParam' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.OnChangeUIMode (Notify)
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_OnChangeUIMode__Notify_ final
{
public:
	EWE_UIMode                                    NewMode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_OnChangeUIMode__Notify_) == 0x000001, "Wrong alignment on BP_GameHUD_C_OnChangeUIMode__Notify_");
static_assert(sizeof(BP_GameHUD_C_OnChangeUIMode__Notify_) == 0x000001, "Wrong size on BP_GameHUD_C_OnChangeUIMode__Notify_");
static_assert(offsetof(BP_GameHUD_C_OnChangeUIMode__Notify_, NewMode) == 0x000000, "Member 'BP_GameHUD_C_OnChangeUIMode__Notify_::NewMode' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.OnChangeUIMode__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_OnChangeUIMode__DelegateSignature final
{
public:
	EWE_UIMode                                    NewMode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_OnChangeUIMode__DelegateSignature) == 0x000001, "Wrong alignment on BP_GameHUD_C_OnChangeUIMode__DelegateSignature");
static_assert(sizeof(BP_GameHUD_C_OnChangeUIMode__DelegateSignature) == 0x000001, "Wrong size on BP_GameHUD_C_OnChangeUIMode__DelegateSignature");
static_assert(offsetof(BP_GameHUD_C_OnChangeUIMode__DelegateSignature, NewMode) == 0x000000, "Member 'BP_GameHUD_C_OnChangeUIMode__DelegateSignature::NewMode' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.OnFirstRaidTutorialCompleted__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_OnFirstRaidTutorialCompleted__DelegateSignature final
{
public:
	bool                                          Param_bShowFirstRaidTutorial;                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_OnFirstRaidTutorialCompleted__DelegateSignature) == 0x000001, "Wrong alignment on BP_GameHUD_C_OnFirstRaidTutorialCompleted__DelegateSignature");
static_assert(sizeof(BP_GameHUD_C_OnFirstRaidTutorialCompleted__DelegateSignature) == 0x000001, "Wrong size on BP_GameHUD_C_OnFirstRaidTutorialCompleted__DelegateSignature");
static_assert(offsetof(BP_GameHUD_C_OnFirstRaidTutorialCompleted__DelegateSignature, Param_bShowFirstRaidTutorial) == 0x000000, "Member 'BP_GameHUD_C_OnFirstRaidTutorialCompleted__DelegateSignature::Param_bShowFirstRaidTutorial' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.OnInitializedDragWidget__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_OnInitializedDragWidget__DelegateSignature final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_OnInitializedDragWidget__DelegateSignature) == 0x000001, "Wrong alignment on BP_GameHUD_C_OnInitializedDragWidget__DelegateSignature");
static_assert(sizeof(BP_GameHUD_C_OnInitializedDragWidget__DelegateSignature) == 0x000001, "Wrong size on BP_GameHUD_C_OnInitializedDragWidget__DelegateSignature");
static_assert(offsetof(BP_GameHUD_C_OnInitializedDragWidget__DelegateSignature, NewState) == 0x000000, "Member 'BP_GameHUD_C_OnInitializedDragWidget__DelegateSignature::NewState' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.OnInitializedInventoryWidget__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_OnInitializedInventoryWidget__DelegateSignature final
{
public:
	class UMPInGameInventory_C*                   InventoryRef;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_OnInitializedInventoryWidget__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameHUD_C_OnInitializedInventoryWidget__DelegateSignature");
static_assert(sizeof(BP_GameHUD_C_OnInitializedInventoryWidget__DelegateSignature) == 0x000008, "Wrong size on BP_GameHUD_C_OnInitializedInventoryWidget__DelegateSignature");
static_assert(offsetof(BP_GameHUD_C_OnInitializedInventoryWidget__DelegateSignature, InventoryRef) == 0x000000, "Member 'BP_GameHUD_C_OnInitializedInventoryWidget__DelegateSignature::InventoryRef' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.OnInitializedTabsWidget__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_OnInitializedTabsWidget__DelegateSignature final
{
public:
	class UW_TabsWindow_C*                        TabsWindow;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_OnInitializedTabsWidget__DelegateSignature) == 0x000008, "Wrong alignment on BP_GameHUD_C_OnInitializedTabsWidget__DelegateSignature");
static_assert(sizeof(BP_GameHUD_C_OnInitializedTabsWidget__DelegateSignature) == 0x000008, "Wrong size on BP_GameHUD_C_OnInitializedTabsWidget__DelegateSignature");
static_assert(offsetof(BP_GameHUD_C_OnInitializedTabsWidget__DelegateSignature, TabsWindow) == 0x000000, "Member 'BP_GameHUD_C_OnInitializedTabsWidget__DelegateSignature::TabsWindow' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ReceiveDrawHUD
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_ReceiveDrawHUD final
{
public:
	int32                                         SizeX;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SizeY;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ReceiveDrawHUD) == 0x000004, "Wrong alignment on BP_GameHUD_C_ReceiveDrawHUD");
static_assert(sizeof(BP_GameHUD_C_ReceiveDrawHUD) == 0x000008, "Wrong size on BP_GameHUD_C_ReceiveDrawHUD");
static_assert(offsetof(BP_GameHUD_C_ReceiveDrawHUD, SizeX) == 0x000000, "Member 'BP_GameHUD_C_ReceiveDrawHUD::SizeX' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ReceiveDrawHUD, SizeY) == 0x000004, "Member 'BP_GameHUD_C_ReceiveDrawHUD::SizeY' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.RemoveInputHintByStage
// 0x0010 (0x0010 - 0x0000)
struct BP_GameHUD_C_RemoveInputHintByStage final
{
public:
	class FString                                 _Stage;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_RemoveInputHintByStage) == 0x000008, "Wrong alignment on BP_GameHUD_C_RemoveInputHintByStage");
static_assert(sizeof(BP_GameHUD_C_RemoveInputHintByStage) == 0x000010, "Wrong size on BP_GameHUD_C_RemoveInputHintByStage");
static_assert(offsetof(BP_GameHUD_C_RemoveInputHintByStage, _Stage) == 0x000000, "Member 'BP_GameHUD_C_RemoveInputHintByStage::_Stage' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.RemoveMark
// 0x000C (0x000C - 0x0000)
struct BP_GameHUD_C_RemoveMark final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_RemoveMark) == 0x000004, "Wrong alignment on BP_GameHUD_C_RemoveMark");
static_assert(sizeof(BP_GameHUD_C_RemoveMark) == 0x00000C, "Wrong size on BP_GameHUD_C_RemoveMark");
static_assert(offsetof(BP_GameHUD_C_RemoveMark, Key) == 0x000000, "Member 'BP_GameHUD_C_RemoveMark::Key' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_RemoveMark, Success) == 0x000008, "Member 'BP_GameHUD_C_RemoveMark::Success' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.RemoveNotification
// 0x0002 (0x0002 - 0x0000)
struct BP_GameHUD_C_RemoveNotification final
{
public:
	E_NotificationType                            NotificationType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_RemoveNotification) == 0x000001, "Wrong alignment on BP_GameHUD_C_RemoveNotification");
static_assert(sizeof(BP_GameHUD_C_RemoveNotification) == 0x000002, "Wrong size on BP_GameHUD_C_RemoveNotification");
static_assert(offsetof(BP_GameHUD_C_RemoveNotification, NotificationType) == 0x000000, "Member 'BP_GameHUD_C_RemoveNotification::NotificationType' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_RemoveNotification, Success) == 0x000001, "Member 'BP_GameHUD_C_RemoveNotification::Success' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetAllowDragInventoryItems
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_SetAllowDragInventoryItems final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetAllowDragInventoryItems) == 0x000001, "Wrong alignment on BP_GameHUD_C_SetAllowDragInventoryItems");
static_assert(sizeof(BP_GameHUD_C_SetAllowDragInventoryItems) == 0x000001, "Wrong size on BP_GameHUD_C_SetAllowDragInventoryItems");
static_assert(offsetof(BP_GameHUD_C_SetAllowDragInventoryItems, Enable) == 0x000000, "Member 'BP_GameHUD_C_SetAllowDragInventoryItems::Enable' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetDragWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_GameHUD_C_SetDragWidget final
{
public:
	class UDragWidget_C*                          Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetDragWidget) == 0x000008, "Wrong alignment on BP_GameHUD_C_SetDragWidget");
static_assert(sizeof(BP_GameHUD_C_SetDragWidget) == 0x000010, "Wrong size on BP_GameHUD_C_SetDragWidget");
static_assert(offsetof(BP_GameHUD_C_SetDragWidget, Widget) == 0x000000, "Member 'BP_GameHUD_C_SetDragWidget::Widget' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetDragWidget, Success) == 0x000008, "Member 'BP_GameHUD_C_SetDragWidget::Success' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetDragWidget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_GameHUD_C_SetDragWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetFurnitureCatalogRef
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_SetFurnitureCatalogRef final
{
public:
	class UWBP_FurnitureShopButtons_C*            FurnitureCatalog;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetFurnitureCatalogRef) == 0x000008, "Wrong alignment on BP_GameHUD_C_SetFurnitureCatalogRef");
static_assert(sizeof(BP_GameHUD_C_SetFurnitureCatalogRef) == 0x000008, "Wrong size on BP_GameHUD_C_SetFurnitureCatalogRef");
static_assert(offsetof(BP_GameHUD_C_SetFurnitureCatalogRef, FurnitureCatalog) == 0x000000, "Member 'BP_GameHUD_C_SetFurnitureCatalogRef::FurnitureCatalog' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetGUIVisibility
// 0x000C (0x000C - 0x0000)
struct BP_GameHUD_C_SetGUIVisibility final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetGUIVisibility) == 0x000001, "Wrong alignment on BP_GameHUD_C_SetGUIVisibility");
static_assert(sizeof(BP_GameHUD_C_SetGUIVisibility) == 0x00000C, "Wrong size on BP_GameHUD_C_SetGUIVisibility");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, Condition) == 0x000000, "Member 'BP_GameHUD_C_SetGUIVisibility::Condition' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue_2) == 0x000003, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue_3) == 0x000004, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue_4) == 0x000005, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue_5) == 0x000006, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue_6) == 0x000007, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue_7) == 0x000008, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue_8) == 0x000009, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue_9) == 0x00000A, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetGUIVisibility, CallFunc_IsValid_ReturnValue_10) == 0x00000B, "Member 'BP_GameHUD_C_SetGUIVisibility::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetInventoryTutorial
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_SetInventoryTutorial final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetInventoryTutorial) == 0x000001, "Wrong alignment on BP_GameHUD_C_SetInventoryTutorial");
static_assert(sizeof(BP_GameHUD_C_SetInventoryTutorial) == 0x000001, "Wrong size on BP_GameHUD_C_SetInventoryTutorial");
static_assert(offsetof(BP_GameHUD_C_SetInventoryTutorial, Enabled) == 0x000000, "Member 'BP_GameHUD_C_SetInventoryTutorial::Enabled' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetKilledByInfo
// 0x0048 (0x0048 - 0x0000)
struct BP_GameHUD_C_SetKilledByInfo final
{
public:
	TSoftObjectPtr<class UPaperSprite>            WeaponIcon;                                        // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FString                                 Nickname;                                          // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetKilledByInfo) == 0x000008, "Wrong alignment on BP_GameHUD_C_SetKilledByInfo");
static_assert(sizeof(BP_GameHUD_C_SetKilledByInfo) == 0x000048, "Wrong size on BP_GameHUD_C_SetKilledByInfo");
static_assert(offsetof(BP_GameHUD_C_SetKilledByInfo, WeaponIcon) == 0x000000, "Member 'BP_GameHUD_C_SetKilledByInfo::WeaponIcon' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetKilledByInfo, Nickname) == 0x000030, "Member 'BP_GameHUD_C_SetKilledByInfo::Nickname' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SetKilledByInfo, IsValid) == 0x000040, "Member 'BP_GameHUD_C_SetKilledByInfo::IsValid' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetShopOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_SetShopOpen final
{
public:
	bool                                          In_Is_Open;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetShopOpen) == 0x000001, "Wrong alignment on BP_GameHUD_C_SetShopOpen");
static_assert(sizeof(BP_GameHUD_C_SetShopOpen) == 0x000001, "Wrong size on BP_GameHUD_C_SetShopOpen");
static_assert(offsetof(BP_GameHUD_C_SetShopOpen, In_Is_Open) == 0x000000, "Member 'BP_GameHUD_C_SetShopOpen::In_Is_Open' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetStashOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_SetStashOpen final
{
public:
	bool                                          InIsOpen;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetStashOpen) == 0x000001, "Wrong alignment on BP_GameHUD_C_SetStashOpen");
static_assert(sizeof(BP_GameHUD_C_SetStashOpen) == 0x000001, "Wrong size on BP_GameHUD_C_SetStashOpen");
static_assert(offsetof(BP_GameHUD_C_SetStashOpen, InIsOpen) == 0x000000, "Member 'BP_GameHUD_C_SetStashOpen::InIsOpen' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetUIMode
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_SetUIMode final
{
public:
	EWE_UIMode                                    NewMode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetUIMode) == 0x000001, "Wrong alignment on BP_GameHUD_C_SetUIMode");
static_assert(sizeof(BP_GameHUD_C_SetUIMode) == 0x000001, "Wrong size on BP_GameHUD_C_SetUIMode");
static_assert(offsetof(BP_GameHUD_C_SetUIMode, NewMode) == 0x000000, "Member 'BP_GameHUD_C_SetUIMode::NewMode' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetVehicleInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_SetVehicleInteract final
{
public:
	bool                                          VehicleInteract;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetVehicleInteract) == 0x000001, "Wrong alignment on BP_GameHUD_C_SetVehicleInteract");
static_assert(sizeof(BP_GameHUD_C_SetVehicleInteract) == 0x000001, "Wrong size on BP_GameHUD_C_SetVehicleInteract");
static_assert(offsetof(BP_GameHUD_C_SetVehicleInteract, VehicleInteract) == 0x000000, "Member 'BP_GameHUD_C_SetVehicleInteract::VehicleInteract' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SetWorkbenchWidgetRef
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_SetWorkbenchWidgetRef final
{
public:
	class UWBP_Workbench_C*                       Param_WorkbenchWidgetRef;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SetWorkbenchWidgetRef) == 0x000008, "Wrong alignment on BP_GameHUD_C_SetWorkbenchWidgetRef");
static_assert(sizeof(BP_GameHUD_C_SetWorkbenchWidgetRef) == 0x000008, "Wrong size on BP_GameHUD_C_SetWorkbenchWidgetRef");
static_assert(offsetof(BP_GameHUD_C_SetWorkbenchWidgetRef, Param_WorkbenchWidgetRef) == 0x000000, "Member 'BP_GameHUD_C_SetWorkbenchWidgetRef::Param_WorkbenchWidgetRef' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ShowBinocularsOverlay
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_ShowBinocularsOverlay final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ShowBinocularsOverlay) == 0x000001, "Wrong alignment on BP_GameHUD_C_ShowBinocularsOverlay");
static_assert(sizeof(BP_GameHUD_C_ShowBinocularsOverlay) == 0x000001, "Wrong size on BP_GameHUD_C_ShowBinocularsOverlay");
static_assert(offsetof(BP_GameHUD_C_ShowBinocularsOverlay, Show) == 0x000000, "Member 'BP_GameHUD_C_ShowBinocularsOverlay::Show' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ShowBleedingHint
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_ShowBleedingHint final
{
public:
	class AActor*                                 RagActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ShowBleedingHint) == 0x000008, "Wrong alignment on BP_GameHUD_C_ShowBleedingHint");
static_assert(sizeof(BP_GameHUD_C_ShowBleedingHint) == 0x000008, "Wrong size on BP_GameHUD_C_ShowBleedingHint");
static_assert(offsetof(BP_GameHUD_C_ShowBleedingHint, RagActor) == 0x000000, "Member 'BP_GameHUD_C_ShowBleedingHint::RagActor' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ShowColdHint
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_ShowColdHint final
{
public:
	class AActor*                                 Cold_Actor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ShowColdHint) == 0x000008, "Wrong alignment on BP_GameHUD_C_ShowColdHint");
static_assert(sizeof(BP_GameHUD_C_ShowColdHint) == 0x000008, "Wrong size on BP_GameHUD_C_ShowColdHint");
static_assert(offsetof(BP_GameHUD_C_ShowColdHint, Cold_Actor) == 0x000000, "Member 'BP_GameHUD_C_ShowColdHint::Cold_Actor' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ShowDLSSMode
// 0x0010 (0x0010 - 0x0000)
struct BP_GameHUD_C_ShowDLSSMode final
{
public:
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ShowDLSSMode) == 0x000008, "Wrong alignment on BP_GameHUD_C_ShowDLSSMode");
static_assert(sizeof(BP_GameHUD_C_ShowDLSSMode) == 0x000010, "Wrong size on BP_GameHUD_C_ShowDLSSMode");
static_assert(offsetof(BP_GameHUD_C_ShowDLSSMode, CallFunc_Conv_TextToString_ReturnValue) == 0x000000, "Member 'BP_GameHUD_C_ShowDLSSMode::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ShowDropWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_ShowDropWidget final
{
public:
	class FName                                   ItemName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ShowDropWidget) == 0x000004, "Wrong alignment on BP_GameHUD_C_ShowDropWidget");
static_assert(sizeof(BP_GameHUD_C_ShowDropWidget) == 0x000008, "Wrong size on BP_GameHUD_C_ShowDropWidget");
static_assert(offsetof(BP_GameHUD_C_ShowDropWidget, ItemName) == 0x000000, "Member 'BP_GameHUD_C_ShowDropWidget::ItemName' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ShowFirstRaidHint
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_ShowFirstRaidHint final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ShowFirstRaidHint) == 0x000001, "Wrong alignment on BP_GameHUD_C_ShowFirstRaidHint");
static_assert(sizeof(BP_GameHUD_C_ShowFirstRaidHint) == 0x000001, "Wrong size on BP_GameHUD_C_ShowFirstRaidHint");
static_assert(offsetof(BP_GameHUD_C_ShowFirstRaidHint, Show) == 0x000000, "Member 'BP_GameHUD_C_ShowFirstRaidHint::Show' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ShowRadialInteraction
// 0x0018 (0x0018 - 0x0000)
struct BP_GameHUD_C_ShowRadialInteraction final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_ActorType                                   ObjectType;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ShowRadialInteraction) == 0x000008, "Wrong alignment on BP_GameHUD_C_ShowRadialInteraction");
static_assert(sizeof(BP_GameHUD_C_ShowRadialInteraction) == 0x000018, "Wrong size on BP_GameHUD_C_ShowRadialInteraction");
static_assert(offsetof(BP_GameHUD_C_ShowRadialInteraction, Show) == 0x000000, "Member 'BP_GameHUD_C_ShowRadialInteraction::Show' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ShowRadialInteraction, Object) == 0x000008, "Member 'BP_GameHUD_C_ShowRadialInteraction::Object' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_ShowRadialInteraction, ObjectType) == 0x000010, "Member 'BP_GameHUD_C_ShowRadialInteraction::ObjectType' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ShowSurrenderMessage
// 0x0008 (0x0008 - 0x0000)
struct BP_GameHUD_C_ShowSurrenderMessage final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ShowSurrenderMessage) == 0x000008, "Wrong alignment on BP_GameHUD_C_ShowSurrenderMessage");
static_assert(sizeof(BP_GameHUD_C_ShowSurrenderMessage) == 0x000008, "Wrong size on BP_GameHUD_C_ShowSurrenderMessage");
static_assert(offsetof(BP_GameHUD_C_ShowSurrenderMessage, Player) == 0x000000, "Member 'BP_GameHUD_C_ShowSurrenderMessage::Player' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.ShowTutorial3DWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_ShowTutorial3DWidget final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_ShowTutorial3DWidget) == 0x000001, "Wrong alignment on BP_GameHUD_C_ShowTutorial3DWidget");
static_assert(sizeof(BP_GameHUD_C_ShowTutorial3DWidget) == 0x000001, "Wrong size on BP_GameHUD_C_ShowTutorial3DWidget");
static_assert(offsetof(BP_GameHUD_C_ShowTutorial3DWidget, Show) == 0x000000, "Member 'BP_GameHUD_C_ShowTutorial3DWidget::Show' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SurrenderButtonPressed
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_SurrenderButtonPressed final
{
public:
	bool                                          Pressed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SurrenderButtonPressed) == 0x000001, "Wrong alignment on BP_GameHUD_C_SurrenderButtonPressed");
static_assert(sizeof(BP_GameHUD_C_SurrenderButtonPressed) == 0x000001, "Wrong size on BP_GameHUD_C_SurrenderButtonPressed");
static_assert(offsetof(BP_GameHUD_C_SurrenderButtonPressed, Pressed) == 0x000000, "Member 'BP_GameHUD_C_SurrenderButtonPressed::Pressed' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SurrenderRevive
// 0x0018 (0x0018 - 0x0000)
struct BP_GameHUD_C_SurrenderRevive final
{
public:
	bool                                          Revive;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SurrenderRevive) == 0x000008, "Wrong alignment on BP_GameHUD_C_SurrenderRevive");
static_assert(sizeof(BP_GameHUD_C_SurrenderRevive) == 0x000018, "Wrong size on BP_GameHUD_C_SurrenderRevive");
static_assert(offsetof(BP_GameHUD_C_SurrenderRevive, Revive) == 0x000000, "Member 'BP_GameHUD_C_SurrenderRevive::Revive' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SurrenderRevive, PlayerName) == 0x000008, "Member 'BP_GameHUD_C_SurrenderRevive::PlayerName' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.SurrenderShow
// 0x0018 (0x0018 - 0x0000)
struct BP_GameHUD_C_SurrenderShow final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 KillerName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_SurrenderShow) == 0x000008, "Wrong alignment on BP_GameHUD_C_SurrenderShow");
static_assert(sizeof(BP_GameHUD_C_SurrenderShow) == 0x000018, "Wrong size on BP_GameHUD_C_SurrenderShow");
static_assert(offsetof(BP_GameHUD_C_SurrenderShow, Show) == 0x000000, "Member 'BP_GameHUD_C_SurrenderShow::Show' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_SurrenderShow, KillerName) == 0x000008, "Member 'BP_GameHUD_C_SurrenderShow::KillerName' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.UpdateInventorySlotsAvailableForDismanle
// 0x0002 (0x0002 - 0x0000)
struct BP_GameHUD_C_UpdateInventorySlotsAvailableForDismanle final
{
public:
	bool                                          Check;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_UpdateInventorySlotsAvailableForDismanle) == 0x000001, "Wrong alignment on BP_GameHUD_C_UpdateInventorySlotsAvailableForDismanle");
static_assert(sizeof(BP_GameHUD_C_UpdateInventorySlotsAvailableForDismanle) == 0x000002, "Wrong size on BP_GameHUD_C_UpdateInventorySlotsAvailableForDismanle");
static_assert(offsetof(BP_GameHUD_C_UpdateInventorySlotsAvailableForDismanle, Check) == 0x000000, "Member 'BP_GameHUD_C_UpdateInventorySlotsAvailableForDismanle::Check' has a wrong offset!");
static_assert(offsetof(BP_GameHUD_C_UpdateInventorySlotsAvailableForDismanle, Enable) == 0x000001, "Member 'BP_GameHUD_C_UpdateInventorySlotsAvailableForDismanle::Enable' has a wrong offset!");

// Function BP_GameHUD.BP_GameHUD_C.UpdateInventorySlotsAvaliableForSell
// 0x0001 (0x0001 - 0x0000)
struct BP_GameHUD_C_UpdateInventorySlotsAvaliableForSell final
{
public:
	bool                                          bCheck;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameHUD_C_UpdateInventorySlotsAvaliableForSell) == 0x000001, "Wrong alignment on BP_GameHUD_C_UpdateInventorySlotsAvaliableForSell");
static_assert(sizeof(BP_GameHUD_C_UpdateInventorySlotsAvaliableForSell) == 0x000001, "Wrong size on BP_GameHUD_C_UpdateInventorySlotsAvaliableForSell");
static_assert(offsetof(BP_GameHUD_C_UpdateInventorySlotsAvaliableForSell, bCheck) == 0x000000, "Member 'BP_GameHUD_C_UpdateInventorySlotsAvaliableForSell::bCheck' has a wrong offset!");

}

