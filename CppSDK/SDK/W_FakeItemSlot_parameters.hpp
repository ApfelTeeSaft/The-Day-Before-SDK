#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FakeItemSlot

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_FakeItemSlot.W_FakeItemSlot_C.ExecuteUbergraph_W_FakeItemSlot
// 0x0008 (0x0008 - 0x0000)
struct W_FakeItemSlot_C_ExecuteUbergraph_W_FakeItemSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FakeItemSlot_C_ExecuteUbergraph_W_FakeItemSlot) == 0x000004, "Wrong alignment on W_FakeItemSlot_C_ExecuteUbergraph_W_FakeItemSlot");
static_assert(sizeof(W_FakeItemSlot_C_ExecuteUbergraph_W_FakeItemSlot) == 0x000008, "Wrong size on W_FakeItemSlot_C_ExecuteUbergraph_W_FakeItemSlot");
static_assert(offsetof(W_FakeItemSlot_C_ExecuteUbergraph_W_FakeItemSlot, EntryPoint) == 0x000000, "Member 'W_FakeItemSlot_C_ExecuteUbergraph_W_FakeItemSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_FakeItemSlot_C_ExecuteUbergraph_W_FakeItemSlot, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_FakeItemSlot_C_ExecuteUbergraph_W_FakeItemSlot::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function W_FakeItemSlot.W_FakeItemSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_FakeItemSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_FakeItemSlot_C_PreConstruct) == 0x000001, "Wrong alignment on W_FakeItemSlot_C_PreConstruct");
static_assert(sizeof(W_FakeItemSlot_C_PreConstruct) == 0x000001, "Wrong size on W_FakeItemSlot_C_PreConstruct");
static_assert(offsetof(W_FakeItemSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_FakeItemSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_FakeItemSlot.W_FakeItemSlot_C.SetImage
// 0x00E0 (0x00E0 - 0x0000)
struct W_FakeItemSlot_C_SetImage final
{
public:
	class UPaperSprite*                           Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0010(0x00D0)()
};
static_assert(alignof(W_FakeItemSlot_C_SetImage) == 0x000010, "Wrong alignment on W_FakeItemSlot_C_SetImage");
static_assert(sizeof(W_FakeItemSlot_C_SetImage) == 0x0000E0, "Wrong size on W_FakeItemSlot_C_SetImage");
static_assert(offsetof(W_FakeItemSlot_C_SetImage, Image) == 0x000000, "Member 'W_FakeItemSlot_C_SetImage::Image' has a wrong offset!");
static_assert(offsetof(W_FakeItemSlot_C_SetImage, K2Node_MakeStruct_SlateBrush) == 0x000010, "Member 'W_FakeItemSlot_C_SetImage::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

}

