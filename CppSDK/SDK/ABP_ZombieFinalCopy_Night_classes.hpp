#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_ZombieFinalCopy_Night

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "ABP_ZombieFinalCopy_Night_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Survival_structs.hpp"
#include "Survival_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_ZombieFinalCopy_Night.ABP_ZombieFinalCopy_Night_C
// 0x1570 (0x18C0 - 0x0350)
class UABP_ZombieFinalCopy_Night_C final : public UZombieAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_ZombieFinalCopy_Night::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x0024)(HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0380(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0388(0x0008)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0390(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0458(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x04A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x04D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x04F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x05C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x05E8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0630(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0678(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x06C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x06E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0728(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0748(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0790(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x07B0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0820(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0840(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x08B0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x08D0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0940(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0960(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x09A8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x09C8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0A10(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0A58(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0AA0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0AE8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0B30(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0B78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0BC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0C08(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0C50(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0C98(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0CB8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0D28(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0D48(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0E10(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0E58(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x0EA0(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0FA8(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0FF0(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x10D0(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x11D8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1200(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1248(0x0028)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x1270(0x0250)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x14C0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x14E0(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1500(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1608(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1630(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1678(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x16A0(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x16C8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x16E8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1708(0x0020)()
	TSoftObjectPtr<class UFMODEvent>              K2Node_PropertyAccess_2;                           // 0x1728(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UFMODEvent>              K2Node_PropertyAccess_1;                           // 0x1758(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess;                             // 0x1788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAuthoritive;                                     // 0x1789(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_178A[0x6];                                     // 0x178A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              Zombie;                                            // 0x1790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x1798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCapsuleComponent*                      CapsuleComp;                                       // 0x17A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAIMovementComponent_C*                 AIMovementComp;                                    // 0x17A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RecentlyInitialized;                               // 0x17B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B1[0x3];                                     // 0x17B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x17B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VelocityFromAnimation;                             // 0x17B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B9[0x7];                                     // 0x17B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VelocityValue;                                     // 0x17C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stunned;                                           // 0x17C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Back_to_Idle;                                      // 0x17C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Agressive;                                         // 0x17CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17CB[0x5];                                     // 0x17CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AnimationAngle;                                    // 0x17D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStopping;                                        // 0x17D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Accelerating;                                      // 0x17D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitToWalkStart;                                // 0x17DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitToSprintStart;                              // 0x17DB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CalculateLean;                                     // 0x17DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17DD[0x3];                                     // 0x17DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CharacterRotationLastFrame;                        // 0x17E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               CharacterRotation;                                 // 0x17F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        Target;                                            // 0x1810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeanInterpValue;                                   // 0x1818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lean;                                              // 0x1820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookAtTarget;                                      // 0x1828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1829[0x7];                                     // 0x1829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookAtLocation;                                    // 0x1830(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      Target_Actor;                                      // 0x1848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MeshInterpSpeed;                                   // 0x1850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRightFoot;                                       // 0x1858(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1859[0x3];                                     // 0x1859(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SurfaceTypeParameter;                              // 0x185C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MeshZOffset;                                       // 0x1860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitToSprint;                                   // 0x1868(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitToWalk;                                     // 0x1869(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_186A[0x6];                                     // 0x186A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SmoothRootCorrection;                              // 0x1870(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Damaged;                                           // 0x1888(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               ZombieAnimType;                                    // 0x1889(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Survival::EMovementType                       MovementType;                                      // 0x188A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWitch;                                           // 0x188B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartTransitionBackToIdle;                         // 0x188C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_188D[0x3];                                     // 0x188D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             StandupDownEvent;                                  // 0x1890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             StandUpKnee2Event;                                 // 0x1898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             StandUpKnee1Event;                                 // 0x18A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         IdleType;                                          // 0x18A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Sleeping_Zombie;                                // 0x18AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18AD[0x3];                                     // 0x18AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ActualVelocity;                                    // 0x18B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_OnEnteredIdleState();
	void AnimNotify_RunState_Entered();
	void AnimNotify_RunState_Left();
	void AnimNotify_StopWalk_Enter();
	void AnimNotify_zombie_01_attack();
	void AnimNotify_zombie_detect();
	void AnimNotify_zombie_sprint_step();
	void AnimNotify_zombie_standup_down();
	void AnimNotify_zombie_standup_knee1();
	void AnimNotify_zombie_standup_knee2();
	void AnimNotify_zombie_step();
	void BlueprintBeginPlay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void CalculateLeaning();
	void CalculateLookAtLocation();
	void Check_If_Sound_Load_Needed(TSoftObjectPtr<class UFMODEvent> FMOD_Event);
	void DetermineFoot();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ZombieFinalCopy_Night_AnimGraphNode_TransitionResult_16516E5A48EE029D9FE284B48EB9F7C5();
	void ExecuteUbergraph_ABP_ZombieFinalCopy_Night(int32 EntryPoint);
	bool GetTransitToSprint();
	bool GetTransitToWalk();
	void MeshSmoothCorrection();
	void OnABP_Set();
	void OnSetTargetActor(class AActor* TargetActor);
	void SetupSurfaceTypeParameter(EPhysicalSurface SurfaceType);
	void StartCalculateLeaning();
	void StopCalculateLeaning();
	void TraceOnStep(EPhysicalSurface* SurfaceType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_ZombieFinalCopy_Night_C">();
	}
	static class UABP_ZombieFinalCopy_Night_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_ZombieFinalCopy_Night_C>();
	}
};
static_assert(alignof(UABP_ZombieFinalCopy_Night_C) == 0x000010, "Wrong alignment on UABP_ZombieFinalCopy_Night_C");
static_assert(sizeof(UABP_ZombieFinalCopy_Night_C) == 0x0018C0, "Wrong size on UABP_ZombieFinalCopy_Night_C");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, UberGraphFrame) == 0x000350, "Member 'UABP_ZombieFinalCopy_Night_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, __AnimBlueprintMutables) == 0x000358, "Member 'UABP_ZombieFinalCopy_Night_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimBlueprintExtension_PropertyAccess) == 0x000380, "Member 'UABP_ZombieFinalCopy_Night_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimBlueprintExtension_Base) == 0x000388, "Member 'UABP_ZombieFinalCopy_Night_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_14) == 0x000390, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_13) == 0x0003B8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_12) == 0x0003E0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_11) == 0x000408, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_10) == 0x000430, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_9) == 0x000458, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_8) == 0x000480, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_7) == 0x0004A8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_6) == 0x0004D0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_5) == 0x0004F8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_4) == 0x000520, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_3) == 0x000548, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_2) == 0x000570, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult_1) == 0x000598, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_TransitionResult) == 0x0005C0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_12) == 0x0005E8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_BlendListByBool_2) == 0x000630, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_11) == 0x000678, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_StateResult_8) == 0x0006C0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_10) == 0x0006E0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_StateResult_7) == 0x000728, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_9) == 0x000748, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_StateResult_6) == 0x000790, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_BlendSpacePlayer_3) == 0x0007B0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_StateResult_5) == 0x000820, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000840, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_StateResult_4) == 0x0008B0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0008D0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_StateResult_3) == 0x000940, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_8) == 0x000960, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_StateResult_2) == 0x0009A8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_7) == 0x0009C8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_6) == 0x000A10, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_BlendListByBool_1) == 0x000A58, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_BlendListByEnum) == 0x000AA0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_5) == 0x000AE8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_4) == 0x000B30, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_3) == 0x000B78, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_2) == 0x000BC0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer_1) == 0x000C08, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SequencePlayer) == 0x000C50, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_StateResult_1) == 0x000C98, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_BlendSpacePlayer) == 0x000CB8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_StateResult) == 0x000D28, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_StateMachine) == 0x000D48, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_Slot_3) == 0x000E10, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_Slot_2) == 0x000E58, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SaveCachedPose_2) == 0x000EA0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_Slot_1) == 0x000FA8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_LayeredBoneBlend) == 0x000FF0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SaveCachedPose_1) == 0x0010D0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_UseCachedPose_4) == 0x0011D8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_BlendListByBool) == 0x001200, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_UseCachedPose_3) == 0x001248, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_LookAt) == 0x001270, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0014C0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0014E0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_SaveCachedPose) == 0x001500, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_UseCachedPose_2) == 0x001608, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_Slot) == 0x001630, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_UseCachedPose_1) == 0x001678, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_UseCachedPose) == 0x0016A0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_Root) == 0x0016C8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_LocalToComponentSpace) == 0x0016E8, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimGraphNode_ComponentToLocalSpace) == 0x001708, "Member 'UABP_ZombieFinalCopy_Night_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, K2Node_PropertyAccess_2) == 0x001728, "Member 'UABP_ZombieFinalCopy_Night_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, K2Node_PropertyAccess_1) == 0x001758, "Member 'UABP_ZombieFinalCopy_Night_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, K2Node_PropertyAccess) == 0x001788, "Member 'UABP_ZombieFinalCopy_Night_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, IsAuthoritive) == 0x001789, "Member 'UABP_ZombieFinalCopy_Night_C::IsAuthoritive' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Zombie) == 0x001790, "Member 'UABP_ZombieFinalCopy_Night_C::Zombie' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Mesh) == 0x001798, "Member 'UABP_ZombieFinalCopy_Night_C::Mesh' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, CapsuleComp) == 0x0017A0, "Member 'UABP_ZombieFinalCopy_Night_C::CapsuleComp' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AIMovementComp) == 0x0017A8, "Member 'UABP_ZombieFinalCopy_Night_C::AIMovementComp' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, RecentlyInitialized) == 0x0017B0, "Member 'UABP_ZombieFinalCopy_Night_C::RecentlyInitialized' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, DeltaTime) == 0x0017B4, "Member 'UABP_ZombieFinalCopy_Night_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, VelocityFromAnimation) == 0x0017B8, "Member 'UABP_ZombieFinalCopy_Night_C::VelocityFromAnimation' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, VelocityValue) == 0x0017C0, "Member 'UABP_ZombieFinalCopy_Night_C::VelocityValue' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Stunned) == 0x0017C8, "Member 'UABP_ZombieFinalCopy_Night_C::Stunned' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Back_to_Idle) == 0x0017C9, "Member 'UABP_ZombieFinalCopy_Night_C::Back_to_Idle' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Agressive) == 0x0017CA, "Member 'UABP_ZombieFinalCopy_Night_C::Agressive' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, AnimationAngle) == 0x0017D0, "Member 'UABP_ZombieFinalCopy_Night_C::AnimationAngle' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, IsStopping) == 0x0017D8, "Member 'UABP_ZombieFinalCopy_Night_C::IsStopping' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Accelerating) == 0x0017D9, "Member 'UABP_ZombieFinalCopy_Night_C::Accelerating' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, TransitToWalkStart) == 0x0017DA, "Member 'UABP_ZombieFinalCopy_Night_C::TransitToWalkStart' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, TransitToSprintStart) == 0x0017DB, "Member 'UABP_ZombieFinalCopy_Night_C::TransitToSprintStart' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, CalculateLean) == 0x0017DC, "Member 'UABP_ZombieFinalCopy_Night_C::CalculateLean' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, CharacterRotationLastFrame) == 0x0017E0, "Member 'UABP_ZombieFinalCopy_Night_C::CharacterRotationLastFrame' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, CharacterRotation) == 0x0017F8, "Member 'UABP_ZombieFinalCopy_Night_C::CharacterRotation' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Target) == 0x001810, "Member 'UABP_ZombieFinalCopy_Night_C::Target' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, LeanInterpValue) == 0x001818, "Member 'UABP_ZombieFinalCopy_Night_C::LeanInterpValue' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Lean) == 0x001820, "Member 'UABP_ZombieFinalCopy_Night_C::Lean' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, LookAtTarget) == 0x001828, "Member 'UABP_ZombieFinalCopy_Night_C::LookAtTarget' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, LookAtLocation) == 0x001830, "Member 'UABP_ZombieFinalCopy_Night_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Target_Actor) == 0x001848, "Member 'UABP_ZombieFinalCopy_Night_C::Target_Actor' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, MeshInterpSpeed) == 0x001850, "Member 'UABP_ZombieFinalCopy_Night_C::MeshInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, IsRightFoot) == 0x001858, "Member 'UABP_ZombieFinalCopy_Night_C::IsRightFoot' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, SurfaceTypeParameter) == 0x00185C, "Member 'UABP_ZombieFinalCopy_Night_C::SurfaceTypeParameter' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, MeshZOffset) == 0x001860, "Member 'UABP_ZombieFinalCopy_Night_C::MeshZOffset' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, TransitToSprint) == 0x001868, "Member 'UABP_ZombieFinalCopy_Night_C::TransitToSprint' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, TransitToWalk) == 0x001869, "Member 'UABP_ZombieFinalCopy_Night_C::TransitToWalk' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, SmoothRootCorrection) == 0x001870, "Member 'UABP_ZombieFinalCopy_Night_C::SmoothRootCorrection' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Damaged) == 0x001888, "Member 'UABP_ZombieFinalCopy_Night_C::Damaged' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, ZombieAnimType) == 0x001889, "Member 'UABP_ZombieFinalCopy_Night_C::ZombieAnimType' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, MovementType) == 0x00188A, "Member 'UABP_ZombieFinalCopy_Night_C::MovementType' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, IsWitch) == 0x00188B, "Member 'UABP_ZombieFinalCopy_Night_C::IsWitch' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, StartTransitionBackToIdle) == 0x00188C, "Member 'UABP_ZombieFinalCopy_Night_C::StartTransitionBackToIdle' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, StandupDownEvent) == 0x001890, "Member 'UABP_ZombieFinalCopy_Night_C::StandupDownEvent' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, StandUpKnee2Event) == 0x001898, "Member 'UABP_ZombieFinalCopy_Night_C::StandUpKnee2Event' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, StandUpKnee1Event) == 0x0018A0, "Member 'UABP_ZombieFinalCopy_Night_C::StandUpKnee1Event' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, IdleType) == 0x0018A8, "Member 'UABP_ZombieFinalCopy_Night_C::IdleType' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, Is_Sleeping_Zombie) == 0x0018AC, "Member 'UABP_ZombieFinalCopy_Night_C::Is_Sleeping_Zombie' has a wrong offset!");
static_assert(offsetof(UABP_ZombieFinalCopy_Night_C, ActualVelocity) == 0x0018B0, "Member 'UABP_ZombieFinalCopy_Night_C::ActualVelocity' has a wrong offset!");

}

