#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_VehicleUpgrade

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.ExecuteUbergraph_BPC_VehicleUpgrade
// 0x0020 (0x0020 - 0x0000)
struct BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_RB_Vehicle_C*                       K2Node_DynamicCast_AsBP_RB_Vehicle;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade");
static_assert(sizeof(BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade) == 0x000020, "Wrong size on BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade");
static_assert(offsetof(BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade, EntryPoint) == 0x000000, "Member 'BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade, K2Node_DynamicCast_AsBP_RB_Vehicle) == 0x000010, "Member 'BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade::K2Node_DynamicCast_AsBP_RB_Vehicle' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPC_VehicleUpgrade_C_ExecuteUbergraph_BPC_VehicleUpgrade::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.GetAccelerationInfo
// 0x0020 (0x0020 - 0x0000)
struct BPC_VehicleUpgrade_C_GetAccelerationInfo final
{
public:
	class UBPDA_Acceleration_C*                   Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFullyUpgraded;                                   // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPDA_Acceleration_C*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_GetAccelerationInfo) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_GetAccelerationInfo");
static_assert(sizeof(BPC_VehicleUpgrade_C_GetAccelerationInfo) == 0x000020, "Wrong size on BPC_VehicleUpgrade_C_GetAccelerationInfo");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAccelerationInfo, Info) == 0x000000, "Member 'BPC_VehicleUpgrade_C_GetAccelerationInfo::Info' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAccelerationInfo, Level) == 0x000008, "Member 'BPC_VehicleUpgrade_C_GetAccelerationInfo::Level' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAccelerationInfo, IsFullyUpgraded) == 0x00000C, "Member 'BPC_VehicleUpgrade_C_GetAccelerationInfo::IsFullyUpgraded' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAccelerationInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000D, "Member 'BPC_VehicleUpgrade_C_GetAccelerationInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAccelerationInfo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BPC_VehicleUpgrade_C_GetAccelerationInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAccelerationInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BPC_VehicleUpgrade_C_GetAccelerationInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.GetAdditionalLightInfo
// 0x0020 (0x0020 - 0x0000)
struct BPC_VehicleUpgrade_C_GetAdditionalLightInfo final
{
public:
	class UBPDA_AdditionalLight_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFullyUpgraded;                                   // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPDA_AdditionalLight_C*                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_GetAdditionalLightInfo) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_GetAdditionalLightInfo");
static_assert(sizeof(BPC_VehicleUpgrade_C_GetAdditionalLightInfo) == 0x000020, "Wrong size on BPC_VehicleUpgrade_C_GetAdditionalLightInfo");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAdditionalLightInfo, Info) == 0x000000, "Member 'BPC_VehicleUpgrade_C_GetAdditionalLightInfo::Info' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAdditionalLightInfo, Level) == 0x000008, "Member 'BPC_VehicleUpgrade_C_GetAdditionalLightInfo::Level' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAdditionalLightInfo, IsFullyUpgraded) == 0x00000C, "Member 'BPC_VehicleUpgrade_C_GetAdditionalLightInfo::IsFullyUpgraded' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAdditionalLightInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000D, "Member 'BPC_VehicleUpgrade_C_GetAdditionalLightInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAdditionalLightInfo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BPC_VehicleUpgrade_C_GetAdditionalLightInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetAdditionalLightInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BPC_VehicleUpgrade_C_GetAdditionalLightInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.GetArmorInfo
// 0x0020 (0x0020 - 0x0000)
struct BPC_VehicleUpgrade_C_GetArmorInfo final
{
public:
	class UBPDA_Armor_C*                          Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFullyUpgraded;                                   // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPDA_Armor_C*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_GetArmorInfo) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_GetArmorInfo");
static_assert(sizeof(BPC_VehicleUpgrade_C_GetArmorInfo) == 0x000020, "Wrong size on BPC_VehicleUpgrade_C_GetArmorInfo");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetArmorInfo, Info) == 0x000000, "Member 'BPC_VehicleUpgrade_C_GetArmorInfo::Info' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetArmorInfo, Level) == 0x000008, "Member 'BPC_VehicleUpgrade_C_GetArmorInfo::Level' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetArmorInfo, IsFullyUpgraded) == 0x00000C, "Member 'BPC_VehicleUpgrade_C_GetArmorInfo::IsFullyUpgraded' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetArmorInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000D, "Member 'BPC_VehicleUpgrade_C_GetArmorInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetArmorInfo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BPC_VehicleUpgrade_C_GetArmorInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetArmorInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BPC_VehicleUpgrade_C_GetArmorInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.GetBoostInfo
// 0x0020 (0x0020 - 0x0000)
struct BPC_VehicleUpgrade_C_GetBoostInfo final
{
public:
	class UBPDA_Boost_C*                          Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFullyUpgraded;                                   // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPDA_Boost_C*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_GetBoostInfo) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_GetBoostInfo");
static_assert(sizeof(BPC_VehicleUpgrade_C_GetBoostInfo) == 0x000020, "Wrong size on BPC_VehicleUpgrade_C_GetBoostInfo");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetBoostInfo, Info) == 0x000000, "Member 'BPC_VehicleUpgrade_C_GetBoostInfo::Info' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetBoostInfo, Level) == 0x000008, "Member 'BPC_VehicleUpgrade_C_GetBoostInfo::Level' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetBoostInfo, IsFullyUpgraded) == 0x00000C, "Member 'BPC_VehicleUpgrade_C_GetBoostInfo::IsFullyUpgraded' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetBoostInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000D, "Member 'BPC_VehicleUpgrade_C_GetBoostInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetBoostInfo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BPC_VehicleUpgrade_C_GetBoostInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetBoostInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BPC_VehicleUpgrade_C_GetBoostInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.GetFuelDecreaseSpeedInfo
// 0x0020 (0x0020 - 0x0000)
struct BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo final
{
public:
	class UBPDA_FuelDecreaseSpeed_C*              Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFullyUpgraded;                                   // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPDA_FuelDecreaseSpeed_C*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo");
static_assert(sizeof(BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo) == 0x000020, "Wrong size on BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo, Output) == 0x000000, "Member 'BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo::Output' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo, Level) == 0x000008, "Member 'BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo::Level' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo, IsFullyUpgraded) == 0x00000C, "Member 'BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo::IsFullyUpgraded' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000D, "Member 'BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BPC_VehicleUpgrade_C_GetFuelDecreaseSpeedInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.GetFuelMaxInfo
// 0x0020 (0x0020 - 0x0000)
struct BPC_VehicleUpgrade_C_GetFuelMaxInfo final
{
public:
	class UBPDA_FuelMax_C*                        Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFullyUpgraded;                                   // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPDA_FuelMax_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_GetFuelMaxInfo) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_GetFuelMaxInfo");
static_assert(sizeof(BPC_VehicleUpgrade_C_GetFuelMaxInfo) == 0x000020, "Wrong size on BPC_VehicleUpgrade_C_GetFuelMaxInfo");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelMaxInfo, Info) == 0x000000, "Member 'BPC_VehicleUpgrade_C_GetFuelMaxInfo::Info' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelMaxInfo, Level) == 0x000008, "Member 'BPC_VehicleUpgrade_C_GetFuelMaxInfo::Level' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelMaxInfo, IsFullyUpgraded) == 0x00000C, "Member 'BPC_VehicleUpgrade_C_GetFuelMaxInfo::IsFullyUpgraded' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelMaxInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000D, "Member 'BPC_VehicleUpgrade_C_GetFuelMaxInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelMaxInfo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BPC_VehicleUpgrade_C_GetFuelMaxInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetFuelMaxInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BPC_VehicleUpgrade_C_GetFuelMaxInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.GetInventoryInfo
// 0x0020 (0x0020 - 0x0000)
struct BPC_VehicleUpgrade_C_GetInventoryInfo final
{
public:
	class UBPDA_Inventory_C*                      Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFullyUpgraded;                                   // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPDA_Inventory_C*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_GetInventoryInfo) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_GetInventoryInfo");
static_assert(sizeof(BPC_VehicleUpgrade_C_GetInventoryInfo) == 0x000020, "Wrong size on BPC_VehicleUpgrade_C_GetInventoryInfo");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetInventoryInfo, Info) == 0x000000, "Member 'BPC_VehicleUpgrade_C_GetInventoryInfo::Info' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetInventoryInfo, Level) == 0x000008, "Member 'BPC_VehicleUpgrade_C_GetInventoryInfo::Level' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetInventoryInfo, IsFullyUpgraded) == 0x00000C, "Member 'BPC_VehicleUpgrade_C_GetInventoryInfo::IsFullyUpgraded' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetInventoryInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000D, "Member 'BPC_VehicleUpgrade_C_GetInventoryInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetInventoryInfo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BPC_VehicleUpgrade_C_GetInventoryInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetInventoryInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BPC_VehicleUpgrade_C_GetInventoryInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.GetIsolationInfo
// 0x0020 (0x0020 - 0x0000)
struct BPC_VehicleUpgrade_C_GetIsolationInfo final
{
public:
	class UBPDA_Isolation_C*                      Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFullyUpgraded;                                   // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPDA_Isolation_C*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_GetIsolationInfo) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_GetIsolationInfo");
static_assert(sizeof(BPC_VehicleUpgrade_C_GetIsolationInfo) == 0x000020, "Wrong size on BPC_VehicleUpgrade_C_GetIsolationInfo");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetIsolationInfo, Info) == 0x000000, "Member 'BPC_VehicleUpgrade_C_GetIsolationInfo::Info' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetIsolationInfo, Level) == 0x000008, "Member 'BPC_VehicleUpgrade_C_GetIsolationInfo::Level' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetIsolationInfo, IsFullyUpgraded) == 0x00000C, "Member 'BPC_VehicleUpgrade_C_GetIsolationInfo::IsFullyUpgraded' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetIsolationInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000D, "Member 'BPC_VehicleUpgrade_C_GetIsolationInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetIsolationInfo, CallFunc_Array_Get_Item) == 0x000010, "Member 'BPC_VehicleUpgrade_C_GetIsolationInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_GetIsolationInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BPC_VehicleUpgrade_C_GetIsolationInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.RemoveMetal
// 0x0020 (0x0020 - 0x0000)
struct BPC_VehicleUpgrade_C_RemoveMetal final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetDriver_Driver;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemByName_ReturnedCount;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_RemoveMetal) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_RemoveMetal");
static_assert(sizeof(BPC_VehicleUpgrade_C_RemoveMetal) == 0x000020, "Wrong size on BPC_VehicleUpgrade_C_RemoveMetal");
static_assert(offsetof(BPC_VehicleUpgrade_C_RemoveMetal, Count) == 0x000000, "Member 'BPC_VehicleUpgrade_C_RemoveMetal::Count' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_RemoveMetal, CallFunc_GetDriver_Driver) == 0x000008, "Member 'BPC_VehicleUpgrade_C_RemoveMetal::CallFunc_GetDriver_Driver' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_RemoveMetal, K2Node_DynamicCast_AsSurvival_Player) == 0x000010, "Member 'BPC_VehicleUpgrade_C_RemoveMetal::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_RemoveMetal, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPC_VehicleUpgrade_C_RemoveMetal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_RemoveMetal, CallFunc_GetItemByName_ReturnedCount) == 0x00001C, "Member 'BPC_VehicleUpgrade_C_RemoveMetal::CallFunc_GetItemByName_ReturnedCount' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.Upgrade
// 0x0068 (0x0068 - 0x0000)
struct BPC_VehicleUpgrade_C_Upgrade final
{
public:
	TArray<class UBPDA_BaseUpgrade_C*>            UpgradeArray;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         UpgradeIndex;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_Vehicle_C>          K2Node_DynamicCast_AsI_Vehicle;                    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetDriver_Driver;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   CallFunc_GetDriver_NewParam;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCountByName_ReturnedCount;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPDA_BaseUpgrade_C*                    CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBPDA_BaseUpgrade_C*                    CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_Upgrade) == 0x000008, "Wrong alignment on BPC_VehicleUpgrade_C_Upgrade");
static_assert(sizeof(BPC_VehicleUpgrade_C_Upgrade) == 0x000068, "Wrong size on BPC_VehicleUpgrade_C_Upgrade");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, UpgradeArray) == 0x000000, "Member 'BPC_VehicleUpgrade_C_Upgrade::UpgradeArray' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, UpgradeIndex) == 0x000010, "Member 'BPC_VehicleUpgrade_C_Upgrade::UpgradeIndex' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, Success) == 0x000014, "Member 'BPC_VehicleUpgrade_C_Upgrade::Success' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000015, "Member 'BPC_VehicleUpgrade_C_Upgrade::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, K2Node_DynamicCast_AsI_Vehicle) == 0x000018, "Member 'BPC_VehicleUpgrade_C_Upgrade::K2Node_DynamicCast_AsI_Vehicle' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPC_VehicleUpgrade_C_Upgrade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, CallFunc_GetDriver_Driver) == 0x000030, "Member 'BPC_VehicleUpgrade_C_Upgrade::CallFunc_GetDriver_Driver' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, CallFunc_GetDriver_NewParam) == 0x000038, "Member 'BPC_VehicleUpgrade_C_Upgrade::CallFunc_GetDriver_NewParam' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, K2Node_DynamicCast_AsSurvival_Player) == 0x000040, "Member 'BPC_VehicleUpgrade_C_Upgrade::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPC_VehicleUpgrade_C_Upgrade::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, CallFunc_GetItemCountByName_ReturnedCount) == 0x00004C, "Member 'BPC_VehicleUpgrade_C_Upgrade::CallFunc_GetItemCountByName_ReturnedCount' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, CallFunc_Array_Get_Item) == 0x000050, "Member 'BPC_VehicleUpgrade_C_Upgrade::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BPC_VehicleUpgrade_C_Upgrade::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_Upgrade, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'BPC_VehicleUpgrade_C_Upgrade::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.UpgradeAcceleration
// 0x0008 (0x0008 - 0x0000)
struct BPC_VehicleUpgrade_C_UpgradeAcceleration final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Upgrade_Success;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_UpgradeAcceleration) == 0x000004, "Wrong alignment on BPC_VehicleUpgrade_C_UpgradeAcceleration");
static_assert(sizeof(BPC_VehicleUpgrade_C_UpgradeAcceleration) == 0x000008, "Wrong size on BPC_VehicleUpgrade_C_UpgradeAcceleration");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeAcceleration, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BPC_VehicleUpgrade_C_UpgradeAcceleration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeAcceleration, CallFunc_Upgrade_Success) == 0x000004, "Member 'BPC_VehicleUpgrade_C_UpgradeAcceleration::CallFunc_Upgrade_Success' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.UpgradeAdditionalLight
// 0x0008 (0x0008 - 0x0000)
struct BPC_VehicleUpgrade_C_UpgradeAdditionalLight final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Upgrade_Success;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_UpgradeAdditionalLight) == 0x000004, "Wrong alignment on BPC_VehicleUpgrade_C_UpgradeAdditionalLight");
static_assert(sizeof(BPC_VehicleUpgrade_C_UpgradeAdditionalLight) == 0x000008, "Wrong size on BPC_VehicleUpgrade_C_UpgradeAdditionalLight");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeAdditionalLight, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BPC_VehicleUpgrade_C_UpgradeAdditionalLight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeAdditionalLight, CallFunc_Upgrade_Success) == 0x000004, "Member 'BPC_VehicleUpgrade_C_UpgradeAdditionalLight::CallFunc_Upgrade_Success' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.UpgradeArmor
// 0x0008 (0x0008 - 0x0000)
struct BPC_VehicleUpgrade_C_UpgradeArmor final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Upgrade_Success;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_UpgradeArmor) == 0x000004, "Wrong alignment on BPC_VehicleUpgrade_C_UpgradeArmor");
static_assert(sizeof(BPC_VehicleUpgrade_C_UpgradeArmor) == 0x000008, "Wrong size on BPC_VehicleUpgrade_C_UpgradeArmor");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeArmor, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BPC_VehicleUpgrade_C_UpgradeArmor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeArmor, CallFunc_Upgrade_Success) == 0x000004, "Member 'BPC_VehicleUpgrade_C_UpgradeArmor::CallFunc_Upgrade_Success' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.UpgradeBoost
// 0x0008 (0x0008 - 0x0000)
struct BPC_VehicleUpgrade_C_UpgradeBoost final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Upgrade_Success;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_UpgradeBoost) == 0x000004, "Wrong alignment on BPC_VehicleUpgrade_C_UpgradeBoost");
static_assert(sizeof(BPC_VehicleUpgrade_C_UpgradeBoost) == 0x000008, "Wrong size on BPC_VehicleUpgrade_C_UpgradeBoost");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeBoost, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BPC_VehicleUpgrade_C_UpgradeBoost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeBoost, CallFunc_Upgrade_Success) == 0x000004, "Member 'BPC_VehicleUpgrade_C_UpgradeBoost::CallFunc_Upgrade_Success' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.UpgradeFuelDecreaseSpeed
// 0x0008 (0x0008 - 0x0000)
struct BPC_VehicleUpgrade_C_UpgradeFuelDecreaseSpeed final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Upgrade_Success;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_UpgradeFuelDecreaseSpeed) == 0x000004, "Wrong alignment on BPC_VehicleUpgrade_C_UpgradeFuelDecreaseSpeed");
static_assert(sizeof(BPC_VehicleUpgrade_C_UpgradeFuelDecreaseSpeed) == 0x000008, "Wrong size on BPC_VehicleUpgrade_C_UpgradeFuelDecreaseSpeed");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeFuelDecreaseSpeed, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BPC_VehicleUpgrade_C_UpgradeFuelDecreaseSpeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeFuelDecreaseSpeed, CallFunc_Upgrade_Success) == 0x000004, "Member 'BPC_VehicleUpgrade_C_UpgradeFuelDecreaseSpeed::CallFunc_Upgrade_Success' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.UpgradeFuelMax
// 0x0008 (0x0008 - 0x0000)
struct BPC_VehicleUpgrade_C_UpgradeFuelMax final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Upgrade_Success;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_UpgradeFuelMax) == 0x000004, "Wrong alignment on BPC_VehicleUpgrade_C_UpgradeFuelMax");
static_assert(sizeof(BPC_VehicleUpgrade_C_UpgradeFuelMax) == 0x000008, "Wrong size on BPC_VehicleUpgrade_C_UpgradeFuelMax");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeFuelMax, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BPC_VehicleUpgrade_C_UpgradeFuelMax::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeFuelMax, CallFunc_Upgrade_Success) == 0x000004, "Member 'BPC_VehicleUpgrade_C_UpgradeFuelMax::CallFunc_Upgrade_Success' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.UpgradeInventory
// 0x0008 (0x0008 - 0x0000)
struct BPC_VehicleUpgrade_C_UpgradeInventory final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Upgrade_Success;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_UpgradeInventory) == 0x000004, "Wrong alignment on BPC_VehicleUpgrade_C_UpgradeInventory");
static_assert(sizeof(BPC_VehicleUpgrade_C_UpgradeInventory) == 0x000008, "Wrong size on BPC_VehicleUpgrade_C_UpgradeInventory");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BPC_VehicleUpgrade_C_UpgradeInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeInventory, CallFunc_Upgrade_Success) == 0x000004, "Member 'BPC_VehicleUpgrade_C_UpgradeInventory::CallFunc_Upgrade_Success' has a wrong offset!");

// Function BPC_VehicleUpgrade.BPC_VehicleUpgrade_C.UpgradeIsolation
// 0x0008 (0x0008 - 0x0000)
struct BPC_VehicleUpgrade_C_UpgradeIsolation final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Upgrade_Success;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_VehicleUpgrade_C_UpgradeIsolation) == 0x000004, "Wrong alignment on BPC_VehicleUpgrade_C_UpgradeIsolation");
static_assert(sizeof(BPC_VehicleUpgrade_C_UpgradeIsolation) == 0x000008, "Wrong size on BPC_VehicleUpgrade_C_UpgradeIsolation");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeIsolation, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BPC_VehicleUpgrade_C_UpgradeIsolation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_VehicleUpgrade_C_UpgradeIsolation, CallFunc_Upgrade_Success) == 0x000004, "Member 'BPC_VehicleUpgrade_C_UpgradeIsolation::CallFunc_Upgrade_Success' has a wrong offset!");

}

