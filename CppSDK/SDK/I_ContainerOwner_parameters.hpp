#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: I_ContainerOwner

#include "Basic.hpp"


namespace SDK::Params
{

// Function I_ContainerOwner.I_ContainerOwner_C.CanDrag
// 0x0010 (0x0010 - 0x0000)
struct I_ContainerOwner_C_CanDrag final
{
public:
	class UW_BaseSlot_C*                          Slot;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Can;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_ContainerOwner_C_CanDrag) == 0x000008, "Wrong alignment on I_ContainerOwner_C_CanDrag");
static_assert(sizeof(I_ContainerOwner_C_CanDrag) == 0x000010, "Wrong size on I_ContainerOwner_C_CanDrag");
static_assert(offsetof(I_ContainerOwner_C_CanDrag, Slot) == 0x000000, "Member 'I_ContainerOwner_C_CanDrag::Slot' has a wrong offset!");
static_assert(offsetof(I_ContainerOwner_C_CanDrag, Can) == 0x000008, "Member 'I_ContainerOwner_C_CanDrag::Can' has a wrong offset!");

// Function I_ContainerOwner.I_ContainerOwner_C.candrop
// 0x0010 (0x0010 - 0x0000)
struct I_ContainerOwner_C_Candrop final
{
public:
	class UW_BaseSlot_C*                          Slot;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Can;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_ContainerOwner_C_Candrop) == 0x000008, "Wrong alignment on I_ContainerOwner_C_Candrop");
static_assert(sizeof(I_ContainerOwner_C_Candrop) == 0x000010, "Wrong size on I_ContainerOwner_C_Candrop");
static_assert(offsetof(I_ContainerOwner_C_Candrop, Slot) == 0x000000, "Member 'I_ContainerOwner_C_Candrop::Slot' has a wrong offset!");
static_assert(offsetof(I_ContainerOwner_C_Candrop, Can) == 0x000008, "Member 'I_ContainerOwner_C_Candrop::Can' has a wrong offset!");

// Function I_ContainerOwner.I_ContainerOwner_C.MoveItemBetweenContainers
// 0x0010 (0x0010 - 0x0000)
struct I_ContainerOwner_C_MoveItemBetweenContainers final
{
public:
	class UW_BaseContainer_C*                     SenderContainer;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(I_ContainerOwner_C_MoveItemBetweenContainers) == 0x000008, "Wrong alignment on I_ContainerOwner_C_MoveItemBetweenContainers");
static_assert(sizeof(I_ContainerOwner_C_MoveItemBetweenContainers) == 0x000010, "Wrong size on I_ContainerOwner_C_MoveItemBetweenContainers");
static_assert(offsetof(I_ContainerOwner_C_MoveItemBetweenContainers, SenderContainer) == 0x000000, "Member 'I_ContainerOwner_C_MoveItemBetweenContainers::SenderContainer' has a wrong offset!");
static_assert(offsetof(I_ContainerOwner_C_MoveItemBetweenContainers, RecipientSlot) == 0x000008, "Member 'I_ContainerOwner_C_MoveItemBetweenContainers::RecipientSlot' has a wrong offset!");

}

