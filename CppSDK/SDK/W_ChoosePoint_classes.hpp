#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ChoosePoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ChoosePoint.W_ChoosePoint_C
// 0x0048 (0x02C8 - 0x0280)
class UW_ChoosePoint_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_140;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      CircularThrobber_52;                               // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Hint;                                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_13;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PointEntry_C*                        W_PointEntry;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PointEntry_C*                        W_PointEntry_37;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PointEntry_C*                        W_PointEntry_75;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bLock;                                             // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpened;                                          // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Button_140_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void ExecuteUbergraph_W_ChoosePoint(int32 EntryPoint);
	void Hide();
	void OnChoosePoint();
	void OnChooseRegion(class FName Region);
	void OnClickRegion(class FName Region);
	void OnConnectionFail();
	void Reset();
	void SetHint(const class FText& InText);
	void Show();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ChoosePoint_C">();
	}
	static class UW_ChoosePoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ChoosePoint_C>();
	}
};
static_assert(alignof(UW_ChoosePoint_C) == 0x000008, "Wrong alignment on UW_ChoosePoint_C");
static_assert(sizeof(UW_ChoosePoint_C) == 0x0002C8, "Wrong size on UW_ChoosePoint_C");
static_assert(offsetof(UW_ChoosePoint_C, UberGraphFrame) == 0x000280, "Member 'UW_ChoosePoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ChoosePoint_C, Button_140) == 0x000288, "Member 'UW_ChoosePoint_C::Button_140' has a wrong offset!");
static_assert(offsetof(UW_ChoosePoint_C, CircularThrobber_52) == 0x000290, "Member 'UW_ChoosePoint_C::CircularThrobber_52' has a wrong offset!");
static_assert(offsetof(UW_ChoosePoint_C, Hint) == 0x000298, "Member 'UW_ChoosePoint_C::Hint' has a wrong offset!");
static_assert(offsetof(UW_ChoosePoint_C, Image_13) == 0x0002A0, "Member 'UW_ChoosePoint_C::Image_13' has a wrong offset!");
static_assert(offsetof(UW_ChoosePoint_C, W_PointEntry) == 0x0002A8, "Member 'UW_ChoosePoint_C::W_PointEntry' has a wrong offset!");
static_assert(offsetof(UW_ChoosePoint_C, W_PointEntry_37) == 0x0002B0, "Member 'UW_ChoosePoint_C::W_PointEntry_37' has a wrong offset!");
static_assert(offsetof(UW_ChoosePoint_C, W_PointEntry_75) == 0x0002B8, "Member 'UW_ChoosePoint_C::W_PointEntry_75' has a wrong offset!");
static_assert(offsetof(UW_ChoosePoint_C, bLock) == 0x0002C0, "Member 'UW_ChoosePoint_C::bLock' has a wrong offset!");
static_assert(offsetof(UW_ChoosePoint_C, IsOpened) == 0x0002C1, "Member 'UW_ChoosePoint_C::IsOpened' has a wrong offset!");

}

