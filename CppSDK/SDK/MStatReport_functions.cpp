#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MStatReport

#include "Basic.hpp"

#include "MStatReport_classes.hpp"
#include "MStatReport_parameters.hpp"


namespace SDK
{

// Function MStatReport.MStatReport_C.MStat Add Position to Report Properties
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InVector                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<class FString, class FString>      ReportPropertiesRef                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMStatReport_C::MStat_Add_Position_to_Report_Properties(struct FVector& InVector, TMap<class FString, class FString>& ReportPropertiesRef, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MStatReport_C", "MStat Add Position to Report Properties");

	Params::MStatReport_C_MStat_Add_Position_to_Report_Properties Parms{};

	Parms.InVector = std::move(InVector);
	Parms.ReportPropertiesRef = std::move(ReportPropertiesRef);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	InVector = std::move(Parms.InVector);
	ReportPropertiesRef = std::move(Parms.ReportPropertiesRef);
}


// Function MStatReport.MStatReport_C.Mstat Report Death
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InDeathPosition                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMStatReport_C::Mstat_Report_Death(struct FVector& InDeathPosition, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MStatReport_C", "Mstat Report Death");

	Params::MStatReport_C_Mstat_Report_Death Parms{};

	Parms.InDeathPosition = std::move(InDeathPosition);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	InDeathPosition = std::move(Parms.InDeathPosition);
}


// Function MStatReport.MStatReport_C.Mstat Report Enter Level
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InPlace                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           InFrom                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector                          InToPosition                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UMStatReport_C::Mstat_Report_Enter_Level(const class FString& InPlace, const class FString& InFrom, struct FVector& InToPosition, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MStatReport_C", "Mstat Report Enter Level");

	Params::MStatReport_C_Mstat_Report_Enter_Level Parms{};

	Parms.InPlace = std::move(InPlace);
	Parms.InFrom = std::move(InFrom);
	Parms.InToPosition = std::move(InToPosition);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	InToPosition = std::move(Parms.InToPosition);
}

}

