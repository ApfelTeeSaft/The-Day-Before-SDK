#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Optimized_ABP_Zombie

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Optimized_ABP_Zombie.Optimized_ABP_Zombie_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Optimized_ABP_Zombie_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Optimized_ABP_Zombie_C_AnimGraph) == 0x000008, "Wrong alignment on Optimized_ABP_Zombie_C_AnimGraph");
static_assert(sizeof(Optimized_ABP_Zombie_C_AnimGraph) == 0x000010, "Wrong size on Optimized_ABP_Zombie_C_AnimGraph");
static_assert(offsetof(Optimized_ABP_Zombie_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'Optimized_ABP_Zombie_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function Optimized_ABP_Zombie.Optimized_ABP_Zombie_C.CalculateLeaning
// 0x0068 (0x0068 - 0x0000)
struct Optimized_ABP_Zombie_C_CalculateLeaning final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Optimized_ABP_Zombie_C_CalculateLeaning) == 0x000008, "Wrong alignment on Optimized_ABP_Zombie_C_CalculateLeaning");
static_assert(sizeof(Optimized_ABP_Zombie_C_CalculateLeaning) == 0x000068, "Wrong size on Optimized_ABP_Zombie_C_CalculateLeaning");
static_assert(offsetof(Optimized_ABP_Zombie_C_CalculateLeaning, DeltaTime) == 0x000000, "Member 'Optimized_ABP_Zombie_C_CalculateLeaning::DeltaTime' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_CalculateLeaning, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'Optimized_ABP_Zombie_C_CalculateLeaning::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_CalculateLeaning, CallFunc_FInterpTo_ReturnValue) == 0x000010, "Member 'Optimized_ABP_Zombie_C_CalculateLeaning::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_CalculateLeaning, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000018, "Member 'Optimized_ABP_Zombie_C_CalculateLeaning::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_CalculateLeaning, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'Optimized_ABP_Zombie_C_CalculateLeaning::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_CalculateLeaning, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'Optimized_ABP_Zombie_C_CalculateLeaning::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_CalculateLeaning, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'Optimized_ABP_Zombie_C_CalculateLeaning::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_CalculateLeaning, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'Optimized_ABP_Zombie_C_CalculateLeaning::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_CalculateLeaning, CallFunc_SafeDivide_ReturnValue) == 0x000058, "Member 'Optimized_ABP_Zombie_C_CalculateLeaning::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_CalculateLeaning, CallFunc_SafeDivide_A_ImplicitCast) == 0x000060, "Member 'Optimized_ABP_Zombie_C_CalculateLeaning::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");

// Function Optimized_ABP_Zombie.Optimized_ABP_Zombie_C.ExecuteUbergraph_Optimized_ABP_Zombie
// 0x0004 (0x0004 - 0x0000)
struct Optimized_ABP_Zombie_C_ExecuteUbergraph_Optimized_ABP_Zombie final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Optimized_ABP_Zombie_C_ExecuteUbergraph_Optimized_ABP_Zombie) == 0x000004, "Wrong alignment on Optimized_ABP_Zombie_C_ExecuteUbergraph_Optimized_ABP_Zombie");
static_assert(sizeof(Optimized_ABP_Zombie_C_ExecuteUbergraph_Optimized_ABP_Zombie) == 0x000004, "Wrong size on Optimized_ABP_Zombie_C_ExecuteUbergraph_Optimized_ABP_Zombie");
static_assert(offsetof(Optimized_ABP_Zombie_C_ExecuteUbergraph_Optimized_ABP_Zombie, EntryPoint) == 0x000000, "Member 'Optimized_ABP_Zombie_C_ExecuteUbergraph_Optimized_ABP_Zombie::EntryPoint' has a wrong offset!");

// Function Optimized_ABP_Zombie.Optimized_ABP_Zombie_C.InterpolateJointTargetLocations
// 0x0038 (0x0038 - 0x0000)
struct Optimized_ABP_Zombie_C_InterpolateJointTargetLocations final
{
public:
	float                                         CallFunc_GetDeltaSeconds_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeltaSeconds_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Optimized_ABP_Zombie_C_InterpolateJointTargetLocations) == 0x000008, "Wrong alignment on Optimized_ABP_Zombie_C_InterpolateJointTargetLocations");
static_assert(sizeof(Optimized_ABP_Zombie_C_InterpolateJointTargetLocations) == 0x000038, "Wrong size on Optimized_ABP_Zombie_C_InterpolateJointTargetLocations");
static_assert(offsetof(Optimized_ABP_Zombie_C_InterpolateJointTargetLocations, CallFunc_GetDeltaSeconds_ReturnValue) == 0x000000, "Member 'Optimized_ABP_Zombie_C_InterpolateJointTargetLocations::CallFunc_GetDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_InterpolateJointTargetLocations, CallFunc_GetDeltaSeconds_ReturnValue_1) == 0x000004, "Member 'Optimized_ABP_Zombie_C_InterpolateJointTargetLocations::CallFunc_GetDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_InterpolateJointTargetLocations, CallFunc_VInterpTo_ReturnValue) == 0x000008, "Member 'Optimized_ABP_Zombie_C_InterpolateJointTargetLocations::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_InterpolateJointTargetLocations, CallFunc_VInterpTo_ReturnValue_1) == 0x000020, "Member 'Optimized_ABP_Zombie_C_InterpolateJointTargetLocations::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");

// Function Optimized_ABP_Zombie.Optimized_ABP_Zombie_C.OnSetTargetActor
// 0x0010 (0x0010 - 0x0000)
struct Optimized_ABP_Zombie_C_OnSetTargetActor final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Optimized_ABP_Zombie_C_OnSetTargetActor) == 0x000008, "Wrong alignment on Optimized_ABP_Zombie_C_OnSetTargetActor");
static_assert(sizeof(Optimized_ABP_Zombie_C_OnSetTargetActor) == 0x000010, "Wrong size on Optimized_ABP_Zombie_C_OnSetTargetActor");
static_assert(offsetof(Optimized_ABP_Zombie_C_OnSetTargetActor, TargetActor) == 0x000000, "Member 'Optimized_ABP_Zombie_C_OnSetTargetActor::TargetActor' has a wrong offset!");
static_assert(offsetof(Optimized_ABP_Zombie_C_OnSetTargetActor, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Optimized_ABP_Zombie_C_OnSetTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Optimized_ABP_Zombie.Optimized_ABP_Zombie_C.StartCalculateLeaning
// 0x0018 (0x0018 - 0x0000)
struct Optimized_ABP_Zombie_C_StartCalculateLeaning final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Optimized_ABP_Zombie_C_StartCalculateLeaning) == 0x000008, "Wrong alignment on Optimized_ABP_Zombie_C_StartCalculateLeaning");
static_assert(sizeof(Optimized_ABP_Zombie_C_StartCalculateLeaning) == 0x000018, "Wrong size on Optimized_ABP_Zombie_C_StartCalculateLeaning");
static_assert(offsetof(Optimized_ABP_Zombie_C_StartCalculateLeaning, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'Optimized_ABP_Zombie_C_StartCalculateLeaning::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");

}

