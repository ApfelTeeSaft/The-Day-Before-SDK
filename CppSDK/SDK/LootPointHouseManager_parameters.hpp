#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LootPointHouseManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DefaultItemInfo_structs.hpp"
#include "HouseManagerEnum_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"


namespace SDK::Params
{

// Function LootPointHouseManager.LootPointHouseManager_C.ActivateLootpoints
// 0x0100 (0x0100 - 0x0000)
struct LootPointHouseManager_C_ActivateLootpoints final
{
public:
	TArray<class ALootPoint_C*>                   Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Param_HiddenLootPoints;                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           Local_CurrentLootpoint;                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBoxComponent*                          CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  CallFunc_K2_GetComponentsByClass_ReturnValue_2;    // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBoxComponent*                          CallFunc_Array_Get_Item_3;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue_3;    // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_4;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_ActivateLootpoints) == 0x000008, "Wrong alignment on LootPointHouseManager_C_ActivateLootpoints");
static_assert(sizeof(LootPointHouseManager_C_ActivateLootpoints) == 0x000100, "Wrong size on LootPointHouseManager_C_ActivateLootpoints");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Array) == 0x000000, "Member 'LootPointHouseManager_C_ActivateLootpoints::Array' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Param_HiddenLootPoints) == 0x000010, "Member 'LootPointHouseManager_C_ActivateLootpoints::Param_HiddenLootPoints' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Local_CurrentLootpoint) == 0x000018, "Member 'LootPointHouseManager_C_ActivateLootpoints::Local_CurrentLootpoint' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'LootPointHouseManager_C_ActivateLootpoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'LootPointHouseManager_C_ActivateLootpoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'LootPointHouseManager_C_ActivateLootpoints::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'LootPointHouseManager_C_ActivateLootpoints::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Temp_int_Array_Index_Variable_2) == 0x00003C, "Member 'LootPointHouseManager_C_ActivateLootpoints::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Temp_int_Loop_Counter_Variable_2) == 0x000040, "Member 'LootPointHouseManager_C_ActivateLootpoints::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Temp_int_Loop_Counter_Variable_3) == 0x000044, "Member 'LootPointHouseManager_C_ActivateLootpoints::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Add_IntInt_ReturnValue_3) == 0x000050, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Temp_int_Array_Index_Variable_3) == 0x000054, "Member 'LootPointHouseManager_C_ActivateLootpoints::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Temp_int_Array_Index_Variable_4) == 0x000058, "Member 'LootPointHouseManager_C_ActivateLootpoints::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Array_Get_Item) == 0x000060, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000070, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000088, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000AC, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_K2_GetComponentsByClass_ReturnValue_2) == 0x0000B0, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_K2_GetComponentsByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Array_Get_Item_3) == 0x0000C0, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Array_Length_ReturnValue_3) == 0x0000C8, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000CC, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_K2_GetComponentsByClass_ReturnValue_3) == 0x0000D0, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_K2_GetComponentsByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Array_Get_Item_4) == 0x0000E0, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Array_Length_ReturnValue_4) == 0x0000E8, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000EC, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, Temp_int_Loop_Counter_Variable_4) == 0x0000F0, "Member 'LootPointHouseManager_C_ActivateLootpoints::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Less_IntInt_ReturnValue_5) == 0x0000F4, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ActivateLootpoints, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000F8, "Member 'LootPointHouseManager_C_ActivateLootpoints::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'LootPointHouseManager_C_BndEvt__LootPointHouseManager_BoxCheckPlayerDebug_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.CloseAllLootPoints
// 0x0080 (0x0080 - 0x0000)
struct LootPointHouseManager_C_CloseAllLootPoints final
{
public:
	class ALootPoint_C*                           LootpointInProcess;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_CloseAllLootPoints) == 0x000008, "Wrong alignment on LootPointHouseManager_C_CloseAllLootPoints");
static_assert(sizeof(LootPointHouseManager_C_CloseAllLootPoints) == 0x000080, "Wrong size on LootPointHouseManager_C_CloseAllLootPoints");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, LootpointInProcess) == 0x000000, "Member 'LootPointHouseManager_C_CloseAllLootPoints::LootpointInProcess' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, Temp_int_Array_Index_Variable) == 0x000008, "Member 'LootPointHouseManager_C_CloseAllLootPoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'LootPointHouseManager_C_CloseAllLootPoints::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'LootPointHouseManager_C_CloseAllLootPoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'LootPointHouseManager_C_CloseAllLootPoints::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'LootPointHouseManager_C_CloseAllLootPoints::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, Temp_int_Array_Index_Variable_2) == 0x000024, "Member 'LootPointHouseManager_C_CloseAllLootPoints::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, Temp_int_Loop_Counter_Variable_2) == 0x000028, "Member 'LootPointHouseManager_C_CloseAllLootPoints::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Array_Get_Item) == 0x000040, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000048, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_Less_IntInt_ReturnValue_2) == 0x00007D, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_CloseAllLootPoints, CallFunc_BooleanAND_ReturnValue) == 0x00007E, "Member 'LootPointHouseManager_C_CloseAllLootPoints::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.ExecuteUbergraph_LootPointHouseManager
// 0x0458 (0x0458 - 0x0000)
struct LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NeedReset;                      // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x1];                                       // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x1];                                      // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_1;                         // 0x0120(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           CallFunc_Array_Get_Item_2;                         // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue_1; // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3[0x1];                                      // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF[0x1];                                      // 0x01CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_HiddenLootPoints_1;             // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_3;                         // 0x01E0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_HiddenLootPoints;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           CallFunc_Array_Get_Item_4;                         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           CallFunc_Array_Get_Item_5;                         // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerPausedHandle_ReturnValue;       // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x2];                                      // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x02B8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CA[0x6];                                      // 0x03CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x03D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E6[0x2];                                      // 0x03E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHouseManagerEnum                             Temp_byte_Variable;                                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_PercentCurrentItemsFunc_Output_Get;       // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0420(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class ALootPoint_C*>                   CallFunc_GetLootpointsInBox_Result;                // 0x0428(0x0010)(ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALootPoint_C*                           CallFunc_Array_Get_Item_6;                         // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44E[0x2];                                      // 0x044E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager) == 0x000008, "Wrong alignment on LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager");
static_assert(sizeof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager) == 0x000458, "Wrong size on LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, EntryPoint) == 0x000000, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Array_Index_Variable) == 0x000010, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_HasAuthority_ReturnValue) == 0x000014, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_HasAuthority_ReturnValue_1) == 0x000015, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_HasAuthority_ReturnValue_2) == 0x000016, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_IsClosed_Variable) == 0x000017, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_Has_Been_Initd_Variable_1) == 0x000019, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_IsClosed_Variable_1) == 0x000028, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000029, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Loop_Counter_Variable_2) == 0x00003C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_Event_DeltaSeconds) == 0x000044, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_GetComponentBounds_Origin) == 0x000048, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_GetComponentBounds_BoxExtent) == 0x000060, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_GetComponentBounds_SphereRadius) == 0x000078, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x00007C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_Has_Been_Initd_Variable_2) == 0x00008C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_CustomEvent_NeedReset) == 0x00008D, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_CustomEvent_NeedReset' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000090, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_IsClosed_Variable_2) == 0x000098, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Loop_Counter_Variable_3) == 0x0000A0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A4, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Array_Index_Variable_2) == 0x0000A8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_BooleanAND_ReturnValue) == 0x0000B1, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0000B2, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Map_Length_ReturnValue) == 0x0000B4, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Array_Index_Variable_3) == 0x0000B8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000BC, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_FTrunc_ReturnValue) == 0x0000C0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_SelectInt_ReturnValue) == 0x0000C4, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Map_Length_ReturnValue_1) == 0x0000C8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000CC, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_FTrunc_ReturnValue_1) == 0x0000D0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_SelectInt_ReturnValue_1) == 0x0000D4, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000D8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Array_Index_Variable_4) == 0x0000F0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x000100, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x000101, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000102, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue_2) == 0x000104, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_BooleanOR_ReturnValue) == 0x000108, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue_4) == 0x00010C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue_5) == 0x000110, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000118, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue_3) == 0x000188, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Loop_Counter_Variable_4) == 0x00018C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Array_Index_Variable_5) == 0x000190, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Get_Item_2) == 0x000198, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001A0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_GetCollisionResponseToChannel_ReturnValue_1) == 0x0001A1, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_GetCollisionResponseToChannel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001A2, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue_4) == 0x0001A4, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_BooleanOR_ReturnValue_1) == 0x0001A8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue_6) == 0x0001AC, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue_7) == 0x0001B0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0001B8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue_5) == 0x0001C0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C4, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue_8) == 0x0001C8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0001CC, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_SwitchEnum_CmpSuccess) == 0x0001CD, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001CE, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0001D0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001D4, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_CustomEvent_HiddenLootPoints_1) == 0x0001D8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_CustomEvent_HiddenLootPoints_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Array_Index_Variable_6) == 0x0001DC, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Get_Item_3) == 0x0001E0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_CustomEvent_HiddenLootPoints) == 0x000248, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_CustomEvent_HiddenLootPoints' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Get_Item_4) == 0x000250, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue_6) == 0x000258, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Less_IntInt_ReturnValue_2) == 0x00025C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Loop_Counter_Variable_5) == 0x000260, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Get_Item_5) == 0x000268, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Less_IntInt_ReturnValue_3) == 0x000270, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue_9) == 0x000274, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_BooleanAND_ReturnValue_1) == 0x000278, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue_7) == 0x00027C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Less_IntInt_ReturnValue_4) == 0x000280, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_K2_IsTimerPausedHandle_ReturnValue) == 0x000281, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_K2_IsTimerPausedHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue_8) == 0x000284, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000288, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x000289, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Loop_Counter_Variable_6) == 0x00028C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Less_IntInt_ReturnValue_5) == 0x000290, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Add_IntInt_ReturnValue_10) == 0x000294, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000298, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0002A0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0002A8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0002B0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_ComponentBoundEvent_bFromSweep) == 0x0002B4, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_ComponentBoundEvent_SweepResult) == 0x0002B8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0003A0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_ComponentBoundEvent_OtherActor) == 0x0003A8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_ComponentBoundEvent_OtherComp) == 0x0003B0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0003B8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_DynamicCast_AsSurvival_Player) == 0x0003C0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_DynamicCast_bSuccess) == 0x0003C8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_IsLocallyControlled_ReturnValue) == 0x0003C9, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0003D0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue_9) == 0x0003E0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Greater_IntInt_ReturnValue) == 0x0003E4, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_Has_Been_Initd_Variable_3) == 0x0003E5, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_int_Variable) == 0x0003E8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0003F0, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003F8, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_byte_Variable) == 0x000400, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_FFloor_ReturnValue) == 0x000404, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Subtract_IntInt_ReturnValue) == 0x000408, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, K2Node_Select_Default) == 0x00040C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000410, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_PercentCurrentItemsFunc_Output_Get) == 0x000418, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_PercentCurrentItemsFunc_Output_Get' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000420, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_GetLootpointsInBox_Result) == 0x000428, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_GetLootpointsInBox_Result' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000438, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Get_Item_6) == 0x000440, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Array_Length_ReturnValue_10) == 0x000448, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_Less_IntInt_ReturnValue_6) == 0x00044C, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, Temp_bool_IsClosed_Variable_3) == 0x00044D, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000450, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x000454, "Member 'LootPointHouseManager_C_ExecuteUbergraph_LootPointHouseManager::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.GetLootpointsInBox
// 0x0068 (0x0068 - 0x0000)
struct LootPointHouseManager_C_GetLootpointsInBox final
{
public:
	TArray<class ALootPoint_C*>                   Result;                                            // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ALootPoint_C*>                   ResultArray;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           K2Node_DynamicCast_AsLoot_Point;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_GetLootpointsInBox) == 0x000008, "Wrong alignment on LootPointHouseManager_C_GetLootpointsInBox");
static_assert(sizeof(LootPointHouseManager_C_GetLootpointsInBox) == 0x000068, "Wrong size on LootPointHouseManager_C_GetLootpointsInBox");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, Result) == 0x000000, "Member 'LootPointHouseManager_C_GetLootpointsInBox::Result' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, ResultArray) == 0x000010, "Member 'LootPointHouseManager_C_GetLootpointsInBox::ResultArray' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, Temp_int_Array_Index_Variable) == 0x000020, "Member 'LootPointHouseManager_C_GetLootpointsInBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'LootPointHouseManager_C_GetLootpointsInBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'LootPointHouseManager_C_GetLootpointsInBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000030, "Member 'LootPointHouseManager_C_GetLootpointsInBox::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'LootPointHouseManager_C_GetLootpointsInBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, CallFunc_Array_Get_Item) == 0x000048, "Member 'LootPointHouseManager_C_GetLootpointsInBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'LootPointHouseManager_C_GetLootpointsInBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, K2Node_DynamicCast_AsLoot_Point) == 0x000058, "Member 'LootPointHouseManager_C_GetLootpointsInBox::K2Node_DynamicCast_AsLoot_Point' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'LootPointHouseManager_C_GetLootpointsInBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_GetLootpointsInBox, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'LootPointHouseManager_C_GetLootpointsInBox::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.HiddenLootClient
// 0x0004 (0x0004 - 0x0000)
struct LootPointHouseManager_C_HiddenLootClient final
{
public:
	int32                                         Param_HiddenLootPoints;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_HiddenLootClient) == 0x000004, "Wrong alignment on LootPointHouseManager_C_HiddenLootClient");
static_assert(sizeof(LootPointHouseManager_C_HiddenLootClient) == 0x000004, "Wrong size on LootPointHouseManager_C_HiddenLootClient");
static_assert(offsetof(LootPointHouseManager_C_HiddenLootClient, Param_HiddenLootPoints) == 0x000000, "Member 'LootPointHouseManager_C_HiddenLootClient::Param_HiddenLootPoints' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.HiddenLootMulti
// 0x0004 (0x0004 - 0x0000)
struct LootPointHouseManager_C_HiddenLootMulti final
{
public:
	int32                                         Param_HiddenLootPoints;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_HiddenLootMulti) == 0x000004, "Wrong alignment on LootPointHouseManager_C_HiddenLootMulti");
static_assert(sizeof(LootPointHouseManager_C_HiddenLootMulti) == 0x000004, "Wrong size on LootPointHouseManager_C_HiddenLootMulti");
static_assert(offsetof(LootPointHouseManager_C_HiddenLootMulti, Param_HiddenLootPoints) == 0x000000, "Member 'LootPointHouseManager_C_HiddenLootMulti::Param_HiddenLootPoints' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.InitChanceLootPoints
// 0x00C8 (0x00C8 - 0x0000)
struct LootPointHouseManager_C_InitChanceLootPoints final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_3;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_InitChanceLootPoints) == 0x000004, "Wrong alignment on LootPointHouseManager_C_InitChanceLootPoints");
static_assert(sizeof(LootPointHouseManager_C_InitChanceLootPoints) == 0x0000C8, "Wrong size on LootPointHouseManager_C_InitChanceLootPoints");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_int_Loop_Counter_Variable_2) == 0x000018, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_int_Loop_Counter_Variable_3) == 0x000024, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00002C, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Not_PreBool_ReturnValue_1) == 0x000034, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_int_Array_Index_Variable_2) == 0x000038, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_int_Variable) == 0x00003C, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Add_IntInt_ReturnValue_4) == 0x000040, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_bool_True_if_break_was_hit_Variable_2) == 0x000044, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Not_PreBool_ReturnValue_2) == 0x000045, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_int_Array_Index_Variable_3) == 0x000048, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Get_Item) == 0x00004C, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Divide_IntInt_ReturnValue) == 0x00005C, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Length_ReturnValue_2) == 0x000060, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Length_ReturnValue_3) == 0x000068, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00006C, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Length_ReturnValue_4) == 0x000070, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000074, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Get_Item_1) == 0x00007C, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Length_ReturnValue_5) == 0x000080, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Add_ReturnValue_1) == 0x000084, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_BooleanAND_ReturnValue_1) == 0x000089, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00008A, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Add_IntInt_ReturnValue_5) == 0x00008C, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Length_ReturnValue_6) == 0x000094, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_RemoveItem_ReturnValue) == 0x000098, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Less_IntInt_ReturnValue_2) == 0x000099, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Add_ReturnValue_2) == 0x00009C, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, Temp_bool_True_if_break_was_hit_Variable_3) == 0x0000A0, "Member 'LootPointHouseManager_C_InitChanceLootPoints::Temp_bool_True_if_break_was_hit_Variable_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000A1, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A2, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000A4, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Get_Item_3) == 0x0000A8, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Length_ReturnValue_7) == 0x0000AC, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0000B0, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000B1, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Add_ReturnValue_3) == 0x0000B4, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_BooleanAND_ReturnValue_3) == 0x0000B8, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0000B9, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x0000BA, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0000BB, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000BC, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_Array_Add_ReturnValue_4) == 0x0000C0, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitChanceLootPoints, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'LootPointHouseManager_C_InitChanceLootPoints::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.InitLootpoints
// 0x00C8 (0x00C8 - 0x0000)
struct LootPointHouseManager_C_InitLootpoints final
{
public:
	int32                                         CurNumLootPoints;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           LootpointInProcess;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       CallFunc_Array_Get_Item;                           // 0x0058(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALootPoint_C*                           CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_InitLootpoints) == 0x000008, "Wrong alignment on LootPointHouseManager_C_InitLootpoints");
static_assert(sizeof(LootPointHouseManager_C_InitLootpoints) == 0x0000C8, "Wrong size on LootPointHouseManager_C_InitLootpoints");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CurNumLootPoints) == 0x000000, "Member 'LootPointHouseManager_C_InitLootpoints::CurNumLootPoints' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, LootpointInProcess) == 0x000008, "Member 'LootPointHouseManager_C_InitLootpoints::LootpointInProcess' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, Temp_int_Array_Index_Variable) == 0x000010, "Member 'LootPointHouseManager_C_InitLootpoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'LootPointHouseManager_C_InitLootpoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'LootPointHouseManager_C_InitLootpoints::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_FTrunc_ReturnValue) == 0x000050, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Array_Get_Item) == 0x000058, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Array_Add_ReturnValue_1) == 0x0000A4, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, Temp_int_Loop_Counter_Variable_1) == 0x0000B4, "Member 'LootPointHouseManager_C_InitLootpoints::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000B8, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B9, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_InitLootpoints, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000C0, "Member 'LootPointHouseManager_C_InitLootpoints::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.MultiReset
// 0x0001 (0x0001 - 0x0000)
struct LootPointHouseManager_C_MultiReset final
{
public:
	bool                                          NeedReset;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_MultiReset) == 0x000001, "Wrong alignment on LootPointHouseManager_C_MultiReset");
static_assert(sizeof(LootPointHouseManager_C_MultiReset) == 0x000001, "Wrong size on LootPointHouseManager_C_MultiReset");
static_assert(offsetof(LootPointHouseManager_C_MultiReset, NeedReset) == 0x000000, "Member 'LootPointHouseManager_C_MultiReset::NeedReset' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.OpenAllDoors_Client
// 0x00A0 (0x00A0 - 0x0000)
struct LootPointHouseManager_C_OpenAllDoors_Client final
{
public:
	class ALootPoint_C*                           Local_CurrentLootpoint;                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class ALootPoint_C*>                   LootpointsInBox;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UBoxComponent*>                  CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ALootPoint_C*>                   CallFunc_GetLootpointsInBox_Result;                // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_OpenAllDoors_Client) == 0x000008, "Wrong alignment on LootPointHouseManager_C_OpenAllDoors_Client");
static_assert(sizeof(LootPointHouseManager_C_OpenAllDoors_Client) == 0x0000A0, "Wrong size on LootPointHouseManager_C_OpenAllDoors_Client");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, Local_CurrentLootpoint) == 0x000000, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::Local_CurrentLootpoint' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, LootpointsInBox) == 0x000008, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::LootpointsInBox' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, Temp_int_Array_Index_Variable) == 0x000020, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Array_Get_Item) == 0x000038, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000048, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000058, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Array_Length_ReturnValue_2) == 0x00007C, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, Temp_int_Loop_Counter_Variable_2) == 0x000084, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_GetLootpointsInBox_Result) == 0x000088, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_GetLootpointsInBox_Result' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Less_IntInt_ReturnValue_2) == 0x000098, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_OpenAllDoors_Client, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'LootPointHouseManager_C_OpenAllDoors_Client::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.PercentCurrentItemsFunc
// 0x0068 (0x0068 - 0x0000)
struct LootPointHouseManager_C_PercentCurrentItemsFunc final
{
public:
	double                                        Output_Get;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_2;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_PercentCurrentItemsFunc) == 0x000008, "Wrong alignment on LootPointHouseManager_C_PercentCurrentItemsFunc");
static_assert(sizeof(LootPointHouseManager_C_PercentCurrentItemsFunc) == 0x000068, "Wrong size on LootPointHouseManager_C_PercentCurrentItemsFunc");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, Output_Get) == 0x000000, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::Output_Get' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, Temp_int_Variable) == 0x000008, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000010, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000034, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000039, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_Conv_BoolToInt_ReturnValue_1) == 0x00003C, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_Conv_BoolToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_Conv_BoolToInt_ReturnValue_2) == 0x000040, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_Conv_BoolToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, K2Node_Select_Default) == 0x000050, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentCurrentItemsFunc, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'LootPointHouseManager_C_PercentCurrentItemsFunc::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.PercentNotHidden
// 0x0030 (0x0030 - 0x0000)
struct LootPointHouseManager_C_PercentNotHidden final
{
public:
	int32                                         RandomPercentLocal;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Random_OutItem;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Random_OutItem_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutItem_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutItem_3;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_PercentNotHidden) == 0x000004, "Wrong alignment on LootPointHouseManager_C_PercentNotHidden");
static_assert(sizeof(LootPointHouseManager_C_PercentNotHidden) == 0x000030, "Wrong size on LootPointHouseManager_C_PercentNotHidden");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, RandomPercentLocal) == 0x000000, "Member 'LootPointHouseManager_C_PercentNotHidden::RandomPercentLocal' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Less_IntInt_ReturnValue) == 0x000004, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Array_Random_OutItem) == 0x000008, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Array_Random_OutIndex) == 0x00000C, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Less_IntInt_ReturnValue_1) == 0x000010, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Less_IntInt_ReturnValue_2) == 0x000011, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Array_Random_OutItem_1) == 0x000014, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Array_Random_OutIndex_1) == 0x000018, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Array_Random_OutItem_2) == 0x00001C, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Array_Random_OutItem_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Array_Random_OutIndex_2) == 0x000020, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Array_Random_OutIndex_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_RandomInteger_ReturnValue) == 0x000024, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Array_Random_OutItem_3) == 0x000028, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Array_Random_OutItem_3' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_PercentNotHidden, CallFunc_Array_Random_OutIndex_3) == 0x00002C, "Member 'LootPointHouseManager_C_PercentNotHidden::CallFunc_Array_Random_OutIndex_3' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct LootPointHouseManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_ReceiveTick) == 0x000004, "Wrong alignment on LootPointHouseManager_C_ReceiveTick");
static_assert(sizeof(LootPointHouseManager_C_ReceiveTick) == 0x000004, "Wrong size on LootPointHouseManager_C_ReceiveTick");
static_assert(offsetof(LootPointHouseManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'LootPointHouseManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.ResetLootpoints
// 0x0080 (0x0080 - 0x0000)
struct LootPointHouseManager_C_ResetLootpoints final
{
public:
	bool                                          NeedReset;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           LocalCurrentLootpoint;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_PercentCurrentItemsFunc_Output_Get;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_ResetLootpoints) == 0x000008, "Wrong alignment on LootPointHouseManager_C_ResetLootpoints");
static_assert(sizeof(LootPointHouseManager_C_ResetLootpoints) == 0x000080, "Wrong size on LootPointHouseManager_C_ResetLootpoints");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, NeedReset) == 0x000000, "Member 'LootPointHouseManager_C_ResetLootpoints::NeedReset' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, LocalCurrentLootpoint) == 0x000008, "Member 'LootPointHouseManager_C_ResetLootpoints::LocalCurrentLootpoint' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, Temp_int_Array_Index_Variable) == 0x000010, "Member 'LootPointHouseManager_C_ResetLootpoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x000021, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, Temp_real_Variable) == 0x000028, "Member 'LootPointHouseManager_C_ResetLootpoints::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Clamp_ReturnValue) == 0x000034, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'LootPointHouseManager_C_ResetLootpoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_PercentCurrentItemsFunc_Output_Get) == 0x000040, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_PercentCurrentItemsFunc_Output_Get' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_FTrunc_ReturnValue_1) == 0x00004C, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000060, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Array_Get_Item) == 0x000070, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LootPointHouseManager_C_ResetLootpoints, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'LootPointHouseManager_C_ResetLootpoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function LootPointHouseManager.LootPointHouseManager_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct LootPointHouseManager_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LootPointHouseManager_C_UserConstructionScript) == 0x000008, "Wrong alignment on LootPointHouseManager_C_UserConstructionScript");
static_assert(sizeof(LootPointHouseManager_C_UserConstructionScript) == 0x000018, "Wrong size on LootPointHouseManager_C_UserConstructionScript");
static_assert(offsetof(LootPointHouseManager_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x000000, "Member 'LootPointHouseManager_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}

