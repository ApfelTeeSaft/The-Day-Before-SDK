#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestSystemV3

#include "Basic.hpp"

#include "QuestSystemV3_classes.hpp"
#include "QuestSystemV3_parameters.hpp"


namespace SDK
{

// Function QuestSystemV3.QuestSystemV3_C.AddSideQuests
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USideQuests_C*                    Param_SideQuests                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::AddSideQuests(class USideQuests_C* Param_SideQuests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "AddSideQuests");

	Params::QuestSystemV3_C_AddSideQuests Parms{};

	Parms.Param_SideQuests = Param_SideQuests;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.AksForHighlightableActorsWithTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<TScriptInterface<class II_Highlightable_C>>Result                                                 (Parm, OutParm)

void UQuestSystemV3_C::AksForHighlightableActorsWithTag(const class FString& Tag, TArray<TScriptInterface<class II_Highlightable_C>>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "AksForHighlightableActorsWithTag");

	Params::QuestSystemV3_C_AksForHighlightableActorsWithTag Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function QuestSystemV3.QuestSystemV3_C.AskForHighlightableActors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class II_Highlightable_C>>FoundActors                                            (Parm, OutParm)

void UQuestSystemV3_C::AskForHighlightableActors(TArray<TScriptInterface<class II_Highlightable_C>>* FoundActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "AskForHighlightableActors");

	Params::QuestSystemV3_C_AskForHighlightableActors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FoundActors != nullptr)
		*FoundActors = std::move(Parms.FoundActors);
}


// Function QuestSystemV3.QuestSystemV3_C.ChangeMarkers
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Markers                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UQuestSystemV3_C::ChangeMarkers(const TArray<struct FVector>& Markers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "ChangeMarkers");

	Params::QuestSystemV3_C_ChangeMarkers Parms{};

	Parms.Markers = std::move(Markers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.ChangeQuestHint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Hint                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UQuestSystemV3_C::ChangeQuestHint(const class FString& Hint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "ChangeQuestHint");

	Params::QuestSystemV3_C_ChangeQuestHint Parms{};

	Parms.Hint = std::move(Hint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.ChangeQuestHintV2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Hint                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UQuestSystemV3_C::ChangeQuestHintV2(const class FString& Hint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "ChangeQuestHintV2");

	Params::QuestSystemV3_C_ChangeQuestHintV2 Parms{};

	Parms.Hint = std::move(Hint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.ClearMarkersBlyat
// (BlueprintCallable, BlueprintEvent)

void UQuestSystemV3_C::ClearMarkersBlyat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "ClearMarkersBlyat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestSystemV3.QuestSystemV3_C.CreateMainQuests
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UQuestSystemV3_C::CreateMainQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "CreateMainQuests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestSystemV3.QuestSystemV3_C.CreateQuestByQuestData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FQuestData                       QuestData                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UQuestV2_C*                       Quest                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::CreateQuestByQuestData(const struct FQuestData& QuestData, class UQuestV2_C** Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "CreateQuestByQuestData");

	Params::QuestSystemV3_C_CreateQuestByQuestData Parms{};

	Parms.QuestData = std::move(QuestData);

	UObject::ProcessEvent(Func, &Parms);

	if (Quest != nullptr)
		*Quest = Parms.Quest;
}


// Function QuestSystemV3.QuestSystemV3_C.CreateQuestByType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EQuestType                              Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UQuestV2_C*                       Result                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::CreateQuestByType(EQuestType Type, class UQuestV2_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "CreateQuestByType");

	Params::QuestSystemV3_C_CreateQuestByType Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function QuestSystemV3.QuestSystemV3_C.CreateSideQuestBySideQuestData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSideQuestData                   SideQuestData                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class USideQuests_C*                    Param_SideQuests                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::CreateSideQuestBySideQuestData(const struct FSideQuestData& SideQuestData, class USideQuests_C** Param_SideQuests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "CreateSideQuestBySideQuestData");

	Params::QuestSystemV3_C_CreateSideQuestBySideQuestData Parms{};

	Parms.SideQuestData = std::move(SideQuestData);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SideQuests != nullptr)
		*Param_SideQuests = Parms.Param_SideQuests;
}


// Function QuestSystemV3.QuestSystemV3_C.CreateSideQuests
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UQuestSystemV3_C::CreateSideQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "CreateSideQuests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestSystemV3.QuestSystemV3_C.CreateTimeoutTrigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Trigger                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::CreateTimeoutTrigger(const class FString& Trigger, double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "CreateTimeoutTrigger");

	Params::QuestSystemV3_C_CreateTimeoutTrigger Parms{};

	Parms.Trigger = std::move(Trigger);
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.ExecuteUbergraph_QuestSystemV3
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::ExecuteUbergraph_QuestSystemV3(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "ExecuteUbergraph_QuestSystemV3");

	Params::QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.GetSideQuestsByID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class USideQuests_C*                    SideQuest                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::GetSideQuestsByID(const class FString& ID, class USideQuests_C** SideQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "GetSideQuestsByID");

	Params::QuestSystemV3_C_GetSideQuestsByID Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);

	if (SideQuest != nullptr)
		*SideQuest = Parms.SideQuest;
}


// Function QuestSystemV3.QuestSystemV3_C.HasSideBranch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Has                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::HasSideBranch(const class FString& ID, bool* Has)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "HasSideBranch");

	Params::QuestSystemV3_C_HasSideBranch Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);

	if (Has != nullptr)
		*Has = Parms.Has;
}


// Function QuestSystemV3.QuestSystemV3_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGS_TDB_C*                        Param_GameState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::Initialize(class AGS_TDB_C* Param_GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "Initialize");

	Params::QuestSystemV3_C_Initialize Parms{};

	Parms.Param_GameState = Param_GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.OnFillCarFuel
// (Public, BlueprintCallable, BlueprintEvent)

void UQuestSystemV3_C::OnFillCarFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "OnFillCarFuel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestSystemV3.QuestSystemV3_C.OnImproveCar
// (Public, BlueprintCallable, BlueprintEvent)

void UQuestSystemV3_C::OnImproveCar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "OnImproveCar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestSystemV3.QuestSystemV3_C.OnInventoryUpdated
// (Public, BlueprintCallable, BlueprintEvent)

void UQuestSystemV3_C::OnInventoryUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "OnInventoryUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestSystemV3.QuestSystemV3_C.OnKillNPC
// (Public, BlueprintCallable, BlueprintEvent)

void UQuestSystemV3_C::OnKillNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "OnKillNPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestSystemV3.QuestSystemV3_C.OnPlaceBonfire
// (Public, BlueprintCallable, BlueprintEvent)

void UQuestSystemV3_C::OnPlaceBonfire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "OnPlaceBonfire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestSystemV3.QuestSystemV3_C.OnPlayerDead
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::OnPlayerDead(class ASurvivalPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "OnPlayerDead");

	Params::QuestSystemV3_C_OnPlayerDead Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.OnQuestCompleted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestV2_C*                       CompletedQuest                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::OnQuestCompleted(class UQuestV2_C* CompletedQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "OnQuestCompleted");

	Params::QuestSystemV3_C_OnQuestCompleted Parms{};

	Parms.CompletedQuest = CompletedQuest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.OnQuestTrigger
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Trigger                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UQuestSystemV3_C::OnQuestTrigger(const class FString& Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "OnQuestTrigger");

	Params::QuestSystemV3_C_OnQuestTrigger Parms{};

	Parms.Trigger = std::move(Trigger);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.ProcessQuestTrigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Trigger                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UQuestSystemV3_C::ProcessQuestTrigger(const class FString& Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "ProcessQuestTrigger");

	Params::QuestSystemV3_C_ProcessQuestTrigger Parms{};

	Parms.Trigger = std::move(Trigger);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.SetMarkers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Markers                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UQuestSystemV3_C::SetMarkers(const TArray<struct FVector>& Markers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "SetMarkers");

	Params::QuestSystemV3_C_SetMarkers Parms{};

	Parms.Markers = std::move(Markers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.SetPlayerForQuests
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::SetPlayerForQuests(class ASurvivalPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "SetPlayerForQuests");

	Params::QuestSystemV3_C_SetPlayerForQuests Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.SwitchBranch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestBranch_C*                   branch                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::SwitchBranch(class UQuestBranch_C* branch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "SwitchBranch");

	Params::QuestSystemV3_C_SwitchBranch Parms{};

	Parms.branch = branch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.SwitchBranchSilent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestBranch_C*                   QuestBranch                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::SwitchBranchSilent(class UQuestBranch_C* QuestBranch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "SwitchBranchSilent");

	Params::QuestSystemV3_C_SwitchBranchSilent Parms{};

	Parms.QuestBranch = QuestBranch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.SwitchQuest
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestV2_C*                       Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UQuestSystemV3_C::SwitchQuest(class UQuestV2_C* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "SwitchQuest");

	Params::QuestSystemV3_C_SwitchQuest Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.SwitchSideBranchByID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UQuestSystemV3_C::SwitchSideBranchByID(const class FString& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "SwitchSideBranchByID");

	Params::QuestSystemV3_C_SwitchSideBranchByID Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestSystemV3.QuestSystemV3_C.SwitchToMainBranch
// (Public, BlueprintCallable, BlueprintEvent)

void UQuestSystemV3_C::SwitchToMainBranch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestSystemV3_C", "SwitchToMainBranch");

	UObject::ProcessEvent(Func, nullptr);
}

}

