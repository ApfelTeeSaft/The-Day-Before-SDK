#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RT_Manager_SceneCapture

#include "Basic.hpp"

#include "BP_RT_Manager_SceneCapture_classes.hpp"
#include "BP_RT_Manager_SceneCapture_parameters.hpp"


namespace SDK
{

// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.AddMudParticle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_RT_Manager_SceneCapture_C::AddMudParticle(class UNiagaraComponent* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "AddMudParticle");

	Params::BP_RT_Manager_SceneCapture_C_AddMudParticle Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.AppendMudParticles
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UNiagaraComponent*>        NewParam                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_RT_Manager_SceneCapture_C::AppendMudParticles(const TArray<class UNiagaraComponent*>& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "AppendMudParticles");

	Params::BP_RT_Manager_SceneCapture_C_AppendMudParticles Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.BndEvt__BP_RT_Manager_SceneCapture_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_RT_Manager_SceneCapture_C::BndEvt__BP_RT_Manager_SceneCapture_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "BndEvt__BP_RT_Manager_SceneCapture_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_RT_Manager_SceneCapture_C_BndEvt__BP_RT_Manager_SceneCapture_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.BndEvt__BP_RT_Manager_SceneCapture_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RT_Manager_SceneCapture_C::BndEvt__BP_RT_Manager_SceneCapture_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "BndEvt__BP_RT_Manager_SceneCapture_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_RT_Manager_SceneCapture_C_BndEvt__BP_RT_Manager_SceneCapture_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.CaptureCarTrail
// (BlueprintCallable, BlueprintEvent)

void ABP_RT_Manager_SceneCapture_C::CaptureCarTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "CaptureCarTrail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.DebugMud
// (BlueprintCallable, BlueprintEvent)

void ABP_RT_Manager_SceneCapture_C::DebugMud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "DebugMud");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.DebugMudParticle
// (BlueprintCallable, BlueprintEvent)

void ABP_RT_Manager_SceneCapture_C::DebugMudParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "DebugMudParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.DebugPlayerLocation
// (BlueprintCallable, BlueprintEvent)

void ABP_RT_Manager_SceneCapture_C::DebugPlayerLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "DebugPlayerLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.ExecuteUbergraph_BP_RT_Manager_SceneCapture
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RT_Manager_SceneCapture_C::ExecuteUbergraph_BP_RT_Manager_SceneCapture(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "ExecuteUbergraph_BP_RT_Manager_SceneCapture");

	Params::BP_RT_Manager_SceneCapture_C_ExecuteUbergraph_BP_RT_Manager_SceneCapture Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_RT_Manager_SceneCapture_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.StartCaptureCarTrail
// (BlueprintCallable, BlueprintEvent)

void ABP_RT_Manager_SceneCapture_C::StartCaptureCarTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "StartCaptureCarTrail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.StopCaptureCarTrail
// (BlueprintCallable, BlueprintEvent)

void ABP_RT_Manager_SceneCapture_C::StopCaptureCarTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "StopCaptureCarTrail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RT_Manager_SceneCapture.BP_RT_Manager_SceneCapture_C.UpdateMudParticles
// (BlueprintCallable, BlueprintEvent)

void ABP_RT_Manager_SceneCapture_C::UpdateMudParticles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RT_Manager_SceneCapture_C", "UpdateMudParticles");

	UObject::ProcessEvent(Func, nullptr);
}

}

