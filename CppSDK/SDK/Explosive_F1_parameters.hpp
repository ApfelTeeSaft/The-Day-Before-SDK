#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Explosive_F1

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function Explosive_F1.Explosive_F1_C.BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'Explosive_F1_C_BndEvt__Explosive_Smoke_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Explosive_F1.Explosive_F1_C.ExecuteUbergraph_Explosive_F1
// 0x0510 (0x0510 - 0x0000)
struct Explosive_F1_C_ExecuteUbergraph_Explosive_F1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_14;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_15;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_16;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_17;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_18;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_19;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_20;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_21;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_22;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_23;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_24;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_25;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_26;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_27;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_28;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_29;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_30;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_31;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_32;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_33;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_34;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_35;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_36;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_37;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_38;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_39;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_40;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_41;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_42;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_43;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_44;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x01A0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class AActor*>                         Temp_object_Variable_45;                           // 0x0288(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x02D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C3[0x1];                                      // 0x03C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0440(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x04A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_Select_Default;                             // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1) == 0x000010, "Wrong alignment on Explosive_F1_C_ExecuteUbergraph_Explosive_F1");
static_assert(sizeof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1) == 0x000510, "Wrong size on Explosive_F1_C_ExecuteUbergraph_Explosive_F1");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, EntryPoint) == 0x000000, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::EntryPoint' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_byte_Variable) == 0x000004, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable) == 0x000008, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_1) == 0x000010, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_2) == 0x000018, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_3) == 0x000020, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_4) == 0x000028, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_5) == 0x000030, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_6) == 0x000038, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_7) == 0x000040, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_8) == 0x000048, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_9) == 0x000050, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_10) == 0x000058, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_11) == 0x000060, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_12) == 0x000068, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_13) == 0x000070, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_14) == 0x000078, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_15) == 0x000080, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_16) == 0x000088, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_17) == 0x000090, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_18) == 0x000098, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_19) == 0x0000A0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_20) == 0x0000A8, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_21) == 0x0000B0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_22) == 0x0000B8, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_23) == 0x0000C0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_24) == 0x0000C8, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_25) == 0x0000D0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_26) == 0x0000D8, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_27) == 0x0000E0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_28) == 0x0000E8, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_29) == 0x0000F0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_30) == 0x0000F8, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_31) == 0x000100, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_32) == 0x000108, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_33) == 0x000110, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_34) == 0x000118, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_35) == 0x000120, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_36) == 0x000128, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_37) == 0x000130, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_38) == 0x000138, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_39) == 0x000140, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_40) == 0x000148, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_41) == 0x000150, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_42) == 0x000158, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_43) == 0x000160, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_44) == 0x000168, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, K2Node_ComponentBoundEvent_HitComponent) == 0x000170, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, K2Node_ComponentBoundEvent_OtherActor) == 0x000178, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, K2Node_ComponentBoundEvent_OtherComp) == 0x000180, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000188, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, K2Node_ComponentBoundEvent_Hit) == 0x0001A0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, Temp_object_Variable_45) == 0x000288, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000298, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_VSize_ReturnValue) == 0x0002B0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002B8, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002D0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_LineTraceSingle_OutHit) == 0x0002D8, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_LineTraceSingle_ReturnValue) == 0x0003C0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_bBlockingHit) == 0x0003C1, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003C2, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_Time) == 0x0003C4, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_Distance) == 0x0003C8, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_Location) == 0x0003D0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_ImpactPoint) == 0x0003E8, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_Normal) == 0x000400, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_ImpactNormal) == 0x000418, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_PhysMat) == 0x000430, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_HitActor) == 0x000438, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_HitComponent) == 0x000440, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_HitBoneName) == 0x000448, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_BoneName) == 0x000450, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_HitItem) == 0x000458, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_ElementIndex) == 0x00045C, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_FaceIndex) == 0x000460, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_TraceStart) == 0x000468, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_BreakHitResult_TraceEnd) == 0x000480, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000498, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0004A0, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, K2Node_Select_Default) == 0x000500, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Explosive_F1_C_ExecuteUbergraph_Explosive_F1, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000508, "Member 'Explosive_F1_C_ExecuteUbergraph_Explosive_F1::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");

}

