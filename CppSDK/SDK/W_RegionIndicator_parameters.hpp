#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RegionIndicator

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_RegionIndicator.W_RegionIndicator_C.ExecuteUbergraph_W_RegionIndicator
// 0x0080 (0x0080 - 0x0000)
struct W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator) == 0x000008, "Wrong alignment on W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator");
static_assert(sizeof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator) == 0x000080, "Wrong size on W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, EntryPoint) == 0x000000, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, K2Node_Event_MyGeometry) == 0x000004, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, CallFunc_Lerp_ReturnValue) == 0x000050, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, CallFunc_Lerp_ReturnValue_1) == 0x000058, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000078, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x00007C, "Member 'W_RegionIndicator_C_ExecuteUbergraph_W_RegionIndicator::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");

// Function W_RegionIndicator.W_RegionIndicator_C.On_Selected_MouseButtonDown_0
// 0x0220 (0x0220 - 0x0000)
struct W_RegionIndicator_C_On_Selected_MouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(W_RegionIndicator_C_On_Selected_MouseButtonDown_0) == 0x000008, "Wrong alignment on W_RegionIndicator_C_On_Selected_MouseButtonDown_0");
static_assert(sizeof(W_RegionIndicator_C_On_Selected_MouseButtonDown_0) == 0x000220, "Wrong size on W_RegionIndicator_C_On_Selected_MouseButtonDown_0");
static_assert(offsetof(W_RegionIndicator_C_On_Selected_MouseButtonDown_0, MyGeometry) == 0x000000, "Member 'W_RegionIndicator_C_On_Selected_MouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_On_Selected_MouseButtonDown_0, MouseEvent) == 0x000038, "Member 'W_RegionIndicator_C_On_Selected_MouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_On_Selected_MouseButtonDown_0, ReturnValue) == 0x0000B0, "Member 'W_RegionIndicator_C_On_Selected_MouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_On_Selected_MouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'W_RegionIndicator_C_On_Selected_MouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function W_RegionIndicator.W_RegionIndicator_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_RegionIndicator_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RegionIndicator_C_Tick) == 0x000004, "Wrong alignment on W_RegionIndicator_C_Tick");
static_assert(sizeof(W_RegionIndicator_C_Tick) == 0x00003C, "Wrong size on W_RegionIndicator_C_Tick");
static_assert(offsetof(W_RegionIndicator_C_Tick, MyGeometry) == 0x000000, "Member 'W_RegionIndicator_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_RegionIndicator_C_Tick, InDeltaTime) == 0x000038, "Member 'W_RegionIndicator_C_Tick::InDeltaTime' has a wrong offset!");

}

