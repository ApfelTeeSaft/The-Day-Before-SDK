#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QuestPopupNotification

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "NPC_Structure_structs.hpp"
#include "F_DialoguePhrasesNodeInfo_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "F_DialogueNodeInfo_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_QuestPopupNotification.WBP_QuestPopupNotification_C.ExecuteUbergraph_WBP_QuestPopupNotification
// 0x0040 (0x0040 - 0x0000)
struct WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetPlayerRef_SurvivalPlayer;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification) == 0x000008, "Wrong alignment on WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification");
static_assert(sizeof(WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification) == 0x000040, "Wrong size on WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification");
static_assert(offsetof(WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification, EntryPoint) == 0x000000, "Member 'WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification, K2Node_CustomEvent_Duration) == 0x000010, "Member 'WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000018, "Member 'WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification, CallFunc_GetPlayerRef_SurvivalPlayer) == 0x000030, "Member 'WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification::CallFunc_GetPlayerRef_SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_QuestPopupNotification_C_ExecuteUbergraph_WBP_QuestPopupNotification::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_QuestPopupNotification.WBP_QuestPopupNotification_C.GetShowed
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuestPopupNotification_C_GetShowed final
{
public:
	bool                                          Param_bShowed;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuestPopupNotification_C_GetShowed) == 0x000001, "Wrong alignment on WBP_QuestPopupNotification_C_GetShowed");
static_assert(sizeof(WBP_QuestPopupNotification_C_GetShowed) == 0x000001, "Wrong size on WBP_QuestPopupNotification_C_GetShowed");
static_assert(offsetof(WBP_QuestPopupNotification_C_GetShowed, Param_bShowed) == 0x000000, "Member 'WBP_QuestPopupNotification_C_GetShowed::Param_bShowed' has a wrong offset!");

// Function WBP_QuestPopupNotification.WBP_QuestPopupNotification_C.HideMessage
// 0x0004 (0x0004 - 0x0000)
struct WBP_QuestPopupNotification_C_HideMessage final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuestPopupNotification_C_HideMessage) == 0x000004, "Wrong alignment on WBP_QuestPopupNotification_C_HideMessage");
static_assert(sizeof(WBP_QuestPopupNotification_C_HideMessage) == 0x000004, "Wrong size on WBP_QuestPopupNotification_C_HideMessage");
static_assert(offsetof(WBP_QuestPopupNotification_C_HideMessage, Duration) == 0x000000, "Member 'WBP_QuestPopupNotification_C_HideMessage::Duration' has a wrong offset!");

// Function WBP_QuestPopupNotification.WBP_QuestPopupNotification_C.PlayPhrase
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_QuestPopupNotification_C_PlayPhrase final
{
public:
	bool                                          bIsDNAquest;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EventInstanceIsValid_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_DynamicCast_AsFMODEvent;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Array_Random_OutItem;                     // 0x0030(0x0018)()
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_DialoguePhrasesNodeInfo             CallFunc_Array_Random_OutItem_1;                   // 0x0050(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowed_bShowed;                        // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00C0(0x0018)()
};
static_assert(alignof(WBP_QuestPopupNotification_C_PlayPhrase) == 0x000008, "Wrong alignment on WBP_QuestPopupNotification_C_PlayPhrase");
static_assert(sizeof(WBP_QuestPopupNotification_C_PlayPhrase) == 0x0000D8, "Wrong size on WBP_QuestPopupNotification_C_PlayPhrase");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, bIsDNAquest) == 0x000000, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::bIsDNAquest' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, CallFunc_EventInstanceIsValid_ReturnValue) == 0x000010, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::CallFunc_EventInstanceIsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, K2Node_DynamicCast_AsFMODEvent) == 0x000018, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::K2Node_DynamicCast_AsFMODEvent' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, CallFunc_PlayEvent2D_ReturnValue) == 0x000028, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, CallFunc_Array_Random_OutItem) == 0x000030, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, CallFunc_Array_Random_OutIndex) == 0x000048, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, CallFunc_Array_Random_OutItem_1) == 0x000050, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, CallFunc_Array_Random_OutIndex_1) == 0x0000B8, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, CallFunc_GetShowed_bShowed) == 0x0000BC, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::CallFunc_GetShowed_bShowed' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, Temp_bool_Variable) == 0x0000BD, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_PlayPhrase, K2Node_Select_Default) == 0x0000C0, "Member 'WBP_QuestPopupNotification_C_PlayPhrase::K2Node_Select_Default' has a wrong offset!");

// Function WBP_QuestPopupNotification.WBP_QuestPopupNotification_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuestPopupNotification_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuestPopupNotification_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_QuestPopupNotification_C_PreConstruct");
static_assert(sizeof(WBP_QuestPopupNotification_C_PreConstruct) == 0x000001, "Wrong size on WBP_QuestPopupNotification_C_PreConstruct");
static_assert(offsetof(WBP_QuestPopupNotification_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_QuestPopupNotification_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_QuestPopupNotification.WBP_QuestPopupNotification_C.Show
// 0x0010 (0x0010 - 0x0000)
struct WBP_QuestPopupNotification_C_Show final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuestPopupNotification_C_Show) == 0x000008, "Wrong alignment on WBP_QuestPopupNotification_C_Show");
static_assert(sizeof(WBP_QuestPopupNotification_C_Show) == 0x000010, "Wrong size on WBP_QuestPopupNotification_C_Show");
static_assert(offsetof(WBP_QuestPopupNotification_C_Show, bShow) == 0x000000, "Member 'WBP_QuestPopupNotification_C_Show::bShow' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_Show, Temp_bool_Variable) == 0x000001, "Member 'WBP_QuestPopupNotification_C_Show::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_Show, Temp_byte_Variable) == 0x000002, "Member 'WBP_QuestPopupNotification_C_Show::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_Show, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_QuestPopupNotification_C_Show::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_Show, K2Node_Select_Default) == 0x000004, "Member 'WBP_QuestPopupNotification_C_Show::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_Show, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000005, "Member 'WBP_QuestPopupNotification_C_Show::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_Show, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_QuestPopupNotification_C_Show::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_QuestPopupNotification.WBP_QuestPopupNotification_C.ShowQuestMessage
// 0x0330 (0x0330 - 0x0000)
struct WBP_QuestPopupNotification_C_ShowQuestMessage final
{
public:
	class FName                                   NPC_Name;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Message;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuest*                                 Quest;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UQuestCustomData*                 CallFunc_GetCustomData_ReturnValue;                // 0x0018(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UQuestData_C*                     K2Node_DynamicCast_AsQuest_Data;                   // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNPC_Structure                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0110)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0148(0x0050)(HasGetValueTypeHash)
	struct FF_DialogueNodeInfo                    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0198(0x0108)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02B8(0x0018)()
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_DynamicCast_AsFMODEvent;                    // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 Temp_string_Variable;                              // 0x02F0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0310(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EventInstanceIsValid_ReturnValue;         // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuestPopupNotification_C_ShowQuestMessage) == 0x000008, "Wrong alignment on WBP_QuestPopupNotification_C_ShowQuestMessage");
static_assert(sizeof(WBP_QuestPopupNotification_C_ShowQuestMessage) == 0x000330, "Wrong size on WBP_QuestPopupNotification_C_ShowQuestMessage");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, NPC_Name) == 0x000000, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::NPC_Name' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, Message) == 0x000008, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::Message' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, Quest) == 0x000010, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::Quest' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_GetCustomData_ReturnValue) == 0x000018, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_GetCustomData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, K2Node_DynamicCast_AsQuest_Data) == 0x000020, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::K2Node_DynamicCast_AsQuest_Data' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000140, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000141, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, K2Node_MakeStruct_FormatArgumentData) == 0x000148, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000198, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0002A0, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, K2Node_MakeArray_Array) == 0x0002A8, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_Format_ReturnValue) == 0x0002B8, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0002D0, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, K2Node_DynamicCast_AsFMODEvent) == 0x0002D8, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::K2Node_DynamicCast_AsFMODEvent' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, K2Node_DynamicCast_bSuccess_1) == 0x0002E0, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_PlayEvent2D_ReturnValue) == 0x0002E8, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, Temp_string_Variable) == 0x0002F0, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_IsValid_ReturnValue) == 0x000300, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_Map_Find_Value) == 0x000304, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_Map_Find_ReturnValue) == 0x000308, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_Greater_IntInt_ReturnValue) == 0x000309, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_Conv_IntToText_ReturnValue) == 0x000310, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_BooleanAND_ReturnValue) == 0x000328, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_IsValid_ReturnValue_1) == 0x000329, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestPopupNotification_C_ShowQuestMessage, CallFunc_EventInstanceIsValid_ReturnValue) == 0x00032A, "Member 'WBP_QuestPopupNotification_C_ShowQuestMessage::CallFunc_EventInstanceIsValid_ReturnValue' has a wrong offset!");

}

