#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeerManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_DeerSpawnType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DeerManager.DeerManager_C.CheckPlayers
// 0x0028 (0x0028 - 0x0000)
struct DeerManager_C_CheckPlayers final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmountOfPlayerControllers_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeerManager_C_CheckPlayers) == 0x000008, "Wrong alignment on DeerManager_C_CheckPlayers");
static_assert(sizeof(DeerManager_C_CheckPlayers) == 0x000028, "Wrong size on DeerManager_C_CheckPlayers");
static_assert(offsetof(DeerManager_C_CheckPlayers, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'DeerManager_C_CheckPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_CheckPlayers, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'DeerManager_C_CheckPlayers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_CheckPlayers, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'DeerManager_C_CheckPlayers::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_CheckPlayers, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x000010, "Member 'DeerManager_C_CheckPlayers::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(DeerManager_C_CheckPlayers, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'DeerManager_C_CheckPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DeerManager_C_CheckPlayers, CallFunc_GetAmountOfPlayerControllers_ReturnValue) == 0x00001C, "Member 'DeerManager_C_CheckPlayers::CallFunc_GetAmountOfPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_CheckPlayers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'DeerManager_C_CheckPlayers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function DeerManager.DeerManager_C.ExecuteUbergraph_DeerManager
// 0x0020 (0x0020 - 0x0000)
struct DeerManager_C_ExecuteUbergraph_DeerManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeerManager_C_ExecuteUbergraph_DeerManager) == 0x000008, "Wrong alignment on DeerManager_C_ExecuteUbergraph_DeerManager");
static_assert(sizeof(DeerManager_C_ExecuteUbergraph_DeerManager) == 0x000020, "Wrong size on DeerManager_C_ExecuteUbergraph_DeerManager");
static_assert(offsetof(DeerManager_C_ExecuteUbergraph_DeerManager, EntryPoint) == 0x000000, "Member 'DeerManager_C_ExecuteUbergraph_DeerManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(DeerManager_C_ExecuteUbergraph_DeerManager, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'DeerManager_C_ExecuteUbergraph_DeerManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DeerManager_C_ExecuteUbergraph_DeerManager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'DeerManager_C_ExecuteUbergraph_DeerManager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function DeerManager.DeerManager_C.GetActiveDeers
// 0x0010 (0x0010 - 0x0000)
struct DeerManager_C_GetActiveDeers final
{
public:
	TArray<class ABP_DeerV2_C*>                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(DeerManager_C_GetActiveDeers) == 0x000008, "Wrong alignment on DeerManager_C_GetActiveDeers");
static_assert(sizeof(DeerManager_C_GetActiveDeers) == 0x000010, "Wrong size on DeerManager_C_GetActiveDeers");
static_assert(offsetof(DeerManager_C_GetActiveDeers, ReturnValue) == 0x000000, "Member 'DeerManager_C_GetActiveDeers::ReturnValue' has a wrong offset!");

// Function DeerManager.DeerManager_C.GetAllDeers
// 0x0010 (0x0010 - 0x0000)
struct DeerManager_C_GetAllDeers final
{
public:
	TArray<class ABP_DeerV2_C*>                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(DeerManager_C_GetAllDeers) == 0x000008, "Wrong alignment on DeerManager_C_GetAllDeers");
static_assert(sizeof(DeerManager_C_GetAllDeers) == 0x000010, "Wrong size on DeerManager_C_GetAllDeers");
static_assert(offsetof(DeerManager_C_GetAllDeers, ReturnValue) == 0x000000, "Member 'DeerManager_C_GetAllDeers::ReturnValue' has a wrong offset!");

// Function DeerManager.DeerManager_C.GetFreeDeerIndex
// 0x0028 (0x0028 - 0x0000)
struct DeerManager_C_GetFreeDeerIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FreeIndex;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeerManager_C_GetFreeDeerIndex) == 0x000004, "Wrong alignment on DeerManager_C_GetFreeDeerIndex");
static_assert(sizeof(DeerManager_C_GetFreeDeerIndex) == 0x000028, "Wrong size on DeerManager_C_GetFreeDeerIndex");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, ReturnValue) == 0x000000, "Member 'DeerManager_C_GetFreeDeerIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, CurrentIndex) == 0x000004, "Member 'DeerManager_C_GetFreeDeerIndex::CurrentIndex' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, FreeIndex) == 0x000008, "Member 'DeerManager_C_GetFreeDeerIndex::FreeIndex' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'DeerManager_C_GetFreeDeerIndex::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, Temp_int_Array_Index_Variable) == 0x000010, "Member 'DeerManager_C_GetFreeDeerIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'DeerManager_C_GetFreeDeerIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'DeerManager_C_GetFreeDeerIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'DeerManager_C_GetFreeDeerIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'DeerManager_C_GetFreeDeerIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'DeerManager_C_GetFreeDeerIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'DeerManager_C_GetFreeDeerIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_GetFreeDeerIndex, CallFunc_Array_Contains_ReturnValue) == 0x000026, "Member 'DeerManager_C_GetFreeDeerIndex::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function DeerManager.DeerManager_C.KillAllActiveDeers
// 0x0020 (0x0020 - 0x0000)
struct DeerManager_C_KillAllActiveDeers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DeerV2_C*                           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeerManager_C_KillAllActiveDeers) == 0x000008, "Wrong alignment on DeerManager_C_KillAllActiveDeers");
static_assert(sizeof(DeerManager_C_KillAllActiveDeers) == 0x000020, "Wrong size on DeerManager_C_KillAllActiveDeers");
static_assert(offsetof(DeerManager_C_KillAllActiveDeers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DeerManager_C_KillAllActiveDeers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DeerManager_C_KillAllActiveDeers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DeerManager_C_KillAllActiveDeers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DeerManager_C_KillAllActiveDeers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DeerManager_C_KillAllActiveDeers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_KillAllActiveDeers, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'DeerManager_C_KillAllActiveDeers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_KillAllActiveDeers, CallFunc_Array_Get_Item) == 0x000010, "Member 'DeerManager_C_KillAllActiveDeers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DeerManager_C_KillAllActiveDeers, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'DeerManager_C_KillAllActiveDeers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DeerManager.DeerManager_C.RequestSpawnOfDeer
// 0x00B0 (0x00B0 - 0x0000)
struct DeerManager_C_RequestSpawnOfDeer final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DeerSpawnType                               Type;                                              // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DeerV2_C*                           SpawnedDeer;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DeerV2_C*                           Deer;                                              // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         ManagerIndex;                                      // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DeerV2_C*                           CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFreeDeerIndex_ReturnValue;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeerManager_C_RequestSpawnOfDeer) == 0x000008, "Wrong alignment on DeerManager_C_RequestSpawnOfDeer");
static_assert(sizeof(DeerManager_C_RequestSpawnOfDeer) == 0x0000B0, "Wrong size on DeerManager_C_RequestSpawnOfDeer");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, Location) == 0x000000, "Member 'DeerManager_C_RequestSpawnOfDeer::Location' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, Rotation) == 0x000018, "Member 'DeerManager_C_RequestSpawnOfDeer::Rotation' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, Type) == 0x000030, "Member 'DeerManager_C_RequestSpawnOfDeer::Type' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, SpawnedDeer) == 0x000038, "Member 'DeerManager_C_RequestSpawnOfDeer::SpawnedDeer' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, Deer) == 0x000040, "Member 'DeerManager_C_RequestSpawnOfDeer::Deer' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, ManagerIndex) == 0x000048, "Member 'DeerManager_C_RequestSpawnOfDeer::ManagerIndex' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'DeerManager_C_RequestSpawnOfDeer::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'DeerManager_C_RequestSpawnOfDeer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'DeerManager_C_RequestSpawnOfDeer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'DeerManager_C_RequestSpawnOfDeer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, CallFunc_Array_Add_ReturnValue_1) == 0x000078, "Member 'DeerManager_C_RequestSpawnOfDeer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, CallFunc_Array_Get_Item) == 0x000080, "Member 'DeerManager_C_RequestSpawnOfDeer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, CallFunc_GetDisplayName_ReturnValue) == 0x000088, "Member 'DeerManager_C_RequestSpawnOfDeer::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'DeerManager_C_RequestSpawnOfDeer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DeerManager_C_RequestSpawnOfDeer, CallFunc_GetFreeDeerIndex_ReturnValue) == 0x0000A8, "Member 'DeerManager_C_RequestSpawnOfDeer::CallFunc_GetFreeDeerIndex_ReturnValue' has a wrong offset!");

// Function DeerManager.DeerManager_C.ResetDeer
// 0x0018 (0x0018 - 0x0000)
struct DeerManager_C_ResetDeer final
{
public:
	int32                                         DeerManagerIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DeerV2_C*                           DeerRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeerManager_C_ResetDeer) == 0x000008, "Wrong alignment on DeerManager_C_ResetDeer");
static_assert(sizeof(DeerManager_C_ResetDeer) == 0x000018, "Wrong size on DeerManager_C_ResetDeer");
static_assert(offsetof(DeerManager_C_ResetDeer, DeerManagerIndex) == 0x000000, "Member 'DeerManager_C_ResetDeer::DeerManagerIndex' has a wrong offset!");
static_assert(offsetof(DeerManager_C_ResetDeer, DeerRef) == 0x000008, "Member 'DeerManager_C_ResetDeer::DeerRef' has a wrong offset!");
static_assert(offsetof(DeerManager_C_ResetDeer, CallFunc_Array_RemoveItem_ReturnValue) == 0x000010, "Member 'DeerManager_C_ResetDeer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_ResetDeer, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000011, "Member 'DeerManager_C_ResetDeer::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function DeerManager.DeerManager_C.SpawnDeer
// 0x00B0 (0x00B0 - 0x0000)
struct DeerManager_C_SpawnDeer final
{
public:
	class ABP_DeerV2_C*                           SpawnedDeer;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DeerV2_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeerManager_C_SpawnDeer) == 0x000010, "Wrong alignment on DeerManager_C_SpawnDeer");
static_assert(sizeof(DeerManager_C_SpawnDeer) == 0x0000B0, "Wrong size on DeerManager_C_SpawnDeer");
static_assert(offsetof(DeerManager_C_SpawnDeer, SpawnedDeer) == 0x000000, "Member 'DeerManager_C_SpawnDeer::SpawnedDeer' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnDeer, Temp_int_Variable) == 0x000008, "Member 'DeerManager_C_SpawnDeer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnDeer, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'DeerManager_C_SpawnDeer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnDeer, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'DeerManager_C_SpawnDeer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnDeer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'DeerManager_C_SpawnDeer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnDeer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'DeerManager_C_SpawnDeer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnDeer, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'DeerManager_C_SpawnDeer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnDeer, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'DeerManager_C_SpawnDeer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnDeer, CallFunc_Conv_IntToString_ReturnValue) == 0x000088, "Member 'DeerManager_C_SpawnDeer::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnDeer, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'DeerManager_C_SpawnDeer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnDeer, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'DeerManager_C_SpawnDeer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DeerManager.DeerManager_C.SpawnerRequest
// 0x0058 (0x0058 - 0x0000)
struct DeerManager_C_SpawnerRequest final
{
public:
	int32                                         AmountOfDeers;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DeerManager_C_SpawnerRequest) == 0x000008, "Wrong alignment on DeerManager_C_SpawnerRequest");
static_assert(sizeof(DeerManager_C_SpawnerRequest) == 0x000058, "Wrong size on DeerManager_C_SpawnerRequest");
static_assert(offsetof(DeerManager_C_SpawnerRequest, AmountOfDeers) == 0x000000, "Member 'DeerManager_C_SpawnerRequest::AmountOfDeers' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnerRequest, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'DeerManager_C_SpawnerRequest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnerRequest, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'DeerManager_C_SpawnerRequest::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnerRequest, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'DeerManager_C_SpawnerRequest::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnerRequest, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'DeerManager_C_SpawnerRequest::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnerRequest, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'DeerManager_C_SpawnerRequest::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnerRequest, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'DeerManager_C_SpawnerRequest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DeerManager_C_SpawnerRequest, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000054, "Member 'DeerManager_C_SpawnerRequest::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

}

