#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Vehicle_EngineAudio

#include "Basic.hpp"

#include "Vehicle_EngineAudio_classes.hpp"
#include "Vehicle_EngineAudio_parameters.hpp"


namespace SDK
{

// Function Vehicle_EngineAudio.Vehicle_EngineAudio_C.ChangePassiveState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewPassive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_EngineAudio_C::ChangePassiveState(bool NewPassive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_EngineAudio_C", "ChangePassiveState");

	Params::Vehicle_EngineAudio_C_ChangePassiveState Parms{};

	Parms.NewPassive = NewPassive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_EngineAudio.Vehicle_EngineAudio_C.ClearStartTimer
// (BlueprintCallable, BlueprintEvent)

void UVehicle_EngineAudio_C::ClearStartTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_EngineAudio_C", "ClearStartTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_EngineAudio.Vehicle_EngineAudio_C.ExecuteUbergraph_Vehicle_EngineAudio
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_EngineAudio_C::ExecuteUbergraph_Vehicle_EngineAudio(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_EngineAudio_C", "ExecuteUbergraph_Vehicle_EngineAudio");

	Params::Vehicle_EngineAudio_C_ExecuteUbergraph_Vehicle_EngineAudio Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_EngineAudio.Vehicle_EngineAudio_C.PlaybackFade
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundWave*                       PlayingSoundWave                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   PlaybackPercent                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_EngineAudio_C::PlaybackFade(const class USoundWave* PlayingSoundWave, const float PlaybackPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_EngineAudio_C", "PlaybackFade");

	Params::Vehicle_EngineAudio_C_PlaybackFade Parms{};

	Parms.PlayingSoundWave = PlayingSoundWave;
	Parms.PlaybackPercent = PlaybackPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_EngineAudio.Vehicle_EngineAudio_C.PlayIgnition
// (BlueprintCallable, BlueprintEvent)

void UVehicle_EngineAudio_C::PlayIgnition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_EngineAudio_C", "PlayIgnition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_EngineAudio.Vehicle_EngineAudio_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UVehicle_EngineAudio_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_EngineAudio_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Vehicle_EngineAudio.Vehicle_EngineAudio_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_EngineAudio_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_EngineAudio_C", "ReceiveTick");

	Params::Vehicle_EngineAudio_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_EngineAudio.Vehicle_EngineAudio_C.SetEngineRunning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_EngineRunning                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UVehicle_EngineAudio_C::SetEngineRunning(bool Param_EngineRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_EngineAudio_C", "SetEngineRunning");

	Params::Vehicle_EngineAudio_C_SetEngineRunning Parms{};

	Parms.Param_EngineRunning = Param_EngineRunning;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Vehicle_EngineAudio.Vehicle_EngineAudio_C.StopSound
// (BlueprintCallable, BlueprintEvent)

void UVehicle_EngineAudio_C::StopSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Vehicle_EngineAudio_C", "StopSound");

	UObject::ProcessEvent(Func, nullptr);
}

}

