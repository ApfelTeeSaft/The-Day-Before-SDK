#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AlarmKeyboard

#include "Basic.hpp"

#include "BP_AlarmKeyboard_classes.hpp"
#include "BP_AlarmKeyboard_parameters.hpp"


namespace SDK
{

// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.AutoPlay
// (BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::AutoPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "AutoPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.Cap__FinishedFunc
// (BlueprintEvent)

void ABP_AlarmKeyboard_C::Cap__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "Cap__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.Cap__UpdateFunc
// (BlueprintEvent)

void ABP_AlarmKeyboard_C::Cap__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "Cap__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.CheckCode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::CheckCode(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "CheckCode");

	Params::BP_AlarmKeyboard_C_CheckCode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.Close
// (BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.DisableLights
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::DisableLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "DisableLights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.ErrorDisplayTimer_Handler
// (BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::ErrorDisplayTimer_Handler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "ErrorDisplayTimer_Handler");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.ExecuteUbergraph_BP_AlarmKeyboard
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::ExecuteUbergraph_BP_AlarmKeyboard(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "ExecuteUbergraph_BP_AlarmKeyboard");

	Params::BP_AlarmKeyboard_C_ExecuteUbergraph_BP_AlarmKeyboard Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.FindButtonByKeyCode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           KeyCode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABP_AlarmKeyButton_C*             Button                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::FindButtonByKeyCode(const class FString& KeyCode, class ABP_AlarmKeyButton_C** Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "FindButtonByKeyCode");

	Params::BP_AlarmKeyboard_C_FindButtonByKeyCode Parms{};

	Parms.KeyCode = std::move(KeyCode);

	UObject::ProcessEvent(Func, &Parms);

	if (Button != nullptr)
		*Button = Parms.Button;
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.FirstTry
// (BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::FirstTry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "FirstTry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.FlashingTick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::FlashingTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "FlashingTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.GenerateCode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::GenerateCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "GenerateCode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.HandleClearButton
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::HandleClearButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "HandleClearButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.HandleNumberButton
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           KeyCode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::HandleNumberButton(const class FString& KeyCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "HandleNumberButton");

	Params::BP_AlarmKeyboard_C_HandleNumberButton Parms{};

	Parms.KeyCode = std::move(KeyCode);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.KeyPressed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           KeyCode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::KeyPressed(const class FString& KeyCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "KeyPressed");

	Params::BP_AlarmKeyboard_C_KeyPressed Parms{};

	Parms.KeyCode = std::move(KeyCode);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.OnCoverClosed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::OnCoverClosed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "OnCoverClosed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.OnCoverOpened__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::OnCoverOpened__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "OnCoverOpened__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.OnFailed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::OnFailed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "OnFailed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.OnRelease__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::OnRelease__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "OnRelease__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.OnSuccessed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::OnSuccessed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "OnSuccessed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.Open
// (BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "Open");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.PlayDisplayError
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::PlayDisplayError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "PlayDisplayError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.PlayEventAttachedToPlayerMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       FMod                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::PlayEventAttachedToPlayerMulti(class UFMODEvent* FMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "PlayEventAttachedToPlayerMulti");

	Params::BP_AlarmKeyboard_C_PlayEventAttachedToPlayerMulti Parms{};

	Parms.FMod = FMod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.PlayEventAttachedToPlayerServ
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       FMod                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::PlayEventAttachedToPlayerServ(class UFMODEvent* FMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "PlayEventAttachedToPlayerServ");

	Params::BP_AlarmKeyboard_C_PlayEventAttachedToPlayerServ Parms{};

	Parms.FMod = FMod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.PlayRedLightFlashing
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::PlayRedLightFlashing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "PlayRedLightFlashing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AlarmKeyboard_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_AlarmKeyboard_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "ReceiveTick");

	Params::BP_AlarmKeyboard_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.RedLightTimer_Handler
// (BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::RedLightTimer_Handler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "RedLightTimer_Handler");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.ReleaseAlarm
// (BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::ReleaseAlarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "ReleaseAlarm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.ResetAlarmino
// (BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::ResetAlarmino()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "ResetAlarmino");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.SecondTry
// (BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::SecondTry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "SecondTry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.SetActive
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::SetActive(bool Param_IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "SetActive");

	Params::BP_AlarmKeyboard_C_SetActive Parms{};

	Parms.Param_IsActive = Param_IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.SetEnabledGreenLight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::SetEnabledGreenLight(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "SetEnabledGreenLight");

	Params::BP_AlarmKeyboard_C_SetEnabledGreenLight Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.SetEnabledRedLight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::SetEnabledRedLight(bool Enabled, double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "SetEnabledRedLight");

	Params::BP_AlarmKeyboard_C_SetEnabledRedLight Parms{};

	Parms.Enabled = Enabled;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.ThirdTry
// (BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::ThirdTry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "ThirdTry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.UnmarkAllButtons
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AlarmKeyboard_C::UnmarkAllButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "UnmarkAllButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AlarmKeyboard.BP_AlarmKeyboard_C.UpdateSelectedButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Row                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Column                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AlarmKeyboard_C::UpdateSelectedButton(int32 Row, int32 Column)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AlarmKeyboard_C", "UpdateSelectedButton");

	Params::BP_AlarmKeyboard_C_UpdateSelectedButton Parms{};

	Parms.Row = Row;
	Parms.Column = Column;

	UObject::ProcessEvent(Func, &Parms);
}

}

