#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_KeyIcon.WBP_KeyIcon_C
// 0x0100 (0x0380 - 0x0280)
class UWBP_KeyIcon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UInputKeySelector*                      FirstKey;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_AdditiveKey;                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG_Additive;                                 // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_KeyIcon;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_OutlineBG;                             // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_OutlineIcon;                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_KeyIconContainer;                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Content;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Text;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_KeyName;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_KeyDisplay;                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Plus;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x02F8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FMargin                                KeyIconPaddingPadding;                             // 0x0310(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	struct FLinearColor                           Background;                                        // 0x0320(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           KeyIconColor;                                      // 0x0330(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateColor                            KeyTextColor;                                      // 0x0340(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	float                                         TextKeyHeight;                                     // 0x0354(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         ImageKeyHeight;                                    // 0x0358(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bUsePositiveValue;                                 // 0x035C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           AdditiveImage_Outline;                             // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           AdditiveImage;                                     // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           ImageOutline;                                      // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Image;                                             // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_KeyIcon(int32 EntryPoint);
	void FindKeyIcon(const struct FKey& Param_Key, bool* Found, struct FF_KeysInfo* Out_Row);
	void GetKey(struct FKey* Param_Key);
	void HoverButton(bool bHover);
	void PreConstruct(bool IsDesignTime);
	void SetAdditionalControlKey(bool Shift, bool Ctrl, bool Alt, bool Cmd);
	void SetContent(const struct FKey& Param_Key);
	void SetOutline(bool bShow);
	void SetTextPadding(bool OneSymbol);
	void SetUsePositiveValue(bool Param_bUsePositiveValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_KeyIcon_C">();
	}
	static class UWBP_KeyIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_KeyIcon_C>();
	}
};
static_assert(alignof(UWBP_KeyIcon_C) == 0x000008, "Wrong alignment on UWBP_KeyIcon_C");
static_assert(sizeof(UWBP_KeyIcon_C) == 0x000380, "Wrong size on UWBP_KeyIcon_C");
static_assert(offsetof(UWBP_KeyIcon_C, UberGraphFrame) == 0x000280, "Member 'UWBP_KeyIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, Hover) == 0x000288, "Member 'UWBP_KeyIcon_C::Hover' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, FirstKey) == 0x000290, "Member 'UWBP_KeyIcon_C::FirstKey' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, HorizontalBox_AdditiveKey) == 0x000298, "Member 'UWBP_KeyIcon_C::HorizontalBox_AdditiveKey' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, Image_BG) == 0x0002A0, "Member 'UWBP_KeyIcon_C::Image_BG' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, Image_BG_Additive) == 0x0002A8, "Member 'UWBP_KeyIcon_C::Image_BG_Additive' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, Image_KeyIcon) == 0x0002B0, "Member 'UWBP_KeyIcon_C::Image_KeyIcon' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, RetainerBox_OutlineBG) == 0x0002B8, "Member 'UWBP_KeyIcon_C::RetainerBox_OutlineBG' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, RetainerBox_OutlineIcon) == 0x0002C0, "Member 'UWBP_KeyIcon_C::RetainerBox_OutlineIcon' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, ScaleBox_KeyIconContainer) == 0x0002C8, "Member 'UWBP_KeyIcon_C::ScaleBox_KeyIconContainer' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, SizeBox_Content) == 0x0002D0, "Member 'UWBP_KeyIcon_C::SizeBox_Content' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, SizeBox_Text) == 0x0002D8, "Member 'UWBP_KeyIcon_C::SizeBox_Text' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, TextBlock_KeyName) == 0x0002E0, "Member 'UWBP_KeyIcon_C::TextBlock_KeyName' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, WidgetSwitcher_KeyDisplay) == 0x0002E8, "Member 'UWBP_KeyIcon_C::WidgetSwitcher_KeyDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, WidgetSwitcher_Plus) == 0x0002F0, "Member 'UWBP_KeyIcon_C::WidgetSwitcher_Plus' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, Key) == 0x0002F8, "Member 'UWBP_KeyIcon_C::Key' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, KeyIconPaddingPadding) == 0x000310, "Member 'UWBP_KeyIcon_C::KeyIconPaddingPadding' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, Background) == 0x000320, "Member 'UWBP_KeyIcon_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, KeyIconColor) == 0x000330, "Member 'UWBP_KeyIcon_C::KeyIconColor' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, KeyTextColor) == 0x000340, "Member 'UWBP_KeyIcon_C::KeyTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, TextKeyHeight) == 0x000354, "Member 'UWBP_KeyIcon_C::TextKeyHeight' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, ImageKeyHeight) == 0x000358, "Member 'UWBP_KeyIcon_C::ImageKeyHeight' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, bUsePositiveValue) == 0x00035C, "Member 'UWBP_KeyIcon_C::bUsePositiveValue' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, AdditiveImage_Outline) == 0x000360, "Member 'UWBP_KeyIcon_C::AdditiveImage_Outline' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, AdditiveImage) == 0x000368, "Member 'UWBP_KeyIcon_C::AdditiveImage' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, ImageOutline) == 0x000370, "Member 'UWBP_KeyIcon_C::ImageOutline' has a wrong offset!");
static_assert(offsetof(UWBP_KeyIcon_C, Image) == 0x000378, "Member 'UWBP_KeyIcon_C::Image' has a wrong offset!");

}

