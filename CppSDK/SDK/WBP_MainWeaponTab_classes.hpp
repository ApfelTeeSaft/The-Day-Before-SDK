#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MainWeaponTab

#include "Basic.hpp"

#include "E_TypesOfModes_structs.hpp"
#include "Engine_structs.hpp"
#include "WE_WorkbenchCategoryType_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "E_DependenciesRule_structs.hpp"
#include "Slate_structs.hpp"
#include "E_AttachmentDependencyTypes_structs.hpp"
#include "WE_MessageTypes_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MainWeaponTab.WBP_MainWeaponTab_C
// 0x0660 (0x08E0 - 0x0280)
class UWBP_MainWeaponTab_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Select_item_Short;                                 // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_item_Ref;                                   // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ToggleAttachmentTagsSelector_Pretty;               // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ToggleAttachmentsSelector_Pretty;                  // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ToggleTags;                                        // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           Box_ListOfAttachmentTags;                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Box_ListOfWeapons;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Butt1;                                             // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Butt2;                                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Butt2_1;                                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ButtAdapter1;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ButtAdapter2;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ButtAdapter2_1;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_RotatedTrigger;                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_TabMain;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Tags;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CanvasPanel_Tags_TEST;                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Trace;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Handguard1;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Handguard2;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Handguard2_1;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_64;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RenderTarget;                                // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Magazine1;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Magazine2;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Magazine2_1;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Muzzle1;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Muzzle2;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Muzzle2_1;                                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PistolGrip1;                                       // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PistolGrip2;                                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PistolGrip2_1;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Receiver1;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Receiver2;                                         // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Receiver2_1;                                       // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrolBox__AttachmentTagsContainer;                 // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_WeaponsContainer;                        // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sight1;                                            // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sight2;                                            // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sight2_1;                                          // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_1;                                         // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TacticalGrip1;                                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TacticalGrip2;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TacticalGrip2_1;                                   // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Description;                                  // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_3;                                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_5;                                       // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Slot;                                    // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_SlotMax;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_57;                                  // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_160;                                 // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_AttachmentTagsContainer;               // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Info;                                  // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_WeaponsContainer;                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CategorySelector_C*                  W_CategorySelector;                                // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     W_HintButtonNew_Close;                             // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     W_HintButtonNew_Repair;                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AttachmentsSelector_C*             WBP_AttachmentsSelector;                           // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BaseMessage_C*                     WBP_BaseMessage;                                   // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CraftErrorMessage_C*               WBP_CraftErrorMessage;                             // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_LineTracePointer_C*                WBP_LineTracePointer;                              // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_Accessories;                   // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_Butt;                          // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_ButtStockAdapter;              // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_Handguard;                     // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_Magazine;                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_MountSight;                    // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_Muzzle;                        // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_PistolGrip;                    // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_Receiver;                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_Sight;                         // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_Sticker;                       // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_Sticker_1;                     // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_Sticker_2;                     // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_TacticalGrip;                  // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ModeCategoryTag_C*                 WBP_ModeCategoryTag_TacticalSight;                 // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scroller_C*                        WBP_Scroller_AttachmentTagsContainer;              // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scroller_C*                        WBP_Scroller_WeaponsContainer;                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StaticWeapons_C*                   WBP_StaticWeapons;                                 // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Workbench_C*                       Parent_Ref;                                        // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      Player_Ref;                                        // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnActiveWeaponRowChanged;                          // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UWBP_WeaponRow_C*>               ArrayOfWeaponRow;                                  // 0x0538(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_             OnWeaponInfoChanged;                               // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsSupportedAttachments;                            // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Workbench_C*                       WorkbenchRef;                                      // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnChangeResource;                                  // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FName>                           Category;                                          // 0x0578(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UWBP_WeaponCategory_C*>          AllRows;                                           // 0x0588(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FFItemInfo                             Weapon_Info;                                       // 0x0598(0x0220)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class UWBP_WeaponRow_C*                       Active_weapon;                                     // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          VisibilityTags;                                    // 0x07C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          VisibilityAttachments;                             // 0x07C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EWE_WorkbenchCategoryType                     CurrentCategoryType;                               // 0x07C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Initialized;                                       // 0x07C3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lock;                                              // 0x07C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModeCategoryTag_C*                 ActiveCategory;                                    // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RotateActorTimerHandle;                            // 0x07D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          RotatedActor;                                      // 0x07D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MuzzleTag;                                         // 0x07D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HandguardTag;                                      // 0x07DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TacticalGripTag;                                   // 0x07DB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7DC[0x4];                                      // 0x07DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnReleasedBack;                                    // 0x07E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_AttachmentCell_C*                  AttachmentCellRef;                                 // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_ModeCategoryTag_C*>         Modes;                                             // 0x07F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_             OnAttachmentVisibilityChange;                      // 0x0808(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          InitSelect;                                        // 0x0818(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_819[0x7];                                      // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModeCategoryTag_C*                 CurrentModeCategoryTag;                            // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          New_Param;                                         // 0x0828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<int32>                                   ValidAttachmentsList;                              // 0x0830(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         Name_WBP_MainWeaponTab_C;                          // 0x0880(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnAttachmentChanged;                               // 0x0890(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnWeaponRowActivated;                              // 0x08A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnWeaponTagSelected;                               // 0x08B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           WarningMessageTimer;                               // 0x08C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bAttachmentTagsWindowVisible;                      // 0x08C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnAddedInFocusPath;                                // 0x08D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ActivateWeaponRow(class UWBP_WeaponRow_C* ActiveWeapon);
	void BindInventoryUpdate();
	void BndEvt__WBP_MainWeaponTab_Button_RotatedTrigger_K2Node_ComponentBoundEvent_47_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_W_CategorySelector_K2Node_ComponentBoundEvent_1_OnCategoryChanged__DelegateSignature(int32 CategoryIndex);
	void BndEvt__WBP_MainWeaponTab_WBP_AttachmentsSelector_K2Node_ComponentBoundEvent_3_OnNotEnoughSpacceToRemoveAttachment__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_AttachmentsSelector_K2Node_ComponentBoundEvent_6_OnReleasedBack__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_Butt_K2Node_ComponentBoundEvent_7_OnClickedTag__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_ButtStockAdapter_K2Node_ComponentBoundEvent_8_OnClickedTag__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_Handguard_K2Node_ComponentBoundEvent_3_OnClickedTag__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_Magazine_K2Node_ComponentBoundEvent_10_OnClickedTag__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_MountSight_K2Node_ComponentBoundEvent_0_OnClickedTag__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_Muzzle_K2Node_ComponentBoundEvent_2_OnClickedTag__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_PistolGrip_K2Node_ComponentBoundEvent_9_OnClickedTag__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_Receiver_K2Node_ComponentBoundEvent_5_OnClickedTag__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_Sight_K2Node_ComponentBoundEvent_12_OnClickedTag__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_Sight_K2Node_ComponentBoundEvent_17_OnContentUpdated__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_TacticalGrip_K2Node_ComponentBoundEvent_11_OnClickedTag__DelegateSignature();
	void BndEvt__WBP_MainWeaponTab_WBP_ModeCategoryTag_TacticalGrip_K2Node_ComponentBoundEvent_16_OnContentUpdated__DelegateSignature();
	void BndEvt__WBP_WorkbenchWeaponTab_W_HintButtonNew_Close_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void CheckContainsWeapon(bool* Result);
	void CheckWeaponOnTagsPosition();
	void Close();
	void DeseletCategory();
	void Destruct();
	void ExecuteUbergraph_WBP_MainWeaponTab(int32 EntryPoint);
	void FindItems__Valid_(bool* Result, TArray<struct FFItemInfo>* ValidItems);
	void Finished_05AF743449F7ACA5B7AB6489EEBCB29B();
	void GetActiveAttachment(bool* Result, struct FFItemInfo* Item);
	void GetActiveCategory(class UWBP_ModeCategoryTag_C** Param_ActiveCategory);
	void GetAttachmentTagsWindowVisible(bool* Param_bAttachmentTagsWindowVisible);
	void GetAttachmentWindowVisible(bool* Param_IsVisible);
	void GetBaseAttachment(bool* Result, struct FAttachmentInfo* Attchment);
	void GetDefaultCustomizations(bool* Result, TArray<struct FFItemInfo>* Items);
	void GetDependencyAttachment(E_TypesOfModes* Result, struct FFItemInfo* Item, E_DependenciesRule* Rule);
	void GetLock(bool* Param_Lock);
	void GetLocked(bool* Locked);
	void GetNewCategoryType(EWE_WorkbenchCategoryType* CategoryType);
	void GetPlayerItems(bool* Result, TArray<struct FFItemInfo>* Items);
	void HideErrorMessage();
	void InitScrollers();
	void InventoryUpdate();
	void LockWeaponListsScroll(bool bLock);
	void On_Play_Animation_(class UWidgetAnimation* Animation, bool NewState);
	void OnActiveWeaponRowChanged__DelegateSignature(class UWBP_WeaponRow_C* NewActiveWeaponRow);
	void OnAddedInFocusPath__DelegateSignature(bool bAdded);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnAttachmentChanged__DelegateSignature(class UWBP_WeaponRow_C* WeaponRow);
	void OnAttachmentVisibilityChange__DelegateSignature(bool Visible);
	void OnChangeResource__DelegateSignature();
	void OnInitialize(bool ReMinusInit);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnLockOperation(double Duration, bool Param_Lock);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnPushMessage(EWE_MessageTypes Type, const class FText& Text, double Duration);
	void OnReleasedBack__DelegateSignature();
	void OnReleasedBack_Event();
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnRotateActor(const struct FVector2D& Delta);
	void OnSelecetedWeaponTag(int32 Param_Index, class UUserWidget* UserWidget);
	void OnUnSelectedWeaponTags(int32 Param_Index, class UUserWidget* UserWidget);
	void OnUpdateAttachments(const struct FFItemInfo& NewItem);
	void OnUpdateSelector();
	void OnUpdateTags(bool WithoutAnimation);
	void OnWeaponInfoChanged__DelegateSignature(const struct FFItemInfo& WeaponInfo);
	void OnWeaponRowActivated__DelegateSignature(class UWBP_WeaponRow_C* WeaponRow);
	void OnWeaponTagSelected__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void PreparingActiveSlotForAnimation();
	void ResetShowAttachment();
	void RevalidateAttachments();
	void Select_Ilem(class UWBP_WeaponRow_C* Param_Active_weapon);
	void SequenceEvent__ENTRYPOINTWBP_MainWeaponTab();
	void SequenceEvent__ENTRYPOINTWBP_MainWeaponTab_0();
	void SequenceEvent_AttachmentsSelector();
	void SequenceEvent_AttachmentTagsSelector();
	void SetDefaultChangeAnimation();
	void SetParentReference(class UWBP_Workbench_C* Workbench_Ref);
	void SetPositionActiveAttachment(int32 NewPosition);
	void SetRotateActor(bool NewState);
	void SetVisibilityAttahments(bool NewState, bool bPlayAnimation);
	void SetVisibilityWeaponTags(bool NewState);
	void SetWeaponInfo(const struct FFItemInfo& Param_Weapon_Info);
	void SetWeaponStats();
	void ShowWidget();
	void StartChangeAnimationForCurrentSlot(bool WithoutAnimation, class UWBP_ModeCategoryTag_C* ModeCategoreTagWidget, TArray<struct FFItemInfo>& Item, bool* Result);
	void ToggleFunctionButtons(bool NewState);
	void UnbindInventoryUpdate();
	void ValidateAttachments();
	void ValidateWeaponCategories();
	void WeaponInfoChanged(const struct FFItemInfo& Param_Weapon_Info);
	void WeaponRowPressed(bool bPressed, bool bPlayAnim);

	void GetIsSupportedAttachments(bool* bHasWeapon) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MainWeaponTab_C">();
	}
	static class UWBP_MainWeaponTab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MainWeaponTab_C>();
	}
};
static_assert(alignof(UWBP_MainWeaponTab_C) == 0x000008, "Wrong alignment on UWBP_MainWeaponTab_C");
static_assert(sizeof(UWBP_MainWeaponTab_C) == 0x0008E0, "Wrong size on UWBP_MainWeaponTab_C");
static_assert(offsetof(UWBP_MainWeaponTab_C, UberGraphFrame) == 0x000280, "Member 'UWBP_MainWeaponTab_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Select_item_Short) == 0x000288, "Member 'UWBP_MainWeaponTab_C::Select_item_Short' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Select_item_Ref) == 0x000290, "Member 'UWBP_MainWeaponTab_C::Select_item_Ref' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ToggleAttachmentTagsSelector_Pretty) == 0x000298, "Member 'UWBP_MainWeaponTab_C::ToggleAttachmentTagsSelector_Pretty' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ToggleAttachmentsSelector_Pretty) == 0x0002A0, "Member 'UWBP_MainWeaponTab_C::ToggleAttachmentsSelector_Pretty' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ToggleTags) == 0x0002A8, "Member 'UWBP_MainWeaponTab_C::ToggleTags' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Box_ListOfAttachmentTags) == 0x0002B0, "Member 'UWBP_MainWeaponTab_C::Box_ListOfAttachmentTags' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Box_ListOfWeapons) == 0x0002B8, "Member 'UWBP_MainWeaponTab_C::Box_ListOfWeapons' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Butt1) == 0x0002C0, "Member 'UWBP_MainWeaponTab_C::Butt1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Butt2) == 0x0002C8, "Member 'UWBP_MainWeaponTab_C::Butt2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Butt2_1) == 0x0002D0, "Member 'UWBP_MainWeaponTab_C::Butt2_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ButtAdapter1) == 0x0002D8, "Member 'UWBP_MainWeaponTab_C::ButtAdapter1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ButtAdapter2) == 0x0002E0, "Member 'UWBP_MainWeaponTab_C::ButtAdapter2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ButtAdapter2_1) == 0x0002E8, "Member 'UWBP_MainWeaponTab_C::ButtAdapter2_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Button_RotatedTrigger) == 0x0002F0, "Member 'UWBP_MainWeaponTab_C::Button_RotatedTrigger' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, CanvasPanel_TabMain) == 0x0002F8, "Member 'UWBP_MainWeaponTab_C::CanvasPanel_TabMain' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, CanvasPanel_Tags) == 0x000300, "Member 'UWBP_MainWeaponTab_C::CanvasPanel_Tags' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, CanvasPanel_Tags_TEST) == 0x000308, "Member 'UWBP_MainWeaponTab_C::CanvasPanel_Tags_TEST' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, CanvasPanel_Trace) == 0x000310, "Member 'UWBP_MainWeaponTab_C::CanvasPanel_Trace' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Handguard1) == 0x000318, "Member 'UWBP_MainWeaponTab_C::Handguard1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Handguard2) == 0x000320, "Member 'UWBP_MainWeaponTab_C::Handguard2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Handguard2_1) == 0x000328, "Member 'UWBP_MainWeaponTab_C::Handguard2_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Image_1) == 0x000330, "Member 'UWBP_MainWeaponTab_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Image_2) == 0x000338, "Member 'UWBP_MainWeaponTab_C::Image_2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Image_64) == 0x000340, "Member 'UWBP_MainWeaponTab_C::Image_64' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Image_RenderTarget) == 0x000348, "Member 'UWBP_MainWeaponTab_C::Image_RenderTarget' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Magazine1) == 0x000350, "Member 'UWBP_MainWeaponTab_C::Magazine1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Magazine2) == 0x000358, "Member 'UWBP_MainWeaponTab_C::Magazine2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Magazine2_1) == 0x000360, "Member 'UWBP_MainWeaponTab_C::Magazine2_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Muzzle1) == 0x000368, "Member 'UWBP_MainWeaponTab_C::Muzzle1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Muzzle2) == 0x000370, "Member 'UWBP_MainWeaponTab_C::Muzzle2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Muzzle2_1) == 0x000378, "Member 'UWBP_MainWeaponTab_C::Muzzle2_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, PistolGrip1) == 0x000380, "Member 'UWBP_MainWeaponTab_C::PistolGrip1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, PistolGrip2) == 0x000388, "Member 'UWBP_MainWeaponTab_C::PistolGrip2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, PistolGrip2_1) == 0x000390, "Member 'UWBP_MainWeaponTab_C::PistolGrip2_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Receiver1) == 0x000398, "Member 'UWBP_MainWeaponTab_C::Receiver1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Receiver2) == 0x0003A0, "Member 'UWBP_MainWeaponTab_C::Receiver2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Receiver2_1) == 0x0003A8, "Member 'UWBP_MainWeaponTab_C::Receiver2_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ScrolBox__AttachmentTagsContainer) == 0x0003B0, "Member 'UWBP_MainWeaponTab_C::ScrolBox__AttachmentTagsContainer' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ScrollBox_WeaponsContainer) == 0x0003B8, "Member 'UWBP_MainWeaponTab_C::ScrollBox_WeaponsContainer' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Sight1) == 0x0003C0, "Member 'UWBP_MainWeaponTab_C::Sight1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Sight2) == 0x0003C8, "Member 'UWBP_MainWeaponTab_C::Sight2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Sight2_1) == 0x0003D0, "Member 'UWBP_MainWeaponTab_C::Sight2_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, SizeBox_1) == 0x0003D8, "Member 'UWBP_MainWeaponTab_C::SizeBox_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, TacticalGrip1) == 0x0003E0, "Member 'UWBP_MainWeaponTab_C::TacticalGrip1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, TacticalGrip2) == 0x0003E8, "Member 'UWBP_MainWeaponTab_C::TacticalGrip2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, TacticalGrip2_1) == 0x0003F0, "Member 'UWBP_MainWeaponTab_C::TacticalGrip2_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Text_Description) == 0x0003F8, "Member 'UWBP_MainWeaponTab_C::Text_Description' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, TextBlock_3) == 0x000400, "Member 'UWBP_MainWeaponTab_C::TextBlock_3' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, TextBlock_5) == 0x000408, "Member 'UWBP_MainWeaponTab_C::TextBlock_5' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, TextBlock_Slot) == 0x000410, "Member 'UWBP_MainWeaponTab_C::TextBlock_Slot' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, TextBlock_SlotMax) == 0x000418, "Member 'UWBP_MainWeaponTab_C::TextBlock_SlotMax' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, UMG_LabelText) == 0x000420, "Member 'UWBP_MainWeaponTab_C::UMG_LabelText' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, UMG_LabelText_57) == 0x000428, "Member 'UWBP_MainWeaponTab_C::UMG_LabelText_57' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, UMG_LabelText_160) == 0x000430, "Member 'UWBP_MainWeaponTab_C::UMG_LabelText_160' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, VerticalBox_AttachmentTagsContainer) == 0x000438, "Member 'UWBP_MainWeaponTab_C::VerticalBox_AttachmentTagsContainer' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, VerticalBox_Info) == 0x000440, "Member 'UWBP_MainWeaponTab_C::VerticalBox_Info' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, VerticalBox_WeaponsContainer) == 0x000448, "Member 'UWBP_MainWeaponTab_C::VerticalBox_WeaponsContainer' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, W_CategorySelector) == 0x000450, "Member 'UWBP_MainWeaponTab_C::W_CategorySelector' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, W_HintButtonNew_Close) == 0x000458, "Member 'UWBP_MainWeaponTab_C::W_HintButtonNew_Close' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, W_HintButtonNew_Repair) == 0x000460, "Member 'UWBP_MainWeaponTab_C::W_HintButtonNew_Repair' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_AttachmentsSelector) == 0x000468, "Member 'UWBP_MainWeaponTab_C::WBP_AttachmentsSelector' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_BaseMessage) == 0x000470, "Member 'UWBP_MainWeaponTab_C::WBP_BaseMessage' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_CraftErrorMessage) == 0x000478, "Member 'UWBP_MainWeaponTab_C::WBP_CraftErrorMessage' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_LineTracePointer) == 0x000480, "Member 'UWBP_MainWeaponTab_C::WBP_LineTracePointer' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_Accessories) == 0x000488, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_Accessories' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_Butt) == 0x000490, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_Butt' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_ButtStockAdapter) == 0x000498, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_ButtStockAdapter' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_Handguard) == 0x0004A0, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_Handguard' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_Magazine) == 0x0004A8, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_Magazine' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_MountSight) == 0x0004B0, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_MountSight' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_Muzzle) == 0x0004B8, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_Muzzle' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_PistolGrip) == 0x0004C0, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_PistolGrip' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_Receiver) == 0x0004C8, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_Receiver' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_Sight) == 0x0004D0, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_Sight' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_Sticker) == 0x0004D8, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_Sticker' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_Sticker_1) == 0x0004E0, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_Sticker_1' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_Sticker_2) == 0x0004E8, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_Sticker_2' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_TacticalGrip) == 0x0004F0, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_TacticalGrip' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_ModeCategoryTag_TacticalSight) == 0x0004F8, "Member 'UWBP_MainWeaponTab_C::WBP_ModeCategoryTag_TacticalSight' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_Scroller_AttachmentTagsContainer) == 0x000500, "Member 'UWBP_MainWeaponTab_C::WBP_Scroller_AttachmentTagsContainer' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_Scroller_WeaponsContainer) == 0x000508, "Member 'UWBP_MainWeaponTab_C::WBP_Scroller_WeaponsContainer' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WBP_StaticWeapons) == 0x000510, "Member 'UWBP_MainWeaponTab_C::WBP_StaticWeapons' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Parent_Ref) == 0x000518, "Member 'UWBP_MainWeaponTab_C::Parent_Ref' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Player_Ref) == 0x000520, "Member 'UWBP_MainWeaponTab_C::Player_Ref' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, OnActiveWeaponRowChanged) == 0x000528, "Member 'UWBP_MainWeaponTab_C::OnActiveWeaponRowChanged' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ArrayOfWeaponRow) == 0x000538, "Member 'UWBP_MainWeaponTab_C::ArrayOfWeaponRow' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, OnWeaponInfoChanged) == 0x000548, "Member 'UWBP_MainWeaponTab_C::OnWeaponInfoChanged' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, IsSupportedAttachments) == 0x000558, "Member 'UWBP_MainWeaponTab_C::IsSupportedAttachments' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WorkbenchRef) == 0x000560, "Member 'UWBP_MainWeaponTab_C::WorkbenchRef' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, OnChangeResource) == 0x000568, "Member 'UWBP_MainWeaponTab_C::OnChangeResource' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Category) == 0x000578, "Member 'UWBP_MainWeaponTab_C::Category' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, AllRows) == 0x000588, "Member 'UWBP_MainWeaponTab_C::AllRows' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Weapon_Info) == 0x000598, "Member 'UWBP_MainWeaponTab_C::Weapon_Info' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Active_weapon) == 0x0007B8, "Member 'UWBP_MainWeaponTab_C::Active_weapon' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, VisibilityTags) == 0x0007C0, "Member 'UWBP_MainWeaponTab_C::VisibilityTags' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, VisibilityAttachments) == 0x0007C1, "Member 'UWBP_MainWeaponTab_C::VisibilityAttachments' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, CurrentCategoryType) == 0x0007C2, "Member 'UWBP_MainWeaponTab_C::CurrentCategoryType' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Initialized) == 0x0007C3, "Member 'UWBP_MainWeaponTab_C::Initialized' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Lock) == 0x0007C4, "Member 'UWBP_MainWeaponTab_C::Lock' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ActiveCategory) == 0x0007C8, "Member 'UWBP_MainWeaponTab_C::ActiveCategory' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, RotateActorTimerHandle) == 0x0007D0, "Member 'UWBP_MainWeaponTab_C::RotateActorTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, RotatedActor) == 0x0007D8, "Member 'UWBP_MainWeaponTab_C::RotatedActor' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, MuzzleTag) == 0x0007D9, "Member 'UWBP_MainWeaponTab_C::MuzzleTag' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, HandguardTag) == 0x0007DA, "Member 'UWBP_MainWeaponTab_C::HandguardTag' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, TacticalGripTag) == 0x0007DB, "Member 'UWBP_MainWeaponTab_C::TacticalGripTag' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, OnReleasedBack) == 0x0007E0, "Member 'UWBP_MainWeaponTab_C::OnReleasedBack' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, AttachmentCellRef) == 0x0007F0, "Member 'UWBP_MainWeaponTab_C::AttachmentCellRef' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Modes) == 0x0007F8, "Member 'UWBP_MainWeaponTab_C::Modes' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, OnAttachmentVisibilityChange) == 0x000808, "Member 'UWBP_MainWeaponTab_C::OnAttachmentVisibilityChange' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, InitSelect) == 0x000818, "Member 'UWBP_MainWeaponTab_C::InitSelect' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, CurrentModeCategoryTag) == 0x000820, "Member 'UWBP_MainWeaponTab_C::CurrentModeCategoryTag' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, New_Param) == 0x000828, "Member 'UWBP_MainWeaponTab_C::New_Param' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, ValidAttachmentsList) == 0x000830, "Member 'UWBP_MainWeaponTab_C::ValidAttachmentsList' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, Name_WBP_MainWeaponTab_C) == 0x000880, "Member 'UWBP_MainWeaponTab_C::Name_WBP_MainWeaponTab_C' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, OnAttachmentChanged) == 0x000890, "Member 'UWBP_MainWeaponTab_C::OnAttachmentChanged' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, OnWeaponRowActivated) == 0x0008A0, "Member 'UWBP_MainWeaponTab_C::OnWeaponRowActivated' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, OnWeaponTagSelected) == 0x0008B0, "Member 'UWBP_MainWeaponTab_C::OnWeaponTagSelected' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, WarningMessageTimer) == 0x0008C0, "Member 'UWBP_MainWeaponTab_C::WarningMessageTimer' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, bAttachmentTagsWindowVisible) == 0x0008C8, "Member 'UWBP_MainWeaponTab_C::bAttachmentTagsWindowVisible' has a wrong offset!");
static_assert(offsetof(UWBP_MainWeaponTab_C, OnAddedInFocusPath) == 0x0008D0, "Member 'UWBP_MainWeaponTab_C::OnAddedInFocusPath' has a wrong offset!");

}

