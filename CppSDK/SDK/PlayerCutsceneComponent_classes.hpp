#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerCutsceneComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerCutsceneComponent.PlayerCutsceneComponent_C
// 0x04D0 (0x0570 - 0x00A0)
class UPlayerCutsceneComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ULevelSequence*                         TeleportToWorldCutscene;                           // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          TeleportToHUBCutscene;                             // 0x00B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          InteractWithHUBDoor;                               // 0x00E0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          FirstLaunchCutscene;                               // 0x0110(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          RespawnCutscene;                                   // 0x0140(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class ALevelSequenceActor*                    LSPlayer;                                          // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      Survival_Player;                                   // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerInCutscene;                                  // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         HidenActors;                                       // 0x0188(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          HideOtherMeshesTimer;                              // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Min_Brightness;                                    // 0x01A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 Max_Brightness;                                    // 0x01B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class APostProcessVolume*>             PostProcess;                                       // 0x01C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             PlayingCutsceneEnded;                              // 0x01D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShowAfterCutscene;                                 // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             InCutscene;                                        // 0x01E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OutCutscene;                                       // 0x01F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TSoftObjectPtr<class ULevelSequence>          SaunaEnter0;                                       // 0x0208(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          SaunaEnter1;                                       // 0x0238(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          SaunaEnter2;                                       // 0x0268(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          SaunaEnter3;                                       // 0x0298(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          SaunaIdle;                                         // 0x02C8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          SaunaExit;                                         // 0x02F8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          SaunaExit2;                                        // 0x0328(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          SaunaExit3;                                        // 0x0358(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 Sauna_Spot;                                        // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Sauna_Door;                                        // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    SaunaIdleLS;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SaunExit;                                          // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         TutorialBeginCutscene;                             // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          TutorialCTActive;                                  // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          TutorialHUBTour;                                   // 0x03B8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UWBP_FlareSequenceTutorial_C*           FlarkaWidget;                                      // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_DialogueSubtitles_C*               Subtitles;                                         // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          TutorialTentCT;                                    // 0x03F8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          TeleportToHomeCutscene;                            // 0x0428(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnLoadingCompleted;                                // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnStartCutscene;                                   // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ReturnToHubCTEnded;                                // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ABP_Stash_C*                            AbbyStash;                                         // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          CTFromHouseToHub;                                  // 0x0490(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           TipStaminaTimer;                                   // 0x04C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          Char_LoadingScreen;                                // 0x04C8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          WithoutChar_Smoke;                                 // 0x04F8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          NewCity_Benchmark;                                 // 0x0528(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Saunich;                                           // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHubReturn;                                       // 0x0559(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sauna;                                             // 0x055A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ressurect;                                         // 0x055B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnLoadingScreenInited;                             // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AisenMulti(bool Pohui, class ASurvivalPlayer_C* Ref);
	void AisenServ(bool Pohui, class ASurvivalPlayer_C* Ref);
	void BenchMark(const struct FVector& OriginLoc, const struct FRotator& OriginRot, class AActor* Actor, bool Start);
	void CheckBinocularsState();
	void CT_FirstLaunch(const struct FVector& Pos, const struct FRotator& Rot);
	void CT_HUBTour();
	void CT_InteractWithHUBDoor(class AActor* HubDoor, class ULevelSequence* LevelSequence);
	void CT_PlayerRoomDoors(class AActor* HubDoor, class ULevelSequence* InSequence);
	void CT_PlayerSofa(class AActor* RoundSofa);
	void CT_PlayerSofaInteract(class AActor* Sofa, class ULevelSequence* InSequence);
	void CT_Respawn(const struct FVector& Location, const struct FRotator& Rotation);
	void CT_ReturnFromHouse(const struct FVector& OriginLoc, const struct FRotator& OriginRot, class AActor* Actor);
	void CT_ReturnFromHouseFinished();
	void CT_SaunaBegin(class AActor* SaunaSpot, class AActor* Door, class AActor* Param_SaunaExit);
	void CT_SaunaEnter1();
	void CT_SaunaEnter2();
	void CT_SaunaEnter3();
	void CT_SaunaEnter3_2();
	void CT_SaunaExit();
	void CT_SaunaExit2();
	void CT_SaunaExit3();
	void CT_SaunaIdle();
	void CT_ToHome(const struct FVector& OriginLoc, const struct FRotator& OriginRot, class AActor* Actor);
	void CT_ToHomeEnd();
	void CT_ToHUB(const struct FVector& OriginLoc, const struct FRotator& OriginRot, class AActor* Actor);
	void CT_ToWorld(const struct FVector& OriginLoc, const struct FRotator& OriginRot, bool Param_Ressurect);
	void CT_TutorialBegin();
	void CT_TutorialBeginEnd();
	void CTHubEnded();
	void Custom_Overlap();
	void CutsceneBegin(bool LockingInput);
	void CutsceneFinish();
	void CutsceneFinished(class AActor* Recipient, const class FString& StageName);
	void CutsceneFinishWithoutCollision();
	void EndLoadingScreen(bool OnCars);
	void EndSauna();
	void EnteredWorld();
	void ExecuteUbergraph_PlayerCutsceneComponent(int32 EntryPoint);
	void HiddenSync();
	void HideBannerNewLocation();
	void HubCutSceneFinished();
	void HubReturn();
	void InCutscene__DelegateSignature();
	void LoadingScreen(const struct FVector& Location, const struct FRotator& Rotation, bool NeedWithoutChar);
	void MC_RunSaunaIdle(class AActor* Spot);
	void MeshSaunaSpawn(class AActor* SpotRef, class ASurvivalPlayer_C* SurvRef, class AActor* CallRef);
	void MeshSaunaSpawnMulti(class AActor* SpotRef, class ASurvivalPlayer_C* SurvRef, class AActor* CallRef);
	void MeshSaunaSpawnServ(class AActor* SpotRef, class ASurvivalPlayer_C* SurvRef, class AActor* CallRef, class ABP_Sauna_Entering_C* SaunaEntRef);
	void NakedMulti();
	void NakedServ();
	void OnLoaded_2E0139BF49B2BC1766EA9EBA27DD9EFF(class UObject* Loaded);
	void OnLoaded_9D8F50EB4E137C8325EB0F9D289A7E65(class UObject* Loaded);
	void OnLoaded_D0A7B3EF412DF14E8EA190A212433690(class UObject* Loaded);
	void OnLoaded_FCF805A549A306C2A221F6BAD94C43F2(class UObject* Loaded);
	void OnLoadingCompleted__DelegateSignature();
	void OnLoadingScreenInited__DelegateSignature();
	void OnStartCutscene__DelegateSignature();
	void OutCutscene__DelegateSignature();
	void Phasing(bool In_);
	void Player_PPAdd_to_Cine_Camera(class ALevelSequenceActor* Sequence);
	void PlayingCutsceneEnded__DelegateSignature();
	void ReceiveBeginPlay();
	void ReturnToHubCTEnded__DelegateSignature();
	void RunSaunaIdle(class AActor* Spot);
	void SaunaCutsceneFinish();
	void SaunaExitInstant();
	void SaunaExitMeshRemove(class ABP_Sauna_Entering_C* EntRef, class AActor* Spot, class ABP_Sauna_Entering_C* NewParam);
	void SaunaExitMeshRemoveMulti(class ABP_Sauna_Entering_C* EntRef, class AActor* SportRef);
	void SaunaExitMeshRemoveServ(class ABP_Sauna_Entering_C* EntRef, class AActor* SpotRef, class ABP_Sauna_Entering_C* NewParam);
	void Serv_RunSaunaIdle(class AActor* Spot);
	void ServSetLocInCutscene(bool NewParam, const struct FVector& LocalLocation);
	void ShowBannerNewLocation();
	void ShowHouseTutorialSlide();
	void ShowLocationNotification();
	void ShowStats();
	void TipStaminaIncreased();
	void TrainingCutscene(class AActor* TrainingApp, class ULevelSequence* InSequence, bool Start_);
	void TutorTentCT(const struct FVector& OriginLoc, const struct FRotator& OriginRot, class AActor* Actor);
	void WidgetsToShow();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerCutsceneComponent_C">();
	}
	static class UPlayerCutsceneComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerCutsceneComponent_C>();
	}
};
static_assert(alignof(UPlayerCutsceneComponent_C) == 0x000008, "Wrong alignment on UPlayerCutsceneComponent_C");
static_assert(sizeof(UPlayerCutsceneComponent_C) == 0x000570, "Wrong size on UPlayerCutsceneComponent_C");
static_assert(offsetof(UPlayerCutsceneComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UPlayerCutsceneComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, TeleportToWorldCutscene) == 0x0000A8, "Member 'UPlayerCutsceneComponent_C::TeleportToWorldCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, TeleportToHUBCutscene) == 0x0000B0, "Member 'UPlayerCutsceneComponent_C::TeleportToHUBCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, InteractWithHUBDoor) == 0x0000E0, "Member 'UPlayerCutsceneComponent_C::InteractWithHUBDoor' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, FirstLaunchCutscene) == 0x000110, "Member 'UPlayerCutsceneComponent_C::FirstLaunchCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, RespawnCutscene) == 0x000140, "Member 'UPlayerCutsceneComponent_C::RespawnCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, LSPlayer) == 0x000170, "Member 'UPlayerCutsceneComponent_C::LSPlayer' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, Survival_Player) == 0x000178, "Member 'UPlayerCutsceneComponent_C::Survival_Player' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, PlayerInCutscene) == 0x000180, "Member 'UPlayerCutsceneComponent_C::PlayerInCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, HidenActors) == 0x000188, "Member 'UPlayerCutsceneComponent_C::HidenActors' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, HideOtherMeshesTimer) == 0x000198, "Member 'UPlayerCutsceneComponent_C::HideOtherMeshesTimer' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, Min_Brightness) == 0x0001A0, "Member 'UPlayerCutsceneComponent_C::Min_Brightness' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, Max_Brightness) == 0x0001B0, "Member 'UPlayerCutsceneComponent_C::Max_Brightness' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, PostProcess) == 0x0001C0, "Member 'UPlayerCutsceneComponent_C::PostProcess' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, PlayingCutsceneEnded) == 0x0001D0, "Member 'UPlayerCutsceneComponent_C::PlayingCutsceneEnded' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, ShowAfterCutscene) == 0x0001E0, "Member 'UPlayerCutsceneComponent_C::ShowAfterCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, InCutscene) == 0x0001E8, "Member 'UPlayerCutsceneComponent_C::InCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, OutCutscene) == 0x0001F8, "Member 'UPlayerCutsceneComponent_C::OutCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, SaunaEnter0) == 0x000208, "Member 'UPlayerCutsceneComponent_C::SaunaEnter0' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, SaunaEnter1) == 0x000238, "Member 'UPlayerCutsceneComponent_C::SaunaEnter1' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, SaunaEnter2) == 0x000268, "Member 'UPlayerCutsceneComponent_C::SaunaEnter2' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, SaunaEnter3) == 0x000298, "Member 'UPlayerCutsceneComponent_C::SaunaEnter3' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, SaunaIdle) == 0x0002C8, "Member 'UPlayerCutsceneComponent_C::SaunaIdle' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, SaunaExit) == 0x0002F8, "Member 'UPlayerCutsceneComponent_C::SaunaExit' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, SaunaExit2) == 0x000328, "Member 'UPlayerCutsceneComponent_C::SaunaExit2' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, SaunaExit3) == 0x000358, "Member 'UPlayerCutsceneComponent_C::SaunaExit3' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, Sauna_Spot) == 0x000388, "Member 'UPlayerCutsceneComponent_C::Sauna_Spot' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, Sauna_Door) == 0x000390, "Member 'UPlayerCutsceneComponent_C::Sauna_Door' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, SaunaIdleLS) == 0x000398, "Member 'UPlayerCutsceneComponent_C::SaunaIdleLS' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, SaunExit) == 0x0003A0, "Member 'UPlayerCutsceneComponent_C::SaunExit' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, TutorialBeginCutscene) == 0x0003A8, "Member 'UPlayerCutsceneComponent_C::TutorialBeginCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, TutorialCTActive) == 0x0003B0, "Member 'UPlayerCutsceneComponent_C::TutorialCTActive' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, TutorialHUBTour) == 0x0003B8, "Member 'UPlayerCutsceneComponent_C::TutorialHUBTour' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, FlarkaWidget) == 0x0003E8, "Member 'UPlayerCutsceneComponent_C::FlarkaWidget' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, Subtitles) == 0x0003F0, "Member 'UPlayerCutsceneComponent_C::Subtitles' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, TutorialTentCT) == 0x0003F8, "Member 'UPlayerCutsceneComponent_C::TutorialTentCT' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, TeleportToHomeCutscene) == 0x000428, "Member 'UPlayerCutsceneComponent_C::TeleportToHomeCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, OnLoadingCompleted) == 0x000458, "Member 'UPlayerCutsceneComponent_C::OnLoadingCompleted' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, OnStartCutscene) == 0x000468, "Member 'UPlayerCutsceneComponent_C::OnStartCutscene' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, ReturnToHubCTEnded) == 0x000478, "Member 'UPlayerCutsceneComponent_C::ReturnToHubCTEnded' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, AbbyStash) == 0x000488, "Member 'UPlayerCutsceneComponent_C::AbbyStash' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, CTFromHouseToHub) == 0x000490, "Member 'UPlayerCutsceneComponent_C::CTFromHouseToHub' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, TipStaminaTimer) == 0x0004C0, "Member 'UPlayerCutsceneComponent_C::TipStaminaTimer' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, Char_LoadingScreen) == 0x0004C8, "Member 'UPlayerCutsceneComponent_C::Char_LoadingScreen' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, WithoutChar_Smoke) == 0x0004F8, "Member 'UPlayerCutsceneComponent_C::WithoutChar_Smoke' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, NewCity_Benchmark) == 0x000528, "Member 'UPlayerCutsceneComponent_C::NewCity_Benchmark' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, Saunich) == 0x000558, "Member 'UPlayerCutsceneComponent_C::Saunich' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, IsHubReturn) == 0x000559, "Member 'UPlayerCutsceneComponent_C::IsHubReturn' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, Sauna) == 0x00055A, "Member 'UPlayerCutsceneComponent_C::Sauna' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, Ressurect) == 0x00055B, "Member 'UPlayerCutsceneComponent_C::Ressurect' has a wrong offset!");
static_assert(offsetof(UPlayerCutsceneComponent_C, OnLoadingScreenInited) == 0x000560, "Member 'UPlayerCutsceneComponent_C::OnLoadingScreenInited' has a wrong offset!");

}

