#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InteractPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_InteractPoint.W_InteractPoint_C
// 0x0068 (0x02E8 - 0x0280)
class UW_InteractPoint_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SwitchWidget;                                      // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideWidget;                                        // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowWidget;                                        // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_Outline;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Point;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           PointUpdaterTimerHandle;                           // 0x02B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PointVisibility;                                   // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PointToggle;                                       // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WidgetToggle;                                      // 0x02BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PointValue;                                        // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Player;                                            // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Target;                                            // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OriginalPosition;                                  // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void CustomPlayAnimation(class UWidgetAnimation* ShowAnimation, class UWidgetAnimation* HideAnimation, bool NewState, double* Duration);
	void Disabled();
	void ExecuteUbergraph_W_InteractPoint(int32 EntryPoint);
	void PointUpdaterTimerHandler();
	void SetPointValue(double NewValue);
	void SetReferences(class APawn* Param_Player, class USceneComponent* Param_Target);
	void SetVisibilityWidget(bool NewVisibility);
	void TogglePointAnimation(bool NewState);
	void ToggleWidgetAnimation(bool NewState, double* Duration);
	void UpdateWidgetPositions();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_InteractPoint_C">();
	}
	static class UW_InteractPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_InteractPoint_C>();
	}
};
static_assert(alignof(UW_InteractPoint_C) == 0x000008, "Wrong alignment on UW_InteractPoint_C");
static_assert(sizeof(UW_InteractPoint_C) == 0x0002E8, "Wrong size on UW_InteractPoint_C");
static_assert(offsetof(UW_InteractPoint_C, UberGraphFrame) == 0x000280, "Member 'UW_InteractPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, SwitchWidget) == 0x000288, "Member 'UW_InteractPoint_C::SwitchWidget' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, HideWidget) == 0x000290, "Member 'UW_InteractPoint_C::HideWidget' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, ShowWidget) == 0x000298, "Member 'UW_InteractPoint_C::ShowWidget' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, Image_Outline) == 0x0002A0, "Member 'UW_InteractPoint_C::Image_Outline' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, Image_Point) == 0x0002A8, "Member 'UW_InteractPoint_C::Image_Point' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, PointUpdaterTimerHandle) == 0x0002B0, "Member 'UW_InteractPoint_C::PointUpdaterTimerHandle' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, PointVisibility) == 0x0002B8, "Member 'UW_InteractPoint_C::PointVisibility' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, PointToggle) == 0x0002B9, "Member 'UW_InteractPoint_C::PointToggle' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, WidgetToggle) == 0x0002BA, "Member 'UW_InteractPoint_C::WidgetToggle' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, PointValue) == 0x0002C0, "Member 'UW_InteractPoint_C::PointValue' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, Player) == 0x0002C8, "Member 'UW_InteractPoint_C::Player' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, Target) == 0x0002D0, "Member 'UW_InteractPoint_C::Target' has a wrong offset!");
static_assert(offsetof(UW_InteractPoint_C, OriginalPosition) == 0x0002D8, "Member 'UW_InteractPoint_C::OriginalPosition' has a wrong offset!");

}

