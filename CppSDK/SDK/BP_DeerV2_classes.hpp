#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeerV2

#include "Basic.hpp"

#include "E_AdditiveDamage_structs.hpp"
#include "E_DeerSpawnType_structs.hpp"
#include "Engine_structs.hpp"
#include "F_MontagePartName_structs.hpp"
#include "E_DeerState_structs.hpp"
#include "F_DeerProperties_structs.hpp"
#include "Survival_structs.hpp"
#include "Survival_classes.hpp"
#include "F_MovementSettings_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DeerV2.BP_DeerV2_C
// 0x02F0 (0x0920 - 0x0630)
class ABP_DeerV2_C final : public ATDB_Deer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0630(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAIMovementComponent_C*                 AIMovementComponent;                               // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HeadAdditiveDamage;                                // 0x0640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PelvisAdditiveDamage;                              // 0x0641(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChestAdditiveDamage;                               // 0x0642(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_643[0x1];                                      // 0x0643(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AdditiveDamageMontagePlayRate;                     // 0x0644(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_MontagePartName                     MontagePartName;                                   // 0x0648(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ResetAdditiveNotifyName;                           // 0x0654(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           PelvisAdditiveDamageMontage;                       // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ChestAdditiveDamageMontage;                        // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           HeadAdditiveDamageMontage;                         // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   RoamingKey;                                        // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   PreviousState;                                     // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   State;                                             // 0x0681(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_682[0x6];                                      // 0x0682(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    RoarSound;                                         // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    IdleSound;                                         // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Health;                                            // 0x0698(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x069C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ChestBones;                                        // 0x06A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           PelvisBones;                                       // 0x06B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           HeadBones;                                         // 0x06C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        LookAtYaw;                                         // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookAtPitch;                                       // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDeerLooking;                                      // 0x06E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E1[0x7];                                      // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           RandomBehaviorTimer;                               // 0x06E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<E_DeerState>                           AvailableStates;                                   // 0x06F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<E_DeerState>                           StartupStates;                                     // 0x0700(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 AnimalsNavMeshName;                                // 0x0710(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           NavMeshGettingTimer;                               // 0x0720(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ARecastNavMesh*                         AnimalsNavData;                                    // 0x0728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             BehaviorFInished;                                  // 0x0730(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnTurningFinished;                                 // 0x0740(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	E_DeerSpawnType                               DeerType;                                          // 0x0750(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_DeerProperties                      DTRow;                                             // 0x0758(0x00E0)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnDeerDied;                                        // 0x0838(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Activated;                                         // 0x0848(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_849[0x7];                                      // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADeerManager_C*                         DeerManager;                                       // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ManagerIndex;                                      // 0x0858(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIC_Deer_C*                            DeerController;                                    // 0x0860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DeerMovementFilter;                                // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<Survival::EMovementType, struct FF_MovementSettings> FemaleMovementSettingsCPP;                         // 0x0870(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<Survival::EMovementType, struct FF_MovementSettings> MaleMovementSettingsCPP;                           // 0x08C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 LookAtActor;                                       // 0x0910(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        AnimBodyToFloorTime;                               // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateDeer();
	void BehaviorFInished__DelegateSignature(E_DeerState FromState);
	bool CheckFreeAdditiveMontage();
	void DeactivateDeer();
	void DeactivateMeshTick();
	void DeerLookAtRandomPoint();
	struct FF_MontagePartName Define_Montage_Section(class FName BoneName, class AActor*& DamageCauser);
	void EndRandomBehavior();
	void ExecuteUbergraph_BP_DeerV2(int32 EntryPoint);
	void FindAnimalsNavData();
	struct FVector GetHomeLocation();
	void InterruptBehaviour();
	void KillDeer();
	void MulticastInitializeDeer();
	void MulticastPlayAdditiveMontage(const struct FF_MontagePartName& Param_MontagePartName);
	void OnBlendOut_1C3C155B4C6B38F96A41ECBBD6E9D663(class FName NotifyName);
	void OnBlendOut_6E4413454C4A0DD39616FF8FC22A75DE(class FName NotifyName);
	void OnBlendOut_8804BFE1468DB6F469056D809A2418A5(class FName NotifyName);
	void OnBlendOut_9EE847AC409D3517E06D5F9E107B80B5(class FName NotifyName);
	void OnBlendOut_FF44C8724C5B458EF8013F85BCBC166B(class FName NotifyName);
	void OnCompleted_1C3C155B4C6B38F96A41ECBBD6E9D663(class FName NotifyName);
	void OnCompleted_6E4413454C4A0DD39616FF8FC22A75DE(class FName NotifyName);
	void OnCompleted_8804BFE1468DB6F469056D809A2418A5(class FName NotifyName);
	void OnCompleted_9EE847AC409D3517E06D5F9E107B80B5(class FName NotifyName);
	void OnCompleted_FF44C8724C5B458EF8013F85BCBC166B(class FName NotifyName);
	void OnDamage(double Damage, class FName BoneName, class AActor*& DamageCauser);
	void OnDeath();
	void OnDeerDied__DelegateSignature();
	void OnInterrupted_1C3C155B4C6B38F96A41ECBBD6E9D663(class FName NotifyName);
	void OnInterrupted_6E4413454C4A0DD39616FF8FC22A75DE(class FName NotifyName);
	void OnInterrupted_8804BFE1468DB6F469056D809A2418A5(class FName NotifyName);
	void OnInterrupted_9EE847AC409D3517E06D5F9E107B80B5(class FName NotifyName);
	void OnInterrupted_FF44C8724C5B458EF8013F85BCBC166B(class FName NotifyName);
	void OnLoaded_7D7526E749E577AF99E416BF2048C438(class UObject* Loaded);
	void OnLoaded_AF3D7D9A41C6A21E0D5476BC03C45643(class UObject* Loaded);
	void OnLoaded_B280F37E49F4965FBA4970944C652193(class UObject* Loaded);
	void OnLoaded_D768AC47460525BFF068CDB17D27376E(class UObject* Loaded);
	void OnNotifyBegin_1C3C155B4C6B38F96A41ECBBD6E9D663(class FName NotifyName);
	void OnNotifyBegin_6E4413454C4A0DD39616FF8FC22A75DE(class FName NotifyName);
	void OnNotifyBegin_8804BFE1468DB6F469056D809A2418A5(class FName NotifyName);
	void OnNotifyBegin_9EE847AC409D3517E06D5F9E107B80B5(class FName NotifyName);
	void OnNotifyBegin_FF44C8724C5B458EF8013F85BCBC166B(class FName NotifyName);
	void OnNotifyEnd_1C3C155B4C6B38F96A41ECBBD6E9D663(class FName NotifyName);
	void OnNotifyEnd_6E4413454C4A0DD39616FF8FC22A75DE(class FName NotifyName);
	void OnNotifyEnd_8804BFE1468DB6F469056D809A2418A5(class FName NotifyName);
	void OnNotifyEnd_9EE847AC409D3517E06D5F9E107B80B5(class FName NotifyName);
	void OnNotifyEnd_FF44C8724C5B458EF8013F85BCBC166B(class FName NotifyName);
	void OnRep_State();
	void OnStartRoaming();
	void OnTurningFinished__DelegateSignature();
	void PlayAdditiveDamageMontage(class FName BoneName, class AActor*& DamageCauser);
	void RandomBehaviour(E_DeerState* Param_State);
	void ReceiveBeginPlay();
	void ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo);
	void RepDeath();
	void RepRandomBehavior();
	void RepRunFromDanger();
	void ResetDeer();
	void ServerInitializeDeer(E_DeerSpawnType Param_DeerType, int32 Param_ManagerIndex, const struct FVector& Location, const struct FRotator& Rotation);
	void StartDeerLooking();
	void StopDeerLooking();
	void TurnLeft_Multicast();
	void TurnLeft_Server();
	void TurnRight_Multicast();
	void TurnRight_Server();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DeerV2_C">();
	}
	static class ABP_DeerV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DeerV2_C>();
	}
};
static_assert(alignof(ABP_DeerV2_C) == 0x000010, "Wrong alignment on ABP_DeerV2_C");
static_assert(sizeof(ABP_DeerV2_C) == 0x000920, "Wrong size on ABP_DeerV2_C");
static_assert(offsetof(ABP_DeerV2_C, UberGraphFrame) == 0x000630, "Member 'ABP_DeerV2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, AIMovementComponent) == 0x000638, "Member 'ABP_DeerV2_C::AIMovementComponent' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, HeadAdditiveDamage) == 0x000640, "Member 'ABP_DeerV2_C::HeadAdditiveDamage' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, PelvisAdditiveDamage) == 0x000641, "Member 'ABP_DeerV2_C::PelvisAdditiveDamage' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, ChestAdditiveDamage) == 0x000642, "Member 'ABP_DeerV2_C::ChestAdditiveDamage' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, AdditiveDamageMontagePlayRate) == 0x000644, "Member 'ABP_DeerV2_C::AdditiveDamageMontagePlayRate' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, MontagePartName) == 0x000648, "Member 'ABP_DeerV2_C::MontagePartName' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, ResetAdditiveNotifyName) == 0x000654, "Member 'ABP_DeerV2_C::ResetAdditiveNotifyName' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, PelvisAdditiveDamageMontage) == 0x000660, "Member 'ABP_DeerV2_C::PelvisAdditiveDamageMontage' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, ChestAdditiveDamageMontage) == 0x000668, "Member 'ABP_DeerV2_C::ChestAdditiveDamageMontage' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, HeadAdditiveDamageMontage) == 0x000670, "Member 'ABP_DeerV2_C::HeadAdditiveDamageMontage' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, RoamingKey) == 0x000678, "Member 'ABP_DeerV2_C::RoamingKey' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, PreviousState) == 0x000680, "Member 'ABP_DeerV2_C::PreviousState' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, State) == 0x000681, "Member 'ABP_DeerV2_C::State' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, RoarSound) == 0x000688, "Member 'ABP_DeerV2_C::RoarSound' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, IdleSound) == 0x000690, "Member 'ABP_DeerV2_C::IdleSound' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, Health) == 0x000698, "Member 'ABP_DeerV2_C::Health' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, MaxHealth) == 0x00069C, "Member 'ABP_DeerV2_C::MaxHealth' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, ChestBones) == 0x0006A0, "Member 'ABP_DeerV2_C::ChestBones' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, PelvisBones) == 0x0006B0, "Member 'ABP_DeerV2_C::PelvisBones' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, HeadBones) == 0x0006C0, "Member 'ABP_DeerV2_C::HeadBones' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, LookAtYaw) == 0x0006D0, "Member 'ABP_DeerV2_C::LookAtYaw' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, LookAtPitch) == 0x0006D8, "Member 'ABP_DeerV2_C::LookAtPitch' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, bDeerLooking) == 0x0006E0, "Member 'ABP_DeerV2_C::bDeerLooking' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, RandomBehaviorTimer) == 0x0006E8, "Member 'ABP_DeerV2_C::RandomBehaviorTimer' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, AvailableStates) == 0x0006F0, "Member 'ABP_DeerV2_C::AvailableStates' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, StartupStates) == 0x000700, "Member 'ABP_DeerV2_C::StartupStates' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, AnimalsNavMeshName) == 0x000710, "Member 'ABP_DeerV2_C::AnimalsNavMeshName' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, NavMeshGettingTimer) == 0x000720, "Member 'ABP_DeerV2_C::NavMeshGettingTimer' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, AnimalsNavData) == 0x000728, "Member 'ABP_DeerV2_C::AnimalsNavData' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, BehaviorFInished) == 0x000730, "Member 'ABP_DeerV2_C::BehaviorFInished' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, OnTurningFinished) == 0x000740, "Member 'ABP_DeerV2_C::OnTurningFinished' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, DeerType) == 0x000750, "Member 'ABP_DeerV2_C::DeerType' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, DTRow) == 0x000758, "Member 'ABP_DeerV2_C::DTRow' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, OnDeerDied) == 0x000838, "Member 'ABP_DeerV2_C::OnDeerDied' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, Activated) == 0x000848, "Member 'ABP_DeerV2_C::Activated' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, DeerManager) == 0x000850, "Member 'ABP_DeerV2_C::DeerManager' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, ManagerIndex) == 0x000858, "Member 'ABP_DeerV2_C::ManagerIndex' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, DeerController) == 0x000860, "Member 'ABP_DeerV2_C::DeerController' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, DeerMovementFilter) == 0x000868, "Member 'ABP_DeerV2_C::DeerMovementFilter' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, FemaleMovementSettingsCPP) == 0x000870, "Member 'ABP_DeerV2_C::FemaleMovementSettingsCPP' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, MaleMovementSettingsCPP) == 0x0008C0, "Member 'ABP_DeerV2_C::MaleMovementSettingsCPP' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, LookAtActor) == 0x000910, "Member 'ABP_DeerV2_C::LookAtActor' has a wrong offset!");
static_assert(offsetof(ABP_DeerV2_C, AnimBodyToFloorTime) == 0x000918, "Member 'ABP_DeerV2_C::AnimBodyToFloorTime' has a wrong offset!");

}

