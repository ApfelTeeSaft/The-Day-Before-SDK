#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_InventoryCounter

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_InventoryCounter.W_InventoryCounter_C.ExecuteUbergraph_W_InventoryCounter
// 0x00E0 (0x00E0 - 0x0000)
struct W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0028(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetValueDigitNum_Result;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetZeros_Zeros;                           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00B4(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00C8(0x0014)()
};
static_assert(alignof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter) == 0x000008, "Wrong alignment on W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter");
static_assert(sizeof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter) == 0x0000E0, "Wrong size on W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, EntryPoint) == 0x000000, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, K2Node_CustomEvent_Value) == 0x000004, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, K2Node_MakeStruct_SlateFontInfo) == 0x000028, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000080, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, CallFunc_GetValueDigitNum_Result) == 0x000084, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::CallFunc_GetValueDigitNum_Result' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, CallFunc_GetZeros_Zeros) == 0x000088, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::CallFunc_GetZeros_Zeros' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, K2Node_Event_IsDesignTime) == 0x0000B1, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, K2Node_MakeStruct_SlateColor) == 0x0000B4, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter, K2Node_MakeStruct_SlateColor_1) == 0x0000C8, "Member 'W_InventoryCounter_C_ExecuteUbergraph_W_InventoryCounter::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function W_InventoryCounter.W_InventoryCounter_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_InventoryCounter_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryCounter_C_PreConstruct) == 0x000001, "Wrong alignment on W_InventoryCounter_C_PreConstruct");
static_assert(sizeof(W_InventoryCounter_C_PreConstruct) == 0x000001, "Wrong size on W_InventoryCounter_C_PreConstruct");
static_assert(offsetof(W_InventoryCounter_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_InventoryCounter_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_InventoryCounter.W_InventoryCounter_C.UpdateValue
// 0x0004 (0x0004 - 0x0000)
struct W_InventoryCounter_C_UpdateValue final
{
public:
	int32                                         Param_Value;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryCounter_C_UpdateValue) == 0x000004, "Wrong alignment on W_InventoryCounter_C_UpdateValue");
static_assert(sizeof(W_InventoryCounter_C_UpdateValue) == 0x000004, "Wrong size on W_InventoryCounter_C_UpdateValue");
static_assert(offsetof(W_InventoryCounter_C_UpdateValue, Param_Value) == 0x000000, "Member 'W_InventoryCounter_C_UpdateValue::Param_Value' has a wrong offset!");

// Function W_InventoryCounter.W_InventoryCounter_C.GetValueDigitNum
// 0x0020 (0x0020 - 0x0000)
struct W_InventoryCounter_C_GetValueDigitNum final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalValue;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumDigit;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryCounter_C_GetValueDigitNum) == 0x000004, "Wrong alignment on W_InventoryCounter_C_GetValueDigitNum");
static_assert(sizeof(W_InventoryCounter_C_GetValueDigitNum) == 0x000020, "Wrong size on W_InventoryCounter_C_GetValueDigitNum");
static_assert(offsetof(W_InventoryCounter_C_GetValueDigitNum, Result) == 0x000000, "Member 'W_InventoryCounter_C_GetValueDigitNum::Result' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetValueDigitNum, LocalValue) == 0x000004, "Member 'W_InventoryCounter_C_GetValueDigitNum::LocalValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetValueDigitNum, NumDigit) == 0x000008, "Member 'W_InventoryCounter_C_GetValueDigitNum::NumDigit' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetValueDigitNum, Temp_int_Variable) == 0x00000C, "Member 'W_InventoryCounter_C_GetValueDigitNum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetValueDigitNum, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'W_InventoryCounter_C_GetValueDigitNum::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetValueDigitNum, CallFunc_Divide_IntInt_ReturnValue) == 0x000014, "Member 'W_InventoryCounter_C_GetValueDigitNum::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetValueDigitNum, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000018, "Member 'W_InventoryCounter_C_GetValueDigitNum::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetValueDigitNum, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'W_InventoryCounter_C_GetValueDigitNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function W_InventoryCounter.W_InventoryCounter_C.GetZeros
// 0x0048 (0x0048 - 0x0000)
struct W_InventoryCounter_C_GetZeros final
{
public:
	int32                                         ValueDigitNum;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Zeros;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Result;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_InventoryCounter_C_GetZeros) == 0x000008, "Wrong alignment on W_InventoryCounter_C_GetZeros");
static_assert(sizeof(W_InventoryCounter_C_GetZeros) == 0x000048, "Wrong size on W_InventoryCounter_C_GetZeros");
static_assert(offsetof(W_InventoryCounter_C_GetZeros, ValueDigitNum) == 0x000000, "Member 'W_InventoryCounter_C_GetZeros::ValueDigitNum' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetZeros, Zeros) == 0x000008, "Member 'W_InventoryCounter_C_GetZeros::Zeros' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetZeros, Result) == 0x000018, "Member 'W_InventoryCounter_C_GetZeros::Result' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetZeros, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'W_InventoryCounter_C_GetZeros::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetZeros, Temp_int_Variable) == 0x000038, "Member 'W_InventoryCounter_C_GetZeros::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetZeros, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'W_InventoryCounter_C_GetZeros::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetZeros, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'W_InventoryCounter_C_GetZeros::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetZeros, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'W_InventoryCounter_C_GetZeros::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_InventoryCounter_C_GetZeros, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000045, "Member 'W_InventoryCounter_C_GetZeros::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

