#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ShopCategoryContainer

#include "Basic.hpp"

#include "InfoType_structs.hpp"
#include "Engine_structs.hpp"
#include "SlotRarity_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ShopCategoryContainer.W_ShopCategoryContainer_C
// 0x02D8 (0x0558 - 0x0280)
class UW_ShopCategoryContainer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UJSIContainer_C*                        JSIContainer_ShopCat;                              // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextShop_Category;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LabelTextShop_C*                     W_LabelTextShop;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ShopContainerCategory;                             // 0x02A8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	class FText                                   TitleContainer;                                    // 0x02C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFItemInfo                             ItemInfo;                                          // 0x02D8(0x0220)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          PickupsInfo;                                       // 0x04F8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, ExposeOnSpawn)
	TArray<EInfoType>                             Info_Type;                                         // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UDataTable*                             AssortmentDataTable;                               // 0x0518(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class FName>                           ItemsID;                                           // 0x0520(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FContainerPickupsInfo>          SortPickupsInfo;                                   // 0x0530(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         New_Columns;                                       // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_Rows;                                          // 0x0544(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          CurPickupsInfo;                                    // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void AddItems(class UJSIContainer_C* Container, int32 ToSlot, TSoftObjectPtr<class UObject> Image, const struct FVector2D& SlotVector, ESlotRarity Rarity, const struct FFItemInfo& Param_ItemInfo, struct FFItemInfo* Info, class UJSI_Slot_C** SlotItemRef, EInfoType* InfoType, int32* AddedToSlot);
	void Construct();
	void ExecuteUbergraph_W_ShopCategoryContainer(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void ReMinusInit();
	void ReMinussort();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ShopCategoryContainer_C">();
	}
	static class UW_ShopCategoryContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ShopCategoryContainer_C>();
	}
};
static_assert(alignof(UW_ShopCategoryContainer_C) == 0x000008, "Wrong alignment on UW_ShopCategoryContainer_C");
static_assert(sizeof(UW_ShopCategoryContainer_C) == 0x000558, "Wrong size on UW_ShopCategoryContainer_C");
static_assert(offsetof(UW_ShopCategoryContainer_C, UberGraphFrame) == 0x000280, "Member 'UW_ShopCategoryContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, JSIContainer_ShopCat) == 0x000288, "Member 'UW_ShopCategoryContainer_C::JSIContainer_ShopCat' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, TextShop_Category) == 0x000290, "Member 'UW_ShopCategoryContainer_C::TextShop_Category' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, W_LabelTextShop) == 0x000298, "Member 'UW_ShopCategoryContainer_C::W_LabelTextShop' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, WidgetSwitcher_0) == 0x0002A0, "Member 'UW_ShopCategoryContainer_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, ShopContainerCategory) == 0x0002A8, "Member 'UW_ShopCategoryContainer_C::ShopContainerCategory' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, TitleContainer) == 0x0002C0, "Member 'UW_ShopCategoryContainer_C::TitleContainer' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, ItemInfo) == 0x0002D8, "Member 'UW_ShopCategoryContainer_C::ItemInfo' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, PickupsInfo) == 0x0004F8, "Member 'UW_ShopCategoryContainer_C::PickupsInfo' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, Info_Type) == 0x000508, "Member 'UW_ShopCategoryContainer_C::Info_Type' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, AssortmentDataTable) == 0x000518, "Member 'UW_ShopCategoryContainer_C::AssortmentDataTable' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, ItemsID) == 0x000520, "Member 'UW_ShopCategoryContainer_C::ItemsID' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, SortPickupsInfo) == 0x000530, "Member 'UW_ShopCategoryContainer_C::SortPickupsInfo' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, New_Columns) == 0x000540, "Member 'UW_ShopCategoryContainer_C::New_Columns' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, New_Rows) == 0x000544, "Member 'UW_ShopCategoryContainer_C::New_Rows' has a wrong offset!");
static_assert(offsetof(UW_ShopCategoryContainer_C, CurPickupsInfo) == 0x000548, "Member 'UW_ShopCategoryContainer_C::CurPickupsInfo' has a wrong offset!");

}

