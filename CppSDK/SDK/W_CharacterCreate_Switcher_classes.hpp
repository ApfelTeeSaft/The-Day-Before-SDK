#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CharacterCreate_Switcher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CharacterCreate_Switcher.W_CharacterCreate_Switcher_C
// 0x18A0 (0x1B20 - 0x0280)
class UW_CharacterCreate_Switcher_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Deselect_Anim;                                     // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_Anim;                                       // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover_Anim;                                        // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_DoScroll;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_SwitchBackward;                             // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_SwitchForward;                              // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ArrowLeft;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ArrowRight;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Hovered;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Selected;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MainText;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SettingLongText;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SettingText;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_ButtonLeft;                                // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_ButtonRight;                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Type;                               // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FText>                           Content;                                           // 0x0310(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         CurrentIndex;                                      // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             IndexHasBeenChanged;                               // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         MaxIndex;                                          // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           NormalButtonStyleF;                                // 0x0340(0x03F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           Style;                                             // 0x0730(0x03F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           NormalButtonStyle_B;                               // 0x0B20(0x03F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           Style_b;                                           // 0x0F10(0x03F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           Style_N_B;                                         // 0x1300(0x03F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           Style_N_F;                                         // 0x16F0(0x03F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsRowHovered;                                     // 0x1AE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRowSelected;                                    // 0x1AE1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AE2[0x6];                                     // 0x1AE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            ParentSettingsMenu;                                // 0x1AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   DisplayText;                                       // 0x1AF0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	int32                                         PreIndex;                                          // 0x1B08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_type;                                        // 0x1B0C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bEnabled;                                          // 0x1B10(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bSetUpperCaseTextHeader;                           // 0x1B11(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__W_SettingRow_Text_Button_DoScroll_K2Node_ComponentBoundEvent_6_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_SettingRow_Text_Button_SwitchBackward_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_SettingRow_Text_Button_SwitchForward_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void DeselectRow();
	void ExecuteUbergraph_W_CharacterCreate_Switcher(int32 EntryPoint);
	void GetIsDefaultValue(bool* Default);
	void GetSettingName(class FName* SettingName);
	void HoverRow();
	void IndexHasBeenChanged__DelegateSignature(int32 NewIndex);
	void Init(int32 Param_CurrentIndex);
	void InitSetting();
	void IsRowHovered(bool* Param_IsHovered);
	void IsRowSelected(bool* IsSelected);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void PreConstruct(bool IsDesignTime);
	void SelectRow();
	void SetArrowsOpacity();
	void SetButtonsState();
	void SetDefault();
	void SetDefaultClass();
	void SetHovered();
	void SetParentSettingsWidget(class UUserWidget* SettingsWidgetRef);
	void SetSelected(bool Selected);
	void SetTextByIndex(int32 Param_Index);
	void SetValues(TArray<class FText>& Param_Content);
	void UnhoverRow();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CharacterCreate_Switcher_C">();
	}
	static class UW_CharacterCreate_Switcher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CharacterCreate_Switcher_C>();
	}
};
static_assert(alignof(UW_CharacterCreate_Switcher_C) == 0x000010, "Wrong alignment on UW_CharacterCreate_Switcher_C");
static_assert(sizeof(UW_CharacterCreate_Switcher_C) == 0x001B20, "Wrong size on UW_CharacterCreate_Switcher_C");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, UberGraphFrame) == 0x000280, "Member 'UW_CharacterCreate_Switcher_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Deselect_Anim) == 0x000288, "Member 'UW_CharacterCreate_Switcher_C::Deselect_Anim' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Select_Anim) == 0x000290, "Member 'UW_CharacterCreate_Switcher_C::Select_Anim' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Hover_Anim) == 0x000298, "Member 'UW_CharacterCreate_Switcher_C::Hover_Anim' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Button_DoScroll) == 0x0002A0, "Member 'UW_CharacterCreate_Switcher_C::Button_DoScroll' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Button_SwitchBackward) == 0x0002A8, "Member 'UW_CharacterCreate_Switcher_C::Button_SwitchBackward' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Button_SwitchForward) == 0x0002B0, "Member 'UW_CharacterCreate_Switcher_C::Button_SwitchForward' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, HorizontalBox) == 0x0002B8, "Member 'UW_CharacterCreate_Switcher_C::HorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Image_ArrowLeft) == 0x0002C0, "Member 'UW_CharacterCreate_Switcher_C::Image_ArrowLeft' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Image_ArrowRight) == 0x0002C8, "Member 'UW_CharacterCreate_Switcher_C::Image_ArrowRight' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Image_Hovered) == 0x0002D0, "Member 'UW_CharacterCreate_Switcher_C::Image_Hovered' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Image_Selected) == 0x0002D8, "Member 'UW_CharacterCreate_Switcher_C::Image_Selected' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, MainText) == 0x0002E0, "Member 'UW_CharacterCreate_Switcher_C::MainText' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, SettingLongText) == 0x0002E8, "Member 'UW_CharacterCreate_Switcher_C::SettingLongText' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, SettingText) == 0x0002F0, "Member 'UW_CharacterCreate_Switcher_C::SettingText' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, SizeBox_ButtonLeft) == 0x0002F8, "Member 'UW_CharacterCreate_Switcher_C::SizeBox_ButtonLeft' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, SizeBox_ButtonRight) == 0x000300, "Member 'UW_CharacterCreate_Switcher_C::SizeBox_ButtonRight' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, WidgetSwitcher_Type) == 0x000308, "Member 'UW_CharacterCreate_Switcher_C::WidgetSwitcher_Type' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Content) == 0x000310, "Member 'UW_CharacterCreate_Switcher_C::Content' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, CurrentIndex) == 0x000320, "Member 'UW_CharacterCreate_Switcher_C::CurrentIndex' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, IndexHasBeenChanged) == 0x000328, "Member 'UW_CharacterCreate_Switcher_C::IndexHasBeenChanged' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, MaxIndex) == 0x000338, "Member 'UW_CharacterCreate_Switcher_C::MaxIndex' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, NormalButtonStyleF) == 0x000340, "Member 'UW_CharacterCreate_Switcher_C::NormalButtonStyleF' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Style) == 0x000730, "Member 'UW_CharacterCreate_Switcher_C::Style' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, NormalButtonStyle_B) == 0x000B20, "Member 'UW_CharacterCreate_Switcher_C::NormalButtonStyle_B' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Style_b) == 0x000F10, "Member 'UW_CharacterCreate_Switcher_C::Style_b' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Style_N_B) == 0x001300, "Member 'UW_CharacterCreate_Switcher_C::Style_N_B' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Style_N_F) == 0x0016F0, "Member 'UW_CharacterCreate_Switcher_C::Style_N_F' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, bIsRowHovered) == 0x001AE0, "Member 'UW_CharacterCreate_Switcher_C::bIsRowHovered' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, bIsRowSelected) == 0x001AE1, "Member 'UW_CharacterCreate_Switcher_C::bIsRowSelected' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, ParentSettingsMenu) == 0x001AE8, "Member 'UW_CharacterCreate_Switcher_C::ParentSettingsMenu' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, DisplayText) == 0x001AF0, "Member 'UW_CharacterCreate_Switcher_C::DisplayText' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, PreIndex) == 0x001B08, "Member 'UW_CharacterCreate_Switcher_C::PreIndex' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, Index_type) == 0x001B0C, "Member 'UW_CharacterCreate_Switcher_C::Index_type' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, bEnabled) == 0x001B10, "Member 'UW_CharacterCreate_Switcher_C::bEnabled' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Switcher_C, bSetUpperCaseTextHeader) == 0x001B11, "Member 'UW_CharacterCreate_Switcher_C::bSetUpperCaseTextHeader' has a wrong offset!");

}

