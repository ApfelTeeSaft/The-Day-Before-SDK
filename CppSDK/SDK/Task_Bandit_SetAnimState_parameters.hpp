#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Bandit_SetAnimState

#include "Basic.hpp"

#include "E_Bandit_MovementMode_structs.hpp"


namespace SDK::Params
{

// Function Task_Bandit_SetAnimState.Task_Bandit_SetAnimState_C.ExecuteUbergraph_Task_Bandit_SetAnimState
// 0x01A8 (0x01A8 - 0x0000)
struct Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         Temp_byte_Variable_2;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_14;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_15;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_16;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_17;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_18;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_19;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         Temp_byte_Variable_3;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         Temp_byte_Variable_4;                              // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         Temp_byte_Variable_5;                              // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         Temp_byte_Variable_6;                              // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Speed;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_20;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_21;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_22;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBanditAnim_BP_C*                       K2Node_DynamicCast_AsBandit_Anim_BP;               // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_23;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Bandit_MovementMode                         Temp_byte_Variable_7;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMainBanditAI_C*                        K2Node_DynamicCast_AsMain_Bandit_AI;               // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_4;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_5;                           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_6;                           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_7;                           // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState) == 0x000008, "Wrong alignment on Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState");
static_assert(sizeof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState) == 0x0001A8, "Wrong size on Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, EntryPoint) == 0x000000, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable) == 0x000008, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_1) == 0x000010, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_byte_Variable) == 0x000018, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_2) == 0x000020, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_3) == 0x000028, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_4) == 0x000030, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_5) == 0x000038, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_6) == 0x000040, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_7) == 0x000048, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_byte_Variable_1) == 0x000050, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_8) == 0x000058, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_9) == 0x000060, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_10) == 0x000068, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_11) == 0x000070, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_12) == 0x000078, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_13) == 0x000080, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_byte_Variable_2) == 0x000088, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_14) == 0x000090, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_15) == 0x000098, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_16) == 0x0000A0, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_16' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_17) == 0x0000A8, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_17' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_18) == 0x0000B0, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_18' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_19) == 0x0000B8, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_19' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_byte_Variable_3) == 0x0000C0, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable) == 0x0000C1, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_1) == 0x0000C2, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_2) == 0x0000C3, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_3) == 0x0000C4, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_4) == 0x0000C5, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_5) == 0x0000C6, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_byte_Variable_4) == 0x0000C7, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_6) == 0x0000C8, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_7) == 0x0000C9, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_8) == 0x0000CA, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_9) == 0x0000CB, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_10) == 0x0000CC, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_11) == 0x0000CD, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_byte_Variable_5) == 0x0000CE, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_12) == 0x0000CF, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_13) == 0x0000D0, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_14) == 0x0000D1, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_15) == 0x0000D2, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_16) == 0x0000D3, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_17) == 0x0000D4, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_byte_Variable_6) == 0x0000D5, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_18) == 0x0000D6, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_19) == 0x0000D7, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_20) == 0x0000D8, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_21) == 0x0000D9, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_22) == 0x0000DA, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_bool_Variable_23) == 0x0000DB, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_CustomEvent_Speed) == 0x0000E0, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_CustomEvent_Speed' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_20) == 0x0000E8, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_20' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_21) == 0x0000F0, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_21' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F8, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F9, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_22) == 0x000100, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_22' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_BooleanOR_ReturnValue) == 0x000108, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000109, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_GetAnimInstance_ReturnValue) == 0x000110, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000118, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_DynamicCast_AsBandit_Anim_BP) == 0x000120, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_DynamicCast_AsBandit_Anim_BP' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_BooleanAND_ReturnValue) == 0x000129, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_real_Variable_23) == 0x000130, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_real_Variable_23' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, Temp_byte_Variable_7) == 0x000138, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_Event_OwnerController) == 0x000140, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_Event_ControlledPawn) == 0x000148, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_DynamicCast_AsMain_Bandit_AI) == 0x000150, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_DynamicCast_AsMain_Bandit_AI' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_Select_Default) == 0x000160, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_Select_Default_1) == 0x000168, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_Select_Default_2) == 0x000170, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_Select_Default_3) == 0x000178, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_Select_Default_4) == 0x000180, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_Select_Default_5) == 0x000188, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_Select_Default_6) == 0x000190, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, K2Node_Select_Default_7) == 0x000198, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000199, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00019A, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00019B, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00019C, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_BooleanAND_ReturnValue_1) == 0x00019D, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_BooleanOR_ReturnValue_1) == 0x00019E, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_BooleanAND_ReturnValue_2) == 0x00019F, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_BooleanAND_ReturnValue_3) == 0x0001A0, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0001A1, "Member 'Task_Bandit_SetAnimState_C_ExecuteUbergraph_Task_Bandit_SetAnimState::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Task_Bandit_SetAnimState.Task_Bandit_SetAnimState_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct Task_Bandit_SetAnimState_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SetAnimState_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on Task_Bandit_SetAnimState_C_ReceiveExecuteAI");
static_assert(sizeof(Task_Bandit_SetAnimState_C_ReceiveExecuteAI) == 0x000010, "Wrong size on Task_Bandit_SetAnimState_C_ReceiveExecuteAI");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'Task_Bandit_SetAnimState_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Task_Bandit_SetAnimState_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'Task_Bandit_SetAnimState_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function Task_Bandit_SetAnimState.Task_Bandit_SetAnimState_C.SetMoveSpeed_MULTI
// 0x0008 (0x0008 - 0x0000)
struct Task_Bandit_SetAnimState_C_SetMoveSpeed_MULTI final
{
public:
	double                                        Speed;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Bandit_SetAnimState_C_SetMoveSpeed_MULTI) == 0x000008, "Wrong alignment on Task_Bandit_SetAnimState_C_SetMoveSpeed_MULTI");
static_assert(sizeof(Task_Bandit_SetAnimState_C_SetMoveSpeed_MULTI) == 0x000008, "Wrong size on Task_Bandit_SetAnimState_C_SetMoveSpeed_MULTI");
static_assert(offsetof(Task_Bandit_SetAnimState_C_SetMoveSpeed_MULTI, Speed) == 0x000000, "Member 'Task_Bandit_SetAnimState_C_SetMoveSpeed_MULTI::Speed' has a wrong offset!");

}

