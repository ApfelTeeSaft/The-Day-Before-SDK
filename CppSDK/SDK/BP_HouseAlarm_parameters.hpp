#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HouseAlarm

#include "Basic.hpp"

#include "E_ActorType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_AlarmState_structs.hpp"
#include "E_InteractType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HouseAlarm.BP_HouseAlarm_C.CheckForPlayersNear
// 0x0020 (0x0020 - 0x0000)
struct BP_HouseAlarm_C_CheckForPlayersNear final
{
public:
	bool                                          HasPlayer;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_CheckForPlayersNear) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_CheckForPlayersNear");
static_assert(sizeof(BP_HouseAlarm_C_CheckForPlayersNear) == 0x000020, "Wrong size on BP_HouseAlarm_C_CheckForPlayersNear");
static_assert(offsetof(BP_HouseAlarm_C_CheckForPlayersNear, HasPlayer) == 0x000000, "Member 'BP_HouseAlarm_C_CheckForPlayersNear::HasPlayer' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_CheckForPlayersNear, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_HouseAlarm_C_CheckForPlayersNear::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_CheckForPlayersNear, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000008, "Member 'BP_HouseAlarm_C_CheckForPlayersNear::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_CheckForPlayersNear, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_HouseAlarm_C_CheckForPlayersNear::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_CheckForPlayersNear, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_HouseAlarm_C_CheckForPlayersNear::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.Draw
// 0x0018 (0x0018 - 0x0000)
struct BP_HouseAlarm_C_Draw final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_Draw) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_Draw");
static_assert(sizeof(BP_HouseAlarm_C_Draw) == 0x000018, "Wrong size on BP_HouseAlarm_C_Draw");
static_assert(offsetof(BP_HouseAlarm_C_Draw, Center) == 0x000000, "Member 'BP_HouseAlarm_C_Draw::Center' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.ExecuteUbergraph_BP_HouseAlarm
// 0x0418 (0x0418 - 0x0000)
struct BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_AlarmSystem_C*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue_1;                      // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Center;                         // 0x00A0(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHouseBox_C*                            K2Node_Event_HouseBox;                             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_2;                             // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ByFail;                         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Player;                         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBPC_AlarmSystem_C*                     CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0150(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0238(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0334(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0348(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success_1;                      // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA[0x6];                                      // 0x03AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckForPlayersNear_HasPlayer;            // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASurvivalPlayer_V2_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x03E8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   CallFunc_Array_Get_Item;                           // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B[0x1];                                      // 0x040B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm");
static_assert(sizeof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm) == 0x000418, "Wrong size on BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, EntryPoint) == 0x000000, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_CustomEvent_Actor) == 0x000008, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000010, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Visible_1) == 0x000011, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Visible) == 0x000012, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_CustomEvent_Success) == 0x000021, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Player_7) == 0x000028, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_PlayEventAttached_ReturnValue) == 0x000030, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Player_6) == 0x000040, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_RLerp_ReturnValue) == 0x000048, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Player_5) == 0x000060, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_SitIndex) == 0x000068, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_SkipAnimation) == 0x00006C, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Player_4) == 0x000070, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Player_3) == 0x000078, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_RLerp_ReturnValue_1) == 0x000080, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_RLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_CustomEvent_Center) == 0x0000A0, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_CustomEvent_Center' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Player_8) == 0x0000B8, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_IsValid_ReturnValue_3) == 0x0000C4, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Actor) == 0x0000D0, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_HouseBox) == 0x0000D8, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_HouseBox' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_DynamicCast_AsSurvival_Player) == 0x0000E0, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Player_2) == 0x0000F0, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, Temp_bool_Variable) == 0x0000F8, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_Not_PreBool_ReturnValue) == 0x0000F9, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000100, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_CustomEvent_ByFail) == 0x000108, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_CustomEvent_ByFail' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_IsValid_ReturnValue_4) == 0x000109, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_CreateDelegate_OutputDelegate) == 0x00010C, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_BooleanAND_ReturnValue) == 0x00011C, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000120, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_HasAuthority_ReturnValue) == 0x000128, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_HasAuthority_ReturnValue_1) == 0x000129, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Player_1) == 0x000130, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_CustomEvent_Player) == 0x000138, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000140, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_HasAuthority_ReturnValue_2) == 0x000148, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000150, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000238, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000320, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000328, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_DynamicCast_bSuccess_1) == 0x000330, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_CreateDelegate_OutputDelegate_1) == 0x000334, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000348, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_Event_Player) == 0x000350, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_IsValid_ReturnValue_5) == 0x000358, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000360, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_GetController_ReturnValue) == 0x000378, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_DynamicCast_AsPlayer_Controller) == 0x000380, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_DynamicCast_bSuccess_2) == 0x000388, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_HasAuthority_ReturnValue_3) == 0x000389, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_GetHUD_ReturnValue) == 0x000390, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000398, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_DynamicCast_bSuccess_3) == 0x0003A8, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, K2Node_CustomEvent_Success_1) == 0x0003A9, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::K2Node_CustomEvent_Success_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_GetGUI_GUI) == 0x0003B0, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_GetGUI_GUI' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_IsValid_ReturnValue_6) == 0x0003B8, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003C0, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_Vector_Distance_ReturnValue) == 0x0003D8, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_CheckForPlayersNear_HasPlayer) == 0x0003E0, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_CheckForPlayersNear_HasPlayer' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_GetAllActorsOfClass_OutActors) == 0x0003E8, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, Temp_int_Array_Index_Variable) == 0x0003F8, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_Array_Length_ReturnValue) == 0x0003FC, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_Array_Get_Item) == 0x000400, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_Less_IntInt_ReturnValue) == 0x000408, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_HasAuthority_ReturnValue_4) == 0x000409, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_IsValid_ReturnValue_7) == 0x00040A, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00040C, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm, CallFunc_Delay_Duration_ImplicitCast) == 0x000410, "Member 'BP_HouseAlarm_C_ExecuteUbergraph_BP_HouseAlarm::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.FindButtonByKeyCode
// 0x0020 (0x0020 - 0x0000)
struct BP_HouseAlarm_C_FindButtonByKeyCode final
{
public:
	class FString                                 KeyCode;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_FindButtonByKeyCode) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_FindButtonByKeyCode");
static_assert(sizeof(BP_HouseAlarm_C_FindButtonByKeyCode) == 0x000020, "Wrong size on BP_HouseAlarm_C_FindButtonByKeyCode");
static_assert(offsetof(BP_HouseAlarm_C_FindButtonByKeyCode, KeyCode) == 0x000000, "Member 'BP_HouseAlarm_C_FindButtonByKeyCode::KeyCode' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_FindButtonByKeyCode, ButtonMesh) == 0x000010, "Member 'BP_HouseAlarm_C_FindButtonByKeyCode::ButtonMesh' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_FindButtonByKeyCode, K2Node_SwitchString_CmpSuccess) == 0x000018, "Member 'BP_HouseAlarm_C_FindButtonByKeyCode::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.fireAlarm
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAlarm_C_FireAlarm final
{
public:
	bool                                          ByFail;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_FireAlarm) == 0x000001, "Wrong alignment on BP_HouseAlarm_C_FireAlarm");
static_assert(sizeof(BP_HouseAlarm_C_FireAlarm) == 0x000001, "Wrong size on BP_HouseAlarm_C_FireAlarm");
static_assert(offsetof(BP_HouseAlarm_C_FireAlarm, ByFail) == 0x000000, "Member 'BP_HouseAlarm_C_FireAlarm::ByFail' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAlarm_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_GetActorType) == 0x000001, "Wrong alignment on BP_HouseAlarm_C_GetActorType");
static_assert(sizeof(BP_HouseAlarm_C_GetActorType) == 0x000001, "Wrong size on BP_HouseAlarm_C_GetActorType");
static_assert(offsetof(BP_HouseAlarm_C_GetActorType, ActorType) == 0x000000, "Member 'BP_HouseAlarm_C_GetActorType::ActorType' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAlarm_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_IsLocked_) == 0x000001, "Wrong alignment on BP_HouseAlarm_C_IsLocked_");
static_assert(sizeof(BP_HouseAlarm_C_IsLocked_) == 0x000001, "Wrong size on BP_HouseAlarm_C_IsLocked_");
static_assert(offsetof(BP_HouseAlarm_C_IsLocked_, Result) == 0x000000, "Member 'BP_HouseAlarm_C_IsLocked_::Result' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.LightControl
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAlarm_C_LightControl final
{
public:
	bool                                          Off_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_LightControl) == 0x000001, "Wrong alignment on BP_HouseAlarm_C_LightControl");
static_assert(sizeof(BP_HouseAlarm_C_LightControl) == 0x000001, "Wrong size on BP_HouseAlarm_C_LightControl");
static_assert(offsetof(BP_HouseAlarm_C_LightControl, Off_) == 0x000000, "Member 'BP_HouseAlarm_C_LightControl::Off_' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAlarm_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnBeginInteract");
static_assert(sizeof(BP_HouseAlarm_C_OnBeginInteract) == 0x000008, "Wrong size on BP_HouseAlarm_C_OnBeginInteract");
static_assert(offsetof(BP_HouseAlarm_C_OnBeginInteract, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnBeginInteract::Player' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnEnterActor
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseAlarm_C_OnEnterActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHouseBox_C*                            HouseBox;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnEnterActor) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnEnterActor");
static_assert(sizeof(BP_HouseAlarm_C_OnEnterActor) == 0x000010, "Wrong size on BP_HouseAlarm_C_OnEnterActor");
static_assert(offsetof(BP_HouseAlarm_C_OnEnterActor, Actor) == 0x000000, "Member 'BP_HouseAlarm_C_OnEnterActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnEnterActor, HouseBox) == 0x000008, "Member 'BP_HouseAlarm_C_OnEnterActor::HouseBox' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnFocused
// 0x0070 (0x0070 - 0x0000)
struct BP_HouseAlarm_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnFocused) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnFocused");
static_assert(sizeof(BP_HouseAlarm_C_OnFocused) == 0x000070, "Wrong size on BP_HouseAlarm_C_OnFocused");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, HighlightActor) == 0x000008, "Member 'BP_HouseAlarm_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'BP_HouseAlarm_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, InteractType) == 0x000018, "Member 'BP_HouseAlarm_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, LateTime) == 0x000020, "Member 'BP_HouseAlarm_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, CallFunc_IsLocallyControlled_ReturnValue) == 0x000028, "Member 'BP_HouseAlarm_C_OnFocused::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_HouseAlarm_C_OnFocused::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BP_HouseAlarm_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, CallFunc_GetHUD_ReturnValue) == 0x000038, "Member 'BP_HouseAlarm_C_OnFocused::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, CallFunc_Not_PreBool_ReturnValue_1) == 0x000040, "Member 'BP_HouseAlarm_C_OnFocused::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000048, "Member 'BP_HouseAlarm_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_HouseAlarm_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BP_HouseAlarm_C_OnFocused::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000060, "Member 'BP_HouseAlarm_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnFocused, CallFunc_BooleanAND_ReturnValue_1) == 0x000068, "Member 'BP_HouseAlarm_C_OnFocused::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAlarm_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnInteract) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnInteract");
static_assert(sizeof(BP_HouseAlarm_C_OnInteract) == 0x000008, "Wrong size on BP_HouseAlarm_C_OnInteract");
static_assert(offsetof(BP_HouseAlarm_C_OnInteract, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnInteract::Player' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAlarm_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnInteract2) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnInteract2");
static_assert(sizeof(BP_HouseAlarm_C_OnInteract2) == 0x000008, "Wrong size on BP_HouseAlarm_C_OnInteract2");
static_assert(offsetof(BP_HouseAlarm_C_OnInteract2, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnInteract2::Player' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAlarm_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnInteract3) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnInteract3");
static_assert(sizeof(BP_HouseAlarm_C_OnInteract3) == 0x000008, "Wrong size on BP_HouseAlarm_C_OnInteract3");
static_assert(offsetof(BP_HouseAlarm_C_OnInteract3, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnInteract3::Player' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnInteractServer
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAlarm_C_OnInteractServer final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnInteractServer) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnInteractServer");
static_assert(sizeof(BP_HouseAlarm_C_OnInteractServer) == 0x000008, "Wrong size on BP_HouseAlarm_C_OnInteractServer");
static_assert(offsetof(BP_HouseAlarm_C_OnInteractServer, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnInteractServer::Player' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseAlarm_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnInteractVehicle) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnInteractVehicle");
static_assert(sizeof(BP_HouseAlarm_C_OnInteractVehicle) == 0x000010, "Wrong size on BP_HouseAlarm_C_OnInteractVehicle");
static_assert(offsetof(BP_HouseAlarm_C_OnInteractVehicle, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'BP_HouseAlarm_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'BP_HouseAlarm_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAlarm_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnLocalInteract) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnLocalInteract");
static_assert(sizeof(BP_HouseAlarm_C_OnLocalInteract) == 0x000008, "Wrong size on BP_HouseAlarm_C_OnLocalInteract");
static_assert(offsetof(BP_HouseAlarm_C_OnLocalInteract, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnLocalInteract::Player' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAlarm_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnLostFocus) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnLostFocus");
static_assert(sizeof(BP_HouseAlarm_C_OnLostFocus) == 0x000008, "Wrong size on BP_HouseAlarm_C_OnLostFocus");
static_assert(offsetof(BP_HouseAlarm_C_OnLostFocus, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnLostFocus::Player' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnRelease
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAlarm_C_OnRelease final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnRelease) == 0x000001, "Wrong alignment on BP_HouseAlarm_C_OnRelease");
static_assert(sizeof(BP_HouseAlarm_C_OnRelease) == 0x000001, "Wrong size on BP_HouseAlarm_C_OnRelease");
static_assert(offsetof(BP_HouseAlarm_C_OnRelease, Success) == 0x000000, "Member 'BP_HouseAlarm_C_OnRelease::Success' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAlarm_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnSeen) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnSeen");
static_assert(sizeof(BP_HouseAlarm_C_OnSeen) == 0x000008, "Wrong size on BP_HouseAlarm_C_OnSeen");
static_assert(offsetof(BP_HouseAlarm_C_OnSeen, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnSeen::Player' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAlarm_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_OnStopInteract) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_OnStopInteract");
static_assert(sizeof(BP_HouseAlarm_C_OnStopInteract) == 0x000008, "Wrong size on BP_HouseAlarm_C_OnStopInteract");
static_assert(offsetof(BP_HouseAlarm_C_OnStopInteract, Player) == 0x000000, "Member 'BP_HouseAlarm_C_OnStopInteract::Player' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.Release
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAlarm_C_Release final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_Release) == 0x000001, "Wrong alignment on BP_HouseAlarm_C_Release");
static_assert(sizeof(BP_HouseAlarm_C_Release) == 0x000001, "Wrong size on BP_HouseAlarm_C_Release");
static_assert(offsetof(BP_HouseAlarm_C_Release, Success) == 0x000000, "Member 'BP_HouseAlarm_C_Release::Success' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAlarm_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_HouseAlarm_C_Set3DWidgetVisibility");
static_assert(sizeof(BP_HouseAlarm_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on BP_HouseAlarm_C_Set3DWidgetVisibility");
static_assert(offsetof(BP_HouseAlarm_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_HouseAlarm_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.SetButtonMaterial
// 0x0010 (0x0010 - 0x0000)
struct BP_HouseAlarm_C_SetButtonMaterial final
{
public:
	class UStaticMeshComponent*                   ButtonMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_SetButtonMaterial) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_SetButtonMaterial");
static_assert(sizeof(BP_HouseAlarm_C_SetButtonMaterial) == 0x000010, "Wrong size on BP_HouseAlarm_C_SetButtonMaterial");
static_assert(offsetof(BP_HouseAlarm_C_SetButtonMaterial, ButtonMesh) == 0x000000, "Member 'BP_HouseAlarm_C_SetButtonMaterial::ButtonMesh' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SetButtonMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_HouseAlarm_C_SetButtonMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.SetCode
// 0x0050 (0x0050 - 0x0000)
struct BP_HouseAlarm_C_SetCode final
{
public:
	class FString                                 Code;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_FindButtonByKeyCode_ButtonMesh;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_SetCode) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_SetCode");
static_assert(sizeof(BP_HouseAlarm_C_SetCode) == 0x000050, "Wrong size on BP_HouseAlarm_C_SetCode");
static_assert(offsetof(BP_HouseAlarm_C_SetCode, Code) == 0x000000, "Member 'BP_HouseAlarm_C_SetCode::Code' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SetCode, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000010, "Member 'BP_HouseAlarm_C_SetCode::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SetCode, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_HouseAlarm_C_SetCode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SetCode, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_HouseAlarm_C_SetCode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SetCode, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_HouseAlarm_C_SetCode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SetCode, CallFunc_FindButtonByKeyCode_ButtonMesh) == 0x000038, "Member 'BP_HouseAlarm_C_SetCode::CallFunc_FindButtonByKeyCode_ButtonMesh' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SetCode, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_HouseAlarm_C_SetCode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SetCode, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_HouseAlarm_C_SetCode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SetCode, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_HouseAlarm_C_SetCode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.SetState
// 0x0002 (0x0002 - 0x0000)
struct BP_HouseAlarm_C_SetState final
{
public:
	E_AlarmState                                  Param_State;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_SetState) == 0x000001, "Wrong alignment on BP_HouseAlarm_C_SetState");
static_assert(sizeof(BP_HouseAlarm_C_SetState) == 0x000002, "Wrong size on BP_HouseAlarm_C_SetState");
static_assert(offsetof(BP_HouseAlarm_C_SetState, Param_State) == 0x000000, "Member 'BP_HouseAlarm_C_SetState::Param_State' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SetState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_HouseAlarm_C_SetState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_HouseAlarm_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_HouseAlarm_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(BP_HouseAlarm_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on BP_HouseAlarm_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(BP_HouseAlarm_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_HouseAlarm_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.SpawnZombi
// 0x0040 (0x0040 - 0x0000)
struct BP_HouseAlarm_C_SpawnZombi final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ZombieSpawner_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_SpawnZombi) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_SpawnZombi");
static_assert(sizeof(BP_HouseAlarm_C_SpawnZombi) == 0x000040, "Wrong size on BP_HouseAlarm_C_SpawnZombi");
static_assert(offsetof(BP_HouseAlarm_C_SpawnZombi, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HouseAlarm_C_SpawnZombi::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SpawnZombi, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_HouseAlarm_C_SpawnZombi::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SpawnZombi, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_HouseAlarm_C_SpawnZombi::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SpawnZombi, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_HouseAlarm_C_SpawnZombi::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SpawnZombi, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_HouseAlarm_C_SpawnZombi::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SpawnZombi, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_HouseAlarm_C_SpawnZombi::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SpawnZombi, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_HouseAlarm_C_SpawnZombi::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_SpawnZombi, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_HouseAlarm_C_SpawnZombi::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.Start Alarm To Server
// 0x00C0 (0x00C0 - 0x0000)
struct BP_HouseAlarm_C_Start_Alarm_To_Server final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalGameMode*                      K2Node_DynamicCast_AsSurvival_Game_Mode;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetAllPlayerController_ReturnValue;       // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_Start_Alarm_To_Server) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_Start_Alarm_To_Server");
static_assert(sizeof(BP_HouseAlarm_C_Start_Alarm_To_Server) == 0x0000C0, "Wrong size on BP_HouseAlarm_C_Start_Alarm_To_Server");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000028, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_GetGameMode_ReturnValue) == 0x000048, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, K2Node_DynamicCast_AsSurvival_Game_Mode) == 0x000050, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::K2Node_DynamicCast_AsSurvival_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_GetAllPlayerController_ReturnValue) == 0x000060, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_GetAllPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, K2Node_DynamicCast_AsSurv_PC) == 0x000088, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_Vector_Distance_ReturnValue) == 0x0000B0, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_Start_Alarm_To_Server, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_HouseAlarm_C_Start_Alarm_To_Server::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.StartAutoAlarmTimer
// 0x0008 (0x0008 - 0x0000)
struct BP_HouseAlarm_C_StartAutoAlarmTimer final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_StartAutoAlarmTimer) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_StartAutoAlarmTimer");
static_assert(sizeof(BP_HouseAlarm_C_StartAutoAlarmTimer) == 0x000008, "Wrong size on BP_HouseAlarm_C_StartAutoAlarmTimer");
static_assert(offsetof(BP_HouseAlarm_C_StartAutoAlarmTimer, Actor) == 0x000000, "Member 'BP_HouseAlarm_C_StartAutoAlarmTimer::Actor' has a wrong offset!");

// Function BP_HouseAlarm.BP_HouseAlarm_C.StopAlarmToServer
// 0x0080 (0x0080 - 0x0000)
struct BP_HouseAlarm_C_StopAlarmToServer final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalGameMode*                      K2Node_DynamicCast_AsSurvival_Game_Mode;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerController*>              CallFunc_GetAllPlayerController_ReturnValue;       // 0x0040(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HouseAlarm_C_StopAlarmToServer) == 0x000008, "Wrong alignment on BP_HouseAlarm_C_StopAlarmToServer");
static_assert(sizeof(BP_HouseAlarm_C_StopAlarmToServer) == 0x000080, "Wrong size on BP_HouseAlarm_C_StopAlarmToServer");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_HouseAlarm_C_StopAlarmToServer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_HouseAlarm_C_StopAlarmToServer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_HouseAlarm_C_StopAlarmToServer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, CallFunc_GetGameMode_ReturnValue) == 0x000028, "Member 'BP_HouseAlarm_C_StopAlarmToServer::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, K2Node_DynamicCast_AsSurvival_Game_Mode) == 0x000030, "Member 'BP_HouseAlarm_C_StopAlarmToServer::K2Node_DynamicCast_AsSurvival_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_HouseAlarm_C_StopAlarmToServer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_HouseAlarm_C_StopAlarmToServer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, CallFunc_GetAllPlayerController_ReturnValue) == 0x000040, "Member 'BP_HouseAlarm_C_StopAlarmToServer::CallFunc_GetAllPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_HouseAlarm_C_StopAlarmToServer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_HouseAlarm_C_StopAlarmToServer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, K2Node_DynamicCast_AsSurv_PC) == 0x000060, "Member 'BP_HouseAlarm_C_StopAlarmToServer::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_HouseAlarm_C_StopAlarmToServer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'BP_HouseAlarm_C_StopAlarmToServer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, CallFunc_K2_GetPawn_ReturnValue) == 0x000070, "Member 'BP_HouseAlarm_C_StopAlarmToServer::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HouseAlarm_C_StopAlarmToServer, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_HouseAlarm_C_StopAlarmToServer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

