#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BanditParentAI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EquipmentData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ComponentAndTransform_structs.hpp"
#include "ClimbParams_structs.hpp"
#include "ClimBType_structs.hpp"
#include "ClimbAsset_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function BanditParentAI.BanditParentAI_C.BanditDeath
// 0x0030 (0x0030 - 0x0000)
struct BanditParentAI_C_BanditDeath final
{
public:
	class AController*                            InstigatedBy;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        HitAngle;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_BanditDeath) == 0x000008, "Wrong alignment on BanditParentAI_C_BanditDeath");
static_assert(sizeof(BanditParentAI_C_BanditDeath) == 0x000030, "Wrong size on BanditParentAI_C_BanditDeath");
static_assert(offsetof(BanditParentAI_C_BanditDeath, InstigatedBy) == 0x000000, "Member 'BanditParentAI_C_BanditDeath::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_BanditDeath, HitAngle) == 0x000008, "Member 'BanditParentAI_C_BanditDeath::HitAngle' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_BanditDeath, HitLocation) == 0x000010, "Member 'BanditParentAI_C_BanditDeath::HitLocation' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_BanditDeath, BoneName) == 0x000028, "Member 'BanditParentAI_C_BanditDeath::BoneName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BanditParentAI_C_ClimbCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.CalcAccelDecel
// 0x0028 (0x0028 - 0x0000)
struct BanditParentAI_C_CalcAccelDecel final
{
public:
	bool                                          Default_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Accel;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Decel;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_MaxAcceleration_ImplicitCast;   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_CalcAccelDecel) == 0x000008, "Wrong alignment on BanditParentAI_C_CalcAccelDecel");
static_assert(sizeof(BanditParentAI_C_CalcAccelDecel) == 0x000028, "Wrong size on BanditParentAI_C_CalcAccelDecel");
static_assert(offsetof(BanditParentAI_C_CalcAccelDecel, Default_) == 0x000000, "Member 'BanditParentAI_C_CalcAccelDecel::Default_' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_CalcAccelDecel, Accel) == 0x000008, "Member 'BanditParentAI_C_CalcAccelDecel::Accel' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_CalcAccelDecel, Decel) == 0x000010, "Member 'BanditParentAI_C_CalcAccelDecel::Decel' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_CalcAccelDecel, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BanditParentAI_C_CalcAccelDecel::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_CalcAccelDecel, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BanditParentAI_C_CalcAccelDecel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_CalcAccelDecel, K2Node_VariableSet_MaxAcceleration_ImplicitCast) == 0x00001C, "Member 'BanditParentAI_C_CalcAccelDecel::K2Node_VariableSet_MaxAcceleration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_CalcAccelDecel, K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast) == 0x000020, "Member 'BanditParentAI_C_CalcAccelDecel::K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.ClimbCheck
// 0x0CE0 (0x0CE0 - 0x0000)
struct BanditParentAI_C_ClimbCheck final
{
public:
	bool                                          Vault;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentAndTransform                 K2Node_MakeStruct_ComponentAndTransform;           // 0x00A0(0x00C0)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0168(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0180(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0290(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x03C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue;                   // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_522[0x2];                                      // 0x0522(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_648[0x8];                                      // 0x0648(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0650(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC[0x4];                                      // 0x06DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76C[0x4];                                      // 0x076C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x07B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x07D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x07E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0818(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x0830(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x0848(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0860(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0878(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0890(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x08A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x08C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x08D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x08F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0908(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x09F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0AE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0AE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE3[0x1];                                      // 0x0AE3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AEC[0x4];                                      // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0AF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0B08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0B20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0B38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0B58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0B60(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0B88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue_1;                 // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB9[0x7];                                      // 0x0BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_5;                          // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD9[0x7];                                      // 0x0BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BEA[0x2];                                      // 0x0BEA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF4[0x4];                                      // 0x0BF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0BF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0C10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0C28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0C40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0C58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0C60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0C68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0C84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0C88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8C[0x4];                                      // 0x0C8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0C90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0CA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0CC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0CC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0CC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0CC3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC4[0x4];                                      // 0x0CC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_ClimbCheck) == 0x000010, "Wrong alignment on BanditParentAI_C_ClimbCheck");
static_assert(sizeof(BanditParentAI_C_ClimbCheck) == 0x000CE0, "Wrong size on BanditParentAI_C_ClimbCheck");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, Vault) == 0x000000, "Member 'BanditParentAI_C_ClimbCheck::Vault' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, Temp_object_Variable) == 0x000008, "Member 'BanditParentAI_C_ClimbCheck::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_MakeVector_ReturnValue) == 0x000080, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, K2Node_MakeStruct_ComponentAndTransform) == 0x0000A0, "Member 'BanditParentAI_C_ClimbCheck::K2Node_MakeStruct_ComponentAndTransform' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000160, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, Temp_object_Variable_1) == 0x000168, "Member 'BanditParentAI_C_ClimbCheck::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, K2Node_SwitchEnum_CmpSuccess) == 0x000178, "Member 'BanditParentAI_C_ClimbCheck::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, Temp_object_Variable_2) == 0x000180, "Member 'BanditParentAI_C_ClimbCheck::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000190, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_X) == 0x0001A8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Y) == 0x0001B0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Z) == 0x0001B8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0001C0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001D8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0001F0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_GetUpVector_ReturnValue) == 0x0001F8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000210, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000218, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000230, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000248, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000260, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_X_1) == 0x000278, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Y_1) == 0x000280, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Z_1) == 0x000288, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_MakeTransform_ReturnValue) == 0x000290, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_MakeVector_ReturnValue_1) == 0x0002F0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_VectorVector_ReturnValue) == 0x000308, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000320, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000338, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_X_2) == 0x000350, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Y_2) == 0x000358, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Z_2) == 0x000360, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakRotator_Roll) == 0x000368, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakRotator_Pitch) == 0x00036C, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakRotator_Yaw) == 0x000370, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000378, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Abs_ReturnValue) == 0x000380, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000388, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000390, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_MakeVector_ReturnValue_2) == 0x000398, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0003B0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_SphereTraceSingle_OutHit) == 0x0003C8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_SphereTraceSingle_ReturnValue) == 0x0004B0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakTransform_Location) == 0x0004B8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakTransform_Rotation) == 0x0004D0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakTransform_Scale) == 0x0004E8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_IsWalkable_ReturnValue) == 0x000500, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_IsWalkable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000508, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_bBlockingHit) == 0x000520, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_bInitialOverlap) == 0x000521, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Time) == 0x000524, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Distance) == 0x000528, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Location) == 0x000530, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_ImpactPoint) == 0x000548, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Normal) == 0x000560, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_ImpactNormal) == 0x000578, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_PhysMat) == 0x000590, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitActor) == 0x000598, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitComponent) == 0x0005A0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitBoneName) == 0x0005A8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_BoneName) == 0x0005B0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitItem) == 0x0005B8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_ElementIndex) == 0x0005BC, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_FaceIndex) == 0x0005C0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_TraceStart) == 0x0005C8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_TraceEnd) == 0x0005E0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_X_3) == 0x0005F8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Y_3) == 0x000600, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Z_3) == 0x000608, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_X_4) == 0x000610, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Y_4) == 0x000618, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Z_4) == 0x000620, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BooleanAND_ReturnValue) == 0x000628, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_MakeVector_ReturnValue_3) == 0x000630, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_GetTransform_ReturnValue) == 0x000650, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0006B0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0006B8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_MakeVector_ReturnValue_4) == 0x0006C0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x0006D8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_GetUpVector_ReturnValue_1) == 0x0006E0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0006F8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000700, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000718, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_GetControlRotation_ReturnValue) == 0x000730, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000748, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakRotator_Roll_1) == 0x000760, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakRotator_Pitch_1) == 0x000764, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakRotator_Yaw_1) == 0x000768, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_MakeRotator_ReturnValue) == 0x000770, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_MakeRotator_ReturnValue_1) == 0x000788, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_GetRightVector_ReturnValue) == 0x0007A0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_GetForwardVector_ReturnValue) == 0x0007B8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0007D0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0007E8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000800, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Normal_ReturnValue) == 0x000818, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x000830, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x000848, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000860, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000878, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000890, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_VectorVector_ReturnValue_6) == 0x0008A8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x0008C0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_VectorVector_ReturnValue_7) == 0x0008D8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_VectorVector_ReturnValue_8) == 0x0008F0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_LineTraceSingle_OutHit) == 0x000908, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_LineTraceSingle_ReturnValue) == 0x0009F0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_CapsuleTraceSingle_OutHit) == 0x0009F8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x000AE0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000AE1, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000AE2, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Time_1) == 0x000AE4, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Distance_1) == 0x000AE8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Location_1) == 0x000AF0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000B08, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Normal_1) == 0x000B20, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000B38, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_PhysMat_1) == 0x000B50, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitActor_1) == 0x000B58, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitComponent_1) == 0x000B60, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitBoneName_1) == 0x000B68, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_BoneName_1) == 0x000B70, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitItem_1) == 0x000B78, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_ElementIndex_1) == 0x000B7C, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_FaceIndex_1) == 0x000B80, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_TraceStart_1) == 0x000B88, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_TraceEnd_1) == 0x000BA0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_IsWalkable_ReturnValue_1) == 0x000BB8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_IsWalkable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_X_5) == 0x000BC0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Y_5) == 0x000BC8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakVector_Z_5) == 0x000BD0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Not_PreBool_ReturnValue) == 0x000BD8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000BE0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000BE8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000BE9, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Time_2) == 0x000BEC, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Distance_2) == 0x000BF0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Location_2) == 0x000BF8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000C10, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_Normal_2) == 0x000C28, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000C40, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_PhysMat_2) == 0x000C58, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitActor_2) == 0x000C60, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitComponent_2) == 0x000C68, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitBoneName_2) == 0x000C70, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_BoneName_2) == 0x000C78, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_HitItem_2) == 0x000C80, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_ElementIndex_2) == 0x000C84, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_FaceIndex_2) == 0x000C88, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_TraceStart_2) == 0x000C90, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BreakHitResult_TraceEnd_2) == 0x000CA8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000CC0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Not_PreBool_ReturnValue_1) == 0x000CC1, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x000CC2, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_BooleanAND_ReturnValue_2) == 0x000CC3, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000CC8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Abs_A_ImplicitCast) == 0x000CD0, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000CD8, "Member 'BanditParentAI_C_ClimbCheck::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.ClimbCheck(new)
// 0x11A0 (0x11A0 - 0x0000)
struct BanditParentAI_C_ClimbCheck_new_ final
{
public:
	bool                                          Vault;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0060(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_BreakVector_X;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0xF];                                      // 0x0141(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0150(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0200(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0260(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FComponentAndTransform                 K2Node_MakeStruct_ComponentAndTransform;           // 0x02C0(0x00C0)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FComponentAndTransform                 K2Node_MakeStruct_ComponentAndTransform_1;         // 0x0380(0x00C0)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0448(0x0010)(ConstParm, ReferenceParm)
	double                                        Temp_real_Variable;                                // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_578[0x8];                                      // 0x0578(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0580(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0670(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_759[0x3];                                      // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0769(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76A[0x2];                                      // 0x076A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774[0x4];                                      // 0x0774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0778(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0790(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x07A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x07C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x07D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x07E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80C[0x4];                                      // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0810(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0828(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_849[0x7];                                      // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_6;                          // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0868(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue;                   // 0x0881(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_882[0x6];                                      // 0x0882(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_7;                          // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_7;                          // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_7;                          // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A1[0xF];                                      // 0x08A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x08B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_924[0x4];                                      // 0x0924(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x0948(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0978(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0990(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x09A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x09C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x09C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9CC[0x4];                                      // 0x09CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x09D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x09E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0A00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0A18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0A30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0A48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0A60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0A78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x0A90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x0AA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0AC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0AD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0AF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0B08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x0B20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0B38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x0B50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0B68(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C51[0x7];                                      // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x0C58(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0D41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0D42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D43[0x1];                                      // 0x0D43(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0D44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0D48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4C[0x4];                                      // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0D50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0D68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0D80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0D98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0DB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0DB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0DC0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0DDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0DE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE4[0x4];                                      // 0x0DE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0DE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0E00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_8;                          // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_8;                          // 0x0E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_8;                          // 0x0E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0E38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0E50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E51[0x7];                                      // 0x0E51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_9;                          // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_9;                          // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_9;                          // 0x0E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E71[0x7];                                      // 0x0E71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x0E78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0E90(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0F78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue_1;                 // 0x0F79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0F7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0F7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0F7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0F80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F84[0x4];                                      // 0x0F84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0F88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0FA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0FB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0FD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0FE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0FF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0FF8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x1000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x1008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x1010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x1014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x1018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101C[0x4];                                     // 0x101C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x1020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x1038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x1050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1051[0x7];                                     // 0x1051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_10;                         // 0x1058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_10;                         // 0x1060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_10;                         // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x1070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x1071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1072[0x2];                                     // 0x1072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x1074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x1078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_107C[0x4];                                     // 0x107C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x1080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x1098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x10B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x10C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x10E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x10E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x10F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x10F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_3;                // 0x1100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x1108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x110C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x1110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1114[0x4];                                     // 0x1114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x1118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x1130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x1148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x1160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x1168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1169[0x7];                                     // 0x1169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x1170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x1178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x1181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x1182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x1183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1184[0x4];                                     // 0x1184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x1188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x1190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x1198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_ClimbCheck_new_) == 0x000010, "Wrong alignment on BanditParentAI_C_ClimbCheck_new_");
static_assert(sizeof(BanditParentAI_C_ClimbCheck_new_) == 0x0011A0, "Wrong size on BanditParentAI_C_ClimbCheck_new_");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, Vault) == 0x000000, "Member 'BanditParentAI_C_ClimbCheck_new_::Vault' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakTransform_Location) == 0x000010, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakTransform_Rotation) == 0x000028, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakTransform_Scale) == 0x000040, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, Temp_object_Variable) == 0x000060, "Member 'BanditParentAI_C_ClimbCheck_new_::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, Temp_object_Variable_1) == 0x000088, "Member 'BanditParentAI_C_ClimbCheck_new_::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeVector_ReturnValue_1) == 0x000098, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, Temp_object_Variable_2) == 0x0000B0, "Member 'BanditParentAI_C_ClimbCheck_new_::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X) == 0x0000C0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y) == 0x0000C8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z) == 0x0000D0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeVector_ReturnValue_2) == 0x0000D8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X_1) == 0x0000F0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y_1) == 0x0000F8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z_1) == 0x000100, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X_2) == 0x000108, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y_2) == 0x000110, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z_2) == 0x000118, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000120, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeVector_ReturnValue_3) == 0x000128, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, Temp_bool_Variable) == 0x000140, "Member 'BanditParentAI_C_ClimbCheck_new_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000150, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakTransform_Location_1) == 0x0001B0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakTransform_Rotation_1) == 0x0001C8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakTransform_Scale_1) == 0x0001E0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeTransform_ReturnValue) == 0x000200, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeTransform_ReturnValue_1) == 0x000260, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, K2Node_MakeStruct_ComponentAndTransform) == 0x0002C0, "Member 'BanditParentAI_C_ClimbCheck_new_::K2Node_MakeStruct_ComponentAndTransform' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, K2Node_MakeStruct_ComponentAndTransform_1) == 0x000380, "Member 'BanditParentAI_C_ClimbCheck_new_::K2Node_MakeStruct_ComponentAndTransform_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000440, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, Temp_object_Variable_3) == 0x000448, "Member 'BanditParentAI_C_ClimbCheck_new_::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, Temp_real_Variable) == 0x000458, "Member 'BanditParentAI_C_ClimbCheck_new_::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000460, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000478, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X_3) == 0x000490, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y_3) == 0x000498, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z_3) == 0x0004A0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0004A8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004C0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0004D8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0004E0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0004F8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X_4) == 0x000500, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y_4) == 0x000508, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z_4) == 0x000510, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_GetUpVector_ReturnValue) == 0x000518, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000530, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000548, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000560, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeTransform_ReturnValue_2) == 0x000580, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X_5) == 0x0005E0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y_5) == 0x0005E8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z_5) == 0x0005F0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeVector_ReturnValue_4) == 0x0005F8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_VectorVector_ReturnValue) == 0x000610, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000628, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000640, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000658, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_SphereTraceSingle_OutHit) == 0x000670, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_SphereTraceSingle_ReturnValue) == 0x000758, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakRotator_Roll) == 0x00075C, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakRotator_Pitch) == 0x000760, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakRotator_Yaw) == 0x000764, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_bBlockingHit) == 0x000768, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_bInitialOverlap) == 0x000769, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Time) == 0x00076C, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Distance) == 0x000770, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Location) == 0x000778, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ImpactPoint) == 0x000790, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Normal) == 0x0007A8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ImpactNormal) == 0x0007C0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_PhysMat) == 0x0007D8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitActor) == 0x0007E0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitComponent) == 0x0007E8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitBoneName) == 0x0007F0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_BoneName) == 0x0007F8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitItem) == 0x000800, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ElementIndex) == 0x000804, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_FaceIndex) == 0x000808, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_TraceStart) == 0x000810, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_TraceEnd) == 0x000828, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Abs_ReturnValue) == 0x000840, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000848, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X_6) == 0x000850, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y_6) == 0x000858, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z_6) == 0x000860, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeVector_ReturnValue_5) == 0x000868, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, Temp_bool_Variable_1) == 0x000880, "Member 'BanditParentAI_C_ClimbCheck_new_::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_IsWalkable_ReturnValue) == 0x000881, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_IsWalkable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X_7) == 0x000888, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y_7) == 0x000890, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z_7) == 0x000898, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BooleanAND_ReturnValue) == 0x0008A0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_GetTransform_ReturnValue) == 0x0008B0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000910, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000918, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x000920, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeVector_ReturnValue_6) == 0x000928, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000940, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_GetUpVector_ReturnValue_1) == 0x000948, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000960, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000978, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_GetControlRotation_ReturnValue) == 0x000990, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0009A8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakRotator_Roll_1) == 0x0009C0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakRotator_Pitch_1) == 0x0009C4, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakRotator_Yaw_1) == 0x0009C8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeRotator_ReturnValue) == 0x0009D0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeRotator_ReturnValue_1) == 0x0009E8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_GetRightVector_ReturnValue) == 0x000A00, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_GetForwardVector_ReturnValue) == 0x000A18, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000A30, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000A48, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000A60, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Normal_ReturnValue) == 0x000A78, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x000A90, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x000AA8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000AC0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000AD8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000AF0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000B08, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x000B20, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000B38, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_VectorVector_ReturnValue_8) == 0x000B50, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_LineTraceSingle_OutHit) == 0x000B68, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_LineTraceSingle_ReturnValue) == 0x000C50, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_CapsuleTraceSingle_OutHit) == 0x000C58, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x000D40, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000D41, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000D42, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Time_1) == 0x000D44, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Distance_1) == 0x000D48, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Location_1) == 0x000D50, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000D68, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Normal_1) == 0x000D80, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000D98, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_PhysMat_1) == 0x000DB0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitActor_1) == 0x000DB8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitComponent_1) == 0x000DC0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitBoneName_1) == 0x000DC8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_BoneName_1) == 0x000DD0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitItem_1) == 0x000DD8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ElementIndex_1) == 0x000DDC, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_FaceIndex_1) == 0x000DE0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_TraceStart_1) == 0x000DE8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_TraceEnd_1) == 0x000E00, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X_8) == 0x000E18, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y_8) == 0x000E20, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z_8) == 0x000E28, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000E30, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, K2Node_Select_Default) == 0x000E38, "Member 'BanditParentAI_C_ClimbCheck_new_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000E50, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X_9) == 0x000E58, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y_9) == 0x000E60, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z_9) == 0x000E68, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BooleanAND_ReturnValue_1) == 0x000E70, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeVector_ReturnValue_7) == 0x000E78, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_LineTraceSingle_OutHit_1) == 0x000E90, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000F78, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_IsWalkable_ReturnValue_1) == 0x000F79, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_IsWalkable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000F7A, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000F7B, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Time_2) == 0x000F7C, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Distance_2) == 0x000F80, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Location_2) == 0x000F88, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000FA0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Normal_2) == 0x000FB8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000FD0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_PhysMat_2) == 0x000FE8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitActor_2) == 0x000FF0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitComponent_2) == 0x000FF8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitBoneName_2) == 0x001000, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_BoneName_2) == 0x001008, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitItem_2) == 0x001010, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ElementIndex_2) == 0x001014, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_FaceIndex_2) == 0x001018, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_TraceStart_2) == 0x001020, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_TraceEnd_2) == 0x001038, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Not_PreBool_ReturnValue) == 0x001050, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_X_10) == 0x001058, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Y_10) == 0x001060, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakVector_Z_10) == 0x001068, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_bBlockingHit_3) == 0x001070, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x001071, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Time_3) == 0x001074, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Distance_3) == 0x001078, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Location_3) == 0x001080, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ImpactPoint_3) == 0x001098, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_Normal_3) == 0x0010B0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ImpactNormal_3) == 0x0010C8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_PhysMat_3) == 0x0010E0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitActor_3) == 0x0010E8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitComponent_3) == 0x0010F0, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitBoneName_3) == 0x0010F8, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_BoneName_3) == 0x001100, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_BoneName_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_HitItem_3) == 0x001108, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_ElementIndex_3) == 0x00110C, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_FaceIndex_3) == 0x001110, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_TraceStart_3) == 0x001118, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BreakHitResult_TraceEnd_3) == 0x001130, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_MakeVector_ReturnValue_8) == 0x001148, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Vector_Distance_ReturnValue) == 0x001160, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x001168, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, K2Node_Select_Default_1) == 0x001170, "Member 'BanditParentAI_C_ClimbCheck_new_::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_FMin_ReturnValue) == 0x001178, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Not_PreBool_ReturnValue_1) == 0x001180, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BooleanAND_ReturnValue_2) == 0x001181, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BooleanAND_ReturnValue_3) == 0x001182, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_BooleanAND_ReturnValue_4) == 0x001183, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x001188, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Abs_A_ImplicitCast) == 0x001190, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbCheck_new_, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x001198, "Member 'BanditParentAI_C_ClimbCheck_new_::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.ClimbStart(new)
// 0x1510 (0x1510 - 0x0000)
struct BanditParentAI_C_ClimbStart_new_ final
{
public:
	double                                        Param_ClimbHeight;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentAndTransform                 ClimbLedgeWS;                                      // 0x0010(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EClimbType                                    Param_ClimbType;                                   // 0x00D0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In;                                                // 0x00D1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Width;                                             // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Param_ClimbStartTransform;                         // 0x00E0(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x01F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FComponentAndTransform                 K2Node_MakeStruct_ComponentAndTransform;           // 0x0250(0x00C0)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClimbAsset                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0318(0x00F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClimbAsset                            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0418(0x00F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FClimbAsset                            CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0520(0x00F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61A[0x6];                                      // 0x061A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClimbAsset                            CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0620(0x00F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0720(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774[0x4];                                      // 0x0774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0778(0x0010)(ConstParm, ReferenceParm)
	struct FClimbAsset                            CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x0788(0x00F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_4;    // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_881[0x3];                                      // 0x0881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0888(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x08A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A5[0x3];                                      // 0x08A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x08A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x08C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x08D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x08F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x08FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0x4];                                      // 0x0904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0910(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0940(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0958(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0970(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0988(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x09B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x09D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0A18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0A38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0A50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A68[0x8];                                      // 0x0A68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0A70(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x0AD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0AE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x0B00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x0B18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0B30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0B48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0B60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0B88(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C71[0x7];                                      // 0x0C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0C81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C82[0x2];                                      // 0x0C82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0C84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0C88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8C[0x4];                                      // 0x0C8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0C90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0CA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0CC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0CD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0CF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0CF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0D00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0D10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0D18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0D1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0D20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D24[0x4];                                      // 0x0D24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0D28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0D40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0D60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0D78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0D80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0D98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC8[0x8];                                      // 0x0DC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0DD0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0E30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0E48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue_1;         // 0x0E68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Map_Find_Value;                           // 0x0E80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E89[0x7];                                      // 0x0E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0E90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA9[0x7];                                      // 0x0EA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0EB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0EC8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                K2Node_Select_Default;                             // 0x0ED8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0EF0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD9[0x7];                                      // 0x0FD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClimbParams                           K2Node_MakeStruct_ClimbParams;                     // 0x0FE0(0x00A8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FClimbAsset                            CallFunc_GetDataTableRowFromName_OutRow_5;         // 0x1088(0x00F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_5;    // 0x1180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1181[0x7];                                     // 0x1181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClimbAsset                            CallFunc_GetDataTableRowFromName_OutRow_6;         // 0x1188(0x00F8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_6;    // 0x1280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1281[0xF];                                     // 0x1281(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x1290(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x12F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x1308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x1320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x1338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x1350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x1354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x1358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135C[0x4];                                     // 0x135C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x1360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x1378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x1380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x1388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x1390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A8[0x8];                                     // 0x13A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x13B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_ObstacleWidth_40_2E76D7C84DC9B44CEA5876B961E2CD7E_ImplicitCast; // 0x1410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1414[0x4];                                     // 0x1414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x1418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x1420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x1428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2;   // 0x1430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x1438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3;   // 0x1440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_4;   // 0x1448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_5;   // 0x1450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_6;   // 0x1458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x1460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTimelineLength_NewLength_ImplicitCast; // 0x1468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_146C[0x4];                                     // 0x146C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_InRangeA_ImplicitCast;    // 0x1470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeA_ImplicitCast_1;  // 0x1478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeA_ImplicitCast;   // 0x1480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeA_ImplicitCast_1; // 0x1488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast;    // 0x1490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast_1;  // 0x1498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast;   // 0x14A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1; // 0x14A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x14B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2;   // 0x14B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_3;   // 0x14C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x14C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x14CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x14D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_StartingPosition_8_A0086F1C489E1A8FCC7A089DA9098F30_ImplicitCast; // 0x14D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_PlayRate_10_5A4BA53444A8472EC2A69682EDEC3BD2_ImplicitCast; // 0x14D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14DC[0x4];                                     // 0x14DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_4;   // 0x14E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_5;   // 0x14E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_6;   // 0x14F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x14F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x14FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x1500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_ClimbStart_new_) == 0x000010, "Wrong alignment on BanditParentAI_C_ClimbStart_new_");
static_assert(sizeof(BanditParentAI_C_ClimbStart_new_) == 0x001510, "Wrong size on BanditParentAI_C_ClimbStart_new_");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, Param_ClimbHeight) == 0x000000, "Member 'BanditParentAI_C_ClimbStart_new_::Param_ClimbHeight' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, ClimbLedgeWS) == 0x000010, "Member 'BanditParentAI_C_ClimbStart_new_::ClimbLedgeWS' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, Param_ClimbType) == 0x0000D0, "Member 'BanditParentAI_C_ClimbStart_new_::Param_ClimbType' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, In) == 0x0000D1, "Member 'BanditParentAI_C_ClimbStart_new_::In' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, Width) == 0x0000D8, "Member 'BanditParentAI_C_ClimbStart_new_::Width' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, Param_ClimbStartTransform) == 0x0000E0, "Member 'BanditParentAI_C_ClimbStart_new_::Param_ClimbStartTransform' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Not_PreBool_ReturnValue) == 0x000140, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, K2Node_SwitchEnum_CmpSuccess) == 0x000141, "Member 'BanditParentAI_C_ClimbStart_new_::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, K2Node_SwitchEnum_CmpSuccess_1) == 0x000142, "Member 'BanditParentAI_C_ClimbStart_new_::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Location) == 0x000148, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Rotation) == 0x000160, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Scale) == 0x000178, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_InvertTransform_ReturnValue) == 0x000190, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_ComposeTransforms_ReturnValue) == 0x0001F0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, K2Node_MakeStruct_ComponentAndTransform) == 0x000250, "Member 'BanditParentAI_C_ClimbStart_new_::K2Node_MakeStruct_ComponentAndTransform' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000310, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_OutRow) == 0x000318, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000410, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000414, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000418, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000510, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetAnimInstance_ReturnValue) == 0x000518, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000520, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000618, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_IsValid_ReturnValue) == 0x000619, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000620, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000718, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Location_1) == 0x000720, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Rotation_1) == 0x000738, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Scale_1) == 0x000750, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Roll) == 0x000768, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Pitch) == 0x00076C, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Yaw) == 0x000770, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, Temp_object_Variable) == 0x000778, "Member 'BanditParentAI_C_ClimbStart_new_::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x000788, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_ReturnValue_4) == 0x000880, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x000884, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeVector_ReturnValue) == 0x000888, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Montage_Play_ReturnValue) == 0x0008A0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_IsValid_ReturnValue_1) == 0x0008A4, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Location_2) == 0x0008A8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Rotation_2) == 0x0008C0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Scale_2) == 0x0008D8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Roll_1) == 0x0008F0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Pitch_1) == 0x0008F4, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Yaw_1) == 0x0008F8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetTimeRange_MinTime) == 0x0008FC, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetTimeRange_MaxTime) == 0x000900, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000908, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Location_3) == 0x000910, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Rotation_3) == 0x000928, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Scale_3) == 0x000940, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Location_4) == 0x000958, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Rotation_4) == 0x000970, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Scale_4) == 0x000988, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_X) == 0x0009A0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_Y) == 0x0009A8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_Z) == 0x0009B0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0009B8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0009D0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_X_1) == 0x0009E8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_Y_1) == 0x0009F0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_Z_1) == 0x0009F8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_X_2) == 0x000A00, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_Y_2) == 0x000A08, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_Z_2) == 0x000A10, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeVector_ReturnValue_1) == 0x000A18, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000A30, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000A38, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeVector_ReturnValue_2) == 0x000A50, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeTransform_ReturnValue) == 0x000A70, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_TransformDirection_ReturnValue) == 0x000AD0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Location_5) == 0x000AE8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Rotation_5) == 0x000B00, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Scale_5) == 0x000B18, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Add_VectorVector_ReturnValue) == 0x000B30, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000B48, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000B60, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Roll_2) == 0x000B78, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Pitch_2) == 0x000B7C, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Yaw_2) == 0x000B80, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_LineTraceSingle_OutHit) == 0x000B88, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_LineTraceSingle_ReturnValue) == 0x000C70, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000C78, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_bBlockingHit) == 0x000C80, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_bInitialOverlap) == 0x000C81, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_Time) == 0x000C84, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_Distance) == 0x000C88, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_Location) == 0x000C90, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_ImpactPoint) == 0x000CA8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_Normal) == 0x000CC0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_ImpactNormal) == 0x000CD8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_PhysMat) == 0x000CF0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_HitActor) == 0x000CF8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_HitComponent) == 0x000D00, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_HitBoneName) == 0x000D08, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_BoneName) == 0x000D10, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_HitItem) == 0x000D18, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_ElementIndex) == 0x000D1C, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_FaceIndex) == 0x000D20, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_TraceStart) == 0x000D28, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakHitResult_TraceEnd) == 0x000D40, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000D58, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000D60, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000D78, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000D80, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeRotator_ReturnValue) == 0x000D98, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_X_3) == 0x000DB0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_Y_3) == 0x000DB8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakVector_Z_3) == 0x000DC0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeTransform_ReturnValue_1) == 0x000DD0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000E30, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000E38, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MapRangeClamped_ReturnValue) == 0x000E40, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeVector_ReturnValue_3) == 0x000E48, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000E60, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_TransformDirection_ReturnValue_1) == 0x000E68, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_TransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Map_Find_Value) == 0x000E80, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Map_Find_ReturnValue) == 0x000E88, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000E90, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, Temp_bool_Variable) == 0x000EA8, "Member 'BanditParentAI_C_ClimbStart_new_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000EB0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, Temp_object_Variable_1) == 0x000EC8, "Member 'BanditParentAI_C_ClimbStart_new_::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, K2Node_Select_Default) == 0x000ED8, "Member 'BanditParentAI_C_ClimbStart_new_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_SphereTraceSingle_OutHit) == 0x000EF0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_SphereTraceSingle_ReturnValue) == 0x000FD8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, K2Node_MakeStruct_ClimbParams) == 0x000FE0, "Member 'BanditParentAI_C_ClimbStart_new_::K2Node_MakeStruct_ClimbParams' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_OutRow_5) == 0x001088, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_OutRow_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_ReturnValue_5) == 0x001180, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_OutRow_6) == 0x001188, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_OutRow_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetDataTableRowFromName_ReturnValue_6) == 0x001280, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetDataTableRowFromName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_GetTransform_ReturnValue) == 0x001290, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Location_6) == 0x0012F0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Rotation_6) == 0x001308, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakTransform_Scale_6) == 0x001320, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x001338, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Roll_3) == 0x001350, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Pitch_3) == 0x001354, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_BreakRotator_Yaw_3) == 0x001358, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x001360, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x001378, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x001380, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x001388, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeRotator_ReturnValue_1) == 0x001390, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeTransform_ReturnValue_2) == 0x0013B0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, K2Node_MakeStruct_ObstacleWidth_40_2E76D7C84DC9B44CEA5876B961E2CD7E_ImplicitCast) == 0x001410, "Member 'BanditParentAI_C_ClimbStart_new_::K2Node_MakeStruct_ObstacleWidth_40_2E76D7C84DC9B44CEA5876B961E2CD7E_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x001418, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x001420, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x001428, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2) == 0x001430, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeVector_Z_ImplicitCast) == 0x001438, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3) == 0x001440, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_4) == 0x001448, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_5) == 0x001450, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_6) == 0x001458, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x001460, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_SetTimelineLength_NewLength_ImplicitCast) == 0x001468, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_SetTimelineLength_NewLength_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MapRangeClamped_InRangeA_ImplicitCast) == 0x001470, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MapRangeClamped_InRangeA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MapRangeClamped_InRangeA_ImplicitCast_1) == 0x001478, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MapRangeClamped_InRangeA_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MapRangeClamped_OutRangeA_ImplicitCast) == 0x001480, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MapRangeClamped_OutRangeA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MapRangeClamped_OutRangeA_ImplicitCast_1) == 0x001488, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MapRangeClamped_OutRangeA_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MapRangeClamped_InRangeB_ImplicitCast) == 0x001490, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MapRangeClamped_InRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MapRangeClamped_InRangeB_ImplicitCast_1) == 0x001498, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MapRangeClamped_InRangeB_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast) == 0x0014A0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1) == 0x0014A8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x0014B0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2) == 0x0014B8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_3) == 0x0014C0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0014C8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0014CC, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0014D0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, K2Node_MakeStruct_StartingPosition_8_A0086F1C489E1A8FCC7A089DA9098F30_ImplicitCast) == 0x0014D4, "Member 'BanditParentAI_C_ClimbStart_new_::K2Node_MakeStruct_StartingPosition_8_A0086F1C489E1A8FCC7A089DA9098F30_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, K2Node_MakeStruct_PlayRate_10_5A4BA53444A8472EC2A69682EDEC3BD2_ImplicitCast) == 0x0014D8, "Member 'BanditParentAI_C_ClimbStart_new_::K2Node_MakeStruct_PlayRate_10_5A4BA53444A8472EC2A69682EDEC3BD2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_4) == 0x0014E0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_5) == 0x0014E8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_6) == 0x0014F0, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0014F8, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x0014FC, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_new_, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x001500, "Member 'BanditParentAI_C_ClimbStart_new_::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.ClimbStart_MULTI
// 0x0140 (0x0140 - 0x0000)
struct BanditParentAI_C_ClimbStart_MULTI final
{
public:
	double                                        Param_ClimbHeight;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentAndTransform                 ClimbLedgeWS;                                      // 0x0010(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EClimbType                                    Param_ClimbType;                                   // 0x00D0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In;                                                // 0x00D1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Width;                                             // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Param_ClimbStartTransform;                         // 0x00E0(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_ClimbStart_MULTI) == 0x000010, "Wrong alignment on BanditParentAI_C_ClimbStart_MULTI");
static_assert(sizeof(BanditParentAI_C_ClimbStart_MULTI) == 0x000140, "Wrong size on BanditParentAI_C_ClimbStart_MULTI");
static_assert(offsetof(BanditParentAI_C_ClimbStart_MULTI, Param_ClimbHeight) == 0x000000, "Member 'BanditParentAI_C_ClimbStart_MULTI::Param_ClimbHeight' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_MULTI, ClimbLedgeWS) == 0x000010, "Member 'BanditParentAI_C_ClimbStart_MULTI::ClimbLedgeWS' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_MULTI, Param_ClimbType) == 0x0000D0, "Member 'BanditParentAI_C_ClimbStart_MULTI::Param_ClimbType' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_MULTI, In) == 0x0000D1, "Member 'BanditParentAI_C_ClimbStart_MULTI::In' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_MULTI, Width) == 0x0000D8, "Member 'BanditParentAI_C_ClimbStart_MULTI::Width' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_MULTI, Param_ClimbStartTransform) == 0x0000E0, "Member 'BanditParentAI_C_ClimbStart_MULTI::Param_ClimbStartTransform' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.ClimbStart_SERV
// 0x0140 (0x0140 - 0x0000)
struct BanditParentAI_C_ClimbStart_SERV final
{
public:
	double                                        Param_ClimbHeight;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentAndTransform                 ClimbLedgeWS;                                      // 0x0010(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EClimbType                                    Param_ClimbType;                                   // 0x00D0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In;                                                // 0x00D1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Width;                                             // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Param_ClimbStartTransform;                         // 0x00E0(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_ClimbStart_SERV) == 0x000010, "Wrong alignment on BanditParentAI_C_ClimbStart_SERV");
static_assert(sizeof(BanditParentAI_C_ClimbStart_SERV) == 0x000140, "Wrong size on BanditParentAI_C_ClimbStart_SERV");
static_assert(offsetof(BanditParentAI_C_ClimbStart_SERV, Param_ClimbHeight) == 0x000000, "Member 'BanditParentAI_C_ClimbStart_SERV::Param_ClimbHeight' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_SERV, ClimbLedgeWS) == 0x000010, "Member 'BanditParentAI_C_ClimbStart_SERV::ClimbLedgeWS' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_SERV, Param_ClimbType) == 0x0000D0, "Member 'BanditParentAI_C_ClimbStart_SERV::Param_ClimbType' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_SERV, In) == 0x0000D1, "Member 'BanditParentAI_C_ClimbStart_SERV::In' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_SERV, Width) == 0x0000D8, "Member 'BanditParentAI_C_ClimbStart_SERV::Width' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbStart_SERV, Param_ClimbStartTransform) == 0x0000E0, "Member 'BanditParentAI_C_ClimbStart_SERV::Param_ClimbStartTransform' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.ClimbUpdate(new)
// 0x0CD0 (0x0CD0 - 0x0000)
struct BanditParentAI_C_ClimbUpdate_new_ final
{
public:
	double                                        Param_BlendIn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Break;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlaybackPosition_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_1;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_2;                      // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0250(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0xC];                                      // 0x0304(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0310(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_2;        // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_2;             // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0460(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue_3;                      // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0550(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_639[0x3];                                      // 0x0639(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlaybackPosition_ReturnValue_3;        // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_648[0x8];                                      // 0x0648(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0650(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_3;             // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C8[0x8];                                      // 0x06C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentAndTransform                 K2Node_MakeStruct_ComponentAndTransform;           // 0x06D0(0x00C0)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_7;                // 0x07A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_7;                // 0x07C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_7;                   // 0x07D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x07F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0850(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_BreakTransform_Location_8;                // 0x0860(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_8;                // 0x0878(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_8;                   // 0x0890(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x08A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x08C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x08D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x08F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8FC[0x4];                                      // 0x08FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0900(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E9[0x7];                                      // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x09F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9FA[0x2];                                      // 0x09FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A04[0x4];                                      // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0A08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0A20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0A38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0A50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0A68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0A70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0A78(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9C[0x4];                                      // 0x0A9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0AA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0AB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD9[0x7];                                      // 0x0AD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0AE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0B00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B18[0x8];                                      // 0x0B18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0B20(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0B80(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast_1;    // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorValue_InTime_ImplicitCast;       // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorValue_InTime_ImplicitCast_1;     // 0x0C0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_1;               // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_2;               // 0x0C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1C[0x4];                                      // 0x0C1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0C28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2;   // 0x0C30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2;   // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_3;               // 0x0C50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0C54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0C5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TLerp_Alpha_ImplicitCast;                 // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C64[0x4];                                      // 0x0C64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_2;        // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_3;        // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_4;        // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorValue_InTime_ImplicitCast_2;     // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C94[0x4];                                      // 0x0C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_3;        // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_4;        // 0x0CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0CB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB4[0x4];                                      // 0x0CB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0CB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0CC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_ClimbUpdate_new_) == 0x000010, "Wrong alignment on BanditParentAI_C_ClimbUpdate_new_");
static_assert(sizeof(BanditParentAI_C_ClimbUpdate_new_) == 0x000CD0, "Wrong size on BanditParentAI_C_ClimbUpdate_new_");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, Param_BlendIn) == 0x000000, "Member 'BanditParentAI_C_ClimbUpdate_new_::Param_BlendIn' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, Break) == 0x000008, "Member 'BanditParentAI_C_ClimbUpdate_new_::Break' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetPlaybackPosition_ReturnValue) == 0x00000C, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetPlaybackPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Location) == 0x000030, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Rotation) == 0x000048, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Scale) == 0x000060, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetPlaybackPosition_ReturnValue_1) == 0x000078, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetPlaybackPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00007C, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Location_1) == 0x000080, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Rotation_1) == 0x000098, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Scale_1) == 0x0000B0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetVectorValue_ReturnValue) == 0x0000D0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Location_2) == 0x0000E8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Rotation_2) == 0x000100, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Scale_2) == 0x000118, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_X) == 0x000130, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_Y) == 0x000138, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_Z) == 0x000140, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000148, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000160, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000170, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Concat_StrStr_ReturnValue) == 0x000178, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetVectorValue_ReturnValue_1) == 0x000188, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_X_1) == 0x0001A0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_Y_1) == 0x0001A8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_Z_1) == 0x0001B0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_VLerp_ReturnValue) == 0x0001B8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Location_3) == 0x0001D0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Rotation_3) == 0x0001E8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Scale_3) == 0x000200, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_VLerp_ReturnValue_1) == 0x000218, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_VLerp_ReturnValue_2) == 0x000230, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_VLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetTransform_ReturnValue) == 0x000250, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Location_4) == 0x0002B0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Rotation_4) == 0x0002C8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Scale_4) == 0x0002E0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Roll) == 0x0002F8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Pitch) == 0x0002FC, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Yaw) == 0x000300, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetSocketTransform_ReturnValue) == 0x000310, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Location_5) == 0x000370, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Rotation_5) == 0x000388, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Scale_5) == 0x0003A0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetPlaybackPosition_ReturnValue_2) == 0x0003B8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetPlaybackPosition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0003C0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetVectorValue_ReturnValue_2) == 0x0003D8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetVectorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Roll_1) == 0x0003F0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Pitch_1) == 0x0003F4, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Yaw_1) == 0x0003F8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_X_2) == 0x000400, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_Y_2) == 0x000408, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_Z_2) == 0x000410, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000418, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000420, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000428, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000430, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeRotator_ReturnValue) == 0x000448, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeTransform_ReturnValue) == 0x000460, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, Temp_bool_Variable) == 0x0004C0, "Member 'BanditParentAI_C_ClimbUpdate_new_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Location_6) == 0x0004C8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Rotation_6) == 0x0004E0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Scale_6) == 0x0004F8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, K2Node_Select_Default) == 0x000510, "Member 'BanditParentAI_C_ClimbUpdate_new_::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Roll_2) == 0x000528, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Pitch_2) == 0x00052C, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Yaw_2) == 0x000530, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_VLerp_ReturnValue_3) == 0x000538, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_VLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000550, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000638, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetPlaybackPosition_ReturnValue_3) == 0x00063C, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetPlaybackPosition_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000640, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_ComposeTransforms_ReturnValue) == 0x000650, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetVectorValue_ReturnValue_3) == 0x0006B0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetVectorValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, K2Node_MakeStruct_ComponentAndTransform) == 0x0006D0, "Member 'BanditParentAI_C_ClimbUpdate_new_::K2Node_MakeStruct_ComponentAndTransform' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_X_3) == 0x000790, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_Y_3) == 0x000798, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakVector_Z_3) == 0x0007A0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Location_7) == 0x0007A8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Location_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Rotation_7) == 0x0007C0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Rotation_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Scale_7) == 0x0007D8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Scale_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeTransform_ReturnValue_1) == 0x0007F0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, Temp_object_Variable) == 0x000850, "Member 'BanditParentAI_C_ClimbUpdate_new_::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Location_8) == 0x000860, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Location_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Rotation_8) == 0x000878, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Rotation_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakTransform_Scale_8) == 0x000890, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakTransform_Scale_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeVector_ReturnValue) == 0x0008A8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_VectorVector_ReturnValue) == 0x0008C0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0008D8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Roll_3) == 0x0008F0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Pitch_3) == 0x0008F4, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakRotator_Yaw_3) == 0x0008F8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_LineTraceSingle_OutHit) == 0x000900, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_LineTraceSingle_ReturnValue) == 0x0009E8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0009F0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_bBlockingHit) == 0x0009F8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_bInitialOverlap) == 0x0009F9, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_Time) == 0x0009FC, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_Distance) == 0x000A00, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_Location) == 0x000A08, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_ImpactPoint) == 0x000A20, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_Normal) == 0x000A38, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_ImpactNormal) == 0x000A50, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_PhysMat) == 0x000A68, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_HitActor) == 0x000A70, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_HitComponent) == 0x000A78, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_HitBoneName) == 0x000A80, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_BoneName) == 0x000A88, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_HitItem) == 0x000A90, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_ElementIndex) == 0x000A94, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_FaceIndex) == 0x000A98, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_TraceStart) == 0x000AA0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_BreakHitResult_TraceEnd) == 0x000AB8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000AD0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000AD8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000AE0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeRotator_ReturnValue_1) == 0x000AE8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000B00, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeTransform_ReturnValue_2) == 0x000B20, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_TLerp_ReturnValue) == 0x000B80, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000BE0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000BE8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000BF0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000BF8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Greater_DoubleDouble_B_ImplicitCast_1) == 0x000C00, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Greater_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetVectorValue_InTime_ImplicitCast) == 0x000C08, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetVectorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetVectorValue_InTime_ImplicitCast_1) == 0x000C0C, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetVectorValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000C10, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_VLerp_Alpha_ImplicitCast_1) == 0x000C14, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_VLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_VLerp_Alpha_ImplicitCast_2) == 0x000C18, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_VLerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000C20, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000C28, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2) == 0x000C30, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000C38, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000C40, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2) == 0x000C48, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_VLerp_Alpha_ImplicitCast_3) == 0x000C50, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_VLerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000C54, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000C58, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000C5C, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_TLerp_Alpha_ImplicitCast) == 0x000C60, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_TLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000C68, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_B_ImplicitCast_2) == 0x000C70, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_B_ImplicitCast_3) == 0x000C78, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_B_ImplicitCast_4) == 0x000C80, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000C88, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_GetVectorValue_InTime_ImplicitCast_2) == 0x000C90, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_GetVectorValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x000C98, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_A_ImplicitCast_3) == 0x000CA0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Add_DoubleDouble_A_ImplicitCast_4) == 0x000CA8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Add_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000CB0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000CB8, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000CC0, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ClimbUpdate_new_, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000CC4, "Member 'BanditParentAI_C_ClimbUpdate_new_::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.DeathBody_Multi
// 0x0028 (0x0028 - 0x0000)
struct BanditParentAI_C_DeathBody_Multi final
{
public:
	double                                        HitAngle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_DeathBody_Multi) == 0x000008, "Wrong alignment on BanditParentAI_C_DeathBody_Multi");
static_assert(sizeof(BanditParentAI_C_DeathBody_Multi) == 0x000028, "Wrong size on BanditParentAI_C_DeathBody_Multi");
static_assert(offsetof(BanditParentAI_C_DeathBody_Multi, HitAngle) == 0x000000, "Member 'BanditParentAI_C_DeathBody_Multi::HitAngle' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_DeathBody_Multi, HitLocation) == 0x000008, "Member 'BanditParentAI_C_DeathBody_Multi::HitLocation' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_DeathBody_Multi, BoneName) == 0x000020, "Member 'BanditParentAI_C_DeathBody_Multi::BoneName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.DefaultMontages
// 0x0010 (0x0010 - 0x0000)
struct BanditParentAI_C_DefaultMontages final
{
public:
	double                                        HitAngle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomInteger;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_DefaultMontages) == 0x000008, "Wrong alignment on BanditParentAI_C_DefaultMontages");
static_assert(sizeof(BanditParentAI_C_DefaultMontages) == 0x000010, "Wrong size on BanditParentAI_C_DefaultMontages");
static_assert(offsetof(BanditParentAI_C_DefaultMontages, HitAngle) == 0x000000, "Member 'BanditParentAI_C_DefaultMontages::HitAngle' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_DefaultMontages, RandomInteger) == 0x000008, "Member 'BanditParentAI_C_DefaultMontages::RandomInteger' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.ExecuteUbergraph_BanditParentAI
// 0x1440 (0x1440 - 0x0000)
struct BanditParentAI_C_ExecuteUbergraph_BanditParentAI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0008(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_37;                  // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x00FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_36;                  // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0114(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_35;                  // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0144(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_34;                  // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_33;                  // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_32;                  // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_31;                  // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x0194(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_30;                  // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x01AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x01C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_29;                  // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_28;                  // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x01E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_27;                  // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x01FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_26;                  // 0x020C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0214(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_25;                  // 0x0224(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x022C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x023C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x0244(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_24;                  // 0x0254(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_23;                  // 0x025C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x0264(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_22;                  // 0x0274(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x027C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_21;                  // 0x028C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x0294(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_20;                  // 0x02A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x02AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x02BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x02E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x02F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x0310(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x0328(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x0340(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x0388(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x03A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_25;           // 0x03B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_26;           // 0x03D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_27;           // 0x03E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_4;                            // 0x0400(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_5;                            // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_6;                            // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClimbUpdate_new__Break;                   // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_28;           // 0x042C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0440(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_29;           // 0x0448(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_30;           // 0x0468(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_31;           // 0x0480(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_32;           // 0x0498(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_33;           // 0x04B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_34;           // 0x04C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_35;           // 0x04E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_36;           // 0x0500(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_37;           // 0x0518(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_38;           // 0x0530(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_39;           // 0x0548(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0558(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_40;           // 0x0560(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x7];                                      // 0x0579(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0580(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_48;                  // 0x058C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_38;                  // 0x0594(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_41;           // 0x05B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item_1;                         // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_HitAngle_5;                     // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RandomInteger_2;                // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_42;           // 0x05EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4; // 0x0600(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_39;                  // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x3];                                      // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_43;           // 0x0614(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_HitAngle_4;                     // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RandomInteger_1;                // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item_2;                         // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5; // 0x0648(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_40;                  // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659[0x7];                                      // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6; // 0x0660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_HitAngle_3;                     // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation_2;                  // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName_2;                     // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_HitAngle_2;                     // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation_1;                  // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName_1;                     // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C9[0x7];                                      // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x06E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_44;           // 0x0700(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0710(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0740(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_41;                  // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_45;           // 0x0760(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DamageReceived;                       // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774[0x4];                                      // 0x0774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0778(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Origin;                               // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0798(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0880(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_HitAngle_1;                     // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RandomInteger;                  // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C[0x4];                                      // 0x089C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHitAngle_HitAngle;                     // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x08A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x08AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_3;         // 0x08AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x08AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_4;         // 0x08AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x08AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x08AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x08B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x08D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x08E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0900(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0918(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0920(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0928(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94C[0x4];                                      // 0x094C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0950(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0968(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_42;                  // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_46;           // 0x0988(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_HitAngle;                       // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_HitDistance;                    // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x09B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x09C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RandomBoolWithWeight;           // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D1[0x3];                                      // 0x09D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RandomInteger0_4;               // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RandomInteger0_1;               // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9DC[0x4];                                      // 0x09DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E9[0x7];                                      // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x09F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x09F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x09FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x09FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x09FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9FD[0x3];                                      // 0x09FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_2;            // 0x0A00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0A09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0A0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A0B[0x1];                                      // 0x0A0B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_49;                  // 0x0A0C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0A14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A15[0x3];                                      // 0x0A15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_47;           // 0x0A18(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0A29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFlying_ReturnValue;                     // 0x0A2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2B[0x1];                                      // 0x0A2B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0A2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x0A30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7; // 0x0A38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A41[0x3];                                      // 0x0A41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_43;                  // 0x0A44(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0A4C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A54[0x4];                                      // 0x0A54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0A58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0A60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0A68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0A74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A75[0x3];                                      // 0x0A75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0A78(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UDestructibleComponent*                 K2Node_DynamicCast_AsDestructible_Component;       // 0x0B60(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B69[0x3];                                      // 0x0B69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_44;                  // 0x0B6C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_48;           // 0x0B74(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0B84(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_49;           // 0x0B8C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9C[0x4];                                      // 0x0B9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0BB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0BD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0BE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0C00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0C18(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0D01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0D02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D03[0x1];                                      // 0x0D03(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0D04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D0C[0x4];                                      // 0x0D0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0D10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0D28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0D40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0D58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0D70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0D78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0D80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0D90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0D98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0D9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0DA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA4[0x4];                                      // 0x0DA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0DA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0DC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestructibleComponent*                 K2Node_DynamicCast_AsDestructible_Component_1;     // 0x0DD8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE1[0x7];                                      // 0x0DE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0DE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0E00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E28[0x8];                                      // 0x0E28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0E30(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_45;                  // 0x0E90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0E98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue; // 0x0EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA4[0x4];                                      // 0x0EA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0EA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0EB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0EC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0EE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE9[0x3];                                      // 0x0EE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_50;           // 0x0EEC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EFC[0x4];                                      // 0x0EFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x0F00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0F08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F0C[0x4];                                      // 0x0F0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_ClimbHeight_1;                  // 0x0F10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F18[0x8];                                      // 0x0F18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FComponentAndTransform                 K2Node_CustomEvent_ClimbLedgeWS_1;                 // 0x0F20(0x00C0)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EClimbType                                    K2Node_CustomEvent_ClimbType_1;                    // 0x0FE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_In_1;                           // 0x0FE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE2[0x6];                                      // 0x0FE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Width_1;                        // 0x0FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_ClimbStartTransform_1;          // 0x0FF0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x1050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1051[0x7];                                     // 0x1051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_ClimbHeight;                    // 0x1058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FComponentAndTransform                 K2Node_CustomEvent_ClimbLedgeWS;                   // 0x1060(0x00C0)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EClimbType                                    K2Node_CustomEvent_ClimbType;                      // 0x1120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_In;                             // 0x1121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1122[0x6];                                     // 0x1122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Width;                          // 0x1128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_ClimbStartTransform;            // 0x1130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x1190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x11A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x11C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RebaseZeroOriginOntoLocal_ReturnValue;    // 0x11D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x11F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FComponentAndTransform                 K2Node_MakeStruct_ComponentAndTransform;           // 0x1250(0x00C0)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x1311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1312[0x6];                                     // 0x1312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x1318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x1330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x1338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x1340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x1341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x1342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1343[0x5];                                     // 0x1343(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_8; // 0x1348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x1350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x1351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x1352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1353[0x5];                                     // 0x1353(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x1358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x1360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x1361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x1362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x1363(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_46;                  // 0x1364(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_51;           // 0x136C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClimbCheck_new__CanClimb_Vault;           // 0x137C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_137D[0x3];                                     // 0x137D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x1380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x1388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x1389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138A[0x6];                                     // 0x138A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x1390(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x1398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_47;                  // 0x13A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x13A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x13B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x13B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x13B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x13B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x13B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B5[0x3];                                     // 0x13B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_9; // 0x13B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x13C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C1[0x7];                                     // 0x13C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent; // 0x13C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x13D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x13D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x13D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13DA[0x6];                                     // 0x13DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1; // 0x13E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x13E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead__IsDead_;                          // 0x13E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EA[0x6];                                     // 0x13EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x13F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClimbUpdate_new__BlendIn_ImplicitCast;    // 0x1408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x1410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1414[0x4];                                     // 0x1414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x1418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_InTimeToStartMontageAt_ImplicitCast; // 0x1420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1424[0x4];                                     // 0x1424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x1428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAllMotorsAngularDriveParams_InSpring_ImplicitCast; // 0x1430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI) == 0x000010, "Wrong alignment on BanditParentAI_C_ExecuteUbergraph_BanditParentAI");
static_assert(sizeof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI) == 0x001440, "Wrong size on BanditParentAI_C_ExecuteUbergraph_BanditParentAI");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, EntryPoint) == 0x000000, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::EntryPoint' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000008, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000F0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_37) == 0x0000F4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_37' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate) == 0x0000FC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_36) == 0x00010C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_36' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_1) == 0x000114, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_35) == 0x000124, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_35' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_2) == 0x00012C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_name_Variable) == 0x00013C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_3) == 0x000144, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_34) == 0x000154, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_34' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_33) == 0x00015C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_33' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_4) == 0x000164, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_32) == 0x000174, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_32' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_5) == 0x00017C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_31) == 0x00018C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_31' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_6) == 0x000194, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_30) == 0x0001A4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_30' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001AC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_name_Variable_1) == 0x0001BC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001C4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_29) == 0x0001D4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_29' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_28) == 0x0001DC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_28' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001E4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_27) == 0x0001F4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_27' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_10) == 0x0001FC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_26) == 0x00020C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_26' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_11) == 0x000214, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_25) == 0x000224, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_25' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_12) == 0x00022C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_name_Variable_2) == 0x00023C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_13) == 0x000244, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_24) == 0x000254, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_24' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_23) == 0x00025C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_23' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_14) == 0x000264, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_22) == 0x000274, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_22' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_15) == 0x00027C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_21) == 0x00028C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_21' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_16) == 0x000294, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_20) == 0x0002A4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_20' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_17) == 0x0002AC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_name_Variable_3) == 0x0002BC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_bool_Variable) == 0x0002C4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_real_Variable) == 0x0002C8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_real_Variable_1) == 0x0002D0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_19) == 0x0002D8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_18) == 0x0002E0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_18) == 0x0002F0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_19) == 0x0002F8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_17) == 0x000308, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_20) == 0x000310, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_16) == 0x000320, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_21) == 0x000328, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_15) == 0x000338, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_22) == 0x000340, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_name_Variable_4) == 0x000350, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_int_Variable) == 0x000358, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_object_Variable) == 0x000360, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_object_Variable_1) == 0x000368, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_object_Variable_2) == 0x000370, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_object_Variable_3) == 0x000378, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_14) == 0x000380, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_23) == 0x000388, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_13) == 0x000398, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_24) == 0x0003A0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_12) == 0x0003B0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_25) == 0x0003B8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_11) == 0x0003C8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_26) == 0x0003D0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_10) == 0x0003E0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_27) == 0x0003E8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_name_Variable_5) == 0x0003F8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_object_Variable_4) == 0x000400, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_bool_Variable_1) == 0x000410, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_object_Variable_5) == 0x000418, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_object_Variable_6) == 0x000420, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_ClimbUpdate_new__Break) == 0x000428, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_ClimbUpdate_new__Break' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_28) == 0x00042C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000440, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_29) == 0x000448, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_9) == 0x000458, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_8) == 0x000460, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_30) == 0x000468, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_7) == 0x000478, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_31) == 0x000480, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_6) == 0x000490, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_32) == 0x000498, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_5) == 0x0004A8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_33) == 0x0004B0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_name_Variable_6) == 0x0004C0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_34) == 0x0004C8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_4) == 0x0004D8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_3) == 0x0004E0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_35) == 0x0004E8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_35' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_2) == 0x0004F8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_36) == 0x000500, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_36' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_1) == 0x000510, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_37) == 0x000518, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_37' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName) == 0x000528, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_38) == 0x000530, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_38' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_name_Variable_7) == 0x000540, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_39) == 0x000548, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_39' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000558, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_40) == 0x000560, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_40' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000570, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue) == 0x000578, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000580, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue_1) == 0x000588, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_48) == 0x00058C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_48' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_38) == 0x000594, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_38' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Array_Get_Item) == 0x0005A0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x0005A8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_41) == 0x0005B0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_41' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue_2) == 0x0005C0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Array_Get_Item_1) == 0x0005C8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x0005D0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue_3) == 0x0005D8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_HitAngle_5) == 0x0005E0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_HitAngle_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_RandomInteger_2) == 0x0005E8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_RandomInteger_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_42) == 0x0005EC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_42' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4) == 0x000600, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_39) == 0x000608, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_39' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue_4) == 0x000610, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_43) == 0x000614, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_43' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_HitAngle_4) == 0x000628, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_HitAngle_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_RandomInteger_1) == 0x000630, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_RandomInteger_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Array_Get_Item_2) == 0x000638, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_name_Variable_8) == 0x000640, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5) == 0x000648, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_40) == 0x000650, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_40' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue_5) == 0x000658, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6) == 0x000660, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_InstigatedBy) == 0x000668, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_HitAngle_3) == 0x000670, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_HitAngle_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_HitLocation_2) == 0x000678, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_HitLocation_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_BoneName_2) == 0x000690, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_BoneName_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue_6) == 0x000698, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_HitAngle_2) == 0x0006A0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_HitAngle_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_HitLocation_1) == 0x0006A8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_HitLocation_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_BoneName_1) == 0x0006C0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_BoneName_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0006C8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_Select_Default) == 0x0006D0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_MakeLiteralName_ReturnValue) == 0x0006D8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_Event_DeltaSeconds) == 0x0006E0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_GetActorForwardVector_ReturnValue) == 0x0006E8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_44) == 0x000700, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_44' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_GetActorUpVector_ReturnValue) == 0x000710, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_RotateAngleAxis_ReturnValue) == 0x000728, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000740, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_41) == 0x000758, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_41' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_45) == 0x000760, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_45' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_Event_DamageReceived) == 0x000770, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_Event_DamageReceived' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_Event_DamageType) == 0x000778, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_Event_Origin) == 0x000780, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_Event_Origin' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_Event_HitInfo) == 0x000798, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_Event_InstigatedBy) == 0x000880, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_Event_DamageCauser) == 0x000888, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_HitAngle_1) == 0x000890, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_HitAngle_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_RandomInteger) == 0x000898, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_RandomInteger' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_GetHitAngle_HitAngle) == 0x0008A0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_GetHitAngle_HitAngle' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0008A8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x0008A9, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x0008AA, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_InRange_FloatFloat_ReturnValue_3) == 0x0008AB, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_InRange_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BooleanOR_ReturnValue) == 0x0008AC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_InRange_FloatFloat_ReturnValue_4) == 0x0008AD, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_InRange_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_bBlockingHit) == 0x0008AE, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_bInitialOverlap) == 0x0008AF, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_Time) == 0x0008B0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_Distance) == 0x0008B4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_Location) == 0x0008B8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_ImpactPoint) == 0x0008D0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_Normal) == 0x0008E8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_ImpactNormal) == 0x000900, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_PhysMat) == 0x000918, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_HitActor) == 0x000920, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_HitComponent) == 0x000928, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_HitBoneName) == 0x000930, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_BoneName) == 0x000938, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_HitItem) == 0x000940, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_ElementIndex) == 0x000944, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_FaceIndex) == 0x000948, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_TraceStart) == 0x000950, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_TraceEnd) == 0x000968, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_42) == 0x000980, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_42' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_46) == 0x000988, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_46' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_HitAngle) == 0x000998, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_HitAngle' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_HitDistance) == 0x0009A0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_HitDistance' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_BoneName) == 0x0009A8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_HitLocation) == 0x0009B0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_DamageCauser) == 0x0009C8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_RandomBoolWithWeight) == 0x0009D0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_RandomBoolWithWeight' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_RandomInteger0_4) == 0x0009D4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_RandomInteger0_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_RandomInteger0_1) == 0x0009D8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_RandomInteger0_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_DynamicCast_AsSurvival_Player) == 0x0009E0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_DynamicCast_bSuccess) == 0x0009E8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_DynamicCast_AsSurvival_Player_1) == 0x0009F0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_DynamicCast_bSuccess_1) == 0x0009F8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0009F9, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0009FA, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0009FB, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BooleanOR_ReturnValue_1) == 0x0009FC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_DynamicCast_AsSurvival_Player_2) == 0x000A00, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_DynamicCast_AsSurvival_Player_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_DynamicCast_bSuccess_2) == 0x000A08, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000A09, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000A0A, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_49) == 0x000A0C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_49' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_HasAuthority_ReturnValue) == 0x000A14, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_47) == 0x000A18, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_47' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_HasAuthority_ReturnValue_1) == 0x000A28, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_HasAuthority_ReturnValue_2) == 0x000A29, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsFlying_ReturnValue) == 0x000A2A, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsFlying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000A2C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_Select_Default_1) == 0x000A30, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7) == 0x000A38, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue_7) == 0x000A40, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_43) == 0x000A44, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_43' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000A4C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000A58, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_ComponentBoundEvent_OtherActor) == 0x000A60, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_ComponentBoundEvent_OtherComp) == 0x000A68, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000A70, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_ComponentBoundEvent_bFromSweep) == 0x000A74, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_ComponentBoundEvent_SweepResult) == 0x000A78, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_DynamicCast_AsDestructible_Component) == 0x000B60, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_DynamicCast_AsDestructible_Component' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_DynamicCast_bSuccess_3) == 0x000B68, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_44) == 0x000B6C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_44' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_48) == 0x000B74, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_48' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_name_Variable_9) == 0x000B84, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_49) == 0x000B8C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_49' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_GetForwardVector_ReturnValue) == 0x000BA0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000BB8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000BD0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Add_VectorVector_ReturnValue) == 0x000BE8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000C00, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_LineTraceSingle_OutHit) == 0x000C18, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_LineTraceSingle_ReturnValue) == 0x000D00, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000D01, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000D02, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_Time_1) == 0x000D04, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_Distance_1) == 0x000D08, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_Location_1) == 0x000D10, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000D28, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_Normal_1) == 0x000D40, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000D58, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_PhysMat_1) == 0x000D70, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_HitActor_1) == 0x000D78, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_HitComponent_1) == 0x000D80, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_HitBoneName_1) == 0x000D88, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_BoneName_1) == 0x000D90, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_HitItem_1) == 0x000D98, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_ElementIndex_1) == 0x000D9C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_FaceIndex_1) == 0x000DA0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_TraceStart_1) == 0x000DA8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakHitResult_TraceEnd_1) == 0x000DC0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_DynamicCast_AsDestructible_Component_1) == 0x000DD8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_DynamicCast_AsDestructible_Component_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_DynamicCast_bSuccess_4) == 0x000DE0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000DE8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000E00, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000E18, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000E20, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_MakeTransform_ReturnValue) == 0x000E30, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_45) == 0x000E90, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_45' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000E98, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue) == 0x000EA0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000EA8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_MakeVector_ReturnValue) == 0x000EB0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000EC8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_GetAnimInstance_ReturnValue) == 0x000EE0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000EE8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_50) == 0x000EEC, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_50' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_Select_Default_2) == 0x000F00, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Montage_Play_ReturnValue) == 0x000F08, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_ClimbHeight_1) == 0x000F10, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_ClimbHeight_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_ClimbLedgeWS_1) == 0x000F20, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_ClimbLedgeWS_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_ClimbType_1) == 0x000FE0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_ClimbType_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_In_1) == 0x000FE1, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_In_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_Width_1) == 0x000FE8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_Width_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_ClimbStartTransform_1) == 0x000FF0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_ClimbStartTransform_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Not_PreBool_ReturnValue) == 0x001050, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_ClimbHeight) == 0x001058, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_ClimbHeight' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_ClimbLedgeWS) == 0x001060, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_ClimbLedgeWS' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_ClimbType) == 0x001120, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_ClimbType' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_In) == 0x001121, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_In' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_Width) == 0x001128, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_Width' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_ClimbStartTransform) == 0x001130, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_ClimbStartTransform' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakTransform_Location) == 0x001190, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakTransform_Rotation) == 0x0011A8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BreakTransform_Scale) == 0x0011C0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_RebaseZeroOriginOntoLocal_ReturnValue) == 0x0011D8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_RebaseZeroOriginOntoLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_MakeTransform_ReturnValue_1) == 0x0011F0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_MakeStruct_ComponentAndTransform) == 0x001250, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_MakeStruct_ComponentAndTransform' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Not_PreBool_ReturnValue_1) == 0x001310, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BooleanAND_ReturnValue) == 0x001311, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x001318, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_VSize_ReturnValue) == 0x001330, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_MapRangeClamped_ReturnValue) == 0x001338, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Not_PreBool_ReturnValue_2) == 0x001340, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BooleanOR_ReturnValue_2) == 0x001341, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_HasAuthority_ReturnValue_3) == 0x001342, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_8) == 0x001348, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Not_PreBool_ReturnValue_3) == 0x001350, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BooleanAND_ReturnValue_1) == 0x001351, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue_8) == 0x001352, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_GetAnimInstance_ReturnValue_1) == 0x001358, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsLocallyControlled_ReturnValue) == 0x001360, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Montage_IsPlaying_ReturnValue) == 0x001361, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Not_PreBool_ReturnValue_4) == 0x001362, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BooleanAND_ReturnValue_2) == 0x001363, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_46) == 0x001364, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_46' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CreateDelegate_OutputDelegate_51) == 0x00136C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CreateDelegate_OutputDelegate_51' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_ClimbCheck_new__CanClimb_Vault) == 0x00137C, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_ClimbCheck_new__CanClimb_Vault' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_MakeLiteralName_ReturnValue_2) == 0x001380, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Not_PreBool_ReturnValue_5) == 0x001388, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BooleanAND_ReturnValue_3) == 0x001389, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_GetBlackboard_ReturnValue) == 0x001390, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_MakeLiteralName_ReturnValue_3) == 0x001398, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, K2Node_CustomEvent_NotifyName_47) == 0x0013A0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::K2Node_CustomEvent_NotifyName_47' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_GetBlackboard_ReturnValue_1) == 0x0013A8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsFalling_ReturnValue) == 0x0013B0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Not_PreBool_ReturnValue_6) == 0x0013B1, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BooleanAND_ReturnValue_4) == 0x0013B2, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Not_PreBool_ReturnValue_7) == 0x0013B3, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_BooleanAND_ReturnValue_5) == 0x0013B4, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_9) == 0x0013B8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue_9) == 0x0013C0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_PlayEventWithOcclusion_FMODAudioComponent) == 0x0013C8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_PlayEventWithOcclusion_FMODAudioComponent' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0013D0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, Temp_bool_Variable_2) == 0x0013D8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Not_PreBool_ReturnValue_8) == 0x0013D9, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1) == 0x0013E0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_PlayEventWithOcclusion_FMODAudioComponent_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsValid_ReturnValue_10) == 0x0013E8, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_IsDead__IsDead_) == 0x0013E9, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_IsDead__IsDead_' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0013F0, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_ClimbUpdate_new__BlendIn_ImplicitCast) == 0x001408, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_ClimbUpdate_new__BlendIn_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x001410, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x001418, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Montage_Play_InTimeToStartMontageAt_ImplicitCast) == 0x001420, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Montage_Play_InTimeToStartMontageAt_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x001428, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ExecuteUbergraph_BanditParentAI, CallFunc_SetAllMotorsAngularDriveParams_InSpring_ImplicitCast) == 0x001430, "Member 'BanditParentAI_C_ExecuteUbergraph_BanditParentAI::CallFunc_SetAllMotorsAngularDriveParams_InSpring_ImplicitCast' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.HeadshotMontages
// 0x0010 (0x0010 - 0x0000)
struct BanditParentAI_C_HeadshotMontages final
{
public:
	double                                        HitAngle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomInteger;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_HeadshotMontages) == 0x000008, "Wrong alignment on BanditParentAI_C_HeadshotMontages");
static_assert(sizeof(BanditParentAI_C_HeadshotMontages) == 0x000010, "Wrong size on BanditParentAI_C_HeadshotMontages");
static_assert(offsetof(BanditParentAI_C_HeadshotMontages, HitAngle) == 0x000000, "Member 'BanditParentAI_C_HeadshotMontages::HitAngle' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_HeadshotMontages, RandomInteger) == 0x000008, "Member 'BanditParentAI_C_HeadshotMontages::RandomInteger' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.HitMontage_MULT
// 0x0048 (0x0048 - 0x0000)
struct BanditParentAI_C_HitMontage_MULT final
{
public:
	double                                        HitAngle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HitDistance;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomBoolWithWeight;                              // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RandomInteger0Minus4;                              // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomInteger0Minus1;                              // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_HitMontage_MULT) == 0x000008, "Wrong alignment on BanditParentAI_C_HitMontage_MULT");
static_assert(sizeof(BanditParentAI_C_HitMontage_MULT) == 0x000048, "Wrong size on BanditParentAI_C_HitMontage_MULT");
static_assert(offsetof(BanditParentAI_C_HitMontage_MULT, HitAngle) == 0x000000, "Member 'BanditParentAI_C_HitMontage_MULT::HitAngle' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_HitMontage_MULT, HitDistance) == 0x000008, "Member 'BanditParentAI_C_HitMontage_MULT::HitDistance' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_HitMontage_MULT, BoneName) == 0x000010, "Member 'BanditParentAI_C_HitMontage_MULT::BoneName' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_HitMontage_MULT, HitLocation) == 0x000018, "Member 'BanditParentAI_C_HitMontage_MULT::HitLocation' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_HitMontage_MULT, DamageCauser) == 0x000030, "Member 'BanditParentAI_C_HitMontage_MULT::DamageCauser' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_HitMontage_MULT, RandomBoolWithWeight) == 0x000038, "Member 'BanditParentAI_C_HitMontage_MULT::RandomBoolWithWeight' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_HitMontage_MULT, RandomInteger0Minus4) == 0x00003C, "Member 'BanditParentAI_C_HitMontage_MULT::RandomInteger0Minus4' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_HitMontage_MULT, RandomInteger0Minus1) == 0x000040, "Member 'BanditParentAI_C_HitMontage_MULT::RandomInteger0Minus1' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.InitRandomMeshesNames
// 0x0040 (0x0040 - 0x0000)
struct BanditParentAI_C_InitRandomMeshesNames final
{
public:
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_3;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_InitRandomMeshesNames) == 0x000004, "Wrong alignment on BanditParentAI_C_InitRandomMeshesNames");
static_assert(sizeof(BanditParentAI_C_InitRandomMeshesNames) == 0x000040, "Wrong size on BanditParentAI_C_InitRandomMeshesNames");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_Array_LastIndex_ReturnValue) == 0x000000, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000004, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000008, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x00000C, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_Array_Get_Item) == 0x000010, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000020, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000024, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x000028, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_RandomIntegerInRange_ReturnValue_3) == 0x00002C, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_RandomIntegerInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_Array_Get_Item_2) == 0x000030, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_InitRandomMeshesNames, CallFunc_Array_Get_Item_3) == 0x000038, "Member 'BanditParentAI_C_InitRandomMeshesNames::CallFunc_Array_Get_Item_3' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.IsPlayingHitMontage?
// 0x0040 (0x0040 - 0x0000)
struct BanditParentAI_C_IsPlayingHitMontage_ final
{
public:
	bool                                          IsPlaying_;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_IsPlayingHitMontage_) == 0x000008, "Wrong alignment on BanditParentAI_C_IsPlayingHitMontage_");
static_assert(sizeof(BanditParentAI_C_IsPlayingHitMontage_) == 0x000040, "Wrong size on BanditParentAI_C_IsPlayingHitMontage_");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, IsPlaying_) == 0x000000, "Member 'BanditParentAI_C_IsPlayingHitMontage_::IsPlaying_' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BanditParentAI_C_IsPlayingHitMontage_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BanditParentAI_C_IsPlayingHitMontage_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BanditParentAI_C_IsPlayingHitMontage_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, Temp_bool_Variable) == 0x000010, "Member 'BanditParentAI_C_IsPlayingHitMontage_::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BanditParentAI_C_IsPlayingHitMontage_::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'BanditParentAI_C_IsPlayingHitMontage_::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, CallFunc_Array_Get_Item) == 0x000028, "Member 'BanditParentAI_C_IsPlayingHitMontage_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BanditParentAI_C_IsPlayingHitMontage_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000034, "Member 'BanditParentAI_C_IsPlayingHitMontage_::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BanditParentAI_C_IsPlayingHitMontage_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_IsPlayingHitMontage_, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BanditParentAI_C_IsPlayingHitMontage_::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.MeleeMontages
// 0x0010 (0x0010 - 0x0000)
struct BanditParentAI_C_MeleeMontages final
{
public:
	double                                        HitAngle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomInteger;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_MeleeMontages) == 0x000008, "Wrong alignment on BanditParentAI_C_MeleeMontages");
static_assert(sizeof(BanditParentAI_C_MeleeMontages) == 0x000010, "Wrong size on BanditParentAI_C_MeleeMontages");
static_assert(offsetof(BanditParentAI_C_MeleeMontages, HitAngle) == 0x000000, "Member 'BanditParentAI_C_MeleeMontages::HitAngle' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_MeleeMontages, RandomInteger) == 0x000008, "Member 'BanditParentAI_C_MeleeMontages::RandomInteger' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnBlendOut_02C308D94044E0C7094489B1C85EC366
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnBlendOut_02C308D94044E0C7094489B1C85EC366 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnBlendOut_02C308D94044E0C7094489B1C85EC366) == 0x000004, "Wrong alignment on BanditParentAI_C_OnBlendOut_02C308D94044E0C7094489B1C85EC366");
static_assert(sizeof(BanditParentAI_C_OnBlendOut_02C308D94044E0C7094489B1C85EC366) == 0x000008, "Wrong size on BanditParentAI_C_OnBlendOut_02C308D94044E0C7094489B1C85EC366");
static_assert(offsetof(BanditParentAI_C_OnBlendOut_02C308D94044E0C7094489B1C85EC366, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnBlendOut_02C308D94044E0C7094489B1C85EC366::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnBlendOut_38E7BEEC429D74F5870BEA87AD8EA75F
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnBlendOut_38E7BEEC429D74F5870BEA87AD8EA75F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnBlendOut_38E7BEEC429D74F5870BEA87AD8EA75F) == 0x000004, "Wrong alignment on BanditParentAI_C_OnBlendOut_38E7BEEC429D74F5870BEA87AD8EA75F");
static_assert(sizeof(BanditParentAI_C_OnBlendOut_38E7BEEC429D74F5870BEA87AD8EA75F) == 0x000008, "Wrong size on BanditParentAI_C_OnBlendOut_38E7BEEC429D74F5870BEA87AD8EA75F");
static_assert(offsetof(BanditParentAI_C_OnBlendOut_38E7BEEC429D74F5870BEA87AD8EA75F, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnBlendOut_38E7BEEC429D74F5870BEA87AD8EA75F::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnBlendOut_4F8291294381750E70EF2A9FF5FEDE5B
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnBlendOut_4F8291294381750E70EF2A9FF5FEDE5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnBlendOut_4F8291294381750E70EF2A9FF5FEDE5B) == 0x000004, "Wrong alignment on BanditParentAI_C_OnBlendOut_4F8291294381750E70EF2A9FF5FEDE5B");
static_assert(sizeof(BanditParentAI_C_OnBlendOut_4F8291294381750E70EF2A9FF5FEDE5B) == 0x000008, "Wrong size on BanditParentAI_C_OnBlendOut_4F8291294381750E70EF2A9FF5FEDE5B");
static_assert(offsetof(BanditParentAI_C_OnBlendOut_4F8291294381750E70EF2A9FF5FEDE5B, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnBlendOut_4F8291294381750E70EF2A9FF5FEDE5B::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnBlendOut_6E43BD8641E9B2DCDC0E469CF46165D2
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnBlendOut_6E43BD8641E9B2DCDC0E469CF46165D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnBlendOut_6E43BD8641E9B2DCDC0E469CF46165D2) == 0x000004, "Wrong alignment on BanditParentAI_C_OnBlendOut_6E43BD8641E9B2DCDC0E469CF46165D2");
static_assert(sizeof(BanditParentAI_C_OnBlendOut_6E43BD8641E9B2DCDC0E469CF46165D2) == 0x000008, "Wrong size on BanditParentAI_C_OnBlendOut_6E43BD8641E9B2DCDC0E469CF46165D2");
static_assert(offsetof(BanditParentAI_C_OnBlendOut_6E43BD8641E9B2DCDC0E469CF46165D2, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnBlendOut_6E43BD8641E9B2DCDC0E469CF46165D2::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnBlendOut_820209FA444B29B4A01F32A551AC66C9
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnBlendOut_820209FA444B29B4A01F32A551AC66C9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnBlendOut_820209FA444B29B4A01F32A551AC66C9) == 0x000004, "Wrong alignment on BanditParentAI_C_OnBlendOut_820209FA444B29B4A01F32A551AC66C9");
static_assert(sizeof(BanditParentAI_C_OnBlendOut_820209FA444B29B4A01F32A551AC66C9) == 0x000008, "Wrong size on BanditParentAI_C_OnBlendOut_820209FA444B29B4A01F32A551AC66C9");
static_assert(offsetof(BanditParentAI_C_OnBlendOut_820209FA444B29B4A01F32A551AC66C9, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnBlendOut_820209FA444B29B4A01F32A551AC66C9::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnBlendOut_8A0A66BC49A01F7BE2AE70BE8005A202
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnBlendOut_8A0A66BC49A01F7BE2AE70BE8005A202 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnBlendOut_8A0A66BC49A01F7BE2AE70BE8005A202) == 0x000004, "Wrong alignment on BanditParentAI_C_OnBlendOut_8A0A66BC49A01F7BE2AE70BE8005A202");
static_assert(sizeof(BanditParentAI_C_OnBlendOut_8A0A66BC49A01F7BE2AE70BE8005A202) == 0x000008, "Wrong size on BanditParentAI_C_OnBlendOut_8A0A66BC49A01F7BE2AE70BE8005A202");
static_assert(offsetof(BanditParentAI_C_OnBlendOut_8A0A66BC49A01F7BE2AE70BE8005A202, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnBlendOut_8A0A66BC49A01F7BE2AE70BE8005A202::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnBlendOut_A6FD48404CC974EBA95EC9B525B77C66
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnBlendOut_A6FD48404CC974EBA95EC9B525B77C66 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnBlendOut_A6FD48404CC974EBA95EC9B525B77C66) == 0x000004, "Wrong alignment on BanditParentAI_C_OnBlendOut_A6FD48404CC974EBA95EC9B525B77C66");
static_assert(sizeof(BanditParentAI_C_OnBlendOut_A6FD48404CC974EBA95EC9B525B77C66) == 0x000008, "Wrong size on BanditParentAI_C_OnBlendOut_A6FD48404CC974EBA95EC9B525B77C66");
static_assert(offsetof(BanditParentAI_C_OnBlendOut_A6FD48404CC974EBA95EC9B525B77C66, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnBlendOut_A6FD48404CC974EBA95EC9B525B77C66::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnBlendOut_AFE0936241AFFA0939F127B0F04F3D25
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnBlendOut_AFE0936241AFFA0939F127B0F04F3D25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnBlendOut_AFE0936241AFFA0939F127B0F04F3D25) == 0x000004, "Wrong alignment on BanditParentAI_C_OnBlendOut_AFE0936241AFFA0939F127B0F04F3D25");
static_assert(sizeof(BanditParentAI_C_OnBlendOut_AFE0936241AFFA0939F127B0F04F3D25) == 0x000008, "Wrong size on BanditParentAI_C_OnBlendOut_AFE0936241AFFA0939F127B0F04F3D25");
static_assert(offsetof(BanditParentAI_C_OnBlendOut_AFE0936241AFFA0939F127B0F04F3D25, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnBlendOut_AFE0936241AFFA0939F127B0F04F3D25::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnBlendOut_D720C85E46178DF2E7D374B61569783E
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnBlendOut_D720C85E46178DF2E7D374B61569783E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnBlendOut_D720C85E46178DF2E7D374B61569783E) == 0x000004, "Wrong alignment on BanditParentAI_C_OnBlendOut_D720C85E46178DF2E7D374B61569783E");
static_assert(sizeof(BanditParentAI_C_OnBlendOut_D720C85E46178DF2E7D374B61569783E) == 0x000008, "Wrong size on BanditParentAI_C_OnBlendOut_D720C85E46178DF2E7D374B61569783E");
static_assert(offsetof(BanditParentAI_C_OnBlendOut_D720C85E46178DF2E7D374B61569783E, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnBlendOut_D720C85E46178DF2E7D374B61569783E::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnBlendOut_E4169A504B86167E59F052BA833127B8
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnBlendOut_E4169A504B86167E59F052BA833127B8 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnBlendOut_E4169A504B86167E59F052BA833127B8) == 0x000004, "Wrong alignment on BanditParentAI_C_OnBlendOut_E4169A504B86167E59F052BA833127B8");
static_assert(sizeof(BanditParentAI_C_OnBlendOut_E4169A504B86167E59F052BA833127B8) == 0x000008, "Wrong size on BanditParentAI_C_OnBlendOut_E4169A504B86167E59F052BA833127B8");
static_assert(offsetof(BanditParentAI_C_OnBlendOut_E4169A504B86167E59F052BA833127B8, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnBlendOut_E4169A504B86167E59F052BA833127B8::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnCompleted_02C308D94044E0C7094489B1C85EC366
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnCompleted_02C308D94044E0C7094489B1C85EC366 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnCompleted_02C308D94044E0C7094489B1C85EC366) == 0x000004, "Wrong alignment on BanditParentAI_C_OnCompleted_02C308D94044E0C7094489B1C85EC366");
static_assert(sizeof(BanditParentAI_C_OnCompleted_02C308D94044E0C7094489B1C85EC366) == 0x000008, "Wrong size on BanditParentAI_C_OnCompleted_02C308D94044E0C7094489B1C85EC366");
static_assert(offsetof(BanditParentAI_C_OnCompleted_02C308D94044E0C7094489B1C85EC366, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnCompleted_02C308D94044E0C7094489B1C85EC366::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnCompleted_38E7BEEC429D74F5870BEA87AD8EA75F
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnCompleted_38E7BEEC429D74F5870BEA87AD8EA75F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnCompleted_38E7BEEC429D74F5870BEA87AD8EA75F) == 0x000004, "Wrong alignment on BanditParentAI_C_OnCompleted_38E7BEEC429D74F5870BEA87AD8EA75F");
static_assert(sizeof(BanditParentAI_C_OnCompleted_38E7BEEC429D74F5870BEA87AD8EA75F) == 0x000008, "Wrong size on BanditParentAI_C_OnCompleted_38E7BEEC429D74F5870BEA87AD8EA75F");
static_assert(offsetof(BanditParentAI_C_OnCompleted_38E7BEEC429D74F5870BEA87AD8EA75F, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnCompleted_38E7BEEC429D74F5870BEA87AD8EA75F::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnCompleted_4F8291294381750E70EF2A9FF5FEDE5B
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnCompleted_4F8291294381750E70EF2A9FF5FEDE5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnCompleted_4F8291294381750E70EF2A9FF5FEDE5B) == 0x000004, "Wrong alignment on BanditParentAI_C_OnCompleted_4F8291294381750E70EF2A9FF5FEDE5B");
static_assert(sizeof(BanditParentAI_C_OnCompleted_4F8291294381750E70EF2A9FF5FEDE5B) == 0x000008, "Wrong size on BanditParentAI_C_OnCompleted_4F8291294381750E70EF2A9FF5FEDE5B");
static_assert(offsetof(BanditParentAI_C_OnCompleted_4F8291294381750E70EF2A9FF5FEDE5B, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnCompleted_4F8291294381750E70EF2A9FF5FEDE5B::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnCompleted_6E43BD8641E9B2DCDC0E469CF46165D2
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnCompleted_6E43BD8641E9B2DCDC0E469CF46165D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnCompleted_6E43BD8641E9B2DCDC0E469CF46165D2) == 0x000004, "Wrong alignment on BanditParentAI_C_OnCompleted_6E43BD8641E9B2DCDC0E469CF46165D2");
static_assert(sizeof(BanditParentAI_C_OnCompleted_6E43BD8641E9B2DCDC0E469CF46165D2) == 0x000008, "Wrong size on BanditParentAI_C_OnCompleted_6E43BD8641E9B2DCDC0E469CF46165D2");
static_assert(offsetof(BanditParentAI_C_OnCompleted_6E43BD8641E9B2DCDC0E469CF46165D2, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnCompleted_6E43BD8641E9B2DCDC0E469CF46165D2::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnCompleted_820209FA444B29B4A01F32A551AC66C9
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnCompleted_820209FA444B29B4A01F32A551AC66C9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnCompleted_820209FA444B29B4A01F32A551AC66C9) == 0x000004, "Wrong alignment on BanditParentAI_C_OnCompleted_820209FA444B29B4A01F32A551AC66C9");
static_assert(sizeof(BanditParentAI_C_OnCompleted_820209FA444B29B4A01F32A551AC66C9) == 0x000008, "Wrong size on BanditParentAI_C_OnCompleted_820209FA444B29B4A01F32A551AC66C9");
static_assert(offsetof(BanditParentAI_C_OnCompleted_820209FA444B29B4A01F32A551AC66C9, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnCompleted_820209FA444B29B4A01F32A551AC66C9::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnCompleted_8A0A66BC49A01F7BE2AE70BE8005A202
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnCompleted_8A0A66BC49A01F7BE2AE70BE8005A202 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnCompleted_8A0A66BC49A01F7BE2AE70BE8005A202) == 0x000004, "Wrong alignment on BanditParentAI_C_OnCompleted_8A0A66BC49A01F7BE2AE70BE8005A202");
static_assert(sizeof(BanditParentAI_C_OnCompleted_8A0A66BC49A01F7BE2AE70BE8005A202) == 0x000008, "Wrong size on BanditParentAI_C_OnCompleted_8A0A66BC49A01F7BE2AE70BE8005A202");
static_assert(offsetof(BanditParentAI_C_OnCompleted_8A0A66BC49A01F7BE2AE70BE8005A202, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnCompleted_8A0A66BC49A01F7BE2AE70BE8005A202::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnCompleted_A6FD48404CC974EBA95EC9B525B77C66
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnCompleted_A6FD48404CC974EBA95EC9B525B77C66 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnCompleted_A6FD48404CC974EBA95EC9B525B77C66) == 0x000004, "Wrong alignment on BanditParentAI_C_OnCompleted_A6FD48404CC974EBA95EC9B525B77C66");
static_assert(sizeof(BanditParentAI_C_OnCompleted_A6FD48404CC974EBA95EC9B525B77C66) == 0x000008, "Wrong size on BanditParentAI_C_OnCompleted_A6FD48404CC974EBA95EC9B525B77C66");
static_assert(offsetof(BanditParentAI_C_OnCompleted_A6FD48404CC974EBA95EC9B525B77C66, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnCompleted_A6FD48404CC974EBA95EC9B525B77C66::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnCompleted_AFE0936241AFFA0939F127B0F04F3D25
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnCompleted_AFE0936241AFFA0939F127B0F04F3D25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnCompleted_AFE0936241AFFA0939F127B0F04F3D25) == 0x000004, "Wrong alignment on BanditParentAI_C_OnCompleted_AFE0936241AFFA0939F127B0F04F3D25");
static_assert(sizeof(BanditParentAI_C_OnCompleted_AFE0936241AFFA0939F127B0F04F3D25) == 0x000008, "Wrong size on BanditParentAI_C_OnCompleted_AFE0936241AFFA0939F127B0F04F3D25");
static_assert(offsetof(BanditParentAI_C_OnCompleted_AFE0936241AFFA0939F127B0F04F3D25, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnCompleted_AFE0936241AFFA0939F127B0F04F3D25::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnCompleted_D720C85E46178DF2E7D374B61569783E
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnCompleted_D720C85E46178DF2E7D374B61569783E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnCompleted_D720C85E46178DF2E7D374B61569783E) == 0x000004, "Wrong alignment on BanditParentAI_C_OnCompleted_D720C85E46178DF2E7D374B61569783E");
static_assert(sizeof(BanditParentAI_C_OnCompleted_D720C85E46178DF2E7D374B61569783E) == 0x000008, "Wrong size on BanditParentAI_C_OnCompleted_D720C85E46178DF2E7D374B61569783E");
static_assert(offsetof(BanditParentAI_C_OnCompleted_D720C85E46178DF2E7D374B61569783E, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnCompleted_D720C85E46178DF2E7D374B61569783E::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnCompleted_E4169A504B86167E59F052BA833127B8
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnCompleted_E4169A504B86167E59F052BA833127B8 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnCompleted_E4169A504B86167E59F052BA833127B8) == 0x000004, "Wrong alignment on BanditParentAI_C_OnCompleted_E4169A504B86167E59F052BA833127B8");
static_assert(sizeof(BanditParentAI_C_OnCompleted_E4169A504B86167E59F052BA833127B8) == 0x000008, "Wrong size on BanditParentAI_C_OnCompleted_E4169A504B86167E59F052BA833127B8");
static_assert(offsetof(BanditParentAI_C_OnCompleted_E4169A504B86167E59F052BA833127B8, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnCompleted_E4169A504B86167E59F052BA833127B8::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnInterrupted_02C308D94044E0C7094489B1C85EC366
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnInterrupted_02C308D94044E0C7094489B1C85EC366 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnInterrupted_02C308D94044E0C7094489B1C85EC366) == 0x000004, "Wrong alignment on BanditParentAI_C_OnInterrupted_02C308D94044E0C7094489B1C85EC366");
static_assert(sizeof(BanditParentAI_C_OnInterrupted_02C308D94044E0C7094489B1C85EC366) == 0x000008, "Wrong size on BanditParentAI_C_OnInterrupted_02C308D94044E0C7094489B1C85EC366");
static_assert(offsetof(BanditParentAI_C_OnInterrupted_02C308D94044E0C7094489B1C85EC366, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnInterrupted_02C308D94044E0C7094489B1C85EC366::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnInterrupted_38E7BEEC429D74F5870BEA87AD8EA75F
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnInterrupted_38E7BEEC429D74F5870BEA87AD8EA75F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnInterrupted_38E7BEEC429D74F5870BEA87AD8EA75F) == 0x000004, "Wrong alignment on BanditParentAI_C_OnInterrupted_38E7BEEC429D74F5870BEA87AD8EA75F");
static_assert(sizeof(BanditParentAI_C_OnInterrupted_38E7BEEC429D74F5870BEA87AD8EA75F) == 0x000008, "Wrong size on BanditParentAI_C_OnInterrupted_38E7BEEC429D74F5870BEA87AD8EA75F");
static_assert(offsetof(BanditParentAI_C_OnInterrupted_38E7BEEC429D74F5870BEA87AD8EA75F, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnInterrupted_38E7BEEC429D74F5870BEA87AD8EA75F::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnInterrupted_4F8291294381750E70EF2A9FF5FEDE5B
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnInterrupted_4F8291294381750E70EF2A9FF5FEDE5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnInterrupted_4F8291294381750E70EF2A9FF5FEDE5B) == 0x000004, "Wrong alignment on BanditParentAI_C_OnInterrupted_4F8291294381750E70EF2A9FF5FEDE5B");
static_assert(sizeof(BanditParentAI_C_OnInterrupted_4F8291294381750E70EF2A9FF5FEDE5B) == 0x000008, "Wrong size on BanditParentAI_C_OnInterrupted_4F8291294381750E70EF2A9FF5FEDE5B");
static_assert(offsetof(BanditParentAI_C_OnInterrupted_4F8291294381750E70EF2A9FF5FEDE5B, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnInterrupted_4F8291294381750E70EF2A9FF5FEDE5B::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnInterrupted_6E43BD8641E9B2DCDC0E469CF46165D2
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnInterrupted_6E43BD8641E9B2DCDC0E469CF46165D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnInterrupted_6E43BD8641E9B2DCDC0E469CF46165D2) == 0x000004, "Wrong alignment on BanditParentAI_C_OnInterrupted_6E43BD8641E9B2DCDC0E469CF46165D2");
static_assert(sizeof(BanditParentAI_C_OnInterrupted_6E43BD8641E9B2DCDC0E469CF46165D2) == 0x000008, "Wrong size on BanditParentAI_C_OnInterrupted_6E43BD8641E9B2DCDC0E469CF46165D2");
static_assert(offsetof(BanditParentAI_C_OnInterrupted_6E43BD8641E9B2DCDC0E469CF46165D2, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnInterrupted_6E43BD8641E9B2DCDC0E469CF46165D2::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnInterrupted_820209FA444B29B4A01F32A551AC66C9
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnInterrupted_820209FA444B29B4A01F32A551AC66C9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnInterrupted_820209FA444B29B4A01F32A551AC66C9) == 0x000004, "Wrong alignment on BanditParentAI_C_OnInterrupted_820209FA444B29B4A01F32A551AC66C9");
static_assert(sizeof(BanditParentAI_C_OnInterrupted_820209FA444B29B4A01F32A551AC66C9) == 0x000008, "Wrong size on BanditParentAI_C_OnInterrupted_820209FA444B29B4A01F32A551AC66C9");
static_assert(offsetof(BanditParentAI_C_OnInterrupted_820209FA444B29B4A01F32A551AC66C9, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnInterrupted_820209FA444B29B4A01F32A551AC66C9::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnInterrupted_8A0A66BC49A01F7BE2AE70BE8005A202
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnInterrupted_8A0A66BC49A01F7BE2AE70BE8005A202 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnInterrupted_8A0A66BC49A01F7BE2AE70BE8005A202) == 0x000004, "Wrong alignment on BanditParentAI_C_OnInterrupted_8A0A66BC49A01F7BE2AE70BE8005A202");
static_assert(sizeof(BanditParentAI_C_OnInterrupted_8A0A66BC49A01F7BE2AE70BE8005A202) == 0x000008, "Wrong size on BanditParentAI_C_OnInterrupted_8A0A66BC49A01F7BE2AE70BE8005A202");
static_assert(offsetof(BanditParentAI_C_OnInterrupted_8A0A66BC49A01F7BE2AE70BE8005A202, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnInterrupted_8A0A66BC49A01F7BE2AE70BE8005A202::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnInterrupted_A6FD48404CC974EBA95EC9B525B77C66
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnInterrupted_A6FD48404CC974EBA95EC9B525B77C66 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnInterrupted_A6FD48404CC974EBA95EC9B525B77C66) == 0x000004, "Wrong alignment on BanditParentAI_C_OnInterrupted_A6FD48404CC974EBA95EC9B525B77C66");
static_assert(sizeof(BanditParentAI_C_OnInterrupted_A6FD48404CC974EBA95EC9B525B77C66) == 0x000008, "Wrong size on BanditParentAI_C_OnInterrupted_A6FD48404CC974EBA95EC9B525B77C66");
static_assert(offsetof(BanditParentAI_C_OnInterrupted_A6FD48404CC974EBA95EC9B525B77C66, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnInterrupted_A6FD48404CC974EBA95EC9B525B77C66::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnInterrupted_AFE0936241AFFA0939F127B0F04F3D25
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnInterrupted_AFE0936241AFFA0939F127B0F04F3D25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnInterrupted_AFE0936241AFFA0939F127B0F04F3D25) == 0x000004, "Wrong alignment on BanditParentAI_C_OnInterrupted_AFE0936241AFFA0939F127B0F04F3D25");
static_assert(sizeof(BanditParentAI_C_OnInterrupted_AFE0936241AFFA0939F127B0F04F3D25) == 0x000008, "Wrong size on BanditParentAI_C_OnInterrupted_AFE0936241AFFA0939F127B0F04F3D25");
static_assert(offsetof(BanditParentAI_C_OnInterrupted_AFE0936241AFFA0939F127B0F04F3D25, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnInterrupted_AFE0936241AFFA0939F127B0F04F3D25::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnInterrupted_D720C85E46178DF2E7D374B61569783E
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnInterrupted_D720C85E46178DF2E7D374B61569783E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnInterrupted_D720C85E46178DF2E7D374B61569783E) == 0x000004, "Wrong alignment on BanditParentAI_C_OnInterrupted_D720C85E46178DF2E7D374B61569783E");
static_assert(sizeof(BanditParentAI_C_OnInterrupted_D720C85E46178DF2E7D374B61569783E) == 0x000008, "Wrong size on BanditParentAI_C_OnInterrupted_D720C85E46178DF2E7D374B61569783E");
static_assert(offsetof(BanditParentAI_C_OnInterrupted_D720C85E46178DF2E7D374B61569783E, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnInterrupted_D720C85E46178DF2E7D374B61569783E::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnInterrupted_E4169A504B86167E59F052BA833127B8
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnInterrupted_E4169A504B86167E59F052BA833127B8 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnInterrupted_E4169A504B86167E59F052BA833127B8) == 0x000004, "Wrong alignment on BanditParentAI_C_OnInterrupted_E4169A504B86167E59F052BA833127B8");
static_assert(sizeof(BanditParentAI_C_OnInterrupted_E4169A504B86167E59F052BA833127B8) == 0x000008, "Wrong size on BanditParentAI_C_OnInterrupted_E4169A504B86167E59F052BA833127B8");
static_assert(offsetof(BanditParentAI_C_OnInterrupted_E4169A504B86167E59F052BA833127B8, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnInterrupted_E4169A504B86167E59F052BA833127B8::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyBegin_02C308D94044E0C7094489B1C85EC366
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyBegin_02C308D94044E0C7094489B1C85EC366 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyBegin_02C308D94044E0C7094489B1C85EC366) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyBegin_02C308D94044E0C7094489B1C85EC366");
static_assert(sizeof(BanditParentAI_C_OnNotifyBegin_02C308D94044E0C7094489B1C85EC366) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyBegin_02C308D94044E0C7094489B1C85EC366");
static_assert(offsetof(BanditParentAI_C_OnNotifyBegin_02C308D94044E0C7094489B1C85EC366, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyBegin_02C308D94044E0C7094489B1C85EC366::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyBegin_38E7BEEC429D74F5870BEA87AD8EA75F
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyBegin_38E7BEEC429D74F5870BEA87AD8EA75F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyBegin_38E7BEEC429D74F5870BEA87AD8EA75F) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyBegin_38E7BEEC429D74F5870BEA87AD8EA75F");
static_assert(sizeof(BanditParentAI_C_OnNotifyBegin_38E7BEEC429D74F5870BEA87AD8EA75F) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyBegin_38E7BEEC429D74F5870BEA87AD8EA75F");
static_assert(offsetof(BanditParentAI_C_OnNotifyBegin_38E7BEEC429D74F5870BEA87AD8EA75F, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyBegin_38E7BEEC429D74F5870BEA87AD8EA75F::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyBegin_4F8291294381750E70EF2A9FF5FEDE5B
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyBegin_4F8291294381750E70EF2A9FF5FEDE5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyBegin_4F8291294381750E70EF2A9FF5FEDE5B) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyBegin_4F8291294381750E70EF2A9FF5FEDE5B");
static_assert(sizeof(BanditParentAI_C_OnNotifyBegin_4F8291294381750E70EF2A9FF5FEDE5B) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyBegin_4F8291294381750E70EF2A9FF5FEDE5B");
static_assert(offsetof(BanditParentAI_C_OnNotifyBegin_4F8291294381750E70EF2A9FF5FEDE5B, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyBegin_4F8291294381750E70EF2A9FF5FEDE5B::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyBegin_6E43BD8641E9B2DCDC0E469CF46165D2
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyBegin_6E43BD8641E9B2DCDC0E469CF46165D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyBegin_6E43BD8641E9B2DCDC0E469CF46165D2) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyBegin_6E43BD8641E9B2DCDC0E469CF46165D2");
static_assert(sizeof(BanditParentAI_C_OnNotifyBegin_6E43BD8641E9B2DCDC0E469CF46165D2) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyBegin_6E43BD8641E9B2DCDC0E469CF46165D2");
static_assert(offsetof(BanditParentAI_C_OnNotifyBegin_6E43BD8641E9B2DCDC0E469CF46165D2, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyBegin_6E43BD8641E9B2DCDC0E469CF46165D2::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyBegin_820209FA444B29B4A01F32A551AC66C9
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyBegin_820209FA444B29B4A01F32A551AC66C9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyBegin_820209FA444B29B4A01F32A551AC66C9) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyBegin_820209FA444B29B4A01F32A551AC66C9");
static_assert(sizeof(BanditParentAI_C_OnNotifyBegin_820209FA444B29B4A01F32A551AC66C9) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyBegin_820209FA444B29B4A01F32A551AC66C9");
static_assert(offsetof(BanditParentAI_C_OnNotifyBegin_820209FA444B29B4A01F32A551AC66C9, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyBegin_820209FA444B29B4A01F32A551AC66C9::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyBegin_8A0A66BC49A01F7BE2AE70BE8005A202
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyBegin_8A0A66BC49A01F7BE2AE70BE8005A202 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyBegin_8A0A66BC49A01F7BE2AE70BE8005A202) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyBegin_8A0A66BC49A01F7BE2AE70BE8005A202");
static_assert(sizeof(BanditParentAI_C_OnNotifyBegin_8A0A66BC49A01F7BE2AE70BE8005A202) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyBegin_8A0A66BC49A01F7BE2AE70BE8005A202");
static_assert(offsetof(BanditParentAI_C_OnNotifyBegin_8A0A66BC49A01F7BE2AE70BE8005A202, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyBegin_8A0A66BC49A01F7BE2AE70BE8005A202::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyBegin_A6FD48404CC974EBA95EC9B525B77C66
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyBegin_A6FD48404CC974EBA95EC9B525B77C66 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyBegin_A6FD48404CC974EBA95EC9B525B77C66) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyBegin_A6FD48404CC974EBA95EC9B525B77C66");
static_assert(sizeof(BanditParentAI_C_OnNotifyBegin_A6FD48404CC974EBA95EC9B525B77C66) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyBegin_A6FD48404CC974EBA95EC9B525B77C66");
static_assert(offsetof(BanditParentAI_C_OnNotifyBegin_A6FD48404CC974EBA95EC9B525B77C66, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyBegin_A6FD48404CC974EBA95EC9B525B77C66::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyBegin_AFE0936241AFFA0939F127B0F04F3D25
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyBegin_AFE0936241AFFA0939F127B0F04F3D25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyBegin_AFE0936241AFFA0939F127B0F04F3D25) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyBegin_AFE0936241AFFA0939F127B0F04F3D25");
static_assert(sizeof(BanditParentAI_C_OnNotifyBegin_AFE0936241AFFA0939F127B0F04F3D25) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyBegin_AFE0936241AFFA0939F127B0F04F3D25");
static_assert(offsetof(BanditParentAI_C_OnNotifyBegin_AFE0936241AFFA0939F127B0F04F3D25, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyBegin_AFE0936241AFFA0939F127B0F04F3D25::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyBegin_D720C85E46178DF2E7D374B61569783E
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyBegin_D720C85E46178DF2E7D374B61569783E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyBegin_D720C85E46178DF2E7D374B61569783E) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyBegin_D720C85E46178DF2E7D374B61569783E");
static_assert(sizeof(BanditParentAI_C_OnNotifyBegin_D720C85E46178DF2E7D374B61569783E) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyBegin_D720C85E46178DF2E7D374B61569783E");
static_assert(offsetof(BanditParentAI_C_OnNotifyBegin_D720C85E46178DF2E7D374B61569783E, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyBegin_D720C85E46178DF2E7D374B61569783E::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyBegin_E4169A504B86167E59F052BA833127B8
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyBegin_E4169A504B86167E59F052BA833127B8 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyBegin_E4169A504B86167E59F052BA833127B8) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyBegin_E4169A504B86167E59F052BA833127B8");
static_assert(sizeof(BanditParentAI_C_OnNotifyBegin_E4169A504B86167E59F052BA833127B8) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyBegin_E4169A504B86167E59F052BA833127B8");
static_assert(offsetof(BanditParentAI_C_OnNotifyBegin_E4169A504B86167E59F052BA833127B8, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyBegin_E4169A504B86167E59F052BA833127B8::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyEnd_02C308D94044E0C7094489B1C85EC366
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyEnd_02C308D94044E0C7094489B1C85EC366 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyEnd_02C308D94044E0C7094489B1C85EC366) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyEnd_02C308D94044E0C7094489B1C85EC366");
static_assert(sizeof(BanditParentAI_C_OnNotifyEnd_02C308D94044E0C7094489B1C85EC366) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyEnd_02C308D94044E0C7094489B1C85EC366");
static_assert(offsetof(BanditParentAI_C_OnNotifyEnd_02C308D94044E0C7094489B1C85EC366, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyEnd_02C308D94044E0C7094489B1C85EC366::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyEnd_38E7BEEC429D74F5870BEA87AD8EA75F
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyEnd_38E7BEEC429D74F5870BEA87AD8EA75F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyEnd_38E7BEEC429D74F5870BEA87AD8EA75F) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyEnd_38E7BEEC429D74F5870BEA87AD8EA75F");
static_assert(sizeof(BanditParentAI_C_OnNotifyEnd_38E7BEEC429D74F5870BEA87AD8EA75F) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyEnd_38E7BEEC429D74F5870BEA87AD8EA75F");
static_assert(offsetof(BanditParentAI_C_OnNotifyEnd_38E7BEEC429D74F5870BEA87AD8EA75F, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyEnd_38E7BEEC429D74F5870BEA87AD8EA75F::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyEnd_4F8291294381750E70EF2A9FF5FEDE5B
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyEnd_4F8291294381750E70EF2A9FF5FEDE5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyEnd_4F8291294381750E70EF2A9FF5FEDE5B) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyEnd_4F8291294381750E70EF2A9FF5FEDE5B");
static_assert(sizeof(BanditParentAI_C_OnNotifyEnd_4F8291294381750E70EF2A9FF5FEDE5B) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyEnd_4F8291294381750E70EF2A9FF5FEDE5B");
static_assert(offsetof(BanditParentAI_C_OnNotifyEnd_4F8291294381750E70EF2A9FF5FEDE5B, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyEnd_4F8291294381750E70EF2A9FF5FEDE5B::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyEnd_6E43BD8641E9B2DCDC0E469CF46165D2
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyEnd_6E43BD8641E9B2DCDC0E469CF46165D2 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyEnd_6E43BD8641E9B2DCDC0E469CF46165D2) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyEnd_6E43BD8641E9B2DCDC0E469CF46165D2");
static_assert(sizeof(BanditParentAI_C_OnNotifyEnd_6E43BD8641E9B2DCDC0E469CF46165D2) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyEnd_6E43BD8641E9B2DCDC0E469CF46165D2");
static_assert(offsetof(BanditParentAI_C_OnNotifyEnd_6E43BD8641E9B2DCDC0E469CF46165D2, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyEnd_6E43BD8641E9B2DCDC0E469CF46165D2::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyEnd_820209FA444B29B4A01F32A551AC66C9
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyEnd_820209FA444B29B4A01F32A551AC66C9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyEnd_820209FA444B29B4A01F32A551AC66C9) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyEnd_820209FA444B29B4A01F32A551AC66C9");
static_assert(sizeof(BanditParentAI_C_OnNotifyEnd_820209FA444B29B4A01F32A551AC66C9) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyEnd_820209FA444B29B4A01F32A551AC66C9");
static_assert(offsetof(BanditParentAI_C_OnNotifyEnd_820209FA444B29B4A01F32A551AC66C9, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyEnd_820209FA444B29B4A01F32A551AC66C9::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyEnd_8A0A66BC49A01F7BE2AE70BE8005A202
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyEnd_8A0A66BC49A01F7BE2AE70BE8005A202 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyEnd_8A0A66BC49A01F7BE2AE70BE8005A202) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyEnd_8A0A66BC49A01F7BE2AE70BE8005A202");
static_assert(sizeof(BanditParentAI_C_OnNotifyEnd_8A0A66BC49A01F7BE2AE70BE8005A202) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyEnd_8A0A66BC49A01F7BE2AE70BE8005A202");
static_assert(offsetof(BanditParentAI_C_OnNotifyEnd_8A0A66BC49A01F7BE2AE70BE8005A202, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyEnd_8A0A66BC49A01F7BE2AE70BE8005A202::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyEnd_A6FD48404CC974EBA95EC9B525B77C66
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyEnd_A6FD48404CC974EBA95EC9B525B77C66 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyEnd_A6FD48404CC974EBA95EC9B525B77C66) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyEnd_A6FD48404CC974EBA95EC9B525B77C66");
static_assert(sizeof(BanditParentAI_C_OnNotifyEnd_A6FD48404CC974EBA95EC9B525B77C66) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyEnd_A6FD48404CC974EBA95EC9B525B77C66");
static_assert(offsetof(BanditParentAI_C_OnNotifyEnd_A6FD48404CC974EBA95EC9B525B77C66, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyEnd_A6FD48404CC974EBA95EC9B525B77C66::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyEnd_AFE0936241AFFA0939F127B0F04F3D25
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyEnd_AFE0936241AFFA0939F127B0F04F3D25 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyEnd_AFE0936241AFFA0939F127B0F04F3D25) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyEnd_AFE0936241AFFA0939F127B0F04F3D25");
static_assert(sizeof(BanditParentAI_C_OnNotifyEnd_AFE0936241AFFA0939F127B0F04F3D25) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyEnd_AFE0936241AFFA0939F127B0F04F3D25");
static_assert(offsetof(BanditParentAI_C_OnNotifyEnd_AFE0936241AFFA0939F127B0F04F3D25, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyEnd_AFE0936241AFFA0939F127B0F04F3D25::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyEnd_D720C85E46178DF2E7D374B61569783E
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyEnd_D720C85E46178DF2E7D374B61569783E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyEnd_D720C85E46178DF2E7D374B61569783E) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyEnd_D720C85E46178DF2E7D374B61569783E");
static_assert(sizeof(BanditParentAI_C_OnNotifyEnd_D720C85E46178DF2E7D374B61569783E) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyEnd_D720C85E46178DF2E7D374B61569783E");
static_assert(offsetof(BanditParentAI_C_OnNotifyEnd_D720C85E46178DF2E7D374B61569783E, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyEnd_D720C85E46178DF2E7D374B61569783E::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnNotifyEnd_E4169A504B86167E59F052BA833127B8
// 0x0008 (0x0008 - 0x0000)
struct BanditParentAI_C_OnNotifyEnd_E4169A504B86167E59F052BA833127B8 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnNotifyEnd_E4169A504B86167E59F052BA833127B8) == 0x000004, "Wrong alignment on BanditParentAI_C_OnNotifyEnd_E4169A504B86167E59F052BA833127B8");
static_assert(sizeof(BanditParentAI_C_OnNotifyEnd_E4169A504B86167E59F052BA833127B8) == 0x000008, "Wrong size on BanditParentAI_C_OnNotifyEnd_E4169A504B86167E59F052BA833127B8");
static_assert(offsetof(BanditParentAI_C_OnNotifyEnd_E4169A504B86167E59F052BA833127B8, NotifyName) == 0x000000, "Member 'BanditParentAI_C_OnNotifyEnd_E4169A504B86167E59F052BA833127B8::NotifyName' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnRep_BackpackMesh_RN
// 0x0018 (0x0018 - 0x0000)
struct BanditParentAI_C_OnRep_BackpackMesh_RN final
{
public:
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnRep_BackpackMesh_RN) == 0x000008, "Wrong alignment on BanditParentAI_C_OnRep_BackpackMesh_RN");
static_assert(sizeof(BanditParentAI_C_OnRep_BackpackMesh_RN) == 0x000018, "Wrong size on BanditParentAI_C_OnRep_BackpackMesh_RN");
static_assert(offsetof(BanditParentAI_C_OnRep_BackpackMesh_RN, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000000, "Member 'BanditParentAI_C_OnRep_BackpackMesh_RN::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_OnRep_BackpackMesh_RN, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000008, "Member 'BanditParentAI_C_OnRep_BackpackMesh_RN::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_OnRep_BackpackMesh_RN, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BanditParentAI_C_OnRep_BackpackMesh_RN::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnRep_BodyMesh_RN
// 0x0018 (0x0018 - 0x0000)
struct BanditParentAI_C_OnRep_BodyMesh_RN final
{
public:
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnRep_BodyMesh_RN) == 0x000008, "Wrong alignment on BanditParentAI_C_OnRep_BodyMesh_RN");
static_assert(sizeof(BanditParentAI_C_OnRep_BodyMesh_RN) == 0x000018, "Wrong size on BanditParentAI_C_OnRep_BodyMesh_RN");
static_assert(offsetof(BanditParentAI_C_OnRep_BodyMesh_RN, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000000, "Member 'BanditParentAI_C_OnRep_BodyMesh_RN::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_OnRep_BodyMesh_RN, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000008, "Member 'BanditParentAI_C_OnRep_BodyMesh_RN::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_OnRep_BodyMesh_RN, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BanditParentAI_C_OnRep_BodyMesh_RN::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnRep_HairMesh_RN
// 0x0018 (0x0018 - 0x0000)
struct BanditParentAI_C_OnRep_HairMesh_RN final
{
public:
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnRep_HairMesh_RN) == 0x000008, "Wrong alignment on BanditParentAI_C_OnRep_HairMesh_RN");
static_assert(sizeof(BanditParentAI_C_OnRep_HairMesh_RN) == 0x000018, "Wrong size on BanditParentAI_C_OnRep_HairMesh_RN");
static_assert(offsetof(BanditParentAI_C_OnRep_HairMesh_RN, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000000, "Member 'BanditParentAI_C_OnRep_HairMesh_RN::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_OnRep_HairMesh_RN, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000008, "Member 'BanditParentAI_C_OnRep_HairMesh_RN::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_OnRep_HairMesh_RN, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BanditParentAI_C_OnRep_HairMesh_RN::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.OnRep_PantsMesh_RN
// 0x0018 (0x0018 - 0x0000)
struct BanditParentAI_C_OnRep_PantsMesh_RN final
{
public:
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_OnRep_PantsMesh_RN) == 0x000008, "Wrong alignment on BanditParentAI_C_OnRep_PantsMesh_RN");
static_assert(sizeof(BanditParentAI_C_OnRep_PantsMesh_RN) == 0x000018, "Wrong size on BanditParentAI_C_OnRep_PantsMesh_RN");
static_assert(offsetof(BanditParentAI_C_OnRep_PantsMesh_RN, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000000, "Member 'BanditParentAI_C_OnRep_PantsMesh_RN::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_OnRep_PantsMesh_RN, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000008, "Member 'BanditParentAI_C_OnRep_PantsMesh_RN::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_OnRep_PantsMesh_RN, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BanditParentAI_C_OnRep_PantsMesh_RN::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.ReceiveRadialDamage
// 0x0120 (0x0120 - 0x0000)
struct BanditParentAI_C_ReceiveRadialDamage final
{
public:
	float                                         DamageReceived;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0028(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0118(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_ReceiveRadialDamage) == 0x000008, "Wrong alignment on BanditParentAI_C_ReceiveRadialDamage");
static_assert(sizeof(BanditParentAI_C_ReceiveRadialDamage) == 0x000120, "Wrong size on BanditParentAI_C_ReceiveRadialDamage");
static_assert(offsetof(BanditParentAI_C_ReceiveRadialDamage, DamageReceived) == 0x000000, "Member 'BanditParentAI_C_ReceiveRadialDamage::DamageReceived' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ReceiveRadialDamage, DamageType) == 0x000008, "Member 'BanditParentAI_C_ReceiveRadialDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ReceiveRadialDamage, Origin) == 0x000010, "Member 'BanditParentAI_C_ReceiveRadialDamage::Origin' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ReceiveRadialDamage, HitInfo) == 0x000028, "Member 'BanditParentAI_C_ReceiveRadialDamage::HitInfo' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ReceiveRadialDamage, InstigatedBy) == 0x000110, "Member 'BanditParentAI_C_ReceiveRadialDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_ReceiveRadialDamage, DamageCauser) == 0x000118, "Member 'BanditParentAI_C_ReceiveRadialDamage::DamageCauser' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.SetMesh
// 0x0620 (0x0620 - 0x0000)
struct BanditParentAI_C_SetMesh final
{
public:
	struct FEquipmentData                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0180)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipmentData                         CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0188(0x0180)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipmentData                         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0310(0x0180)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEquipmentData                         CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0498(0x0180)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_SetMesh) == 0x000008, "Wrong alignment on BanditParentAI_C_SetMesh");
static_assert(sizeof(BanditParentAI_C_SetMesh) == 0x000620, "Wrong size on BanditParentAI_C_SetMesh");
static_assert(offsetof(BanditParentAI_C_SetMesh, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BanditParentAI_C_SetMesh::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_SetMesh, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000180, "Member 'BanditParentAI_C_SetMesh::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_SetMesh, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000188, "Member 'BanditParentAI_C_SetMesh::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_SetMesh, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000308, "Member 'BanditParentAI_C_SetMesh::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_SetMesh, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000310, "Member 'BanditParentAI_C_SetMesh::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_SetMesh, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000490, "Member 'BanditParentAI_C_SetMesh::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_SetMesh, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000498, "Member 'BanditParentAI_C_SetMesh::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_SetMesh, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000618, "Member 'BanditParentAI_C_SetMesh::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.TakeClothOff
// 0x01B8 (0x01B8 - 0x0000)
struct BanditParentAI_C_TakeClothOff final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentData                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0180)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue_1; // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue_2; // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue_3; // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_TakeClothOff) == 0x000008, "Wrong alignment on BanditParentAI_C_TakeClothOff");
static_assert(sizeof(BanditParentAI_C_TakeClothOff) == 0x0001B8, "Wrong size on BanditParentAI_C_TakeClothOff");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, Param_Name) == 0x000000, "Member 'BanditParentAI_C_TakeClothOff::Param_Name' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BanditParentAI_C_TakeClothOff::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000188, "Member 'BanditParentAI_C_TakeClothOff::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000190, "Member 'BanditParentAI_C_TakeClothOff::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000198, "Member 'BanditParentAI_C_TakeClothOff::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'BanditParentAI_C_TakeClothOff::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x0001A8, "Member 'BanditParentAI_C_TakeClothOff::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001B0, "Member 'BanditParentAI_C_TakeClothOff::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x0001B1, "Member 'BanditParentAI_C_TakeClothOff::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, CallFunc_BooleanOR_ReturnValue) == 0x0001B2, "Member 'BanditParentAI_C_TakeClothOff::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, CallFunc_EqualEqual_SoftObjectReference_ReturnValue_1) == 0x0001B3, "Member 'BanditParentAI_C_TakeClothOff::CallFunc_EqualEqual_SoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, CallFunc_EqualEqual_SoftObjectReference_ReturnValue_2) == 0x0001B4, "Member 'BanditParentAI_C_TakeClothOff::CallFunc_EqualEqual_SoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BanditParentAI_C_TakeClothOff, CallFunc_EqualEqual_SoftObjectReference_ReturnValue_3) == 0x0001B5, "Member 'BanditParentAI_C_TakeClothOff::CallFunc_EqualEqual_SoftObjectReference_ReturnValue_3' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BanditParentAI_C_UserConstructionScript final
{
public:
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BanditParentAI_C_UserConstructionScript) == 0x000008, "Wrong alignment on BanditParentAI_C_UserConstructionScript");
static_assert(sizeof(BanditParentAI_C_UserConstructionScript) == 0x000010, "Wrong size on BanditParentAI_C_UserConstructionScript");
static_assert(offsetof(BanditParentAI_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'BanditParentAI_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.IsBandit?
// 0x0001 (0x0001 - 0x0000)
struct BanditParentAI_C_IsBandit_ final
{
public:
	bool                                          Param_IsBandit_;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_IsBandit_) == 0x000001, "Wrong alignment on BanditParentAI_C_IsBandit_");
static_assert(sizeof(BanditParentAI_C_IsBandit_) == 0x000001, "Wrong size on BanditParentAI_C_IsBandit_");
static_assert(offsetof(BanditParentAI_C_IsBandit_, Param_IsBandit_) == 0x000000, "Member 'BanditParentAI_C_IsBandit_::Param_IsBandit_' has a wrong offset!");

// Function BanditParentAI.BanditParentAI_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BanditParentAI_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BanditParentAI_C_ReceiveTick) == 0x000004, "Wrong alignment on BanditParentAI_C_ReceiveTick");
static_assert(sizeof(BanditParentAI_C_ReceiveTick) == 0x000004, "Wrong size on BanditParentAI_C_ReceiveTick");
static_assert(offsetof(BanditParentAI_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BanditParentAI_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

