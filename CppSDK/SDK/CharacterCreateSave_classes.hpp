#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterCreateSave

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FirebaseFeatures_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CharacterCreateSave.CharacterCreateSave_C
// 0x0480 (0x04A8 - 0x0028)
class UCharacterCreateSave_C final : public USaveGame
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FString                                 Name_CharacterCreateSave_C;                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class USkeletalMesh*                          SM_Face;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          SM_Beard;                                          // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          SM_Hair;                                           // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MaterialInstanceSkin;                              // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          WasCreated_;                                       // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          SM_Legs;                                           // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          SM_Body;                                           // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SkinColor;                                         // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EyeColor;                                          // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HairColor;                                         // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          SM_Bronik;                                         // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          SM_Kaska;                                          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          SM_Rukzak;                                         // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   SM_Weapon1;                                        // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SM_Weapon2;                                        // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SM_Weapon3;                                        // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SkinColor_Default;                                 // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EyeColor_default;                                  // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HairColor_Default;                                 // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CCS_PantsName;                                     // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CCS_HelmetName;                                    // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CCS_OuterwearName;                                 // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CCS_BackpackName;                                  // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CCS_ArmorName;                                     // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Woman_;                                            // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MID_Girl;                                          // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Man;                                           // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CCS_ScalarMakeupSelector;                          // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CCS_SlalarUseScar;                                 // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CCS_ScalarTexture;                                 // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CCS_ScarSelector;                                  // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CCS_UseMakeup;                                     // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Black_;                                            // 0x0170(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      WhiteHeadMaterial;                                 // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      WhiteBodyLegsMaterial;                             // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      BlackHeadMaterial;                                 // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      BlackBodyLegsMaterial;                             // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              FPBlackHandRMan;                                   // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              FPBlackHandMan;                                    // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              FPWhiteHandRMan;                                   // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              FPWhiteHandMan;                                    // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      WhiteHeadMaterialWoman;                            // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      WhiteBodyLegsMateriaWoman;                         // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      BlackHeadMaterialWoman;                            // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      BlackBodyLegsMaterialWoman;                        // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              FPWhiteHandRWoman;                                 // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              FPWhiteHandWoman;                                  // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              FPBlackHandRWoman;                                 // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              FPBlackHandWoman;                                  // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CCS_SkinTone;                                      // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Girl_Body;                                     // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Girl_Legs;                                     // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Man_Body;                                      // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Man_Legs;                                      // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           SelectedTraits;                                    // 0x0220(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 HouseArray;                                        // 0x0230(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FString>                         Aliases;                                           // 0x0240(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bPolicyAccepted;                                   // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SMFaceRowName;                                     // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SMHairRowName;                                     // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SMBeardRowName;                                    // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SMUseScarRowName;                                  // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SMScarSelectorRowName;                             // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SMFaceBodyRowName;                                 // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SkinColorRowName;                                  // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 EyeColorRowName;                                   // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 HairColorRowName;                                  // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        AGE;                                               // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Freckles;                                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TattooDepth;                                       // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MakeupDepth;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MakeupMetallic;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MakeupGloss;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LipsDepth;                                         // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LipsMetallic;                                      // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LipsGloss;                                         // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TattooColor;                                       // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BeardColor;                                        // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LipsColor;                                         // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MakeupColor;                                       // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Tattoo;                                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Makeup;                                            // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CustomFaceProperty;                                // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 SM_FaceMatRowName;                                 // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FString>                         AllProperty;                                       // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           PN;                                                // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         Charlist;                                          // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Class_CharacterCreateSave_C;                       // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   ColorProperty;                                     // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<bool>                                  BoolProperty;                                      // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 TattooColorRowName;                                // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 BeardColorRowName;                                 // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 LipsColorRowName;                                  // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MakeupColorRowName;                                // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SteamID;                                           // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UFMODEvent*                             FMod;                                              // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        FModIndex;                                         // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                FModArray;                                         // 0x0460(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          WasPlay;                                           // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFirestoreDocumentSnapshot             Data_Snapshot;                                     // 0x0478(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        VoiceLocalization;                                 // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IntensityMaskHair;                                 // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnLoadMeshes;                                      // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void CharMeshes();
	void ExecuteUbergraph_CharacterCreateSave(int32 EntryPoint);
	void FirebaseArrayToStringArray(const TArray<struct FFirestoreFieldValue>& Value, const TArray<class FString>* Result);
	void InterpritatorColor(const class FString& NewParam, struct FLinearColor* NewParam1);
	void LoadCharFromServer();
	void LoadCharInit(const struct FFirestoreDocumentSnapshot& DataSnapshot);
	void LoadServerMesh();
	void OnError_21F98C3846793966862F90BAFE0FCC47(const EFirestoreError Error);
	void OnError_3DAA940142F3B6FB6ADE88B7D6BC7FCD(const EFirestoreError Error);
	void OnLoadMeshes__DelegateSignature();
	void OnRep_CCS_ArmorName();
	void OnRep_CCS_BackpackName();
	void OnRep_CCS_HelmetName();
	void OnRep_CCS_OuterwearName();
	void OnRep_CCS_PantsName();
	void OnSet_21F98C3846793966862F90BAFE0FCC47(const EFirestoreError Error);
	void OnSet_3DAA940142F3B6FB6ADE88B7D6BC7FCD(const EFirestoreError Error);
	void SaveCharToServer();
	void SaveServerMesh();
	void ScalarValue();
	void SetDefaultClothes();
	void StringArrayToFirebaseArray(const TArray<class FString>& Value, const TArray<struct FFirestoreFieldValue>* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharacterCreateSave_C">();
	}
	static class UCharacterCreateSave_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterCreateSave_C>();
	}
};
static_assert(alignof(UCharacterCreateSave_C) == 0x000008, "Wrong alignment on UCharacterCreateSave_C");
static_assert(sizeof(UCharacterCreateSave_C) == 0x0004A8, "Wrong size on UCharacterCreateSave_C");
static_assert(offsetof(UCharacterCreateSave_C, UberGraphFrame) == 0x000028, "Member 'UCharacterCreateSave_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, Name_CharacterCreateSave_C) == 0x000030, "Member 'UCharacterCreateSave_C::Name_CharacterCreateSave_C' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Face) == 0x000040, "Member 'UCharacterCreateSave_C::SM_Face' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Beard) == 0x000048, "Member 'UCharacterCreateSave_C::SM_Beard' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Hair) == 0x000050, "Member 'UCharacterCreateSave_C::SM_Hair' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MaterialInstanceSkin) == 0x000058, "Member 'UCharacterCreateSave_C::MaterialInstanceSkin' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, WasCreated_) == 0x000060, "Member 'UCharacterCreateSave_C::WasCreated_' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Legs) == 0x000068, "Member 'UCharacterCreateSave_C::SM_Legs' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Body) == 0x000070, "Member 'UCharacterCreateSave_C::SM_Body' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SkinColor) == 0x000078, "Member 'UCharacterCreateSave_C::SkinColor' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, EyeColor) == 0x000088, "Member 'UCharacterCreateSave_C::EyeColor' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, HairColor) == 0x000098, "Member 'UCharacterCreateSave_C::HairColor' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Bronik) == 0x0000A8, "Member 'UCharacterCreateSave_C::SM_Bronik' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Kaska) == 0x0000B0, "Member 'UCharacterCreateSave_C::SM_Kaska' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Rukzak) == 0x0000B8, "Member 'UCharacterCreateSave_C::SM_Rukzak' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Weapon1) == 0x0000C0, "Member 'UCharacterCreateSave_C::SM_Weapon1' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Weapon2) == 0x0000C8, "Member 'UCharacterCreateSave_C::SM_Weapon2' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_Weapon3) == 0x0000D0, "Member 'UCharacterCreateSave_C::SM_Weapon3' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SkinColor_Default) == 0x0000D8, "Member 'UCharacterCreateSave_C::SkinColor_Default' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, EyeColor_default) == 0x0000E8, "Member 'UCharacterCreateSave_C::EyeColor_default' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, HairColor_Default) == 0x0000F8, "Member 'UCharacterCreateSave_C::HairColor_Default' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_PantsName) == 0x000108, "Member 'UCharacterCreateSave_C::CCS_PantsName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_HelmetName) == 0x000110, "Member 'UCharacterCreateSave_C::CCS_HelmetName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_OuterwearName) == 0x000118, "Member 'UCharacterCreateSave_C::CCS_OuterwearName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_BackpackName) == 0x000120, "Member 'UCharacterCreateSave_C::CCS_BackpackName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_ArmorName) == 0x000128, "Member 'UCharacterCreateSave_C::CCS_ArmorName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, Woman_) == 0x000130, "Member 'UCharacterCreateSave_C::Woman_' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MID_Girl) == 0x000138, "Member 'UCharacterCreateSave_C::MID_Girl' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MID_Man) == 0x000140, "Member 'UCharacterCreateSave_C::MID_Man' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_ScalarMakeupSelector) == 0x000148, "Member 'UCharacterCreateSave_C::CCS_ScalarMakeupSelector' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_SlalarUseScar) == 0x000150, "Member 'UCharacterCreateSave_C::CCS_SlalarUseScar' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_ScalarTexture) == 0x000158, "Member 'UCharacterCreateSave_C::CCS_ScalarTexture' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_ScarSelector) == 0x000160, "Member 'UCharacterCreateSave_C::CCS_ScarSelector' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_UseMakeup) == 0x000168, "Member 'UCharacterCreateSave_C::CCS_UseMakeup' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, Black_) == 0x000170, "Member 'UCharacterCreateSave_C::Black_' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, WhiteHeadMaterial) == 0x000178, "Member 'UCharacterCreateSave_C::WhiteHeadMaterial' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, WhiteBodyLegsMaterial) == 0x000180, "Member 'UCharacterCreateSave_C::WhiteBodyLegsMaterial' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, BlackHeadMaterial) == 0x000188, "Member 'UCharacterCreateSave_C::BlackHeadMaterial' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, BlackBodyLegsMaterial) == 0x000190, "Member 'UCharacterCreateSave_C::BlackBodyLegsMaterial' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FPBlackHandRMan) == 0x000198, "Member 'UCharacterCreateSave_C::FPBlackHandRMan' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FPBlackHandMan) == 0x0001A0, "Member 'UCharacterCreateSave_C::FPBlackHandMan' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FPWhiteHandRMan) == 0x0001A8, "Member 'UCharacterCreateSave_C::FPWhiteHandRMan' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FPWhiteHandMan) == 0x0001B0, "Member 'UCharacterCreateSave_C::FPWhiteHandMan' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, WhiteHeadMaterialWoman) == 0x0001B8, "Member 'UCharacterCreateSave_C::WhiteHeadMaterialWoman' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, WhiteBodyLegsMateriaWoman) == 0x0001C0, "Member 'UCharacterCreateSave_C::WhiteBodyLegsMateriaWoman' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, BlackHeadMaterialWoman) == 0x0001C8, "Member 'UCharacterCreateSave_C::BlackHeadMaterialWoman' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, BlackBodyLegsMaterialWoman) == 0x0001D0, "Member 'UCharacterCreateSave_C::BlackBodyLegsMaterialWoman' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FPWhiteHandRWoman) == 0x0001D8, "Member 'UCharacterCreateSave_C::FPWhiteHandRWoman' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FPWhiteHandWoman) == 0x0001E0, "Member 'UCharacterCreateSave_C::FPWhiteHandWoman' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FPBlackHandRWoman) == 0x0001E8, "Member 'UCharacterCreateSave_C::FPBlackHandRWoman' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FPBlackHandWoman) == 0x0001F0, "Member 'UCharacterCreateSave_C::FPBlackHandWoman' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CCS_SkinTone) == 0x0001F8, "Member 'UCharacterCreateSave_C::CCS_SkinTone' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MID_Girl_Body) == 0x000200, "Member 'UCharacterCreateSave_C::MID_Girl_Body' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MID_Girl_Legs) == 0x000208, "Member 'UCharacterCreateSave_C::MID_Girl_Legs' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MID_Man_Body) == 0x000210, "Member 'UCharacterCreateSave_C::MID_Man_Body' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MID_Man_Legs) == 0x000218, "Member 'UCharacterCreateSave_C::MID_Man_Legs' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SelectedTraits) == 0x000220, "Member 'UCharacterCreateSave_C::SelectedTraits' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, HouseArray) == 0x000230, "Member 'UCharacterCreateSave_C::HouseArray' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, Aliases) == 0x000240, "Member 'UCharacterCreateSave_C::Aliases' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, bPolicyAccepted) == 0x000250, "Member 'UCharacterCreateSave_C::bPolicyAccepted' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SMFaceRowName) == 0x000258, "Member 'UCharacterCreateSave_C::SMFaceRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SMHairRowName) == 0x000268, "Member 'UCharacterCreateSave_C::SMHairRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SMBeardRowName) == 0x000278, "Member 'UCharacterCreateSave_C::SMBeardRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SMUseScarRowName) == 0x000288, "Member 'UCharacterCreateSave_C::SMUseScarRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SMScarSelectorRowName) == 0x000298, "Member 'UCharacterCreateSave_C::SMScarSelectorRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SMFaceBodyRowName) == 0x0002A8, "Member 'UCharacterCreateSave_C::SMFaceBodyRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SkinColorRowName) == 0x0002B8, "Member 'UCharacterCreateSave_C::SkinColorRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, EyeColorRowName) == 0x0002C8, "Member 'UCharacterCreateSave_C::EyeColorRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, HairColorRowName) == 0x0002D8, "Member 'UCharacterCreateSave_C::HairColorRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, AGE) == 0x0002E8, "Member 'UCharacterCreateSave_C::AGE' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, Freckles) == 0x0002F0, "Member 'UCharacterCreateSave_C::Freckles' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, TattooDepth) == 0x0002F8, "Member 'UCharacterCreateSave_C::TattooDepth' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MakeupDepth) == 0x000300, "Member 'UCharacterCreateSave_C::MakeupDepth' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MakeupMetallic) == 0x000308, "Member 'UCharacterCreateSave_C::MakeupMetallic' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MakeupGloss) == 0x000310, "Member 'UCharacterCreateSave_C::MakeupGloss' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, LipsDepth) == 0x000318, "Member 'UCharacterCreateSave_C::LipsDepth' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, LipsMetallic) == 0x000320, "Member 'UCharacterCreateSave_C::LipsMetallic' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, LipsGloss) == 0x000328, "Member 'UCharacterCreateSave_C::LipsGloss' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, TattooColor) == 0x000330, "Member 'UCharacterCreateSave_C::TattooColor' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, BeardColor) == 0x000340, "Member 'UCharacterCreateSave_C::BeardColor' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, LipsColor) == 0x000350, "Member 'UCharacterCreateSave_C::LipsColor' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MakeupColor) == 0x000360, "Member 'UCharacterCreateSave_C::MakeupColor' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, Tattoo) == 0x000370, "Member 'UCharacterCreateSave_C::Tattoo' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, Makeup) == 0x000378, "Member 'UCharacterCreateSave_C::Makeup' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, CustomFaceProperty) == 0x000380, "Member 'UCharacterCreateSave_C::CustomFaceProperty' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SM_FaceMatRowName) == 0x000390, "Member 'UCharacterCreateSave_C::SM_FaceMatRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, AllProperty) == 0x0003A0, "Member 'UCharacterCreateSave_C::AllProperty' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, PN) == 0x0003B0, "Member 'UCharacterCreateSave_C::PN' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, Charlist) == 0x0003C0, "Member 'UCharacterCreateSave_C::Charlist' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, Class_CharacterCreateSave_C) == 0x0003D0, "Member 'UCharacterCreateSave_C::Class_CharacterCreateSave_C' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, ColorProperty) == 0x0003E0, "Member 'UCharacterCreateSave_C::ColorProperty' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, BoolProperty) == 0x0003F0, "Member 'UCharacterCreateSave_C::BoolProperty' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, TattooColorRowName) == 0x000400, "Member 'UCharacterCreateSave_C::TattooColorRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, BeardColorRowName) == 0x000410, "Member 'UCharacterCreateSave_C::BeardColorRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, LipsColorRowName) == 0x000420, "Member 'UCharacterCreateSave_C::LipsColorRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, MakeupColorRowName) == 0x000430, "Member 'UCharacterCreateSave_C::MakeupColorRowName' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, SteamID) == 0x000440, "Member 'UCharacterCreateSave_C::SteamID' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FMod) == 0x000450, "Member 'UCharacterCreateSave_C::FMod' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FModIndex) == 0x000458, "Member 'UCharacterCreateSave_C::FModIndex' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, FModArray) == 0x000460, "Member 'UCharacterCreateSave_C::FModArray' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, WasPlay) == 0x000470, "Member 'UCharacterCreateSave_C::WasPlay' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, Data_Snapshot) == 0x000478, "Member 'UCharacterCreateSave_C::Data_Snapshot' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, VoiceLocalization) == 0x000488, "Member 'UCharacterCreateSave_C::VoiceLocalization' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, IntensityMaskHair) == 0x000490, "Member 'UCharacterCreateSave_C::IntensityMaskHair' has a wrong offset!");
static_assert(offsetof(UCharacterCreateSave_C, OnLoadMeshes) == 0x000498, "Member 'UCharacterCreateSave_C::OnLoadMeshes' has a wrong offset!");

}

