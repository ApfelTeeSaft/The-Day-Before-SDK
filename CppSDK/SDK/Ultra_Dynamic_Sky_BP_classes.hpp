#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ultra_Dynamic_Sky_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ultra_Dynamic_Sky_BP.Ultra_Dynamic_Sky_BP_C
// 0x0028 (0x02B8 - 0x0290)
class AUltra_Dynamic_Sky_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Sun_Root;                                          // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ultra_Dynamic_Sky_Sphere;                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void CubemapTransition();
	void EnterTradeBunker(bool Enter);
	void ExecuteUbergraph_Ultra_Dynamic_Sky_BP(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Reverse();
	void UpdateSlot1();
	void UpdateSlot2();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ultra_Dynamic_Sky_BP_C">();
	}
	static class AUltra_Dynamic_Sky_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUltra_Dynamic_Sky_BP_C>();
	}
};
static_assert(alignof(AUltra_Dynamic_Sky_BP_C) == 0x000008, "Wrong alignment on AUltra_Dynamic_Sky_BP_C");
static_assert(sizeof(AUltra_Dynamic_Sky_BP_C) == 0x0002B8, "Wrong size on AUltra_Dynamic_Sky_BP_C");
static_assert(offsetof(AUltra_Dynamic_Sky_BP_C, UberGraphFrame) == 0x000290, "Member 'AUltra_Dynamic_Sky_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_BP_C, Arrow) == 0x000298, "Member 'AUltra_Dynamic_Sky_BP_C::Arrow' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_BP_C, Sun_Root) == 0x0002A0, "Member 'AUltra_Dynamic_Sky_BP_C::Sun_Root' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_BP_C, Ultra_Dynamic_Sky_Sphere) == 0x0002A8, "Member 'AUltra_Dynamic_Sky_BP_C::Ultra_Dynamic_Sky_Sphere' has a wrong offset!");
static_assert(offsetof(AUltra_Dynamic_Sky_BP_C, DefaultSceneRoot) == 0x0002B0, "Member 'AUltra_Dynamic_Sky_BP_C::DefaultSceneRoot' has a wrong offset!");

}

