#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CharacterCreate_Slider

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "WS_BodyFeatures_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CharacterCreate_Slider.W_CharacterCreate_Slider_C
// 0x01A8 (0x0428 - 0x0280)
class UW_CharacterCreate_Slider_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select;                                            // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_DecreaseValue;                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_DoScroll;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_IncreaseValue;                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Content;                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Hovered;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Selected;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Content;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider;                                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_v2;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_DisplayText;                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         In_Row;                                            // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         In_Column;                                         // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Max_Value;                                         // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Current_Value;                                     // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Step_Slider;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ButtonSlider;                                      // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        Variable;                                          // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABP_CreateCharacter_C*                  CharRef;                                           // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FWS_BodyFeatures                       GivenInfo;                                         // 0x0338(0x0088)(Edit, BlueprintVisible, ContainsInstancedReference, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MaxValueButton;                                    // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Last_Index_point;                                  // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayText;                                       // 0x03D0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	bool                                          bEnabled;                                          // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bUseStepValue;                                     // 0x03E9(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3EA[0x6];                                      // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_Increase;                                    // 0x03F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_Decrease;                                    // 0x03F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonPressTimestep;                               // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRowSelected;                                    // 0x0404(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405[0x3];                                      // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CharacterCreateRow;                                // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRowHovered;                                     // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Out_Range_A;                                       // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out_Range_B;                                       // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__W_CharacterCreate_Slider_Button_DecreaseValue_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_CharacterCreate_Slider_Button_DecreaseValue_K2Node_ComponentBoundEvent_3_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__W_CharacterCreate_Slider_Button_DoScroll_K2Node_ComponentBoundEvent_5_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_CharacterCreate_Slider_Button_IncreaseValue_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__W_CharacterCreate_Slider_Button_IncreaseValue_K2Node_ComponentBoundEvent_4_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__W_CharacterCreate_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Param_Value);
	void ButtonSlider__DelegateSignature(double Param_Value);
	void Change_Material_Param_Color(TArray<class USkeletalMeshComponent*>& Array, class FName ParameterName, const struct FLinearColor& Param_Value);
	void Construct();
	void Decrease();
	void DeselectRow();
	void ExecuteUbergraph_W_CharacterCreate_Slider(int32 EntryPoint);
	void EyeColorFunc(int32 Param_Index, float EyeColor_A1, float* EyeColor_R, float* EyeColor_G, float* EyeColor_B, float* EyeColor_A);
	void GetIsDefaultValue(bool* Default);
	void GetSettingName(class FName* SettingName);
	void HairColorFunc(int32 Param_Index, double* HairColor_R, double* HairColor_G, double* HairColor_B, double* HairColor_A);
	void HoverRow();
	void Increase();
	void IsRowHovered(bool* Param_IsHovered);
	void IsRowSelected(bool* IsSelected);
	void LipsColorFunc(int32 Param_Index, double* HairColor_R, double* HairColor_G, double* HairColor_B, double* HairColor_A);
	void MakeupColorFunc(int32 Param_Index, double* HairColor_R, double* HairColor_G, double* HairColor_B, double* HairColor_A);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void SelectRow();
	void SetBeardColor(int32 Color);
	void SetCustomValue(double Param_Value);
	void SetDefault();
	void SetEnable(bool Param_bEnabled);
	void SetEyeColor(int32 Color);
	void SetHairColor(int32 Color);
	void SetHovered();
	void SetLipsColor(int32 Color);
	void SetMakeupColor(int32 Color);
	void SetParentSettingsWidget(class UUserWidget* SettingsWidgetRef);
	void SetSelected(bool Selected);
	void SetTattooColor(int32 Color);
	void SetValue(double Param_Value, bool bPlaySound);
	void TattooColorFunc(int32 Param_Index, double* HairColor_R, double* HairColor_G, double* HairColor_B, double* HairColor_A);
	void UnhoverRow();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CharacterCreate_Slider_C">();
	}
	static class UW_CharacterCreate_Slider_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CharacterCreate_Slider_C>();
	}
};
static_assert(alignof(UW_CharacterCreate_Slider_C) == 0x000008, "Wrong alignment on UW_CharacterCreate_Slider_C");
static_assert(sizeof(UW_CharacterCreate_Slider_C) == 0x000428, "Wrong size on UW_CharacterCreate_Slider_C");
static_assert(offsetof(UW_CharacterCreate_Slider_C, UberGraphFrame) == 0x000280, "Member 'UW_CharacterCreate_Slider_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Hover) == 0x000288, "Member 'UW_CharacterCreate_Slider_C::Hover' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Select) == 0x000290, "Member 'UW_CharacterCreate_Slider_C::Select' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Button_DecreaseValue) == 0x000298, "Member 'UW_CharacterCreate_Slider_C::Button_DecreaseValue' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Button_DoScroll) == 0x0002A0, "Member 'UW_CharacterCreate_Slider_C::Button_DoScroll' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Button_IncreaseValue) == 0x0002A8, "Member 'UW_CharacterCreate_Slider_C::Button_IncreaseValue' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, HorizontalBox_Content) == 0x0002B0, "Member 'UW_CharacterCreate_Slider_C::HorizontalBox_Content' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Image_Hovered) == 0x0002B8, "Member 'UW_CharacterCreate_Slider_C::Image_Hovered' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Image_Selected) == 0x0002C0, "Member 'UW_CharacterCreate_Slider_C::Image_Selected' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, ProgressBar_Content) == 0x0002C8, "Member 'UW_CharacterCreate_Slider_C::ProgressBar_Content' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Slider) == 0x0002D0, "Member 'UW_CharacterCreate_Slider_C::Slider' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Text_v2) == 0x0002D8, "Member 'UW_CharacterCreate_Slider_C::Text_v2' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, TextBlock_DisplayText) == 0x0002E0, "Member 'UW_CharacterCreate_Slider_C::TextBlock_DisplayText' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, WidgetSwitcher_0) == 0x0002E8, "Member 'UW_CharacterCreate_Slider_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, In_Row) == 0x0002F0, "Member 'UW_CharacterCreate_Slider_C::In_Row' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, In_Column) == 0x0002F4, "Member 'UW_CharacterCreate_Slider_C::In_Column' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Value) == 0x0002F8, "Member 'UW_CharacterCreate_Slider_C::Value' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Max_Value) == 0x000300, "Member 'UW_CharacterCreate_Slider_C::Max_Value' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Current_Value) == 0x000308, "Member 'UW_CharacterCreate_Slider_C::Current_Value' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Step_Slider) == 0x000310, "Member 'UW_CharacterCreate_Slider_C::Step_Slider' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, ButtonSlider) == 0x000318, "Member 'UW_CharacterCreate_Slider_C::ButtonSlider' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Variable) == 0x000328, "Member 'UW_CharacterCreate_Slider_C::Variable' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, CharRef) == 0x000330, "Member 'UW_CharacterCreate_Slider_C::CharRef' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, GivenInfo) == 0x000338, "Member 'UW_CharacterCreate_Slider_C::GivenInfo' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, MaxValueButton) == 0x0003C0, "Member 'UW_CharacterCreate_Slider_C::MaxValueButton' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Last_Index_point) == 0x0003C8, "Member 'UW_CharacterCreate_Slider_C::Last_Index_point' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, DisplayText) == 0x0003D0, "Member 'UW_CharacterCreate_Slider_C::DisplayText' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, bEnabled) == 0x0003E8, "Member 'UW_CharacterCreate_Slider_C::bEnabled' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, bUseStepValue) == 0x0003E9, "Member 'UW_CharacterCreate_Slider_C::bUseStepValue' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Timer_Increase) == 0x0003F0, "Member 'UW_CharacterCreate_Slider_C::Timer_Increase' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Timer_Decrease) == 0x0003F8, "Member 'UW_CharacterCreate_Slider_C::Timer_Decrease' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, ButtonPressTimestep) == 0x000400, "Member 'UW_CharacterCreate_Slider_C::ButtonPressTimestep' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, bIsRowSelected) == 0x000404, "Member 'UW_CharacterCreate_Slider_C::bIsRowSelected' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, CharacterCreateRow) == 0x000408, "Member 'UW_CharacterCreate_Slider_C::CharacterCreateRow' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, bIsRowHovered) == 0x000410, "Member 'UW_CharacterCreate_Slider_C::bIsRowHovered' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Out_Range_A) == 0x000418, "Member 'UW_CharacterCreate_Slider_C::Out_Range_A' has a wrong offset!");
static_assert(offsetof(UW_CharacterCreate_Slider_C, Out_Range_B) == 0x000420, "Member 'UW_CharacterCreate_Slider_C::Out_Range_B' has a wrong offset!");

}

