#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RifleCrosshair

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_RifleCrosshair.WBP_RifleCrosshair_C
// 0x0070 (0x02F0 - 0x0280)
class UWBP_RifleCrosshair_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       DotAnim2;                                          // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DotAnim1;                                          // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Ready_Anim;                                        // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_dot;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           DotTimer;                                          // 0x02C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DotCurrentTranslation;                             // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DotTargetTranslation;                              // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Aim(bool Param_Aim);
	void DotAnim();
	void DotEvent(bool On_);
	void ExecuteUbergraph_WBP_RifleCrosshair(int32 EntryPoint);
	void Hit();
	void Kill();
	void ResetTarget();
	void Shoot(bool Shooting, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_RifleCrosshair_C">();
	}
	static class UWBP_RifleCrosshair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_RifleCrosshair_C>();
	}
};
static_assert(alignof(UWBP_RifleCrosshair_C) == 0x000008, "Wrong alignment on UWBP_RifleCrosshair_C");
static_assert(sizeof(UWBP_RifleCrosshair_C) == 0x0002F0, "Wrong size on UWBP_RifleCrosshair_C");
static_assert(offsetof(UWBP_RifleCrosshair_C, UberGraphFrame) == 0x000280, "Member 'UWBP_RifleCrosshair_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, DotAnim2) == 0x000288, "Member 'UWBP_RifleCrosshair_C::DotAnim2' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, DotAnim1) == 0x000290, "Member 'UWBP_RifleCrosshair_C::DotAnim1' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, Ready_Anim) == 0x000298, "Member 'UWBP_RifleCrosshair_C::Ready_Anim' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, Image_1) == 0x0002A0, "Member 'UWBP_RifleCrosshair_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, Image_2) == 0x0002A8, "Member 'UWBP_RifleCrosshair_C::Image_2' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, Image_3) == 0x0002B0, "Member 'UWBP_RifleCrosshair_C::Image_3' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, Image_4) == 0x0002B8, "Member 'UWBP_RifleCrosshair_C::Image_4' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, Image_dot) == 0x0002C0, "Member 'UWBP_RifleCrosshair_C::Image_dot' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, DotTimer) == 0x0002C8, "Member 'UWBP_RifleCrosshair_C::DotTimer' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, DotCurrentTranslation) == 0x0002D0, "Member 'UWBP_RifleCrosshair_C::DotCurrentTranslation' has a wrong offset!");
static_assert(offsetof(UWBP_RifleCrosshair_C, DotTargetTranslation) == 0x0002E0, "Member 'UWBP_RifleCrosshair_C::DotTargetTranslation' has a wrong offset!");

}

