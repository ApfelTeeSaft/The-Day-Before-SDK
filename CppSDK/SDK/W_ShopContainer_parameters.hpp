#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ShopContainer

#include "Basic.hpp"

#include "ContainerPickupsInfo_structs.hpp"
#include "FItemInfo_structs.hpp"


namespace SDK::Params
{

// Function W_ShopContainer.W_ShopContainer_C.AddItemBySlotIndex
// 0x0088 (0x0088 - 0x0000)
struct W_ShopContainer_C_AddItemBySlotIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  Item;                                              // 0x0008(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopContainer_C_AddItemBySlotIndex) == 0x000008, "Wrong alignment on W_ShopContainer_C_AddItemBySlotIndex");
static_assert(sizeof(W_ShopContainer_C_AddItemBySlotIndex) == 0x000088, "Wrong size on W_ShopContainer_C_AddItemBySlotIndex");
static_assert(offsetof(W_ShopContainer_C_AddItemBySlotIndex, Param_Index) == 0x000000, "Member 'W_ShopContainer_C_AddItemBySlotIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemBySlotIndex, Item) == 0x000008, "Member 'W_ShopContainer_C_AddItemBySlotIndex::Item' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemBySlotIndex, CallFunc_GetChildAt_ReturnValue) == 0x000070, "Member 'W_ShopContainer_C_AddItemBySlotIndex::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemBySlotIndex, K2Node_DynamicCast_AsW_Base_Slot) == 0x000078, "Member 'W_ShopContainer_C_AddItemBySlotIndex::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemBySlotIndex, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'W_ShopContainer_C_AddItemBySlotIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_ShopContainer.W_ShopContainer_C.AddItemSomewhere
// 0x02C0 (0x02C0 - 0x0000)
struct W_ShopContainer_C_AddItemSomewhere final
{
public:
	struct FContainerPickupsInfo                  Item;                                              // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         NewIndex;                                          // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldIndex;                                          // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          NewSlot;                                           // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_Can;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_ToStack;                       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0080(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_EmptySlotFound_;             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_GetEmptySlot_SlotRef;                     // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CallFunc_GetSlotByItemId_Slot_Ref;                 // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSlotByItemId_SlotFound_;               // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopContainer_C_AddItemSomewhere) == 0x000008, "Wrong alignment on W_ShopContainer_C_AddItemSomewhere");
static_assert(sizeof(W_ShopContainer_C_AddItemSomewhere) == 0x0002C0, "Wrong size on W_ShopContainer_C_AddItemSomewhere");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, Item) == 0x000000, "Member 'W_ShopContainer_C_AddItemSomewhere::Item' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, NewIndex) == 0x000068, "Member 'W_ShopContainer_C_AddItemSomewhere::NewIndex' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, OldIndex) == 0x00006C, "Member 'W_ShopContainer_C_AddItemSomewhere::OldIndex' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, NewSlot) == 0x000070, "Member 'W_ShopContainer_C_AddItemSomewhere::NewSlot' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, CallFunc_CanAddItem_Can) == 0x000078, "Member 'W_ShopContainer_C_AddItemSomewhere::CallFunc_CanAddItem_Can' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, CallFunc_CanAddItem_ToStack) == 0x000079, "Member 'W_ShopContainer_C_AddItemSomewhere::CallFunc_CanAddItem_ToStack' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, CallFunc_GetSlotIndex_SlotIndex) == 0x00007C, "Member 'W_ShopContainer_C_AddItemSomewhere::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000080, "Member 'W_ShopContainer_C_AddItemSomewhere::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, CallFunc_GetEmptySlot_EmptySlotFound_) == 0x0002A0, "Member 'W_ShopContainer_C_AddItemSomewhere::CallFunc_GetEmptySlot_EmptySlotFound_' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, CallFunc_GetEmptySlot_SlotRef) == 0x0002A8, "Member 'W_ShopContainer_C_AddItemSomewhere::CallFunc_GetEmptySlot_SlotRef' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, CallFunc_GetSlotByItemId_Slot_Ref) == 0x0002B0, "Member 'W_ShopContainer_C_AddItemSomewhere::CallFunc_GetSlotByItemId_Slot_Ref' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_AddItemSomewhere, CallFunc_GetSlotByItemId_SlotFound_) == 0x0002B8, "Member 'W_ShopContainer_C_AddItemSomewhere::CallFunc_GetSlotByItemId_SlotFound_' has a wrong offset!");

// Function W_ShopContainer.W_ShopContainer_C.BindMoneyCheck
// 0x0028 (0x0028 - 0x0000)
struct W_ShopContainer_C_BindMoneyCheck final
{
public:
	TDelegate<void(int32 Money)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Shop_C*                              K2Node_DynamicCast_AsW_Shop;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopContainer_C_BindMoneyCheck) == 0x000008, "Wrong alignment on W_ShopContainer_C_BindMoneyCheck");
static_assert(sizeof(W_ShopContainer_C_BindMoneyCheck) == 0x000028, "Wrong size on W_ShopContainer_C_BindMoneyCheck");
static_assert(offsetof(W_ShopContainer_C_BindMoneyCheck, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'W_ShopContainer_C_BindMoneyCheck::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_BindMoneyCheck, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_ShopContainer_C_BindMoneyCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_BindMoneyCheck, K2Node_DynamicCast_AsW_Shop) == 0x000018, "Member 'W_ShopContainer_C_BindMoneyCheck::K2Node_DynamicCast_AsW_Shop' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_BindMoneyCheck, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_ShopContainer_C_BindMoneyCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_ShopContainer.W_ShopContainer_C.CheckIfMoneyEnough
// 0x0048 (0x0048 - 0x0000)
struct W_ShopContainer_C_CheckIfMoneyEnough final
{
public:
	int32                                         MoneyCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_BaseSlot_C*>                  CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ShopSlot_C*                          K2Node_DynamicCast_AsW_Shop_Slot;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopContainer_C_CheckIfMoneyEnough) == 0x000008, "Wrong alignment on W_ShopContainer_C_CheckIfMoneyEnough");
static_assert(sizeof(W_ShopContainer_C_CheckIfMoneyEnough) == 0x000048, "Wrong size on W_ShopContainer_C_CheckIfMoneyEnough");
static_assert(offsetof(W_ShopContainer_C_CheckIfMoneyEnough, MoneyCount) == 0x000000, "Member 'W_ShopContainer_C_CheckIfMoneyEnough::MoneyCount' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_CheckIfMoneyEnough, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_ShopContainer_C_CheckIfMoneyEnough::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_CheckIfMoneyEnough, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_ShopContainer_C_CheckIfMoneyEnough::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_CheckIfMoneyEnough, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_ShopContainer_C_CheckIfMoneyEnough::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_CheckIfMoneyEnough, CallFunc_Map_Values_Values) == 0x000010, "Member 'W_ShopContainer_C_CheckIfMoneyEnough::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_CheckIfMoneyEnough, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_ShopContainer_C_CheckIfMoneyEnough::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_CheckIfMoneyEnough, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_ShopContainer_C_CheckIfMoneyEnough::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_CheckIfMoneyEnough, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'W_ShopContainer_C_CheckIfMoneyEnough::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_CheckIfMoneyEnough, K2Node_DynamicCast_AsW_Shop_Slot) == 0x000038, "Member 'W_ShopContainer_C_CheckIfMoneyEnough::K2Node_DynamicCast_AsW_Shop_Slot' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_CheckIfMoneyEnough, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'W_ShopContainer_C_CheckIfMoneyEnough::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_ShopContainer.W_ShopContainer_C.ExecuteUbergraph_W_ShopContainer
// 0x0020 (0x0020 - 0x0000)
struct W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Length;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer) == 0x000004, "Wrong alignment on W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer");
static_assert(sizeof(W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer) == 0x000020, "Wrong size on W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer");
static_assert(offsetof(W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer, EntryPoint) == 0x000000, "Member 'W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer, Temp_bool_Variable) == 0x000004, "Member 'W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer, K2Node_Event_Length) == 0x000008, "Member 'W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer::K2Node_Event_Length' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer, CallFunc_Percent_IntInt_ReturnValue) == 0x00000C, "Member 'W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer, CallFunc_Divide_IntInt_ReturnValue) == 0x000010, "Member 'W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer, K2Node_Select_Default) == 0x00001C, "Member 'W_ShopContainer_C_ExecuteUbergraph_W_ShopContainer::K2Node_Select_Default' has a wrong offset!");

// Function W_ShopContainer.W_ShopContainer_C.Remove Item By Slot Index
// 0x0048 (0x0048 - 0x0000)
struct W_ShopContainer_C_Remove_Item_By_Slot_Index final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_BaseSlot_C*>                  CallFunc_FindEnvirons_Slots;                       // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopContainer_C_Remove_Item_By_Slot_Index) == 0x000008, "Wrong alignment on W_ShopContainer_C_Remove_Item_By_Slot_Index");
static_assert(sizeof(W_ShopContainer_C_Remove_Item_By_Slot_Index) == 0x000048, "Wrong size on W_ShopContainer_C_Remove_Item_By_Slot_Index");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, Param_Index) == 0x000000, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::Param_Index' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, CallFunc_FindEnvirons_Slots) == 0x000010, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::CallFunc_FindEnvirons_Slots' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, CallFunc_GetChildAt_ReturnValue) == 0x000020, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, K2Node_DynamicCast_AsW_Base_Slot) == 0x000030, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_Remove_Item_By_Slot_Index, CallFunc_Map_Remove_ReturnValue) == 0x000041, "Member 'W_ShopContainer_C_Remove_Item_By_Slot_Index::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function W_ShopContainer.W_ShopContainer_C.SetCapacity
// 0x0004 (0x0004 - 0x0000)
struct W_ShopContainer_C_SetCapacity final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopContainer_C_SetCapacity) == 0x000004, "Wrong alignment on W_ShopContainer_C_SetCapacity");
static_assert(sizeof(W_ShopContainer_C_SetCapacity) == 0x000004, "Wrong size on W_ShopContainer_C_SetCapacity");
static_assert(offsetof(W_ShopContainer_C_SetCapacity, Length) == 0x000000, "Member 'W_ShopContainer_C_SetCapacity::Length' has a wrong offset!");

// Function W_ShopContainer.W_ShopContainer_C.GetEmptySlot
// 0x0128 (0x0128 - 0x0000)
struct W_ShopContainer_C_GetEmptySlot final
{
public:
	struct FContainerPickupsInfo                  Item;                                              // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          EmptySlotFound_;                                   // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          SlotRef;                                           // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSlotNotEmpty;                                     // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSlotFound;                                        // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CachedSlot;                                        // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentGridIndex;                                  // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemHeight;                                        // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemWidth;                                         // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty__bIsEmpty;                        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty__bIsEmpty_1;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot_1;                // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopContainer_C_GetEmptySlot) == 0x000008, "Wrong alignment on W_ShopContainer_C_GetEmptySlot");
static_assert(sizeof(W_ShopContainer_C_GetEmptySlot) == 0x000128, "Wrong size on W_ShopContainer_C_GetEmptySlot");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, Item) == 0x000000, "Member 'W_ShopContainer_C_GetEmptySlot::Item' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, EmptySlotFound_) == 0x000068, "Member 'W_ShopContainer_C_GetEmptySlot::EmptySlotFound_' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, SlotRef) == 0x000070, "Member 'W_ShopContainer_C_GetEmptySlot::SlotRef' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, bSlotNotEmpty) == 0x000078, "Member 'W_ShopContainer_C_GetEmptySlot::bSlotNotEmpty' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, bSlotFound) == 0x000079, "Member 'W_ShopContainer_C_GetEmptySlot::bSlotFound' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CachedSlot) == 0x000080, "Member 'W_ShopContainer_C_GetEmptySlot::CachedSlot' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CurrentGridIndex) == 0x000088, "Member 'W_ShopContainer_C_GetEmptySlot::CurrentGridIndex' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, ItemHeight) == 0x00008C, "Member 'W_ShopContainer_C_GetEmptySlot::ItemHeight' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, ItemWidth) == 0x000090, "Member 'W_ShopContainer_C_GetEmptySlot::ItemWidth' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, Temp_int_Variable) == 0x000094, "Member 'W_ShopContainer_C_GetEmptySlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, Temp_bool_Variable) == 0x00009C, "Member 'W_ShopContainer_C_GetEmptySlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Not_PreBool_ReturnValue) == 0x00009D, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x0000A0, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x0000A4, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, Temp_bool_Variable_1) == 0x0000A8, "Member 'W_ShopContainer_C_GetEmptySlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A9, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, Temp_int_Variable_1) == 0x0000AC, "Member 'W_ShopContainer_C_GetEmptySlot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_GetChildAt_ReturnValue) == 0x0000B0, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, K2Node_DynamicCast_AsW_Base_Slot) == 0x0000B8, "Member 'W_ShopContainer_C_GetEmptySlot::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'W_ShopContainer_C_GetEmptySlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_IsEmpty__bIsEmpty) == 0x0000C8, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_IsEmpty__bIsEmpty' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000CC, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_IsEmpty__bIsEmpty_1) == 0x0000D0, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_IsEmpty__bIsEmpty_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D4, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, Temp_int_Variable_2) == 0x0000D8, "Member 'W_ShopContainer_C_GetEmptySlot::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000DC, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, Temp_bool_Variable_2) == 0x0000E1, "Member 'W_ShopContainer_C_GetEmptySlot::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E4, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000E8, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000EC, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000ED, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue) == 0x0000EE, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue_1) == 0x0000EF, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000F0, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000F4, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000F8, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000F9, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue_2) == 0x0000FA, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000FB, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000FC, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue_3) == 0x0000FD, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_GetChildAt_ReturnValue_1) == 0x000100, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_GetChildrenCount_ReturnValue) == 0x000108, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, K2Node_DynamicCast_AsW_Base_Slot_1) == 0x000110, "Member 'W_ShopContainer_C_GetEmptySlot::K2Node_DynamicCast_AsW_Base_Slot_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'W_ShopContainer_C_GetEmptySlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00011C, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000120, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue_4) == 0x000121, "Member 'W_ShopContainer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function W_ShopContainer.W_ShopContainer_C.GetSizeOfHostedItem
// 0x0008 (0x0008 - 0x0000)
struct W_ShopContainer_C_GetSizeOfHostedItem final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopContainer_C_GetSizeOfHostedItem) == 0x000004, "Wrong alignment on W_ShopContainer_C_GetSizeOfHostedItem");
static_assert(sizeof(W_ShopContainer_C_GetSizeOfHostedItem) == 0x000008, "Wrong size on W_ShopContainer_C_GetSizeOfHostedItem");
static_assert(offsetof(W_ShopContainer_C_GetSizeOfHostedItem, X) == 0x000000, "Member 'W_ShopContainer_C_GetSizeOfHostedItem::X' has a wrong offset!");
static_assert(offsetof(W_ShopContainer_C_GetSizeOfHostedItem, Y) == 0x000004, "Member 'W_ShopContainer_C_GetSizeOfHostedItem::Y' has a wrong offset!");

}

