#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PerksForTest

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_PerksForTest.W_PerksForTest_C.ExecuteUbergraph_W_PerksForTest
// 0x00D0 (0x00D0 - 0x0000)
struct W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_PerkItem_C*                          CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBPC_PerkSystem_C*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PerkItem_C*                          K2Node_CustomEvent_Perk_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PerkItem_C*                          CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PerkItem_C*                          K2Node_CustomEvent_Perk;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PerkItem_C*                          CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_PerkItem_C*                          CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest) == 0x000008, "Wrong alignment on W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest");
static_assert(sizeof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest) == 0x0000D0, "Wrong size on W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, EntryPoint) == 0x000000, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, Temp_int_Variable) == 0x000010, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, K2Node_Event_IsDesignTime) == 0x000024, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Create_ReturnValue) == 0x000030, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_GetPlayerPawn_ReturnValue) == 0x000040, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, K2Node_CustomEvent_Perk_1) == 0x000058, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::K2Node_CustomEvent_Perk_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Array_Get_Item) == 0x000068, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00007C, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, K2Node_CustomEvent_Perk) == 0x000080, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::K2Node_CustomEvent_Perk' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008C, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Array_Add_ReturnValue_1) == 0x000090, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Array_RemoveItem_ReturnValue) == 0x000094, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Array_Length_ReturnValue_3) == 0x0000A0, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, Temp_int_Variable_1) == 0x0000A8, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000AC, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_AddChildToGrid_ReturnValue) == 0x0000B0, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000B8, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000BC, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000C0, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C1, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000C4, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'W_PerksForTest_C_ExecuteUbergraph_W_PerksForTest::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function W_PerksForTest.W_PerksForTest_C.PerkActivated
// 0x0008 (0x0008 - 0x0000)
struct W_PerksForTest_C_PerkActivated final
{
public:
	class UW_PerkItem_C*                          Perk;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PerksForTest_C_PerkActivated) == 0x000008, "Wrong alignment on W_PerksForTest_C_PerkActivated");
static_assert(sizeof(W_PerksForTest_C_PerkActivated) == 0x000008, "Wrong size on W_PerksForTest_C_PerkActivated");
static_assert(offsetof(W_PerksForTest_C_PerkActivated, Perk) == 0x000000, "Member 'W_PerksForTest_C_PerkActivated::Perk' has a wrong offset!");

// Function W_PerksForTest.W_PerksForTest_C.PerkDeactivated
// 0x0008 (0x0008 - 0x0000)
struct W_PerksForTest_C_PerkDeactivated final
{
public:
	class UW_PerkItem_C*                          Perk;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PerksForTest_C_PerkDeactivated) == 0x000008, "Wrong alignment on W_PerksForTest_C_PerkDeactivated");
static_assert(sizeof(W_PerksForTest_C_PerkDeactivated) == 0x000008, "Wrong size on W_PerksForTest_C_PerkDeactivated");
static_assert(offsetof(W_PerksForTest_C_PerkDeactivated, Perk) == 0x000000, "Member 'W_PerksForTest_C_PerkDeactivated::Perk' has a wrong offset!");

// Function W_PerksForTest.W_PerksForTest_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_PerksForTest_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PerksForTest_C_PreConstruct) == 0x000001, "Wrong alignment on W_PerksForTest_C_PreConstruct");
static_assert(sizeof(W_PerksForTest_C_PreConstruct) == 0x000001, "Wrong size on W_PerksForTest_C_PreConstruct");
static_assert(offsetof(W_PerksForTest_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_PerksForTest_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

