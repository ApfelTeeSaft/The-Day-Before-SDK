#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurvivalPlayer

#include "Basic.hpp"

#include "SurvivalPlayer_classes.hpp"
#include "SurvivalPlayer_parameters.hpp"


namespace SDK
{

// Function SurvivalPlayer.SurvivalPlayer_C.(MULC)SerRefill
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Refill                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::_MULC_SerRefill(bool Refill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "(MULC)SerRefill");

	Params::SurvivalPlayer_C__MULC_SerRefill Parms{};

	Parms.Refill = Refill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.(Serv)SetRefill
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Refill                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::_Serv_SetRefill(bool Refill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "(Serv)SetRefill");

	Params::SurvivalPlayer_C__Serv_SetRefill Parms{};

	Parms.Refill = Refill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AccelChanged(Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Accel                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Deccel                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AccelChanged_Multicast_(double Accel, double Deccel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AccelChanged(Multicast)");

	Params::SurvivalPlayer_C_AccelChanged_Multicast_ Parms{};

	Parms.Accel = Accel;
	Parms.Deccel = Deccel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AccelChanged(Server)
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Accel                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Deccel                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AccelChanged_Server_(double Accel, double Deccel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AccelChanged(Server)");

	Params::SurvivalPlayer_C_AccelChanged_Server_ Parms{};

	Parms.Accel = Accel;
	Parms.Deccel = Deccel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Off
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Off(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Off");

	Params::SurvivalPlayer_C_Off Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ActivateBattleMode
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ActivateBattleMode(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ActivateBattleMode");

	Params::SurvivalPlayer_C_ActivateBattleMode Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Add Item Data
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContainerPickupsInfo            Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::Add_Item_Data(const struct FContainerPickupsInfo& Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Add Item Data");

	Params::SurvivalPlayer_C_Add_Item_Data Parms{};

	Parms.Param_Index = std::move(Param_Index);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Add Item Items
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContainerPickupsInfo            Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::Add_Item_Items(const struct FContainerPickupsInfo& Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Add Item Items");

	Params::SurvivalPlayer_C_Add_Item_Items Parms{};

	Parms.Param_Index = std::move(Param_Index);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddAimPP
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::AddAimPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddAimPP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddCharacterRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASurvivalPlayer_C::AddCharacterRotation(const struct FRotator& Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddCharacterRotation");

	Params::SurvivalPlayer_C_AddCharacterRotation Parms{};

	Parms.Amount = std::move(Amount);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddCharRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASurvivalPlayer_C::AddCharRotation(const struct FRotator& Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddCharRotation");

	Params::SurvivalPlayer_C_AddCharRotation Parms{};

	Parms.Amount = std::move(Amount);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddDesiredItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddDesiredItem(int32 ItemId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddDesiredItem");

	Params::SurvivalPlayer_C_AddDesiredItem Parms{};

	Parms.ItemId = ItemId;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddDroppedItemToGround
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddDroppedItemToGround(const struct FFItemInfo& FItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddDroppedItemToGround");

	Params::SurvivalPlayer_C_AddDroppedItemToGround Parms{};

	Parms.FItemInfo = std::move(FItemInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddingContainersToPockets
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::AddingContainersToPockets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddingContainersToPockets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddingItemsToPockets
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::AddingItemsToPockets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddingItemsToPockets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddInviteHomeWidget
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InviteIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           PlayerNameOfferer                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ASurvPC_C*                        Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddInviteHomeWidget(int32 InviteIndex, const class FString& PlayerNameOfferer, class ASurvPC_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddInviteHomeWidget");

	Params::SurvivalPlayer_C_AddInviteHomeWidget Parms{};

	Parms.InviteIndex = InviteIndex;
	Parms.PlayerNameOfferer = std::move(PlayerNameOfferer);
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddInviteWidget
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SquadIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ASurvPC_C*                        Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddInviteWidget(int32 SquadIndex, const class FString& PlayerName, class ASurvPC_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddInviteWidget");

	Params::SurvivalPlayer_C_AddInviteWidget Parms{};

	Parms.SquadIndex = SquadIndex;
	Parms.PlayerName = std::move(PlayerName);
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddItems
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::AddItems(TArray<class FName>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddItems");

	Params::SurvivalPlayer_C_AddItems Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddItemsToPickup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// TArray<struct FContainerPickupsInfo>    AddedData1                                             (Parm, OutParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    AddedItems1                                            (Parm, OutParm, ContainsInstancedReference)

void ASurvivalPlayer_C::AddItemsToPickup(const struct FFItemInfo& FItemInfo, TArray<struct FContainerPickupsInfo>* AddedData1, TArray<struct FContainerPickupsInfo>* AddedItems1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddItemsToPickup");

	Params::SurvivalPlayer_C_AddItemsToPickup Parms{};

	Parms.FItemInfo = std::move(FItemInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (AddedData1 != nullptr)
		*AddedData1 = std::move(Parms.AddedData1);

	if (AddedItems1 != nullptr)
		*AddedItems1 = std::move(Parms.AddedItems1);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddItemToDropBox
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddItemToDropBox(const struct FFItemInfo& Item, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddItemToDropBox");

	Params::SurvivalPlayer_C_AddItemToDropBox Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddItemToPlayer_Client
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_ItemInfo                                         (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddItemToPlayer_Client(const struct FFItemInfo& Param_ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddItemToPlayer_Client");

	Params::SurvivalPlayer_C_AddItemToPlayer_Client Parms{};

	Parms.Param_ItemInfo = std::move(Param_ItemInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddItemToPocketFromMPC
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddItemToPocketFromMPC(class UJSIContainer_C* FromContainer, class UJSI_Slot_C* DroppedSlotRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddItemToPocketFromMPC");

	Params::SurvivalPlayer_C_AddItemToPocketFromMPC Parms{};

	Parms.FromContainer = FromContainer;
	Parms.DroppedSlotRef = DroppedSlotRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddPitchInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddPitchInput(double AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddPitchInput");

	Params::SurvivalPlayer_C_AddPitchInput Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddPlayerListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class ISurvivalPlayerListener_C>Listener                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddPlayerListener(TScriptInterface<class ISurvivalPlayerListener_C> Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddPlayerListener");

	Params::SurvivalPlayer_C_AddPlayerListener Parms{};

	Parms.Listener = Listener;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddRPoints
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_RPoints                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddRPoints(int32 Param_RPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddRPoints");

	Params::SurvivalPlayer_C_AddRPoints Parms{};

	Parms.Param_RPoints = Param_RPoints;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddRPoints_Serv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_RPoints                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddRPoints_Serv(int32 Param_RPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddRPoints_Serv");

	Params::SurvivalPlayer_C_AddRPoints_Serv Parms{};

	Parms.Param_RPoints = Param_RPoints;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.addSpecular__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::AddSpecular__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "addSpecular__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.addSpecular__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::AddSpecular__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "addSpecular__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddToGroundItems
// (Net, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AA_Item_C*                        NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddToGroundItems(const class AA_Item_C*& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddToGroundItems");

	Params::SurvivalPlayer_C_AddToGroundItems Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddTradeitemsToInventory
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::AddTradeitemsToInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddTradeitemsToInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddTradeOfferWidget
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerNameOfferer                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ASurvivalPlayer_C*                TradeOfferer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddTradeOfferWidget(const class FString& PlayerNameOfferer, class ASurvivalPlayer_C* TradeOfferer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddTradeOfferWidget");

	Params::SurvivalPlayer_C_AddTradeOfferWidget Parms{};

	Parms.PlayerNameOfferer = std::move(PlayerNameOfferer);
	Parms.TradeOfferer = TradeOfferer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AddYawInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AddYawInput(double AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AddYawInput");

	Params::SurvivalPlayer_C_AddYawInput Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AfterFullHeal
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::AfterFullHeal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AfterFullHeal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AfterFullHealthImpl
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::AfterFullHealthImpl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AfterFullHealthImpl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AfterFullHealthMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::AfterFullHealthMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AfterFullHealthMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AfterFullHealthServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::AfterFullHealthServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AfterFullHealthServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AIInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Door_C*                       Door                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UArrowComponent*                  Arrow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AIInteract(class ABP_Door_C* Door, class UArrowComponent* Arrow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AIInteract");

	Params::SurvivalPlayer_C_AIInteract Parms{};

	Parms.Door = Door;
	Parms.Arrow = Arrow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AimStateEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Aim                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AimStateEvent__DelegateSignature(bool Aim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AimStateEvent__DelegateSignature");

	Params::SurvivalPlayer_C_AimStateEvent__DelegateSignature Parms{};

	Parms.Aim = Aim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AimWithScope
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AimWithScope(double FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AimWithScope");

	Params::SurvivalPlayer_C_AimWithScope Parms{};

	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AmmoChangedEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBPE_Weapon_Type                        Param_WeaponType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_FireMode                           FireMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_AmmoClass                          AmmoClass                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentAmmo                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LowAmmo                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxAmmo                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               UIIcon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AmmoChangedEvent__DelegateSignature(EBPE_Weapon_Type Param_WeaponType, EBPE_FireMode FireMode, EBPE_AmmoClass AmmoClass, int32 CurrentAmmo, int32 LowAmmo, int32 MaxAmmo, class UMaterialInterface* UIIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AmmoChangedEvent__DelegateSignature");

	Params::SurvivalPlayer_C_AmmoChangedEvent__DelegateSignature Parms{};

	Parms.Param_WeaponType = Param_WeaponType;
	Parms.FireMode = FireMode;
	Parms.AmmoClass = AmmoClass;
	Parms.CurrentAmmo = CurrentAmmo;
	Parms.LowAmmo = LowAmmo;
	Parms.MaxAmmo = MaxAmmo;
	Parms.UIIcon = UIIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AnimNotifyTurningInPlace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     TurnIPMontage                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldTurn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TurningIP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TurningRight                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AnimNotifyTurningInPlace(class UAnimMontage* TurnIPMontage, bool ShouldTurn, bool TurningIP, bool TurningRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AnimNotifyTurningInPlace");

	Params::SurvivalPlayer_C_AnimNotifyTurningInPlace Parms{};

	Parms.TurnIPMontage = TurnIPMontage;
	Parms.ShouldTurn = ShouldTurn;
	Parms.TurningIP = TurningIP;
	Parms.TurningRight = TurningRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AnotherPlayerKilled
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::AnotherPlayerKilled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AnotherPlayerKilled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Apply_TakeDamage_Camera_Shake
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Zombie_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Apply_TakeDamage_Camera_Shake(const struct FVector& Vector, bool Zombie_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Apply_TakeDamage_Camera_Shake");

	Params::SurvivalPlayer_C_Apply_TakeDamage_Camera_Shake Parms{};

	Parms.Vector = std::move(Vector);
	Parms.Zombie_ = Zombie_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ApplyCriticalHealthEffect__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::ApplyCriticalHealthEffect__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ApplyCriticalHealthEffect__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ApplyCriticalHealthEffect__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::ApplyCriticalHealthEffect__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ApplyCriticalHealthEffect__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ATPCCameraMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     CameraModeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithInterpolation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithTransit                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TransitTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SharpTransition                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bForceSet                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ATPCCameraMode(const struct FGameplayTag& CameraModeTag, bool bWithInterpolation, bool WithTransit, double TransitTime, bool SharpTransition, bool bForceSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ATPCCameraMode");

	Params::SurvivalPlayer_C_ATPCCameraMode Parms{};

	Parms.CameraModeTag = std::move(CameraModeTag);
	Parms.bWithInterpolation = bWithInterpolation;
	Parms.WithTransit = WithTransit;
	Parms.TransitTime = TransitTime;
	Parms.SharpTransition = SharpTransition;
	Parms.bForceSet = bForceSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AttachCanister
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Canister_C*                   Canister                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::AttachCanister(class ABP_Canister_C* Canister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AttachCanister");

	Params::SurvivalPlayer_C_AttachCanister Parms{};

	Parms.Canister = Canister;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.AvoidFire
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::AvoidFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "AvoidFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BackpackVisibilitySwitcher
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BackpackVisibilitySwitcher(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BackpackVisibilitySwitcher");

	Params::SurvivalPlayer_C_BackpackVisibilitySwitcher Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BackToStandin
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BackToStandin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BackToStandin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BackToStandinGPS
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BackToStandinGPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BackToStandinGPS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BackToTppFromCompas
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BackToTppFromCompas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BackToTppFromCompas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BackToTppFromGPS
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BackToTppFromGPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BackToTppFromGPS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BaseEntered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enter                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BaseEntered(bool Enter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BaseEntered");

	Params::SurvivalPlayer_C_BaseEntered Parms{};

	Parms.Enter = Enter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BeginOverlap
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BeginOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BeginOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BindingEventsBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BindingEventsBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BindingEventsBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BlizzardWarning
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BlizzardWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BlizzardWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BlockMenuFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Block_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BlockMenuFunc(bool Block_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BlockMenuFunc");

	Params::SurvivalPlayer_C_BlockMenuFunc Parms{};

	Parms.Block_ = Block_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BndEvt__BPC_PlayerStatsComponent_K2Node_ComponentBoundEvent_15_StaminaEnd__DelegateSignature
// (BlueprintEvent)

void ASurvivalPlayer_C::BndEvt__BPC_PlayerStatsComponent_K2Node_ComponentBoundEvent_15_StaminaEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BndEvt__BPC_PlayerStatsComponent_K2Node_ComponentBoundEvent_15_StaminaEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BndEvt__SurvivalPlayer_CompasRef_K2Node_ComponentBoundEvent_0_ActorOnInputTouchEndSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TouchedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BndEvt__SurvivalPlayer_CompasRef_K2Node_ComponentBoundEvent_0_ActorOnInputTouchEndSignature__DelegateSignature(ETouchIndex FingerIndex, class AActor* TouchedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BndEvt__SurvivalPlayer_CompasRef_K2Node_ComponentBoundEvent_0_ActorOnInputTouchEndSignature__DelegateSignature");

	Params::SurvivalPlayer_C_BndEvt__SurvivalPlayer_CompasRef_K2Node_ComponentBoundEvent_0_ActorOnInputTouchEndSignature__DelegateSignature Parms{};

	Parms.FingerIndex = FingerIndex;
	Parms.TouchedActor = TouchedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BndEvt__SurvivalPlayer_LocalVOIP_K2Node_ComponentBoundEvent_2_OnSynthEnvelopeValue__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   EnvelopeValue                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BndEvt__SurvivalPlayer_LocalVOIP_K2Node_ComponentBoundEvent_2_OnSynthEnvelopeValue__DelegateSignature(const float EnvelopeValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BndEvt__SurvivalPlayer_LocalVOIP_K2Node_ComponentBoundEvent_2_OnSynthEnvelopeValue__DelegateSignature");

	Params::SurvivalPlayer_C_BndEvt__SurvivalPlayer_LocalVOIP_K2Node_ComponentBoundEvent_2_OnSynthEnvelopeValue__DelegateSignature Parms{};

	Parms.EnvelopeValue = EnvelopeValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BndEvt__VoipManager_K2Node_ComponentBoundEvent_0_VoiceGenerated__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// TArray<uint8>                           VoiceData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   MicLevel                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BndEvt__VoipManager_K2Node_ComponentBoundEvent_0_VoiceGenerated__DelegateSignature(const TArray<uint8>& VoiceData, const float MicLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BndEvt__VoipManager_K2Node_ComponentBoundEvent_0_VoiceGenerated__DelegateSignature");

	Params::SurvivalPlayer_C_BndEvt__VoipManager_K2Node_ComponentBoundEvent_0_VoiceGenerated__DelegateSignature Parms{};

	Parms.VoiceData = std::move(VoiceData);
	Parms.MicLevel = MicLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BoltAction_Resume(Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BoltAction_Resume_Multicast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BoltAction_Resume(Multicast)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BoltAction_Resume(Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BoltAction_Resume_Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BoltAction_Resume(Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BoltAction_Stop(Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BoltAction_Stop_Multicast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BoltAction_Stop(Multicast)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BoltAction_Stop(Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BoltAction_Stop_Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BoltAction_Stop(Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BPI_CameraShake
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ShakeClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    NeedChangeScale                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BPI_CameraShake(class UClass* ShakeClass, bool NeedChangeScale, double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BPI_CameraShake");

	Params::SurvivalPlayer_C_BPI_CameraShake Parms{};

	Parms.ShakeClass = ShakeClass;
	Parms.NeedChangeScale = NeedChangeScale;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BreathingDefault
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BreathingDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BreathingDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuildContainerDataToWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FContainerPickupsInfo>    ItemData_Containers                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    ItemData_Items                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UJSIContainer_C*                  MainContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<class UJSIContainer_C*>          CreatedContainerList                                   (Parm, OutParm, ContainsInstancedReference)

void ASurvivalPlayer_C::BuildContainerDataToWidget(TArray<struct FContainerPickupsInfo>& ItemData_Containers, TArray<struct FContainerPickupsInfo>& ItemData_Items, class UJSIContainer_C* MainContainer, TArray<class UJSIContainer_C*>* CreatedContainerList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuildContainerDataToWidget");

	Params::SurvivalPlayer_C_BuildContainerDataToWidget Parms{};

	Parms.ItemData_Containers = std::move(ItemData_Containers);
	Parms.ItemData_Items = std::move(ItemData_Items);
	Parms.MainContainer = MainContainer;

	UObject::ProcessEvent(Func, &Parms);

	ItemData_Containers = std::move(Parms.ItemData_Containers);
	ItemData_Items = std::move(Parms.ItemData_Items);

	if (CreatedContainerList != nullptr)
		*CreatedContainerList = std::move(Parms.CreatedContainerList);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuildContainerDataToWidget_v2
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FContainerPickupsInfo>    ItemData_Containers                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    ItemData_Items                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class AMPMainContainerBox_C*            MainContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   NewParam                                               (Parm, OutParm)

void ASurvivalPlayer_C::BuildContainerDataToWidget_v2(TArray<struct FContainerPickupsInfo>& ItemData_Containers, TArray<struct FContainerPickupsInfo>& ItemData_Items, class AMPMainContainerBox_C* MainContainer, TArray<class FString>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuildContainerDataToWidget_v2");

	Params::SurvivalPlayer_C_BuildContainerDataToWidget_v2 Parms{};

	Parms.ItemData_Containers = std::move(ItemData_Containers);
	Parms.ItemData_Items = std::move(ItemData_Items);
	Parms.MainContainer = MainContainer;

	UObject::ProcessEvent(Func, &Parms);

	ItemData_Containers = std::move(Parms.ItemData_Containers);
	ItemData_Items = std::move(Parms.ItemData_Items);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BunkerEnter
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BunkerEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BunkerEnter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BunkerExit
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BunkerExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BunkerExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BunkerSceneEnter
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACutSceneTrigger_C*               ViewTargetA                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BunkerSceneEnter(class ACutSceneTrigger_C* ViewTargetA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BunkerSceneEnter");

	Params::SurvivalPlayer_C_BunkerSceneEnter Parms{};

	Parms.ViewTargetA = ViewTargetA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BurntEnd
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BurntEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BurntEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BurntSurrender
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BurntSurrender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BurntSurrender");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BusyTraining
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::BusyTraining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BusyTraining");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuyCar_Owning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CarName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BuyCar_Owning(const class FString& CarName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuyCar_Owning");

	Params::SurvivalPlayer_C_BuyCar_Owning Parms{};

	Parms.CarName = std::move(CarName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuyCar_Serv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CarName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BuyCar_Serv(const class FString& CarName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuyCar_Serv");

	Params::SurvivalPlayer_C_BuyCar_Serv Parms{};

	Parms.CarName = std::move(CarName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuyHome_Serv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           HomeName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BuyHome_Serv(const class FString& HomeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuyHome_Serv");

	Params::SurvivalPlayer_C_BuyHome_Serv Parms{};

	Parms.HomeName = std::move(HomeName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuyHomeOwning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           HomeName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BuyHomeOwning(const class FString& HomeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuyHomeOwning");

	Params::SurvivalPlayer_C_BuyHomeOwning Parms{};

	Parms.HomeName = std::move(HomeName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuyHouseOwning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_HouseName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BuyHouseOwning(const class FString& Param_HouseName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuyHouseOwning");

	Params::SurvivalPlayer_C_BuyHouseOwning Parms{};

	Parms.Param_HouseName = std::move(Param_HouseName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuyHouseServ
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_HouseName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BuyHouseServ(const class FString& Param_HouseName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuyHouseServ");

	Params::SurvivalPlayer_C_BuyHouseServ Parms{};

	Parms.Param_HouseName = std::move(Param_HouseName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuyItems
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContainerPickupsInfo            Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BuyItems(const struct FContainerPickupsInfo& Item, int32 A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuyItems");

	Params::SurvivalPlayer_C_BuyItems Parms{};

	Parms.Item = std::move(Item);
	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuyPlayerStatus_Owning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Aliases                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BuyPlayerStatus_Owning(const class FString& Param_Aliases)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuyPlayerStatus_Owning");

	Params::SurvivalPlayer_C_BuyPlayerStatus_Owning Parms{};

	Parms.Param_Aliases = std::move(Param_Aliases);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.BuyPlayerStatus_Serv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Aliases                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::BuyPlayerStatus_Serv(const class FString& Param_Aliases)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "BuyPlayerStatus_Serv");

	Params::SurvivalPlayer_C_BuyPlayerStatus_Serv Parms{};

	Parms.Param_Aliases = std::move(Param_Aliases);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CalcAccelDeccel
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CalcAccelDeccel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CalcAccelDeccel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CalcAccelDeccelCustom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Accel                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Deccel                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CalcAccelDeccelCustom(double Accel, double Deccel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CalcAccelDeccelCustom");

	Params::SurvivalPlayer_C_CalcAccelDeccelCustom Parms{};

	Parms.Accel = Accel;
	Parms.Deccel = Deccel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CalculateArmorAndHelmetDurability
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CalculateArmorAndHelmetDurability(class FName BoneName, double Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CalculateArmorAndHelmetDurability");

	Params::SurvivalPlayer_C_CalculateArmorAndHelmetDurability Parms{};

	Parms.BoneName = BoneName;
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CalculateDmgWithArmor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double ASurvivalPlayer_C::CalculateDmgWithArmor(class FName BoneName, double Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CalculateDmgWithArmor");

	Params::SurvivalPlayer_C_CalculateDmgWithArmor Parms{};

	Parms.BoneName = BoneName;
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CalculateItemsLeftAfterAddOrEquip
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   OutputPin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CalculateItemsLeftAfterAddOrEquip(const struct FFItemInfo& Item, int32* OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CalculateItemsLeftAfterAddOrEquip");

	Params::SurvivalPlayer_C_CalculateItemsLeftAfterAddOrEquip Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CalculateSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CalculateSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CalculateSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CalculateVariables
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CalculateVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CalculateVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallCraft
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Craft_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CallCraft(bool Craft_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallCraft");

	Params::SurvivalPlayer_C_CallCraft Parms{};

	Parms.Craft_ = Craft_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallDisableInput
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CallDisableInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallDisableInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallDurabilityIncreaseEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CallDurabilityIncreaseEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallDurabilityIncreaseEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallEatAnim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CallEatAnim(class FName Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallEatAnim");

	Params::SurvivalPlayer_C_CallEatAnim Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallEatMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DurationAttached                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AnimDelay                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DissappearDelay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CallEatMesh(class FName ItemType, double DurationAttached, double AnimDelay, double DissappearDelay, double PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallEatMesh");

	Params::SurvivalPlayer_C_CallEatMesh Parms{};

	Parms.ItemType = ItemType;
	Parms.DurationAttached = DurationAttached;
	Parms.AnimDelay = AnimDelay;
	Parms.DissappearDelay = DissappearDelay;
	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallEnableInput
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CallEnableInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallEnableInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallFallDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CallFallDamage(double Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallFallDamage");

	Params::SurvivalPlayer_C_CallFallDamage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallFuelIncreaseEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CallFuelIncreaseEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallFuelIncreaseEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallInteract
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CallInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallInteractEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CallInteractEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallInteractEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallLootAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_LootingHeight                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_LootPointOpened                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CallLootAnim(double Param_LootingHeight, bool Param_LootPointOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallLootAnim");

	Params::SurvivalPlayer_C_CallLootAnim Parms{};

	Parms.Param_LootingHeight = Param_LootingHeight;
	Parms.Param_LootPointOpened = Param_LootPointOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CallServerEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CallServerEvent(class ASurvivalPlayer_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CallServerEvent");

	Params::SurvivalPlayer_C_CallServerEvent Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CameraDefault
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CameraDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CameraDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CameraLerpAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      Curve                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CameraLerpAction(class UCurveFloat* Curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CameraLerpAction");

	Params::SurvivalPlayer_C_CameraLerpAction Parms{};

	Parms.Curve = Curve;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CameraLerpSpring__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::CameraLerpSpring__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CameraLerpSpring__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CameraLerpSpring__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::CameraLerpSpring__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CameraLerpSpring__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CampBuildInstant
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CampBuildInstant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CampBuildInstant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CampPlaceBegin
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CampPlaceBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CampPlaceBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CampPlaceEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CampPlaceEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CampPlaceEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Can Add or Equip Item
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    OnlyAdd                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Can_Add_or_Equip_Item(const struct FFItemInfo& FItemInfo, bool OnlyAdd, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Can Add or Equip Item");

	Params::SurvivalPlayer_C_Can_Add_or_Equip_Item Parms{};

	Parms.FItemInfo = std::move(FItemInfo);
	Parms.OnlyAdd = OnlyAdd;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CanAddItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    blockStack                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Can                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SlotIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Canstack                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemRef                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CanAddItem(class UJSIContainer_C* Container, const struct FFItemInfo& FItemInfo, bool blockStack, bool* Can, int32* SlotIndex, bool* Canstack, class UJSI_Slot_C** ItemRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CanAddItem");

	Params::SurvivalPlayer_C_CanAddItem Parms{};

	Parms.Container = Container;
	Parms.FItemInfo = std::move(FItemInfo);
	Parms.blockStack = blockStack;

	UObject::ProcessEvent(Func, &Parms);

	if (Can != nullptr)
		*Can = Parms.Can;

	if (SlotIndex != nullptr)
		*SlotIndex = Parms.SlotIndex;

	if (Canstack != nullptr)
		*Canstack = Parms.Canstack;

	if (ItemRef != nullptr)
		*ItemRef = Parms.ItemRef;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CanAddItems
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFItemInfo>               Items                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Can                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemsLeft                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CanAddItems(TArray<struct FFItemInfo>& Items, bool* Can, int32* ItemsLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CanAddItems");

	Params::SurvivalPlayer_C_CanAddItems Parms{};

	Parms.Items = std::move(Items);

	UObject::ProcessEvent(Func, &Parms);

	Items = std::move(Parms.Items);

	if (Can != nullptr)
		*Can = Parms.Can;

	if (ItemsLeft != nullptr)
		*ItemsLeft = Parms.ItemsLeft;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CancelFire
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CancelFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CancelFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CancelInteractionByMouse
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CancelInteractionByMouse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CancelInteractionByMouse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CapsuleChaseWhileRagdolling
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CapsuleLoc                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CapsuleChaseWhileRagdolling(struct FVector* CapsuleLoc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CapsuleChaseWhileRagdolling");

	Params::SurvivalPlayer_C_CapsuleChaseWhileRagdolling Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CapsuleLoc != nullptr)
		*CapsuleLoc = std::move(Parms.CapsuleLoc);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CarEnter
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CarEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CarEnter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CarExit
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CarExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CarExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CarMapPrint
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CarMapPrint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CarMapPrint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CarRepair
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CarRepair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CarRepair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CarSaveUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CarSaveUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CarSaveUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CarsStats__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   CarStats                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::CarsStats__DelegateSignature(TArray<class FString>& CarStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CarsStats__DelegateSignature");

	Params::SurvivalPlayer_C_CarsStats__DelegateSignature Parms{};

	Parms.CarStats = std::move(CarStats);

	UObject::ProcessEvent(Func, &Parms);

	CarStats = std::move(Parms.CarStats);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CarStealCount
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CarStealCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CarStealCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CarToAvailableUpdate
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CarToAvailableUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CarToAvailableUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CastShadowsCurrentWP
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Cast_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CastShadowsCurrentWP(bool Cast_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CastShadowsCurrentWP");

	Params::SurvivalPlayer_C_CastShadowsCurrentWP Parms{};

	Parms.Cast_ = Cast_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CatchUpPlayer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASurvivalPlayer_C::CatchUpPlayer(class ASurvivalPlayer_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CatchUpPlayer");

	Params::SurvivalPlayer_C_CatchUpPlayer Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CatchUpPlayerClient
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CatchUpPlayerClient(class ASurvivalPlayer_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CatchUpPlayerClient");

	Params::SurvivalPlayer_C_CatchUpPlayerClient Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Change Helmet
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Change_Helmet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Change Helmet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Change Money Count
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Sum                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Change_Money_Count(int32 Sum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Change Money Count");

	Params::SurvivalPlayer_C_Change_Money_Count Parms{};

	Parms.Sum = Sum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeAimState(Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAim                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFPS                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeAimState_Multicast_(bool IsAim, bool IsFPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeAimState(Multicast)");

	Params::SurvivalPlayer_C_ChangeAimState_Multicast_ Parms{};

	Parms.IsAim = IsAim;
	Parms.IsFPS = IsFPS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeAimState(Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAim                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFPS                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeAimState_Server_(bool IsAim, bool IsFPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeAimState(Server)");

	Params::SurvivalPlayer_C_ChangeAimState_Server_ Parms{};

	Parms.IsAim = IsAim;
	Parms.IsFPS = IsFPS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeAmmoClass
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ChangeAmmoClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeAmmoClass");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeBackpackBindEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeBackpackBindEvent(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeBackpackBindEvent");

	Params::SurvivalPlayer_C_ChangeBackpackBindEvent Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeBinocularsEquipState
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ChangeBinocularsEquipState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeBinocularsEquipState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeBinocularsEquipStateServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ChangeBinocularsEquipStateServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeBinocularsEquipStateServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeCameraMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     CameraModeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithInterpolation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeCameraMode(const struct FGameplayTag& CameraModeTag, bool bWithInterpolation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeCameraMode");

	Params::SurvivalPlayer_C_ChangeCameraMode Parms{};

	Parms.CameraModeTag = std::move(CameraModeTag);
	Parms.bWithInterpolation = bWithInterpolation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeCameraOffset
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewSocketOffset                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeCameraOffset(bool Reset, const struct FVector& NewSocketOffset, double InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeCameraOffset");

	Params::SurvivalPlayer_C_ChangeCameraOffset Parms{};

	Parms.Reset = Reset;
	Parms.NewSocketOffset = std::move(NewSocketOffset);
	Parms.InterpSpeed = InterpSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeContainerMother
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ContainerMotherID                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UniqueId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeContainerMother(int32 ContainerMotherID, int32 UniqueId, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeContainerMother");

	Params::SurvivalPlayer_C_ChangeContainerMother Parms{};

	Parms.ContainerMotherID = ContainerMotherID;
	Parms.UniqueId = UniqueId;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeDrunk_PP_Parameters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Blur                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Saturation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeDrunk_PP_Parameters(double Blur, double Saturation, double Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeDrunk_PP_Parameters");

	Params::SurvivalPlayer_C_ChangeDrunk_PP_Parameters Parms{};

	Parms.Blur = Blur;
	Parms.Saturation = Saturation;
	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeFootState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFootState                              New_Style                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeFootState(EFootState New_Style)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeFootState");

	Params::SurvivalPlayer_C_ChangeFootState Parms{};

	Parms.New_Style = New_Style;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeHunger_PP_Parameters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_Food_Desaturation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_Water_blur                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Water_blur_radius                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Water_density                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeHunger_PP_Parameters(double Param_Food_Desaturation, double Param_Water_blur, double Water_blur_radius, double Water_density)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeHunger_PP_Parameters");

	Params::SurvivalPlayer_C_ChangeHunger_PP_Parameters Parms{};

	Parms.Param_Food_Desaturation = Param_Food_Desaturation;
	Parms.Param_Water_blur = Param_Water_blur;
	Parms.Water_blur_radius = Water_blur_radius;
	Parms.Water_density = Water_density;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeJacket
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ChangeJacket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeJacket");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeMaterialParamColor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USkeletalMeshComponent*>   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeMaterialParamColor(TArray<class USkeletalMeshComponent*>& Array, class FName ParameterName, const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeMaterialParamColor");

	Params::SurvivalPlayer_C_ChangeMaterialParamColor Parms{};

	Parms.Array = std::move(Array);
	Parms.ParameterName = ParameterName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangePants
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ChangePants()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangePants");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeSits_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Vehicle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   DesireSitIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeSits_Server(class APawn* Param_Vehicle, int32 DesireSitIndex, class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeSits_Server");

	Params::SurvivalPlayer_C_ChangeSits_Server Parms{};

	Parms.Param_Vehicle = Param_Vehicle;
	Parms.DesireSitIndex = DesireSitIndex;
	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeSitsIfinCar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Vehicle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   DesireSitIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeSitsIfinCar(class APawn* Param_Vehicle, class APawn* Param_Player, int32 DesireSitIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeSitsIfinCar");

	Params::SurvivalPlayer_C_ChangeSitsIfinCar Parms{};

	Parms.Param_Vehicle = Param_Vehicle;
	Parms.Param_Player = Param_Player;
	Parms.DesireSitIndex = DesireSitIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeStance(Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// EStanceState                            Stance                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeStance_Multicast_(EStanceState Stance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeStance(Multicast)");

	Params::SurvivalPlayer_C_ChangeStance_Multicast_ Parms{};

	Parms.Stance = Stance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeStance(Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// EStanceState                            Stance                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeStance_Server_(EStanceState Stance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeStance(Server)");

	Params::SurvivalPlayer_C_ChangeStance_Server_ Parms{};

	Parms.Stance = Stance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeWeapon(Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_WeaponName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       Weapon_ItemInfo                                        (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeWeapon_Multicast_(class FName Param_WeaponName, class UJSI_Slot_C* ItemState, const struct FFItemInfo& Weapon_ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeWeapon(Multicast)");

	Params::SurvivalPlayer_C_ChangeWeapon_Multicast_ Parms{};

	Parms.Param_WeaponName = Param_WeaponName;
	Parms.ItemState = ItemState;
	Parms.Weapon_ItemInfo = std::move(Weapon_ItemInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeWeapon(Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_WeaponName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FWeaponUniqueInfo                Weapon_ItemInfo                                        (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::ChangeWeapon_Server_(class FName Param_WeaponName, const struct FWeaponUniqueInfo& Weapon_ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeWeapon(Server)");

	Params::SurvivalPlayer_C_ChangeWeapon_Server_ Parms{};

	Parms.Param_WeaponName = Param_WeaponName;
	Parms.Weapon_ItemInfo = std::move(Weapon_ItemInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ChangeWeaponActiveSlot__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ChangeWeaponActiveSlot__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ChangeWeaponActiveSlot__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CharRotationSync(Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        CharRotation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CharRotationSync_Multicast_(const struct FVector2D& CharRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CharRotationSync(Multicast)");

	Params::SurvivalPlayer_C_CharRotationSync_Multicast_ Parms{};

	Parms.CharRotation = std::move(CharRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CharRotationSync(Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         CharRotation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASurvivalPlayer_C::CharRotationSync_Server_(const struct FRotator& CharRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CharRotationSync(Server)");

	Params::SurvivalPlayer_C_CharRotationSync_Server_ Parms{};

	Parms.CharRotation = std::move(CharRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckBandages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HaveBandage                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CheckBandages(bool* HaveBandage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckBandages");

	Params::SurvivalPlayer_C_CheckBandages Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HaveBandage != nullptr)
		*HaveBandage = Parms.HaveBandage;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckBleeding
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             EffectName                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// double                                  BleedingDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BleedingActive                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CheckBleeding(const class FText& EffectName, double BleedingDuration, bool* BleedingActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckBleeding");

	Params::SurvivalPlayer_C_CheckBleeding Parms{};

	Parms.EffectName = std::move(EffectName);
	Parms.BleedingDuration = BleedingDuration;

	UObject::ProcessEvent(Func, &Parms);

	if (BleedingActive != nullptr)
		*BleedingActive = Parms.BleedingActive;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckBlendshapes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CheckBlendshapes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckBlendshapes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckBlendshapesDelay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CheckBlendshapesDelay(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckBlendshapesDelay");

	Params::SurvivalPlayer_C_CheckBlendshapesDelay Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckEndEat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Eat_                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CheckEndEat(bool* Eat_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckEndEat");

	Params::SurvivalPlayer_C_CheckEndEat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Eat_ != nullptr)
		*Eat_ = Parms.Eat_;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckForBreathIdle
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CheckForBreathIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckForBreathIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckForClosestBunkerMark
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CheckForClosestBunkerMark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckForClosestBunkerMark");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckForContainerDrop
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CheckForContainerDrop(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckForContainerDrop");

	Params::SurvivalPlayer_C_CheckForContainerDrop Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckForJsiSlotArray
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFItemInfo>               NewParam                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::CheckForJsiSlotArray(const TArray<struct FFItemInfo>& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckForJsiSlotArray");

	Params::SurvivalPlayer_C_CheckForJsiSlotArray Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckForSpaceInInventory
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CheckForSpaceInInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckForSpaceInInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckHoveredSlot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CheckHoveredSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckHoveredSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckIfDiedInCar_Client
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CheckIfDiedInCar_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckIfDiedInCar_Client");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckIfMarkInBunker
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_Mark_C*                        Mark                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CheckIfMarkInBunker(class UW_Mark_C* Mark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckIfMarkInBunker");

	Params::SurvivalPlayer_C_CheckIfMarkInBunker Parms{};

	Parms.Mark = Mark;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckLegsColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CheckLegsColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckLegsColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckMoveTypeBySpeed
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CheckMoveTypeBySpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckMoveTypeBySpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckSkinTone
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CheckSkinTone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckSkinTone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckSlotsToPlace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSBP_ItemsData                   Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   SlotID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Stack                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Full                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CheckSlotsToPlace(const struct FSBP_ItemsData& Item, int32* SlotID, bool* Stack, bool* Full)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckSlotsToPlace");

	Params::SurvivalPlayer_C_CheckSlotsToPlace Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);

	if (SlotID != nullptr)
		*SlotID = Parms.SlotID;

	if (Stack != nullptr)
		*Stack = Parms.Stack;

	if (Full != nullptr)
		*Full = Parms.Full;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckSlotsToRemove
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoItem                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CheckSlotsToRemove(int32* SlotID, bool* NoItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckSlotsToRemove");

	Params::SurvivalPlayer_C_CheckSlotsToRemove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SlotID != nullptr)
		*SlotID = Parms.SlotID;

	if (NoItem != nullptr)
		*NoItem = Parms.NoItem;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckWeaponSlotPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PrimaryId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SecondaryId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NonSync                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CheckWeaponSlotPoint(int32 PrimaryId, int32 SecondaryId, bool* NonSync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckWeaponSlotPoint");

	Params::SurvivalPlayer_C_CheckWeaponSlotPoint Parms{};

	Parms.PrimaryId = PrimaryId;
	Parms.SecondaryId = SecondaryId;

	UObject::ProcessEvent(Func, &Parms);

	if (NonSync != nullptr)
		*NonSync = Parms.NonSync;
}


// Function SurvivalPlayer.SurvivalPlayer_C.CheckZombieSpawnInCar_Server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_CarWithZombie_C*              CarWithZombie                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CheckZombieSpawnInCar_Server(class ABP_CarWithZombie_C* CarWithZombie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CheckZombieSpawnInCar_Server");

	Params::SurvivalPlayer_C_CheckZombieSpawnInCar_Server Parms{};

	Parms.CarWithZombie = CarWithZombie;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Clear End Gamestats
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Clear_End_Gamestats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Clear End Gamestats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClearGrenadeVars
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ClearGrenadeVars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClearGrenadeVars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClearInventory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ClearInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClearInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClearRotationVars
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ClearRotationVars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClearRotationVars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClearStates
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ClearStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClearStates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClearStateVars
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ClearStateVars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClearStateVars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Client_BuildMPContainerData
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMPMainContainerBox_C*            Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FMpContentRep                    Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::Client_BuildMPContainerData(class AMPMainContainerBox_C* Container, const struct FMpContentRep& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Client_BuildMPContainerData");

	Params::SurvivalPlayer_C_Client_BuildMPContainerData Parms{};

	Parms.Container = Container;
	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClientAddItem
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ClientAddItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClientAddItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClientBuildShopData
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMPMainContainerBox_C*            Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FMpContentRep                    Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::ClientBuildShopData(class AMPMainContainerBox_C* Container, const struct FMpContentRep& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClientBuildShopData");

	Params::SurvivalPlayer_C_ClientBuildShopData Parms{};

	Parms.Container = Container;
	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClientDied
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Killer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsRadialDamage                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FDropItemEntry>           Param_Drop                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    DropItemWhenDie                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_HungerDamage                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ClientDied(double HitAngle, const struct FVector& HitLocation, class FName BoneName, class APawn* Param_Killer, bool Param_IsRadialDamage, const TArray<struct FDropItemEntry>& Param_Drop, bool DropItemWhenDie, bool Param_HungerDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClientDied");

	Params::SurvivalPlayer_C_ClientDied Parms{};

	Parms.HitAngle = HitAngle;
	Parms.HitLocation = std::move(HitLocation);
	Parms.BoneName = BoneName;
	Parms.Param_Killer = Param_Killer;
	Parms.Param_IsRadialDamage = Param_IsRadialDamage;
	Parms.Param_Drop = std::move(Param_Drop);
	Parms.DropItemWhenDie = DropItemWhenDie;
	Parms.Param_HungerDamage = Param_HungerDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClientFunc_OnDistanceCloseContainer
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ClientFunc_OnDistanceCloseContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClientFunc_OnDistanceCloseContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClientLevelLoaded
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ClientLevelLoaded(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClientLevelLoaded");

	Params::SurvivalPlayer_C_ClientLevelLoaded Parms{};

	Parms.LevelName = LevelName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClientLevelUnloaded
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ClientLevelUnloaded(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClientLevelUnloaded");

	Params::SurvivalPlayer_C_ClientLevelUnloaded Parms{};

	Parms.LevelName = LevelName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ClientResponseUID
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForSlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ClientResponseUID(int32 Uid, bool ForSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ClientResponseUID");

	Params::SurvivalPlayer_C_ClientResponseUID Parms{};

	Parms.Uid = Uid;
	Parms.ForSlot = ForSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CloseInventory
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CloseInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CloseInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ColdDecreaseSet
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DecreaseSpeed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ColdDecreaseSet(double DecreaseSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ColdDecreaseSet");

	Params::SurvivalPlayer_C_ColdDecreaseSet Parms{};

	Parms.DecreaseSpeed = DecreaseSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ColdDecreaseSet_MULTI
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DecreaseSpeed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ColdDecreaseSet_MULTI(double DecreaseSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ColdDecreaseSet_MULTI");

	Params::SurvivalPlayer_C_ColdDecreaseSet_MULTI Parms{};

	Parms.DecreaseSpeed = DecreaseSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CollisionEnable
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CollisionEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CollisionEnable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CompasEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CompasEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CompasEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ConfigureContainerInventory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMPMainContainerBox_C*            Param_CurrentFocusedContainer                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ConfigureContainerInventory(class AMPMainContainerBox_C* Param_CurrentFocusedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ConfigureContainerInventory");

	Params::SurvivalPlayer_C_ConfigureContainerInventory Parms{};

	Parms.Param_CurrentFocusedContainer = Param_CurrentFocusedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ConfigureTradeInventory
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ConfigureTradeInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ConfigureTradeInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ConfigureTradeInventory_Multicast
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ConfigureTradeInventory_Multicast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ConfigureTradeInventory_Multicast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ConfigureTradeInventory_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                TradeOfferer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ConfigureTradeInventory_Server(class ASurvivalPlayer_C* TradeOfferer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ConfigureTradeInventory_Server");

	Params::SurvivalPlayer_C_ConfigureTradeInventory_Server Parms{};

	Parms.TradeOfferer = TradeOfferer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ContainerDropped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainerRef                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      FromSlotRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UWBP_LootEntry_C*                 ToEntryRef                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ToSlotRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ContainerDropped(class UJSIContainer_C* FromContainerRef, class UJSI_Slot_C* FromSlotRef, class UWBP_LootEntry_C* ToEntryRef, class UJSI_Slot_C* ToSlotRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ContainerDropped");

	Params::SurvivalPlayer_C_ContainerDropped Parms{};

	Parms.FromContainerRef = FromContainerRef;
	Parms.FromSlotRef = FromSlotRef;
	Parms.ToEntryRef = ToEntryRef;
	Parms.ToSlotRef = ToSlotRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ContainerEventHandle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiveRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ToSlotIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ContainerEventHandle(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiveRef, int32 Param_ToSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ContainerEventHandle");

	Params::SurvivalPlayer_C_ContainerEventHandle Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.DroppedSlotRef = DroppedSlotRef;
	Parms.SlotReceiveRef = SlotReceiveRef;
	Parms.Param_ToSlotIndex = Param_ToSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CopyDataToShadowWP
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWeaponPlaceholder_C*             SourceWP                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CopyDataToShadowWP(class AWeaponPlaceholder_C* SourceWP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CopyDataToShadowWP");

	Params::SurvivalPlayer_C_CopyDataToShadowWP Parms{};

	Parms.SourceWP = SourceWP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CorrectCameraOffsetByPelvis
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CorrectCameraOffsetByPelvis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CorrectCameraOffsetByPelvis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Count Prices
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UJSI_Slot_C*>              ItemsToBuy                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// double                                  Prices                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Count_Prices(TArray<class UJSI_Slot_C*>& ItemsToBuy, double* Prices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Count Prices");

	Params::SurvivalPlayer_C_Count_Prices Parms{};

	Parms.ItemsToBuy = std::move(ItemsToBuy);

	UObject::ProcessEvent(Func, &Parms);

	ItemsToBuy = std::move(Parms.ItemsToBuy);

	if (Prices != nullptr)
		*Prices = Parms.Prices;
}


// Function SurvivalPlayer.SurvivalPlayer_C.Craft
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Craft(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Craft");

	Params::SurvivalPlayer_C_Craft Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Craft Camera Proc
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Craft_Camera_Proc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Craft Camera Proc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrashEquipment
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CrashEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrashEquipment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Crawl Ragdolling
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Crawl_Ragdolling(double HitAngle, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Crawl Ragdolling");

	Params::SurvivalPlayer_C_Crawl_Ragdolling Parms{};

	Parms.HitAngle = HitAngle;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrawlingState
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CrawlingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrawlingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrawlingStateBegan
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CrawlingStateBegan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrawlingStateBegan");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrawlingTagUpdate
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Revive_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           CrawlingActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ASurvivalPlayer_C*                SelfRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CrawlingTagUpdate(bool Revive_, class AActor* CrawlingActor, class ASurvivalPlayer_C* SelfRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrawlingTagUpdate");

	Params::SurvivalPlayer_C_CrawlingTagUpdate Parms{};

	Parms.Revive_ = Revive_;
	Parms.CrawlingActor = CrawlingActor;
	Parms.SelfRef = SelfRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrawlingTagUpdMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Revive_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASurvivalPlayer_C*                CrawlingActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ASurvivalPlayer_C*                Param_Reviver                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CrawlingTagUpdMulti(bool Revive_, class ASurvivalPlayer_C* CrawlingActor, class ASurvivalPlayer_C* Param_Reviver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrawlingTagUpdMulti");

	Params::SurvivalPlayer_C_CrawlingTagUpdMulti Parms{};

	Parms.Revive_ = Revive_;
	Parms.CrawlingActor = CrawlingActor;
	Parms.Param_Reviver = Param_Reviver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrawlingUpdateClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRevive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APS_TDB_C*                        RevivingPlayerPS                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CrawlingUpdateClient(bool bRevive, class APS_TDB_C* RevivingPlayerPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrawlingUpdateClient");

	Params::SurvivalPlayer_C_CrawlingUpdateClient Parms{};

	Parms.bRevive = bRevive;
	Parms.RevivingPlayerPS = RevivingPlayerPS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CreateDynMateral
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMesh                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CreateDynMateral(class USkeletalMeshComponent* SkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CreateDynMateral");

	Params::SurvivalPlayer_C_CreateDynMateral Parms{};

	Parms.SkeletalMesh = SkeletalMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CriticalDamageEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      NewFloatCurve                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Param_BloodPP_midle_value                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CriticalDamageEffect(float Length, class UCurveFloat* NewFloatCurve, double Param_BloodPP_midle_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CriticalDamageEffect");

	Params::SurvivalPlayer_C_CriticalDamageEffect Parms{};

	Parms.Length = Length;
	Parms.NewFloatCurve = NewFloatCurve;
	Parms.Param_BloodPP_midle_value = Param_BloodPP_midle_value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrouchBag
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CrouchBag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrouchBag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrouchCustom
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CrouchCustom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrouchCustom");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrouchDelay
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CrouchDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrouchDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrouchingWeaponOffset
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Crouch_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CrouchingWeaponOffset(bool Crouch_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrouchingWeaponOffset");

	Params::SurvivalPlayer_C_CrouchingWeaponOffset Parms{};

	Parms.Crouch_ = Crouch_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrouchingWeaponOffsetTimeline__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::CrouchingWeaponOffsetTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrouchingWeaponOffsetTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrouchingWeaponOffsetTimeline__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::CrouchingWeaponOffsetTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrouchingWeaponOffsetTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrouchPitchOffsetIfAim__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::CrouchPitchOffsetIfAim__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrouchPitchOffsetIfAim__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CrouchPitchOffsetIfAim__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::CrouchPitchOffsetIfAim__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CrouchPitchOffsetIfAim__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CustomDamageFX
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPhysicalSurface                        Enumerator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Forward                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CustomDamageFX(EPhysicalSurface Enumerator, const struct FVector& InputPin, const struct FVector& Forward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CustomDamageFX");

	Params::SurvivalPlayer_C_CustomDamageFX Parms{};

	Parms.Enumerator = Enumerator;
	Parms.InputPin = std::move(InputPin);
	Parms.Forward = std::move(Forward);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CustomDamageFXServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPhysicalSurface                        Enumerator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Forward                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CustomDamageFXServer(EPhysicalSurface Enumerator, const struct FVector& InputPin, const struct FVector& Forward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CustomDamageFXServer");

	Params::SurvivalPlayer_C_CustomDamageFXServer Parms{};

	Parms.Enumerator = Enumerator;
	Parms.InputPin = std::move(InputPin);
	Parms.Forward = std::move(Forward);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CustomEvent(class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CustomEvent");

	Params::SurvivalPlayer_C_CustomEvent Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_Objective_C*                  Objective                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CustomEvent_0(class UBP_Objective_C* Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CustomEvent_0");

	Params::SurvivalPlayer_C_CustomEvent_0 Parms{};

	Parms.Objective = Objective;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::CustomEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CustomEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CustomEvent_2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CustomEvent_2(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CustomEvent_2");

	Params::SurvivalPlayer_C_CustomEvent_2 Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CustomEvent_3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CustomEvent_3(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CustomEvent_3");

	Params::SurvivalPlayer_C_CustomEvent_3 Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.CustomEvent_4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::CustomEvent_4(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "CustomEvent_4");

	Params::SurvivalPlayer_C_CustomEvent_4 Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DamageCameraEffects__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::DamageCameraEffects__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DamageCameraEffects__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DamageCameraEffects__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::DamageCameraEffects__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DamageCameraEffects__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DamageStatClient
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Dmg                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DamageStatClient(double Dmg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DamageStatClient");

	Params::SurvivalPlayer_C_DamageStatClient Parms{};

	Parms.Dmg = Dmg;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DeathEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DeathEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DeathEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DecodeCarSave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ASurvivalPlayer_C::DecodeCarSave(TArray<class FString>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DecodeCarSave");

	Params::SurvivalPlayer_C_DecodeCarSave Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	return Parms.ReturnValue;
}


// Function SurvivalPlayer.SurvivalPlayer_C.DelayedCameraMode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     CameraModeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithInterpolation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CancelDelay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DelayedCameraMode(const struct FGameplayTag& CameraModeTag, bool bWithInterpolation, double Duration, bool CancelDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DelayedCameraMode");

	Params::SurvivalPlayer_C_DelayedCameraMode Parms{};

	Parms.CameraModeTag = std::move(CameraModeTag);
	Parms.bWithInterpolation = bWithInterpolation;
	Parms.Duration = Duration;
	Parms.CancelDelay = CancelDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DelayingBattleMode
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DelayingBattleMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DelayingBattleMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DelaySoundDamage
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DelaySoundDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DelaySoundDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DeleteDynamicContainer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DeleteDynamicContainer(int32 Uid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DeleteDynamicContainer");

	Params::SurvivalPlayer_C_DeleteDynamicContainer Parms{};

	Parms.Uid = Uid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DeleteFromContainer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMPMainContainerBox_C*            MpContainerRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemsLeft                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bContainer                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bShop                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FContainerPickupsInfo            Param_ItemInfo                                         (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::DeleteFromContainer(class AMPMainContainerBox_C* MpContainerRef, int32 ItemUID, int32 ItemsLeft, bool bContainer, bool bShop, bool* bSuccess, struct FContainerPickupsInfo* Param_ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DeleteFromContainer");

	Params::SurvivalPlayer_C_DeleteFromContainer Parms{};

	Parms.MpContainerRef = MpContainerRef;
	Parms.ItemUID = ItemUID;
	Parms.ItemsLeft = ItemsLeft;
	Parms.bContainer = bContainer;
	Parms.bShop = bShop;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (Param_ItemInfo != nullptr)
		*Param_ItemInfo = std::move(Parms.Param_ItemInfo);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyAllAttachmentsInWP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWeaponPlaceholder_C*             WeaponPlaceholder                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DestroyAllAttachmentsInWP(class AWeaponPlaceholder_C* WeaponPlaceholder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyAllAttachmentsInWP");

	Params::SurvivalPlayer_C_DestroyAllAttachmentsInWP Parms{};

	Parms.WeaponPlaceholder = WeaponPlaceholder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyAllBarBind
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyAllBarBind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyAllBarBind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyAllBarBindMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyAllBarBindMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyAllBarBindMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyAllBarBindServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyAllBarBindServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyAllBarBindServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyAllBarTab
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyAllBarTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyAllBarTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyChildActors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyChildActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyChildActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyCompasMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyCompasMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyCompasMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyFakeGrenade(Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_HasGrenade                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OnlyDestroy                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DestroyFakeGrenade_Multicast_(bool Param_HasGrenade, bool OnlyDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyFakeGrenade(Multicast)");

	Params::SurvivalPlayer_C_DestroyFakeGrenade_Multicast_ Parms{};

	Parms.Param_HasGrenade = Param_HasGrenade;
	Parms.OnlyDestroy = OnlyDestroy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyFakeGrenadeServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_HasGrenade                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OnlyDestroy                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DestroyFakeGrenadeServer(bool Param_HasGrenade, bool OnlyDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyFakeGrenadeServer");

	Params::SurvivalPlayer_C_DestroyFakeGrenadeServer Parms{};

	Parms.Param_HasGrenade = Param_HasGrenade;
	Parms.OnlyDestroy = OnlyDestroy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyForkKnifeMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyForkKnifeMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyForkKnifeMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyForkKnifeServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyForkKnifeServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyForkKnifeServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyGPSMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyGPSMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyGPSMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyGPSWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWDG_Map_C*                       Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DestroyGPSWidget(class UWDG_Map_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyGPSWidget");

	Params::SurvivalPlayer_C_DestroyGPSWidget Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyInteractable
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyInteractable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyInteractableItem
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DestroyInteractableItem(class UObject* ItemRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyInteractableItem");

	Params::SurvivalPlayer_C_DestroyInteractableItem Parms{};

	Parms.ItemRef = ItemRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyPawn
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyPawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyReplicatedActor
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AA_Item_C*                        TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DestroyReplicatedActor(class AA_Item_C* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyReplicatedActor");

	Params::SurvivalPlayer_C_DestroyReplicatedActor Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DestroyWidget
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DestroyWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DestroyWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DetachCanister
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DetachCanister()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DetachCanister");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DeviceSwitcher
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Device                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DeviceSwitcher(const class FString& Device)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DeviceSwitcher");

	Params::SurvivalPlayer_C_DeviceSwitcher Parms{};

	Parms.Device = std::move(Device);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DirectionalLightSwitch
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LightName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DirectionalLightSwitch(const class FString& LightName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DirectionalLightSwitch");

	Params::SurvivalPlayer_C_DirectionalLightSwitch Parms{};

	Parms.LightName = std::move(LightName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DisableInp
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DisableInp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DisableInp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DisarmPlayer
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DisarmPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DisarmPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DistanceTraveled
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DistanceTraveled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DistanceTraveled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DLSSModeChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Param_DLSSMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DLSSModeChanged__DelegateSignature(uint8 Param_DLSSMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DLSSModeChanged__DelegateSignature");

	Params::SurvivalPlayer_C_DLSSModeChanged__DelegateSignature Parms{};

	Parms.Param_DLSSMode = Param_DLSSMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DoOnceTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DoOnceTimer(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DoOnceTimer");

	Params::SurvivalPlayer_C_DoOnceTimer Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DoubleClickItemOnGround
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::DoubleClickItemOnGround(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DoubleClickItemOnGround");

	Params::SurvivalPlayer_C_DoubleClickItemOnGround Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DropAllItems
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DropAllItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DropAllItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DropInfo_ContainerToContainer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      FromSlotRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ToSlotRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ToEmptySlot_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MovedAll_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DropInfo_ContainerToContainer(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DropInfo_ContainerToContainer");

	Params::SurvivalPlayer_C_DropInfo_ContainerToContainer Parms{};

	Parms.From = From;
	Parms.To = To;
	Parms.FromSlotRef = FromSlotRef;
	Parms.ToSlotRef = ToSlotRef;
	Parms.ToEmptySlot_ = ToEmptySlot_;
	Parms.MovedAll_ = MovedAll_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DropInfo_SplitPerformed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      SourceSlotRef                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      NewSplitSlotRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ContainerSource                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ContainerReceiver                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   SplitAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AmountRemaining                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DropInfo_SplitPerformed(class UJSI_Slot_C* SourceSlotRef, class UJSI_Slot_C* NewSplitSlotRef, class UJSIContainer_C* ContainerSource, class UJSIContainer_C* ContainerReceiver, int32 SplitAmount, int32 AmountRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DropInfo_SplitPerformed");

	Params::SurvivalPlayer_C_DropInfo_SplitPerformed Parms{};

	Parms.SourceSlotRef = SourceSlotRef;
	Parms.NewSplitSlotRef = NewSplitSlotRef;
	Parms.ContainerSource = ContainerSource;
	Parms.ContainerReceiver = ContainerReceiver;
	Parms.SplitAmount = SplitAmount;
	Parms.AmountRemaining = AmountRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DropItemBySlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DropItemBySlot(class UJSI_Slot_C* Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DropItemBySlot");

	Params::SurvivalPlayer_C_DropItemBySlot Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DropItemOnGround
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      FromSlotRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ToSlotRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ToEmptySlot_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MovedAll_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DropItemOnGround(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DropItemOnGround");

	Params::SurvivalPlayer_C_DropItemOnGround Parms{};

	Parms.From = From;
	Parms.To = To;
	Parms.FromSlotRef = FromSlotRef;
	Parms.ToSlotRef = ToSlotRef;
	Parms.ToEmptySlot_ = ToEmptySlot_;
	Parms.MovedAll_ = MovedAll_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DrunkLerpTimeline__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::DrunkLerpTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DrunkLerpTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DrunkLerpTimeline__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::DrunkLerpTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DrunkLerpTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DummyClientDied
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Killer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::DummyClientDied(double HitAngle, const struct FVector& HitLocation, class FName BoneName, class APawn* Param_Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DummyClientDied");

	Params::SurvivalPlayer_C_DummyClientDied Parms{};

	Parms.HitAngle = HitAngle;
	Parms.HitLocation = std::move(HitLocation);
	Parms.BoneName = BoneName;
	Parms.Param_Killer = Param_Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DurabilityButtonCancel__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DurabilityButtonCancel__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DurabilityButtonCancel__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DurabilityButtonFinish__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DurabilityButtonFinish__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DurabilityButtonFinish__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.DurabilityButtonStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::DurabilityButtonStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "DurabilityButtonStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EasyTrain
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::EasyTrain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EasyTrain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatAnimMu
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EatAnimMu(class FName RowName, double PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatAnimMu");

	Params::SurvivalPlayer_C_EatAnimMu Parms{};

	Parms.RowName = RowName;
	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatAnimResetMu
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::EatAnimResetMu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatAnimResetMu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatAnimResetServ
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::EatAnimResetServ()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatAnimResetServ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatAnimServ
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EatAnimServ(class FName RowName, double PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatAnimServ");

	Params::SurvivalPlayer_C_EatAnimServ Parms{};

	Parms.RowName = RowName;
	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatingFood
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FF_MenuBarShopItem               Param_SelectedSlot                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Param_ActiveTable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EatingFood(const struct FF_MenuBarShopItem& Param_SelectedSlot, class AActor* Param_ActiveTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatingFood");

	Params::SurvivalPlayer_C_EatingFood Parms{};

	Parms.Param_SelectedSlot = std::move(Param_SelectedSlot);
	Parms.Param_ActiveTable = Param_ActiveTable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatingFoodMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FF_MenuBarShopItem               Param_SelectedSlot                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Param_ActiveTable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EatingFoodMulti(const struct FF_MenuBarShopItem& Param_SelectedSlot, class AActor* Param_ActiveTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatingFoodMulti");

	Params::SurvivalPlayer_C_EatingFoodMulti Parms{};

	Parms.Param_SelectedSlot = std::move(Param_SelectedSlot);
	Parms.Param_ActiveTable = Param_ActiveTable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatingFoodMultiV
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FF_MenuBarShopItem               Param_SelectedSlot                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Param_ActiveTable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EatingFoodMultiV(const struct FF_MenuBarShopItem& Param_SelectedSlot, class AActor* Param_ActiveTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatingFoodMultiV");

	Params::SurvivalPlayer_C_EatingFoodMultiV Parms{};

	Parms.Param_SelectedSlot = std::move(Param_SelectedSlot);
	Parms.Param_ActiveTable = Param_ActiveTable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatingFoodServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FF_MenuBarShopItem               Param_SelectedSlot                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Param_ActiveTable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EatingFoodServer(const struct FF_MenuBarShopItem& Param_SelectedSlot, class AActor* Param_ActiveTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatingFoodServer");

	Params::SurvivalPlayer_C_EatingFoodServer Parms{};

	Parms.Param_SelectedSlot = std::move(Param_SelectedSlot);
	Parms.Param_ActiveTable = Param_ActiveTable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatingFoodServerV
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FF_MenuBarShopItem               Param_SelectedSlot                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Param_ActiveTable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EatingFoodServerV(const struct FF_MenuBarShopItem& Param_SelectedSlot, class AActor* Param_ActiveTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatingFoodServerV");

	Params::SurvivalPlayer_C_EatingFoodServerV Parms{};

	Parms.Param_SelectedSlot = std::move(Param_SelectedSlot);
	Parms.Param_ActiveTable = Param_ActiveTable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatingFoodV
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FF_MenuBarShopItem               Param_SelectedSlot                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Param_ActiveTable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EatingFoodV(const struct FF_MenuBarShopItem& Param_SelectedSlot, class AActor* Param_ActiveTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatingFoodV");

	Params::SurvivalPlayer_C_EatingFoodV Parms{};

	Parms.Param_SelectedSlot = std::move(Param_SelectedSlot);
	Parms.Param_ActiveTable = Param_ActiveTable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EatItemSelect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_EatPlayerInformation          S_EatPlayerInformation                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    _CanMove                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _HasStandAnimation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _WepNotHiding                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequence*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UAnimSequence* ASurvivalPlayer_C::EatItemSelect(const struct FS_EatPlayerInformation& S_EatPlayerInformation, bool* _CanMove, bool* _HasStandAnimation, bool* _WepNotHiding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EatItemSelect");

	Params::SurvivalPlayer_C_EatItemSelect Parms{};

	Parms.S_EatPlayerInformation = std::move(S_EatPlayerInformation);

	UObject::ProcessEvent(Func, &Parms);

	if (_CanMove != nullptr)
		*_CanMove = Parms._CanMove;

	if (_HasStandAnimation != nullptr)
		*_HasStandAnimation = Parms._HasStandAnimation;

	if (_WepNotHiding != nullptr)
		*_WepNotHiding = Parms._WepNotHiding;

	return Parms.ReturnValue;
}


// Function SurvivalPlayer.SurvivalPlayer_C.enableSmoothSync
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ZeroOnDisable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EnableSmoothSync(bool Enable, bool ZeroOnDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "enableSmoothSync");

	Params::SurvivalPlayer_C_EnableSmoothSync Parms{};

	Parms.Enable = Enable;
	Parms.ZeroOnDisable = ZeroOnDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EndDoorAttack
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::EndDoorAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EndDoorAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EndKnockDown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::EndKnockDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EndKnockDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EndOverlap
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::EndOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EndOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EnterToBase__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enter                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EnterToBase__DelegateSignature(bool Enter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EnterToBase__DelegateSignature");

	Params::SurvivalPlayer_C_EnterToBase__DelegateSignature Parms{};

	Parms.Enter = Enter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipArmor(Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipArmor_Multicast_(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipArmor(Multicast)");

	Params::SurvivalPlayer_C_EquipArmor_Multicast_ Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipArmor(Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipArmor_Server_(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipArmor(Server)");

	Params::SurvivalPlayer_C_EquipArmor_Server_ Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipBackpack(Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipBackpack_Multicast_(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipBackpack(Multicast)");

	Params::SurvivalPlayer_C_EquipBackpack_Multicast_ Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipBackpack(Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipBackpack_Server_(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipBackpack(Server)");

	Params::SurvivalPlayer_C_EquipBackpack_Server_ Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipCompas
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Equip                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipCompas(bool Equip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipCompas");

	Params::SurvivalPlayer_C_EquipCompas Parms{};

	Parms.Equip = Equip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipCompasServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Equip                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipCompasServer(bool Equip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipCompasServer");

	Params::SurvivalPlayer_C_EquipCompasServer Parms{};

	Parms.Equip = Equip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipGPS
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Equip                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipGPS(bool Equip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipGPS");

	Params::SurvivalPlayer_C_EquipGPS Parms{};

	Parms.Equip = Equip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipGpsServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Equip                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipGpsServer(bool Equip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipGpsServer");

	Params::SurvivalPlayer_C_EquipGpsServer Parms{};

	Parms.Equip = Equip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipHelmet(Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipHelmet_Multicast_(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipHelmet(Multicast)");

	Params::SurvivalPlayer_C_EquipHelmet_Multicast_ Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipHelmet(Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipHelmet_Server_(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipHelmet(Server)");

	Params::SurvivalPlayer_C_EquipHelmet_Server_ Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipOuterwear(multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipOuterwear_multicast_(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipOuterwear(multicast)");

	Params::SurvivalPlayer_C_EquipOuterwear_multicast_ Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipOuterwear(server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NameId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipOuterwear_server_(class FName NameId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipOuterwear(server)");

	Params::SurvivalPlayer_C_EquipOuterwear_server_ Parms{};

	Parms.NameId = NameId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipPants(multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipPants_multicast_(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipPants(multicast)");

	Params::SurvivalPlayer_C_EquipPants_multicast_ Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipPants(server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipPants_server_(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipPants(server)");

	Params::SurvivalPlayer_C_EquipPants_server_ Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipSomething
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipSomething(class UJSIContainer_C* Target, class FName RowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipSomething");

	Params::SurvivalPlayer_C_EquipSomething Parms{};

	Parms.Target = Target;
	Parms.RowName = RowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EquipThrowable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Equip                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EquipThrowable(bool Equip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EquipThrowable");

	Params::SurvivalPlayer_C_EquipThrowable Parms{};

	Parms.Equip = Equip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EventFamiliarity_Serv
// (Net, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           FamiliarityNPCName                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)

void ASurvivalPlayer_C::EventFamiliarity_Serv(const class FString& FamiliarityNPCName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EventFamiliarity_Serv");

	Params::SurvivalPlayer_C_EventFamiliarity_Serv Parms{};

	Parms.FamiliarityNPCName = std::move(FamiliarityNPCName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.EventOnIndexChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   NewIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::EventOnIndexChanged(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, int32 NewIndex, bool Rotated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "EventOnIndexChanged");

	Params::SurvivalPlayer_C_EventOnIndexChanged Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.NewIndex = NewIndex;
	Parms.Rotated = Rotated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExecutePlayer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                OtherPlayer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ExecutePlayer(class ASurvivalPlayer_C* OtherPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExecutePlayer");

	Params::SurvivalPlayer_C_ExecutePlayer Parms{};

	Parms.OtherPlayer = OtherPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExecutePlayerOnClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                OtherPlayer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ExecutePlayerOnClient(class ASurvivalPlayer_C* OtherPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExecutePlayerOnClient");

	Params::SurvivalPlayer_C_ExecutePlayerOnClient Parms{};

	Parms.OtherPlayer = OtherPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExecuteUbergraph_SurvivalPlayer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ExecuteUbergraph_SurvivalPlayer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExecuteUbergraph_SurvivalPlayer");

	Params::SurvivalPlayer_C_ExecuteUbergraph_SurvivalPlayer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExitBar
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ExitBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExitBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExitChair
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Sit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ExitChair(bool Param_Sit, class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExitChair");

	Params::SurvivalPlayer_C_ExitChair Parms{};

	Parms.Param_Sit = Param_Sit;
	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExitChairMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Sit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ExitChairMulti(bool Param_Sit, class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExitChairMulti");

	Params::SurvivalPlayer_C_ExitChairMulti Parms{};

	Parms.Param_Sit = Param_Sit;
	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExitChairServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Sit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ExitChairServer(bool Param_Sit, class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExitChairServer");

	Params::SurvivalPlayer_C_ExitChairServer Parms{};

	Parms.Param_Sit = Param_Sit;
	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExitCompasDied
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ExitCompasDied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExitCompasDied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExitGPSDied
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ExitGPSDied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExitGPSDied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExitGym
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ExitGym()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExitGym");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExitSofa
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ExitSofa()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExitSofa");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExitSofaMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ExitSofaMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExitSofaMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ExitSofaServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ExitSofaServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ExitSofaServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Fade
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bToFade                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Duration                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Fade(const bool bToFade, const double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Fade");

	Params::SurvivalPlayer_C_Fade Parms{};

	Parms.bToFade = bToFade;
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FadeFlash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FinishedFading                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FadeFlash(bool* FinishedFading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FadeFlash");

	Params::SurvivalPlayer_C_FadeFlash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FinishedFading != nullptr)
		*FinishedFading = Parms.FinishedFading;
}


// Function SurvivalPlayer.SurvivalPlayer_C.FillPockets
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_AddItems                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AddContainers                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FillPockets(bool Param_AddItems, bool AddContainers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FillPockets");

	Params::SurvivalPlayer_C_FillPockets Parms{};

	Parms.Param_AddItems = Param_AddItems;
	Parms.AddContainers = AddContainers;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FindClosestBunkerMark
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_Mark_C*                        Array_Element                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FindClosestBunkerMark(class UW_Mark_C** Array_Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FindClosestBunkerMark");

	Params::SurvivalPlayer_C_FindClosestBunkerMark Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array_Element != nullptr)
		*Array_Element = Parms.Array_Element;
}


// Function SurvivalPlayer.SurvivalPlayer_C.FindItemCountByName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ItemName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   NeededItemCount                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NeedCount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Item                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FindItemCountByName(const class FString& ItemName, int32 NeededItemCount, bool* Success, int32* NeedCount, int32* NewParam, class FString* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FindItemCountByName");

	Params::SurvivalPlayer_C_FindItemCountByName Parms{};

	Parms.ItemName = std::move(ItemName);
	Parms.NeededItemCount = NeededItemCount;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (NeedCount != nullptr)
		*NeedCount = Parms.NeedCount;

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FindItemOnGround
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AA_Item_C*                        AItem                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FindItemOnGround(class UJSI_Slot_C* Slot, class AA_Item_C** AItem, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FindItemOnGround");

	Params::SurvivalPlayer_C_FindItemOnGround Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (AItem != nullptr)
		*AItem = Parms.AItem;

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function SurvivalPlayer.SurvivalPlayer_C.FindItems (Weapons)
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFItemInfo>               ValidItems                                             (Parm, OutParm, ContainsInstancedReference)

void ASurvivalPlayer_C::FindItems__Weapons_(bool* Result, TArray<struct FFItemInfo>* ValidItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FindItems (Weapons)");

	Params::SurvivalPlayer_C_FindItems__Weapons_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (ValidItems != nullptr)
		*ValidItems = std::move(Parms.ValidItems);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FindItemsOnTheGround
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AA_Item_C*>                Param_ItemsOnGround                                    (Parm, OutParm)

void ASurvivalPlayer_C::FindItemsOnTheGround(TArray<class AA_Item_C*>* Param_ItemsOnGround)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FindItemsOnTheGround");

	Params::SurvivalPlayer_C_FindItemsOnTheGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ItemsOnGround != nullptr)
		*Param_ItemsOnGround = std::move(Parms.Param_ItemsOnGround);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FindMeshOrient
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::FindMeshOrient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FindMeshOrient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FinishRoundProgressBar
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::FinishRoundProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FinishRoundProgressBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FinishTraining
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Training                              TrainingType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FinishTraining(E_Training TrainingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FinishTraining");

	Params::SurvivalPlayer_C_FinishTraining Parms{};

	Parms.TrainingType = TrainingType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Fire(Multicast)
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBPS_DamageInfo>          HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Fire                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Fire_Multicast_(const TArray<struct FBPS_DamageInfo>& HitInfo, bool Fire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Fire(Multicast)");

	Params::SurvivalPlayer_C_Fire_Multicast_ Parms{};

	Parms.HitInfo = std::move(HitInfo);
	Parms.Fire = Fire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Fire(Server)
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBPS_DamageInfo>          HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Fire                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Fire_Server_(const TArray<struct FBPS_DamageInfo>& HitInfo, bool Fire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Fire(Server)");

	Params::SurvivalPlayer_C_Fire_Server_ Parms{};

	Parms.HitInfo = std::move(HitInfo);
	Parms.Fire = Fire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FireSound_Multicast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Fire                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FireSound_Multicast(bool Fire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FireSound_Multicast");

	Params::SurvivalPlayer_C_FireSound_Multicast Parms{};

	Parms.Fire = Fire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FireSound_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Fire                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FireSound_Server(bool Fire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FireSound_Server");

	Params::SurvivalPlayer_C_FireSound_Server Parms{};

	Parms.Fire = Fire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FlashBang
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ViewCameraOnFlash                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FlashBang(bool ViewCameraOnFlash, double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FlashBang");

	Params::SurvivalPlayer_C_FlashBang Parms{};

	Parms.ViewCameraOnFlash = ViewCameraOnFlash;
	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FlashGrenadeOffCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FlashGrenadeOffCamera(double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FlashGrenadeOffCamera");

	Params::SurvivalPlayer_C_FlashGrenadeOffCamera Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FlashGrenadeOnCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FlashGrenadeOnCamera(double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FlashGrenadeOnCamera");

	Params::SurvivalPlayer_C_FlashGrenadeOnCamera Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FlashlightController
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::FlashlightController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FlashlightController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FlashlightRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::FlashlightRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FlashlightRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FlashlightRotationServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Param_Rot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASurvivalPlayer_C::FlashlightRotationServer(const struct FRotator& Param_Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FlashlightRotationServer");

	Params::SurvivalPlayer_C_FlashlightRotationServer Parms{};

	Parms.Param_Rot = std::move(Param_Rot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FocusHighlightedActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           CheckActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_HighlightedActor                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FocusHighlightedActor(class AActor* CheckActor, class AActor** Param_HighlightedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FocusHighlightedActor");

	Params::SurvivalPlayer_C_FocusHighlightedActor Parms{};

	Parms.CheckActor = CheckActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_HighlightedActor != nullptr)
		*Param_HighlightedActor = Parms.Param_HighlightedActor;
}


// Function SurvivalPlayer.SurvivalPlayer_C.Food_Water_Timeline__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Food_Water_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Food_Water_Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Food_Water_Timeline__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Food_Water_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Food_Water_Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FootprintBeginPlay
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::FootprintBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FootprintBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FPPAimingCurveUpdate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reverse_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FPPAimingCurveUpdate(bool Reverse_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FPPAimingCurveUpdate");

	Params::SurvivalPlayer_C_FPPAimingCurveUpdate Parms{};

	Parms.Reverse_ = Reverse_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FPPAimingSwitcher
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activate_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FPPAimingSwitcher(bool Activate_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FPPAimingSwitcher");

	Params::SurvivalPlayer_C_FPPAimingSwitcher Parms{};

	Parms.Activate_ = Activate_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FPPAimingTimeline__EventHead__EventFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::FPPAimingTimeline__EventHead__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FPPAimingTimeline__EventHead__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FPPAimingTimeline__EventMesh__EventFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::FPPAimingTimeline__EventMesh__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FPPAimingTimeline__EventMesh__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FPPAimingTimeline__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::FPPAimingTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FPPAimingTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FPPAimingTimeline__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::FPPAimingTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FPPAimingTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FPPScopeCrouch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Crouch                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::FPPScopeCrouch(bool Param_Crouch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FPPScopeCrouch");

	Params::SurvivalPlayer_C_FPPScopeCrouch Parms{};

	Parms.Param_Crouch = Param_Crouch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FPSModeOff
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::FPSModeOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FPSModeOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FPSOff
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::FPSOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FPSOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FromProtectiveCaseToInventory
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::FromProtectiveCaseToInventory(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FromProtectiveCaseToInventory");

	Params::SurvivalPlayer_C_FromProtectiveCaseToInventory Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FuelButtonCancel__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::FuelButtonCancel__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FuelButtonCancel__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FuelButtonFinish__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::FuelButtonFinish__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FuelButtonFinish__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.FuelButtonStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::FuelButtonStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "FuelButtonStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GameFocusCam
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::GameFocusCam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GameFocusCam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Get Change Ammo Type Time
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Param_ChangeAmmoTypeTime                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Get_Change_Ammo_Type_Time(float* Param_ChangeAmmoTypeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Get Change Ammo Type Time");

	Params::SurvivalPlayer_C_Get_Change_Ammo_Type_Time Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ChangeAmmoTypeTime != nullptr)
		*Param_ChangeAmmoTypeTime = Parms.Param_ChangeAmmoTypeTime;
}


// Function SurvivalPlayer.SurvivalPlayer_C.Get End Gamestats
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<E_StatEndGame, int64>              EndGameStat                                            (Parm, OutParm)

void ASurvivalPlayer_C::Get_End_Gamestats(TMap<E_StatEndGame, int64>* EndGameStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Get End Gamestats");

	Params::SurvivalPlayer_C_Get_End_Gamestats Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EndGameStat != nullptr)
		*EndGameStat = std::move(Parms.EndGameStat);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Get Hit Impulse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsRadialDamage                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitImpulse                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Get_Hit_Impulse(class FName BoneName, double HitAngle, const struct FVector& HitLocation, bool Param_IsRadialDamage, struct FVector* HitImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Get Hit Impulse");

	Params::SurvivalPlayer_C_Get_Hit_Impulse Parms{};

	Parms.BoneName = BoneName;
	Parms.HitAngle = HitAngle;
	Parms.HitLocation = std::move(HitLocation);
	Parms.Param_IsRadialDamage = Param_IsRadialDamage;

	UObject::ProcessEvent(Func, &Parms);

	if (HitImpulse != nullptr)
		*HitImpulse = std::move(Parms.HitImpulse);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Get XYBy Angle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  X                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Y                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Get_XYBy_Angle(double Angle, double* X, double* Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Get XYBy Angle");

	Params::SurvivalPlayer_C_Get_XYBy_Angle Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);

	if (X != nullptr)
		*X = Parms.X;

	if (Y != nullptr)
		*Y = Parms.Y;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetActorType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ActorType                             ActorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetActorType(E_ActorType* ActorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetActorType");

	Params::SurvivalPlayer_C_GetActorType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorType != nullptr)
		*ActorType = Parms.ActorType;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetAllItemsToDrop
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDropItemEntry>           Result                                                 (Parm, OutParm, ContainsInstancedReference)

void ASurvivalPlayer_C::GetAllItemsToDrop(TArray<struct FDropItemEntry>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetAllItemsToDrop");

	Params::SurvivalPlayer_C_GetAllItemsToDrop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetCameraOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          PelvisOffset                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InterpOffset                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetCameraOffset(struct FVector* PelvisOffset, struct FVector* InterpOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetCameraOffset");

	Params::SurvivalPlayer_C_GetCameraOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PelvisOffset != nullptr)
		*PelvisOffset = std::move(Parms.PelvisOffset);

	if (InterpOffset != nullptr)
		*InterpOffset = std::move(Parms.InterpOffset);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetCarsStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Stats                                                  (Parm, OutParm)

void ASurvivalPlayer_C::GetCarsStat(TArray<class FString>* Stats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetCarsStat");

	Params::SurvivalPlayer_C_GetCarsStat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stats != nullptr)
		*Stats = std::move(Parms.Stats);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetContainerByUID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ContainerUID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetContainerByUID(int32 ContainerUID, bool* Result, class UJSIContainer_C** Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetContainerByUID");

	Params::SurvivalPlayer_C_GetContainerByUID Parms{};

	Parms.ContainerUID = ContainerUID;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Container != nullptr)
		*Container = Parms.Container;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetDamageLogic
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Health                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBPC_PlayerStatsComponent_C*      StatComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DDLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontAnimate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          HitFrom                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    DDLocal                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetDamageLogic(const double Health, class UBPC_PlayerStatsComponent_C* StatComp, const struct FVector& DDLocation, class FName BoneName, const struct FVector& HitLocation, bool DontAnimate, class UObject* HitFrom, bool DDLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetDamageLogic");

	Params::SurvivalPlayer_C_GetDamageLogic Parms{};

	Parms.Health = Health;
	Parms.StatComp = StatComp;
	Parms.DDLocation = std::move(DDLocation);
	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);
	Parms.DontAnimate = DontAnimate;
	Parms.HitFrom = HitFrom;
	Parms.DDLocal = DDLocal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetDeadBodyItems
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::GetDeadBodyItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetDeadBodyItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetDefaultCameraTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     CameraModeTag                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetDefaultCameraTag(struct FGameplayTag* CameraModeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetDefaultCameraTag");

	Params::SurvivalPlayer_C_GetDefaultCameraTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraModeTag != nullptr)
		*CameraModeTag = std::move(Parms.CameraModeTag);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetEquipInfoBySlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EquipmentSlot                           Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetEquipInfoBySlot(EquipmentSlot Slot, bool* Equipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetEquipInfoBySlot");

	Params::SurvivalPlayer_C_GetEquipInfoBySlot Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (Equipped != nullptr)
		*Equipped = Parms.Equipped;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetEquipmentContainer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetEquipmentContainer(int32 ItemId, bool* Result, class UJSIContainer_C** Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetEquipmentContainer");

	Params::SurvivalPlayer_C_GetEquipmentContainer Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Container != nullptr)
		*Container = Parms.Container;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetEquipmentTier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EquipmentSlot                           EquipmentSlot                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_EquipmentTier                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetEquipmentTier(EquipmentSlot EquipmentSlot, int32* Param_EquipmentTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetEquipmentTier");

	Params::SurvivalPlayer_C_GetEquipmentTier Parms{};

	Parms.EquipmentSlot = EquipmentSlot;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_EquipmentTier != nullptr)
		*Param_EquipmentTier = Parms.Param_EquipmentTier;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetEquipSlotByCID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   CID                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EquipmentSlot                           Slot                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetEquipSlotByCID(int32 CID, EquipmentSlot* Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetEquipSlotByCID");

	Params::SurvivalPlayer_C_GetEquipSlotByCID Parms{};

	Parms.CID = CID;

	UObject::ProcessEvent(Func, &Parms);

	if (Slot != nullptr)
		*Slot = Parms.Slot;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetEquipStatusBySlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPlayerSlots                            Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetEquipStatusBySlot(EPlayerSlots Slot, bool* Equipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetEquipStatusBySlot");

	Params::SurvivalPlayer_C_GetEquipStatusBySlot Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (Equipped != nullptr)
		*Equipped = Parms.Equipped;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetGPSPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ASurvivalPlayer_C::GetGPSPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetGPSPage");

	Params::SurvivalPlayer_C_GetGPSPage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetInventoryItemByUID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Container                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FContainerPickupsInfo            Item                                                   (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetInventoryItemByUID(int32 ItemUID, bool* Result, bool* Container, struct FContainerPickupsInfo* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetInventoryItemByUID");

	Params::SurvivalPlayer_C_GetInventoryItemByUID Parms{};

	Parms.ItemUID = ItemUID;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Container != nullptr)
		*Container = Parms.Container;

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetItemByID (Constant)
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       Item                                                   (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetItemByID__Constant_(int32 ItemId, bool* Result, struct FFItemInfo* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetItemByID (Constant)");

	Params::SurvivalPlayer_C_GetItemByID__Constant_ Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Item != nullptr)
		*Item = std::move(Parms.Item);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetItemByName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnedCount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetItemByName(const class FString& Param_Name, int32 Count, int32* ReturnedCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetItemByName");

	Params::SurvivalPlayer_C_GetItemByName Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnedCount != nullptr)
		*ReturnedCount = Parms.ReturnedCount;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetItemCountByJSItemType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJSItemType                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnedCount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetItemCountByJSItemType(EJSItemType Type, int32* ReturnedCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetItemCountByJSItemType");

	Params::SurvivalPlayer_C_GetItemCountByJSItemType Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnedCount != nullptr)
		*ReturnedCount = Parms.ReturnedCount;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetItemCountByName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   ReturnedCount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetItemCountByName(const class FString& Param_Name, int32* ReturnedCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetItemCountByName");

	Params::SurvivalPlayer_C_GetItemCountByName Parms{};

	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnedCount != nullptr)
		*ReturnedCount = Parms.ReturnedCount;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetItemCountByType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemType                               Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnedCount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetItemCountByType(EItemType Type, int32* ReturnedCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetItemCountByType");

	Params::SurvivalPlayer_C_GetItemCountByType Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnedCount != nullptr)
		*ReturnedCount = Parms.ReturnedCount;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetItemsByType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJSItemType                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   Items                                                  (Parm, OutParm)
// TArray<int32>                           Counts                                                 (Parm, OutParm)

void ASurvivalPlayer_C::GetItemsByType(EJSItemType Type, TArray<class FString>* Items, TArray<int32>* Counts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetItemsByType");

	Params::SurvivalPlayer_C_GetItemsByType Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Items != nullptr)
		*Items = std::move(Parms.Items);

	if (Counts != nullptr)
		*Counts = std::move(Parms.Counts);
}


// Function SurvivalPlayer.SurvivalPlayer_C.getItemsInventory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FContainerPickupsInfo>    Param_ContainerItems                                   (Parm, OutParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    Param_ContainersData                                   (Parm, OutParm, ContainsInstancedReference)

void ASurvivalPlayer_C::GetItemsInventory(TArray<struct FContainerPickupsInfo>* Param_ContainerItems, TArray<struct FContainerPickupsInfo>* Param_ContainersData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "getItemsInventory");

	Params::SurvivalPlayer_C_GetItemsInventory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ContainerItems != nullptr)
		*Param_ContainerItems = std::move(Parms.Param_ContainerItems);

	if (Param_ContainersData != nullptr)
		*Param_ContainersData = std::move(Parms.Param_ContainersData);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetItemWeight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InputWeight                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Weight                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetItemWeight(class FName Param_Name, double InputWeight, double* Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetItemWeight");

	Params::SurvivalPlayer_C_GetItemWeight Parms{};

	Parms.Param_Name = Param_Name;
	Parms.InputWeight = InputWeight;

	UObject::ProcessEvent(Func, &Parms);

	if (Weight != nullptr)
		*Weight = Parms.Weight;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetKnockdownTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  KnockdownTime                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetKnockdownTime(double* KnockdownTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetKnockdownTime");

	Params::SurvivalPlayer_C_GetKnockdownTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KnockdownTime != nullptr)
		*KnockdownTime = Parms.KnockdownTime;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetMeshOffset
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::GetMeshOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetMeshOffset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetNames_CheckBlendShapes
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::GetNames_CheckBlendShapes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetNames_CheckBlendShapes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetResLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           StartPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Vector                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetResLocation(class AActor* StartPoint, struct FVector* Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetResLocation");

	Params::SurvivalPlayer_C_GetResLocation Parms{};

	Parms.StartPoint = StartPoint;

	UObject::ProcessEvent(Func, &Parms);

	if (Vector != nullptr)
		*Vector = std::move(Parms.Vector);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetReviveTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Param_ReviveTime                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetReviveTime(double* Param_ReviveTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetReviveTime");

	Params::SurvivalPlayer_C_GetReviveTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_ReviveTime != nullptr)
		*Param_ReviveTime = Parms.Param_ReviveTime;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetSaveCharactersServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetSaveCharactersServer(class ASurvivalPlayer_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetSaveCharactersServer");

	Params::SurvivalPlayer_C_GetSaveCharactersServer Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetStartItems
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     Param_StartItems                                       (Parm, OutParm)

void ASurvivalPlayer_C::GetStartItems(TArray<class FName>* Param_StartItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetStartItems");

	Params::SurvivalPlayer_C_GetStartItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_StartItems != nullptr)
		*Param_StartItems = std::move(Parms.Param_StartItems);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetStatsComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBPC_PlayerStatsComponent_C*      PlayerStats                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetStatsComponent(class UBPC_PlayerStatsComponent_C** PlayerStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetStatsComponent");

	Params::SurvivalPlayer_C_GetStatsComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerStats != nullptr)
		*PlayerStats = Parms.PlayerStats;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetSurrenderTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Param_SurrenderTime                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetSurrenderTime(float* Param_SurrenderTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetSurrenderTime");

	Params::SurvivalPlayer_C_GetSurrenderTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SurrenderTime != nullptr)
		*Param_SurrenderTime = Parms.Param_SurrenderTime;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetSurvController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvPC_C*                        Param_SurvPC                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetSurvController(class ASurvPC_C** Param_SurvPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetSurvController");

	Params::SurvivalPlayer_C_GetSurvController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SurvPC != nullptr)
		*Param_SurvPC = Parms.Param_SurvPC;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetTotalMoneyCount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnedCount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetTotalMoneyCount(int32* ReturnedCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetTotalMoneyCount");

	Params::SurvivalPlayer_C_GetTotalMoneyCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnedCount != nullptr)
		*ReturnedCount = Parms.ReturnedCount;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetUltraSky
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AUltra_Dynamic_Sky_C*             Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetUltraSky(class AUltra_Dynamic_Sky_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetUltraSky");

	Params::SurvivalPlayer_C_GetUltraSky Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetWeaponCameraTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FGameplayTag ASurvivalPlayer_C::GetWeaponCameraTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetWeaponCameraTag");

	Params::SurvivalPlayer_C_GetWeaponCameraTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GetWeaponNamesFromSlots
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PrimaryWeaponName                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SecondaryWeaponName                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             PistolWeaponName                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             MeleeWeaponName                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GetWeaponNamesFromSlots(class FName* PrimaryWeaponName, class FName* SecondaryWeaponName, class FName* PistolWeaponName, class FName* MeleeWeaponName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GetWeaponNamesFromSlots");

	Params::SurvivalPlayer_C_GetWeaponNamesFromSlots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PrimaryWeaponName != nullptr)
		*PrimaryWeaponName = Parms.PrimaryWeaponName;

	if (SecondaryWeaponName != nullptr)
		*SecondaryWeaponName = Parms.SecondaryWeaponName;

	if (PistolWeaponName != nullptr)
		*PistolWeaponName = Parms.PistolWeaponName;

	if (MeleeWeaponName != nullptr)
		*MeleeWeaponName = Parms.MeleeWeaponName;
}


// Function SurvivalPlayer.SurvivalPlayer_C.GI_TileLoaded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TileName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GI_TileLoaded(class FName TileName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GI_TileLoaded");

	Params::SurvivalPlayer_C_GI_TileLoaded Parms{};

	Parms.TileName = TileName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GI_TileUnloaded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TileName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GI_TileUnloaded(class FName TileName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GI_TileUnloaded");

	Params::SurvivalPlayer_C_GI_TileUnloaded Parms{};

	Parms.TileName = TileName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GooutWater
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::GooutWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GooutWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GotoWater
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::GotoWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GotoWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GPSEquipFP
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::GPSEquipFP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GPSEquipFP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GPSEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::GPSEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GPSEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GrenadeAdd
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_WeaponName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GrenadeAdd(const class FString& Param_WeaponName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GrenadeAdd");

	Params::SurvivalPlayer_C_GrenadeAdd Parms{};

	Parms.Param_WeaponName = std::move(Param_WeaponName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.grenadedrop
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_WeaponName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Grenadedrop(const class FString& Param_WeaponName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "grenadedrop");

	Params::SurvivalPlayer_C_Grenadedrop Parms{};

	Parms.Param_WeaponName = std::move(Param_WeaponName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GrenadeInput
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pressed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GrenadeInput(bool Pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GrenadeInput");

	Params::SurvivalPlayer_C_GrenadeInput Parms{};

	Parms.Pressed = Pressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GymMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Sit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASurvivalPlayer_C*                Surv                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_TrainingApp_C*                Train                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::GymMulti(bool Param_Sit, class ASurvivalPlayer_C* Surv, class ABP_TrainingApp_C* Train)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GymMulti");

	Params::SurvivalPlayer_C_GymMulti Parms{};

	Parms.Param_Sit = Param_Sit;
	Parms.Surv = Surv;
	Parms.Train = Train;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.GymTrainTravel
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::GymTrainTravel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "GymTrainTravel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HandleContainerEvents
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HandleContainerEvents(class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HandleContainerEvents");

	Params::SurvivalPlayer_C_HandleContainerEvents Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HandleJSContainerEvents
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HandleJSContainerEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HandleJSContainerEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HandleJSIEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HandleJSIEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HandleJSIEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HandleJSIEventsOnGround
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HandleJSIEventsOnGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HandleJSIEventsOnGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HandleLootBoxInventoryItems
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiverRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HandleLootBoxInventoryItems(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HandleLootBoxInventoryItems");

	Params::SurvivalPlayer_C_HandleLootBoxInventoryItems Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.DroppedSlotRef = DroppedSlotRef;
	Parms.SlotReceiverRef = SlotReceiverRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HandleMPCToEquipment
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HandleMPCToEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HandleMPCToEquipment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HandleShopJSIContEvents
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HandleShopJSIContEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HandleShopJSIContEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HandleTableJSIContEvents
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HandleTableJSIContEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HandleTableJSIContEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HasCamp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Has                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HasCamp(bool* Has)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HasCamp");

	Params::SurvivalPlayer_C_HasCamp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Has != nullptr)
		*Has = Parms.Has;
}


// Function SurvivalPlayer.SurvivalPlayer_C.HasCanister
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_HasCanister                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HasCanister(bool* Param_HasCanister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HasCanister");

	Params::SurvivalPlayer_C_HasCanister Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_HasCanister != nullptr)
		*Param_HasCanister = Parms.Param_HasCanister;
}


// Function SurvivalPlayer.SurvivalPlayer_C.HasGrenade
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Has                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HasGrenade(bool* Has)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HasGrenade");

	Params::SurvivalPlayer_C_HasGrenade Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Has != nullptr)
		*Has = Parms.Has;
}


// Function SurvivalPlayer.SurvivalPlayer_C.HasItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ItemName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Has                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HasItem(const class FString& ItemName, bool* Has)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HasItem");

	Params::SurvivalPlayer_C_HasItem Parms{};

	Parms.ItemName = std::move(ItemName);

	UObject::ProcessEvent(Func, &Parms);

	if (Has != nullptr)
		*Has = Parms.Has;
}


// Function SurvivalPlayer.SurvivalPlayer_C.HasWeaponOrBroken
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Bonus                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HasWeaponOrBroken(bool* Bonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HasWeaponOrBroken");

	Params::SurvivalPlayer_C_HasWeaponOrBroken Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bonus != nullptr)
		*Bonus = Parms.Bonus;
}


// Function SurvivalPlayer.SurvivalPlayer_C.HealPPEffect
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HealPPEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HealPPEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HealPPEffectTimeline__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::HealPPEffectTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HealPPEffectTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HealPPEffectTimeline__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::HealPPEffectTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HealPPEffectTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HeatUpBonfire
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HeatUpBonfire(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HeatUpBonfire");

	Params::SurvivalPlayer_C_HeatUpBonfire Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HiddenInGameCheck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HiddenInGame                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_LootPointOpened                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLockMovement                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Crawling                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HiddenInGameCheck(bool HiddenInGame, bool Param_LootPointOpened, bool bLockMovement, bool Param_Crawling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HiddenInGameCheck");

	Params::SurvivalPlayer_C_HiddenInGameCheck Parms{};

	Parms.HiddenInGame = HiddenInGame;
	Parms.Param_LootPointOpened = Param_LootPointOpened;
	Parms.bLockMovement = bLockMovement;
	Parms.Param_Crawling = Param_Crawling;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HideCompas
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HideCompas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HideCompas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HideHairUnderHelmet
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HideHairUnderHelmet(bool Hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HideHairUnderHelmet");

	Params::SurvivalPlayer_C_HideHairUnderHelmet Parms{};

	Parms.Hide = Hide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HideMeshesDuringAim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewOwnerNoSee                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HideMeshesDuringAim(bool bNewOwnerNoSee)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HideMeshesDuringAim");

	Params::SurvivalPlayer_C_HideMeshesDuringAim Parms{};

	Parms.bNewOwnerNoSee = bNewOwnerNoSee;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HidePlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_PlayerHided                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HidePlayer(bool Param_PlayerHided)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HidePlayer");

	Params::SurvivalPlayer_C_HidePlayer Parms{};

	Parms.Param_PlayerHided = Param_PlayerHided;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HidePlayerMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_PlayerHided                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HidePlayerMulticast(bool Param_PlayerHided)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HidePlayerMulticast");

	Params::SurvivalPlayer_C_HidePlayerMulticast Parms{};

	Parms.Param_PlayerHided = Param_PlayerHided;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HidePlayerServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_PlayerHided                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HidePlayerServer(bool Param_PlayerHided)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HidePlayerServer");

	Params::SurvivalPlayer_C_HidePlayerServer Parms{};

	Parms.Param_PlayerHided = Param_PlayerHided;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HidePlayerWithDelay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    GPS_                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HidePlayerWithDelay(bool GPS_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HidePlayerWithDelay");

	Params::SurvivalPlayer_C_HidePlayerWithDelay Parms{};

	Parms.GPS_ = GPS_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HideRoundProgressBar
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HideRoundProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HideRoundProgressBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HideWeapons
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HideWeapons(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HideWeapons");

	Params::SurvivalPlayer_C_HideWeapons Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HighlightActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HighlightActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HighlightActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HitMarkerUI
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Killed                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HitMarkerUI(bool Killed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HitMarkerUI");

	Params::SurvivalPlayer_C_HitMarkerUI Parms{};

	Parms.Killed = Killed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HitPercentUpdate
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit_reg                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HitPercentUpdate(bool Hit_reg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HitPercentUpdate");

	Params::SurvivalPlayer_C_HitPercentUpdate Parms{};

	Parms.Hit_reg = Hit_reg;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HouseBoxEntered
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHouseBox_C*                      HouseBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HouseBoxEntered(class AHouseBox_C* HouseBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HouseBoxEntered");

	Params::SurvivalPlayer_C_HouseBoxEntered Parms{};

	Parms.HouseBox = HouseBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HouseBoxLeaved
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHouseBox_C*                      HouseBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HouseBoxLeaved(class AHouseBox_C* HouseBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HouseBoxLeaved");

	Params::SurvivalPlayer_C_HouseBoxLeaved Parms{};

	Parms.HouseBox = HouseBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HouseEnter
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HouseEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HouseEnter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HouseEntered
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHouseBox_C*                      NewBox                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HouseEntered(class AHouseBox_C* NewBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HouseEntered");

	Params::SurvivalPlayer_C_HouseEntered Parms{};

	Parms.NewBox = NewBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HouseEnterEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HouseEnterEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HouseEnterEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HouseExit
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HouseExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HouseExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HouseLeaved
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHouseBox_C*                      HouseBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::HouseLeaved(class AHouseBox_C* HouseBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HouseLeaved");

	Params::SurvivalPlayer_C_HouseLeaved Parms{};

	Parms.HouseBox = HouseBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.HouseLeaveEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::HouseLeaveEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "HouseLeaveEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.IfShopClose
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::IfShopClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IfShopClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InCarEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_InCar                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InCarEvent__DelegateSignature(bool Param_InCar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InCarEvent__DelegateSignature");

	Params::SurvivalPlayer_C_InCarEvent__DelegateSignature Parms{};

	Parms.Param_InCar = Param_InCar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InclineEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InclineEvent(double Axis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InclineEvent");

	Params::SurvivalPlayer_C_InclineEvent Parms{};

	Parms.Axis = Axis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.IncrDeathCounter
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::IncrDeathCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IncrDeathCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.IncrFragCounter
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::IncrFragCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IncrFragCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.IncrKillCounter
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::IncrKillCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IncrKillCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InFlatSurface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InFlatSurface(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InFlatSurface");

	Params::SurvivalPlayer_C_InFlatSurface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function SurvivalPlayer.SurvivalPlayer_C.InfoAboutDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InfoAboutDamage(class AActor* Target, class FName BoneName, double Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InfoAboutDamage");

	Params::SurvivalPlayer_C_InfoAboutDamage Parms{};

	Parms.Target = Target;
	Parms.BoneName = BoneName;
	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InfoAboutDamageOwning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RealDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHeadshot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTargetDead                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InfoAboutDamageOwning(double RealDamage, bool IsHeadshot, bool IsTargetDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InfoAboutDamageOwning");

	Params::SurvivalPlayer_C_InfoAboutDamageOwning Parms{};

	Parms.RealDamage = RealDamage;
	Parms.IsHeadshot = IsHeadshot;
	Parms.IsTargetDead = IsTargetDead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitialHideWeaponMotionBlur
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InitialHideWeaponMotionBlur()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitialHideWeaponMotionBlur");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitializeFlash
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSFlashInstance                  Instance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InitializeFlash(const struct FSFlashInstance& Instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitializeFlash");

	Params::SurvivalPlayer_C_InitializeFlash Parms{};

	Parms.Instance = std::move(Instance);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitializeWoundComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MeshType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstanceDynamic*> OriginalMaterials                                      (Parm, OutParm)

void ASurvivalPlayer_C::InitializeWoundComponent(int32 MeshType, TArray<class UMaterialInstanceDynamic*>* OriginalMaterials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitializeWoundComponent");

	Params::SurvivalPlayer_C_InitializeWoundComponent Parms{};

	Parms.MeshType = MeshType;

	UObject::ProcessEvent(Func, &Parms);

	if (OriginalMaterials != nullptr)
		*OriginalMaterials = std::move(Parms.OriginalMaterials);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitLocalPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InitLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitLocalPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitUnlocalEquipment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InitUnlocalEquipment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitUnlocalEquipment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitVars
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InitVars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitVars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitVOIP
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InitVOIP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitVOIP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitWeaponPlaceholder
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Primary                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// EPlayerSlots                            Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InitWeaponPlaceholder(bool Primary, const struct FFItemInfo& FItemInfo, EPlayerSlots Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitWeaponPlaceholder");

	Params::SurvivalPlayer_C_InitWeaponPlaceholder Parms{};

	Parms.Primary = Primary;
	Parms.FItemInfo = std::move(FItemInfo);
	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitWeaponPlaceholders
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InitWeaponPlaceholders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitWeaponPlaceholders");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitWP_Multicast
// (Net, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Primary                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// EPlayerSlots                            Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InitWP_Multicast(bool Primary, const struct FFItemInfo& FItemInfo, EPlayerSlots Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitWP_Multicast");

	Params::SurvivalPlayer_C_InitWP_Multicast Parms{};

	Parms.Primary = Primary;
	Parms.FItemInfo = std::move(FItemInfo);
	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InitWP_Server
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Primary                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// EPlayerSlots                            Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InitWP_Server(bool Primary, const struct FFItemInfo& FItemInfo, EPlayerSlots Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InitWP_Server");

	Params::SurvivalPlayer_C_InitWP_Server Parms{};

	Parms.Primary = Primary;
	Parms.FItemInfo = std::move(FItemInfo);
	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_BroadcastToRadio_K2Node_InputActionEvent_28
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_BroadcastToRadio_K2Node_InputActionEvent_28(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_BroadcastToRadio_K2Node_InputActionEvent_28");

	Params::SurvivalPlayer_C_InpActEvt_BroadcastToRadio_K2Node_InputActionEvent_28 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_ChangeSitToDriver_K2Node_InputActionEvent_22
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_ChangeSitToDriver_K2Node_InputActionEvent_22(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_ChangeSitToDriver_K2Node_InputActionEvent_22");

	Params::SurvivalPlayer_C_InpActEvt_ChangeSitToDriver_K2Node_InputActionEvent_22 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_ChangeSitToPassengerLB_K2Node_InputActionEvent_23
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_ChangeSitToPassengerLB_K2Node_InputActionEvent_23(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_ChangeSitToPassengerLB_K2Node_InputActionEvent_23");

	Params::SurvivalPlayer_C_InpActEvt_ChangeSitToPassengerLB_K2Node_InputActionEvent_23 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_ChangeSitToPassengerRB_K2Node_InputActionEvent_24
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_ChangeSitToPassengerRB_K2Node_InputActionEvent_24(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_ChangeSitToPassengerRB_K2Node_InputActionEvent_24");

	Params::SurvivalPlayer_C_InpActEvt_ChangeSitToPassengerRB_K2Node_InputActionEvent_24 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_ChangeSitToPassengerRF_K2Node_InputActionEvent_25
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_ChangeSitToPassengerRF_K2Node_InputActionEvent_25(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_ChangeSitToPassengerRF_K2Node_InputActionEvent_25");

	Params::SurvivalPlayer_C_InpActEvt_ChangeSitToPassengerRF_K2Node_InputActionEvent_25 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_Crouch_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_Crouch_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_Crouch_K2Node_InputActionEvent_0");

	Params::SurvivalPlayer_C_InpActEvt_Crouch_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_EquipGPS_K2Node_InputActionEvent_27
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_EquipGPS_K2Node_InputActionEvent_27(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_EquipGPS_K2Node_InputActionEvent_27");

	Params::SurvivalPlayer_C_InpActEvt_EquipGPS_K2Node_InputActionEvent_27 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_FreeLook_K2Node_InputActionEvent_18
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_FreeLook_K2Node_InputActionEvent_18(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_FreeLook_K2Node_InputActionEvent_18");

	Params::SurvivalPlayer_C_InpActEvt_FreeLook_K2Node_InputActionEvent_18 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_FreeLook_K2Node_InputActionEvent_19
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_FreeLook_K2Node_InputActionEvent_19(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_FreeLook_K2Node_InputActionEvent_19");

	Params::SurvivalPlayer_C_InpActEvt_FreeLook_K2Node_InputActionEvent_19 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_Jump_K2Node_InputActionEvent_16
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_Jump_K2Node_InputActionEvent_16(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_Jump_K2Node_InputActionEvent_16");

	Params::SurvivalPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_16 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_Jump_K2Node_InputActionEvent_17
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_Jump_K2Node_InputActionEvent_17(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_Jump_K2Node_InputActionEvent_17");

	Params::SurvivalPlayer_C_InpActEvt_Jump_K2Node_InputActionEvent_17 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");

	Params::SurvivalPlayer_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1");

	Params::SurvivalPlayer_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_OpenInventory_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_OpenInventory_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_OpenInventory_K2Node_InputActionEvent_1");

	Params::SurvivalPlayer_C_InpActEvt_OpenInventory_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_OpenJournal_K2Node_InputActionEvent_26
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_OpenJournal_K2Node_InputActionEvent_26(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_OpenJournal_K2Node_InputActionEvent_26");

	Params::SurvivalPlayer_C_InpActEvt_OpenJournal_K2Node_InputActionEvent_26 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_PlayerAim_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_PlayerAim_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_PlayerAim_K2Node_InputActionEvent_4");

	Params::SurvivalPlayer_C_InpActEvt_PlayerAim_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_PlayerAim_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_PlayerAim_K2Node_InputActionEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_PlayerAim_K2Node_InputActionEvent_5");

	Params::SurvivalPlayer_C_InpActEvt_PlayerAim_K2Node_InputActionEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_PlayerFire_K2Node_InputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_PlayerFire_K2Node_InputActionEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_PlayerFire_K2Node_InputActionEvent_6");

	Params::SurvivalPlayer_C_InpActEvt_PlayerFire_K2Node_InputActionEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_PlayerFire_K2Node_InputActionEvent_7
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_PlayerFire_K2Node_InputActionEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_PlayerFire_K2Node_InputActionEvent_7");

	Params::SurvivalPlayer_C_InpActEvt_PlayerFire_K2Node_InputActionEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_PlayerReload_K2Node_InputActionEvent_10
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_PlayerReload_K2Node_InputActionEvent_10(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_PlayerReload_K2Node_InputActionEvent_10");

	Params::SurvivalPlayer_C_InpActEvt_PlayerReload_K2Node_InputActionEvent_10 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_PlayerReload_K2Node_InputActionEvent_11
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_PlayerReload_K2Node_InputActionEvent_11(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_PlayerReload_K2Node_InputActionEvent_11");

	Params::SurvivalPlayer_C_InpActEvt_PlayerReload_K2Node_InputActionEvent_11 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_Sprint_K2Node_InputActionEvent_8
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_Sprint_K2Node_InputActionEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_Sprint_K2Node_InputActionEvent_8");

	Params::SurvivalPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_Sprint_K2Node_InputActionEvent_9
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_Sprint_K2Node_InputActionEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_Sprint_K2Node_InputActionEvent_9");

	Params::SurvivalPlayer_C_InpActEvt_Sprint_K2Node_InputActionEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_TurnLights_K2Node_InputActionEvent_29
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_TurnLights_K2Node_InputActionEvent_29(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_TurnLights_K2Node_InputActionEvent_29");

	Params::SurvivalPlayer_C_InpActEvt_TurnLights_K2Node_InputActionEvent_29 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_Unarm_K2Node_InputActionEvent_15
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_Unarm_K2Node_InputActionEvent_15(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_Unarm_K2Node_InputActionEvent_15");

	Params::SurvivalPlayer_C_InpActEvt_Unarm_K2Node_InputActionEvent_15 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Interact_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::Interact_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Interact_K2Node_InputActionEvent_2");

	Params::SurvivalPlayer_C_Interact_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Interact_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::Interact_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Interact_K2Node_InputActionEvent_3");

	Params::SurvivalPlayer_C_Interact_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_Walk_K2Node_InputActionEvent_20
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_Walk_K2Node_InputActionEvent_20(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_Walk_K2Node_InputActionEvent_20");

	Params::SurvivalPlayer_C_InpActEvt_Walk_K2Node_InputActionEvent_20 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_Walk_K2Node_InputActionEvent_21
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_Walk_K2Node_InputActionEvent_21(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_Walk_K2Node_InputActionEvent_21");

	Params::SurvivalPlayer_C_InpActEvt_Walk_K2Node_InputActionEvent_21 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_WeaponSlot1_K2Node_InputActionEvent_12
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_WeaponSlot1_K2Node_InputActionEvent_12(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_WeaponSlot1_K2Node_InputActionEvent_12");

	Params::SurvivalPlayer_C_InpActEvt_WeaponSlot1_K2Node_InputActionEvent_12 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_WeaponSlot2_K2Node_InputActionEvent_13
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_WeaponSlot2_K2Node_InputActionEvent_13(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_WeaponSlot2_K2Node_InputActionEvent_13");

	Params::SurvivalPlayer_C_InpActEvt_WeaponSlot2_K2Node_InputActionEvent_13 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpActEvt_WeaponSlot3_K2Node_InputActionEvent_14
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpActEvt_WeaponSlot3_K2Node_InputActionEvent_14(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpActEvt_WeaponSlot3_K2Node_InputActionEvent_14");

	Params::SurvivalPlayer_C_InpActEvt_WeaponSlot3_K2Node_InputActionEvent_14 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_1");

	Params::SurvivalPlayer_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2");

	Params::SurvivalPlayer_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_3
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpAxisEvt_MoveRight_K2Node_InputAxisEvent_3(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpAxisEvt_MoveRight_K2Node_InputAxisEvent_3");

	Params::SurvivalPlayer_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_3 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InpAxisEvt_Turn_K2Node_InputAxisEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InpAxisEvt_Turn_K2Node_InputAxisEvent_0");

	Params::SurvivalPlayer_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Interact(bool NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Interact");

	Params::SurvivalPlayer_C_Interact Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InteractShop
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InteractShop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InteractShop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InteractShopEnd
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InteractShopEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InteractShopEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InteractShopPulse
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InteractShopPulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InteractShopPulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InvalidateDoOnce
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InvalidateDoOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InvalidateDoOnce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InventoryInitedMult
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InventoryInitedMult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InventoryInitedMult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InventoryInitedServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::InventoryInitedServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InventoryInitedServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InventoryOpenAnimEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InventoryOpenAnimEvent(bool Open_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InventoryOpenAnimEvent");

	Params::SurvivalPlayer_C_InventoryOpenAnimEvent Parms{};

	Parms.Open_ = Open_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InventoryOpenAnimEventMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InventoryOpenAnimEventMulti(bool Open_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InventoryOpenAnimEventMulti");

	Params::SurvivalPlayer_C_InventoryOpenAnimEventMulti Parms{};

	Parms.Open_ = Open_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InventoryOpenAnimEventServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InventoryOpenAnimEventServer(bool Open_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InventoryOpenAnimEventServer");

	Params::SurvivalPlayer_C_InventoryOpenAnimEventServer Parms{};

	Parms.Open_ = Open_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InventoryOpenTimeline__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::InventoryOpenTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InventoryOpenTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InventoryOpenTimeline__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::InventoryOpenTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InventoryOpenTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InvSoundMulti
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           AttachComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InvSoundMulti(bool Open_, class USkeletalMeshComponent* AttachComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InvSoundMulti");

	Params::SurvivalPlayer_C_InvSoundMulti Parms{};

	Parms.Open_ = Open_;
	Parms.AttachComponent = AttachComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.InvSoundServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           AttachComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::InvSoundServer(bool Open_, class USkeletalMeshComponent* AttachComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "InvSoundServer");

	Params::SurvivalPlayer_C_InvSoundServer Parms{};

	Parms.Open_ = Open_;
	Parms.AttachComponent = AttachComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsBandit?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsBandit_                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::IsBandit_(bool* Param_IsBandit_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsBandit?");

	Params::SurvivalPlayer_C_IsBandit_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsBandit_ != nullptr)
		*Param_IsBandit_ = Parms.Param_IsBandit_;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsBeginnerUpdate
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::IsBeginnerUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsBeginnerUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsDead?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsDead_                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::IsDead_(bool* Param_IsDead_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsDead?");

	Params::SurvivalPlayer_C_IsDead_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsDead_ != nullptr)
		*Param_IsDead_ = Parms.Param_IsDead_;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsEnoughMoney
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Sum                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ASurvivalPlayer_C::IsEnoughMoney(int32 Sum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsEnoughMoney");

	Params::SurvivalPlayer_C_IsEnoughMoney Parms{};

	Parms.Sum = Sum;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsEquippedByUID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ASurvivalPlayer_C::IsEquippedByUID(int32 ItemUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsEquippedByUID");

	Params::SurvivalPlayer_C_IsEquippedByUID Parms{};

	Parms.ItemUID = ItemUID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsHemorrhage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   NumberOfHits                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    RandomApply                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::IsHemorrhage(int32 NumberOfHits, class AActor* DamageCauser, bool RandomApply, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsHemorrhage");

	Params::SurvivalPlayer_C_IsHemorrhage Parms{};

	Parms.NumberOfHits = NumberOfHits;
	Parms.DamageCauser = DamageCauser;
	Parms.RandomApply = RandomApply;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsInHouse
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ASurvivalPlayer_C::IsInHouse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsInHouse");

	Params::SurvivalPlayer_C_IsInHouse Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsInputAllowed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ExcludeGrounded                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ExcludeSauna                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ExcludeRoomEdit                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InTrainingGym                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SitBar                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Vending                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChairBar                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ASurvivalPlayer_C::IsInputAllowed(bool ExcludeGrounded, bool ExcludeSauna, bool ExcludeRoomEdit, bool InTrainingGym, bool SitBar, bool Vending, bool ChairBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsInputAllowed");

	Params::SurvivalPlayer_C_IsInputAllowed Parms{};

	Parms.ExcludeGrounded = ExcludeGrounded;
	Parms.ExcludeSauna = ExcludeSauna;
	Parms.ExcludeRoomEdit = ExcludeRoomEdit;
	Parms.InTrainingGym = InTrainingGym;
	Parms.SitBar = SitBar;
	Parms.Vending = Vending;
	Parms.ChairBar = ChairBar;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsInWater
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_InWater                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::IsInWater(bool* Param_InWater)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsInWater");

	Params::SurvivalPlayer_C_IsInWater Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_InWater != nullptr)
		*Param_InWater = Parms.Param_InWater;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsItemCanBeEquipped
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::IsItemCanBeEquipped(int32 ItemId, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsItemCanBeEquipped");

	Params::SurvivalPlayer_C_IsItemCanBeEquipped Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsLocked?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::IsLocked_(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsLocked?");

	Params::SurvivalPlayer_C_IsLocked_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsPlayer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::IsPlayer(bool* Param_IsPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsPlayer");

	Params::SurvivalPlayer_C_IsPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsPlayer != nullptr)
		*Param_IsPlayer = Parms.Param_IsPlayer;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsSpineMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::IsSpineMontage(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsSpineMontage");

	Params::SurvivalPlayer_C_IsSpineMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsValidItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::IsValidItem(const struct FFItemInfo& Item, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsValidItem");

	Params::SurvivalPlayer_C_IsValidItem Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SurvivalPlayer.SurvivalPlayer_C.IsZombie?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsZombie_                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Zombie                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::IsZombie_(bool* Param_IsZombie_, class APawn** Zombie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "IsZombie?");

	Params::SurvivalPlayer_C_IsZombie_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsZombie_ != nullptr)
		*Param_IsZombie_ = Parms.Param_IsZombie_;

	if (Zombie != nullptr)
		*Zombie = Parms.Zombie;
}


// Function SurvivalPlayer.SurvivalPlayer_C.ItemDropRequest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       Param_ItemInfo                                         (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ItemDropRequest(class UJSI_Slot_C* ItemRef, const struct FFItemInfo& Param_ItemInfo, int32 Count, class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ItemDropRequest");

	Params::SurvivalPlayer_C_ItemDropRequest Parms{};

	Parms.ItemRef = ItemRef;
	Parms.Param_ItemInfo = std::move(Param_ItemInfo);
	Parms.Count = Count;
	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ItemsChangedInContainer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    SlotDroppedRemoved_                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ItemsChangedInContainer(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotReceiver, class UJSI_Slot_C* SlotDropped, bool SlotDroppedRemoved_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ItemsChangedInContainer");

	Params::SurvivalPlayer_C_ItemsChangedInContainer Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotReceiver = SlotReceiver;
	Parms.SlotDropped = SlotDropped;
	Parms.SlotDroppedRemoved_ = SlotDroppedRemoved_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ItemsCombined
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    SlotDroppedRemoved                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ItemsCombined(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotReceiver, class UJSI_Slot_C* SlotDropped, bool SlotDroppedRemoved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ItemsCombined");

	Params::SurvivalPlayer_C_ItemsCombined Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotReceiver = SlotReceiver;
	Parms.SlotDropped = SlotDropped;
	Parms.SlotDroppedRemoved = SlotDroppedRemoved;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ItemSlotChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   NewIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ItemSlotChanged(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, int32 NewIndex, bool Rotated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ItemSlotChanged");

	Params::SurvivalPlayer_C_ItemSlotChanged Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.NewIndex = NewIndex;
	Parms.Rotated = Rotated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ItemsOnGroundCombined
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    SlotDroppedRemoved_                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ItemsOnGroundCombined(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotReceiver, class UJSI_Slot_C* SlotDropped, bool SlotDroppedRemoved_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ItemsOnGroundCombined");

	Params::SurvivalPlayer_C_ItemsOnGroundCombined Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotReceiver = SlotReceiver;
	Parms.SlotDropped = SlotDropped;
	Parms.SlotDroppedRemoved_ = SlotDroppedRemoved_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ItemUsingPlayRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemType                               ItemType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ItemUsingPlayRate(EItemType ItemType, double* PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ItemUsingPlayRate");

	Params::SurvivalPlayer_C_ItemUsingPlayRate Parms{};

	Parms.ItemType = ItemType;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayRate != nullptr)
		*PlayRate = Parms.PlayRate;
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSAddItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FContainerPickupsInfo>    PickContItems                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    PickContData                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FFItemInfo                       Param_ItemInfo                                         (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    boolBlockStack_                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ad                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSAddItem(class AActor* InteractItem, TArray<struct FContainerPickupsInfo>& PickContItems, TArray<struct FContainerPickupsInfo>& PickContData, const struct FFItemInfo& Param_ItemInfo, int32 Param_Index, bool boolBlockStack_, bool* Ad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSAddItem");

	Params::SurvivalPlayer_C_JSAddItem Parms{};

	Parms.InteractItem = InteractItem;
	Parms.PickContItems = std::move(PickContItems);
	Parms.PickContData = std::move(PickContData);
	Parms.Param_ItemInfo = std::move(Param_ItemInfo);
	Parms.Param_Index = Param_Index;
	Parms.boolBlockStack_ = boolBlockStack_;

	UObject::ProcessEvent(Func, &Parms);

	PickContItems = std::move(Parms.PickContItems);
	PickContData = std::move(Parms.PickContData);

	if (Ad != nullptr)
		*Ad = Parms.Ad;
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSAddItemFromGround
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContainerPickupsInfo            NewPickUp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSAddItemFromGround(const struct FContainerPickupsInfo& NewPickUp, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSAddItemFromGround");

	Params::SurvivalPlayer_C_JSAddItemFromGround Parms{};

	Parms.NewPickUp = std::move(NewPickUp);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSAddItemToSpecificContainer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_ItemInfo                                         (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ToSlotIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSAddItemToSpecificContainer(const struct FFItemInfo& Param_ItemInfo, class UJSIContainer_C* ToContainer, int32 Param_ToSlotIndex, class UJSI_Slot_C* SlotRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSAddItemToSpecificContainer");

	Params::SurvivalPlayer_C_JSAddItemToSpecificContainer Parms{};

	Parms.Param_ItemInfo = std::move(Param_ItemInfo);
	Parms.ToContainer = ToContainer;
	Parms.Param_ToSlotIndex = Param_ToSlotIndex;
	Parms.SlotRef = SlotRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSDropItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSDropItem(class UJSI_Slot_C* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSDropItem");

	Params::SurvivalPlayer_C_JSDropItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSDropItemByInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSDropItemByInfo(const struct FFItemInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSDropItemByInfo");

	Params::SurvivalPlayer_C_JSDropItemByInfo Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSDropItems
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FContainerPickupsInfo>    PickUp_s                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::JSDropItems(TArray<struct FContainerPickupsInfo>& PickUp_s)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSDropItems");

	Params::SurvivalPlayer_C_JSDropItems Parms{};

	Parms.PickUp_s = std::move(PickUp_s);

	UObject::ProcessEvent(Func, &Parms);

	PickUp_s = std::move(Parms.PickUp_s);
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSFillContainer
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<struct FContainerPickupsInfo>    PickUp_s                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ClearContainer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FContainerPickupsInfo>    Added                                                  (Parm, OutParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    NotAdded                                               (Parm, OutParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    Ignored                                                (Parm, OutParm, ContainsInstancedReference)

void ASurvivalPlayer_C::JSFillContainer(class UJSIContainer_C* Container, TArray<struct FContainerPickupsInfo>& PickUp_s, bool ClearContainer, TArray<struct FContainerPickupsInfo>* Added, TArray<struct FContainerPickupsInfo>* NotAdded, TArray<struct FContainerPickupsInfo>* Ignored)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSFillContainer");

	Params::SurvivalPlayer_C_JSFillContainer Parms{};

	Parms.Container = Container;
	Parms.PickUp_s = std::move(PickUp_s);
	Parms.ClearContainer = ClearContainer;

	UObject::ProcessEvent(Func, &Parms);

	PickUp_s = std::move(Parms.PickUp_s);

	if (Added != nullptr)
		*Added = std::move(Parms.Added);

	if (NotAdded != nullptr)
		*NotAdded = std::move(Parms.NotAdded);

	if (Ignored != nullptr)
		*Ignored = std::move(Parms.Ignored);
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSFindContainerID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ContainerID                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSFindContainerID(int32 Uid, int32* ContainerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSFindContainerID");

	Params::SurvivalPlayer_C_JSFindContainerID Parms{};

	Parms.Uid = Uid;

	UObject::ProcessEvent(Func, &Parms);

	if (ContainerID != nullptr)
		*ContainerID = Parms.ContainerID;
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSRefreshInventory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContainerPickupsInfo            NewPickUp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSRefreshInventory(const struct FContainerPickupsInfo& NewPickUp, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSRefreshInventory");

	Params::SurvivalPlayer_C_JSRefreshInventory Parms{};

	Parms.NewPickUp = std::move(NewPickUp);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSStartEffect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EffectKey                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UEffect_C*>                Effectt                                                (Parm, OutParm)

void ASurvivalPlayer_C::JSStartEffect(class FName EffectKey, TArray<class UEffect_C*>* Effectt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSStartEffect");

	Params::SurvivalPlayer_C_JSStartEffect Parms{};

	Parms.EffectKey = EffectKey;

	UObject::ProcessEvent(Func, &Parms);

	if (Effectt != nullptr)
		*Effectt = std::move(Parms.Effectt);
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSStopEffect (byGroup)
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Group                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSStopEffect__byGroup_(class FName Group)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSStopEffect (byGroup)");

	Params::SurvivalPlayer_C_JSStopEffect__byGroup_ Parms{};

	Parms.Group = Group;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSUpdateInventory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ContainerMotherID                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Updated                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSUpdateInventory(int32 Uid, int32 Param_Index, int32 ContainerMotherID, bool IsContainer, const struct FFItemInfo& Info, bool* Updated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSUpdateInventory");

	Params::SurvivalPlayer_C_JSUpdateInventory Parms{};

	Parms.Uid = Uid;
	Parms.Param_Index = Param_Index;
	Parms.ContainerMotherID = ContainerMotherID;
	Parms.IsContainer = IsContainer;
	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);

	if (Updated != nullptr)
		*Updated = Parms.Updated;
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSUseItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equiped                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSUseItem(class UJSI_Slot_C* Slot, bool Equiped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSUseItem");

	Params::SurvivalPlayer_C_JSUseItem Parms{};

	Parms.Slot = Slot;
	Parms.Equiped = Equiped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.JSUseItemInInventory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  SlotContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::JSUseItemInInventory(class UJSI_Slot_C* Slot, class UJSIContainer_C* SlotContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "JSUseItemInInventory");

	Params::SurvivalPlayer_C_JSUseItemInInventory Parms{};

	Parms.Slot = Slot;
	Parms.SlotContainer = SlotContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.K2_OnMovementModeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EMovementMode                           PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           NewMovementMode                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PrevCustomMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   NewCustomMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "K2_OnMovementModeChanged");

	Params::SurvivalPlayer_C_K2_OnMovementModeChanged Parms{};

	Parms.PrevMovementMode = PrevMovementMode;
	Parms.NewMovementMode = NewMovementMode;
	Parms.PrevCustomMode = PrevCustomMode;
	Parms.NewCustomMode = NewCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.KilledByGrenadeDamageNotificationClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ExplosionClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            DamageInstigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::KilledByGrenadeDamageNotificationClient(class UClass* ExplosionClass, class APawn* DamageInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "KilledByGrenadeDamageNotificationClient");

	Params::SurvivalPlayer_C_KilledByGrenadeDamageNotificationClient Parms{};

	Parms.ExplosionClass = ExplosionClass;
	Parms.DamageInstigator = DamageInstigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.KillPPEffect
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::KillPPEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "KillPPEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.KillPPEffectTimeline__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::KillPPEffectTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "KillPPEffectTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.KillPPEffectTimeline__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::KillPPEffectTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "KillPPEffectTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.KnockedDown
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Killer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::KnockedDown(class APawn* Param_Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "KnockedDown");

	Params::SurvivalPlayer_C_KnockedDown Parms{};

	Parms.Param_Killer = Param_Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.KnockedDownMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CancelKnockDown                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ressurected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::KnockedDownMulticast(double HitAngle, bool CancelKnockDown, bool Ressurected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "KnockedDownMulticast");

	Params::SurvivalPlayer_C_KnockedDownMulticast Parms{};

	Parms.HitAngle = HitAngle;
	Parms.CancelKnockDown = CancelKnockDown;
	Parms.Ressurected = Ressurected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LateInteractCancel__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::LateInteractCancel__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LateInteractCancel__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LateInteractFinish__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::LateInteractFinish__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LateInteractFinish__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LateInteractStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::LateInteractStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LateInteractStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LevelsLoaded
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::LevelsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LevelsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LimitRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AimYawLimit                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotator                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Lerp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::LimitRotation(double AimYawLimit, double InterpSpeed, const struct FRotator& Rotator, bool Lerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LimitRotation");

	Params::SurvivalPlayer_C_LimitRotation Parms{};

	Parms.AimYawLimit = AimYawLimit;
	Parms.InterpSpeed = InterpSpeed;
	Parms.Rotator = std::move(Rotator);
	Parms.Lerp = Lerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LimitRotationOnLookingOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  YawLimit                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         ExitRotator                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASurvivalPlayer_C::LimitRotationOnLookingOffset(double YawLimit, const struct FRotator& Rotation, struct FRotator* ExitRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LimitRotationOnLookingOffset");

	Params::SurvivalPlayer_C_LimitRotationOnLookingOffset Parms{};

	Parms.YawLimit = YawLimit;
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);

	if (ExitRotator != nullptr)
		*ExitRotator = std::move(Parms.ExitRotator);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LinetraceToHighlightActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          TestObject                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    HitResult                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::LinetraceToHighlightActor(const class UObject* TestObject, bool* HitResult, class AActor** HitActor, class UPrimitiveComponent** HitComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LinetraceToHighlightActor");

	Params::SurvivalPlayer_C_LinetraceToHighlightActor Parms{};

	Parms.TestObject = TestObject;

	UObject::ProcessEvent(Func, &Parms);

	if (HitResult != nullptr)
		*HitResult = Parms.HitResult;

	if (HitActor != nullptr)
		*HitActor = Parms.HitActor;

	if (HitComponent != nullptr)
		*HitComponent = Parms.HitComponent;
}


// Function SurvivalPlayer.SurvivalPlayer_C.LoadCarOwning
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   CarName                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::LoadCarOwning(const TArray<class FString>& CarName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LoadCarOwning");

	Params::SurvivalPlayer_C_LoadCarOwning Parms{};

	Parms.CarName = std::move(CarName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LoadCarServer
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::LoadCarServer(TArray<class FString>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LoadCarServer");

	Params::SurvivalPlayer_C_LoadCarServer Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LoadEndGameStat
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Param_StatSave                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::LoadEndGameStat(const TArray<class FString>& Param_StatSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LoadEndGameStat");

	Params::SurvivalPlayer_C_LoadEndGameStat Parms{};

	Parms.Param_StatSave = std::move(Param_StatSave);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LoadGameSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::LoadGameSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LoadGameSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LoadingScreen
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::LoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LoadingScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LocalChangeBudget
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Sum                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::LocalChangeBudget(int32 Sum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LocalChangeBudget");

	Params::SurvivalPlayer_C_LocalChangeBudget Parms{};

	Parms.Sum = Sum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LocalHitEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBPS_DamageInfo>          DmgInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::LocalHitEvent(const TArray<struct FBPS_DamageInfo>& DmgInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LocalHitEvent");

	Params::SurvivalPlayer_C_LocalHitEvent Parms{};

	Parms.DmgInfo = std::move(DmgInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LocationPrint
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::LocationPrint(const struct FTransform& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LocationPrint");

	Params::SurvivalPlayer_C_LocationPrint Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LookingRotationSync(Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Param_LookingRotation                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::LookingRotationSync_Server_(const struct FVector2D& Param_LookingRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LookingRotationSync(Server)");

	Params::SurvivalPlayer_C_LookingRotationSync_Server_ Parms{};

	Parms.Param_LookingRotation = std::move(Param_LookingRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LoopSaveStat
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::LoopSaveStat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LoopSaveStat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LootDelayBlockEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::LootDelayBlockEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LootDelayBlockEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LootDelayBlockFloatCalc
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::LootDelayBlockFloatCalc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LootDelayBlockFloatCalc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LootDelayBlockTimerClearEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::LootDelayBlockTimerClearEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LootDelayBlockTimerClearEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.LootDelayBlockTimerEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::LootDelayBlockTimerEvent(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "LootDelayBlockTimerEvent");

	Params::SurvivalPlayer_C_LootDelayBlockTimerEvent Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ManualBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ManualBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ManualBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MaxWalkSpeedChanged(Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MaxWalkSpeed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MaxWalkSpeedChanged_Multicast_(double MaxWalkSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MaxWalkSpeedChanged(Multicast)");

	Params::SurvivalPlayer_C_MaxWalkSpeedChanged_Multicast_ Parms{};

	Parms.MaxWalkSpeed = MaxWalkSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MaxWalkSpeedChanged(Server)
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MaxWalkSpeed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MaxWalkSpeedChanged_Server_(double MaxWalkSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MaxWalkSpeedChanged(Server)");

	Params::SurvivalPlayer_C_MaxWalkSpeedChanged_Server_ Parms{};

	Parms.MaxWalkSpeed = MaxWalkSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MC_InSauna
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSauna                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MC_InSauna(bool InSauna)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MC_InSauna");

	Params::SurvivalPlayer_C_MC_InSauna Parms{};

	Parms.InSauna = InSauna;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MC_TeleportAt
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MC_TeleportAt(const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MC_TeleportAt");

	Params::SurvivalPlayer_C_MC_TeleportAt Parms{};

	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MeetNPC
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NPCName                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)

void ASurvivalPlayer_C::MeetNPC(const class FString& NPCName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MeetNPC");

	Params::SurvivalPlayer_C_MeetNPC Parms{};

	Parms.NPCName = std::move(NPCName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MissingCarSave__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   MissingCarArray                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::MissingCarSave__DelegateSignature(TArray<class FString>& MissingCarArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MissingCarSave__DelegateSignature");

	Params::SurvivalPlayer_C_MissingCarSave__DelegateSignature Parms{};

	Parms.MissingCarArray = std::move(MissingCarArray);

	UObject::ProcessEvent(Func, &Parms);

	MissingCarArray = std::move(Parms.MissingCarArray);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MissingUpdate
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::MissingUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MissingUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MoneyCycle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_MoneyCycle                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MoneyCycle(int32 Param_MoneyCycle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MoneyCycle");

	Params::SurvivalPlayer_C_MoneyCycle Parms{};

	Parms.Param_MoneyCycle = Param_MoneyCycle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MouseClickInPlayerInventory
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::MouseClickInPlayerInventory(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MouseClickInPlayerInventory");

	Params::SurvivalPlayer_C_MouseClickInPlayerInventory Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MoveInputSync(Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Param_MoveInput                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MoveInputSync_Multicast_(const struct FVector2D& Param_MoveInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MoveInputSync(Multicast)");

	Params::SurvivalPlayer_C_MoveInputSync_Multicast_ Parms{};

	Parms.Param_MoveInput = std::move(Param_MoveInput);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MoveInputSync(Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Param_MoveInput                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MoveInputSync_Server_(const struct FVector2D& Param_MoveInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MoveInputSync(Server)");

	Params::SurvivalPlayer_C_MoveInputSync_Server_ Parms{};

	Parms.Param_MoveInput = std::move(Param_MoveInput);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MovementInputSync(Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasMoveInput                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MovementInputSync_Server_(bool HasMoveInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MovementInputSync(Server)");

	Params::SurvivalPlayer_C_MovementInputSync_Server_ Parms{};

	Parms.HasMoveInput = HasMoveInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MovementModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMovementMode                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MovementModeChanged(EMovementMode NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MovementModeChanged");

	Params::SurvivalPlayer_C_MovementModeChanged Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MoveType_Multi
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// MovementType::EMovementType             MoveType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MoveType_Multi(MovementType::EMovementType MoveType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MoveType_Multi");

	Params::SurvivalPlayer_C_MoveType_Multi Parms{};

	Parms.MoveType = MoveType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MoveType_Serv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// MovementType::EMovementType             MoveType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MoveType_Serv(MovementType::EMovementType MoveType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MoveType_Serv");

	Params::SurvivalPlayer_C_MoveType_Serv Parms{};

	Parms.MoveType = MoveType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MovingRotation
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::MovingRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MovingRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MPC_HandleBackpackContainerMPCEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  ContainerRef                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MPC_HandleBackpackContainerMPCEvent(class UJSIContainer_C* ContainerRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MPC_HandleBackpackContainerMPCEvent");

	Params::SurvivalPlayer_C_MPC_HandleBackpackContainerMPCEvent Parms{};

	Parms.ContainerRef = ContainerRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MULT_JumpSync
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::MULT_JumpSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MULT_JumpSync");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Multi_SetCarAnim
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_InCar                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Driver                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarTipe                                Param_CarTipe                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_SitIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Multi_SetCarAnim(bool Param_InCar, bool Driver, ECarTipe Param_CarTipe, int32 Param_SitIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Multi_SetCarAnim");

	Params::SurvivalPlayer_C_Multi_SetCarAnim Parms{};

	Parms.Param_InCar = Param_InCar;
	Parms.Driver = Driver;
	Parms.Param_CarTipe = Param_CarTipe;
	Parms.Param_SitIndex = Param_SitIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Multi_SyncInclineAxis
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_InclineAxisValue                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Multi_SyncInclineAxis(float Param_InclineAxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Multi_SyncInclineAxis");

	Params::SurvivalPlayer_C_Multi_SyncInclineAxis Parms{};

	Parms.Param_InclineAxisValue = Param_InclineAxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiCallAttachCanister
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Canister_C*                   Canister                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MultiCallAttachCanister(class ABP_Canister_C* Canister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiCallAttachCanister");

	Params::SurvivalPlayer_C_MultiCallAttachCanister Parms{};

	Parms.Canister = Canister;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiCallDetachCanister
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::MultiCallDetachCanister()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiCallDetachCanister");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiCallIncreaseDurability
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Vehicle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MultiCallIncreaseDurability(class AActor* Param_Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiCallIncreaseDurability");

	Params::SurvivalPlayer_C_MultiCallIncreaseDurability Parms{};

	Parms.Param_Vehicle = Param_Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiCallIncreaseFuel
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Canister_C*                   Canister                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_RB_Vehicle_C*                 Param_Vehicle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MultiCallIncreaseFuel(class ABP_Canister_C* Canister, class ABP_RB_Vehicle_C* Param_Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiCallIncreaseFuel");

	Params::SurvivalPlayer_C_MultiCallIncreaseFuel Parms{};

	Parms.Canister = Canister;
	Parms.Param_Vehicle = Param_Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiCallSetFlashlightEnabled
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MultiCallSetFlashlightEnabled(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiCallSetFlashlightEnabled");

	Params::SurvivalPlayer_C_MultiCallSetFlashlightEnabled Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiCallTurnDoor
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Door_C*                       Door                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOpen                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MultiCallTurnDoor(class ABP_Door_C* Door, bool IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiCallTurnDoor");

	Params::SurvivalPlayer_C_MultiCallTurnDoor Parms{};

	Parms.Door = Door;
	Parms.IsOpen = IsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiChangeHealth
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBPC_PlayerStatsComponent_C*      StatComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DDLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontAnimate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            HitFrom                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MultiChangeHealth(double Health, class UBPC_PlayerStatsComponent_C* StatComponent, const struct FVector& DDLocation, class FName BoneName, const struct FVector& HitLocation, bool DontAnimate, class APawn* HitFrom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiChangeHealth");

	Params::SurvivalPlayer_C_MultiChangeHealth Parms{};

	Parms.Health = Health;
	Parms.StatComponent = StatComponent;
	Parms.DDLocation = std::move(DDLocation);
	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);
	Parms.DontAnimate = DontAnimate;
	Parms.HitFrom = HitFrom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiDeathRagdoll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MultiDeathRagdoll(double HitAngle, const struct FVector& HitLocation, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiDeathRagdoll");

	Params::SurvivalPlayer_C_MultiDeathRagdoll Parms{};

	Parms.HitAngle = HitAngle;
	Parms.HitLocation = std::move(HitLocation);
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiResetPosition
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::MultiResetPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiResetPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiSetCurrentActive
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerSlots                            Param_CurrentActiveSlot                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MultiSetCurrentActive(EPlayerSlots Param_CurrentActiveSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiSetCurrentActive");

	Params::SurvivalPlayer_C_MultiSetCurrentActive Parms{};

	Parms.Param_CurrentActiveSlot = Param_CurrentActiveSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiSetIgnorePawn
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::MultiSetIgnorePawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiSetIgnorePawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiTeleport
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::MultiTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.MultiUnactiveWeapons
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PrimaryWeaponSlot                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SecondaryWeaponSlot                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             PistolWeaponSlot                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Param_MeleeWeaponSlot                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreLocal                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::MultiUnactiveWeapons(class FName PrimaryWeaponSlot, class FName SecondaryWeaponSlot, class FName PistolWeaponSlot, class FName Param_MeleeWeaponSlot, bool IgnoreLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "MultiUnactiveWeapons");

	Params::SurvivalPlayer_C_MultiUnactiveWeapons Parms{};

	Parms.PrimaryWeaponSlot = PrimaryWeaponSlot;
	Parms.SecondaryWeaponSlot = SecondaryWeaponSlot;
	Parms.PistolWeaponSlot = PistolWeaponSlot;
	Parms.Param_MeleeWeaponSlot = Param_MeleeWeaponSlot;
	Parms.IgnoreLocal = IgnoreLocal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.NegativeEffectClient
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUNegativeEffectType                    NegativeEffects                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::NegativeEffectClient(const EUNegativeEffectType NegativeEffects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "NegativeEffectClient");

	Params::SurvivalPlayer_C_NegativeEffectClient Parms{};

	Parms.NegativeEffects = NegativeEffects;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.NewFunction_0
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Weapon_C*                     WeaponRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::NewFunction_0(class ABP_Weapon_C* WeaponRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "NewFunction_0");

	Params::SurvivalPlayer_C_NewFunction_0 Parms{};

	Parms.WeaponRef = WeaponRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.NomoneyGym
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::NomoneyGym()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "NomoneyGym");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.NotifyInventoryUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::NotifyInventoryUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "NotifyInventoryUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.NotifyItemUsing
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::NotifyItemUsing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "NotifyItemUsing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.NotifyPlayerDead
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::NotifyPlayerDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "NotifyPlayerDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.NotifyQuestEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Quest_event                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::NotifyQuestEvent(const class FString& Quest_event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "NotifyQuestEvent");

	Params::SurvivalPlayer_C_NotifyQuestEvent Parms{};

	Parms.Quest_event = std::move(Quest_event);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnAcceptInvitation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SquadId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnAcceptInvitation(int32 SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnAcceptInvitation");

	Params::SurvivalPlayer_C_OnAcceptInvitation Parms{};

	Parms.SquadId = SquadId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnAcceptTrade
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                TradeOfferer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnAcceptTrade(class ASurvivalPlayer_C* TradeOfferer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnAcceptTrade");

	Params::SurvivalPlayer_C_OnAcceptTrade Parms{};

	Parms.TradeOfferer = TradeOfferer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnAiming__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Aim                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnAiming__DelegateSignature(bool Aim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnAiming__DelegateSignature");

	Params::SurvivalPlayer_C_OnAiming__DelegateSignature Parms{};

	Parms.Aim = Aim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBackPackChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Backpack                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBackPackChanged__DelegateSignature(class UJSIContainer_C* Backpack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBackPackChanged__DelegateSignature");

	Params::SurvivalPlayer_C_OnBackPackChanged__DelegateSignature Parms{};

	Parms.Backpack = Backpack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBeginInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBeginInteract(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBeginInteract");

	Params::SurvivalPlayer_C_OnBeginInteract Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_1414204D48D5B2CBC491D6BE41DD6D38
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_1414204D48D5B2CBC491D6BE41DD6D38(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_1414204D48D5B2CBC491D6BE41DD6D38");

	Params::SurvivalPlayer_C_OnBlendOut_1414204D48D5B2CBC491D6BE41DD6D38 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_1A48E0F54D3604F7F2269EB6140AB695
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_1A48E0F54D3604F7F2269EB6140AB695(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_1A48E0F54D3604F7F2269EB6140AB695");

	Params::SurvivalPlayer_C_OnBlendOut_1A48E0F54D3604F7F2269EB6140AB695 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_1BFF31C440B74DD72A36D4830CDE6F82
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_1BFF31C440B74DD72A36D4830CDE6F82(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_1BFF31C440B74DD72A36D4830CDE6F82");

	Params::SurvivalPlayer_C_OnBlendOut_1BFF31C440B74DD72A36D4830CDE6F82 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_36DECDC24F3488802CADFBB647ACDF21
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_36DECDC24F3488802CADFBB647ACDF21(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_36DECDC24F3488802CADFBB647ACDF21");

	Params::SurvivalPlayer_C_OnBlendOut_36DECDC24F3488802CADFBB647ACDF21 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_41F0B058443240805DDF4082AA1C084E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_41F0B058443240805DDF4082AA1C084E(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_41F0B058443240805DDF4082AA1C084E");

	Params::SurvivalPlayer_C_OnBlendOut_41F0B058443240805DDF4082AA1C084E Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_4486567545FEEDDDC96AEA9DB8839CCD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_4486567545FEEDDDC96AEA9DB8839CCD(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_4486567545FEEDDDC96AEA9DB8839CCD");

	Params::SurvivalPlayer_C_OnBlendOut_4486567545FEEDDDC96AEA9DB8839CCD Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_4C6CB7084C1D71CB46E50C84C5E9872E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_4C6CB7084C1D71CB46E50C84C5E9872E(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_4C6CB7084C1D71CB46E50C84C5E9872E");

	Params::SurvivalPlayer_C_OnBlendOut_4C6CB7084C1D71CB46E50C84C5E9872E Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_4EFC55D740DA054494F6FAA05F35567B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_4EFC55D740DA054494F6FAA05F35567B(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_4EFC55D740DA054494F6FAA05F35567B");

	Params::SurvivalPlayer_C_OnBlendOut_4EFC55D740DA054494F6FAA05F35567B Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_81739B6F41B7A1B1F11B54B7017C38A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_81739B6F41B7A1B1F11B54B7017C38A5(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_81739B6F41B7A1B1F11B54B7017C38A5");

	Params::SurvivalPlayer_C_OnBlendOut_81739B6F41B7A1B1F11B54B7017C38A5 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_833B381D46C11C255A1C38B33DD241E6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_833B381D46C11C255A1C38B33DD241E6(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_833B381D46C11C255A1C38B33DD241E6");

	Params::SurvivalPlayer_C_OnBlendOut_833B381D46C11C255A1C38B33DD241E6 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_9AEE572044B59192DA3407A70F2DBC43
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_9AEE572044B59192DA3407A70F2DBC43(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_9AEE572044B59192DA3407A70F2DBC43");

	Params::SurvivalPlayer_C_OnBlendOut_9AEE572044B59192DA3407A70F2DBC43 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_9E3E90B644884EAEDE196AB60CDC9F84
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_9E3E90B644884EAEDE196AB60CDC9F84(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_9E3E90B644884EAEDE196AB60CDC9F84");

	Params::SurvivalPlayer_C_OnBlendOut_9E3E90B644884EAEDE196AB60CDC9F84 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_BD6442C748C03BF872A3BC8FEB26E38C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_BD6442C748C03BF872A3BC8FEB26E38C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_BD6442C748C03BF872A3BC8FEB26E38C");

	Params::SurvivalPlayer_C_OnBlendOut_BD6442C748C03BF872A3BC8FEB26E38C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_DC75E00748713B632BAC18B8C1F7D712
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_DC75E00748713B632BAC18B8C1F7D712(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_DC75E00748713B632BAC18B8C1F7D712");

	Params::SurvivalPlayer_C_OnBlendOut_DC75E00748713B632BAC18B8C1F7D712 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_DD01F4BB4CF7056905366AA4CCA50835
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_DD01F4BB4CF7056905366AA4CCA50835(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_DD01F4BB4CF7056905366AA4CCA50835");

	Params::SurvivalPlayer_C_OnBlendOut_DD01F4BB4CF7056905366AA4CCA50835 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_E6F9F3CA446308C32E9E1FA24C33AD00
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_E6F9F3CA446308C32E9E1FA24C33AD00(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_E6F9F3CA446308C32E9E1FA24C33AD00");

	Params::SurvivalPlayer_C_OnBlendOut_E6F9F3CA446308C32E9E1FA24C33AD00 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_EECCE00741DCDDF6605EC5B0ED9F0A45
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_EECCE00741DCDDF6605EC5B0ED9F0A45(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_EECCE00741DCDDF6605EC5B0ED9F0A45");

	Params::SurvivalPlayer_C_OnBlendOut_EECCE00741DCDDF6605EC5B0ED9F0A45 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlendOut_FCCF662C425749BAADE9A6870DC3D002
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlendOut_FCCF662C425749BAADE9A6870DC3D002(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlendOut_FCCF662C425749BAADE9A6870DC3D002");

	Params::SurvivalPlayer_C_OnBlendOut_FCCF662C425749BAADE9A6870DC3D002 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnBlockOpenMenu__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Block_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnBlockOpenMenu__DelegateSignature(bool Block_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnBlockOpenMenu__DelegateSignature");

	Params::SurvivalPlayer_C_OnBlockOpenMenu__DelegateSignature Parms{};

	Parms.Block_ = Block_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCarSold__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnCarSold__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCarSold__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangeAmmoClass__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStart                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangeAmmoClass__DelegateSignature(bool bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangeAmmoClass__DelegateSignature");

	Params::SurvivalPlayer_C_OnChangeAmmoClass__DelegateSignature Parms{};

	Parms.bStart = bStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangeArmor
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangeArmor(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangeArmor");

	Params::SurvivalPlayer_C_OnChangeArmor Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangeBackpack
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangeBackpack(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangeBackpack");

	Params::SurvivalPlayer_C_OnChangeBackpack Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangeEquipment (General)
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangeEquipment__General_(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangeEquipment (General)");

	Params::SurvivalPlayer_C_OnChangeEquipment__General_ Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangeHelmet
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangeHelmet(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangeHelmet");

	Params::SurvivalPlayer_C_OnChangeHelmet Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangePants
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangePants(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangePants");

	Params::SurvivalPlayer_C_OnChangePants Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangePistolWeapon
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangePistolWeapon(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangePistolWeapon");

	Params::SurvivalPlayer_C_OnChangePistolWeapon Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangePocket
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangePocket(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangePocket");

	Params::SurvivalPlayer_C_OnChangePocket Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangePrimaryWeapon
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangePrimaryWeapon(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangePrimaryWeapon");

	Params::SurvivalPlayer_C_OnChangePrimaryWeapon Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangeProtectiveCase
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangeProtectiveCase(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangeProtectiveCase");

	Params::SurvivalPlayer_C_OnChangeProtectiveCase Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangeSecondaryWeapon
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangeSecondaryWeapon(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangeSecondaryWeapon");

	Params::SurvivalPlayer_C_OnChangeSecondaryWeapon Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnChangeTacticalRig
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnChangeTacticalRig(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnChangeTacticalRig");

	Params::SurvivalPlayer_C_OnChangeTacticalRig Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCharLoaded_Event
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnCharLoaded_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCharLoaded_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnClosedSlidesTutorial
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnClosedSlidesTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnClosedSlidesTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCloseTabsWindowsFromPC
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnCloseTabsWindowsFromPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCloseTabsWindowsFromPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompassStateChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnCompassStateChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompassStateChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_1414204D48D5B2CBC491D6BE41DD6D38
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_1414204D48D5B2CBC491D6BE41DD6D38(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_1414204D48D5B2CBC491D6BE41DD6D38");

	Params::SurvivalPlayer_C_OnCompleted_1414204D48D5B2CBC491D6BE41DD6D38 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_1A48E0F54D3604F7F2269EB6140AB695
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_1A48E0F54D3604F7F2269EB6140AB695(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_1A48E0F54D3604F7F2269EB6140AB695");

	Params::SurvivalPlayer_C_OnCompleted_1A48E0F54D3604F7F2269EB6140AB695 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_1BFF31C440B74DD72A36D4830CDE6F82
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_1BFF31C440B74DD72A36D4830CDE6F82(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_1BFF31C440B74DD72A36D4830CDE6F82");

	Params::SurvivalPlayer_C_OnCompleted_1BFF31C440B74DD72A36D4830CDE6F82 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_36DECDC24F3488802CADFBB647ACDF21
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_36DECDC24F3488802CADFBB647ACDF21(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_36DECDC24F3488802CADFBB647ACDF21");

	Params::SurvivalPlayer_C_OnCompleted_36DECDC24F3488802CADFBB647ACDF21 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_41F0B058443240805DDF4082AA1C084E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_41F0B058443240805DDF4082AA1C084E(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_41F0B058443240805DDF4082AA1C084E");

	Params::SurvivalPlayer_C_OnCompleted_41F0B058443240805DDF4082AA1C084E Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_4486567545FEEDDDC96AEA9DB8839CCD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_4486567545FEEDDDC96AEA9DB8839CCD(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_4486567545FEEDDDC96AEA9DB8839CCD");

	Params::SurvivalPlayer_C_OnCompleted_4486567545FEEDDDC96AEA9DB8839CCD Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_4C6CB7084C1D71CB46E50C84C5E9872E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_4C6CB7084C1D71CB46E50C84C5E9872E(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_4C6CB7084C1D71CB46E50C84C5E9872E");

	Params::SurvivalPlayer_C_OnCompleted_4C6CB7084C1D71CB46E50C84C5E9872E Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_4EFC55D740DA054494F6FAA05F35567B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_4EFC55D740DA054494F6FAA05F35567B(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_4EFC55D740DA054494F6FAA05F35567B");

	Params::SurvivalPlayer_C_OnCompleted_4EFC55D740DA054494F6FAA05F35567B Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_81739B6F41B7A1B1F11B54B7017C38A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_81739B6F41B7A1B1F11B54B7017C38A5(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_81739B6F41B7A1B1F11B54B7017C38A5");

	Params::SurvivalPlayer_C_OnCompleted_81739B6F41B7A1B1F11B54B7017C38A5 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_833B381D46C11C255A1C38B33DD241E6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_833B381D46C11C255A1C38B33DD241E6(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_833B381D46C11C255A1C38B33DD241E6");

	Params::SurvivalPlayer_C_OnCompleted_833B381D46C11C255A1C38B33DD241E6 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_9AEE572044B59192DA3407A70F2DBC43
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_9AEE572044B59192DA3407A70F2DBC43(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_9AEE572044B59192DA3407A70F2DBC43");

	Params::SurvivalPlayer_C_OnCompleted_9AEE572044B59192DA3407A70F2DBC43 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_9E3E90B644884EAEDE196AB60CDC9F84
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_9E3E90B644884EAEDE196AB60CDC9F84(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_9E3E90B644884EAEDE196AB60CDC9F84");

	Params::SurvivalPlayer_C_OnCompleted_9E3E90B644884EAEDE196AB60CDC9F84 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_BD6442C748C03BF872A3BC8FEB26E38C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_BD6442C748C03BF872A3BC8FEB26E38C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_BD6442C748C03BF872A3BC8FEB26E38C");

	Params::SurvivalPlayer_C_OnCompleted_BD6442C748C03BF872A3BC8FEB26E38C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_DC75E00748713B632BAC18B8C1F7D712
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_DC75E00748713B632BAC18B8C1F7D712(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_DC75E00748713B632BAC18B8C1F7D712");

	Params::SurvivalPlayer_C_OnCompleted_DC75E00748713B632BAC18B8C1F7D712 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_DD01F4BB4CF7056905366AA4CCA50835
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_DD01F4BB4CF7056905366AA4CCA50835(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_DD01F4BB4CF7056905366AA4CCA50835");

	Params::SurvivalPlayer_C_OnCompleted_DD01F4BB4CF7056905366AA4CCA50835 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_E6F9F3CA446308C32E9E1FA24C33AD00
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_E6F9F3CA446308C32E9E1FA24C33AD00(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_E6F9F3CA446308C32E9E1FA24C33AD00");

	Params::SurvivalPlayer_C_OnCompleted_E6F9F3CA446308C32E9E1FA24C33AD00 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_EECCE00741DCDDF6605EC5B0ED9F0A45
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_EECCE00741DCDDF6605EC5B0ED9F0A45(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_EECCE00741DCDDF6605EC5B0ED9F0A45");

	Params::SurvivalPlayer_C_OnCompleted_EECCE00741DCDDF6605EC5B0ED9F0A45 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnCompleted_FCCF662C425749BAADE9A6870DC3D002
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnCompleted_FCCF662C425749BAADE9A6870DC3D002(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnCompleted_FCCF662C425749BAADE9A6870DC3D002");

	Params::SurvivalPlayer_C_OnCompleted_FCCF662C425749BAADE9A6870DC3D002 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnContainerAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiverRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ToSlotIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DroppedRotated_                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnContainerAction(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 Param_ToSlotIndex, bool DroppedRotated_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnContainerAction");

	Params::SurvivalPlayer_C_OnContainerAction Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.DroppedSlotRef = DroppedSlotRef;
	Parms.SlotReceiverRef = SlotReceiverRef;
	Parms.Param_ToSlotIndex = Param_ToSlotIndex;
	Parms.DroppedRotated_ = DroppedRotated_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnContainerSlotDoubleClick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnContainerSlotDoubleClick(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnContainerSlotDoubleClick");

	Params::SurvivalPlayer_C_OnContainerSlotDoubleClick Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnDeath__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnDeath__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnDeath__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnDeathTimerEnd
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWE_NewDeathScreenState                 Param_RessurectPlace                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnDeathTimerEnd(EWE_NewDeathScreenState Param_RessurectPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnDeathTimerEnd");

	Params::SurvivalPlayer_C_OnDeathTimerEnd Parms{};

	Parms.Param_RessurectPlace = Param_RessurectPlace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnDeclineInvitation
// (Net, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnDeclineInvitation(const int32& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnDeclineInvitation");

	Params::SurvivalPlayer_C_OnDeclineInvitation Parms{};

	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnDirectionChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Direction                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnDirectionChange(int32 Param_Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnDirectionChange");

	Params::SurvivalPlayer_C_OnDirectionChange Parms{};

	Parms.Param_Direction = Param_Direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnDiscountUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnDiscountUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnDiscountUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnEquipOrAddToPocketFromMPC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiverRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ToSlotIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RightMouseButton                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnEquipOrAddToPocketFromMPC(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 Param_ToSlotIndex, bool Rotated_, bool RightMouseButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnEquipOrAddToPocketFromMPC");

	Params::SurvivalPlayer_C_OnEquipOrAddToPocketFromMPC Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.DroppedSlotRef = DroppedSlotRef;
	Parms.SlotReceiverRef = SlotReceiverRef;
	Parms.Param_ToSlotIndex = Param_ToSlotIndex;
	Parms.Rotated_ = Rotated_;
	Parms.RightMouseButton = RightMouseButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnExitBar__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlaceIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnExitBar__DelegateSignature(int32 PlaceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnExitBar__DelegateSignature");

	Params::SurvivalPlayer_C_OnExitBar__DelegateSignature Parms{};

	Parms.PlaceIndex = PlaceIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnFinishFood__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnFinishFood__DelegateSignature(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnFinishFood__DelegateSignature");

	Params::SurvivalPlayer_C_OnFinishFood__DelegateSignature Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnFocused
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HighlightActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HighlightActorComponent                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// E_InteractType                          Param_InteractType                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_LateTime                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnFocused(class APawn* Param_Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* Param_InteractType, double* Param_LateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnFocused");

	Params::SurvivalPlayer_C_OnFocused Parms{};

	Parms.Param_Player = Param_Player;
	Parms.HighlightActor = HighlightActor;
	Parms.HighlightActorComponent = HighlightActorComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_InteractType != nullptr)
		*Param_InteractType = Parms.Param_InteractType;

	if (Param_LateTime != nullptr)
		*Param_LateTime = Parms.Param_LateTime;
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnGPSStateChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnGPSStateChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnGPSStateChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnGymExit__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnGymExit__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnGymExit__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnHomeSold__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnHomeSold__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnHomeSold__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInCarChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnInCarChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInCarChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInteract(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInteract");

	Params::SurvivalPlayer_C_OnInteract Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInteract2
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInteract2(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInteract2");

	Params::SurvivalPlayer_C_OnInteract2 Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInteract3
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInteract3(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInteract3");

	Params::SurvivalPlayer_C_OnInteract3 Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInteractVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_SitIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipAnimation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInteractVehicle(class APawn* Param_Player, int32 Param_SitIndex, bool SkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInteractVehicle");

	Params::SurvivalPlayer_C_OnInteractVehicle Parms{};

	Parms.Param_Player = Param_Player;
	Parms.Param_SitIndex = Param_SitIndex;
	Parms.SkipAnimation = SkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_1414204D48D5B2CBC491D6BE41DD6D38
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_1414204D48D5B2CBC491D6BE41DD6D38(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_1414204D48D5B2CBC491D6BE41DD6D38");

	Params::SurvivalPlayer_C_OnInterrupted_1414204D48D5B2CBC491D6BE41DD6D38 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_1A48E0F54D3604F7F2269EB6140AB695
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_1A48E0F54D3604F7F2269EB6140AB695(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_1A48E0F54D3604F7F2269EB6140AB695");

	Params::SurvivalPlayer_C_OnInterrupted_1A48E0F54D3604F7F2269EB6140AB695 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_1BFF31C440B74DD72A36D4830CDE6F82
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_1BFF31C440B74DD72A36D4830CDE6F82(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_1BFF31C440B74DD72A36D4830CDE6F82");

	Params::SurvivalPlayer_C_OnInterrupted_1BFF31C440B74DD72A36D4830CDE6F82 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_36DECDC24F3488802CADFBB647ACDF21
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_36DECDC24F3488802CADFBB647ACDF21(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_36DECDC24F3488802CADFBB647ACDF21");

	Params::SurvivalPlayer_C_OnInterrupted_36DECDC24F3488802CADFBB647ACDF21 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_41F0B058443240805DDF4082AA1C084E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_41F0B058443240805DDF4082AA1C084E(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_41F0B058443240805DDF4082AA1C084E");

	Params::SurvivalPlayer_C_OnInterrupted_41F0B058443240805DDF4082AA1C084E Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_4486567545FEEDDDC96AEA9DB8839CCD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_4486567545FEEDDDC96AEA9DB8839CCD(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_4486567545FEEDDDC96AEA9DB8839CCD");

	Params::SurvivalPlayer_C_OnInterrupted_4486567545FEEDDDC96AEA9DB8839CCD Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_4C6CB7084C1D71CB46E50C84C5E9872E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_4C6CB7084C1D71CB46E50C84C5E9872E(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_4C6CB7084C1D71CB46E50C84C5E9872E");

	Params::SurvivalPlayer_C_OnInterrupted_4C6CB7084C1D71CB46E50C84C5E9872E Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_4EFC55D740DA054494F6FAA05F35567B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_4EFC55D740DA054494F6FAA05F35567B(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_4EFC55D740DA054494F6FAA05F35567B");

	Params::SurvivalPlayer_C_OnInterrupted_4EFC55D740DA054494F6FAA05F35567B Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_81739B6F41B7A1B1F11B54B7017C38A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_81739B6F41B7A1B1F11B54B7017C38A5(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_81739B6F41B7A1B1F11B54B7017C38A5");

	Params::SurvivalPlayer_C_OnInterrupted_81739B6F41B7A1B1F11B54B7017C38A5 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_833B381D46C11C255A1C38B33DD241E6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_833B381D46C11C255A1C38B33DD241E6(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_833B381D46C11C255A1C38B33DD241E6");

	Params::SurvivalPlayer_C_OnInterrupted_833B381D46C11C255A1C38B33DD241E6 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_9AEE572044B59192DA3407A70F2DBC43
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_9AEE572044B59192DA3407A70F2DBC43(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_9AEE572044B59192DA3407A70F2DBC43");

	Params::SurvivalPlayer_C_OnInterrupted_9AEE572044B59192DA3407A70F2DBC43 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_9E3E90B644884EAEDE196AB60CDC9F84
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_9E3E90B644884EAEDE196AB60CDC9F84(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_9E3E90B644884EAEDE196AB60CDC9F84");

	Params::SurvivalPlayer_C_OnInterrupted_9E3E90B644884EAEDE196AB60CDC9F84 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_BD6442C748C03BF872A3BC8FEB26E38C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_BD6442C748C03BF872A3BC8FEB26E38C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_BD6442C748C03BF872A3BC8FEB26E38C");

	Params::SurvivalPlayer_C_OnInterrupted_BD6442C748C03BF872A3BC8FEB26E38C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_DC75E00748713B632BAC18B8C1F7D712
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_DC75E00748713B632BAC18B8C1F7D712(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_DC75E00748713B632BAC18B8C1F7D712");

	Params::SurvivalPlayer_C_OnInterrupted_DC75E00748713B632BAC18B8C1F7D712 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_DD01F4BB4CF7056905366AA4CCA50835
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_DD01F4BB4CF7056905366AA4CCA50835(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_DD01F4BB4CF7056905366AA4CCA50835");

	Params::SurvivalPlayer_C_OnInterrupted_DD01F4BB4CF7056905366AA4CCA50835 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_E6F9F3CA446308C32E9E1FA24C33AD00
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_E6F9F3CA446308C32E9E1FA24C33AD00(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_E6F9F3CA446308C32E9E1FA24C33AD00");

	Params::SurvivalPlayer_C_OnInterrupted_E6F9F3CA446308C32E9E1FA24C33AD00 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_EECCE00741DCDDF6605EC5B0ED9F0A45
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_EECCE00741DCDDF6605EC5B0ED9F0A45(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_EECCE00741DCDDF6605EC5B0ED9F0A45");

	Params::SurvivalPlayer_C_OnInterrupted_EECCE00741DCDDF6605EC5B0ED9F0A45 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInterrupted_FCCF662C425749BAADE9A6870DC3D002
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInterrupted_FCCF662C425749BAADE9A6870DC3D002(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInterrupted_FCCF662C425749BAADE9A6870DC3D002");

	Params::SurvivalPlayer_C_OnInterrupted_FCCF662C425749BAADE9A6870DC3D002 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInventoryContentChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WithoutDelay                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInventoryContentChanged(bool WithoutDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInventoryContentChanged");

	Params::SurvivalPlayer_C_OnInventoryContentChanged Parms{};

	Parms.WithoutDelay = WithoutDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInvite
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Param_Inviter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInvite(class UObject* Param_Inviter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInvite");

	Params::SurvivalPlayer_C_OnInvite Parms{};

	Parms.Param_Inviter = Param_Inviter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnInviteHome
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Param_Inviter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnInviteHome(class UObject* Param_Inviter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnInviteHome");

	Params::SurvivalPlayer_C_OnInviteHome Parms{};

	Parms.Param_Inviter = Param_Inviter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnItemAddedToContainer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      FromSlotRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ToSlotRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ToEmptySlot_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MovedAll_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnItemAddedToContainer(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnItemAddedToContainer");

	Params::SurvivalPlayer_C_OnItemAddedToContainer Parms{};

	Parms.From = From;
	Parms.To = To;
	Parms.FromSlotRef = FromSlotRef;
	Parms.ToSlotRef = ToSlotRef;
	Parms.ToEmptySlot_ = ToEmptySlot_;
	Parms.MovedAll_ = MovedAll_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnItemSlotChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   NewIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnItemSlotChanged(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, int32 NewIndex, bool Rotated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnItemSlotChanged");

	Params::SurvivalPlayer_C_OnItemSlotChanged Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.NewIndex = NewIndex;
	Parms.Rotated = Rotated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnKnockdownStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnKnockdownStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnKnockdownStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnKnockdownStart_Event
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnKnockdownStart_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnKnockdownStart_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLevelLoaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLevelLoaded(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLevelLoaded");

	Params::SurvivalPlayer_C_OnLevelLoaded Parms{};

	Parms.LevelName = LevelName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLevelUnloaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLevelUnloaded(class FName LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLevelUnloaded");

	Params::SurvivalPlayer_C_OnLevelUnloaded Parms{};

	Parms.LevelName = LevelName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_10A6DDA7453F72F622B3FBBCEA3CBEEF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_10A6DDA7453F72F622B3FBBCEA3CBEEF(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_10A6DDA7453F72F622B3FBBCEA3CBEEF");

	Params::SurvivalPlayer_C_OnLoaded_10A6DDA7453F72F622B3FBBCEA3CBEEF Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_17617C814C4065CE1B39D5951D04746E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_17617C814C4065CE1B39D5951D04746E(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_17617C814C4065CE1B39D5951D04746E");

	Params::SurvivalPlayer_C_OnLoaded_17617C814C4065CE1B39D5951D04746E Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_23D190774BE7442EE9A890A468F59077
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_23D190774BE7442EE9A890A468F59077(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_23D190774BE7442EE9A890A468F59077");

	Params::SurvivalPlayer_C_OnLoaded_23D190774BE7442EE9A890A468F59077 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_23ECBC7D460CD16AE7C00CBB0F10F506
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_23ECBC7D460CD16AE7C00CBB0F10F506(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_23ECBC7D460CD16AE7C00CBB0F10F506");

	Params::SurvivalPlayer_C_OnLoaded_23ECBC7D460CD16AE7C00CBB0F10F506 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_41937A594715D1D529A1AA8CE3095ED6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_41937A594715D1D529A1AA8CE3095ED6(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_41937A594715D1D529A1AA8CE3095ED6");

	Params::SurvivalPlayer_C_OnLoaded_41937A594715D1D529A1AA8CE3095ED6 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_4506C7EF4C0B30B0F17B0D98CB8CFA4A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_4506C7EF4C0B30B0F17B0D98CB8CFA4A(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_4506C7EF4C0B30B0F17B0D98CB8CFA4A");

	Params::SurvivalPlayer_C_OnLoaded_4506C7EF4C0B30B0F17B0D98CB8CFA4A Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_47F1905546A9AAA4586355AB6B502922
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_47F1905546A9AAA4586355AB6B502922(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_47F1905546A9AAA4586355AB6B502922");

	Params::SurvivalPlayer_C_OnLoaded_47F1905546A9AAA4586355AB6B502922 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_4E7F2B5448E6D118F9FE60B85CC1F40B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_4E7F2B5448E6D118F9FE60B85CC1F40B(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_4E7F2B5448E6D118F9FE60B85CC1F40B");

	Params::SurvivalPlayer_C_OnLoaded_4E7F2B5448E6D118F9FE60B85CC1F40B Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_500F295F4DF4FD2EC488138B070B5777
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_500F295F4DF4FD2EC488138B070B5777(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_500F295F4DF4FD2EC488138B070B5777");

	Params::SurvivalPlayer_C_OnLoaded_500F295F4DF4FD2EC488138B070B5777 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_55EB9A624CA08E69230E14B21112EA18
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_55EB9A624CA08E69230E14B21112EA18(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_55EB9A624CA08E69230E14B21112EA18");

	Params::SurvivalPlayer_C_OnLoaded_55EB9A624CA08E69230E14B21112EA18 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_5AE14A1545C1C842FFFB45BFF7D8E764
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_5AE14A1545C1C842FFFB45BFF7D8E764(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_5AE14A1545C1C842FFFB45BFF7D8E764");

	Params::SurvivalPlayer_C_OnLoaded_5AE14A1545C1C842FFFB45BFF7D8E764 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_5CD9B23A43AB48516BD1F5B66ABD36D3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_5CD9B23A43AB48516BD1F5B66ABD36D3(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_5CD9B23A43AB48516BD1F5B66ABD36D3");

	Params::SurvivalPlayer_C_OnLoaded_5CD9B23A43AB48516BD1F5B66ABD36D3 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_810F71654DB385D40EF73499A75D748E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_810F71654DB385D40EF73499A75D748E(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_810F71654DB385D40EF73499A75D748E");

	Params::SurvivalPlayer_C_OnLoaded_810F71654DB385D40EF73499A75D748E Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_92C6BAF64C7B420C867441B910C4243E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_92C6BAF64C7B420C867441B910C4243E(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_92C6BAF64C7B420C867441B910C4243E");

	Params::SurvivalPlayer_C_OnLoaded_92C6BAF64C7B420C867441B910C4243E Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_B15FAC164A153822688EA58C4EC998CD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_B15FAC164A153822688EA58C4EC998CD(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_B15FAC164A153822688EA58C4EC998CD");

	Params::SurvivalPlayer_C_OnLoaded_B15FAC164A153822688EA58C4EC998CD Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_B232A1334DA1D0793B230AA860BD28A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_B232A1334DA1D0793B230AA860BD28A5(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_B232A1334DA1D0793B230AA860BD28A5");

	Params::SurvivalPlayer_C_OnLoaded_B232A1334DA1D0793B230AA860BD28A5 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_B80A924342535454DCA1F4B4BA49815C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_B80A924342535454DCA1F4B4BA49815C(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_B80A924342535454DCA1F4B4BA49815C");

	Params::SurvivalPlayer_C_OnLoaded_B80A924342535454DCA1F4B4BA49815C Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_D236227944CBCDE4D96753B70B28658A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_D236227944CBCDE4D96753B70B28658A(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_D236227944CBCDE4D96753B70B28658A");

	Params::SurvivalPlayer_C_OnLoaded_D236227944CBCDE4D96753B70B28658A Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_D6FB4F9A45BFCCA8E8B708ACB823659C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_D6FB4F9A45BFCCA8E8B708ACB823659C(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_D6FB4F9A45BFCCA8E8B708ACB823659C");

	Params::SurvivalPlayer_C_OnLoaded_D6FB4F9A45BFCCA8E8B708ACB823659C Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_E7B4E5A94ED38731D0814885C2AB1506
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_E7B4E5A94ED38731D0814885C2AB1506(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_E7B4E5A94ED38731D0814885C2AB1506");

	Params::SurvivalPlayer_C_OnLoaded_E7B4E5A94ED38731D0814885C2AB1506 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_E97B583D48429BEB6D397EB253297F35
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_E97B583D48429BEB6D397EB253297F35(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_E97B583D48429BEB6D397EB253297F35");

	Params::SurvivalPlayer_C_OnLoaded_E97B583D48429BEB6D397EB253297F35 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_EE6454EC4657EC853CFECC88801FF4B2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_EE6454EC4657EC853CFECC88801FF4B2(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_EE6454EC4657EC853CFECC88801FF4B2");

	Params::SurvivalPlayer_C_OnLoaded_EE6454EC4657EC853CFECC88801FF4B2 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_EF1B48F349DD6E05CC624199DEAF4E2D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_EF1B48F349DD6E05CC624199DEAF4E2D(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_EF1B48F349DD6E05CC624199DEAF4E2D");

	Params::SurvivalPlayer_C_OnLoaded_EF1B48F349DD6E05CC624199DEAF4E2D Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoaded_F84F590E47EE940402D035984C86398A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoaded_F84F590E47EE940402D035984C86398A(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoaded_F84F590E47EE940402D035984C86398A");

	Params::SurvivalPlayer_C_OnLoaded_F84F590E47EE940402D035984C86398A Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoadHouse__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnLoadHouse__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoadHouse__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoadStats__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnLoadStats__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoadStats__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLoanPaid__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PaidMoney                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLoanPaid__DelegateSignature(int32 PaidMoney)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLoanPaid__DelegateSignature");

	Params::SurvivalPlayer_C_OnLoanPaid__DelegateSignature Parms{};

	Parms.PaidMoney = PaidMoney;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLocalInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLocalInteract(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLocalInteract");

	Params::SurvivalPlayer_C_OnLocalInteract Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnLostFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnLostFocus(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnLostFocus");

	Params::SurvivalPlayer_C_OnLostFocus Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnMeetNPC__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   FamiliarityNPS                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::OnMeetNPC__DelegateSignature(TArray<class FString>& FamiliarityNPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnMeetNPC__DelegateSignature");

	Params::SurvivalPlayer_C_OnMeetNPC__DelegateSignature Parms{};

	Parms.FamiliarityNPS = std::move(FamiliarityNPS);

	UObject::ProcessEvent(Func, &Parms);

	FamiliarityNPS = std::move(Parms.FamiliarityNPS);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnMPCToBackpackContainer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiverRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ToSlotIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RightMouseButton                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnMPCToBackpackContainer(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 Param_ToSlotIndex, bool Rotated_, bool RightMouseButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnMPCToBackpackContainer");

	Params::SurvivalPlayer_C_OnMPCToBackpackContainer Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.DroppedSlotRef = DroppedSlotRef;
	Parms.SlotReceiverRef = SlotReceiverRef;
	Parms.Param_ToSlotIndex = Param_ToSlotIndex;
	Parms.Rotated_ = Rotated_;
	Parms.RightMouseButton = RightMouseButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnMWSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Equipped_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ToPockets_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnMWSlot(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnMWSlot");

	Params::SurvivalPlayer_C_OnMWSlot Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.SlotRef = SlotRef;
	Parms.Equipped_ = Equipped_;
	Parms.ToPockets_ = ToPockets_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_1414204D48D5B2CBC491D6BE41DD6D38
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_1414204D48D5B2CBC491D6BE41DD6D38(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_1414204D48D5B2CBC491D6BE41DD6D38");

	Params::SurvivalPlayer_C_OnNotifyBegin_1414204D48D5B2CBC491D6BE41DD6D38 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_1A48E0F54D3604F7F2269EB6140AB695
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_1A48E0F54D3604F7F2269EB6140AB695(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_1A48E0F54D3604F7F2269EB6140AB695");

	Params::SurvivalPlayer_C_OnNotifyBegin_1A48E0F54D3604F7F2269EB6140AB695 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_1BFF31C440B74DD72A36D4830CDE6F82
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_1BFF31C440B74DD72A36D4830CDE6F82(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_1BFF31C440B74DD72A36D4830CDE6F82");

	Params::SurvivalPlayer_C_OnNotifyBegin_1BFF31C440B74DD72A36D4830CDE6F82 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_36DECDC24F3488802CADFBB647ACDF21
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_36DECDC24F3488802CADFBB647ACDF21(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_36DECDC24F3488802CADFBB647ACDF21");

	Params::SurvivalPlayer_C_OnNotifyBegin_36DECDC24F3488802CADFBB647ACDF21 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_41F0B058443240805DDF4082AA1C084E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_41F0B058443240805DDF4082AA1C084E(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_41F0B058443240805DDF4082AA1C084E");

	Params::SurvivalPlayer_C_OnNotifyBegin_41F0B058443240805DDF4082AA1C084E Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_4486567545FEEDDDC96AEA9DB8839CCD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_4486567545FEEDDDC96AEA9DB8839CCD(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_4486567545FEEDDDC96AEA9DB8839CCD");

	Params::SurvivalPlayer_C_OnNotifyBegin_4486567545FEEDDDC96AEA9DB8839CCD Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_4C6CB7084C1D71CB46E50C84C5E9872E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_4C6CB7084C1D71CB46E50C84C5E9872E(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_4C6CB7084C1D71CB46E50C84C5E9872E");

	Params::SurvivalPlayer_C_OnNotifyBegin_4C6CB7084C1D71CB46E50C84C5E9872E Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_4EFC55D740DA054494F6FAA05F35567B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_4EFC55D740DA054494F6FAA05F35567B(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_4EFC55D740DA054494F6FAA05F35567B");

	Params::SurvivalPlayer_C_OnNotifyBegin_4EFC55D740DA054494F6FAA05F35567B Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_81739B6F41B7A1B1F11B54B7017C38A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_81739B6F41B7A1B1F11B54B7017C38A5(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_81739B6F41B7A1B1F11B54B7017C38A5");

	Params::SurvivalPlayer_C_OnNotifyBegin_81739B6F41B7A1B1F11B54B7017C38A5 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_833B381D46C11C255A1C38B33DD241E6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_833B381D46C11C255A1C38B33DD241E6(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_833B381D46C11C255A1C38B33DD241E6");

	Params::SurvivalPlayer_C_OnNotifyBegin_833B381D46C11C255A1C38B33DD241E6 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_9AEE572044B59192DA3407A70F2DBC43
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_9AEE572044B59192DA3407A70F2DBC43(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_9AEE572044B59192DA3407A70F2DBC43");

	Params::SurvivalPlayer_C_OnNotifyBegin_9AEE572044B59192DA3407A70F2DBC43 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_9E3E90B644884EAEDE196AB60CDC9F84
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_9E3E90B644884EAEDE196AB60CDC9F84(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_9E3E90B644884EAEDE196AB60CDC9F84");

	Params::SurvivalPlayer_C_OnNotifyBegin_9E3E90B644884EAEDE196AB60CDC9F84 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_BD6442C748C03BF872A3BC8FEB26E38C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_BD6442C748C03BF872A3BC8FEB26E38C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_BD6442C748C03BF872A3BC8FEB26E38C");

	Params::SurvivalPlayer_C_OnNotifyBegin_BD6442C748C03BF872A3BC8FEB26E38C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_DC75E00748713B632BAC18B8C1F7D712
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_DC75E00748713B632BAC18B8C1F7D712(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_DC75E00748713B632BAC18B8C1F7D712");

	Params::SurvivalPlayer_C_OnNotifyBegin_DC75E00748713B632BAC18B8C1F7D712 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_DD01F4BB4CF7056905366AA4CCA50835
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_DD01F4BB4CF7056905366AA4CCA50835(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_DD01F4BB4CF7056905366AA4CCA50835");

	Params::SurvivalPlayer_C_OnNotifyBegin_DD01F4BB4CF7056905366AA4CCA50835 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_E6F9F3CA446308C32E9E1FA24C33AD00
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_E6F9F3CA446308C32E9E1FA24C33AD00(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_E6F9F3CA446308C32E9E1FA24C33AD00");

	Params::SurvivalPlayer_C_OnNotifyBegin_E6F9F3CA446308C32E9E1FA24C33AD00 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_EECCE00741DCDDF6605EC5B0ED9F0A45
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_EECCE00741DCDDF6605EC5B0ED9F0A45(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_EECCE00741DCDDF6605EC5B0ED9F0A45");

	Params::SurvivalPlayer_C_OnNotifyBegin_EECCE00741DCDDF6605EC5B0ED9F0A45 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyBegin_FCCF662C425749BAADE9A6870DC3D002
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyBegin_FCCF662C425749BAADE9A6870DC3D002(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyBegin_FCCF662C425749BAADE9A6870DC3D002");

	Params::SurvivalPlayer_C_OnNotifyBegin_FCCF662C425749BAADE9A6870DC3D002 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_1414204D48D5B2CBC491D6BE41DD6D38
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_1414204D48D5B2CBC491D6BE41DD6D38(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_1414204D48D5B2CBC491D6BE41DD6D38");

	Params::SurvivalPlayer_C_OnNotifyEnd_1414204D48D5B2CBC491D6BE41DD6D38 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_1A48E0F54D3604F7F2269EB6140AB695
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_1A48E0F54D3604F7F2269EB6140AB695(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_1A48E0F54D3604F7F2269EB6140AB695");

	Params::SurvivalPlayer_C_OnNotifyEnd_1A48E0F54D3604F7F2269EB6140AB695 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_1BFF31C440B74DD72A36D4830CDE6F82
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_1BFF31C440B74DD72A36D4830CDE6F82(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_1BFF31C440B74DD72A36D4830CDE6F82");

	Params::SurvivalPlayer_C_OnNotifyEnd_1BFF31C440B74DD72A36D4830CDE6F82 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_36DECDC24F3488802CADFBB647ACDF21
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_36DECDC24F3488802CADFBB647ACDF21(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_36DECDC24F3488802CADFBB647ACDF21");

	Params::SurvivalPlayer_C_OnNotifyEnd_36DECDC24F3488802CADFBB647ACDF21 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_41F0B058443240805DDF4082AA1C084E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_41F0B058443240805DDF4082AA1C084E(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_41F0B058443240805DDF4082AA1C084E");

	Params::SurvivalPlayer_C_OnNotifyEnd_41F0B058443240805DDF4082AA1C084E Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_4486567545FEEDDDC96AEA9DB8839CCD
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_4486567545FEEDDDC96AEA9DB8839CCD(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_4486567545FEEDDDC96AEA9DB8839CCD");

	Params::SurvivalPlayer_C_OnNotifyEnd_4486567545FEEDDDC96AEA9DB8839CCD Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_4C6CB7084C1D71CB46E50C84C5E9872E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_4C6CB7084C1D71CB46E50C84C5E9872E(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_4C6CB7084C1D71CB46E50C84C5E9872E");

	Params::SurvivalPlayer_C_OnNotifyEnd_4C6CB7084C1D71CB46E50C84C5E9872E Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_4EFC55D740DA054494F6FAA05F35567B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_4EFC55D740DA054494F6FAA05F35567B(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_4EFC55D740DA054494F6FAA05F35567B");

	Params::SurvivalPlayer_C_OnNotifyEnd_4EFC55D740DA054494F6FAA05F35567B Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_81739B6F41B7A1B1F11B54B7017C38A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_81739B6F41B7A1B1F11B54B7017C38A5(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_81739B6F41B7A1B1F11B54B7017C38A5");

	Params::SurvivalPlayer_C_OnNotifyEnd_81739B6F41B7A1B1F11B54B7017C38A5 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_833B381D46C11C255A1C38B33DD241E6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_833B381D46C11C255A1C38B33DD241E6(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_833B381D46C11C255A1C38B33DD241E6");

	Params::SurvivalPlayer_C_OnNotifyEnd_833B381D46C11C255A1C38B33DD241E6 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_9AEE572044B59192DA3407A70F2DBC43
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_9AEE572044B59192DA3407A70F2DBC43(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_9AEE572044B59192DA3407A70F2DBC43");

	Params::SurvivalPlayer_C_OnNotifyEnd_9AEE572044B59192DA3407A70F2DBC43 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_9E3E90B644884EAEDE196AB60CDC9F84
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_9E3E90B644884EAEDE196AB60CDC9F84(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_9E3E90B644884EAEDE196AB60CDC9F84");

	Params::SurvivalPlayer_C_OnNotifyEnd_9E3E90B644884EAEDE196AB60CDC9F84 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_BD6442C748C03BF872A3BC8FEB26E38C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_BD6442C748C03BF872A3BC8FEB26E38C(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_BD6442C748C03BF872A3BC8FEB26E38C");

	Params::SurvivalPlayer_C_OnNotifyEnd_BD6442C748C03BF872A3BC8FEB26E38C Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_DC75E00748713B632BAC18B8C1F7D712
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_DC75E00748713B632BAC18B8C1F7D712(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_DC75E00748713B632BAC18B8C1F7D712");

	Params::SurvivalPlayer_C_OnNotifyEnd_DC75E00748713B632BAC18B8C1F7D712 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_DD01F4BB4CF7056905366AA4CCA50835
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_DD01F4BB4CF7056905366AA4CCA50835(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_DD01F4BB4CF7056905366AA4CCA50835");

	Params::SurvivalPlayer_C_OnNotifyEnd_DD01F4BB4CF7056905366AA4CCA50835 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_E6F9F3CA446308C32E9E1FA24C33AD00
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_E6F9F3CA446308C32E9E1FA24C33AD00(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_E6F9F3CA446308C32E9E1FA24C33AD00");

	Params::SurvivalPlayer_C_OnNotifyEnd_E6F9F3CA446308C32E9E1FA24C33AD00 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_EECCE00741DCDDF6605EC5B0ED9F0A45
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_EECCE00741DCDDF6605EC5B0ED9F0A45(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_EECCE00741DCDDF6605EC5B0ED9F0A45");

	Params::SurvivalPlayer_C_OnNotifyEnd_EECCE00741DCDDF6605EC5B0ED9F0A45 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnNotifyEnd_FCCF662C425749BAADE9A6870DC3D002
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnNotifyEnd_FCCF662C425749BAADE9A6870DC3D002(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnNotifyEnd_FCCF662C425749BAADE9A6870DC3D002");

	Params::SurvivalPlayer_C_OnNotifyEnd_FCCF662C425749BAADE9A6870DC3D002 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnPlayerDeadClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Killer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnPlayerDeadClient(const struct FVector& Location, const struct FVector& Impulse, class FName BoneName, double HitAngle, class APawn* Param_Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnPlayerDeadClient");

	Params::SurvivalPlayer_C_OnPlayerDeadClient Parms{};

	Parms.Location = std::move(Location);
	Parms.Impulse = std::move(Impulse);
	Parms.BoneName = BoneName;
	Parms.HitAngle = HitAngle;
	Parms.Param_Killer = Param_Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnPlayerExecuted
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Param_Killer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnPlayerExecuted(class ASurvivalPlayer_C* Param_Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnPlayerExecuted");

	Params::SurvivalPlayer_C_OnPlayerExecuted Parms{};

	Parms.Param_Killer = Param_Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnPocketChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Pocket                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnPocketChanged__DelegateSignature(class UJSIContainer_C* Pocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnPocketChanged__DelegateSignature");

	Params::SurvivalPlayer_C_OnPocketChanged__DelegateSignature Parms{};

	Parms.Pocket = Pocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_ArmorName
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_ArmorName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_ArmorName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_As BP Training App
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_As_BP_Training_App()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_As BP Training App");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_BackpackName
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_BackpackName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_BackpackName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_BarParentCall
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_BarParentCall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_BarParentCall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_bCompasEquip
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_bCompasEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_bCompasEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_CampingActor
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_CampingActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_CampingActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_CompasState
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_CompasState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_CompasState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_DeadBody
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_DeadBody()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_DeadBody");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_DeadBodyV2
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_DeadBodyV2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_DeadBodyV2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_GPSEquip
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_GPSEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_GPSEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_HelmetName
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_HelmetName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_HelmetName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_Hit Bone Name
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_Hit_Bone_Name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_Hit Bone Name");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_Hit Impulse
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_Hit_Impulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_Hit Impulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_Hit Location
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_Hit_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_Hit Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_InCar
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_InCar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_InCar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_Is Beginner
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_Is_Beginner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_Is Beginner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_IsFemale
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_IsFemale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_IsFemale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_Lootpoint
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_Lootpoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_Lootpoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_OuterwearName
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_OuterwearName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_OuterwearName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_PantsName
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_PantsName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_PantsName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_Primary Weapon Slot
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_Primary_Weapon_Slot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_Primary Weapon Slot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_Ragdoll
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_Ragdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_Ragdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_RPoints
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_RPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_RPoints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_Secondary Weapon Slot
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_Secondary_Weapon_Slot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_Secondary Weapon Slot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_Vehicle
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_Vehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_Vehicle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_WeaponName
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_WeaponName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_WeaponName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRep_WeaponPlaceholderShadow
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnRep_WeaponPlaceholderShadow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRep_WeaponPlaceholderShadow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRootObjCollectionActivated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_Objective_C*                  RootObjectiveCollection                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnRootObjCollectionActivated(class UBP_Objective_C* RootObjectiveCollection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRootObjCollectionActivated");

	Params::SurvivalPlayer_C_OnRootObjCollectionActivated Parms{};

	Parms.RootObjectiveCollection = RootObjectiveCollection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnRPZoneInteracted_Multi
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FF_RPZoneInfo                    RPZoneStruct                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnRPZoneInteracted_Multi(const struct FF_RPZoneInfo& RPZoneStruct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnRPZoneInteracted_Multi");

	Params::SurvivalPlayer_C_OnRPZoneInteracted_Multi Parms{};

	Parms.RPZoneStruct = std::move(RPZoneStruct);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnSaveHouse__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_HouseName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnSaveHouse__DelegateSignature(const class FString& Param_HouseName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnSaveHouse__DelegateSignature");

	Params::SurvivalPlayer_C_OnSaveHouse__DelegateSignature Parms{};

	Parms.Param_HouseName = std::move(Param_HouseName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnSaveStats__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Param_StatSave                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::OnSaveStats__DelegateSignature(TArray<class FString>& Param_StatSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnSaveStats__DelegateSignature");

	Params::SurvivalPlayer_C_OnSaveStats__DelegateSignature Parms{};

	Parms.Param_StatSave = std::move(Param_StatSave);

	UObject::ProcessEvent(Func, &Parms);

	Param_StatSave = std::move(Parms.Param_StatSave);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnSeen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnSeen(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnSeen");

	Params::SurvivalPlayer_C_OnSeen Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnSetAliases__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Param_Aliases                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::OnSetAliases__DelegateSignature(TArray<class FString>& Param_Aliases)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnSetAliases__DelegateSignature");

	Params::SurvivalPlayer_C_OnSetAliases__DelegateSignature Parms{};

	Parms.Param_Aliases = std::move(Param_Aliases);

	UObject::ProcessEvent(Func, &Parms);

	Param_Aliases = std::move(Parms.Param_Aliases);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnSetCarCount__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   PlayerCars                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::OnSetCarCount__DelegateSignature(TArray<class FString>& PlayerCars)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnSetCarCount__DelegateSignature");

	Params::SurvivalPlayer_C_OnSetCarCount__DelegateSignature Parms{};

	Parms.PlayerCars = std::move(PlayerCars);

	UObject::ProcessEvent(Func, &Parms);

	PlayerCars = std::move(Parms.PlayerCars);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnSetHomeCount__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   PlayerHome                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::OnSetHomeCount__DelegateSignature(TArray<class FString>& PlayerHome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnSetHomeCount__DelegateSignature");

	Params::SurvivalPlayer_C_OnSetHomeCount__DelegateSignature Parms{};

	Parms.PlayerHome = std::move(PlayerHome);

	UObject::ProcessEvent(Func, &Parms);

	PlayerHome = std::move(Parms.PlayerHome);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnSlotDoubleClick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnSlotDoubleClick(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnSlotDoubleClick");

	Params::SurvivalPlayer_C_OnSlotDoubleClick Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnSprint__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sprint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnSprint__DelegateSignature(bool Sprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnSprint__DelegateSignature");

	Params::SurvivalPlayer_C_OnSprint__DelegateSignature Parms{};

	Parms.Sprint = Sprint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnSquadCheckComplete
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnSquadCheckComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnSquadCheckComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnStandRotation
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnStandRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnStandRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnStopInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnStopInteract(class APawn* Param_Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnStopInteract");

	Params::SurvivalPlayer_C_OnStopInteract Parms{};

	Parms.Param_Player = Param_Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnSurrender
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Animed                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DieInCarExplosion                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnSurrender(bool Animed, bool DieInCarExplosion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnSurrender");

	Params::SurvivalPlayer_C_OnSurrender Parms{};

	Parms.Animed = Animed;
	Parms.DieInCarExplosion = DieInCarExplosion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnTabsClosed
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OnTabsClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnTabsClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnTrade
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                TradeOfferer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnTrade(class ASurvivalPlayer_C* TradeOfferer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnTrade");

	Params::SurvivalPlayer_C_OnTrade Parms{};

	Parms.TradeOfferer = TradeOfferer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OnUpdateDeathScreenState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EWE_NewDeathScreenState                 NewScreenState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OnUpdateDeathScreenState(EWE_NewDeathScreenState NewScreenState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OnUpdateDeathScreenState");

	Params::SurvivalPlayer_C_OnUpdateDeathScreenState Parms{};

	Parms.NewScreenState = NewScreenState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenDoorRPC
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Door_C*                       Door                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOpen                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OpenDoorRPC(class ABP_Door_C* Door, bool IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenDoorRPC");

	Params::SurvivalPlayer_C_OpenDoorRPC Parms{};

	Parms.Door = Door;
	Parms.IsOpen = IsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenInventoryFromCar
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OpenInventoryFromCar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenInventoryFromCar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenInventoryManually
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OpenInventoryManually()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenInventoryManually");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenInventoryRemotely
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                SurvivalPlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OpenInventoryRemotely(class ASurvivalPlayer_C* SurvivalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenInventoryRemotely");

	Params::SurvivalPlayer_C_OpenInventoryRemotely Parms{};

	Parms.SurvivalPlayer = SurvivalPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenKeyDoorLocal
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           KeyID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABP_Door_C*                       KeyDoor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OpenKeyDoorLocal(const class FString& KeyID, class ABP_Door_C* KeyDoor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenKeyDoorLocal");

	Params::SurvivalPlayer_C_OpenKeyDoorLocal Parms{};

	Parms.KeyID = std::move(KeyID);
	Parms.KeyDoor = KeyDoor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenKeyDoorMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHasKey                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Door_C*                       KeyDoor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OpenKeyDoorMulti(bool bHasKey, class ABP_Door_C* KeyDoor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenKeyDoorMulti");

	Params::SurvivalPlayer_C_OpenKeyDoorMulti Parms{};

	Parms.bHasKey = bHasKey;
	Parms.KeyDoor = KeyDoor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenKeyDoorServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHasKey                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Door_C*                       KeyDoor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OpenKeyDoorServer(bool bHasKey, class ABP_Door_C* KeyDoor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenKeyDoorServer");

	Params::SurvivalPlayer_C_OpenKeyDoorServer Parms{};

	Parms.bHasKey = bHasKey;
	Parms.KeyDoor = KeyDoor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenLootRPC
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALootPoint_C*                     Param_LootPoint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OpenLootRPC(class ALootPoint_C* Param_LootPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenLootRPC");

	Params::SurvivalPlayer_C_OpenLootRPC Parms{};

	Parms.Param_LootPoint = Param_LootPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenMenu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OpenMenu(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenMenu");

	Params::SurvivalPlayer_C_OpenMenu Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenMenuV
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::OpenMenuV(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenMenuV");

	Params::SurvivalPlayer_C_OpenMenuV Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.OpenTrailerInventory
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::OpenTrailerInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "OpenTrailerInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ParserSave
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCharacterCreateSave_C*           Save                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_SaveStructure                 Struct                                                 (Parm, OutParm, HasGetValueTypeHash)

void ASurvivalPlayer_C::ParserSave(class UCharacterCreateSave_C* Save, struct FS_SaveStructure* Struct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ParserSave");

	Params::SurvivalPlayer_C_ParserSave Parms{};

	Parms.Save = Save;

	UObject::ProcessEvent(Func, &Parms);

	if (Struct != nullptr)
		*Struct = std::move(Parms.Struct);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PauseLootpointDestroy
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALootPoint_C*                     Param_LootPoint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PauseLootpointDestroy(class ALootPoint_C* Param_LootPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PauseLootpointDestroy");

	Params::SurvivalPlayer_C_PauseLootpointDestroy Parms{};

	Parms.Param_LootPoint = Param_LootPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PayLoan_Serv
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Money                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PayLoan_Serv(int32 Money)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PayLoan_Serv");

	Params::SurvivalPlayer_C_PayLoan_Serv Parms{};

	Parms.Money = Money;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PerexodCompas
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::PerexodCompas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PerexodCompas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PerexodGPS
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::PerexodGPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PerexodGPS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PickupEnvItem-client
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DefaultPIckableEnv_C*         EnvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PickupEnvItemMinusclient(class ABP_DefaultPIckableEnv_C* EnvItem, int32 Uid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PickupEnvItem-client");

	Params::SurvivalPlayer_C_PickupEnvItemMinusclient Parms{};

	Parms.EnvItem = EnvItem;
	Parms.Uid = Uid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PickupEnvItem-server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DefaultPIckableEnv_C*         EnvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PickupEnvItemMinusserver(class ABP_DefaultPIckableEnv_C* EnvItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PickupEnvItem-server");

	Params::SurvivalPlayer_C_PickupEnvItemMinusserver Parms{};

	Parms.EnvItem = EnvItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PickupEnvStatus
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_DefaultPIckableEnv_C*         EnvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Added                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PickupEnvStatus(class ABP_DefaultPIckableEnv_C* EnvItem, bool Added)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PickupEnvStatus");

	Params::SurvivalPlayer_C_PickupEnvStatus Parms{};

	Parms.EnvItem = EnvItem;
	Parms.Added = Added;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlaceItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSBP_ItemsData                   Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::PlaceItem(const struct FSBP_ItemsData& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlaceItem");

	Params::SurvivalPlayer_C_PlaceItem Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayAnimMenuMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::PlayAnimMenuMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayAnimMenuMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayAnimMenuServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::PlayAnimMenuServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayAnimMenuServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayCameraShake
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::PlayCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayerAddItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       Param_ItemInfo                                         (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// class UWBP_AttachmentCell_C*            ActiveCell                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Added                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PlayerAddItem(const struct FFItemInfo& Param_ItemInfo, class UWBP_AttachmentCell_C* ActiveCell, bool* Added)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayerAddItem");

	Params::SurvivalPlayer_C_PlayerAddItem Parms{};

	Parms.Param_ItemInfo = std::move(Param_ItemInfo);
	Parms.ActiveCell = ActiveCell;

	UObject::ProcessEvent(Func, &Parms);

	if (Added != nullptr)
		*Added = Parms.Added;
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayerCanisterAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Attach                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_Canister_C*                   Canister                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PlayerCanisterAction(bool Attach, class ABP_Canister_C* Canister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayerCanisterAction");

	Params::SurvivalPlayer_C_PlayerCanisterAction Parms{};

	Parms.Attach = Attach;
	Parms.Canister = Canister;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayerGetMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Param_Mesh                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PlayerGetMesh(class USkeletalMeshComponent** Param_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayerGetMesh");

	Params::SurvivalPlayer_C_PlayerGetMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Mesh != nullptr)
		*Param_Mesh = Parms.Param_Mesh;
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayerItemCountByName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ItemName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PlayerItemCountByName(const class FString& ItemName, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayerItemCountByName");

	Params::SurvivalPlayer_C_PlayerItemCountByName Parms{};

	Parms.ItemName = std::move(ItemName);

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayerLeft
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PlayerLeft(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayerLeft");

	Params::SurvivalPlayer_C_PlayerLeft Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayerMoveAndRotate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         NewRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASurvivalPlayer_C::PlayerMoveAndRotate(const struct FVector& NewLocation, const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayerMoveAndRotate");

	Params::SurvivalPlayer_C_PlayerMoveAndRotate Parms{};

	Parms.NewLocation = std::move(NewLocation);
	Parms.NewRotation = std::move(NewRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayEventFMODOWn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       Event                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PlayEventFMODOWn(class UFMODEvent* Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayEventFMODOWn");

	Params::SurvivalPlayer_C_PlayEventFMODOWn Parms{};

	Parms.Event = Event;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayHeadHitSound
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::PlayHeadHitSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayHeadHitSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlayMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHipfire                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reloading                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PlayMontage(class UAnimMontage* AnimMontage, bool IsHipfire, bool Reloading, double PlayRate, double StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlayMontage");

	Params::SurvivalPlayer_C_PlayMontage Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.IsHipfire = IsHipfire;
	Parms.Reloading = Reloading;
	Parms.PlayRate = PlayRate;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlaySoundMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       FMod                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Attach_to                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ASurvivalPlayer_V2_C*             Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ASurvivalPlayer_V2_C*             Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PlaySoundMulti(class UFMODEvent* FMod, class USceneComponent* Attach_to, class ASurvivalPlayer_V2_C* Actor, class ASurvivalPlayer_V2_C* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlaySoundMulti");

	Params::SurvivalPlayer_C_PlaySoundMulti Parms{};

	Parms.FMod = FMod;
	Parms.Attach_to = Attach_to;
	Parms.Actor = Actor;
	Parms.Causer = Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PlaySoundServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       FMod                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Attach_to                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ASurvivalPlayer_V2_C*             Causer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PlaySoundServer(class UFMODEvent* FMod, class USceneComponent* Attach_to, class ASurvivalPlayer_V2_C* Causer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PlaySoundServer");

	Params::SurvivalPlayer_C_PlaySoundServer Parms{};

	Parms.FMod = FMod;
	Parms.Attach_to = Attach_to;
	Parms.Causer = Causer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PressReloadWeapon__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::PressReloadWeapon__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PressReloadWeapon__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PrintContainer
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::PrintContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PrintContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.PrintDebug (Items)
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::PrintDebug__Items_(double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "PrintDebug (Items)");

	Params::SurvivalPlayer_C_PrintDebug__Items_ Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReceiveActorBeginOverlap");

	Params::SurvivalPlayer_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASurvivalPlayer_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ASurvivalPlayer_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReceiveEndPlay");

	Params::SurvivalPlayer_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReceivePointDamage
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShotFromDirection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ASurvivalPlayer_C::ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReceivePointDamage");

	Params::SurvivalPlayer_C_ReceivePointDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReceivePossessed");

	Params::SurvivalPlayer_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReceiveRadialDamage
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DamageReceived                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Origin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReceiveRadialDamage(float DamageReceived, const class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReceiveRadialDamage");

	Params::SurvivalPlayer_C_ReceiveRadialDamage Parms{};

	Parms.DamageReceived = DamageReceived;
	Parms.DamageType = DamageType;
	Parms.Origin = std::move(Origin);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReceiveTick");

	Params::SurvivalPlayer_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReceiveUnpossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReceiveUnpossessed");

	Params::SurvivalPlayer_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReceiveVoice
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Param_Player                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<uint8>                           CompressedVoiceData                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Radio                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReceiveVoice(class ASurvivalPlayer_C* Param_Player, const TArray<uint8>& CompressedVoiceData, bool Radio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReceiveVoice");

	Params::SurvivalPlayer_C_ReceiveVoice Parms{};

	Parms.Param_Player = Param_Player;
	Parms.CompressedVoiceData = std::move(CompressedVoiceData);
	Parms.Radio = Radio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Recovering
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Recovering()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Recovering");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RefuelC
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::RefuelC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RefuelC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReInit
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ReInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReinitLevelStreamer
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ReinitLevelStreamer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReinitLevelStreamer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReloadC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TrainStatType                         StatTrain                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReloadC(E_TrainStatType StatTrain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReloadC");

	Params::SurvivalPlayer_C_ReloadC Parms{};

	Parms.StatTrain = StatTrain;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReloadEnded
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ReloadEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReloadEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReloadEvent(Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsFastReloadMulti                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReloadEvent_Multicast_(bool bIsFastReloadMulti)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReloadEvent(Multicast)");

	Params::SurvivalPlayer_C_ReloadEvent_Multicast_ Parms{};

	Parms.bIsFastReloadMulti = bIsFastReloadMulti;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReloadEvent(Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsFastReloadMulti                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReloadEvent_Server_(bool bIsFastReloadMulti)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReloadEvent(Server)");

	Params::SurvivalPlayer_C_ReloadEvent_Server_ Parms{};

	Parms.bIsFastReloadMulti = bIsFastReloadMulti;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReloadEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ReloadDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReloadEvent__DelegateSignature(double ReloadDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReloadEvent__DelegateSignature");

	Params::SurvivalPlayer_C_ReloadEvent__DelegateSignature Parms{};

	Parms.ReloadDuration = ReloadDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReloadEventLocaly__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ReloadEventLocaly__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReloadEventLocaly__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Remove from Container
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Remove_from_Container(class UJSI_Slot_C* Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Remove from Container");

	Params::SurvivalPlayer_C_Remove_from_Container Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Remove Index Data
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Remove_Index_Data(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Remove Index Data");

	Params::SurvivalPlayer_C_Remove_Index_Data Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Remove Index Items
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Remove_Index_Items(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Remove Index Items");

	Params::SurvivalPlayer_C_Remove_Index_Items Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RemoveAllItems
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::RemoveAllItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RemoveAllItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RemoveFPCompas
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::RemoveFPCompas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RemoveFPCompas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RemoveFPGPS
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::RemoveFPGPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RemoveFPGPS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RemoveInventoryItemByUID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OnlyItem                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemRemoved                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::RemoveInventoryItemByUID(int32 Uid, bool OnlyItem, bool* ItemRemoved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RemoveInventoryItemByUID");

	Params::SurvivalPlayer_C_RemoveInventoryItemByUID Parms{};

	Parms.Uid = Uid;
	Parms.OnlyItem = OnlyItem;

	UObject::ProcessEvent(Func, &Parms);

	if (ItemRemoved != nullptr)
		*ItemRemoved = Parms.ItemRemoved;
}


// Function SurvivalPlayer.SurvivalPlayer_C.RemoveItemFromPlayerContainer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::RemoveItemFromPlayerContainer(class UJSI_Slot_C* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RemoveItemFromPlayerContainer");

	Params::SurvivalPlayer_C_RemoveItemFromPlayerContainer Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RemovePlayerListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class ISurvivalPlayerListener_C>Listener                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::RemovePlayerListener(TScriptInterface<class ISurvivalPlayerListener_C> Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RemovePlayerListener");

	Params::SurvivalPlayer_C_RemovePlayerListener Parms{};

	Parms.Listener = Listener;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RemovePlayerStatus_Owning
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Aliases                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::RemovePlayerStatus_Owning(const class FString& Param_Aliases)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RemovePlayerStatus_Owning");

	Params::SurvivalPlayer_C_RemovePlayerStatus_Owning Parms{};

	Parms.Param_Aliases = std::move(Param_Aliases);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RemovePlayerStatus_Serv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Aliases                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::RemovePlayerStatus_Serv(const class FString& Param_Aliases)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RemovePlayerStatus_Serv");

	Params::SurvivalPlayer_C_RemovePlayerStatus_Serv Parms{};

	Parms.Param_Aliases = std::move(Param_Aliases);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RemoveQuestIcons
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceUpdate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::RemoveQuestIcons(bool ForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RemoveQuestIcons");

	Params::SurvivalPlayer_C_RemoveQuestIcons Parms{};

	Parms.ForceUpdate = ForceUpdate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReplicateCarInfoToServ
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, E_CarStatus>        Param_CarSaveMap                                       (BlueprintVisible, BlueprintReadOnly, Parm)

void ASurvivalPlayer_C::ReplicateCarInfoToServ(const TMap<class FString, E_CarStatus>& Param_CarSaveMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReplicateCarInfoToServ");

	Params::SurvivalPlayer_C_ReplicateCarInfoToServ Parms{};

	Parms.Param_CarSaveMap = std::move(Param_CarSaveMap);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RequestContainerContent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::RequestContainerContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RequestContainerContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RequestShopContent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::RequestShopContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RequestShopContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RequestUID
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForSlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::RequestUID(bool ForSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RequestUID");

	Params::SurvivalPlayer_C_RequestUID Parms{};

	Parms.ForSlot = ForSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Reset Timer For Tip
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Reset_Timer_For_Tip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Reset Timer For Tip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Reset Tips Timer
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Reset_Tips_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Reset Tips Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ResetInteract
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ResetInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ResetInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ResetItemUsingAnim
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ResetItemUsingAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ResetItemUsingAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ResetParamsAfterTrade
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ResetParamsAfterTrade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ResetParamsAfterTrade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Resize Main Container
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Columns                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Rows                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Resize_Main_Container(int32 Columns, int32 Rows)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Resize Main Container");

	Params::SurvivalPlayer_C_Resize_Main_Container Parms{};

	Parms.Columns = Columns;
	Parms.Rows = Rows;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Ressurect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_Pos                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Param_Rot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EWE_NewDeathScreenState                 Param_RessurectPlace                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Ressurect(const struct FVector& Param_Pos, const struct FRotator& Param_Rot, EWE_NewDeathScreenState Param_RessurectPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Ressurect");

	Params::SurvivalPlayer_C_Ressurect Parms{};

	Parms.Param_Pos = std::move(Param_Pos);
	Parms.Param_Rot = std::move(Param_Rot);
	Parms.Param_RessurectPlace = Param_RessurectPlace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RessurectPlace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWE_NewDeathScreenState                 Where                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerStart*                     OutItem                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Return_Value_Rotation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

struct FVector ASurvivalPlayer_C::RessurectPlace(EWE_NewDeathScreenState Where, class APlayerStart** OutItem, struct FRotator* Return_Value_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RessurectPlace");

	Params::SurvivalPlayer_C_RessurectPlace Parms{};

	Parms.Where = Where;

	UObject::ProcessEvent(Func, &Parms);

	if (OutItem != nullptr)
		*OutItem = Parms.OutItem;

	if (Return_Value_Rotation != nullptr)
		*Return_Value_Rotation = std::move(Parms.Return_Value_Rotation);

	return Parms.ReturnValue;
}


// Function SurvivalPlayer.SurvivalPlayer_C.RessurectServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::RessurectServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RessurectServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RestoreDefaultMaterials
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::RestoreDefaultMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RestoreDefaultMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RestoreDefaultRot_FreeAim
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::RestoreDefaultRot_FreeAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RestoreDefaultRot_FreeAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RestoreItems
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::RestoreItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RestoreItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ResurrectAtLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Param_Rot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EWE_NewDeathScreenState                 Param_RessurectPlace                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ResurrectAtLocation(const struct FVector& Location, const struct FRotator& Param_Rot, EWE_NewDeathScreenState Param_RessurectPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ResurrectAtLocation");

	Params::SurvivalPlayer_C_ResurrectAtLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.Param_Rot = std::move(Param_Rot);
	Parms.Param_RessurectPlace = Param_RessurectPlace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ResurrectServerAtLocation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Param_Rot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EWE_NewDeathScreenState                 Param_RessurectPlace                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ResurrectServerAtLocation(const struct FVector& Location, const struct FRotator& Param_Rot, EWE_NewDeathScreenState Param_RessurectPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ResurrectServerAtLocation");

	Params::SurvivalPlayer_C_ResurrectServerAtLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.Param_Rot = std::move(Param_Rot);
	Parms.Param_RessurectPlace = Param_RessurectPlace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReverseCtiticalDamage__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::ReverseCtiticalDamage__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReverseCtiticalDamage__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReverseCtiticalDamage__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::ReverseCtiticalDamage__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReverseCtiticalDamage__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Revive
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Revive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Revive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReviveCount
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ReviveCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReviveCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ReviveLocal
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Ref                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ReviveLocal(class ASurvivalPlayer_C* Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ReviveLocal");

	Params::SurvivalPlayer_C_ReviveLocal Parms{};

	Parms.Ref = Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RevivingStop
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Param_Reviver                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::RevivingStop(class ASurvivalPlayer_C* Param_Reviver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RevivingStop");

	Params::SurvivalPlayer_C_RevivingStop Parms{};

	Parms.Param_Reviver = Param_Reviver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RevivingStopMulti
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Param_Reviver                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::RevivingStopMulti(class ASurvivalPlayer_C* Param_Reviver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RevivingStopMulti");

	Params::SurvivalPlayer_C_RevivingStopMulti Parms{};

	Parms.Param_Reviver = Param_Reviver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RightButtonMouseDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::RightButtonMouseDown(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RightButtonMouseDown");

	Params::SurvivalPlayer_C_RightButtonMouseDown Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RightClickOnGound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::RightClickOnGound(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RightClickOnGound");

	Params::SurvivalPlayer_C_RightClickOnGound Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RightMouseClickEquipped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::RightMouseClickEquipped(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RightMouseClickEquipped");

	Params::SurvivalPlayer_C_RightMouseClickEquipped Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.RoomInsidesSave__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   RoomInsides                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::RoomInsidesSave__DelegateSignature(TArray<class FString>& RoomInsides)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "RoomInsidesSave__DelegateSignature");

	Params::SurvivalPlayer_C_RoomInsidesSave__DelegateSignature Parms{};

	Parms.RoomInsides = std::move(RoomInsides);

	UObject::ProcessEvent(Func, &Parms);

	RoomInsides = std::move(Parms.RoomInsides);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Run Lockpicking
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Run_Lockpicking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Run Lockpicking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SaveEndGameStat
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SaveEndGameStat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SaveEndGameStat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SaveGameSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SaveGameSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SaveGameSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SaveLootWhenLeave_Client
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeToDestroyDummyCharacter                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SaveLootWhenLeave_Client(double TimeToDestroyDummyCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SaveLootWhenLeave_Client");

	Params::SurvivalPlayer_C_SaveLootWhenLeave_Client Parms{};

	Parms.TimeToDestroyDummyCharacter = TimeToDestroyDummyCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SaveLootWhenLeave_Server
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeToDestroyDummyCharacter                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FDropItemEntry>           Loot                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::SaveLootWhenLeave_Server(double TimeToDestroyDummyCharacter, const TArray<struct FDropItemEntry>& Loot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SaveLootWhenLeave_Server");

	Params::SurvivalPlayer_C_SaveLootWhenLeave_Server Parms{};

	Parms.TimeToDestroyDummyCharacter = TimeToDestroyDummyCharacter;
	Parms.Loot = std::move(Loot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SaveMeshes
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SaveMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SaveMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SavePlayerLocation
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SavePlayerLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SavePlayerLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SavePlayerStats
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SavePlayerStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SavePlayerStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SaveSnapshot
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SaveSnapshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SaveSnapshot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SeatAsPassanger
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SeatAsPassanger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SeatAsPassanger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SelectWeaponSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SelectWeaponSlot(int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SelectWeaponSlot");

	Params::SurvivalPlayer_C_SelectWeaponSlot Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Self-healingPressed
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SelfMinushealingPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Self-healingPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Self-healingReleased
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SelfMinushealingReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Self-healingReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Self-healingTimerHandler
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SelfMinushealingTimerHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Self-healingTimerHandler");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SellCar_Owning
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CarName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SellCar_Owning(const class FString& CarName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SellCar_Owning");

	Params::SurvivalPlayer_C_SellCar_Owning Parms{};

	Parms.CarName = std::move(CarName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SellCar_Serv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CarName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SellCar_Serv(const class FString& CarName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SellCar_Serv");

	Params::SurvivalPlayer_C_SellCar_Serv Parms{};

	Parms.CarName = std::move(CarName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SellHome_Serv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           HomeName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SellHome_Serv(const class FString& HomeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SellHome_Serv");

	Params::SurvivalPlayer_C_SellHome_Serv Parms{};

	Parms.HomeName = std::move(HomeName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SellHomeOwning
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           HomeName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SellHomeOwning(const class FString& HomeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SellHomeOwning");

	Params::SurvivalPlayer_C_SellHomeOwning Parms{};

	Parms.HomeName = std::move(HomeName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SellHouseOwning
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_HouseName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SellHouseOwning(const class FString& Param_HouseName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SellHouseOwning");

	Params::SurvivalPlayer_C_SellHouseOwning Parms{};

	Parms.Param_HouseName = std::move(Param_HouseName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SellHouseServ
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_HouseName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SellHouseServ(const class FString& Param_HouseName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SellHouseServ");

	Params::SurvivalPlayer_C_SellHouseServ Parms{};

	Parms.Param_HouseName = std::move(Param_HouseName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SellItems
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContainerPickupsInfo            Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::SellItems(const struct FContainerPickupsInfo& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SellItems");

	Params::SurvivalPlayer_C_SellItems Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SendDamage
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBPS_DamageInfo>          DamageInfo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::SendDamage(const TArray<struct FBPS_DamageInfo>& DamageInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SendDamage");

	Params::SurvivalPlayer_C_SendDamage Parms{};

	Parms.DamageInfo = std::move(DamageInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SendVoiceData
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_UseRadio                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<uint8>                           CompressedVoiceData                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::SendVoiceData(bool Param_UseRadio, const TArray<uint8>& CompressedVoiceData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SendVoiceData");

	Params::SurvivalPlayer_C_SendVoiceData Parms{};

	Parms.Param_UseRadio = Param_UseRadio;
	Parms.CompressedVoiceData = std::move(CompressedVoiceData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Serv+Health
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ChangedHealth                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DDLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontAnimate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            HitFrom                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServPlusHealth(double ChangedHealth, const struct FVector& DDLocation, class FName BoneName, const struct FVector& HitLocation, bool DontAnimate, class APawn* HitFrom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Serv+Health");

	Params::SurvivalPlayer_C_ServPlusHealth Parms{};

	Parms.ChangedHealth = ChangedHealth;
	Parms.DDLocation = std::move(DDLocation);
	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);
	Parms.DontAnimate = DontAnimate;
	Parms.HitFrom = HitFrom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Serv_InSauna
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InSauna                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Serv_InSauna(bool InSauna)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Serv_InSauna");

	Params::SurvivalPlayer_C_Serv_InSauna Parms{};

	Parms.InSauna = InSauna;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SERV_JumpSync
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SERV_JumpSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SERV_JumpSync");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Serv_SetCarAnim
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_InCar                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Driver                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarTipe                                Param_CarTipe                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_SitIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Serv_SetCarAnim(bool Param_InCar, bool Driver, ECarTipe Param_CarTipe, int32 Param_SitIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Serv_SetCarAnim");

	Params::SurvivalPlayer_C_Serv_SetCarAnim Parms{};

	Parms.Param_InCar = Param_InCar;
	Parms.Driver = Driver;
	Parms.Param_CarTipe = Param_CarTipe;
	Parms.Param_SitIndex = Param_SitIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Serv_SetFemale
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Serv_SetFemale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Serv_SetFemale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Serv_SyncInclineAxis
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_InclineAxisValue                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Serv_SyncInclineAxis(float Param_InclineAxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Serv_SyncInclineAxis");

	Params::SurvivalPlayer_C_Serv_SyncInclineAxis Parms{};

	Parms.Param_InclineAxisValue = Param_InclineAxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Serv_TeleportAt
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Serv_TeleportAt(const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Serv_TeleportAt");

	Params::SurvivalPlayer_C_Serv_TeleportAt Parms{};

	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServChangeBudget
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Sum                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServChangeBudget(int32 Sum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServChangeBudget");

	Params::SurvivalPlayer_C_ServChangeBudget Parms{};

	Parms.Sum = Sum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServDropItems
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDropItemEntry>           ItemList                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::ServDropItems(const TArray<struct FDropItemEntry>& ItemList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServDropItems");

	Params::SurvivalPlayer_C_ServDropItems Parms{};

	Parms.ItemList = std::move(ItemList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Server_deleteFromContainer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMPMainContainerBox_C*            MpContainerRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Shop                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemsLeft                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Server_deleteFromContainer(int32 ItemUID, class AMPMainContainerBox_C* MpContainerRef, bool IsContainer_, bool Param_Shop, int32 ItemsLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Server_deleteFromContainer");

	Params::SurvivalPlayer_C_Server_deleteFromContainer Parms{};

	Parms.ItemUID = ItemUID;
	Parms.MpContainerRef = MpContainerRef;
	Parms.IsContainer_ = IsContainer_;
	Parms.Param_Shop = Param_Shop;
	Parms.ItemsLeft = ItemsLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Server_deleteFromContainerAddToPlayer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMPMainContainerBox_C*            MpContainerRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Shop                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemsLeft                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Server_deleteFromContainerAddToPlayer(int32 ItemUID, class AMPMainContainerBox_C* MpContainerRef, bool IsContainer_, bool Param_Shop, int32 ItemsLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Server_deleteFromContainerAddToPlayer");

	Params::SurvivalPlayer_C_Server_deleteFromContainerAddToPlayer Parms{};

	Parms.ItemUID = ItemUID;
	Parms.MpContainerRef = MpContainerRef;
	Parms.IsContainer_ = IsContainer_;
	Parms.Param_Shop = Param_Shop;
	Parms.ItemsLeft = ItemsLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Server_DisableCloseDoor
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALootPoint_C*                     Param_LootPoint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Server_DisableCloseDoor(class ALootPoint_C* Param_LootPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Server_DisableCloseDoor");

	Params::SurvivalPlayer_C_Server_DisableCloseDoor Parms{};

	Parms.Param_LootPoint = Param_LootPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SERVER_MPContainerMoveItem
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ContainerUID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemSlotIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ToSlotIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UnqiueID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMPMainContainerBox_C*            MpContainerRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SERVER_MPContainerMoveItem(int32 ContainerUID, int32 ItemSlotIndex, int32 Param_ToSlotIndex, int32 UnqiueID, bool Rotated_, class AMPMainContainerBox_C* MpContainerRef, bool IsContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SERVER_MPContainerMoveItem");

	Params::SurvivalPlayer_C_SERVER_MPContainerMoveItem Parms{};

	Parms.ContainerUID = ContainerUID;
	Parms.ItemSlotIndex = ItemSlotIndex;
	Parms.Param_ToSlotIndex = Param_ToSlotIndex;
	Parms.UnqiueID = UnqiueID;
	Parms.Rotated_ = Rotated_;
	Parms.MpContainerRef = MpContainerRef;
	Parms.IsContainer = IsContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SERVER_RequestContainerData
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMPMainContainerBox_C*            Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_LootChanceModifier            LootChanceMod                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   Param_Quest_Items                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           Param_Quest_Items_Counts                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::SERVER_RequestContainerData(class AMPMainContainerBox_C* Container, const struct FS_LootChanceModifier& LootChanceMod, TArray<class FString>& Param_Quest_Items, TArray<int32>& Param_Quest_Items_Counts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SERVER_RequestContainerData");

	Params::SurvivalPlayer_C_SERVER_RequestContainerData Parms{};

	Parms.Container = Container;
	Parms.LootChanceMod = std::move(LootChanceMod);
	Parms.Param_Quest_Items = std::move(Param_Quest_Items);
	Parms.Param_Quest_Items_Counts = std::move(Param_Quest_Items_Counts);

	UObject::ProcessEvent(Func, &Parms);

	Param_Quest_Items = std::move(Parms.Param_Quest_Items);
	Param_Quest_Items_Counts = std::move(Parms.Param_Quest_Items_Counts);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallAttachCanister
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Canister_C*                   Canister                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallAttachCanister(class ABP_Canister_C* Canister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallAttachCanister");

	Params::SurvivalPlayer_C_ServerCallAttachCanister Parms{};

	Parms.Canister = Canister;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallCloseLoot
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALootPoint_C*                     Param_LootPoint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallCloseLoot(class ALootPoint_C* Param_LootPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallCloseLoot");

	Params::SurvivalPlayer_C_ServerCallCloseLoot Parms{};

	Parms.Param_LootPoint = Param_LootPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallDetachCanister
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ServerCallDetachCanister()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallDetachCanister");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallExitVehicle
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Vehicle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipAnimation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipExitOnLocation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreSpeedLimits                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallExitVehicle(class AActor* Param_Vehicle, bool SkipAnimation, bool SkipExitOnLocation, bool IgnoreSpeedLimits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallExitVehicle");

	Params::SurvivalPlayer_C_ServerCallExitVehicle Parms{};

	Parms.Param_Vehicle = Param_Vehicle;
	Parms.SkipAnimation = SkipAnimation;
	Parms.SkipExitOnLocation = SkipExitOnLocation;
	Parms.IgnoreSpeedLimits = IgnoreSpeedLimits;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallIncreaseDurability
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Vehicle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallIncreaseDurability(class AActor* Param_Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallIncreaseDurability");

	Params::SurvivalPlayer_C_ServerCallIncreaseDurability Parms{};

	Parms.Param_Vehicle = Param_Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallIncreaseFuel
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_RB_Vehicle_C*                 Param_Vehicle                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallIncreaseFuel(class ABP_RB_Vehicle_C* Param_Vehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallIncreaseFuel");

	Params::SurvivalPlayer_C_ServerCallIncreaseFuel Parms{};

	Parms.Param_Vehicle = Param_Vehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallInteract
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractiveActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallInteract(class AActor* InteractiveActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallInteract");

	Params::SurvivalPlayer_C_ServerCallInteract Parms{};

	Parms.InteractiveActor = InteractiveActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallInteractVehicle
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InteractiveActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_SitIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipAnimation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallInteractVehicle(class UObject* InteractiveActor, int32 Param_SitIndex, bool SkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallInteractVehicle");

	Params::SurvivalPlayer_C_ServerCallInteractVehicle Parms{};

	Parms.InteractiveActor = InteractiveActor;
	Parms.Param_SitIndex = Param_SitIndex;
	Parms.SkipAnimation = SkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallInvite
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                OtherPlayer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallInvite(class ASurvivalPlayer_C* OtherPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallInvite");

	Params::SurvivalPlayer_C_ServerCallInvite Parms{};

	Parms.OtherPlayer = OtherPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallInviteToHome
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APS_TDB_C*                        OtherPlayer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallInviteToHome(class APS_TDB_C* OtherPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallInviteToHome");

	Params::SurvivalPlayer_C_ServerCallInviteToHome Parms{};

	Parms.OtherPlayer = OtherPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallOpenLoot
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALootPoint_C*                     Param_LootPoint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallOpenLoot(class ALootPoint_C* Param_LootPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallOpenLoot");

	Params::SurvivalPlayer_C_ServerCallOpenLoot Parms{};

	Parms.Param_LootPoint = Param_LootPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallSetFlashlightEnabled
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallSetFlashlightEnabled(bool NewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallSetFlashlightEnabled");

	Params::SurvivalPlayer_C_ServerCallSetFlashlightEnabled Parms{};

	Parms.NewEnabled = NewEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallTrade
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                OtherPlayer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallTrade(class ASurvivalPlayer_C* OtherPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallTrade");

	Params::SurvivalPlayer_C_ServerCallTrade Parms{};

	Parms.OtherPlayer = OtherPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerCallTurnDoor
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Door_C*                       Door                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsOpen                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerCallTurnDoor(class ABP_Door_C* Door, bool IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerCallTurnDoor");

	Params::SurvivalPlayer_C_ServerCallTurnDoor Parms{};

	Parms.Door = Door;
	Parms.IsOpen = IsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerConfigureUniqItem
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AA_Item_C*                        Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerConfigureUniqItem(class AA_Item_C* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerConfigureUniqItem");

	Params::SurvivalPlayer_C_ServerConfigureUniqItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerContainerBoxClosed
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMPMainContainerBox_C*            FocusedContainer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerContainerBoxClosed(class AMPMainContainerBox_C* FocusedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerContainerBoxClosed");

	Params::SurvivalPlayer_C_ServerContainerBoxClosed Parms{};

	Parms.FocusedContainer = FocusedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerDealDamageToZombie
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBPE_Weapon_Type                        WeaponTyp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AZombie_C*                        Zombie                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// double                                  BaseDamag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitFromDirection                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ASurvivalPlayer_C::ServerDealDamageToZombie(EBPE_Weapon_Type WeaponTyp, const class AZombie_C*& Zombie, double BaseDamag, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerDealDamageToZombie");

	Params::SurvivalPlayer_C_ServerDealDamageToZombie Parms{};

	Parms.WeaponTyp = WeaponTyp;
	Parms.Zombie = Zombie;
	Parms.BaseDamag = BaseDamag;
	Parms.HitFromDirection = std::move(HitFromDirection);
	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerDeleteAndAddItem
// (Net, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DeleteIsContainer                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DeleteItemUID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMPMainContainerBox_C*            DeleteMPContainerRef                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FContainerPickupsInfo            AddItemPInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   AddToSlotIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FContainerPickupsInfo>    AddContainerData                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    AddContainerItems                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    AddIsContainer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerDeleteAndAddItem(bool DeleteIsContainer, int32 DeleteItemUID, class AMPMainContainerBox_C* DeleteMPContainerRef, const struct FContainerPickupsInfo& AddItemPInfo, int32 AddToSlotIndex, TArray<struct FContainerPickupsInfo>& AddContainerData, TArray<struct FContainerPickupsInfo>& AddContainerItems, bool AddIsContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerDeleteAndAddItem");

	Params::SurvivalPlayer_C_ServerDeleteAndAddItem Parms{};

	Parms.DeleteIsContainer = DeleteIsContainer;
	Parms.DeleteItemUID = DeleteItemUID;
	Parms.DeleteMPContainerRef = DeleteMPContainerRef;
	Parms.AddItemPInfo = std::move(AddItemPInfo);
	Parms.AddToSlotIndex = AddToSlotIndex;
	Parms.AddContainerData = std::move(AddContainerData);
	Parms.AddContainerItems = std::move(AddContainerItems);
	Parms.AddIsContainer = AddIsContainer;

	UObject::ProcessEvent(Func, &Parms);

	AddContainerData = std::move(Parms.AddContainerData);
	AddContainerItems = std::move(Parms.AddContainerItems);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerItemAddedToContainer
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMPMainContainerBox_C*            Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ToSlotIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FContainerPickupsInfo            ItemPInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// TArray<struct FContainerPickupsInfo>    ContainerData                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    Param_ContainerItems                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::ServerItemAddedToContainer(class AMPMainContainerBox_C* Target, int32 Param_ToSlotIndex, const struct FContainerPickupsInfo& ItemPInfo, TArray<struct FContainerPickupsInfo>& ContainerData, TArray<struct FContainerPickupsInfo>& Param_ContainerItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerItemAddedToContainer");

	Params::SurvivalPlayer_C_ServerItemAddedToContainer Parms{};

	Parms.Target = Target;
	Parms.Param_ToSlotIndex = Param_ToSlotIndex;
	Parms.ItemPInfo = std::move(ItemPInfo);
	Parms.ContainerData = std::move(ContainerData);
	Parms.Param_ContainerItems = std::move(Param_ContainerItems);

	UObject::ProcessEvent(Func, &Parms);

	ContainerData = std::move(Parms.ContainerData);
	Param_ContainerItems = std::move(Parms.Param_ContainerItems);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerItemsAddedToContainer
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMPMainContainerBox_C*            Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           SlotIndex                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FContainerPickupsInfo>    ItemPInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::ServerItemsAddedToContainer(class AMPMainContainerBox_C* Target, const TArray<int32>& SlotIndex, const TArray<struct FContainerPickupsInfo>& ItemPInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerItemsAddedToContainer");

	Params::SurvivalPlayer_C_ServerItemsAddedToContainer Parms{};

	Parms.Target = Target;
	Parms.SlotIndex = std::move(SlotIndex);
	Parms.ItemPInfo = std::move(ItemPInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerItemUpdateInContainer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMPMainContainerBox_C*            Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FContainerPickupsInfo            ItemPInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerItemUpdateInContainer(class AMPMainContainerBox_C* Target, const struct FContainerPickupsInfo& ItemPInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerItemUpdateInContainer");

	Params::SurvivalPlayer_C_ServerItemUpdateInContainer Parms{};

	Parms.Target = Target;
	Parms.ItemPInfo = std::move(ItemPInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerMoveItemContainer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_ToSlotIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMPMainContainerBox_C*            Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Shop                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerMoveItemContainer(int32 Param_ToSlotIndex, int32 ItemUID, int32 ToContainerUID, bool IsContainer, class AMPMainContainerBox_C* Container, bool Param_Shop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerMoveItemContainer");

	Params::SurvivalPlayer_C_ServerMoveItemContainer Parms{};

	Parms.Param_ToSlotIndex = Param_ToSlotIndex;
	Parms.ItemUID = ItemUID;
	Parms.ToContainerUID = ToContainerUID;
	Parms.IsContainer = IsContainer;
	Parms.Container = Container;
	Parms.Param_Shop = Param_Shop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerOnBeginInteract
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerOnBeginInteract(class AActor* InteractedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerOnBeginInteract");

	Params::SurvivalPlayer_C_ServerOnBeginInteract Parms{};

	Parms.InteractedActor = InteractedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerRefillGasVehicle
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InteractiveActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerRefillGasVehicle(class UObject* InteractiveActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerRefillGasVehicle");

	Params::SurvivalPlayer_C_ServerRefillGasVehicle Parms{};

	Parms.InteractiveActor = InteractiveActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerRepairVehicle
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InteractiveActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerRepairVehicle(class UObject* InteractiveActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerRepairVehicle");

	Params::SurvivalPlayer_C_ServerRepairVehicle Parms{};

	Parms.InteractiveActor = InteractiveActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerRequestShopContent
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMPMainContainerBox_C*            Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerRequestShopContent(class AMPMainContainerBox_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerRequestShopContent");

	Params::SurvivalPlayer_C_ServerRequestShopContent Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerSetCurrentActive
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerSlots                            Param_CurrentActiveSlot                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerSetCurrentActive(EPlayerSlots Param_CurrentActiveSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerSetCurrentActive");

	Params::SurvivalPlayer_C_ServerSetCurrentActive Parms{};

	Parms.Param_CurrentActiveSlot = Param_CurrentActiveSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServerUnactiveWeapons
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PrimaryWeaponSlot                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SecondaryWeaponSlot                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             PistolWeaponSlot                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Param_MeleeWeaponSlot                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreLocal                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServerUnactiveWeapons(class FName PrimaryWeaponSlot, class FName SecondaryWeaponSlot, class FName PistolWeaponSlot, class FName Param_MeleeWeaponSlot, bool IgnoreLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServerUnactiveWeapons");

	Params::SurvivalPlayer_C_ServerUnactiveWeapons Parms{};

	Parms.PrimaryWeaponSlot = PrimaryWeaponSlot;
	Parms.SecondaryWeaponSlot = SecondaryWeaponSlot;
	Parms.PistolWeaponSlot = PistolWeaponSlot;
	Parms.Param_MeleeWeaponSlot = Param_MeleeWeaponSlot;
	Parms.IgnoreLocal = IgnoreLocal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServResetPosition
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ServResetPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServResetPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServSetCanHoldWeapon
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_CanHoldWeapon                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServSetCanHoldWeapon(bool Param_CanHoldWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServSetCanHoldWeapon");

	Params::SurvivalPlayer_C_ServSetCanHoldWeapon Parms{};

	Parms.Param_CanHoldWeapon = Param_CanHoldWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServSetDamageable
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ServSetDamageable(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServSetDamageable");

	Params::SurvivalPlayer_C_ServSetDamageable Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServSetIgnorePawn
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ServSetIgnorePawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServSetIgnorePawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ServSyncInvStash
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AInventoryStash_C*                InvStash                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    InvFetched                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FDefaultItemInfo>         FetchedItems                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::ServSyncInvStash(class AInventoryStash_C* InvStash, bool InvFetched, const TArray<struct FDefaultItemInfo>& FetchedItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ServSyncInvStash");

	Params::SurvivalPlayer_C_ServSyncInvStash Parms{};

	Parms.InvStash = InvStash;
	Parms.InvFetched = InvFetched;
	Parms.FetchedItems = std::move(FetchedItems);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Set Default Suit from Create
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventoryWorker_C*               Ref                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Set_Default_Suit_from_Create(class UInventoryWorker_C* Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Set Default Suit from Create");

	Params::SurvivalPlayer_C_Set_Default_Suit_from_Create Parms{};

	Parms.Ref = Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Set Hit Percentage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HitReg                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Set_Hit_Percentage(bool HitReg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Set Hit Percentage");

	Params::SurvivalPlayer_C_Set_Hit_Percentage Parms{};

	Parms.HitReg = HitReg;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Set Struct Save
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_SaveStructure                 Struct                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::Set_Struct_Save(const struct FS_SaveStructure& Struct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Set Struct Save");

	Params::SurvivalPlayer_C_Set_Struct_Save Parms{};

	Parms.Struct = std::move(Struct);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Set Timer
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Set_Timer(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Set Timer");

	Params::SurvivalPlayer_C_Set_Timer Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Set Visible and Collision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Set_Visible_and_Collision(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Set Visible and Collision");

	Params::SurvivalPlayer_C_Set_Visible_and_Collision Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Set3DWidgetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Set3DWidgetVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Set3DWidgetVisibility");

	Params::SurvivalPlayer_C_Set3DWidgetVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetActiveWeaponSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerSlots                            Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetActiveWeaponSlot(EPlayerSlots Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetActiveWeaponSlot");

	Params::SurvivalPlayer_C_SetActiveWeaponSlot Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetAiming
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAim                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FPS                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NotReplicate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetAiming(bool IsAim, bool FPS, bool NotReplicate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetAiming");

	Params::SurvivalPlayer_C_SetAiming Parms{};

	Parms.IsAim = IsAim;
	Parms.FPS = FPS;
	Parms.NotReplicate = NotReplicate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetAIMPPPArameters
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  BlurDist                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BlurRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Density                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetAIMPPPArameters(double BlurDist, double BlurRadius, double Density)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetAIMPPPArameters");

	Params::SurvivalPlayer_C_SetAIMPPPArameters Parms{};

	Parms.BlurDist = BlurDist;
	Parms.BlurRadius = BlurRadius;
	Parms.Density = Density;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetAnimInWater
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_InWater                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetAnimInWater(bool Param_InWater)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetAnimInWater");

	Params::SurvivalPlayer_C_SetAnimInWater Parms{};

	Parms.Param_InWater = Param_InWater;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetAttachementsVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetAttachementsVisibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetAttachementsVisibility");

	Params::SurvivalPlayer_C_SetAttachementsVisibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetAttachments
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWeaponPlaceholder_C*             WeaponPlaceholder                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetAttachments(class AWeaponPlaceholder_C* WeaponPlaceholder, const struct FFItemInfo& FItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetAttachments");

	Params::SurvivalPlayer_C_SetAttachments Parms{};

	Parms.WeaponPlaceholder = WeaponPlaceholder;
	Parms.FItemInfo = std::move(FItemInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCameraCompas
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SetCameraCompas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCameraCompas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCameraGPS
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SetCameraGPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCameraGPS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCameraLockOnTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     CameraModeTag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetCameraLockOnTarget(const struct FGameplayTag& CameraModeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCameraLockOnTarget");

	Params::SurvivalPlayer_C_SetCameraLockOnTarget Parms{};

	Parms.CameraModeTag = std::move(CameraModeTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCapsuleOrient
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SetCapsuleOrient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCapsuleOrient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCarstStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Stats                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::SetCarstStat(TArray<class FString>& Stats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCarstStat");

	Params::SurvivalPlayer_C_SetCarstStat Parms{};

	Parms.Stats = std::move(Stats);

	UObject::ProcessEvent(Func, &Parms);

	Stats = std::move(Parms.Stats);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCharacterRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         TargetRotation_Yaw                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Interp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsShooting                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetCharacterRotation(const struct FRotator& TargetRotation_Yaw, bool Interp, bool Param_IsShooting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCharacterRotation");

	Params::SurvivalPlayer_C_SetCharacterRotation Parms{};

	Parms.TargetRotation_Yaw = std::move(TargetRotation_Yaw);
	Parms.Interp = Interp;
	Parms.Param_IsShooting = Param_IsShooting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCheckedForSpace
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnoughSpace                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetCheckedForSpace(bool EnoughSpace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCheckedForSpace");

	Params::SurvivalPlayer_C_SetCheckedForSpace Parms{};

	Parms.EnoughSpace = EnoughSpace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCraftState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECraftState                             State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetCraftState(ECraftState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCraftState");

	Params::SurvivalPlayer_C_SetCraftState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCrawling
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Crawling                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetCrawling(bool Param_Crawling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCrawling");

	Params::SurvivalPlayer_C_SetCrawling Parms{};

	Parms.Param_Crawling = Param_Crawling;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCrawlingMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Crawling                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetCrawlingMulticast(bool Param_Crawling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCrawlingMulticast");

	Params::SurvivalPlayer_C_SetCrawlingMulticast Parms{};

	Parms.Param_Crawling = Param_Crawling;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCrawlingServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Crawling                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetCrawlingServer(bool Param_Crawling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCrawlingServer");

	Params::SurvivalPlayer_C_SetCrawlingServer Parms{};

	Parms.Param_Crawling = Param_Crawling;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCurrentPlaceholder
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerSlots                            Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetCurrentPlaceholder(EPlayerSlots Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCurrentPlaceholder");

	Params::SurvivalPlayer_C_SetCurrentPlaceholder Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCusomizeFace
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SetCusomizeFace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCusomizeFace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetCustomizeFace2
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SetCustomizeFace2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetCustomizeFace2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetDamageable
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Damageable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetDamageable(bool Damageable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetDamageable");

	Params::SurvivalPlayer_C_SetDamageable Parms{};

	Parms.Damageable = Damageable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetDamageableServ
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Damageable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetDamageableServ(bool Damageable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetDamageableServ");

	Params::SurvivalPlayer_C_SetDamageableServ Parms{};

	Parms.Damageable = Damageable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetDefaultClothes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Out                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Pan                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetDefaultClothes(class FString* Out, class FString* Pan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetDefaultClothes");

	Params::SurvivalPlayer_C_SetDefaultClothes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);

	if (Pan != nullptr)
		*Pan = std::move(Parms.Pan);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetDieWithAnim
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Burnt_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetDieWithAnim(bool Burnt_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetDieWithAnim");

	Params::SurvivalPlayer_C_SetDieWithAnim Parms{};

	Parms.Burnt_ = Burnt_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetDurabilityItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemServerID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewDurability                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetDurabilityItem(int32 ItemId, int32 ItemServerID, double NewDurability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetDurabilityItem");

	Params::SurvivalPlayer_C_SetDurabilityItem Parms{};

	Parms.ItemId = ItemId;
	Parms.ItemServerID = ItemServerID;
	Parms.NewDurability = NewDurability;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetEnableSmoothSync
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetEnableSmoothSync(bool NewEnable, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetEnableSmoothSync");

	Params::SurvivalPlayer_C_SetEnableSmoothSync Parms{};

	Parms.NewEnable = NewEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetEnableTrails
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetEnableTrails(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetEnableTrails");

	Params::SurvivalPlayer_C_SetEnableTrails Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetEndgameStatFromSave
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int64>                           EGSSave                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::SetEndgameStatFromSave(const TArray<int64>& EGSSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetEndgameStatFromSave");

	Params::SurvivalPlayer_C_SetEndgameStatFromSave Parms{};

	Parms.EGSSave = std::move(EGSSave);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetEquipmentTier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EquipmentSlot                           EquipmentSlot                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EquipmentName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Tier                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetEquipmentTier(EquipmentSlot EquipmentSlot, class FName EquipmentName, int32 Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetEquipmentTier");

	Params::SurvivalPlayer_C_SetEquipmentTier Parms{};

	Parms.EquipmentSlot = EquipmentSlot;
	Parms.EquipmentName = EquipmentName;
	Parms.Tier = Tier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetEquipStatusBySlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EquipmentSlot                           Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetEquipStatusBySlot(EquipmentSlot Slot, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetEquipStatusBySlot");

	Params::SurvivalPlayer_C_SetEquipStatusBySlot Parms{};

	Parms.Slot = Slot;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetGPSPage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPageChanged                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetGPSPage(int32 InputPin, bool* bPageChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetGPSPage");

	Params::SurvivalPlayer_C_SetGPSPage Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	if (bPageChanged != nullptr)
		*bPageChanged = Parms.bPageChanged;
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetIgnorePawn
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SetIgnorePawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetIgnorePawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetInventoryInited
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SetInventoryInited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetInventoryInited");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetInventoryInitedLocal
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SetInventoryInitedLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetInventoryInitedLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetIsInElevator
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bIsInElevator                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetIsInElevator(bool Param_bIsInElevator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetIsInElevator");

	Params::SurvivalPlayer_C_SetIsInElevator Parms{};

	Parms.Param_bIsInElevator = Param_bIsInElevator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetIsInHouse
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsInHouseBool                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetIsInHouse(bool Param_IsInHouseBool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetIsInHouse");

	Params::SurvivalPlayer_C_SetIsInHouse Parms{};

	Parms.Param_IsInHouseBool = Param_IsInHouseBool;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetItemUsingAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SpecialItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanMove                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasStandAnim                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WepNotHiding                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetItemUsingAnim(class UAnimSequence* Anim, bool SpecialItem, bool CanMove, bool HasStandAnim, bool WepNotHiding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetItemUsingAnim");

	Params::SurvivalPlayer_C_SetItemUsingAnim Parms{};

	Parms.Anim = Anim;
	Parms.SpecialItem = SpecialItem;
	Parms.CanMove = CanMove;
	Parms.HasStandAnim = HasStandAnim;
	Parms.WepNotHiding = WepNotHiding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetLooting
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Looting                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LootHeight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetLooting(bool Looting, double LootHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetLooting");

	Params::SurvivalPlayer_C_SetLooting Parms{};

	Parms.Looting = Looting;
	Parms.LootHeight = LootHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetLootingMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Looting                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LootHeight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetLootingMulticast(bool Looting, double LootHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetLootingMulticast");

	Params::SurvivalPlayer_C_SetLootingMulticast Parms{};

	Parms.Looting = Looting;
	Parms.LootHeight = LootHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetMoveType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// MovementType::EMovementType             MoveType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetMoveType(MovementType::EMovementType MoveType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetMoveType");

	Params::SurvivalPlayer_C_SetMoveType Parms{};

	Parms.MoveType = MoveType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetNaked
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsNaked                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetNaked(bool IsNaked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetNaked");

	Params::SurvivalPlayer_C_SetNaked Parms{};

	Parms.IsNaked = IsNaked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetParamsBeforeTrade
// (Net, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFItemInfo>               Param_TradeItems                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::SetParamsBeforeTrade(const TArray<struct FFItemInfo>& Param_TradeItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetParamsBeforeTrade");

	Params::SurvivalPlayer_C_SetParamsBeforeTrade Parms{};

	Parms.Param_TradeItems = std::move(Param_TradeItems);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetPlayerCollisionInCar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewEnable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetPlayerCollisionInCar(bool NewEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetPlayerCollisionInCar");

	Params::SurvivalPlayer_C_SetPlayerCollisionInCar Parms{};

	Parms.NewEnable = NewEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetPlayerListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class ISurvivalPlayerListener_C>Listener                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetPlayerListener(TScriptInterface<class ISurvivalPlayerListener_C> Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetPlayerListener");

	Params::SurvivalPlayer_C_SetPlayerListener Parms{};

	Parms.Listener = Listener;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetQuestEventListener
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IQuestEventListener_C>Listener                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetQuestEventListener(TScriptInterface<class IQuestEventListener_C> Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetQuestEventListener");

	Params::SurvivalPlayer_C_SetQuestEventListener Parms{};

	Parms.Listener = Listener;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetReadyToTrade_Server
// (Net, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFItemInfo>               InputPin                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::SetReadyToTrade_Server(const TArray<struct FFItemInfo>& InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetReadyToTrade_Server");

	Params::SurvivalPlayer_C_SetReadyToTrade_Server Parms{};

	Parms.InputPin = std::move(InputPin);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetReloadState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetReloadState(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetReloadState");

	Params::SurvivalPlayer_C_SetReloadState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetRPointsCount__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_RPoints                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetRPointsCount__DelegateSignature(int32 Param_RPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetRPointsCount__DelegateSignature");

	Params::SurvivalPlayer_C_SetRPointsCount__DelegateSignature Parms{};

	Parms.Param_RPoints = Param_RPoints;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetSaveCarsStats
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Stats                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::SetSaveCarsStats(TArray<class FString>& Stats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetSaveCarsStats");

	Params::SurvivalPlayer_C_SetSaveCarsStats Parms{};

	Parms.Stats = std::move(Stats);

	UObject::ProcessEvent(Func, &Parms);

	Stats = std::move(Parms.Stats);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetSaveCharacterOnOwningClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_SaveStructure                 Param_GI_Character_Save_Ref                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetSaveCharacterOnOwningClient(class ASurvivalPlayer_C* Character, const struct FS_SaveStructure& Param_GI_Character_Save_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetSaveCharacterOnOwningClient");

	Params::SurvivalPlayer_C_SetSaveCharacterOnOwningClient Parms{};

	Parms.Character = Character;
	Parms.Param_GI_Character_Save_Ref = std::move(Param_GI_Character_Save_Ref);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetSensitivityMultiplier
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SetSensitivityMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetSensitivityMultiplier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetShopNow
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_ShopNow                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetShopNow(bool Param_ShopNow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetShopNow");

	Params::SurvivalPlayer_C_SetShopNow Parms{};

	Parms.Param_ShopNow = Param_ShopNow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetSkeletalCloth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkinnedMeshComponent*            SkeletalMesh                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class USkeletalMesh>     NewMesh                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetSkeletalCloth(class USkinnedMeshComponent* SkeletalMesh, TSoftObjectPtr<class USkeletalMesh> NewMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetSkeletalCloth");

	Params::SurvivalPlayer_C_SetSkeletalCloth Parms{};

	Parms.SkeletalMesh = SkeletalMesh;
	Parms.NewMesh = NewMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetSpeedByWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetSpeedByWeapon(class FName RowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetSpeedByWeapon");

	Params::SurvivalPlayer_C_SetSpeedByWeapon Parms{};

	Parms.RowName = RowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetSprint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SprintActive                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetSprint(bool SprintActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetSprint");

	Params::SurvivalPlayer_C_SetSprint Parms{};

	Parms.SprintActive = SprintActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetStance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EStanceState                            NewStance                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetStance(EStanceState NewStance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetStance");

	Params::SurvivalPlayer_C_SetStance Parms{};

	Parms.NewStance = NewStance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetTraderOnServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Param_Trader                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetTraderOnServer(class ASurvivalPlayer_C* Param_Trader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetTraderOnServer");

	Params::SurvivalPlayer_C_SetTraderOnServer Parms{};

	Parms.Param_Trader = Param_Trader;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetTutorial3DWidgetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetTutorial3DWidgetVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetTutorial3DWidgetVisibility");

	Params::SurvivalPlayer_C_SetTutorial3DWidgetVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetUnactiveForAllWeapons
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SetUnactiveForAllWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetUnactiveForAllWeapons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetUnactiveWeaponsMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PrimaryWeaponSlot                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SecondaryWeaponSlot                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             PistolWeaponSlot                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Param_MeleeWeaponSlot                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetUnactiveWeaponsMesh(class FName PrimaryWeaponSlot, class FName SecondaryWeaponSlot, class FName PistolWeaponSlot, class FName Param_MeleeWeaponSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetUnactiveWeaponsMesh");

	Params::SurvivalPlayer_C_SetUnactiveWeaponsMesh Parms{};

	Parms.PrimaryWeaponSlot = PrimaryWeaponSlot;
	Parms.SecondaryWeaponSlot = SecondaryWeaponSlot;
	Parms.PistolWeaponSlot = PistolWeaponSlot;
	Parms.Param_MeleeWeaponSlot = Param_MeleeWeaponSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetUsingItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UsingItem                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanMove                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NotWepHide                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetUsingItem(bool UsingItem, bool CanMove, bool NotWepHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetUsingItem");

	Params::SurvivalPlayer_C_SetUsingItem Parms{};

	Parms.UsingItem = UsingItem;
	Parms.CanMove = CanMove;
	Parms.NotWepHide = NotWepHide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_WeaponName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EPlayerSlots                            CurrentActive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       Weapon_ItemInfo                                        (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    WithoutAnimation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetWeapon(class FName Param_WeaponName, class UJSI_Slot_C* ItemState, EPlayerSlots CurrentActive, const struct FFItemInfo& Weapon_ItemInfo, bool WithoutAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetWeapon");

	Params::SurvivalPlayer_C_SetWeapon Parms{};

	Parms.Param_WeaponName = Param_WeaponName;
	Parms.ItemState = ItemState;
	Parms.CurrentActive = CurrentActive;
	Parms.Weapon_ItemInfo = std::move(Weapon_ItemInfo);
	Parms.WithoutAnimation = WithoutAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetWeaponSlotMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              PhysicsSM                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Root                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  WeaponPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AWeaponPlaceholder_C*             WeaponPlaceholder                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetWeaponSlotMesh(class UPrimitiveComponent* PhysicsSM, class USceneComponent* Root, class USceneComponent* WeaponPoint, class AWeaponPlaceholder_C* WeaponPlaceholder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetWeaponSlotMesh");

	Params::SurvivalPlayer_C_SetWeaponSlotMesh Parms{};

	Parms.PhysicsSM = PhysicsSM;
	Parms.Root = Root;
	Parms.WeaponPoint = WeaponPoint;
	Parms.WeaponPlaceholder = WeaponPlaceholder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SetWeaponType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBPE_Weapon_Type                        Param_WeaponType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SetWeaponType(EBPE_Weapon_Type Param_WeaponType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SetWeaponType");

	Params::SurvivalPlayer_C_SetWeaponType Parms{};

	Parms.Param_WeaponType = Param_WeaponType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShootEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ShootEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShootEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShootHitEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ShootHitEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShootHitEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShootNoiseForAI
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ShootNoiseForAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShootNoiseForAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShopCameraShake
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ShopCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShopCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShopContOnContUnhandled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiverRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_ToSlotIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RightMouseButton                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShopContOnContUnhandled(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 Param_ToSlotIndex, bool Rotated_, bool RightMouseButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShopContOnContUnhandled");

	Params::SurvivalPlayer_C_ShopContOnContUnhandled Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.DroppedSlotRef = DroppedSlotRef;
	Parms.SlotReceiverRef = SlotReceiverRef;
	Parms.Param_ToSlotIndex = Param_ToSlotIndex;
	Parms.Rotated_ = Rotated_;
	Parms.RightMouseButton = RightMouseButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShopContToCont
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      FromSlotRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ToSlotRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ToEmptySlot_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MovedAll_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShopContToCont(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShopContToCont");

	Params::SurvivalPlayer_C_ShopContToCont Parms{};

	Parms.From = From;
	Parms.To = To;
	Parms.FromSlotRef = FromSlotRef;
	Parms.ToSlotRef = ToSlotRef;
	Parms.ToEmptySlot_ = ToEmptySlot_;
	Parms.MovedAll_ = MovedAll_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShopDoubleClick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShopDoubleClick(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShopDoubleClick");

	Params::SurvivalPlayer_C_ShopDoubleClick Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShopEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ShopEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShopEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShopRotChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   NewIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShopRotChanged(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, int32 NewIndex, bool Rotated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShopRotChanged");

	Params::SurvivalPlayer_C_ShopRotChanged Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.NewIndex = NewIndex;
	Parms.Rotated = Rotated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShopStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ShopStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShopStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShotgunReloadEvent
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BulletIn_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShotgunReloadEvent(bool BulletIn_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShotgunReloadEvent");

	Params::SurvivalPlayer_C_ShotgunReloadEvent Parms{};

	Parms.BulletIn_ = BulletIn_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShotgunReloadMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BulletIn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShotgunReloadMulti(bool BulletIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShotgunReloadMulti");

	Params::SurvivalPlayer_C_ShotgunReloadMulti Parms{};

	Parms.BulletIn = BulletIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShotgunZombieDamage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBPS_DamageInfo>          DamageInfoArray                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::ShotgunZombieDamage(TArray<struct FBPS_DamageInfo>& DamageInfoArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShotgunZombieDamage");

	Params::SurvivalPlayer_C_ShotgunZombieDamage Parms{};

	Parms.DamageInfoArray = std::move(DamageInfoArray);

	UObject::ProcessEvent(Func, &Parms);

	DamageInfoArray = std::move(Parms.DamageInfoArray);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShowBigText
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShowBigText(const class FString& Text, const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShowBigText");

	Params::SurvivalPlayer_C_ShowBigText Parms{};

	Parms.Text = std::move(Text);
	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShowBunkerMarks
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShowBunkerMarks(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShowBunkerMarks");

	Params::SurvivalPlayer_C_ShowBunkerMarks Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShowItemsList
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ShowItemsList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShowItemsList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShowSimpleText
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShowSimpleText(const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShowSimpleText");

	Params::SurvivalPlayer_C_ShowSimpleText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShowSimpleUIText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShowSimpleUIText(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShowSimpleUIText");

	Params::SurvivalPlayer_C_ShowSimpleUIText Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ShowWPFakeShadow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewCastHiddenShadow                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ShowWPFakeShadow(bool NewCastHiddenShadow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ShowWPFakeShadow");

	Params::SurvivalPlayer_C_ShowWPFakeShadow Parms{};

	Parms.NewCastHiddenShadow = NewCastHiddenShadow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SimpleCreateDynMat
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMesh                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstanceDynamic*> Materials                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ASurvivalPlayer_C::SimpleCreateDynMat(class USkeletalMeshComponent* SkeletalMesh, TArray<class UMaterialInstanceDynamic*>& Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SimpleCreateDynMat");

	Params::SurvivalPlayer_C_SimpleCreateDynMat Parms{};

	Parms.SkeletalMesh = SkeletalMesh;
	Parms.Materials = std::move(Materials);

	UObject::ProcessEvent(Func, &Parms);

	Materials = std::move(Parms.Materials);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SitOnBarLocal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Sit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SitOnBarLocal(class AActor* Hightlight, bool Param_Sit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SitOnBarLocal");

	Params::SurvivalPlayer_C_SitOnBarLocal Parms{};

	Parms.Hightlight = Hightlight;
	Parms.Param_Sit = Param_Sit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SitOnBarServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Sit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SitOnBarServer(class AActor* Hightlight, bool Param_Sit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SitOnBarServer");

	Params::SurvivalPlayer_C_SitOnBarServer Parms{};

	Parms.Hightlight = Hightlight;
	Parms.Param_Sit = Param_Sit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SitOnChairLocal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Sit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SitOnChairLocal(class AActor* Hightlight, bool Param_Sit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SitOnChairLocal");

	Params::SurvivalPlayer_C_SitOnChairLocal Parms{};

	Parms.Hightlight = Hightlight;
	Parms.Param_Sit = Param_Sit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SitOnChairServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Sit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SitOnChairServer(class AActor* Hightlight, bool Param_Sit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SitOnChairServer");

	Params::SurvivalPlayer_C_SitOnChairServer Parms{};

	Parms.Hightlight = Hightlight;
	Parms.Param_Sit = Param_Sit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SitOnGymServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Sit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SitOnGymServer(class AActor* Hightlight, bool Param_Sit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SitOnGymServer");

	Params::SurvivalPlayer_C_SitOnGymServer Parms{};

	Parms.Hightlight = Hightlight;
	Parms.Param_Sit = Param_Sit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SkipDamageAnim
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SkipDamageAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SkipDamageAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Spawn3Character
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Spawn3Character()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Spawn3Character");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnBottleMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      Bottle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SpawnBottleMulticast(class UStaticMesh* Bottle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnBottleMulticast");

	Params::SurvivalPlayer_C_SpawnBottleMulticast Parms{};

	Parms.Bottle = Bottle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnBottleServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      Bottle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SpawnBottleServer(class UStaticMesh* Bottle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnBottleServer");

	Params::SurvivalPlayer_C_SpawnBottleServer Parms{};

	Parms.Bottle = Bottle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnBunkerMarks
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SpawnBunkerMarks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnBunkerMarks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnCompasMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SpawnCompasMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnCompasMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnCompasServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SpawnCompasServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnCompasServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnDeadBodyV2
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SpawnDeadBodyV2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnDeadBodyV2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnDeadBodyWithDrop
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDropItemEntry>           Param_Drop                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_OnDeathVelocity                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             HitBoneName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RadialDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Killer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Animed                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SpawnDeadBodyWithDrop(const TArray<struct FDropItemEntry>& Param_Drop, const struct FVector& HitLocation, const struct FVector& Param_OnDeathVelocity, class FName HitBoneName, bool RadialDamage, class APawn* Param_Killer, bool Animed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnDeadBodyWithDrop");

	Params::SurvivalPlayer_C_SpawnDeadBodyWithDrop Parms{};

	Parms.Param_Drop = std::move(Param_Drop);
	Parms.HitLocation = std::move(HitLocation);
	Parms.Param_OnDeathVelocity = std::move(Param_OnDeathVelocity);
	Parms.HitBoneName = HitBoneName;
	Parms.RadialDamage = RadialDamage;
	Parms.Param_Killer = Param_Killer;
	Parms.Animed = Animed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnDropItem
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// TArray<struct FContainerPickupsInfo>    Param_ContainersData                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    Param_ContainerItems                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Massive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFItemInfo>               InfoArr                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::SpawnDropItem(const struct FVector& Position, const struct FFItemInfo& Info, const TArray<struct FContainerPickupsInfo>& Param_ContainersData, const TArray<struct FContainerPickupsInfo>& Param_ContainerItems, bool Massive, const TArray<struct FFItemInfo>& InfoArr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnDropItem");

	Params::SurvivalPlayer_C_SpawnDropItem Parms{};

	Parms.Position = std::move(Position);
	Parms.Info = std::move(Info);
	Parms.Param_ContainersData = std::move(Param_ContainersData);
	Parms.Param_ContainerItems = std::move(Param_ContainerItems);
	Parms.Massive = Massive;
	Parms.InfoArr = std::move(InfoArr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnFootprintDecal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Right                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Left                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SpawnFootprintDecal(class FName SocketName, bool Right, bool Left)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnFootprintDecal");

	Params::SurvivalPlayer_C_SpawnFootprintDecal Parms{};

	Parms.SocketName = SocketName;
	Parms.Right = Right;
	Parms.Left = Left;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnForkKnifeMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SpawnForkKnifeMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnForkKnifeMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnForkKnifeServer
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SpawnForkKnifeServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnForkKnifeServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnGPSMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SpawnGPSMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnGPSMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnGPSServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SpawnGPSServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnGPSServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnMenu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Table                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SpawnMenu(class AActor* Table)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnMenu");

	Params::SurvivalPlayer_C_SpawnMenu Parms{};

	Parms.Table = Table;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnMenuChair
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SpawnMenuChair(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnMenuChair");

	Params::SurvivalPlayer_C_SpawnMenuChair Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnMenuMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SpawnMenuMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnMenuMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnProjectile_server
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Param_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Spawn_Transform_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Spawn_Transform_Scale                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESpawnActorCollisionHandlingMethod      CollisionHandlingOverride                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FBPS_WeaponData                  WeaponData                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    ShowTrace                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Instigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EBPE_AmmoType                           AmmoType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SpawnProjectile_server(class UClass* Param_Class, const struct FVector& Spawn_Transform_Location, const struct FRotator& Spawn_Transform_Rotation, const struct FVector& Spawn_Transform_Scale, ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class AActor* Param_Owner, const struct FBPS_WeaponData& WeaponData, bool ShowTrace, class APawn* Param_Instigator, EBPE_AmmoType AmmoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnProjectile_server");

	Params::SurvivalPlayer_C_SpawnProjectile_server Parms{};

	Parms.Param_Class = Param_Class;
	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Spawn_Transform_Rotation = std::move(Spawn_Transform_Rotation);
	Parms.Spawn_Transform_Scale = std::move(Spawn_Transform_Scale);
	Parms.CollisionHandlingOverride = CollisionHandlingOverride;
	Parms.Param_Owner = Param_Owner;
	Parms.WeaponData = std::move(WeaponData);
	Parms.ShowTrace = ShowTrace;
	Parms.Param_Instigator = Param_Instigator;
	Parms.AmmoType = AmmoType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnQuestIcons
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceUpdate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SpawnQuestIcons(bool ForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnQuestIcons");

	Params::SurvivalPlayer_C_SpawnQuestIcons Parms{};

	Parms.ForceUpdate = ForceUpdate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnTruppe
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SpawnTruppe(const struct FVector& Impulse, const struct FVector& Location, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnTruppe");

	Params::SurvivalPlayer_C_SpawnTruppe Parms{};

	Parms.Impulse = std::move(Impulse);
	Parms.Location = std::move(Location);
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SpawnZombie
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SpawnZombie(const struct FVector& InVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SpawnZombie");

	Params::SurvivalPlayer_C_SpawnZombie Parms{};

	Parms.InVec = std::move(InVec);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SplitInContainer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      SourceSlotRef                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      NewSplitSlotRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ContainerSource                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ContainerReceiver                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   SplitAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AmountRemaining                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SplitInContainer(class UJSI_Slot_C* SourceSlotRef, class UJSI_Slot_C* NewSplitSlotRef, class UJSIContainer_C* ContainerSource, class UJSIContainer_C* ContainerReceiver, int32 SplitAmount, int32 AmountRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SplitInContainer");

	Params::SurvivalPlayer_C_SplitInContainer Parms{};

	Parms.SourceSlotRef = SourceSlotRef;
	Parms.NewSplitSlotRef = NewSplitSlotRef;
	Parms.ContainerSource = ContainerSource;
	Parms.ContainerReceiver = ContainerReceiver;
	Parms.SplitAmount = SplitAmount;
	Parms.AmountRemaining = AmountRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SplitOnGround
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      SourceSlotRef                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      NewSplitSlotRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ContainerSource                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ContainerReceiver                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   SplitAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AmountRemaining                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SplitOnGround(class UJSI_Slot_C* SourceSlotRef, class UJSI_Slot_C* NewSplitSlotRef, class UJSIContainer_C* ContainerSource, class UJSIContainer_C* ContainerReceiver, int32 SplitAmount, int32 AmountRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SplitOnGround");

	Params::SurvivalPlayer_C_SplitOnGround Parms{};

	Parms.SourceSlotRef = SourceSlotRef;
	Parms.NewSplitSlotRef = NewSplitSlotRef;
	Parms.ContainerSource = ContainerSource;
	Parms.ContainerReceiver = ContainerReceiver;
	Parms.SplitAmount = SplitAmount;
	Parms.AmountRemaining = AmountRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SprintAccelAction
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SprintAccelAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SprintAccelAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SprintAccelTimeline__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::SprintAccelTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SprintAccelTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SprintAccelTimeline__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::SprintAccelTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SprintAccelTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SprintCamera
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SprintCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SprintCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SprintPenalty
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SprintPenalty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SprintPenalty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StaminaHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HitTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::StaminaHit(double Hit, double HitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StaminaHit");

	Params::SurvivalPlayer_C_StaminaHit Parms{};

	Parms.Hit = Hit;
	Parms.HitTime = HitTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StandingPitchOffsetIfAim__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::StandingPitchOffsetIfAim__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StandingPitchOffsetIfAim__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StandingPitchOffsetIfAim__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::StandingPitchOffsetIfAim__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StandingPitchOffsetIfAim__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StandPlayerEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StandPlayerEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StandPlayerEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StartCinematic
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StartCinematic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StartCinematic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StartEating
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_MenuBarShopSlot_C*           CurrentSelectedSlot                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::StartEating(class UWBP_MenuBarShopSlot_C* CurrentSelectedSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StartEating");

	Params::SurvivalPlayer_C_StartEating Parms{};

	Parms.CurrentSelectedSlot = CurrentSelectedSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StartEatingV
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_MenuBarShopSlot_C*           CurrentSelectedSlot                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::StartEatingV(class UWBP_MenuBarShopSlot_C* CurrentSelectedSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StartEatingV");

	Params::SurvivalPlayer_C_StartEatingV Parms{};

	Parms.CurrentSelectedSlot = CurrentSelectedSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StartFlashFade
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StartFlashFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StartFlashFade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StartInteract
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StartInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StartInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StartRespawn
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StartRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StartRespawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StartStand
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StartStand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StartStand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StartTimerEating
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StartTimerEating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StartTimerEating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StatPrint
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StatPrint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StatPrint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Step
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Step()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Step");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StepA
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StepA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StepA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StepD
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StepD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StepD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.steps
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Steps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "steps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StepW
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StepW()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StepW");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StepZoom__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::StepZoom__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StepZoom__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StepZoom__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::StepZoom__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StepZoom__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopAim
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopAllFuckdEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopAllFuckdEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopAllFuckdEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopBleeding
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopBleeding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopBleeding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopBleedingMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopBleedingMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopBleedingMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopBleedingServ
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopBleedingServ()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopBleedingServ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopCriticalDamageEffect
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopCriticalDamageEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopCriticalDamageEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopCrouchAimTimelines
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopCrouchAimTimelines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopCrouchAimTimelines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopEffectByName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     EffectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// E_WeakeningEffect                       WeakeningEffects                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RemoveAll                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::StopEffectByName(TArray<class FText>& EffectName, E_WeakeningEffect WeakeningEffects, bool RemoveAll, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopEffectByName");

	Params::SurvivalPlayer_C_StopEffectByName Parms{};

	Parms.EffectName = std::move(EffectName);
	Parms.WeakeningEffects = WeakeningEffects;
	Parms.RemoveAll = RemoveAll;

	UObject::ProcessEvent(Func, &Parms);

	EffectName = std::move(Parms.EffectName);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopEffectByRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEffectMain_C*                    NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::StopEffectByRef(class UEffectMain_C* NewParam, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopEffectByRef");

	Params::SurvivalPlayer_C_StopEffectByRef Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopInteract
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopShopCameraShake
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopShopCameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopShopCameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopSprint
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopSurrender
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopSurrender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopSurrender");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopTimelineProgressBar
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopTimelineProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopTimelineProgressBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopTpsToFpsCamShake
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopTpsToFpsCamShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopTpsToFpsCamShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StopUseItemEvent
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StopUseItemEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StopUseItemEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.StoreCollisionSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::StoreCollisionSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "StoreCollisionSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.subSpecular__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::SubSpecular__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "subSpecular__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.subSpecular__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::SubSpecular__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "subSpecular__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SurrenderLocal
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Burnt                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DieInCarExplosion                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SurrenderLocal(bool Param_Burnt, bool DieInCarExplosion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SurrenderLocal");

	Params::SurvivalPlayer_C_SurrenderLocal Parms{};

	Parms.Param_Burnt = Param_Burnt;
	Parms.DieInCarExplosion = DieInCarExplosion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SurrenderShowEnd
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SurrenderShowEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SurrenderShowEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SurrMessMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SurrMessMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SurrMessMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SurvGetUniqueID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   UniqueId                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SurvGetUniqueID(int32* UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SurvGetUniqueID");

	Params::SurvivalPlayer_C_SurvGetUniqueID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UniqueId != nullptr)
		*UniqueId = Parms.UniqueId;
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwapWeaponPlaceholders
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SwapWeaponPlaceholders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwapWeaponPlaceholders");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchArmor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemReceiverContainer                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemDroppedContainer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchArmor(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchArmor");

	Params::SurvivalPlayer_C_SwitchArmor Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.ItemDropped = ItemDropped;
	Parms.ItemReceiverContainer = ItemReceiverContainer;
	Parms.ItemDroppedContainer = ItemDroppedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchBackpack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemReceiverContainer                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemDroppedContainer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchBackpack(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchBackpack");

	Params::SurvivalPlayer_C_SwitchBackpack Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.ItemDropped = ItemDropped;
	Parms.ItemReceiverContainer = ItemReceiverContainer;
	Parms.ItemDroppedContainer = ItemDroppedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchEquippedItems
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemReceiverContainer                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemDroppedContainer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchEquippedItems(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchEquippedItems");

	Params::SurvivalPlayer_C_SwitchEquippedItems Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.ItemDropped = ItemDropped;
	Parms.ItemReceiverContainer = ItemReceiverContainer;
	Parms.ItemDroppedContainer = ItemDroppedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchGroundEquipped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Item_Receiver_Container                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Item_Dropped_Container                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchGroundEquipped(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* Item_Receiver_Container, class UJSIContainer_C* Item_Dropped_Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchGroundEquipped");

	Params::SurvivalPlayer_C_SwitchGroundEquipped Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.ItemDropped = ItemDropped;
	Parms.Item_Receiver_Container = Item_Receiver_Container;
	Parms.Item_Dropped_Container = Item_Dropped_Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchHelmets
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemReceiverContainer                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemDroppedContainer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchHelmets(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchHelmets");

	Params::SurvivalPlayer_C_SwitchHelmets Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.ItemDropped = ItemDropped;
	Parms.ItemReceiverContainer = ItemReceiverContainer;
	Parms.ItemDroppedContainer = ItemDroppedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchInventoryEquipped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Item_Dropped                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemReceiverContainer                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemDroppedContainer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchInventoryEquipped(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* Item_Dropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchInventoryEquipped");

	Params::SurvivalPlayer_C_SwitchInventoryEquipped Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.Item_Dropped = Item_Dropped;
	Parms.ItemReceiverContainer = ItemReceiverContainer;
	Parms.ItemDroppedContainer = ItemDroppedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchJacket
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemReceiverContainer                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemDroppedContainer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchJacket(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchJacket");

	Params::SurvivalPlayer_C_SwitchJacket Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.ItemDropped = ItemDropped;
	Parms.ItemReceiverContainer = ItemReceiverContainer;
	Parms.ItemDroppedContainer = ItemDroppedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchLootBoxEquipped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemReceiverContainer                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemDroppedConatiner                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchLootBoxEquipped(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedConatiner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchLootBoxEquipped");

	Params::SurvivalPlayer_C_SwitchLootBoxEquipped Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.ItemDropped = ItemDropped;
	Parms.ItemReceiverContainer = ItemReceiverContainer;
	Parms.ItemDroppedConatiner = ItemDroppedConatiner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchLootBoxEquipped_v2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ReceiverSlotRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ReceiverContainerRef                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UWBP_LootEntry_C*                 DroppedEntryRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchLootBoxEquipped_v2(class UJSI_Slot_C* ReceiverSlotRef, class UJSIContainer_C* ReceiverContainerRef, class UWBP_LootEntry_C* DroppedEntryRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchLootBoxEquipped_v2");

	Params::SurvivalPlayer_C_SwitchLootBoxEquipped_v2 Parms{};

	Parms.ReceiverSlotRef = ReceiverSlotRef;
	Parms.ReceiverContainerRef = ReceiverContainerRef;
	Parms.DroppedEntryRef = DroppedEntryRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchMeleeWeapon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemReceiverContainer                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemDroppedContainer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchMeleeWeapon(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchMeleeWeapon");

	Params::SurvivalPlayer_C_SwitchMeleeWeapon Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.ItemDropped = ItemDropped;
	Parms.ItemReceiverContainer = ItemReceiverContainer;
	Parms.ItemDroppedContainer = ItemDroppedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchPants
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemReceiverContainer                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemDroppedContainer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchPants(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchPants");

	Params::SurvivalPlayer_C_SwitchPants Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.ItemDropped = ItemDropped;
	Parms.ItemReceiverContainer = ItemReceiverContainer;
	Parms.ItemDroppedContainer = ItemDroppedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SwitchWeapon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemReceiver                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemDropped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemReceiverContainer                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ItemDroppedContainer                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SwitchWeapon(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SwitchWeapon");

	Params::SurvivalPlayer_C_SwitchWeapon Parms{};

	Parms.ItemReceiver = ItemReceiver;
	Parms.ItemDropped = ItemDropped;
	Parms.ItemReceiverContainer = ItemReceiverContainer;
	Parms.ItemDroppedContainer = ItemDroppedContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SyncCheckMulti
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HiddenInGame                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_LootPointOpened                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLockMovement                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Crawling                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Primary                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Secondary                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SyncCheckMulti(bool HiddenInGame, bool Param_LootPointOpened, bool bLockMovement, bool Param_Crawling, int32 Primary, int32 Secondary)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SyncCheckMulti");

	Params::SurvivalPlayer_C_SyncCheckMulti Parms{};

	Parms.HiddenInGame = HiddenInGame;
	Parms.Param_LootPointOpened = Param_LootPointOpened;
	Parms.bLockMovement = bLockMovement;
	Parms.Param_Crawling = Param_Crawling;
	Parms.Primary = Primary;
	Parms.Secondary = Secondary;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SyncTick
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::SyncTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SyncTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.SyncTickServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HiddenInGame                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_LootPointOpened                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLockMovement                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_Crawling                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Primary                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Secondary                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::SyncTickServer(bool HiddenInGame, bool Param_LootPointOpened, bool bLockMovement, bool Param_Crawling, int32 Primary, int32 Secondary)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "SyncTickServer");

	Params::SurvivalPlayer_C_SyncTickServer Parms{};

	Parms.HiddenInGame = HiddenInGame;
	Parms.Param_LootPointOpened = Param_LootPointOpened;
	Parms.bLockMovement = bLockMovement;
	Parms.Param_Crawling = Param_Crawling;
	Parms.Primary = Primary;
	Parms.Secondary = Secondary;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TableContToCont
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      FromSlotRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ToSlotRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ToEmptySlot_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MovedAll_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::TableContToCont(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TableContToCont");

	Params::SurvivalPlayer_C_TableContToCont Parms{};

	Parms.From = From;
	Parms.To = To;
	Parms.FromSlotRef = FromSlotRef;
	Parms.ToSlotRef = ToSlotRef;
	Parms.ToEmptySlot_ = ToEmptySlot_;
	Parms.MovedAll_ = MovedAll_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TableDoubleClick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::TableDoubleClick(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TableDoubleClick");

	Params::SurvivalPlayer_C_TableDoubleClick Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TableMouseBtnDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::TableMouseBtnDown(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TableMouseBtnDown");

	Params::SurvivalPlayer_C_TableMouseBtnDown Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TakedDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DDLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontAnimate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Killer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsRadialDamage                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsFireDamage                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_DistanceToExplosion                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    EffectDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_HungerDamage                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUNegativeEffectDamageType              NegativeEffectDamageType                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::TakedDamage(double Damage, const struct FVector& DDLocation, class FName BoneName, const struct FVector& HitLocation, bool DontAnimate, class APawn* Param_Killer, bool Param_IsRadialDamage, bool Param_IsFireDamage, double Param_DistanceToExplosion, class AActor* DamageCauser, bool EffectDamage, bool Param_HungerDamage, EUNegativeEffectDamageType NegativeEffectDamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TakedDamage");

	Params::SurvivalPlayer_C_TakedDamage Parms{};

	Parms.Damage = Damage;
	Parms.DDLocation = std::move(DDLocation);
	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);
	Parms.DontAnimate = DontAnimate;
	Parms.Param_Killer = Param_Killer;
	Parms.Param_IsRadialDamage = Param_IsRadialDamage;
	Parms.Param_IsFireDamage = Param_IsFireDamage;
	Parms.Param_DistanceToExplosion = Param_DistanceToExplosion;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectDamage = EffectDamage;
	Parms.Param_HungerDamage = Param_HungerDamage;
	Parms.NegativeEffectDamageType = NegativeEffectDamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TakedDamageEvent
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DDLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontAnimate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Killer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsRadialDamage                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsFireDamage                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_DistanceToExplosion                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    StaminaDecrease                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Zombie_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBPE_AmmoClass                          AmmoClass                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUNegativeEffectDamageType              NegativeEffectDamageType                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::TakedDamageEvent(double Damage, const struct FVector& DDLocation, class FName BoneName, const struct FVector& HitLocation, bool DontAnimate, class APawn* Param_Killer, bool Param_IsRadialDamage, bool Param_IsFireDamage, double Param_DistanceToExplosion, class AActor* DamageCauser, bool StaminaDecrease, bool Zombie_, EBPE_AmmoClass AmmoClass, EUNegativeEffectDamageType NegativeEffectDamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TakedDamageEvent");

	Params::SurvivalPlayer_C_TakedDamageEvent Parms{};

	Parms.Damage = Damage;
	Parms.DDLocation = std::move(DDLocation);
	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);
	Parms.DontAnimate = DontAnimate;
	Parms.Param_Killer = Param_Killer;
	Parms.Param_IsRadialDamage = Param_IsRadialDamage;
	Parms.Param_IsFireDamage = Param_IsFireDamage;
	Parms.Param_DistanceToExplosion = Param_DistanceToExplosion;
	Parms.DamageCauser = DamageCauser;
	Parms.StaminaDecrease = StaminaDecrease;
	Parms.Zombie_ = Zombie_;
	Parms.AmmoClass = AmmoClass;
	Parms.NegativeEffectDamageType = NegativeEffectDamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TDistanceCalculate
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::TDistanceCalculate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TDistanceCalculate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TestSwitch
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item_Reciever                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Item_Dropped                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Item_Receiver_Container                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Item_Dropped_Container                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::TestSwitch(class UJSI_Slot_C* Item_Reciever, class UJSI_Slot_C* Item_Dropped, class UJSIContainer_C* Item_Receiver_Container, class UJSIContainer_C* Item_Dropped_Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TestSwitch");

	Params::SurvivalPlayer_C_TestSwitch Parms{};

	Parms.Item_Reciever = Item_Reciever;
	Parms.Item_Dropped = Item_Dropped;
	Parms.Item_Receiver_Container = Item_Receiver_Container;
	Parms.Item_Dropped_Container = Item_Dropped_Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TestTimer
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::TestTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TestTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_2__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_2__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_2__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_2__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_2__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_2__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_3__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_3__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_3__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_3__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_3__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_3__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_4__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_4__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_4__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_4__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_4__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_4__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_5__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_5__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_5__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline_5__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline_5__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline_5__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TimelineProgressBar
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      JSI_Slot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::TimelineProgressBar(class UJSI_Slot_C* JSI_Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TimelineProgressBar");

	Params::SurvivalPlayer_C_TimelineProgressBar Parms{};

	Parms.JSI_Slot = JSI_Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TimelineRoundProgressBar__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::TimelineRoundProgressBar__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TimelineRoundProgressBar__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TimelineRoundProgressBar__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::TimelineRoundProgressBar__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TimelineRoundProgressBar__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Timer_UrovenShuma
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Timer_UrovenShuma()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Timer_UrovenShuma");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TimeStartBloodEffect
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::TimeStartBloodEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TimeStartBloodEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ToggleGaussianBlur
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ToggleGaussianBlur(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ToggleGaussianBlur");

	Params::SurvivalPlayer_C_ToggleGaussianBlur Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ToggleWeaponClip
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ToggleWeaponClip(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ToggleWeaponClip");

	Params::SurvivalPlayer_C_ToggleWeaponClip Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Took Dummy Damage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DDLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontAnimate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bleed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Killer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Took_Dummy_Damage(double Damage, const struct FVector& DDLocation, class FName BoneName, const struct FVector& HitLocation, bool DontAnimate, bool Bleed, class APawn* Param_Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Took Dummy Damage");

	Params::SurvivalPlayer_C_Took_Dummy_Damage Parms{};

	Parms.Damage = Damage;
	Parms.DDLocation = std::move(DDLocation);
	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);
	Parms.DontAnimate = DontAnimate;
	Parms.Bleed = Bleed;
	Parms.Param_Killer = Param_Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TookDummyDamageEvent
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          DDLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DontAnimate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bleed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Param_Killer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::TookDummyDamageEvent(double Damage, const struct FVector& DDLocation, class FName BoneName, const struct FVector& HitLocation, bool DontAnimate, bool Bleed, class APawn* Param_Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TookDummyDamageEvent");

	Params::SurvivalPlayer_C_TookDummyDamageEvent Parms{};

	Parms.Damage = Damage;
	Parms.DDLocation = std::move(DDLocation);
	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);
	Parms.DontAnimate = DontAnimate;
	Parms.Bleed = Bleed;
	Parms.Param_Killer = Param_Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TrainCDTip
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::TrainCDTip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TrainCDTip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TrainEndCD
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::TrainEndCD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TrainEndCD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TransferItems
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::TransferItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TransferItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TransferItemsToActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContainerPickupsInfo            ContainerInfo                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   ContainerIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FContainerPickupsInfo>    Data                                                   (Parm, OutParm, ContainsInstancedReference)
// TArray<struct FContainerPickupsInfo>    Items                                                  (Parm, OutParm, ContainsInstancedReference)

void ASurvivalPlayer_C::TransferItemsToActor(const struct FContainerPickupsInfo& ContainerInfo, int32 ContainerIndex, bool* Success, TArray<struct FContainerPickupsInfo>* Data, TArray<struct FContainerPickupsInfo>* Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TransferItemsToActor");

	Params::SurvivalPlayer_C_TransferItemsToActor Parms{};

	Parms.ContainerInfo = std::move(ContainerInfo);
	Parms.ContainerIndex = ContainerIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TransferTradeItemsToCont
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UJSI_Slot_C*>              Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ASurvivalPlayer_C::TransferTradeItemsToCont(TArray<class UJSI_Slot_C*>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TransferTradeItemsToCont");

	Params::SurvivalPlayer_C_TransferTradeItemsToCont Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TryToAddItemToStashContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  StashContainerRef                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SendSlotRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Locaked                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::TryToAddItemToStashContainer(class UJSIContainer_C* StashContainerRef, class UJSI_Slot_C* SendSlotRef, bool* Locaked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TryToAddItemToStashContainer");

	Params::SurvivalPlayer_C_TryToAddItemToStashContainer Parms{};

	Parms.StashContainerRef = StashContainerRef;
	Parms.SendSlotRef = SendSlotRef;

	UObject::ProcessEvent(Func, &Parms);

	if (Locaked != nullptr)
		*Locaked = Parms.Locaked;
}


// Function SurvivalPlayer.SurvivalPlayer_C.TryToGetStashContainer
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSIContainer_C*                  MainInventoryContainer                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::TryToGetStashContainer(class UJSIContainer_C** MainInventoryContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TryToGetStashContainer");

	Params::SurvivalPlayer_C_TryToGetStashContainer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MainInventoryContainer != nullptr)
		*MainInventoryContainer = Parms.MainInventoryContainer;
}


// Function SurvivalPlayer.SurvivalPlayer_C.TSaveLoc
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::TSaveLoc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TSaveLoc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TurnModulatorDown
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::TurnModulatorDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TurnModulatorDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.TurnModulatorUp
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::TurnModulatorUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "TurnModulatorUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Unarm_unarm
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerSlots                            Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithoutAnimation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Unarm_unarm(EPlayerSlots Slot, bool WithoutAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Unarm_unarm");

	Params::SurvivalPlayer_C_Unarm_unarm Parms{};

	Parms.Slot = Slot;
	Parms.WithoutAnimation = WithoutAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UnarmForce
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::UnarmForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UnarmForce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Unarmgps
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Unarmgps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Unarmgps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UnarmPlayerEvent
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WithoutAnimation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UnarmPlayerEvent(bool WithoutAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UnarmPlayerEvent");

	Params::SurvivalPlayer_C_UnarmPlayerEvent Parms{};

	Parms.WithoutAnimation = WithoutAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UnblockSprint
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::UnblockSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UnblockSprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UnequipAllItems
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::UnequipAllItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UnequipAllItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UnHandleJSContainerEvents
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::UnHandleJSContainerEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UnHandleJSContainerEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UnhandleJSEvents
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UnhandleJSEvents(class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UnhandleJSEvents");

	Params::SurvivalPlayer_C_UnhandleJSEvents Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UnlocalCrouch
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Crouch                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UnlocalCrouch(bool Param_Crouch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UnlocalCrouch");

	Params::SurvivalPlayer_C_UnlocalCrouch Parms{};

	Parms.Param_Crouch = Param_Crouch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UnpauseLootpointDestroy
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALootPoint_C*                     Param_LootPoint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UnpauseLootpointDestroy(class ALootPoint_C* Param_LootPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UnpauseLootpointDestroy");

	Params::SurvivalPlayer_C_UnpauseLootpointDestroy Parms{};

	Parms.Param_LootPoint = Param_LootPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Update Weight Items
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Update_Weight_Items()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Update Weight Items");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_SaveStructure                 Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::UpdateCharacter(const struct FS_SaveStructure& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateCharacter");

	Params::SurvivalPlayer_C_UpdateCharacter Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateInventoryContainers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::UpdateInventoryContainers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateInventoryContainers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateItemCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   UniqueId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UpdateItemCount(int32 UniqueId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateItemCount");

	Params::SurvivalPlayer_C_UpdateItemCount Parms{};

	Parms.UniqueId = UniqueId;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateItemInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Durability                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UpdateItemInfo(int32 Uid, int32 Count, bool IsContainer, class UJSI_Slot_C* Slot, double Durability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateItemInfo");

	Params::SurvivalPlayer_C_UpdateItemInfo Parms{};

	Parms.Uid = Uid;
	Parms.Count = Count;
	Parms.IsContainer = IsContainer;
	Parms.Slot = Slot;
	Parms.Durability = Durability;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateKDCounter__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::UpdateKDCounter__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateKDCounter__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateOnGroundItemInfo
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AA_Item_C*                        Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FFItemInfo                       Param_ItemInfo                                         (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void ASurvivalPlayer_C::UpdateOnGroundItemInfo(class AA_Item_C* Target, const struct FFItemInfo& Param_ItemInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateOnGroundItemInfo");

	Params::SurvivalPlayer_C_UpdateOnGroundItemInfo Parms{};

	Parms.Target = Target;
	Parms.Param_ItemInfo = std::move(Param_ItemInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateSaveCharactersMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_SaveStructure                 Param_GI_Character_Save_Ref                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::UpdateSaveCharactersMulticast(const struct FS_SaveStructure& Param_GI_Character_Save_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateSaveCharactersMulticast");

	Params::SurvivalPlayer_C_UpdateSaveCharactersMulticast Parms{};

	Parms.Param_GI_Character_Save_Ref = std::move(Param_GI_Character_Save_Ref);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateSaveCharactersServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_SaveStructure                 Param_GI_Character_Save_Ref                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::UpdateSaveCharactersServer(const struct FS_SaveStructure& Param_GI_Character_Save_Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateSaveCharactersServer");

	Params::SurvivalPlayer_C_UpdateSaveCharactersServer Parms{};

	Parms.Param_GI_Character_Save_Ref = std::move(Param_GI_Character_Save_Ref);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateWeaponDurability
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Uid                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Durability                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxDurability                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChangeMaxDurability                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UpdateWeaponDurability(int32 Uid, double Durability, double MaxDurability, bool ChangeMaxDurability, class UJSI_Slot_C* Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateWeaponDurability");

	Params::SurvivalPlayer_C_UpdateWeaponDurability Parms{};

	Parms.Uid = Uid;
	Parms.Durability = Durability;
	Parms.MaxDurability = MaxDurability;
	Parms.ChangeMaxDurability = ChangeMaxDurability;
	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateWeaponStructure
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       NewWeaponInfo                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UpdateWeaponStructure(const struct FFItemInfo& NewWeaponInfo, bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateWeaponStructure");

	Params::SurvivalPlayer_C_UpdateWeaponStructure Parms{};

	Parms.NewWeaponInfo = std::move(NewWeaponInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function SurvivalPlayer.SurvivalPlayer_C.UpdateWeightMaxItems
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::UpdateWeightMaxItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UpdateWeightMaxItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UseBarStojkaServer
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UseBarStojkaServer(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UseBarStojkaServer");

	Params::SurvivalPlayer_C_UseBarStojkaServer Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UseChair
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UseChair(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UseChair");

	Params::SurvivalPlayer_C_UseChair Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UseChairMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UseChairMulti(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UseChairMulti");

	Params::SurvivalPlayer_C_UseChairMulti Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UseChairServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UseChairServer(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UseChairServer");

	Params::SurvivalPlayer_C_UseChairServer Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UseTable
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UseTable(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UseTable");

	Params::SurvivalPlayer_C_UseTable Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UseTableMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UseTableMulti(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UseTableMulti");

	Params::SurvivalPlayer_C_UseTableMulti Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UseTableServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hightlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UseTableServer(class AActor* Hightlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UseTableServer");

	Params::SurvivalPlayer_C_UseTableServer Parms{};

	Parms.Hightlight = Hightlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.UsingTraining
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_TrainingApp_C*                TrainApp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::UsingTraining(class ABP_TrainingApp_C* TrainApp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "UsingTraining");

	Params::SurvivalPlayer_C_UsingTraining Parms{};

	Parms.TrainApp = TrainApp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Validate Drop Box (Only Server)
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       DropItem                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Validate_Drop_Box__Only_Server_(const struct FFItemInfo& DropItem, const struct FVector& Location, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Validate Drop Box (Only Server)");

	Params::SurvivalPlayer_C_Validate_Drop_Box__Only_Server_ Parms{};

	Parms.DropItem = std::move(DropItem);
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SurvivalPlayer.SurvivalPlayer_C.Validate3DCharacter
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::Validate3DCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Validate3DCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ValidateArr Drop Box (Only Server)
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFItemInfo                       DropItem                                               (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFItemInfo>               Arr                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ValidateArr_Drop_Box__Only_Server_(const struct FFItemInfo& DropItem, const struct FVector& Location, TArray<struct FFItemInfo>& Arr, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ValidateArr Drop Box (Only Server)");

	Params::SurvivalPlayer_C_ValidateArr_Drop_Box__Only_Server_ Parms{};

	Parms.DropItem = std::move(DropItem);
	Parms.Location = std::move(Location);
	Parms.Arr = std::move(Arr);

	UObject::ProcessEvent(Func, &Parms);

	Arr = std::move(Parms.Arr);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SurvivalPlayer.SurvivalPlayer_C.Vis
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Vis(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Vis");

	Params::SurvivalPlayer_C_Vis Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.VisFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::VisFunc(bool InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "VisFunc");

	Params::SurvivalPlayer_C_VisFunc Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.VisInClient
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::VisInClient(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "VisInClient");

	Params::SurvivalPlayer_C_VisInClient Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.VisServ
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::VisServ(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "VisServ");

	Params::SurvivalPlayer_C_VisServ Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.VisToggleForHiddenShadowComponents
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Vis                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::VisToggleForHiddenShadowComponents(bool Vis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "VisToggleForHiddenShadowComponents");

	Params::SurvivalPlayer_C_VisToggleForHiddenShadowComponents Parms{};

	Parms.Vis = Vis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.VisualizeEquipmentUnlocal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkinnedMeshComponent*            Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class USkeletalMesh>     DefaultMesh                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASurvivalPlayer_C::VisualizeEquipmentUnlocal(class USkinnedMeshComponent* Target, class FName RowName, TSoftObjectPtr<class USkeletalMesh> DefaultMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "VisualizeEquipmentUnlocal");

	Params::SurvivalPlayer_C_VisualizeEquipmentUnlocal Parms{};

	Parms.Target = Target;
	Parms.RowName = RowName;
	Parms.DefaultMesh = DefaultMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WaitToLoadingLevel
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::WaitToLoadingLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WaitToLoadingLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WaitToUID
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::WaitToUID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WaitToUID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WatchToGasoline
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::WatchToGasoline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WatchToGasoline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.Weapon Sync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PrimaryId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SecondaryId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::Weapon_Sync(int32 PrimaryId, int32 SecondaryId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "Weapon Sync");

	Params::SurvivalPlayer_C_Weapon_Sync Parms{};

	Parms.PrimaryId = PrimaryId;
	Parms.SecondaryId = SecondaryId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WeaponLerpToCamera__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::WeaponLerpToCamera__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WeaponLerpToCamera__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WeaponLerpToCamera__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::WeaponLerpToCamera__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WeaponLerpToCamera__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WeaponsToggle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OnOrOff                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithoutAnimation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WeaponsToggle(bool OnOrOff, bool WithoutAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WeaponsToggle");

	Params::SurvivalPlayer_C_WeaponsToggle Parms{};

	Parms.OnOrOff = OnOrOff;
	Parms.WithoutAnimation = WithoutAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WeaponsUnactive
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::WeaponsUnactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WeaponsUnactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WInputActionRespawn
// (BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::WInputActionRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WInputActionRespawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WipeSpeed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ResetDoOnce                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WipeSpeed(bool ResetDoOnce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WipeSpeed");

	Params::SurvivalPlayer_C_WipeSpeed Parms{};

	Parms.ResetDoOnce = ResetDoOnce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WoundDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WoundDamage(class FName BoneName, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WoundDamage");

	Params::SurvivalPlayer_C_WoundDamage Parms{};

	Parms.BoneName = BoneName;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_Aiming
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Aim                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_Aiming(bool Aim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_Aiming");

	Params::SurvivalPlayer_C_WP_Aiming Parms{};

	Parms.Aim = Aim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_Anim_Weapon_Equiped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Weapon_C*                     NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_Anim_Weapon_Equiped(class ABP_Weapon_C* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_Anim_Weapon_Equiped");

	Params::SurvivalPlayer_C_WP_Anim_Weapon_Equiped Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_EquipWeapon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_WeaponName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_EquipWeapon(class FName Param_WeaponName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_EquipWeapon");

	Params::SurvivalPlayer_C_WP_EquipWeapon Parms{};

	Parms.Param_WeaponName = Param_WeaponName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_GetAimCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 Param_Camera                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_GetAimCamera(class UCameraComponent** Param_Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_GetAimCamera");

	Params::SurvivalPlayer_C_WP_GetAimCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Camera != nullptr)
		*Param_Camera = Parms.Param_Camera;
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_GetLefHandEffectorTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasEffector                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_GetLefHandEffectorTransform(struct FTransform* Transform, bool* HasEffector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_GetLefHandEffectorTransform");

	Params::SurvivalPlayer_C_WP_GetLefHandEffectorTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);

	if (HasEffector != nullptr)
		*HasEffector = Parms.HasEffector;
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_GetRotationInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_GetRotationInput(struct FVector2D* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_GetRotationInput");

	Params::SurvivalPlayer_C_WP_GetRotationInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_GetShootDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ShootDirection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_GetShootDirection(struct FVector* ShootDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_GetShootDirection");

	Params::SurvivalPlayer_C_WP_GetShootDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShootDirection != nullptr)
		*ShootDirection = std::move(Parms.ShootDirection);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_GetSkeletalMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkinnedMesh                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_GetSkeletalMesh(class USkeletalMeshComponent** SkinnedMesh, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_GetSkeletalMesh");

	Params::SurvivalPlayer_C_WP_GetSkeletalMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkinnedMesh != nullptr)
		*SkinnedMesh = Parms.SkinnedMesh;

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_GetWeaponType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBPE_Weapon_Type                        Param_WeaponType                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_GetWeaponType(EBPE_Weapon_Type* Param_WeaponType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_GetWeaponType");

	Params::SurvivalPlayer_C_WP_GetWeaponType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_WeaponType != nullptr)
		*Param_WeaponType = Parms.Param_WeaponType;
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_HasWeaponOrBroken
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_HasWeaponOrBroken(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_HasWeaponOrBroken");

	Params::SurvivalPlayer_C_WP_HasWeaponOrBroken Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_MeleeActivation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_MeleeActivation(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_MeleeActivation");

	Params::SurvivalPlayer_C_WP_MeleeActivation Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_PlayGunTail
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       TailSound                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_PlayGunTail(class UFMODEvent* TailSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_PlayGunTail");

	Params::SurvivalPlayer_C_WP_PlayGunTail Parms{};

	Parms.TailSound = TailSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_SetRecoilPower
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RecoilPower                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::WP_SetRecoilPower(double RecoilPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_SetRecoilPower");

	Params::SurvivalPlayer_C_WP_SetRecoilPower Parms{};

	Parms.RecoilPower = RecoilPower;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.WP_UnequipWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::WP_UnequipWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "WP_UnequipWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ZombieAvoid
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ZombieAvoid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ZombieAvoid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ZombieSpawnTriggerSettings
// (Public, BlueprintCallable, BlueprintEvent)

void ASurvivalPlayer_C::ZombieSpawnTriggerSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ZombieSpawnTriggerSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ZoomGps
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASurvivalPlayer_C::ZoomGps(bool In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ZoomGps");

	Params::SurvivalPlayer_C_ZoomGps Parms{};

	Parms.In = In;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ZoomGpsOffset__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::ZoomGpsOffset__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ZoomGpsOffset__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ZoomGpsOffset__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::ZoomGpsOffset__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ZoomGpsOffset__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ZoomGpsTL__FinishedFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::ZoomGpsTL__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ZoomGpsTL__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvivalPlayer.SurvivalPlayer_C.ZoomGpsTL__UpdateFunc
// (BlueprintEvent)

void ASurvivalPlayer_C::ZoomGpsTL__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvivalPlayer_C", "ZoomGpsTL__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

