#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HouseAlarm

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "E_AlarmState_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_ParentAlarm_classes.hpp"
#include "E_ActorType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HouseAlarm.BP_HouseAlarm_C
// 0x0140 (0x03D8 - 0x0298)
class ABP_HouseAlarm_C final : public ABP_ParentAlarm_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CapMesh;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh__;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_0;                                      // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_Star;                                   // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_9;                                      // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_8;                                      // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_7;                                      // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_6;                                      // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_5;                                      // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_4;                                      // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_3;                                      // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_2;                                      // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonMesh_1;                                      // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    FMODAudio;                                         // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_alpha_1C96CFE04E974BF32ED3AF9AC16A46D8; // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_1C96CFE04E974BF32ED3AF9AC16A46D8; // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CapOpen_alpha_A2053F4447AC28C6284ACD892D64A8F9;    // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CapOpen__Direction_A2053F4447AC28C6284ACD892D64A8F9; // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CapOpen;                                           // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  User;                                              // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Chance;                                            // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AutoAlarmDuration;                                 // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsed;                                            // 0x0360(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           FireAlarmTimer;                                    // 0x0368(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ReloadDuration;                                    // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    Potato;                                            // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldInteract;                                    // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AlarmState                                  State;                                             // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382[0x2];                                      // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           GreenColor;                                        // 0x0384(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RedColor;                                          // 0x0394(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpened;                                          // 0x03A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Material;                                          // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ZombieSpawner_C*>            SpawnAreaZombie;                                   // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AHouseBox_C*                            House_Box;                                         // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 EnteredActor;                                      // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          By_Fail;                                           // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AlarmBPCStart();
	void CapOpen__FinishedFunc();
	void CapOpen__UpdateFunc();
	void CheckForPlayersNear(bool* HasPlayer);
	void Close();
	void DestroyInteractable();
	void Draw(const struct FVector& Center);
	void ExecuteUbergraph_BP_HouseAlarm(int32 EntryPoint);
	void FindButtonByKeyCode(const class FString& KeyCode, class UStaticMeshComponent** ButtonMesh);
	void FireAlarm(bool ByFail);
	void GetActorType(E_ActorType* ActorType);
	void IsLocked_(bool* Result);
	void LightControl(bool Off_);
	void OnBeginInteract(class APawn* Player);
	void OnEnterActor(class AActor* Actor, class AHouseBox_C* HouseBox);
	void OnFireAlarm();
	void OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime);
	void OnInteract(class APawn* Player);
	void OnInteract2(class APawn* Player);
	void OnInteract3(class APawn* Player);
	void OnInteractServer(class APawn* Player);
	void OnInteractVehicle(class APawn* Player, int32 SitIndex, bool SkipAnimation);
	void OnLocalInteract(class APawn* Player);
	void OnLostFocus(class APawn* Player);
	void OnRelease(bool Success);
	void OnSeen(class APawn* Player);
	void OnSquadCheckComplete();
	void OnStartTimer();
	void OnStopInteract(class APawn* Player);
	void OnUse();
	void Open();
	void ReceiveBeginPlay();
	void Release(bool Success);
	void Reload();
	void ResetAlarm();
	void ResetAlarm_RPC();
	void ResetOwning();
	void Run_Lockpicking();
	void Set3DWidgetVisibility(bool Visible);
	void SetButtonMaterial(class UStaticMeshComponent* ButtonMesh);
	void SetCode(const class FString& Code);
	void SetState(E_AlarmState Param_State);
	void SetTutorial3DWidgetVisibility(bool Visible);
	void SpawnZombi();
	void SpawnZombies();
	void Start_Alarm_To_Server();
	void StartAutoAlarmTimer(class AActor* Actor);
	void StopAlarmToServer();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void WarningLight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HouseAlarm_C">();
	}
	static class ABP_HouseAlarm_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HouseAlarm_C>();
	}
};
static_assert(alignof(ABP_HouseAlarm_C) == 0x000008, "Wrong alignment on ABP_HouseAlarm_C");
static_assert(sizeof(ABP_HouseAlarm_C) == 0x0003D8, "Wrong size on ABP_HouseAlarm_C");
static_assert(offsetof(ABP_HouseAlarm_C, UberGraphFrame) == 0x000298, "Member 'ABP_HouseAlarm_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, Sphere) == 0x0002A0, "Member 'ABP_HouseAlarm_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, PointLight) == 0x0002A8, "Member 'ABP_HouseAlarm_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, Cube) == 0x0002B0, "Member 'ABP_HouseAlarm_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, CapMesh) == 0x0002B8, "Member 'ABP_HouseAlarm_C::CapMesh' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh__) == 0x0002C0, "Member 'ABP_HouseAlarm_C::ButtonMesh__' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_0) == 0x0002C8, "Member 'ABP_HouseAlarm_C::ButtonMesh_0' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_Star) == 0x0002D0, "Member 'ABP_HouseAlarm_C::ButtonMesh_Star' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_9) == 0x0002D8, "Member 'ABP_HouseAlarm_C::ButtonMesh_9' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_8) == 0x0002E0, "Member 'ABP_HouseAlarm_C::ButtonMesh_8' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_7) == 0x0002E8, "Member 'ABP_HouseAlarm_C::ButtonMesh_7' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_6) == 0x0002F0, "Member 'ABP_HouseAlarm_C::ButtonMesh_6' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_5) == 0x0002F8, "Member 'ABP_HouseAlarm_C::ButtonMesh_5' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_4) == 0x000300, "Member 'ABP_HouseAlarm_C::ButtonMesh_4' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_3) == 0x000308, "Member 'ABP_HouseAlarm_C::ButtonMesh_3' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_2) == 0x000310, "Member 'ABP_HouseAlarm_C::ButtonMesh_2' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ButtonMesh_1) == 0x000318, "Member 'ABP_HouseAlarm_C::ButtonMesh_1' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, FMODAudio) == 0x000320, "Member 'ABP_HouseAlarm_C::FMODAudio' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, Timeline_0_alpha_1C96CFE04E974BF32ED3AF9AC16A46D8) == 0x000328, "Member 'ABP_HouseAlarm_C::Timeline_0_alpha_1C96CFE04E974BF32ED3AF9AC16A46D8' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, Timeline_0__Direction_1C96CFE04E974BF32ED3AF9AC16A46D8) == 0x00032C, "Member 'ABP_HouseAlarm_C::Timeline_0__Direction_1C96CFE04E974BF32ED3AF9AC16A46D8' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, Timeline_0) == 0x000330, "Member 'ABP_HouseAlarm_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, CapOpen_alpha_A2053F4447AC28C6284ACD892D64A8F9) == 0x000338, "Member 'ABP_HouseAlarm_C::CapOpen_alpha_A2053F4447AC28C6284ACD892D64A8F9' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, CapOpen__Direction_A2053F4447AC28C6284ACD892D64A8F9) == 0x00033C, "Member 'ABP_HouseAlarm_C::CapOpen__Direction_A2053F4447AC28C6284ACD892D64A8F9' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, CapOpen) == 0x000340, "Member 'ABP_HouseAlarm_C::CapOpen' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, User) == 0x000348, "Member 'ABP_HouseAlarm_C::User' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, Chance) == 0x000350, "Member 'ABP_HouseAlarm_C::Chance' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, AutoAlarmDuration) == 0x000358, "Member 'ABP_HouseAlarm_C::AutoAlarmDuration' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, IsUsed) == 0x000360, "Member 'ABP_HouseAlarm_C::IsUsed' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, FireAlarmTimer) == 0x000368, "Member 'ABP_HouseAlarm_C::FireAlarmTimer' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ReloadDuration) == 0x000370, "Member 'ABP_HouseAlarm_C::ReloadDuration' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, Potato) == 0x000378, "Member 'ABP_HouseAlarm_C::Potato' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, ShouldInteract) == 0x000380, "Member 'ABP_HouseAlarm_C::ShouldInteract' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, State) == 0x000381, "Member 'ABP_HouseAlarm_C::State' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, GreenColor) == 0x000384, "Member 'ABP_HouseAlarm_C::GreenColor' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, RedColor) == 0x000394, "Member 'ABP_HouseAlarm_C::RedColor' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, IsOpened) == 0x0003A4, "Member 'ABP_HouseAlarm_C::IsOpened' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, Material) == 0x0003A8, "Member 'ABP_HouseAlarm_C::Material' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, SpawnAreaZombie) == 0x0003B0, "Member 'ABP_HouseAlarm_C::SpawnAreaZombie' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, House_Box) == 0x0003C0, "Member 'ABP_HouseAlarm_C::House_Box' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, EnteredActor) == 0x0003C8, "Member 'ABP_HouseAlarm_C::EnteredActor' has a wrong offset!");
static_assert(offsetof(ABP_HouseAlarm_C, By_Fail) == 0x0003D0, "Member 'ABP_HouseAlarm_C::By_Fail' has a wrong offset!");

}

