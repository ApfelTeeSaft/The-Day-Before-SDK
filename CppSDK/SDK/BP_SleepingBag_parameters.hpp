#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SleepingBag

#include "Basic.hpp"

#include "E_ActorType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_InteractType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SleepingBag.BP_SleepingBag_C.ExecuteUbergraph_BP_SleepingBag
// 0x0588 (0x0588 - 0x0000)
struct BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_2;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player;                               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_StatsInterface_C>   K2Node_DynamicCast_AsI_Stats_Interface;            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_PlayerStatsComponent_C*            CallFunc_GetStatsComponent_PlayerStats;            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_SetStat_ReturnValue;                      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0158(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0198(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x02C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3[0x1];                                      // 0x03B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0430(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x0488(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag) == 0x000008, "Wrong alignment on BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag");
static_assert(sizeof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag) == 0x000588, "Wrong size on BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, EntryPoint) == 0x000000, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Player_8) == 0x000008, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Player_7) == 0x000010, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Player_6) == 0x000018, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Player_5) == 0x000020, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_SitIndex) == 0x000028, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_SkipAnimation) == 0x00002C, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Player_4) == 0x000030, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Player_3) == 0x000038, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Player_2) == 0x000040, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Player_1) == 0x000048, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Visible_1) == 0x000050, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Visible) == 0x000051, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_HasAuthority_ReturnValue) == 0x000052, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_Player) == 0x000058, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_Event_DeltaSeconds) == 0x000060, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_DynamicCast_AsBPI_General_Interface) == 0x000068, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_DynamicCast_AsBPI_General_Interface' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_DynamicCast_AsI_Stats_Interface) == 0x000090, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_DynamicCast_AsI_Stats_Interface' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_IsValid_ReturnValue_1) == 0x0000A1, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_GetStatsComponent_PlayerStats) == 0x0000A8, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_GetStatsComponent_PlayerStats' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_GetStat_Value) == 0x0000B0, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000C0, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_SetStat_ReturnValue) == 0x0000D8, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_SetStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakRotator_Roll) == 0x0000E0, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakRotator_Pitch) == 0x0000E4, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakRotator_Yaw) == 0x0000E8, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000F0, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000110, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_MakeRotator_ReturnValue) == 0x000128, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000140, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, Temp_object_Variable) == 0x000158, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_Add_VectorVector_ReturnValue) == 0x000168, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakVector_X) == 0x000180, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakVector_Y) == 0x000188, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakVector_Z) == 0x000190, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000198, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000280, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000288, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000290, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_MakeVector_ReturnValue) == 0x000298, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_MakeVector_ReturnValue_1) == 0x0002B0, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_LineTraceSingle_OutHit) == 0x0002C8, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_LineTraceSingle_ReturnValue) == 0x0003B0, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_bBlockingHit) == 0x0003B1, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003B2, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_Time) == 0x0003B4, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_Distance) == 0x0003B8, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_Location) == 0x0003C0, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_ImpactPoint) == 0x0003D8, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_Normal) == 0x0003F0, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_ImpactNormal) == 0x000408, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_PhysMat) == 0x000420, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_HitActor) == 0x000428, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_HitComponent) == 0x000430, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_HitBoneName) == 0x000438, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_BoneName) == 0x000440, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_HitItem) == 0x000448, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_ElementIndex) == 0x00044C, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_FaceIndex) == 0x000450, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_TraceStart) == 0x000458, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_BreakHitResult_TraceEnd) == 0x000470, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x000488, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x000570, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000578, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000580, "Member 'BP_SleepingBag_C_ExecuteUbergraph_BP_SleepingBag::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct BP_SleepingBag_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_GetActorType) == 0x000001, "Wrong alignment on BP_SleepingBag_C_GetActorType");
static_assert(sizeof(BP_SleepingBag_C_GetActorType) == 0x000001, "Wrong size on BP_SleepingBag_C_GetActorType");
static_assert(offsetof(BP_SleepingBag_C_GetActorType, ActorType) == 0x000000, "Member 'BP_SleepingBag_C_GetActorType::ActorType' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct BP_SleepingBag_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_IsLocked_) == 0x000001, "Wrong alignment on BP_SleepingBag_C_IsLocked_");
static_assert(sizeof(BP_SleepingBag_C_IsLocked_) == 0x000001, "Wrong size on BP_SleepingBag_C_IsLocked_");
static_assert(offsetof(BP_SleepingBag_C_IsLocked_, Result) == 0x000000, "Member 'BP_SleepingBag_C_IsLocked_::Result' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBag_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_SleepingBag_C_OnBeginInteract");
static_assert(sizeof(BP_SleepingBag_C_OnBeginInteract) == 0x000008, "Wrong size on BP_SleepingBag_C_OnBeginInteract");
static_assert(offsetof(BP_SleepingBag_C_OnBeginInteract, Player) == 0x000000, "Member 'BP_SleepingBag_C_OnBeginInteract::Player' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.OnFocused
// 0x0060 (0x0060 - 0x0000)
struct BP_SleepingBag_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_OnFocused) == 0x000008, "Wrong alignment on BP_SleepingBag_C_OnFocused");
static_assert(sizeof(BP_SleepingBag_C_OnFocused) == 0x000060, "Wrong size on BP_SleepingBag_C_OnFocused");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, Player) == 0x000000, "Member 'BP_SleepingBag_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, HighlightActor) == 0x000008, "Member 'BP_SleepingBag_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'BP_SleepingBag_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, InteractType) == 0x000018, "Member 'BP_SleepingBag_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, LateTime) == 0x000020, "Member 'BP_SleepingBag_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'BP_SleepingBag_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, CallFunc_IsLocallyControlled_ReturnValue) == 0x000030, "Member 'BP_SleepingBag_C_OnFocused::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, CallFunc_GetHUD_ReturnValue) == 0x000038, "Member 'BP_SleepingBag_C_OnFocused::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000040, "Member 'BP_SleepingBag_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_SleepingBag_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000058, "Member 'BP_SleepingBag_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBag_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_OnInteract) == 0x000008, "Wrong alignment on BP_SleepingBag_C_OnInteract");
static_assert(sizeof(BP_SleepingBag_C_OnInteract) == 0x000008, "Wrong size on BP_SleepingBag_C_OnInteract");
static_assert(offsetof(BP_SleepingBag_C_OnInteract, Player) == 0x000000, "Member 'BP_SleepingBag_C_OnInteract::Player' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBag_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_OnInteract2) == 0x000008, "Wrong alignment on BP_SleepingBag_C_OnInteract2");
static_assert(sizeof(BP_SleepingBag_C_OnInteract2) == 0x000008, "Wrong size on BP_SleepingBag_C_OnInteract2");
static_assert(offsetof(BP_SleepingBag_C_OnInteract2, Player) == 0x000000, "Member 'BP_SleepingBag_C_OnInteract2::Player' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBag_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_OnInteract3) == 0x000008, "Wrong alignment on BP_SleepingBag_C_OnInteract3");
static_assert(sizeof(BP_SleepingBag_C_OnInteract3) == 0x000008, "Wrong size on BP_SleepingBag_C_OnInteract3");
static_assert(offsetof(BP_SleepingBag_C_OnInteract3, Player) == 0x000000, "Member 'BP_SleepingBag_C_OnInteract3::Player' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct BP_SleepingBag_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_OnInteractVehicle) == 0x000008, "Wrong alignment on BP_SleepingBag_C_OnInteractVehicle");
static_assert(sizeof(BP_SleepingBag_C_OnInteractVehicle) == 0x000010, "Wrong size on BP_SleepingBag_C_OnInteractVehicle");
static_assert(offsetof(BP_SleepingBag_C_OnInteractVehicle, Player) == 0x000000, "Member 'BP_SleepingBag_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'BP_SleepingBag_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(BP_SleepingBag_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'BP_SleepingBag_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBag_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_OnLocalInteract) == 0x000008, "Wrong alignment on BP_SleepingBag_C_OnLocalInteract");
static_assert(sizeof(BP_SleepingBag_C_OnLocalInteract) == 0x000008, "Wrong size on BP_SleepingBag_C_OnLocalInteract");
static_assert(offsetof(BP_SleepingBag_C_OnLocalInteract, Player) == 0x000000, "Member 'BP_SleepingBag_C_OnLocalInteract::Player' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBag_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_OnLostFocus) == 0x000008, "Wrong alignment on BP_SleepingBag_C_OnLostFocus");
static_assert(sizeof(BP_SleepingBag_C_OnLostFocus) == 0x000008, "Wrong size on BP_SleepingBag_C_OnLostFocus");
static_assert(offsetof(BP_SleepingBag_C_OnLostFocus, Player) == 0x000000, "Member 'BP_SleepingBag_C_OnLostFocus::Player' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBag_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_OnSeen) == 0x000008, "Wrong alignment on BP_SleepingBag_C_OnSeen");
static_assert(sizeof(BP_SleepingBag_C_OnSeen) == 0x000008, "Wrong size on BP_SleepingBag_C_OnSeen");
static_assert(offsetof(BP_SleepingBag_C_OnSeen, Player) == 0x000000, "Member 'BP_SleepingBag_C_OnSeen::Player' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_SleepingBag_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_OnStopInteract) == 0x000008, "Wrong alignment on BP_SleepingBag_C_OnStopInteract");
static_assert(sizeof(BP_SleepingBag_C_OnStopInteract) == 0x000008, "Wrong size on BP_SleepingBag_C_OnStopInteract");
static_assert(offsetof(BP_SleepingBag_C_OnStopInteract, Player) == 0x000000, "Member 'BP_SleepingBag_C_OnStopInteract::Player' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SleepingBag_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SleepingBag_C_ReceiveTick");
static_assert(sizeof(BP_SleepingBag_C_ReceiveTick) == 0x000004, "Wrong size on BP_SleepingBag_C_ReceiveTick");
static_assert(offsetof(BP_SleepingBag_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SleepingBag_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_SleepingBag_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_SleepingBag_C_Set3DWidgetVisibility");
static_assert(sizeof(BP_SleepingBag_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on BP_SleepingBag_C_Set3DWidgetVisibility");
static_assert(offsetof(BP_SleepingBag_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_SleepingBag_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function BP_SleepingBag.BP_SleepingBag_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_SleepingBag_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SleepingBag_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_SleepingBag_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(BP_SleepingBag_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on BP_SleepingBag_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(BP_SleepingBag_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_SleepingBag_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

}

