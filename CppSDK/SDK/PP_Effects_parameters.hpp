#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PP_Effects

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "StatType_structs.hpp"


namespace SDK::Params
{

// Function PP_Effects.PP_Effects_C.AbberationPregress
// 0x0058 (0x0058 - 0x0000)
struct PP_Effects_C_AbberationPregress final
{
public:
	double                                        UpdateTimeFrq;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            TimeCurv;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_AbberationPregress) == 0x000008, "Wrong alignment on PP_Effects_C_AbberationPregress");
static_assert(sizeof(PP_Effects_C_AbberationPregress) == 0x000058, "Wrong size on PP_Effects_C_AbberationPregress");
static_assert(offsetof(PP_Effects_C_AbberationPregress, UpdateTimeFrq) == 0x000000, "Member 'PP_Effects_C_AbberationPregress::UpdateTimeFrq' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationPregress, TimeCurv) == 0x000008, "Member 'PP_Effects_C_AbberationPregress::TimeCurv' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationPregress, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000010, "Member 'PP_Effects_C_AbberationPregress::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationPregress, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000018, "Member 'PP_Effects_C_AbberationPregress::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationPregress, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'PP_Effects_C_AbberationPregress::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationPregress, CallFunc_GetFloatValue_ReturnValue) == 0x000028, "Member 'PP_Effects_C_AbberationPregress::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationPregress, CallFunc_FInterpTo_ReturnValue) == 0x000030, "Member 'PP_Effects_C_AbberationPregress::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationPregress, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000038, "Member 'PP_Effects_C_AbberationPregress::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationPregress, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000040, "Member 'PP_Effects_C_AbberationPregress::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationPregress, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000048, "Member 'PP_Effects_C_AbberationPregress::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationPregress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000050, "Member 'PP_Effects_C_AbberationPregress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.AbberationStart
// 0x0040 (0x0040 - 0x0000)
struct PP_Effects_C_AbberationStart final
{
public:
	float                                         AbberTimeStop;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AbberTimUpdate;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_AbberationStart) == 0x000008, "Wrong alignment on PP_Effects_C_AbberationStart");
static_assert(sizeof(PP_Effects_C_AbberationStart) == 0x000040, "Wrong size on PP_Effects_C_AbberationStart");
static_assert(offsetof(PP_Effects_C_AbberationStart, AbberTimeStop) == 0x000000, "Member 'PP_Effects_C_AbberationStart::AbberTimeStop' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationStart, AbberTimUpdate) == 0x000004, "Member 'PP_Effects_C_AbberationStart::AbberTimUpdate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationStart, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PP_Effects_C_AbberationStart::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationStart, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'PP_Effects_C_AbberationStart::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationStart, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'PP_Effects_C_AbberationStart::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationStart, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'PP_Effects_C_AbberationStart::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_AbberationStart, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000038, "Member 'PP_Effects_C_AbberationStart::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.Apply Death Effect
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_Apply_Death_Effect final
{
public:
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_Apply_Death_Effect) == 0x000008, "Wrong alignment on PP_Effects_C_Apply_Death_Effect");
static_assert(sizeof(PP_Effects_C_Apply_Death_Effect) == 0x000028, "Wrong size on PP_Effects_C_Apply_Death_Effect");
static_assert(offsetof(PP_Effects_C_Apply_Death_Effect, CallFunc_Array_AddUnique_ReturnValue) == 0x000000, "Member 'PP_Effects_C_Apply_Death_Effect::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Apply_Death_Effect, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PP_Effects_C_Apply_Death_Effect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Apply_Death_Effect, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PP_Effects_C_Apply_Death_Effect::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Apply_Death_Effect, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000020, "Member 'PP_Effects_C_Apply_Death_Effect::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.ApplyEffects
// 0x0018 (0x0018 - 0x0000)
struct PP_Effects_C_ApplyEffects final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0008(0x0010)()
};
static_assert(alignof(PP_Effects_C_ApplyEffects) == 0x000008, "Wrong alignment on PP_Effects_C_ApplyEffects");
static_assert(sizeof(PP_Effects_C_ApplyEffects) == 0x000018, "Wrong size on PP_Effects_C_ApplyEffects");
static_assert(offsetof(PP_Effects_C_ApplyEffects, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PP_Effects_C_ApplyEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ApplyEffects, K2Node_MakeStruct_WeightedBlendables) == 0x000008, "Member 'PP_Effects_C_ApplyEffects::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.BleedingEffect
// 0x0020 (0x0020 - 0x0000)
struct PP_Effects_C_BleedingEffect final
{
public:
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_BleedingEffect) == 0x000008, "Wrong alignment on PP_Effects_C_BleedingEffect");
static_assert(sizeof(PP_Effects_C_BleedingEffect) == 0x000020, "Wrong size on PP_Effects_C_BleedingEffect");
static_assert(offsetof(PP_Effects_C_BleedingEffect, CallFunc_GetFloatValue_ReturnValue) == 0x000000, "Member 'PP_Effects_C_BleedingEffect::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BleedingEffect, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000004, "Member 'PP_Effects_C_BleedingEffect::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BleedingEffect, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'PP_Effects_C_BleedingEffect::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BleedingEffect, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000010, "Member 'PP_Effects_C_BleedingEffect::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BleedingEffect, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'PP_Effects_C_BleedingEffect::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.BleedingEffectCallback
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_BleedingEffectCallback final
{
public:
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBleedingEffectParameterName_ParameterName; // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_BleedingEffectCallback) == 0x000008, "Wrong alignment on PP_Effects_C_BleedingEffectCallback");
static_assert(sizeof(PP_Effects_C_BleedingEffectCallback) == 0x000028, "Wrong size on PP_Effects_C_BleedingEffectCallback");
static_assert(offsetof(PP_Effects_C_BleedingEffectCallback, CallFunc_Array_AddUnique_ReturnValue) == 0x000000, "Member 'PP_Effects_C_BleedingEffectCallback::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BleedingEffectCallback, CallFunc_GetBleedingEffectParameterName_ParameterName) == 0x000004, "Member 'PP_Effects_C_BleedingEffectCallback::CallFunc_GetBleedingEffectParameterName_ParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BleedingEffectCallback, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'PP_Effects_C_BleedingEffectCallback::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BleedingEffectCallback, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'PP_Effects_C_BleedingEffectCallback::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.BleedingEffectEnabled
// 0x0001 (0x0001 - 0x0000)
struct PP_Effects_C_BleedingEffectEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_BleedingEffectEnabled) == 0x000001, "Wrong alignment on PP_Effects_C_BleedingEffectEnabled");
static_assert(sizeof(PP_Effects_C_BleedingEffectEnabled) == 0x000001, "Wrong size on PP_Effects_C_BleedingEffectEnabled");
static_assert(offsetof(PP_Effects_C_BleedingEffectEnabled, Enabled) == 0x000000, "Member 'PP_Effects_C_BleedingEffectEnabled::Enabled' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.BloodFirstEffect
// 0x0050 (0x0050 - 0x0000)
struct PP_Effects_C_BloodFirstEffect final
{
public:
	class FName                                   SecondParameterName;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FirstParameterName;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_FirstBloodEffectTime_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_BloodFirstEffect) == 0x000008, "Wrong alignment on PP_Effects_C_BloodFirstEffect");
static_assert(sizeof(PP_Effects_C_BloodFirstEffect) == 0x000050, "Wrong size on PP_Effects_C_BloodFirstEffect");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, SecondParameterName) == 0x000000, "Member 'PP_Effects_C_BloodFirstEffect::SecondParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, FirstParameterName) == 0x000008, "Member 'PP_Effects_C_BloodFirstEffect::FirstParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'PP_Effects_C_BloodFirstEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'PP_Effects_C_BloodFirstEffect::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'PP_Effects_C_BloodFirstEffect::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, CallFunc_GetFloatValue_ReturnValue) == 0x000028, "Member 'PP_Effects_C_BloodFirstEffect::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, CallFunc_GetFloatValue_ReturnValue_1) == 0x00002C, "Member 'PP_Effects_C_BloodFirstEffect::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'PP_Effects_C_BloodFirstEffect::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'PP_Effects_C_BloodFirstEffect::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'PP_Effects_C_BloodFirstEffect::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodFirstEffect, K2Node_VariableSet_FirstBloodEffectTime_ImplicitCast) == 0x000048, "Member 'PP_Effects_C_BloodFirstEffect::K2Node_VariableSet_FirstBloodEffectTime_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.BloodSecondEffect
// 0x0050 (0x0050 - 0x0000)
struct PP_Effects_C_BloodSecondEffect final
{
public:
	class FName                                   SecondParameterName;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FirstParameterName;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_SecondBloodEffectTime_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_BloodSecondEffect) == 0x000008, "Wrong alignment on PP_Effects_C_BloodSecondEffect");
static_assert(sizeof(PP_Effects_C_BloodSecondEffect) == 0x000050, "Wrong size on PP_Effects_C_BloodSecondEffect");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, SecondParameterName) == 0x000000, "Member 'PP_Effects_C_BloodSecondEffect::SecondParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, FirstParameterName) == 0x000008, "Member 'PP_Effects_C_BloodSecondEffect::FirstParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'PP_Effects_C_BloodSecondEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'PP_Effects_C_BloodSecondEffect::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'PP_Effects_C_BloodSecondEffect::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, CallFunc_GetFloatValue_ReturnValue) == 0x000028, "Member 'PP_Effects_C_BloodSecondEffect::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, CallFunc_GetFloatValue_ReturnValue_1) == 0x00002C, "Member 'PP_Effects_C_BloodSecondEffect::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'PP_Effects_C_BloodSecondEffect::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'PP_Effects_C_BloodSecondEffect::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'PP_Effects_C_BloodSecondEffect::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodSecondEffect, K2Node_VariableSet_SecondBloodEffectTime_ImplicitCast) == 0x000048, "Member 'PP_Effects_C_BloodSecondEffect::K2Node_VariableSet_SecondBloodEffectTime_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.BloodThirdEffect
// 0x0050 (0x0050 - 0x0000)
struct PP_Effects_C_BloodThirdEffect final
{
public:
	class FName                                   FirstParameterName;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SecondParameterName;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_ThirdBloodEffectTime_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_BloodThirdEffect) == 0x000008, "Wrong alignment on PP_Effects_C_BloodThirdEffect");
static_assert(sizeof(PP_Effects_C_BloodThirdEffect) == 0x000050, "Wrong size on PP_Effects_C_BloodThirdEffect");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, FirstParameterName) == 0x000000, "Member 'PP_Effects_C_BloodThirdEffect::FirstParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, SecondParameterName) == 0x000008, "Member 'PP_Effects_C_BloodThirdEffect::SecondParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'PP_Effects_C_BloodThirdEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'PP_Effects_C_BloodThirdEffect::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'PP_Effects_C_BloodThirdEffect::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, CallFunc_GetFloatValue_ReturnValue) == 0x000028, "Member 'PP_Effects_C_BloodThirdEffect::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, CallFunc_GetFloatValue_ReturnValue_1) == 0x00002C, "Member 'PP_Effects_C_BloodThirdEffect::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'PP_Effects_C_BloodThirdEffect::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'PP_Effects_C_BloodThirdEffect::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'PP_Effects_C_BloodThirdEffect::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_BloodThirdEffect, K2Node_VariableSet_ThirdBloodEffectTime_ImplicitCast) == 0x000048, "Member 'PP_Effects_C_BloodThirdEffect::K2Node_VariableSet_ThirdBloodEffectTime_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.CalculateHealthModifier
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_CalculateHealthModifier final
{
public:
	bool                                          AngleIsPositive;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AbsoluteAngle;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_CalculateHealthModifier) == 0x000008, "Wrong alignment on PP_Effects_C_CalculateHealthModifier");
static_assert(sizeof(PP_Effects_C_CalculateHealthModifier) == 0x000028, "Wrong size on PP_Effects_C_CalculateHealthModifier");
static_assert(offsetof(PP_Effects_C_CalculateHealthModifier, AngleIsPositive) == 0x000000, "Member 'PP_Effects_C_CalculateHealthModifier::AngleIsPositive' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_CalculateHealthModifier, AbsoluteAngle) == 0x000008, "Member 'PP_Effects_C_CalculateHealthModifier::AbsoluteAngle' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_CalculateHealthModifier, CallFunc_GetStat_Value) == 0x000010, "Member 'PP_Effects_C_CalculateHealthModifier::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_CalculateHealthModifier, CallFunc_GetStat_Value_1) == 0x000018, "Member 'PP_Effects_C_CalculateHealthModifier::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_CalculateHealthModifier, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'PP_Effects_C_CalculateHealthModifier::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.ClearAllEffects
// 0x0058 (0x0058 - 0x0000)
struct PP_Effects_C_ClearAllEffects final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     CallFunc_Array_Get_Item_1;                         // 0x0030(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_ClearAllEffects) == 0x000008, "Wrong alignment on PP_Effects_C_ClearAllEffects");
static_assert(sizeof(PP_Effects_C_ClearAllEffects) == 0x000058, "Wrong size on PP_Effects_C_ClearAllEffects");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, Temp_int_Array_Index_Variable) == 0x000000, "Member 'PP_Effects_C_ClearAllEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PP_Effects_C_ClearAllEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PP_Effects_C_ClearAllEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'PP_Effects_C_ClearAllEffects::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'PP_Effects_C_ClearAllEffects::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, CallFunc_Array_Get_Item) == 0x000018, "Member 'PP_Effects_C_ClearAllEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'PP_Effects_C_ClearAllEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'PP_Effects_C_ClearAllEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'PP_Effects_C_ClearAllEffects::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'PP_Effects_C_ClearAllEffects::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'PP_Effects_C_ClearAllEffects::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, CallFunc_Less_IntInt_ReturnValue_1) == 0x000040, "Member 'PP_Effects_C_ClearAllEffects::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000048, "Member 'PP_Effects_C_ClearAllEffects::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ClearAllEffects, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'PP_Effects_C_ClearAllEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.Death Effect Progress
// 0x0038 (0x0038 - 0x0000)
struct PP_Effects_C_Death_Effect_Progress final
{
public:
	double                                        CurveValue;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurveValue_ImplicitCast;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_Death_Effect_Progress) == 0x000008, "Wrong alignment on PP_Effects_C_Death_Effect_Progress");
static_assert(sizeof(PP_Effects_C_Death_Effect_Progress) == 0x000038, "Wrong size on PP_Effects_C_Death_Effect_Progress");
static_assert(offsetof(PP_Effects_C_Death_Effect_Progress, CurveValue) == 0x000000, "Member 'PP_Effects_C_Death_Effect_Progress::CurveValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Death_Effect_Progress, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'PP_Effects_C_Death_Effect_Progress::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Death_Effect_Progress, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'PP_Effects_C_Death_Effect_Progress::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Death_Effect_Progress, CallFunc_FMin_ReturnValue) == 0x000018, "Member 'PP_Effects_C_Death_Effect_Progress::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Death_Effect_Progress, CallFunc_GetFloatValue_ReturnValue) == 0x000020, "Member 'PP_Effects_C_Death_Effect_Progress::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Death_Effect_Progress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000024, "Member 'PP_Effects_C_Death_Effect_Progress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Death_Effect_Progress, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000028, "Member 'PP_Effects_C_Death_Effect_Progress::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Death_Effect_Progress, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x00002C, "Member 'PP_Effects_C_Death_Effect_Progress::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Death_Effect_Progress, K2Node_VariableSet_CurveValue_ImplicitCast) == 0x000030, "Member 'PP_Effects_C_Death_Effect_Progress::K2Node_VariableSet_CurveValue_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.DirtFirstEffect
// 0x0050 (0x0050 - 0x0000)
struct PP_Effects_C_DirtFirstEffect final
{
public:
	class FName                                   ThirdParameterName;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SecondParameterName;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FirstParameterName;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_FirstDirtEffectTime_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_DirtFirstEffect) == 0x000008, "Wrong alignment on PP_Effects_C_DirtFirstEffect");
static_assert(sizeof(PP_Effects_C_DirtFirstEffect) == 0x000050, "Wrong size on PP_Effects_C_DirtFirstEffect");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, ThirdParameterName) == 0x000000, "Member 'PP_Effects_C_DirtFirstEffect::ThirdParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, SecondParameterName) == 0x000008, "Member 'PP_Effects_C_DirtFirstEffect::SecondParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, FirstParameterName) == 0x000010, "Member 'PP_Effects_C_DirtFirstEffect::FirstParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'PP_Effects_C_DirtFirstEffect::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00001C, "Member 'PP_Effects_C_DirtFirstEffect::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'PP_Effects_C_DirtFirstEffect::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, CallFunc_GetFloatValue_ReturnValue_1) == 0x000028, "Member 'PP_Effects_C_DirtFirstEffect::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, CallFunc_GetFloatValue_ReturnValue_2) == 0x00002C, "Member 'PP_Effects_C_DirtFirstEffect::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'PP_Effects_C_DirtFirstEffect::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'PP_Effects_C_DirtFirstEffect::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'PP_Effects_C_DirtFirstEffect::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtFirstEffect, K2Node_VariableSet_FirstDirtEffectTime_ImplicitCast) == 0x000048, "Member 'PP_Effects_C_DirtFirstEffect::K2Node_VariableSet_FirstDirtEffectTime_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.DirtSecondEffect
// 0x0050 (0x0050 - 0x0000)
struct PP_Effects_C_DirtSecondEffect final
{
public:
	class FName                                   ThirdParameterName;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SecondParameterName;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FirstParameterName;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_SecondDirtEffectTime_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_DirtSecondEffect) == 0x000008, "Wrong alignment on PP_Effects_C_DirtSecondEffect");
static_assert(sizeof(PP_Effects_C_DirtSecondEffect) == 0x000050, "Wrong size on PP_Effects_C_DirtSecondEffect");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, ThirdParameterName) == 0x000000, "Member 'PP_Effects_C_DirtSecondEffect::ThirdParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, SecondParameterName) == 0x000008, "Member 'PP_Effects_C_DirtSecondEffect::SecondParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, FirstParameterName) == 0x000010, "Member 'PP_Effects_C_DirtSecondEffect::FirstParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'PP_Effects_C_DirtSecondEffect::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00001C, "Member 'PP_Effects_C_DirtSecondEffect::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'PP_Effects_C_DirtSecondEffect::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, CallFunc_GetFloatValue_ReturnValue_1) == 0x000028, "Member 'PP_Effects_C_DirtSecondEffect::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, CallFunc_GetFloatValue_ReturnValue_2) == 0x00002C, "Member 'PP_Effects_C_DirtSecondEffect::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'PP_Effects_C_DirtSecondEffect::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'PP_Effects_C_DirtSecondEffect::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'PP_Effects_C_DirtSecondEffect::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DirtSecondEffect, K2Node_VariableSet_SecondDirtEffectTime_ImplicitCast) == 0x000048, "Member 'PP_Effects_C_DirtSecondEffect::K2Node_VariableSet_SecondDirtEffectTime_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.DisableBleedingEffect
// 0x0048 (0x0048 - 0x0000)
struct PP_Effects_C_DisableBleedingEffect final
{
public:
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_VignetteOnStopValue_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_BleedingEffectOnStopValue_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_DisableBleedingEffect) == 0x000008, "Wrong alignment on PP_Effects_C_DisableBleedingEffect");
static_assert(sizeof(PP_Effects_C_DisableBleedingEffect) == 0x000048, "Wrong size on PP_Effects_C_DisableBleedingEffect");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffect, CallFunc_Array_AddUnique_ReturnValue) == 0x000000, "Member 'PP_Effects_C_DisableBleedingEffect::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffect, CallFunc_GetFloatValue_ReturnValue) == 0x000004, "Member 'PP_Effects_C_DisableBleedingEffect::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffect, CallFunc_GetFloatValue_ReturnValue_1) == 0x000008, "Member 'PP_Effects_C_DisableBleedingEffect::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffect, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'PP_Effects_C_DisableBleedingEffect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffect, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'PP_Effects_C_DisableBleedingEffect::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffect, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000028, "Member 'PP_Effects_C_DisableBleedingEffect::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffect, K2Node_VariableSet_VignetteOnStopValue_ImplicitCast) == 0x000030, "Member 'PP_Effects_C_DisableBleedingEffect::K2Node_VariableSet_VignetteOnStopValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffect, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x000038, "Member 'PP_Effects_C_DisableBleedingEffect::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffect, K2Node_VariableSet_BleedingEffectOnStopValue_ImplicitCast) == 0x000040, "Member 'PP_Effects_C_DisableBleedingEffect::K2Node_VariableSet_BleedingEffectOnStopValue_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.DisableBleedingEffectProcess
// 0x0048 (0x0048 - 0x0000)
struct PP_Effects_C_DisableBleedingEffectProcess final
{
public:
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_DisableBleedingEffectProcess) == 0x000008, "Wrong alignment on PP_Effects_C_DisableBleedingEffectProcess");
static_assert(sizeof(PP_Effects_C_DisableBleedingEffectProcess) == 0x000048, "Wrong size on PP_Effects_C_DisableBleedingEffectProcess");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000011, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000030, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000038, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_DisableBleedingEffectProcess, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000040, "Member 'PP_Effects_C_DisableBleedingEffectProcess::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.Enable Body Critical Hit Effect
// 0x0001 (0x0001 - 0x0000)
struct PP_Effects_C_Enable_Body_Critical_Hit_Effect final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_Enable_Body_Critical_Hit_Effect) == 0x000001, "Wrong alignment on PP_Effects_C_Enable_Body_Critical_Hit_Effect");
static_assert(sizeof(PP_Effects_C_Enable_Body_Critical_Hit_Effect) == 0x000001, "Wrong size on PP_Effects_C_Enable_Body_Critical_Hit_Effect");
static_assert(offsetof(PP_Effects_C_Enable_Body_Critical_Hit_Effect, Enable) == 0x000000, "Member 'PP_Effects_C_Enable_Body_Critical_Hit_Effect::Enable' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.Enable Critical Bleeding Effect
// 0x0001 (0x0001 - 0x0000)
struct PP_Effects_C_Enable_Critical_Bleeding_Effect final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_Enable_Critical_Bleeding_Effect) == 0x000001, "Wrong alignment on PP_Effects_C_Enable_Critical_Bleeding_Effect");
static_assert(sizeof(PP_Effects_C_Enable_Critical_Bleeding_Effect) == 0x000001, "Wrong size on PP_Effects_C_Enable_Critical_Bleeding_Effect");
static_assert(offsetof(PP_Effects_C_Enable_Critical_Bleeding_Effect, Enable) == 0x000000, "Member 'PP_Effects_C_Enable_Critical_Bleeding_Effect::Enable' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.EnableBleedingEffect
// 0x0020 (0x0020 - 0x0000)
struct PP_Effects_C_EnableBleedingEffect final
{
public:
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_EnableBleedingEffect) == 0x000008, "Wrong alignment on PP_Effects_C_EnableBleedingEffect");
static_assert(sizeof(PP_Effects_C_EnableBleedingEffect) == 0x000020, "Wrong size on PP_Effects_C_EnableBleedingEffect");
static_assert(offsetof(PP_Effects_C_EnableBleedingEffect, CallFunc_Array_AddUnique_ReturnValue) == 0x000000, "Member 'PP_Effects_C_EnableBleedingEffect::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_EnableBleedingEffect, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PP_Effects_C_EnableBleedingEffect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_EnableBleedingEffect, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PP_Effects_C_EnableBleedingEffect::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.ExecuteUbergraph_PP_Effects
// 0x0078 (0x0078 - 0x0000)
struct PP_Effects_C_ExecuteUbergraph_PP_Effects final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Off_;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(NoDestructor)
	struct FWeightedBlendable                     CallFunc_Array_Get_Item_1;                         // 0x0038(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_SetFieldsInStruct_StructOut;                // 0x0048(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_SetFieldsInStruct_StructOut_1;              // 0x0058(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_SetFieldsInStruct_Weight_ImplicitCast;      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_ExecuteUbergraph_PP_Effects) == 0x000008, "Wrong alignment on PP_Effects_C_ExecuteUbergraph_PP_Effects");
static_assert(sizeof(PP_Effects_C_ExecuteUbergraph_PP_Effects) == 0x000078, "Wrong size on PP_Effects_C_ExecuteUbergraph_PP_Effects");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, EntryPoint) == 0x000000, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::EntryPoint' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, Temp_int_Array_Index_Variable) == 0x000004, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, K2Node_CustomEvent_Off_) == 0x000014, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::K2Node_CustomEvent_Off_' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, CallFunc_Array_Get_Item) == 0x000028, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, K2Node_SetFieldsInStruct_StructOut) == 0x000048, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, K2Node_SetFieldsInStruct_StructOut_1) == 0x000058, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, CallFunc_Less_IntInt_ReturnValue_1) == 0x000071, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ExecuteUbergraph_PP_Effects, K2Node_SetFieldsInStruct_Weight_ImplicitCast) == 0x000074, "Member 'PP_Effects_C_ExecuteUbergraph_PP_Effects::K2Node_SetFieldsInStruct_Weight_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.Fast Hit Effect Progress
// 0x0098 (0x0098 - 0x0000)
struct PP_Effects_C_Fast_Hit_Effect_Progress final
{
public:
	float                                         NewLocalVar;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FastCurveColor;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TempCurveValue;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FastCurve;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_1; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_1;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_1;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_Fast_Hit_Effect_Progress) == 0x000008, "Wrong alignment on PP_Effects_C_Fast_Hit_Effect_Progress");
static_assert(sizeof(PP_Effects_C_Fast_Hit_Effect_Progress) == 0x000098, "Wrong size on PP_Effects_C_Fast_Hit_Effect_Progress");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, NewLocalVar) == 0x000000, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::NewLocalVar' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, FastCurveColor) == 0x000008, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::FastCurveColor' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, TempCurveValue) == 0x000010, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::TempCurveValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, FastCurve) == 0x000018, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::FastCurve' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000020, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_GetFloatValue_ReturnValue) == 0x000024, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_FInterpTo_ReturnValue) == 0x000030, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000040, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_K2_GetScalarParameterValue_ReturnValue_1) == 0x000048, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_K2_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_FInterpTo_ReturnValue_1) == 0x000050, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_GetFloatValue_ReturnValue_1) == 0x000058, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000060, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000068, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000070, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000074, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_FInterpTo_Target_ImplicitCast_1) == 0x000078, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_FInterpTo_Target_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x000080, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_FInterpTo_Current_ImplicitCast_1) == 0x000088, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_FInterpTo_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Fast_Hit_Effect_Progress, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000090, "Member 'PP_Effects_C_Fast_Hit_Effect_Progress::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.FirstBloodEffectSetup
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_FirstBloodEffectSetup final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_FirstBloodEffectSetup) == 0x000008, "Wrong alignment on PP_Effects_C_FirstBloodEffectSetup");
static_assert(sizeof(PP_Effects_C_FirstBloodEffectSetup) == 0x000028, "Wrong size on PP_Effects_C_FirstBloodEffectSetup");
static_assert(offsetof(PP_Effects_C_FirstBloodEffectSetup, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PP_Effects_C_FirstBloodEffectSetup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FirstBloodEffectSetup, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PP_Effects_C_FirstBloodEffectSetup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FirstBloodEffectSetup, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PP_Effects_C_FirstBloodEffectSetup::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FirstBloodEffectSetup, CallFunc_Array_AddUnique_ReturnValue) == 0x000020, "Member 'PP_Effects_C_FirstBloodEffectSetup::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FirstBloodEffectSetup, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000024, "Member 'PP_Effects_C_FirstBloodEffectSetup::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.FirstDirtEffectSetup
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_FirstDirtEffectSetup final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_FirstDirtEffectSetup) == 0x000008, "Wrong alignment on PP_Effects_C_FirstDirtEffectSetup");
static_assert(sizeof(PP_Effects_C_FirstDirtEffectSetup) == 0x000028, "Wrong size on PP_Effects_C_FirstDirtEffectSetup");
static_assert(offsetof(PP_Effects_C_FirstDirtEffectSetup, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PP_Effects_C_FirstDirtEffectSetup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FirstDirtEffectSetup, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PP_Effects_C_FirstDirtEffectSetup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FirstDirtEffectSetup, CallFunc_Array_AddUnique_ReturnValue) == 0x000014, "Member 'PP_Effects_C_FirstDirtEffectSetup::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FirstDirtEffectSetup, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PP_Effects_C_FirstDirtEffectSetup::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FirstDirtEffectSetup, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000020, "Member 'PP_Effects_C_FirstDirtEffectSetup::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.FoodEffectDecreasing
// 0x0030 (0x0030 - 0x0000)
struct PP_Effects_C_FoodEffectDecreasing final
{
public:
	class UMaterialInstanceDynamic*               NewLocalVar;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_FoodEffectDecreasing) == 0x000008, "Wrong alignment on PP_Effects_C_FoodEffectDecreasing");
static_assert(sizeof(PP_Effects_C_FoodEffectDecreasing) == 0x000030, "Wrong size on PP_Effects_C_FoodEffectDecreasing");
static_assert(offsetof(PP_Effects_C_FoodEffectDecreasing, NewLocalVar) == 0x000000, "Member 'PP_Effects_C_FoodEffectDecreasing::NewLocalVar' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectDecreasing, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PP_Effects_C_FoodEffectDecreasing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectDecreasing, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'PP_Effects_C_FoodEffectDecreasing::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectDecreasing, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'PP_Effects_C_FoodEffectDecreasing::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectDecreasing, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'PP_Effects_C_FoodEffectDecreasing::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectDecreasing, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'PP_Effects_C_FoodEffectDecreasing::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectDecreasing, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000024, "Member 'PP_Effects_C_FoodEffectDecreasing::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectDecreasing, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000028, "Member 'PP_Effects_C_FoodEffectDecreasing::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.FoodEffectInceasing
// 0x0020 (0x0020 - 0x0000)
struct PP_Effects_C_FoodEffectInceasing final
{
public:
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_FoodEffectInceasing) == 0x000008, "Wrong alignment on PP_Effects_C_FoodEffectInceasing");
static_assert(sizeof(PP_Effects_C_FoodEffectInceasing) == 0x000020, "Wrong size on PP_Effects_C_FoodEffectInceasing");
static_assert(offsetof(PP_Effects_C_FoodEffectInceasing, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'PP_Effects_C_FoodEffectInceasing::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectInceasing, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'PP_Effects_C_FoodEffectInceasing::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectInceasing, CallFunc_FMin_ReturnValue) == 0x000010, "Member 'PP_Effects_C_FoodEffectInceasing::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectInceasing, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000018, "Member 'PP_Effects_C_FoodEffectInceasing::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.FoodEffectStartDecrease
// 0x0030 (0x0030 - 0x0000)
struct PP_Effects_C_FoodEffectStartDecrease final
{
public:
	double                                        TargetValue;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Death;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_FoodEffectStartDecrease) == 0x000008, "Wrong alignment on PP_Effects_C_FoodEffectStartDecrease");
static_assert(sizeof(PP_Effects_C_FoodEffectStartDecrease) == 0x000030, "Wrong size on PP_Effects_C_FoodEffectStartDecrease");
static_assert(offsetof(PP_Effects_C_FoodEffectStartDecrease, TargetValue) == 0x000000, "Member 'PP_Effects_C_FoodEffectStartDecrease::TargetValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectStartDecrease, Death) == 0x000008, "Member 'PP_Effects_C_FoodEffectStartDecrease::Death' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectStartDecrease, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'PP_Effects_C_FoodEffectStartDecrease::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectStartDecrease, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'PP_Effects_C_FoodEffectStartDecrease::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectStartDecrease, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'PP_Effects_C_FoodEffectStartDecrease::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectStartDecrease, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000028, "Member 'PP_Effects_C_FoodEffectStartDecrease::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.FoodEffectStartIncrease
// 0x0030 (0x0030 - 0x0000)
struct PP_Effects_C_FoodEffectStartIncrease final
{
public:
	double                                        TargetValue;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_FoodEffectStartIncrease) == 0x000008, "Wrong alignment on PP_Effects_C_FoodEffectStartIncrease");
static_assert(sizeof(PP_Effects_C_FoodEffectStartIncrease) == 0x000030, "Wrong size on PP_Effects_C_FoodEffectStartIncrease");
static_assert(offsetof(PP_Effects_C_FoodEffectStartIncrease, TargetValue) == 0x000000, "Member 'PP_Effects_C_FoodEffectStartIncrease::TargetValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectStartIncrease, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'PP_Effects_C_FoodEffectStartIncrease::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectStartIncrease, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'PP_Effects_C_FoodEffectStartIncrease::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectStartIncrease, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x00001C, "Member 'PP_Effects_C_FoodEffectStartIncrease::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectStartIncrease, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'PP_Effects_C_FoodEffectStartIncrease::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_FoodEffectStartIncrease, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000028, "Member 'PP_Effects_C_FoodEffectStartIncrease::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.GetBleedingEffectParameterName
// 0x0020 (0x0020 - 0x0000)
struct PP_Effects_C_GetBleedingEffectParameterName final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentParameterName;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Random_OutItem;                     // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_GetBleedingEffectParameterName) == 0x000004, "Wrong alignment on PP_Effects_C_GetBleedingEffectParameterName");
static_assert(sizeof(PP_Effects_C_GetBleedingEffectParameterName) == 0x000020, "Wrong size on PP_Effects_C_GetBleedingEffectParameterName");
static_assert(offsetof(PP_Effects_C_GetBleedingEffectParameterName, ParameterName) == 0x000000, "Member 'PP_Effects_C_GetBleedingEffectParameterName::ParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetBleedingEffectParameterName, CurrentParameterName) == 0x000008, "Member 'PP_Effects_C_GetBleedingEffectParameterName::CurrentParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetBleedingEffectParameterName, CallFunc_Array_IsEmpty_ReturnValue) == 0x000010, "Member 'PP_Effects_C_GetBleedingEffectParameterName::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetBleedingEffectParameterName, CallFunc_Array_RemoveItem_ReturnValue) == 0x000011, "Member 'PP_Effects_C_GetBleedingEffectParameterName::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetBleedingEffectParameterName, CallFunc_Array_Random_OutItem) == 0x000014, "Member 'PP_Effects_C_GetBleedingEffectParameterName::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetBleedingEffectParameterName, CallFunc_Array_Random_OutIndex) == 0x00001C, "Member 'PP_Effects_C_GetBleedingEffectParameterName::CallFunc_Array_Random_OutIndex' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.GetCriticalBleedingIsActive
// 0x0001 (0x0001 - 0x0000)
struct PP_Effects_C_GetCriticalBleedingIsActive final
{
public:
	bool                                          Param_CriticalBleedingIsActive;                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_GetCriticalBleedingIsActive) == 0x000001, "Wrong alignment on PP_Effects_C_GetCriticalBleedingIsActive");
static_assert(sizeof(PP_Effects_C_GetCriticalBleedingIsActive) == 0x000001, "Wrong size on PP_Effects_C_GetCriticalBleedingIsActive");
static_assert(offsetof(PP_Effects_C_GetCriticalBleedingIsActive, Param_CriticalBleedingIsActive) == 0x000000, "Member 'PP_Effects_C_GetCriticalBleedingIsActive::Param_CriticalBleedingIsActive' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.GetParameterByAngle
// 0x0030 (0x0030 - 0x0000)
struct PP_Effects_C_GetParameterByAngle final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AngleIsPositive;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AbsoluteAngle;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_GetParameterByAngle) == 0x000008, "Wrong alignment on PP_Effects_C_GetParameterByAngle");
static_assert(sizeof(PP_Effects_C_GetParameterByAngle) == 0x000030, "Wrong size on PP_Effects_C_GetParameterByAngle");
static_assert(offsetof(PP_Effects_C_GetParameterByAngle, Angle) == 0x000000, "Member 'PP_Effects_C_GetParameterByAngle::Angle' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetParameterByAngle, ReturnValue) == 0x000008, "Member 'PP_Effects_C_GetParameterByAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetParameterByAngle, AngleIsPositive) == 0x000010, "Member 'PP_Effects_C_GetParameterByAngle::AngleIsPositive' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetParameterByAngle, AbsoluteAngle) == 0x000018, "Member 'PP_Effects_C_GetParameterByAngle::AbsoluteAngle' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetParameterByAngle, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'PP_Effects_C_GetParameterByAngle::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetParameterByAngle, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'PP_Effects_C_GetParameterByAngle::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetParameterByAngle, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000029, "Member 'PP_Effects_C_GetParameterByAngle::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetParameterByAngle, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00002A, "Member 'PP_Effects_C_GetParameterByAngle::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetParameterByAngle, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x00002B, "Member 'PP_Effects_C_GetParameterByAngle::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetParameterByAngle, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00002C, "Member 'PP_Effects_C_GetParameterByAngle::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.GetWeightPP
// 0x0038 (0x0038 - 0x0000)
struct PP_Effects_C_GetWeightPP final
{
public:
	class UMaterialInstance*                      Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_GetWeightPP) == 0x000008, "Wrong alignment on PP_Effects_C_GetWeightPP");
static_assert(sizeof(PP_Effects_C_GetWeightPP) == 0x000038, "Wrong size on PP_Effects_C_GetWeightPP");
static_assert(offsetof(PP_Effects_C_GetWeightPP, Material) == 0x000000, "Member 'PP_Effects_C_GetWeightPP::Material' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetWeightPP, Weight) == 0x000008, "Member 'PP_Effects_C_GetWeightPP::Weight' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetWeightPP, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'PP_Effects_C_GetWeightPP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetWeightPP, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PP_Effects_C_GetWeightPP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetWeightPP, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PP_Effects_C_GetWeightPP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetWeightPP, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'PP_Effects_C_GetWeightPP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetWeightPP, CallFunc_Array_Get_Item) == 0x000020, "Member 'PP_Effects_C_GetWeightPP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetWeightPP, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'PP_Effects_C_GetWeightPP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_GetWeightPP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'PP_Effects_C_GetWeightPP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffect
// 0x00A0 (0x00A0 - 0x0000)
struct PP_Effects_C_HitEffect final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Parameter_Name;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetParameterByAngle_ReturnValue;          // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffect) == 0x000008, "Wrong alignment on PP_Effects_C_HitEffect");
static_assert(sizeof(PP_Effects_C_HitEffect) == 0x0000A0, "Wrong size on PP_Effects_C_HitEffect");
static_assert(offsetof(PP_Effects_C_HitEffect, Angle) == 0x000000, "Member 'PP_Effects_C_HitEffect::Angle' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, Parameter_Name) == 0x000008, "Member 'PP_Effects_C_HitEffect::Parameter_Name' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000010, "Member 'PP_Effects_C_HitEffect::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_Array_AddUnique_ReturnValue) == 0x000020, "Member 'PP_Effects_C_HitEffect::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'PP_Effects_C_HitEffect::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'PP_Effects_C_HitEffect::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'PP_Effects_C_HitEffect::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'PP_Effects_C_HitEffect::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_Map_Contains_ReturnValue) == 0x000058, "Member 'PP_Effects_C_HitEffect::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'PP_Effects_C_HitEffect::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_SelectFloat_ReturnValue_1) == 0x000068, "Member 'PP_Effects_C_HitEffect::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_SelectFloat_ReturnValue_2) == 0x000070, "Member 'PP_Effects_C_HitEffect::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'PP_Effects_C_HitEffect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000088, "Member 'PP_Effects_C_HitEffect::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000090, "Member 'PP_Effects_C_HitEffect::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_GetParameterByAngle_ReturnValue) == 0x000094, "Member 'PP_Effects_C_HitEffect::CallFunc_GetParameterByAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffect, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00009C, "Member 'PP_Effects_C_HitEffect::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectBloodProgress
// 0x0070 (0x0070 - 0x0000)
struct PP_Effects_C_HitEffectBloodProgress final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimePassed;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsEmpty_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectBloodProgress) == 0x000008, "Wrong alignment on PP_Effects_C_HitEffectBloodProgress");
static_assert(sizeof(PP_Effects_C_HitEffectBloodProgress) == 0x000070, "Wrong size on PP_Effects_C_HitEffectBloodProgress");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, ParameterValue) == 0x000000, "Member 'PP_Effects_C_HitEffectBloodProgress::ParameterValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, ParameterName) == 0x000004, "Member 'PP_Effects_C_HitEffectBloodProgress::ParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, TimePassed) == 0x000010, "Member 'PP_Effects_C_HitEffectBloodProgress::TimePassed' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, Temp_int_Array_Index_Variable) == 0x000018, "Member 'PP_Effects_C_HitEffectBloodProgress::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'PP_Effects_C_HitEffectBloodProgress::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Map_IsEmpty_ReturnValue) == 0x000024, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Map_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Map_Remove_ReturnValue) == 0x000025, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000026, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_GetFloatValue_ReturnValue) == 0x000030, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Map_Find_Value) == 0x000038, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Map_Keys_Keys) == 0x000048, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Array_Get_Item) == 0x00005C, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBloodProgress, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000068, "Member 'PP_Effects_C_HitEffectBloodProgress::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectBlurProgress
// 0x0018 (0x0018 - 0x0000)
struct PP_Effects_C_HitEffectBlurProgress final
{
public:
	float                                         CurveValue;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectBlurProgress) == 0x000008, "Wrong alignment on PP_Effects_C_HitEffectBlurProgress");
static_assert(sizeof(PP_Effects_C_HitEffectBlurProgress) == 0x000018, "Wrong size on PP_Effects_C_HitEffectBlurProgress");
static_assert(offsetof(PP_Effects_C_HitEffectBlurProgress, CurveValue) == 0x000000, "Member 'PP_Effects_C_HitEffectBlurProgress::CurveValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBlurProgress, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'PP_Effects_C_HitEffectBlurProgress::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBlurProgress, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000005, "Member 'PP_Effects_C_HitEffectBlurProgress::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBlurProgress, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'PP_Effects_C_HitEffectBlurProgress::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBlurProgress, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'PP_Effects_C_HitEffectBlurProgress::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectBlurProgress, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000014, "Member 'PP_Effects_C_HitEffectBlurProgress::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectDesaturationProgress
// 0x0038 (0x0038 - 0x0000)
struct PP_Effects_C_HitEffectDesaturationProgress final
{
public:
	float                                         CurveValue;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurveValue_ImplicitCast;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectDesaturationProgress) == 0x000008, "Wrong alignment on PP_Effects_C_HitEffectDesaturationProgress");
static_assert(sizeof(PP_Effects_C_HitEffectDesaturationProgress) == 0x000038, "Wrong size on PP_Effects_C_HitEffectDesaturationProgress");
static_assert(offsetof(PP_Effects_C_HitEffectDesaturationProgress, CurveValue) == 0x000000, "Member 'PP_Effects_C_HitEffectDesaturationProgress::CurveValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectDesaturationProgress, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'PP_Effects_C_HitEffectDesaturationProgress::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectDesaturationProgress, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'PP_Effects_C_HitEffectDesaturationProgress::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectDesaturationProgress, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'PP_Effects_C_HitEffectDesaturationProgress::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectDesaturationProgress, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'PP_Effects_C_HitEffectDesaturationProgress::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectDesaturationProgress, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000020, "Member 'PP_Effects_C_HitEffectDesaturationProgress::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectDesaturationProgress, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'PP_Effects_C_HitEffectDesaturationProgress::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectDesaturationProgress, K2Node_VariableSet_CurveValue_ImplicitCast) == 0x000030, "Member 'PP_Effects_C_HitEffectDesaturationProgress::K2Node_VariableSet_CurveValue_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectFastStop
// 0x00C0 (0x00C0 - 0x0000)
struct PP_Effects_C_HitEffectFastStop final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimePassed;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParameterName;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0040(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_3;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Add_Value_ImplicitCast;               // 0x0088(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_2;      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_3;      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_HitEffectVignetteStopValue_ImplicitCast; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HitEffectDesaturationStopValue_ImplicitCast; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_HitEffectBlurStopValue_ImplicitCast; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectFastStop) == 0x000008, "Wrong alignment on PP_Effects_C_HitEffectFastStop");
static_assert(sizeof(PP_Effects_C_HitEffectFastStop) == 0x0000C0, "Wrong size on PP_Effects_C_HitEffectFastStop");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, ParameterValue) == 0x000000, "Member 'PP_Effects_C_HitEffectFastStop::ParameterValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, TimePassed) == 0x000008, "Member 'PP_Effects_C_HitEffectFastStop::TimePassed' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, ParameterName) == 0x000010, "Member 'PP_Effects_C_HitEffectFastStop::ParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, Temp_int_Array_Index_Variable) == 0x000018, "Member 'PP_Effects_C_HitEffectFastStop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'PP_Effects_C_HitEffectFastStop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_Array_AddUnique_ReturnValue) == 0x000024, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_GetFloatValue_ReturnValue) == 0x000028, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_Map_Find_Value) == 0x000030, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_Map_Keys_Keys) == 0x000040, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'PP_Effects_C_HitEffectFastStop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_Array_Get_Item) == 0x000060, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_GetFloatValue_ReturnValue_1) == 0x000078, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_GetFloatValue_ReturnValue_2) == 0x00007C, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_GetFloatValue_ReturnValue_3) == 0x000080, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_GetFloatValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_Map_Add_Value_ImplicitCast) == 0x000088, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_Map_Add_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000090, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000094, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x000098, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_GetFloatValue_InTime_ImplicitCast_2) == 0x00009C, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_GetFloatValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, CallFunc_GetFloatValue_InTime_ImplicitCast_3) == 0x0000A0, "Member 'PP_Effects_C_HitEffectFastStop::CallFunc_GetFloatValue_InTime_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, K2Node_VariableSet_HitEffectVignetteStopValue_ImplicitCast) == 0x0000A8, "Member 'PP_Effects_C_HitEffectFastStop::K2Node_VariableSet_HitEffectVignetteStopValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, K2Node_VariableSet_HitEffectDesaturationStopValue_ImplicitCast) == 0x0000B0, "Member 'PP_Effects_C_HitEffectFastStop::K2Node_VariableSet_HitEffectDesaturationStopValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStop, K2Node_VariableSet_HitEffectBlurStopValue_ImplicitCast) == 0x0000B8, "Member 'PP_Effects_C_HitEffectFastStop::K2Node_VariableSet_HitEffectBlurStopValue_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectFastStopBloodProgress
// 0x0080 (0x0080 - 0x0000)
struct PP_Effects_C_HitEffectFastStopBloodProgress final
{
public:
	float                                         ParameterValue;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsEmpty_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Add_Value_ImplicitCast;               // 0x0070(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_ParameterValue_ImplicitCast;    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectFastStopBloodProgress) == 0x000008, "Wrong alignment on PP_Effects_C_HitEffectFastStopBloodProgress");
static_assert(sizeof(PP_Effects_C_HitEffectFastStopBloodProgress) == 0x000080, "Wrong size on PP_Effects_C_HitEffectFastStopBloodProgress");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, ParameterValue) == 0x000000, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::ParameterValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, ParameterName) == 0x000004, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::ParameterName' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Map_IsEmpty_ReturnValue) == 0x000021, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Map_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Map_Remove_ReturnValue) == 0x000022, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Map_Find_Value) == 0x000028, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Array_Get_Item) == 0x000050, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000068, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, CallFunc_Map_Add_Value_ImplicitCast) == 0x000070, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::CallFunc_Map_Add_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBloodProgress, K2Node_VariableSet_ParameterValue_ImplicitCast) == 0x000078, "Member 'PP_Effects_C_HitEffectFastStopBloodProgress::K2Node_VariableSet_ParameterValue_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectFastStopBlurProgress
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_HitEffectFastStopBlurProgress final
{
public:
	float                                         CurveValue;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectFastStopBlurProgress) == 0x000008, "Wrong alignment on PP_Effects_C_HitEffectFastStopBlurProgress");
static_assert(sizeof(PP_Effects_C_HitEffectFastStopBlurProgress) == 0x000028, "Wrong size on PP_Effects_C_HitEffectFastStopBlurProgress");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBlurProgress, CurveValue) == 0x000000, "Member 'PP_Effects_C_HitEffectFastStopBlurProgress::CurveValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBlurProgress, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'PP_Effects_C_HitEffectFastStopBlurProgress::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBlurProgress, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'PP_Effects_C_HitEffectFastStopBlurProgress::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBlurProgress, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'PP_Effects_C_HitEffectFastStopBlurProgress::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBlurProgress, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'PP_Effects_C_HitEffectFastStopBlurProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopBlurProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'PP_Effects_C_HitEffectFastStopBlurProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectFastStopDesaturationProgress
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_HitEffectFastStopDesaturationProgress final
{
public:
	float                                         CurveValue;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectFastStopDesaturationProgress) == 0x000008, "Wrong alignment on PP_Effects_C_HitEffectFastStopDesaturationProgress");
static_assert(sizeof(PP_Effects_C_HitEffectFastStopDesaturationProgress) == 0x000028, "Wrong size on PP_Effects_C_HitEffectFastStopDesaturationProgress");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopDesaturationProgress, CurveValue) == 0x000000, "Member 'PP_Effects_C_HitEffectFastStopDesaturationProgress::CurveValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopDesaturationProgress, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'PP_Effects_C_HitEffectFastStopDesaturationProgress::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopDesaturationProgress, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'PP_Effects_C_HitEffectFastStopDesaturationProgress::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopDesaturationProgress, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'PP_Effects_C_HitEffectFastStopDesaturationProgress::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopDesaturationProgress, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'PP_Effects_C_HitEffectFastStopDesaturationProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopDesaturationProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'PP_Effects_C_HitEffectFastStopDesaturationProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectFastStopProgress
// 0x0001 (0x0001 - 0x0000)
struct PP_Effects_C_HitEffectFastStopProgress final
{
public:
	bool                                          CallFunc_HitEffectIsActive_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectFastStopProgress) == 0x000001, "Wrong alignment on PP_Effects_C_HitEffectFastStopProgress");
static_assert(sizeof(PP_Effects_C_HitEffectFastStopProgress) == 0x000001, "Wrong size on PP_Effects_C_HitEffectFastStopProgress");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopProgress, CallFunc_HitEffectIsActive_ReturnValue) == 0x000000, "Member 'PP_Effects_C_HitEffectFastStopProgress::CallFunc_HitEffectIsActive_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectFastStopVignetteProgress
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_HitEffectFastStopVignetteProgress final
{
public:
	float                                         CurveValue;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectFastStopVignetteProgress) == 0x000008, "Wrong alignment on PP_Effects_C_HitEffectFastStopVignetteProgress");
static_assert(sizeof(PP_Effects_C_HitEffectFastStopVignetteProgress) == 0x000028, "Wrong size on PP_Effects_C_HitEffectFastStopVignetteProgress");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopVignetteProgress, CurveValue) == 0x000000, "Member 'PP_Effects_C_HitEffectFastStopVignetteProgress::CurveValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopVignetteProgress, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'PP_Effects_C_HitEffectFastStopVignetteProgress::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopVignetteProgress, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'PP_Effects_C_HitEffectFastStopVignetteProgress::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopVignetteProgress, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'PP_Effects_C_HitEffectFastStopVignetteProgress::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopVignetteProgress, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'PP_Effects_C_HitEffectFastStopVignetteProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectFastStopVignetteProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'PP_Effects_C_HitEffectFastStopVignetteProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectIsActive
// 0x0004 (0x0004 - 0x0000)
struct PP_Effects_C_HitEffectIsActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectIsActive) == 0x000001, "Wrong alignment on PP_Effects_C_HitEffectIsActive");
static_assert(sizeof(PP_Effects_C_HitEffectIsActive) == 0x000004, "Wrong size on PP_Effects_C_HitEffectIsActive");
static_assert(offsetof(PP_Effects_C_HitEffectIsActive, ReturnValue) == 0x000000, "Member 'PP_Effects_C_HitEffectIsActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectIsActive, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'PP_Effects_C_HitEffectIsActive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectIsActive, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'PP_Effects_C_HitEffectIsActive::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectIsActive, CallFunc_BooleanOR_ReturnValue_2) == 0x000003, "Member 'PP_Effects_C_HitEffectIsActive::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectProgress
// 0x0001 (0x0001 - 0x0000)
struct PP_Effects_C_HitEffectProgress final
{
public:
	bool                                          CallFunc_HitEffectIsActive_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectProgress) == 0x000001, "Wrong alignment on PP_Effects_C_HitEffectProgress");
static_assert(sizeof(PP_Effects_C_HitEffectProgress) == 0x000001, "Wrong size on PP_Effects_C_HitEffectProgress");
static_assert(offsetof(PP_Effects_C_HitEffectProgress, CallFunc_HitEffectIsActive_ReturnValue) == 0x000000, "Member 'PP_Effects_C_HitEffectProgress::CallFunc_HitEffectIsActive_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HitEffectVignetteProgress
// 0x0078 (0x0078 - 0x0000)
struct PP_Effects_C_HitEffectVignetteProgress final
{
public:
	float                                         CurveValue;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CurveValue_ImplicitCast;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HitEffectVignetteProgress) == 0x000008, "Wrong alignment on PP_Effects_C_HitEffectVignetteProgress");
static_assert(sizeof(PP_Effects_C_HitEffectVignetteProgress) == 0x000078, "Wrong size on PP_Effects_C_HitEffectVignetteProgress");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CurveValue) == 0x000000, "Member 'PP_Effects_C_HitEffectVignetteProgress::CurveValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, Temp_bool_Variable) == 0x000011, "Member 'PP_Effects_C_HitEffectVignetteProgress::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000012, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000020, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, K2Node_Select_Default) == 0x000030, "Member 'PP_Effects_C_HitEffectVignetteProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000038, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_GetFloatValue_ReturnValue) == 0x00003C, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_FInterpTo_ReturnValue) == 0x000040, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000050, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000058, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000060, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000070, "Member 'PP_Effects_C_HitEffectVignetteProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HitEffectVignetteProgress, K2Node_VariableSet_CurveValue_ImplicitCast) == 0x000074, "Member 'PP_Effects_C_HitEffectVignetteProgress::K2Node_VariableSet_CurveValue_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HPChange
// 0x0070 (0x0070 - 0x0000)
struct PP_Effects_C_HPChange final
{
public:
	float                                         HPTimeFreqLoc;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStatType                                     Temp_byte_Variable;                                // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HPChange) == 0x000008, "Wrong alignment on PP_Effects_C_HPChange");
static_assert(sizeof(PP_Effects_C_HPChange) == 0x000070, "Wrong size on PP_Effects_C_HPChange");
static_assert(offsetof(PP_Effects_C_HPChange, HPTimeFreqLoc) == 0x000000, "Member 'PP_Effects_C_HPChange::HPTimeFreqLoc' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, Temp_byte_Variable) == 0x000004, "Member 'PP_Effects_C_HPChange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PP_Effects_C_HPChange::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PP_Effects_C_HPChange::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_Array_AddUnique_ReturnValue) == 0x000020, "Member 'PP_Effects_C_HPChange::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_Map_Find_Value) == 0x000028, "Member 'PP_Effects_C_HPChange::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'PP_Effects_C_HPChange::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'PP_Effects_C_HPChange::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'PP_Effects_C_HPChange::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'PP_Effects_C_HPChange::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_Abs_ReturnValue) == 0x000050, "Member 'PP_Effects_C_HPChange::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_Lerp_ReturnValue) == 0x000058, "Member 'PP_Effects_C_HPChange::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_Lerp_ReturnValue_1) == 0x000060, "Member 'PP_Effects_C_HPChange::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPChange, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'PP_Effects_C_HPChange::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.HPProgress
// 0x0038 (0x0038 - 0x0000)
struct PP_Effects_C_HPProgress final
{
public:
	class UCurveFloat*                            HPProgCurve;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        HpProgressFreq;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_HPProgress) == 0x000008, "Wrong alignment on PP_Effects_C_HPProgress");
static_assert(sizeof(PP_Effects_C_HPProgress) == 0x000038, "Wrong size on PP_Effects_C_HPProgress");
static_assert(offsetof(PP_Effects_C_HPProgress, HPProgCurve) == 0x000000, "Member 'PP_Effects_C_HPProgress::HPProgCurve' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPProgress, HpProgressFreq) == 0x000008, "Member 'PP_Effects_C_HPProgress::HpProgressFreq' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPProgress, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000010, "Member 'PP_Effects_C_HPProgress::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPProgress, CallFunc_FInterpTo_ReturnValue) == 0x000018, "Member 'PP_Effects_C_HPProgress::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPProgress, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'PP_Effects_C_HPProgress::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPProgress, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000028, "Member 'PP_Effects_C_HPProgress::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_HPProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000030, "Member 'PP_Effects_C_HPProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.Initialize
// 0x00B0 (0x00B0 - 0x0000)
struct PP_Effects_C_Initialize final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCutsceneComponent_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double HungerLevel, double CriticalHungerLevel)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double ThirstLevel, double CriticalThirstLevel)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Aim)>                     K2Node_CreateDelegate_OutputDelegate_5;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_PlayerStatsComponent_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     CallFunc_GetActorOfClass_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_Initialize) == 0x000008, "Wrong alignment on PP_Effects_C_Initialize");
static_assert(sizeof(PP_Effects_C_Initialize) == 0x0000B0, "Wrong size on PP_Effects_C_Initialize");
static_assert(offsetof(PP_Effects_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PP_Effects_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'PP_Effects_C_Initialize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PP_Effects_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'PP_Effects_C_Initialize::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'PP_Effects_C_Initialize::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'PP_Effects_C_Initialize::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'PP_Effects_C_Initialize::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, K2Node_CreateDelegate_OutputDelegate_4) == 0x000050, "Member 'PP_Effects_C_Initialize::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, K2Node_CreateDelegate_OutputDelegate_5) == 0x000060, "Member 'PP_Effects_C_Initialize::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, CallFunc_IsValid_ReturnValue_2) == 0x000070, "Member 'PP_Effects_C_Initialize::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000078, "Member 'PP_Effects_C_Initialize::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000080, "Member 'PP_Effects_C_Initialize::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, CallFunc_IsValid_ReturnValue_3) == 0x000088, "Member 'PP_Effects_C_Initialize::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, CallFunc_GetOwner_ReturnValue) == 0x000090, "Member 'PP_Effects_C_Initialize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, K2Node_DynamicCast_AsSurvival_Player) == 0x000098, "Member 'PP_Effects_C_Initialize::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'PP_Effects_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize, CallFunc_GetActorOfClass_ReturnValue) == 0x0000A8, "Member 'PP_Effects_C_Initialize::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.Initialize Effects
// 0x0168 (0x0168 - 0x0000)
struct PP_Effects_C_Initialize_Effects final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_1;             // 0x0010(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_2;             // 0x0020(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_3;             // 0x0030(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_4;             // 0x0040(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_5;             // 0x0050(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_6;             // 0x0060(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_7;             // 0x0070(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_8;             // 0x0080(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_9;             // 0x0090(0x0010)(NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_6; // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_7; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_8; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_9; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0138(0x0010)()
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable_10;            // 0x0148(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_10; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_Initialize_Effects) == 0x000008, "Wrong alignment on PP_Effects_C_Initialize_Effects");
static_assert(sizeof(PP_Effects_C_Initialize_Effects) == 0x000168, "Wrong size on PP_Effects_C_Initialize_Effects");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable_1) == 0x000010, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable_2) == 0x000020, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable_3) == 0x000030, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable_3' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable_4) == 0x000040, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable_4' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable_5) == 0x000050, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable_5' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable_6) == 0x000060, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable_6' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable_7) == 0x000070, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable_7' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable_8) == 0x000080, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable_8' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable_9) == 0x000090, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable_9' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000A0, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue_1) == 0x0000AC, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue_2) == 0x0000B0, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0000B8, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x0000C0, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue_3) == 0x0000C8, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x0000D0, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue_4) == 0x0000D8, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x0000E0, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue_5) == 0x0000E8, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x0000F0, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue_6) == 0x0000F8, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue_6) == 0x000100, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue_7) == 0x000108, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue_7) == 0x000110, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue_8) == 0x000118, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue_8) == 0x000120, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue_9) == 0x000128, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue_9) == 0x000130, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendables) == 0x000138, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, K2Node_MakeStruct_WeightedBlendable_10) == 0x000148, "Member 'PP_Effects_C_Initialize_Effects::K2Node_MakeStruct_WeightedBlendable_10' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_Array_Add_ReturnValue_10) == 0x000158, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_Initialize_Effects, CallFunc_CreateDynamicMaterialInstance_ReturnValue_10) == 0x000160, "Member 'PP_Effects_C_Initialize_Effects::CallFunc_CreateDynamicMaterialInstance_ReturnValue_10' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.OnAiming
// 0x0058 (0x0058 - 0x0000)
struct PP_Effects_C_OnAiming final
{
public:
	bool                                          Aim;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ScopeBase_C*                        Scope;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_OnAiming) == 0x000008, "Wrong alignment on PP_Effects_C_OnAiming");
static_assert(sizeof(PP_Effects_C_OnAiming) == 0x000058, "Wrong size on PP_Effects_C_OnAiming");
static_assert(offsetof(PP_Effects_C_OnAiming, Aim) == 0x000000, "Member 'PP_Effects_C_OnAiming::Aim' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnAiming, Scope) == 0x000008, "Member 'PP_Effects_C_OnAiming::Scope' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnAiming, CallFunc_Array_AddUnique_ReturnValue) == 0x000010, "Member 'PP_Effects_C_OnAiming::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnAiming, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000014, "Member 'PP_Effects_C_OnAiming::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnAiming, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'PP_Effects_C_OnAiming::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnAiming, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'PP_Effects_C_OnAiming::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnAiming, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'PP_Effects_C_OnAiming::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnAiming, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000040, "Member 'PP_Effects_C_OnAiming::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnAiming, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000048, "Member 'PP_Effects_C_OnAiming::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnAiming, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x00004C, "Member 'PP_Effects_C_OnAiming::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnAiming, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000050, "Member 'PP_Effects_C_OnAiming::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.OnHungerTick
// 0x0040 (0x0040 - 0x0000)
struct PP_Effects_C_OnHungerTick final
{
public:
	double                                        HungerLevel;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CriticalHungerLevel;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetValue;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_OnHungerTick) == 0x000008, "Wrong alignment on PP_Effects_C_OnHungerTick");
static_assert(sizeof(PP_Effects_C_OnHungerTick) == 0x000040, "Wrong size on PP_Effects_C_OnHungerTick");
static_assert(offsetof(PP_Effects_C_OnHungerTick, HungerLevel) == 0x000000, "Member 'PP_Effects_C_OnHungerTick::HungerLevel' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnHungerTick, CriticalHungerLevel) == 0x000008, "Member 'PP_Effects_C_OnHungerTick::CriticalHungerLevel' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnHungerTick, TargetValue) == 0x000010, "Member 'PP_Effects_C_OnHungerTick::TargetValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnHungerTick, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'PP_Effects_C_OnHungerTick::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnHungerTick, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'PP_Effects_C_OnHungerTick::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnHungerTick, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'PP_Effects_C_OnHungerTick::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnHungerTick, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000030, "Member 'PP_Effects_C_OnHungerTick::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnHungerTick, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'PP_Effects_C_OnHungerTick::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnHungerTick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000039, "Member 'PP_Effects_C_OnHungerTick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.OnStartCutscene
// 0x0010 (0x0010 - 0x0000)
struct PP_Effects_C_OnStartCutscene final
{
public:
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetActiveCameraComponent_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_OnStartCutscene) == 0x000008, "Wrong alignment on PP_Effects_C_OnStartCutscene");
static_assert(sizeof(PP_Effects_C_OnStartCutscene) == 0x000010, "Wrong size on PP_Effects_C_OnStartCutscene");
static_assert(offsetof(PP_Effects_C_OnStartCutscene, CallFunc_GetSequencePlayer_ReturnValue) == 0x000000, "Member 'PP_Effects_C_OnStartCutscene::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnStartCutscene, CallFunc_GetActiveCameraComponent_ReturnValue) == 0x000008, "Member 'PP_Effects_C_OnStartCutscene::CallFunc_GetActiveCameraComponent_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.OnThirstTick
// 0x0040 (0x0040 - 0x0000)
struct PP_Effects_C_OnThirstTick final
{
public:
	double                                        ThirstLevel;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CriticalThirstLevel;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetValue;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_OnThirstTick) == 0x000008, "Wrong alignment on PP_Effects_C_OnThirstTick");
static_assert(sizeof(PP_Effects_C_OnThirstTick) == 0x000040, "Wrong size on PP_Effects_C_OnThirstTick");
static_assert(offsetof(PP_Effects_C_OnThirstTick, ThirstLevel) == 0x000000, "Member 'PP_Effects_C_OnThirstTick::ThirstLevel' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnThirstTick, CriticalThirstLevel) == 0x000008, "Member 'PP_Effects_C_OnThirstTick::CriticalThirstLevel' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnThirstTick, TargetValue) == 0x000010, "Member 'PP_Effects_C_OnThirstTick::TargetValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnThirstTick, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'PP_Effects_C_OnThirstTick::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnThirstTick, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'PP_Effects_C_OnThirstTick::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnThirstTick, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'PP_Effects_C_OnThirstTick::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnThirstTick, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000030, "Member 'PP_Effects_C_OnThirstTick::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnThirstTick, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'PP_Effects_C_OnThirstTick::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_OnThirstTick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000039, "Member 'PP_Effects_C_OnThirstTick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.PP_Switcher
// 0x0001 (0x0001 - 0x0000)
struct PP_Effects_C_PP_Switcher final
{
public:
	bool                                          Off_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_PP_Switcher) == 0x000001, "Wrong alignment on PP_Effects_C_PP_Switcher");
static_assert(sizeof(PP_Effects_C_PP_Switcher) == 0x000001, "Wrong size on PP_Effects_C_PP_Switcher");
static_assert(offsetof(PP_Effects_C_PP_Switcher, Off_) == 0x000000, "Member 'PP_Effects_C_PP_Switcher::Off_' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.ScopeEffectOffProgress
// 0x0030 (0x0030 - 0x0000)
struct PP_Effects_C_ScopeEffectOffProgress final
{
public:
	class ABP_ScopeBase_C*                        Scope;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_ScopeEffectOffProgress) == 0x000008, "Wrong alignment on PP_Effects_C_ScopeEffectOffProgress");
static_assert(sizeof(PP_Effects_C_ScopeEffectOffProgress) == 0x000030, "Wrong size on PP_Effects_C_ScopeEffectOffProgress");
static_assert(offsetof(PP_Effects_C_ScopeEffectOffProgress, Scope) == 0x000000, "Member 'PP_Effects_C_ScopeEffectOffProgress::Scope' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOffProgress, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'PP_Effects_C_ScopeEffectOffProgress::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOffProgress, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'PP_Effects_C_ScopeEffectOffProgress::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOffProgress, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'PP_Effects_C_ScopeEffectOffProgress::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOffProgress, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'PP_Effects_C_ScopeEffectOffProgress::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOffProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000028, "Member 'PP_Effects_C_ScopeEffectOffProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOffProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00002C, "Member 'PP_Effects_C_ScopeEffectOffProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.ScopeEffectOnProgress
// 0x0030 (0x0030 - 0x0000)
struct PP_Effects_C_ScopeEffectOnProgress final
{
public:
	class ABP_ScopeBase_C*                        Scope;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_ScopeEffectOnProgress) == 0x000008, "Wrong alignment on PP_Effects_C_ScopeEffectOnProgress");
static_assert(sizeof(PP_Effects_C_ScopeEffectOnProgress) == 0x000030, "Wrong size on PP_Effects_C_ScopeEffectOnProgress");
static_assert(offsetof(PP_Effects_C_ScopeEffectOnProgress, Scope) == 0x000000, "Member 'PP_Effects_C_ScopeEffectOnProgress::Scope' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOnProgress, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'PP_Effects_C_ScopeEffectOnProgress::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOnProgress, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PP_Effects_C_ScopeEffectOnProgress::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOnProgress, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'PP_Effects_C_ScopeEffectOnProgress::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOnProgress, CallFunc_FMin_ReturnValue) == 0x000020, "Member 'PP_Effects_C_ScopeEffectOnProgress::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOnProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000028, "Member 'PP_Effects_C_ScopeEffectOnProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ScopeEffectOnProgress, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00002C, "Member 'PP_Effects_C_ScopeEffectOnProgress::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.SecondBloodEffectSetup
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_SecondBloodEffectSetup final
{
public:
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_SecondBloodEffectSetup) == 0x000008, "Wrong alignment on PP_Effects_C_SecondBloodEffectSetup");
static_assert(sizeof(PP_Effects_C_SecondBloodEffectSetup) == 0x000028, "Wrong size on PP_Effects_C_SecondBloodEffectSetup");
static_assert(offsetof(PP_Effects_C_SecondBloodEffectSetup, CallFunc_Array_AddUnique_ReturnValue) == 0x000000, "Member 'PP_Effects_C_SecondBloodEffectSetup::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SecondBloodEffectSetup, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PP_Effects_C_SecondBloodEffectSetup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SecondBloodEffectSetup, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PP_Effects_C_SecondBloodEffectSetup::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SecondBloodEffectSetup, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000020, "Member 'PP_Effects_C_SecondBloodEffectSetup::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.SecondDirtEffectSetup
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_SecondDirtEffectSetup final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_SecondDirtEffectSetup) == 0x000008, "Wrong alignment on PP_Effects_C_SecondDirtEffectSetup");
static_assert(sizeof(PP_Effects_C_SecondDirtEffectSetup) == 0x000028, "Wrong size on PP_Effects_C_SecondDirtEffectSetup");
static_assert(offsetof(PP_Effects_C_SecondDirtEffectSetup, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PP_Effects_C_SecondDirtEffectSetup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SecondDirtEffectSetup, CallFunc_Array_AddUnique_ReturnValue) == 0x000010, "Member 'PP_Effects_C_SecondDirtEffectSetup::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SecondDirtEffectSetup, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PP_Effects_C_SecondDirtEffectSetup::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SecondDirtEffectSetup, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000020, "Member 'PP_Effects_C_SecondDirtEffectSetup::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.SetNewCamera
// 0x0010 (0x0010 - 0x0000)
struct PP_Effects_C_SetNewCamera final
{
public:
	class UCameraComponent*                       New_Camera;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_SetNewCamera) == 0x000008, "Wrong alignment on PP_Effects_C_SetNewCamera");
static_assert(sizeof(PP_Effects_C_SetNewCamera) == 0x000010, "Wrong size on PP_Effects_C_SetNewCamera");
static_assert(offsetof(PP_Effects_C_SetNewCamera, New_Camera) == 0x000000, "Member 'PP_Effects_C_SetNewCamera::New_Camera' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetNewCamera, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PP_Effects_C_SetNewCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.SetupBleedingVignetteEffect
// 0x0020 (0x0020 - 0x0000)
struct PP_Effects_C_SetupBleedingVignetteEffect final
{
public:
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_SetupBleedingVignetteEffect) == 0x000008, "Wrong alignment on PP_Effects_C_SetupBleedingVignetteEffect");
static_assert(sizeof(PP_Effects_C_SetupBleedingVignetteEffect) == 0x000020, "Wrong size on PP_Effects_C_SetupBleedingVignetteEffect");
static_assert(offsetof(PP_Effects_C_SetupBleedingVignetteEffect, CallFunc_Array_AddUnique_ReturnValue) == 0x000000, "Member 'PP_Effects_C_SetupBleedingVignetteEffect::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetupBleedingVignetteEffect, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PP_Effects_C_SetupBleedingVignetteEffect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetupBleedingVignetteEffect, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PP_Effects_C_SetupBleedingVignetteEffect::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.SetWeightPP
// 0x0058 (0x0058 - 0x0000)
struct PP_Effects_C_SetWeightPP final
{
public:
	class UMaterialInstance*                      Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Weight;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     WeightedBlendable;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_SetFieldsInStruct_Weight_ImplicitCast;      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_SetWeightPP) == 0x000008, "Wrong alignment on PP_Effects_C_SetWeightPP");
static_assert(sizeof(PP_Effects_C_SetWeightPP) == 0x000058, "Wrong size on PP_Effects_C_SetWeightPP");
static_assert(offsetof(PP_Effects_C_SetWeightPP, Material) == 0x000000, "Member 'PP_Effects_C_SetWeightPP::Material' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, Weight) == 0x000008, "Member 'PP_Effects_C_SetWeightPP::Weight' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, Param_Index) == 0x000010, "Member 'PP_Effects_C_SetWeightPP::Param_Index' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, WeightedBlendable) == 0x000018, "Member 'PP_Effects_C_SetWeightPP::WeightedBlendable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, Temp_int_Array_Index_Variable) == 0x000028, "Member 'PP_Effects_C_SetWeightPP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'PP_Effects_C_SetWeightPP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'PP_Effects_C_SetWeightPP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000034, "Member 'PP_Effects_C_SetWeightPP::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'PP_Effects_C_SetWeightPP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, CallFunc_Array_Get_Item) == 0x000040, "Member 'PP_Effects_C_SetWeightPP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'PP_Effects_C_SetWeightPP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_SetWeightPP, K2Node_SetFieldsInStruct_Weight_ImplicitCast) == 0x000054, "Member 'PP_Effects_C_SetWeightPP::K2Node_SetFieldsInStruct_Weight_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.ThirdBloodEffectSetup
// 0x0020 (0x0020 - 0x0000)
struct PP_Effects_C_ThirdBloodEffectSetup final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_ThirdBloodEffectSetup) == 0x000008, "Wrong alignment on PP_Effects_C_ThirdBloodEffectSetup");
static_assert(sizeof(PP_Effects_C_ThirdBloodEffectSetup) == 0x000020, "Wrong size on PP_Effects_C_ThirdBloodEffectSetup");
static_assert(offsetof(PP_Effects_C_ThirdBloodEffectSetup, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PP_Effects_C_ThirdBloodEffectSetup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ThirdBloodEffectSetup, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'PP_Effects_C_ThirdBloodEffectSetup::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_ThirdBloodEffectSetup, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000018, "Member 'PP_Effects_C_ThirdBloodEffectSetup::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function PP_Effects.PP_Effects_C.VignetteBleedingEffect
// 0x0028 (0x0028 - 0x0000)
struct PP_Effects_C_VignetteBleedingEffect final
{
public:
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PP_Effects_C_VignetteBleedingEffect) == 0x000008, "Wrong alignment on PP_Effects_C_VignetteBleedingEffect");
static_assert(sizeof(PP_Effects_C_VignetteBleedingEffect) == 0x000028, "Wrong size on PP_Effects_C_VignetteBleedingEffect");
static_assert(offsetof(PP_Effects_C_VignetteBleedingEffect, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'PP_Effects_C_VignetteBleedingEffect::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_VignetteBleedingEffect, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'PP_Effects_C_VignetteBleedingEffect::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_VignetteBleedingEffect, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'PP_Effects_C_VignetteBleedingEffect::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_VignetteBleedingEffect, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'PP_Effects_C_VignetteBleedingEffect::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PP_Effects_C_VignetteBleedingEffect, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000020, "Member 'PP_Effects_C_VignetteBleedingEffect::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

}

