#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventoryStash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_NPCIdle_structs.hpp"
#include "E_NPCState_structs.hpp"
#include "LootPoint_classes.hpp"
#include "E_ActorType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass InventoryStash.InventoryStash_C
// 0x0020 (0x07D0 - 0x07B0)
#pragma pack(push, 0x1)
class alignas(0x10) AInventoryStash_C : public ALootPoint_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_InventoryStash_C;                   // 0x07A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USGInventoryWorker_C*                   SGInventoryWorker;                                 // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStashInventoryCollector_C*             StashInventoryCollector;                           // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          InventoryFetched;                                  // 0x07C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NPCIdle                                     AnimIdle;                                          // 0x07C1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NPCState                                    AnimState;                                         // 0x07C2(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BuildData__OnlyServer_(const struct FS_LootChanceModifier& LootChanceMod, bool ReMinusBuild);
	void ContainerBoxClosed();
	void ExecuteUbergraph_InventoryStash(int32 EntryPoint);
	void GetReplicatedData__OnlyServer_(class APawn* Player, const struct FS_LootChanceModifier& LootChanceMod, struct FMpContentRep* Data);
	void InMPCMoveItem(int32 ItemUID, int32 ToContainerUID, int32 ToIndex, bool Rotated_, bool IsContainer);
	void MC_AddNewItemToContainer(int32 ToContainerUID, const struct FContainerPickupsInfo& PickupItem, int32 ToSlot);
	void MC_RemoveItem(int32 ContainerUID, int32 ItemUID);
	void MPCRemoveItem(int32 Uid, bool IsContainer_, bool Shop, bool* Removed);
	void OnChangeContent();
	void OnRep_AnimState();
	void OnRep_Idle();
	void OnRep_InventoryFetched();
	void GetActorType(E_ActorType* ActorType);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"InventoryStash_C">();
	}
	static class AInventoryStash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AInventoryStash_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AInventoryStash_C) == 0x000010, "Wrong alignment on AInventoryStash_C");
static_assert(sizeof(AInventoryStash_C) == 0x0007D0, "Wrong size on AInventoryStash_C");
static_assert(offsetof(AInventoryStash_C, UberGraphFrame_InventoryStash_C) == 0x0007A8, "Member 'AInventoryStash_C::UberGraphFrame_InventoryStash_C' has a wrong offset!");
static_assert(offsetof(AInventoryStash_C, SGInventoryWorker) == 0x0007B0, "Member 'AInventoryStash_C::SGInventoryWorker' has a wrong offset!");
static_assert(offsetof(AInventoryStash_C, StashInventoryCollector) == 0x0007B8, "Member 'AInventoryStash_C::StashInventoryCollector' has a wrong offset!");
static_assert(offsetof(AInventoryStash_C, InventoryFetched) == 0x0007C0, "Member 'AInventoryStash_C::InventoryFetched' has a wrong offset!");
static_assert(offsetof(AInventoryStash_C, AnimIdle) == 0x0007C1, "Member 'AInventoryStash_C::AnimIdle' has a wrong offset!");
static_assert(offsetof(AInventoryStash_C, AnimState) == 0x0007C2, "Member 'AInventoryStash_C::AnimState' has a wrong offset!");

}

