#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UniversalMarkerSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass UniversalMarkerSystem.UniversalMarkerSystem_C
// 0x0078 (0x0308 - 0x0290)
class AUniversalMarkerSystem_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_CAAC763D49130C3C15558AB746456EE4; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_CAAC763D49130C3C15558AB746456EE4; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        MarkerStartRadius;                                 // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Focused;                                           // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerInside;                                      // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TimelineDirection;                                 // 0x02CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CB[0x1];                                      // 0x02CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartPoint;                                        // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InteractRadius;                                    // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 MainName;                                          // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SecondaryName;                                     // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsInViewport;                                      // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Image;                                             // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void BndEvt__LootPoint_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__LootPoint_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_UniversalMarkerSystem(int32 EntryPoint);
	void PlayerInsideCheck();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void UserConstructionScript();
	void WidgetVisibility(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UniversalMarkerSystem_C">();
	}
	static class AUniversalMarkerSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUniversalMarkerSystem_C>();
	}
};
static_assert(alignof(AUniversalMarkerSystem_C) == 0x000008, "Wrong alignment on AUniversalMarkerSystem_C");
static_assert(sizeof(AUniversalMarkerSystem_C) == 0x000308, "Wrong size on AUniversalMarkerSystem_C");
static_assert(offsetof(AUniversalMarkerSystem_C, UberGraphFrame) == 0x000290, "Member 'AUniversalMarkerSystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, Widget) == 0x000298, "Member 'AUniversalMarkerSystem_C::Widget' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, Scene) == 0x0002A0, "Member 'AUniversalMarkerSystem_C::Scene' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, Sphere) == 0x0002A8, "Member 'AUniversalMarkerSystem_C::Sphere' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, Timeline_0_NewTrack_0_CAAC763D49130C3C15558AB746456EE4) == 0x0002B0, "Member 'AUniversalMarkerSystem_C::Timeline_0_NewTrack_0_CAAC763D49130C3C15558AB746456EE4' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, Timeline_0__Direction_CAAC763D49130C3C15558AB746456EE4) == 0x0002B4, "Member 'AUniversalMarkerSystem_C::Timeline_0__Direction_CAAC763D49130C3C15558AB746456EE4' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, Timeline_0) == 0x0002B8, "Member 'AUniversalMarkerSystem_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, MarkerStartRadius) == 0x0002C0, "Member 'AUniversalMarkerSystem_C::MarkerStartRadius' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, Focused) == 0x0002C8, "Member 'AUniversalMarkerSystem_C::Focused' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, PlayerInside) == 0x0002C9, "Member 'AUniversalMarkerSystem_C::PlayerInside' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, TimelineDirection) == 0x0002CA, "Member 'AUniversalMarkerSystem_C::TimelineDirection' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, StartPoint) == 0x0002CC, "Member 'AUniversalMarkerSystem_C::StartPoint' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, InteractRadius) == 0x0002D0, "Member 'AUniversalMarkerSystem_C::InteractRadius' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, MainName) == 0x0002D8, "Member 'AUniversalMarkerSystem_C::MainName' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, SecondaryName) == 0x0002E8, "Member 'AUniversalMarkerSystem_C::SecondaryName' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, IsInViewport) == 0x0002F8, "Member 'AUniversalMarkerSystem_C::IsInViewport' has a wrong offset!");
static_assert(offsetof(AUniversalMarkerSystem_C, Image) == 0x000300, "Member 'AUniversalMarkerSystem_C::Image' has a wrong offset!");

}

