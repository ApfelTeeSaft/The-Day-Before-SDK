#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuestComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_QuestComponent.BP_QuestComponent_C
// 0x0078 (0x0118 - 0x00A0)
class UBP_QuestComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<int32, class UBP_ObjCollection_C*>       QuestIndex_RootObjectiveCollections;               // 0x00A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnActivated;                                       // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UDataTable*                             Quests;                                            // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              SurvPC;                                            // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void ActivateQuest(int32 IndexInTable);
	void CompleteObjective(int32 QuestIndex, int32 ObjectiveIndex, double Delay);
	void ConstructLoadedQuests(const TMap<int32, struct FQuestSaveStructure>& QuestInfo, bool* Constructed);
	void ConstructRootObjectiveCollection(const class FText& ObjectiveName, bool OrderRequired, const class FText& ObjectiveDescription, class UBP_ObjCollection_C** RootObjectiveCollection);
	void ExecuteUbergraph_BP_QuestComponent(int32 EntryPoint);
	void Get_Objective(int32 QuestIndex, int32 ObjectiveIndex, class UBP_Objective_C** Output);
	void GetAllQuests(TArray<class UBP_ObjCollection_C*>* Values);
	void InitializeQuestWidget();
	void IsObjectiveActive(int32 QuestIndex, int32 ObjectiveIndex, bool* Param_IsActive, class UBP_Objective_C** Objective);
	void IsObjectiveCompleted(int32 QuestIndex, int32 ObjectiveIndex, bool* IsComplete);
	void IsQuestActive(int32 QuestIndex, bool* Param_IsActive);
	void MakeQuestsInfo(TMap<int32, struct FQuestSaveStructure>* QuestsInfo);
	void OnActivated__DelegateSignature(class UBP_Objective_C* RootObjectiveCollection);
	void PopulateObjectives(class UBP_ObjCollection_C* RootObjCollection, TArray<struct FObjective>& Objectives);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void TestSave();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_QuestComponent_C">();
	}
	static class UBP_QuestComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_QuestComponent_C>();
	}
};
static_assert(alignof(UBP_QuestComponent_C) == 0x000008, "Wrong alignment on UBP_QuestComponent_C");
static_assert(sizeof(UBP_QuestComponent_C) == 0x000118, "Wrong size on UBP_QuestComponent_C");
static_assert(offsetof(UBP_QuestComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_QuestComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_QuestComponent_C, QuestIndex_RootObjectiveCollections) == 0x0000A8, "Member 'UBP_QuestComponent_C::QuestIndex_RootObjectiveCollections' has a wrong offset!");
static_assert(offsetof(UBP_QuestComponent_C, OnActivated) == 0x0000F8, "Member 'UBP_QuestComponent_C::OnActivated' has a wrong offset!");
static_assert(offsetof(UBP_QuestComponent_C, Quests) == 0x000108, "Member 'UBP_QuestComponent_C::Quests' has a wrong offset!");
static_assert(offsetof(UBP_QuestComponent_C, SurvPC) == 0x000110, "Member 'UBP_QuestComponent_C::SurvPC' has a wrong offset!");

}

