#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ChooseRegion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ChooseRegion.W_ChooseRegion_C
// 0x0140 (0x03C0 - 0x0280)
class UW_ChooseRegion_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ArrowL;                                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ArrowR;                                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomBlack;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomLine;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           BottomPanel2;                                      // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ChooseRegionButton_C*                C_ENTER_Button;                                    // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ChooseRegionButton_C*                C_ESC_Button;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ChooseText;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Fade_Edge;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_40;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         LootLevelBox;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Region_1;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Region_2;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Region_3;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RegionName;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLine;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_53;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_LoadingIndicator_C*                  W_LoadingIndicator;                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RegionEntry_C*                       W_RegionEntry1;                                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RegionEntry_C*                       W_RegionEntry2;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RegionEntry_C*                       W_RegionEntry3;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         RegionIndex;                                       // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanChangeRegion;                                   // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoTransition;                                      // 0x0335(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_336[0x2];                                      // 0x0336(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Duration;                                          // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spent;                                             // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 PrevRegion;                                        // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpened;                                          // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BlurStrength;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoBlur;                                            // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 ImageToAppear;                                     // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        DisappearWidgets;                                  // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsAppear;                                          // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_RegionIndicator_C*                   PrevSelectedIndicator;                             // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ScaleDuration;                                     // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScaleSpent;                                        // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoScale;                                           // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CurRegion;                                         // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_RegionEntry_C*                       PrevSelectedEntry;                                 // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChoosen;                                         // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BackButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__C_ENTER_Button_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__C_ESC_Button_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__SelectButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void ChooseRegion();
	void Construct();
	void ExecuteUbergraph_W_ChooseRegion(int32 EntryPoint);
	void GetRegionEntryByID(int32 ID, class UW_RegionEntry_C** Entry);
	void Hide();
	void OnChooseRegion(class FName Region);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnNetworkError();
	void OnRegionChange2(class UW_RegionEntry_C* Region);
	void Reset();
	void SetRegion(class UW_RegionEntry_C* Entry);
	void SetText(const class FString& Param_RegionName);
	void Show();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ChooseRegion_C">();
	}
	static class UW_ChooseRegion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ChooseRegion_C>();
	}
};
static_assert(alignof(UW_ChooseRegion_C) == 0x000008, "Wrong alignment on UW_ChooseRegion_C");
static_assert(sizeof(UW_ChooseRegion_C) == 0x0003C0, "Wrong size on UW_ChooseRegion_C");
static_assert(offsetof(UW_ChooseRegion_C, UberGraphFrame) == 0x000280, "Member 'UW_ChooseRegion_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, ArrowL) == 0x000288, "Member 'UW_ChooseRegion_C::ArrowL' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, ArrowR) == 0x000290, "Member 'UW_ChooseRegion_C::ArrowR' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, BottomBlack) == 0x000298, "Member 'UW_ChooseRegion_C::BottomBlack' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, BottomLine) == 0x0002A0, "Member 'UW_ChooseRegion_C::BottomLine' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, BottomPanel2) == 0x0002A8, "Member 'UW_ChooseRegion_C::BottomPanel2' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, C_ENTER_Button) == 0x0002B0, "Member 'UW_ChooseRegion_C::C_ENTER_Button' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, C_ESC_Button) == 0x0002B8, "Member 'UW_ChooseRegion_C::C_ESC_Button' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, ChooseText) == 0x0002C0, "Member 'UW_ChooseRegion_C::ChooseText' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, Fade_Edge) == 0x0002C8, "Member 'UW_ChooseRegion_C::Fade_Edge' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, Image_40) == 0x0002D0, "Member 'UW_ChooseRegion_C::Image_40' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, LootLevelBox) == 0x0002D8, "Member 'UW_ChooseRegion_C::LootLevelBox' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, Region_1) == 0x0002E0, "Member 'UW_ChooseRegion_C::Region_1' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, Region_2) == 0x0002E8, "Member 'UW_ChooseRegion_C::Region_2' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, Region_3) == 0x0002F0, "Member 'UW_ChooseRegion_C::Region_3' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, RegionName) == 0x0002F8, "Member 'UW_ChooseRegion_C::RegionName' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, TopLine) == 0x000300, "Member 'UW_ChooseRegion_C::TopLine' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, VerticalBox_53) == 0x000308, "Member 'UW_ChooseRegion_C::VerticalBox_53' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, W_LoadingIndicator) == 0x000310, "Member 'UW_ChooseRegion_C::W_LoadingIndicator' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, W_RegionEntry1) == 0x000318, "Member 'UW_ChooseRegion_C::W_RegionEntry1' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, W_RegionEntry2) == 0x000320, "Member 'UW_ChooseRegion_C::W_RegionEntry2' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, W_RegionEntry3) == 0x000328, "Member 'UW_ChooseRegion_C::W_RegionEntry3' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, RegionIndex) == 0x000330, "Member 'UW_ChooseRegion_C::RegionIndex' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, CanChangeRegion) == 0x000334, "Member 'UW_ChooseRegion_C::CanChangeRegion' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, DoTransition) == 0x000335, "Member 'UW_ChooseRegion_C::DoTransition' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, Duration) == 0x000338, "Member 'UW_ChooseRegion_C::Duration' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, Spent) == 0x000340, "Member 'UW_ChooseRegion_C::Spent' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, PrevRegion) == 0x000348, "Member 'UW_ChooseRegion_C::PrevRegion' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, IsOpened) == 0x000350, "Member 'UW_ChooseRegion_C::IsOpened' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, BlurStrength) == 0x000358, "Member 'UW_ChooseRegion_C::BlurStrength' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, DoBlur) == 0x000360, "Member 'UW_ChooseRegion_C::DoBlur' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, ImageToAppear) == 0x000368, "Member 'UW_ChooseRegion_C::ImageToAppear' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, DisappearWidgets) == 0x000370, "Member 'UW_ChooseRegion_C::DisappearWidgets' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, IsAppear) == 0x000380, "Member 'UW_ChooseRegion_C::IsAppear' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, PrevSelectedIndicator) == 0x000388, "Member 'UW_ChooseRegion_C::PrevSelectedIndicator' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, ScaleDuration) == 0x000390, "Member 'UW_ChooseRegion_C::ScaleDuration' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, ScaleSpent) == 0x000398, "Member 'UW_ChooseRegion_C::ScaleSpent' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, DoScale) == 0x0003A0, "Member 'UW_ChooseRegion_C::DoScale' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, CurRegion) == 0x0003A8, "Member 'UW_ChooseRegion_C::CurRegion' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, PrevSelectedEntry) == 0x0003B0, "Member 'UW_ChooseRegion_C::PrevSelectedEntry' has a wrong offset!");
static_assert(offsetof(UW_ChooseRegion_C, IsChoosen) == 0x0003B8, "Member 'UW_ChooseRegion_C::IsChoosen' has a wrong offset!");

}

