#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIW_Damage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIW_Damage.UIW_Damage_C
// 0x0088 (0x0308 - 0x0280)
class UUIW_Damage_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Damage3Animation_Tutorial;                         // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Damage2Animation_Tutorial;                         // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Damage1Animation_Tutorial;                         // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PingPong;                                          // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Damage3Animation;                                  // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Damage2Animation;                                  // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Damage1Animation;                                  // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 DamageImage1;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DamageImage2;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DamageImage3;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         LastUsedRandom;                                    // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GeneratedRandom;                                   // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastCriticalValue;                                 // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBleed;                                           // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BleedCriticalValue;                                // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Image1Active;                                      // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Image2Active;                                      // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Image3Active;                                      // 0x02FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pause;                                             // 0x02FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     BleenAnimation;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Animation1End();
	void Animation2End();
	void Animation3End();
	void BleedRemoved();
	void ExecuteUbergraph_UIW_Damage(int32 EntryPoint);
	void GetBleed();
	void GetDamageWidget();
	void HealthChange(double CriticalValue);
	void Initialize(class ASurvivalPlayer_C* Player);
	void RefreshBleedingEffect();
	void SequenceEvent__ENTRYPOINTUIW_Damage();
	void SequenceEvent__ENTRYPOINTUIW_Damage_0();
	void SequenceEvent__ENTRYPOINTUIW_Damage_1();
	void SetBleedAnim();
	void StopBleedAnim();
	void StopBleedingEffect();
	void TutorialDamage();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIW_Damage_C">();
	}
	static class UUIW_Damage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIW_Damage_C>();
	}
};
static_assert(alignof(UUIW_Damage_C) == 0x000008, "Wrong alignment on UUIW_Damage_C");
static_assert(sizeof(UUIW_Damage_C) == 0x000308, "Wrong size on UUIW_Damage_C");
static_assert(offsetof(UUIW_Damage_C, UberGraphFrame) == 0x000280, "Member 'UUIW_Damage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, Damage3Animation_Tutorial) == 0x000288, "Member 'UUIW_Damage_C::Damage3Animation_Tutorial' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, Damage2Animation_Tutorial) == 0x000290, "Member 'UUIW_Damage_C::Damage2Animation_Tutorial' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, Damage1Animation_Tutorial) == 0x000298, "Member 'UUIW_Damage_C::Damage1Animation_Tutorial' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, PingPong) == 0x0002A0, "Member 'UUIW_Damage_C::PingPong' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, Damage3Animation) == 0x0002A8, "Member 'UUIW_Damage_C::Damage3Animation' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, Damage2Animation) == 0x0002B0, "Member 'UUIW_Damage_C::Damage2Animation' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, Damage1Animation) == 0x0002B8, "Member 'UUIW_Damage_C::Damage1Animation' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, DamageImage1) == 0x0002C0, "Member 'UUIW_Damage_C::DamageImage1' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, DamageImage2) == 0x0002C8, "Member 'UUIW_Damage_C::DamageImage2' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, DamageImage3) == 0x0002D0, "Member 'UUIW_Damage_C::DamageImage3' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, LastUsedRandom) == 0x0002D8, "Member 'UUIW_Damage_C::LastUsedRandom' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, GeneratedRandom) == 0x0002DC, "Member 'UUIW_Damage_C::GeneratedRandom' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, LastCriticalValue) == 0x0002E0, "Member 'UUIW_Damage_C::LastCriticalValue' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, IsBleed) == 0x0002E8, "Member 'UUIW_Damage_C::IsBleed' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, BleedCriticalValue) == 0x0002F0, "Member 'UUIW_Damage_C::BleedCriticalValue' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, Image1Active) == 0x0002F8, "Member 'UUIW_Damage_C::Image1Active' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, Image2Active) == 0x0002F9, "Member 'UUIW_Damage_C::Image2Active' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, Image3Active) == 0x0002FA, "Member 'UUIW_Damage_C::Image3Active' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, Pause) == 0x0002FB, "Member 'UUIW_Damage_C::Pause' has a wrong offset!");
static_assert(offsetof(UUIW_Damage_C, BleenAnimation) == 0x000300, "Member 'UUIW_Damage_C::BleenAnimation' has a wrong offset!");

}

