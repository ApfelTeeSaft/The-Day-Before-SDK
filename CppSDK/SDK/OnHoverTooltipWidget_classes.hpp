#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnHoverTooltipWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "JSItemType_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass OnHoverTooltipWidget.OnHoverTooltipWidget_C
// 0x0130 (0x03B0 - 0x0280)
class UOnHoverTooltipWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Background;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_44;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DownBlur;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1638;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2135;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ItemIcon;                                    // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ImageSizeBox;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMultiLineEditableTextBox*              MultiLineEditableTextBox_Description;              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_46;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBox_Damage;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBox_Name;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               UpperBlur;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SlotName;                                          // 0x02E8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   SlotDescription;                                   // 0x0300(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	double                                        Price;                                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Weight;                                            // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         DefaultSize;                                       // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         DefaultFont;                                       // 0x0330(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           SpriteIcon;                                        // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        SlotSize;                                          // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Durability;                                        // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJSItemType                                   LootType;                                          // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_OnHoverTooltipWidget(int32 EntryPoint);
	void SetSizeOnHoverSlot(const struct FVector2D& IconSize, const struct FVector2D& WidgetSize, double IconHeight);
	void Update();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OnHoverTooltipWidget_C">();
	}
	static class UOnHoverTooltipWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnHoverTooltipWidget_C>();
	}
};
static_assert(alignof(UOnHoverTooltipWidget_C) == 0x000008, "Wrong alignment on UOnHoverTooltipWidget_C");
static_assert(sizeof(UOnHoverTooltipWidget_C) == 0x0003B0, "Wrong size on UOnHoverTooltipWidget_C");
static_assert(offsetof(UOnHoverTooltipWidget_C, UberGraphFrame) == 0x000280, "Member 'UOnHoverTooltipWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, Background) == 0x000288, "Member 'UOnHoverTooltipWidget_C::Background' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, CanvasPanel_44) == 0x000290, "Member 'UOnHoverTooltipWidget_C::CanvasPanel_44' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, DownBlur) == 0x000298, "Member 'UOnHoverTooltipWidget_C::DownBlur' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, Image_1638) == 0x0002A0, "Member 'UOnHoverTooltipWidget_C::Image_1638' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, Image_2135) == 0x0002A8, "Member 'UOnHoverTooltipWidget_C::Image_2135' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, Image_ItemIcon) == 0x0002B0, "Member 'UOnHoverTooltipWidget_C::Image_ItemIcon' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, ImageSizeBox) == 0x0002B8, "Member 'UOnHoverTooltipWidget_C::ImageSizeBox' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, MultiLineEditableTextBox_Description) == 0x0002C0, "Member 'UOnHoverTooltipWidget_C::MultiLineEditableTextBox_Description' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, SafeZone_46) == 0x0002C8, "Member 'UOnHoverTooltipWidget_C::SafeZone_46' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, TextBox_Damage) == 0x0002D0, "Member 'UOnHoverTooltipWidget_C::TextBox_Damage' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, TextBox_Name) == 0x0002D8, "Member 'UOnHoverTooltipWidget_C::TextBox_Name' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, UpperBlur) == 0x0002E0, "Member 'UOnHoverTooltipWidget_C::UpperBlur' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, SlotName) == 0x0002E8, "Member 'UOnHoverTooltipWidget_C::SlotName' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, SlotDescription) == 0x000300, "Member 'UOnHoverTooltipWidget_C::SlotDescription' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, Price) == 0x000318, "Member 'UOnHoverTooltipWidget_C::Price' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, Weight) == 0x000320, "Member 'UOnHoverTooltipWidget_C::Weight' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, Count) == 0x000328, "Member 'UOnHoverTooltipWidget_C::Count' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, DefaultSize) == 0x00032C, "Member 'UOnHoverTooltipWidget_C::DefaultSize' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, DefaultFont) == 0x000330, "Member 'UOnHoverTooltipWidget_C::DefaultFont' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, ItemUID) == 0x000388, "Member 'UOnHoverTooltipWidget_C::ItemUID' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, SpriteIcon) == 0x000390, "Member 'UOnHoverTooltipWidget_C::SpriteIcon' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, SlotSize) == 0x000398, "Member 'UOnHoverTooltipWidget_C::SlotSize' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, Durability) == 0x0003A0, "Member 'UOnHoverTooltipWidget_C::Durability' has a wrong offset!");
static_assert(offsetof(UOnHoverTooltipWidget_C, LootType) == 0x0003A8, "Member 'UOnHoverTooltipWidget_C::LootType' has a wrong offset!");

}

