#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CampTimer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_CampTimer.W_CampTimer_C.ExecuteUbergraph_W_CampTimer
// 0x0090 (0x0090 - 0x0000)
struct W_CampTimer_C_ExecuteUbergraph_W_CampTimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Duration;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Text;                           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x003C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer) == 0x000008, "Wrong alignment on W_CampTimer_C_ExecuteUbergraph_W_CampTimer");
static_assert(sizeof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer) == 0x000090, "Wrong size on W_CampTimer_C_ExecuteUbergraph_W_CampTimer");
static_assert(offsetof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer, EntryPoint) == 0x000000, "Member 'W_CampTimer_C_ExecuteUbergraph_W_CampTimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer, K2Node_CustomEvent_Duration) == 0x000008, "Member 'W_CampTimer_C_ExecuteUbergraph_W_CampTimer::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer, K2Node_CustomEvent_Text) == 0x000010, "Member 'W_CampTimer_C_ExecuteUbergraph_W_CampTimer::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'W_CampTimer_C_ExecuteUbergraph_W_CampTimer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'W_CampTimer_C_ExecuteUbergraph_W_CampTimer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer, K2Node_Event_MyGeometry) == 0x00003C, "Member 'W_CampTimer_C_ExecuteUbergraph_W_CampTimer::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer, K2Node_Event_InDeltaTime) == 0x000074, "Member 'W_CampTimer_C_ExecuteUbergraph_W_CampTimer::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'W_CampTimer_C_ExecuteUbergraph_W_CampTimer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'W_CampTimer_C_ExecuteUbergraph_W_CampTimer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_ExecuteUbergraph_W_CampTimer, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000088, "Member 'W_CampTimer_C_ExecuteUbergraph_W_CampTimer::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function W_CampTimer.W_CampTimer_C.ShowTimer
// 0x0018 (0x0018 - 0x0000)
struct W_CampTimer_C_ShowTimer final
{
public:
	double                                        Param_Duration;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Param_Text;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CampTimer_C_ShowTimer) == 0x000008, "Wrong alignment on W_CampTimer_C_ShowTimer");
static_assert(sizeof(W_CampTimer_C_ShowTimer) == 0x000018, "Wrong size on W_CampTimer_C_ShowTimer");
static_assert(offsetof(W_CampTimer_C_ShowTimer, Param_Duration) == 0x000000, "Member 'W_CampTimer_C_ShowTimer::Param_Duration' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_ShowTimer, Param_Text) == 0x000008, "Member 'W_CampTimer_C_ShowTimer::Param_Text' has a wrong offset!");

// Function W_CampTimer.W_CampTimer_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_CampTimer_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CampTimer_C_Tick) == 0x000004, "Wrong alignment on W_CampTimer_C_Tick");
static_assert(sizeof(W_CampTimer_C_Tick) == 0x00003C, "Wrong size on W_CampTimer_C_Tick");
static_assert(offsetof(W_CampTimer_C_Tick, MyGeometry) == 0x000000, "Member 'W_CampTimer_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CampTimer_C_Tick, InDeltaTime) == 0x000038, "Member 'W_CampTimer_C_Tick::InDeltaTime' has a wrong offset!");

}

