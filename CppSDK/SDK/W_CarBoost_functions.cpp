#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CarBoost

#include "Basic.hpp"

#include "W_CarBoost_classes.hpp"
#include "W_CarBoost_parameters.hpp"


namespace SDK
{

// Function W_CarBoost.W_CarBoost_C.ExecuteUbergraph_W_CarBoost
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CarBoost_C::ExecuteUbergraph_W_CarBoost(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CarBoost_C", "ExecuteUbergraph_W_CarBoost");

	Params::W_CarBoost_C_ExecuteUbergraph_W_CarBoost Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CarBoost.W_CarBoost_C.PlayBoosting
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CarBoost_C::PlayBoosting(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CarBoost_C", "PlayBoosting");

	Params::W_CarBoost_C_PlayBoosting Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CarBoost.W_CarBoost_C.PlayCooldown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CarBoost_C::PlayCooldown(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CarBoost_C", "PlayCooldown");

	Params::W_CarBoost_C_PlayCooldown Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}

}

