#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemSizePreview

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_ItemSizePreview.WBP_ItemSizePreview_C.ExecuteUbergraph_WBP_ItemSizePreview
// 0x0008 (0x0008 - 0x0000)
struct WBP_ItemSizePreview_C_ExecuteUbergraph_WBP_ItemSizePreview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemSizePreview_C_ExecuteUbergraph_WBP_ItemSizePreview) == 0x000004, "Wrong alignment on WBP_ItemSizePreview_C_ExecuteUbergraph_WBP_ItemSizePreview");
static_assert(sizeof(WBP_ItemSizePreview_C_ExecuteUbergraph_WBP_ItemSizePreview) == 0x000008, "Wrong size on WBP_ItemSizePreview_C_ExecuteUbergraph_WBP_ItemSizePreview");
static_assert(offsetof(WBP_ItemSizePreview_C_ExecuteUbergraph_WBP_ItemSizePreview, EntryPoint) == 0x000000, "Member 'WBP_ItemSizePreview_C_ExecuteUbergraph_WBP_ItemSizePreview::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_ExecuteUbergraph_WBP_ItemSizePreview, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_ItemSizePreview_C_ExecuteUbergraph_WBP_ItemSizePreview::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_ItemSizePreview.WBP_ItemSizePreview_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_ItemSizePreview_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemSizePreview_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_ItemSizePreview_C_PreConstruct");
static_assert(sizeof(WBP_ItemSizePreview_C_PreConstruct) == 0x000001, "Wrong size on WBP_ItemSizePreview_C_PreConstruct");
static_assert(offsetof(WBP_ItemSizePreview_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_ItemSizePreview_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_ItemSizePreview.WBP_ItemSizePreview_C.SetDimention
// 0x0140 (0x0140 - 0x0000)
struct WBP_ItemSizePreview_C_SetDimention final
{
public:
	struct FVector2D                              Dimention;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0020(0x00D0)()
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ItemSizePreview_C_SetDimention) == 0x000010, "Wrong alignment on WBP_ItemSizePreview_C_SetDimention");
static_assert(sizeof(WBP_ItemSizePreview_C_SetDimention) == 0x000140, "Wrong size on WBP_ItemSizePreview_C_SetDimention");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, Dimention) == 0x000000, "Member 'WBP_ItemSizePreview_C_SetDimention::Dimention' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, Temp_int_Variable) == 0x000010, "Member 'WBP_ItemSizePreview_C_SetDimention::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000020, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_SpawnObject_ReturnValue) == 0x0000F0, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_BreakVector2D_X) == 0x0000F8, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_BreakVector2D_Y) == 0x000100, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000108, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000110, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_FTrunc_ReturnValue) == 0x000118, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_FTrunc_ReturnValue_1) == 0x00011C, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000120, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, Temp_int_Variable_1) == 0x000124, "Member 'WBP_ItemSizePreview_C_SetDimention::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000128, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000130, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ItemSizePreview_C_SetDimention, CallFunc_Add_IntInt_ReturnValue_1) == 0x000134, "Member 'WBP_ItemSizePreview_C_SetDimention::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

