#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameSettings

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GameSettings.GameSettings_C
// 0x0070 (0x0098 - 0x0028)
class UGameSettings_C final : public USaveGame
{
public:
	bool                                          HoldToSprint;                                      // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RayTrace;                                          // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RayTraceShadows;                                   // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MethodIllumination;                                // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MethodReflection;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FSR2;                                              // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DLSS;                                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DLSSSharpness;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DLSSFrameGeneration;                               // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReflexMode;                                        // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UpscalingMethod;                                   // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         InventoryCache;                                    // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 EditorName;                                        // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         ShadowQuality;                                     // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CompiledShadersVersion;                            // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         NIS;                                               // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GraphicsQualityPresets;                            // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameSettings_C">();
	}
	static class UGameSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameSettings_C>();
	}
};
static_assert(alignof(UGameSettings_C) == 0x000008, "Wrong alignment on UGameSettings_C");
static_assert(sizeof(UGameSettings_C) == 0x000098, "Wrong size on UGameSettings_C");
static_assert(offsetof(UGameSettings_C, HoldToSprint) == 0x000028, "Member 'UGameSettings_C::HoldToSprint' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, RayTrace) == 0x000029, "Member 'UGameSettings_C::RayTrace' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, RayTraceShadows) == 0x00002A, "Member 'UGameSettings_C::RayTraceShadows' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, MethodIllumination) == 0x00002C, "Member 'UGameSettings_C::MethodIllumination' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, MethodReflection) == 0x000030, "Member 'UGameSettings_C::MethodReflection' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, FSR2) == 0x000034, "Member 'UGameSettings_C::FSR2' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, DLSS) == 0x000038, "Member 'UGameSettings_C::DLSS' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, DLSSSharpness) == 0x000040, "Member 'UGameSettings_C::DLSSSharpness' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, DLSSFrameGeneration) == 0x000048, "Member 'UGameSettings_C::DLSSFrameGeneration' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, ReflexMode) == 0x00004C, "Member 'UGameSettings_C::ReflexMode' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, UpscalingMethod) == 0x000050, "Member 'UGameSettings_C::UpscalingMethod' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, InventoryCache) == 0x000058, "Member 'UGameSettings_C::InventoryCache' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, EditorName) == 0x000068, "Member 'UGameSettings_C::EditorName' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, ShadowQuality) == 0x000078, "Member 'UGameSettings_C::ShadowQuality' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, CompiledShadersVersion) == 0x000080, "Member 'UGameSettings_C::CompiledShadersVersion' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, NIS) == 0x000090, "Member 'UGameSettings_C::NIS' has a wrong offset!");
static_assert(offsetof(UGameSettings_C, GraphicsQualityPresets) == 0x000094, "Member 'UGameSettings_C::GraphicsQualityPresets' has a wrong offset!");

}

