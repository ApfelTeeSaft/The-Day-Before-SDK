#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPDA_BaseUpgrade

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPDA_BaseUpgrade.BPDA_BaseUpgrade_C
// 0x0028 (0x0058 - 0x0030)
class UBPDA_BaseUpgrade_C : public UPrimaryDataAsset
{
public:
	int32                                         Cost;                                              // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Label;                                             // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                          IsLastLevel;                                       // 0x0050(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level;                                             // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetUpgrade(class ABP_RB_Vehicle_C* Vehicle);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPDA_BaseUpgrade_C">();
	}
	static class UBPDA_BaseUpgrade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPDA_BaseUpgrade_C>();
	}
};
static_assert(alignof(UBPDA_BaseUpgrade_C) == 0x000008, "Wrong alignment on UBPDA_BaseUpgrade_C");
static_assert(sizeof(UBPDA_BaseUpgrade_C) == 0x000058, "Wrong size on UBPDA_BaseUpgrade_C");
static_assert(offsetof(UBPDA_BaseUpgrade_C, Cost) == 0x000030, "Member 'UBPDA_BaseUpgrade_C::Cost' has a wrong offset!");
static_assert(offsetof(UBPDA_BaseUpgrade_C, Label) == 0x000038, "Member 'UBPDA_BaseUpgrade_C::Label' has a wrong offset!");
static_assert(offsetof(UBPDA_BaseUpgrade_C, IsLastLevel) == 0x000050, "Member 'UBPDA_BaseUpgrade_C::IsLastLevel' has a wrong offset!");
static_assert(offsetof(UBPDA_BaseUpgrade_C, Level) == 0x000054, "Member 'UBPDA_BaseUpgrade_C::Level' has a wrong offset!");

}

