#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AttachmentsSelector

#include "Basic.hpp"

#include "E_TypesOfModes_structs.hpp"
#include "AttachmentInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "UMG_classes.hpp"
#include "E_DependenciesRule_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AttachmentsSelector.WBP_AttachmentsSelector_C
// 0x03A8 (0x0628 - 0x0280)
class UWBP_AttachmentsSelector_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               SizeBox_Content;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_1;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_2;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_3;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_4;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_5;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_6;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_7;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_8;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_9;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_10;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_11;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_12;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_13;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_14;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_15;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Attachments;                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scroller_C*                        WBP_Scroller;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TitleText;                                         // 0x0328(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnPressedBack;                                     // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleasedBack;                                    // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FFItemInfo                             Item;                                              // 0x0360(0x0220)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	struct FAttachmentInfo                        DafaultAttachment;                                 // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAttachmentInfo>                DefaultSpecialAttachments;                         // 0x0590(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FAttachmentInfo>                SpecialAttachments;                                // 0x05A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_AttachmentCell_C*                  ActiveCell;                                        // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            OwnerWidget;                                       // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_AttachmentCell_C*>          Slots;                                             // 0x05C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          DoubleClicked;                                     // 0x05D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_TypesOfModes                                ModeType;                                          // 0x05D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VisibilityWidget;                                  // 0x05D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lock;                                              // 0x05D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ToggleWidgetTimerHandle;                           // 0x05D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        LockDuration;                                      // 0x05E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFMODEvent*                             FMODAttachEvent;                                   // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             FMODDetachEvent;                                   // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             FMODHoveredCellEvent;                              // 0x05F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Default;                                           // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x3];                                      // 0x0601(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttachmentPerRow;                                  // 0x0604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangingProcessModActive;                        // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnNotEnoughSpacceToRemoveAttachment;               // 0x0610(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bAtachmentSelectorReloading;                       // 0x0620(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddAttachment(const struct FAttachmentInfo& Attachment, struct FFItemInfo* NewItem);
	void AddCellToGrid(const struct FFItemInfo& Param_Item, bool Basic, bool ReMinusInit, class UWBP_AttachmentCell_C** NewCellWidget);
	void AddEmptySlots();
	void AddItem(const struct FFItemInfo& Param_Item, class UWBP_AttachmentCell_C** NewCellWidget);
	void AutoSetActiveCell();
	void Clear();
	void ExecuteUbergraph_WBP_AttachmentsSelector(int32 EntryPoint);
	void GetAttachment(E_TypesOfModes Param_ModeType, int32* Param_Index, struct FS_Attachment* Attachment);
	void GetCellButtonByIndex(int32 Param_Index, bool* Result, class UWBP_AttachmentCell_C** ButtonCell);
	void IsValidAttachment(const struct FAttachmentInfo& Attachment, bool* Result);
	void ManageInventory(const struct FFItemInfo& OldItem, const struct FFItemInfo& NewItem);
	void OnNotEnoughSpacceToRemoveAttachment__DelegateSignature();
	void OnPlaySound(class UFMODEvent* FMODEvent);
	void OnPressedBack__DelegateSignature();
	void OnReleasedBack__DelegateSignature();
	void OnSelectAttachmentOnceInTime(int32 Param_Index, class UUserWidget* Widget);
	void OnSelectedAttachment(int32 Param_Index, class UUserWidget* UserWidget);
	void OnToggleLockWidget();
	void OnUnSelectedAttachment(int32 Param_Index, class UUserWidget* UserWidget);
	void PreConstruct(bool IsDesignTime);
	void RemoveAttachment(const struct FAttachmentInfo& DefaultAttachment, struct FFItemInfo* NewItem);
	void RemoveDependencyAttachmets(bool Param_Default);
	void SetDafaultAttachment(const struct FAttachmentInfo& NewAttachment, bool WithInit);
	void SetDefaultSpecialAttachments(TArray<struct FAttachmentInfo>& Attachments);
	void SetFMODAttachEvent(class UFMODEvent* NewFMODEvent);
	void SetFMODDetachEvent(class UFMODEvent* NewFMODEvent);
	void SetItemReference(const struct FFItemInfo& Param_Item);
	void SetModeType(E_TypesOfModes NewType);
	void SetOwnerWidgetReference(class UUserWidget* ParentWidget);
	void SetSpecialAttachments(TArray<struct FAttachmentInfo>& Attachments);
	void SetTitle(const class FText& NewText, bool Reset);
	void SetVisibilityWidget(bool NewState);
	void StopCellAwaitAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AttachmentsSelector_C">();
	}
	static class UWBP_AttachmentsSelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AttachmentsSelector_C>();
	}
};
static_assert(alignof(UWBP_AttachmentsSelector_C) == 0x000008, "Wrong alignment on UWBP_AttachmentsSelector_C");
static_assert(sizeof(UWBP_AttachmentsSelector_C) == 0x000628, "Wrong size on UWBP_AttachmentsSelector_C");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UberGraphFrame) == 0x000280, "Member 'UWBP_AttachmentsSelector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, SizeBox_Content) == 0x000288, "Member 'UWBP_AttachmentsSelector_C::SizeBox_Content' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText) == 0x000290, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_1) == 0x000298, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_1' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_2) == 0x0002A0, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_2' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_3) == 0x0002A8, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_3' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_4) == 0x0002B0, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_4' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_5) == 0x0002B8, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_5' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_6) == 0x0002C0, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_6' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_7) == 0x0002C8, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_7' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_8) == 0x0002D0, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_8' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_9) == 0x0002D8, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_9' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_10) == 0x0002E0, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_10' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_11) == 0x0002E8, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_11' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_12) == 0x0002F0, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_12' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_13) == 0x0002F8, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_13' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_14) == 0x000300, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_14' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, UMG_LabelText_15) == 0x000308, "Member 'UWBP_AttachmentsSelector_C::UMG_LabelText_15' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, VerticalBox_Attachments) == 0x000310, "Member 'UWBP_AttachmentsSelector_C::VerticalBox_Attachments' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, WBP_Scroller) == 0x000318, "Member 'UWBP_AttachmentsSelector_C::WBP_Scroller' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, WidgetSwitcher_0) == 0x000320, "Member 'UWBP_AttachmentsSelector_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, TitleText) == 0x000328, "Member 'UWBP_AttachmentsSelector_C::TitleText' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, OnPressedBack) == 0x000340, "Member 'UWBP_AttachmentsSelector_C::OnPressedBack' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, OnReleasedBack) == 0x000350, "Member 'UWBP_AttachmentsSelector_C::OnReleasedBack' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, Item) == 0x000360, "Member 'UWBP_AttachmentsSelector_C::Item' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, DafaultAttachment) == 0x000580, "Member 'UWBP_AttachmentsSelector_C::DafaultAttachment' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, DefaultSpecialAttachments) == 0x000590, "Member 'UWBP_AttachmentsSelector_C::DefaultSpecialAttachments' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, SpecialAttachments) == 0x0005A0, "Member 'UWBP_AttachmentsSelector_C::SpecialAttachments' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, ActiveCell) == 0x0005B0, "Member 'UWBP_AttachmentsSelector_C::ActiveCell' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, OwnerWidget) == 0x0005B8, "Member 'UWBP_AttachmentsSelector_C::OwnerWidget' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, Slots) == 0x0005C0, "Member 'UWBP_AttachmentsSelector_C::Slots' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, DoubleClicked) == 0x0005D0, "Member 'UWBP_AttachmentsSelector_C::DoubleClicked' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, ModeType) == 0x0005D1, "Member 'UWBP_AttachmentsSelector_C::ModeType' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, VisibilityWidget) == 0x0005D2, "Member 'UWBP_AttachmentsSelector_C::VisibilityWidget' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, Lock) == 0x0005D3, "Member 'UWBP_AttachmentsSelector_C::Lock' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, ToggleWidgetTimerHandle) == 0x0005D8, "Member 'UWBP_AttachmentsSelector_C::ToggleWidgetTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, LockDuration) == 0x0005E0, "Member 'UWBP_AttachmentsSelector_C::LockDuration' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, FMODAttachEvent) == 0x0005E8, "Member 'UWBP_AttachmentsSelector_C::FMODAttachEvent' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, FMODDetachEvent) == 0x0005F0, "Member 'UWBP_AttachmentsSelector_C::FMODDetachEvent' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, FMODHoveredCellEvent) == 0x0005F8, "Member 'UWBP_AttachmentsSelector_C::FMODHoveredCellEvent' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, Default) == 0x000600, "Member 'UWBP_AttachmentsSelector_C::Default' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, AttachmentPerRow) == 0x000604, "Member 'UWBP_AttachmentsSelector_C::AttachmentPerRow' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, IsChangingProcessModActive) == 0x000608, "Member 'UWBP_AttachmentsSelector_C::IsChangingProcessModActive' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, OnNotEnoughSpacceToRemoveAttachment) == 0x000610, "Member 'UWBP_AttachmentsSelector_C::OnNotEnoughSpacceToRemoveAttachment' has a wrong offset!");
static_assert(offsetof(UWBP_AttachmentsSelector_C, bAtachmentSelectorReloading) == 0x000620, "Member 'UWBP_AttachmentsSelector_C::bAtachmentSelectorReloading' has a wrong offset!");

}

