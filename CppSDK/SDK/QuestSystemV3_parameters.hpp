#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestSystemV3

#include "Basic.hpp"

#include "SideQuestData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "QuestData_0_structs.hpp"
#include "QuestType_structs.hpp"


namespace SDK::Params
{

// Function QuestSystemV3.QuestSystemV3_C.AddSideQuests
// 0x0008 (0x0008 - 0x0000)
struct QuestSystemV3_C_AddSideQuests final
{
public:
	class USideQuests_C*                          Param_SideQuests;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_AddSideQuests) == 0x000008, "Wrong alignment on QuestSystemV3_C_AddSideQuests");
static_assert(sizeof(QuestSystemV3_C_AddSideQuests) == 0x000008, "Wrong size on QuestSystemV3_C_AddSideQuests");
static_assert(offsetof(QuestSystemV3_C_AddSideQuests, Param_SideQuests) == 0x000000, "Member 'QuestSystemV3_C_AddSideQuests::Param_SideQuests' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.AksForHighlightableActorsWithTag
// 0x0020 (0x0020 - 0x0000)
struct QuestSystemV3_C_AksForHighlightableActorsWithTag final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<TScriptInterface<class II_Highlightable_C>> Result;                                            // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(QuestSystemV3_C_AksForHighlightableActorsWithTag) == 0x000008, "Wrong alignment on QuestSystemV3_C_AksForHighlightableActorsWithTag");
static_assert(sizeof(QuestSystemV3_C_AksForHighlightableActorsWithTag) == 0x000020, "Wrong size on QuestSystemV3_C_AksForHighlightableActorsWithTag");
static_assert(offsetof(QuestSystemV3_C_AksForHighlightableActorsWithTag, Tag) == 0x000000, "Member 'QuestSystemV3_C_AksForHighlightableActorsWithTag::Tag' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_AksForHighlightableActorsWithTag, Result) == 0x000010, "Member 'QuestSystemV3_C_AksForHighlightableActorsWithTag::Result' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.AskForHighlightableActors
// 0x0010 (0x0010 - 0x0000)
struct QuestSystemV3_C_AskForHighlightableActors final
{
public:
	TArray<TScriptInterface<class II_Highlightable_C>> FoundActors;                                       // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(QuestSystemV3_C_AskForHighlightableActors) == 0x000008, "Wrong alignment on QuestSystemV3_C_AskForHighlightableActors");
static_assert(sizeof(QuestSystemV3_C_AskForHighlightableActors) == 0x000010, "Wrong size on QuestSystemV3_C_AskForHighlightableActors");
static_assert(offsetof(QuestSystemV3_C_AskForHighlightableActors, FoundActors) == 0x000000, "Member 'QuestSystemV3_C_AskForHighlightableActors::FoundActors' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.ChangeMarkers
// 0x0010 (0x0010 - 0x0000)
struct QuestSystemV3_C_ChangeMarkers final
{
public:
	TArray<struct FVector>                        Markers;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(QuestSystemV3_C_ChangeMarkers) == 0x000008, "Wrong alignment on QuestSystemV3_C_ChangeMarkers");
static_assert(sizeof(QuestSystemV3_C_ChangeMarkers) == 0x000010, "Wrong size on QuestSystemV3_C_ChangeMarkers");
static_assert(offsetof(QuestSystemV3_C_ChangeMarkers, Markers) == 0x000000, "Member 'QuestSystemV3_C_ChangeMarkers::Markers' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.ChangeQuestHint
// 0x0010 (0x0010 - 0x0000)
struct QuestSystemV3_C_ChangeQuestHint final
{
public:
	class FString                                 Hint;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_ChangeQuestHint) == 0x000008, "Wrong alignment on QuestSystemV3_C_ChangeQuestHint");
static_assert(sizeof(QuestSystemV3_C_ChangeQuestHint) == 0x000010, "Wrong size on QuestSystemV3_C_ChangeQuestHint");
static_assert(offsetof(QuestSystemV3_C_ChangeQuestHint, Hint) == 0x000000, "Member 'QuestSystemV3_C_ChangeQuestHint::Hint' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.ChangeQuestHintV2
// 0x0010 (0x0010 - 0x0000)
struct QuestSystemV3_C_ChangeQuestHintV2 final
{
public:
	class FString                                 Hint;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_ChangeQuestHintV2) == 0x000008, "Wrong alignment on QuestSystemV3_C_ChangeQuestHintV2");
static_assert(sizeof(QuestSystemV3_C_ChangeQuestHintV2) == 0x000010, "Wrong size on QuestSystemV3_C_ChangeQuestHintV2");
static_assert(offsetof(QuestSystemV3_C_ChangeQuestHintV2, Hint) == 0x000000, "Member 'QuestSystemV3_C_ChangeQuestHintV2::Hint' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.CreateMainQuests
// 0x0088 (0x0088 - 0x0000)
struct QuestSystemV3_C_CreateMainQuests final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuestData                             CallFunc_Array_Get_Item;                           // 0x0010(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_CreateQuestByQuestData_Quest;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainQuests_C*                          CallFunc_SpawnObject_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_CreateMainQuests) == 0x000008, "Wrong alignment on QuestSystemV3_C_CreateMainQuests");
static_assert(sizeof(QuestSystemV3_C_CreateMainQuests) == 0x000088, "Wrong size on QuestSystemV3_C_CreateMainQuests");
static_assert(offsetof(QuestSystemV3_C_CreateMainQuests, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuestSystemV3_C_CreateMainQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateMainQuests, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuestSystemV3_C_CreateMainQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateMainQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuestSystemV3_C_CreateMainQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateMainQuests, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuestSystemV3_C_CreateMainQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateMainQuests, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'QuestSystemV3_C_CreateMainQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateMainQuests, CallFunc_CreateQuestByQuestData_Quest) == 0x000070, "Member 'QuestSystemV3_C_CreateMainQuests::CallFunc_CreateQuestByQuestData_Quest' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateMainQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'QuestSystemV3_C_CreateMainQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateMainQuests, CallFunc_SpawnObject_ReturnValue) == 0x000080, "Member 'QuestSystemV3_C_CreateMainQuests::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.CreateQuestByQuestData
// 0x0078 (0x0078 - 0x0000)
struct QuestSystemV3_C_CreateQuestByQuestData final
{
public:
	struct FQuestData                             QuestData;                                         // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UQuestV2_C*                             Quest;                                             // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_CreateQuestByType_Result;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IQuestListener_C>      CallFunc_SetListener_Listener_CastInput;           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_CreateQuestByQuestData) == 0x000008, "Wrong alignment on QuestSystemV3_C_CreateQuestByQuestData");
static_assert(sizeof(QuestSystemV3_C_CreateQuestByQuestData) == 0x000078, "Wrong size on QuestSystemV3_C_CreateQuestByQuestData");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByQuestData, QuestData) == 0x000000, "Member 'QuestSystemV3_C_CreateQuestByQuestData::QuestData' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByQuestData, Quest) == 0x000058, "Member 'QuestSystemV3_C_CreateQuestByQuestData::Quest' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByQuestData, CallFunc_CreateQuestByType_Result) == 0x000060, "Member 'QuestSystemV3_C_CreateQuestByQuestData::CallFunc_CreateQuestByType_Result' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByQuestData, CallFunc_SetListener_Listener_CastInput) == 0x000068, "Member 'QuestSystemV3_C_CreateQuestByQuestData::CallFunc_SetListener_Listener_CastInput' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.CreateQuestByType
// 0x0048 (0x0048 - 0x0000)
struct QuestSystemV3_C_CreateQuestByType final
{
public:
	EQuestType                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USimpleQuestWithHighlightActors_C*      CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCountTriggerQuest_C*                   CallFunc_SpawnObject_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTimeoutQuest_C*                        CallFunc_SpawnObject_ReturnValue_2;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCollectAndCheckInventoryQuest_C*       CallFunc_SpawnObject_ReturnValue_3;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCheckInventoryQuest_C*                 CallFunc_SpawnObject_ReturnValue_4;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_SpawnObject_ReturnValue_5;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_CreateQuestByType) == 0x000008, "Wrong alignment on QuestSystemV3_C_CreateQuestByType");
static_assert(sizeof(QuestSystemV3_C_CreateQuestByType) == 0x000048, "Wrong size on QuestSystemV3_C_CreateQuestByType");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByType, Type) == 0x000000, "Member 'QuestSystemV3_C_CreateQuestByType::Type' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByType, Result) == 0x000008, "Member 'QuestSystemV3_C_CreateQuestByType::Result' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByType, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'QuestSystemV3_C_CreateQuestByType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'QuestSystemV3_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue_1) == 0x000020, "Member 'QuestSystemV3_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue_2) == 0x000028, "Member 'QuestSystemV3_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue_3) == 0x000030, "Member 'QuestSystemV3_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue_4) == 0x000038, "Member 'QuestSystemV3_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue_5) == 0x000040, "Member 'QuestSystemV3_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue_5' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.CreateSideQuestBySideQuestData
// 0x00C8 (0x00C8 - 0x0000)
struct QuestSystemV3_C_CreateSideQuestBySideQuestData final
{
public:
	struct FSideQuestData                         SideQuestData;                                     // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class USideQuests_C*                          Param_SideQuests;                                  // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuestData                             CallFunc_Array_Get_Item;                           // 0x0060(0x0058)(HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_CreateQuestByQuestData_Quest;             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USideQuests_C*                          CallFunc_SpawnObject_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_CreateSideQuestBySideQuestData) == 0x000008, "Wrong alignment on QuestSystemV3_C_CreateSideQuestBySideQuestData");
static_assert(sizeof(QuestSystemV3_C_CreateSideQuestBySideQuestData) == 0x0000C8, "Wrong size on QuestSystemV3_C_CreateSideQuestBySideQuestData");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuestBySideQuestData, SideQuestData) == 0x000000, "Member 'QuestSystemV3_C_CreateSideQuestBySideQuestData::SideQuestData' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuestBySideQuestData, Param_SideQuests) == 0x000040, "Member 'QuestSystemV3_C_CreateSideQuestBySideQuestData::Param_SideQuests' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuestBySideQuestData, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'QuestSystemV3_C_CreateSideQuestBySideQuestData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuestBySideQuestData, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'QuestSystemV3_C_CreateSideQuestBySideQuestData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuestBySideQuestData, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'QuestSystemV3_C_CreateSideQuestBySideQuestData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuestBySideQuestData, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'QuestSystemV3_C_CreateSideQuestBySideQuestData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuestBySideQuestData, Temp_int_Array_Index_Variable) == 0x000058, "Member 'QuestSystemV3_C_CreateSideQuestBySideQuestData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuestBySideQuestData, CallFunc_Array_Get_Item) == 0x000060, "Member 'QuestSystemV3_C_CreateSideQuestBySideQuestData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuestBySideQuestData, CallFunc_CreateQuestByQuestData_Quest) == 0x0000B8, "Member 'QuestSystemV3_C_CreateSideQuestBySideQuestData::CallFunc_CreateQuestByQuestData_Quest' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuestBySideQuestData, CallFunc_SpawnObject_ReturnValue) == 0x0000C0, "Member 'QuestSystemV3_C_CreateSideQuestBySideQuestData::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.CreateSideQuests
// 0x0060 (0x0060 - 0x0000)
struct QuestSystemV3_C_CreateSideQuests final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSideQuestData                         CallFunc_Array_Get_Item;                           // 0x0010(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USideQuests_C*                          CallFunc_CreateSideQuestBySideQuestData_SideQuests; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_CreateSideQuests) == 0x000008, "Wrong alignment on QuestSystemV3_C_CreateSideQuests");
static_assert(sizeof(QuestSystemV3_C_CreateSideQuests) == 0x000060, "Wrong size on QuestSystemV3_C_CreateSideQuests");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuests, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuestSystemV3_C_CreateSideQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuests, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuestSystemV3_C_CreateSideQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuestSystemV3_C_CreateSideQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuests, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuestSystemV3_C_CreateSideQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuests, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuestSystemV3_C_CreateSideQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'QuestSystemV3_C_CreateSideQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateSideQuests, CallFunc_CreateSideQuestBySideQuestData_SideQuests) == 0x000058, "Member 'QuestSystemV3_C_CreateSideQuests::CallFunc_CreateSideQuestBySideQuestData_SideQuests' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.CreateTimeoutTrigger
// 0x0018 (0x0018 - 0x0000)
struct QuestSystemV3_C_CreateTimeoutTrigger final
{
public:
	class FString                                 Trigger;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_CreateTimeoutTrigger) == 0x000008, "Wrong alignment on QuestSystemV3_C_CreateTimeoutTrigger");
static_assert(sizeof(QuestSystemV3_C_CreateTimeoutTrigger) == 0x000018, "Wrong size on QuestSystemV3_C_CreateTimeoutTrigger");
static_assert(offsetof(QuestSystemV3_C_CreateTimeoutTrigger, Trigger) == 0x000000, "Member 'QuestSystemV3_C_CreateTimeoutTrigger::Trigger' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_CreateTimeoutTrigger, Duration) == 0x000010, "Member 'QuestSystemV3_C_CreateTimeoutTrigger::Duration' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.ExecuteUbergraph_QuestSystemV3
// 0x0118 (0x0118 - 0x0000)
struct QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_PlayerController;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProcessLocalTrigger_HasCompletedQuest;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_ProcessLocalTrigger_CompletedQuest;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UQuestV2_C*                             K2Node_Event_CompletedQuest;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USideQuests_C*                          K2Node_DynamicCast_AsSide_Quests;                  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasNextQuest_HasNext;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Hint;                                 // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Trigger;                        // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Trigger;                              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Duration;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Hint;                           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_Event_Player;                               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_PlayerController_1;   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_Event_Markers;                              // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector>                        K2Node_CustomEvent_Markers;                        // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_PlayerController_2;   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC_1;                    // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_PlayerController_3;   // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC_2;                    // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3) == 0x000008, "Wrong alignment on QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3");
static_assert(sizeof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3) == 0x000118, "Wrong size on QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, EntryPoint) == 0x000000, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, CallFunc_GetPlayerController_PlayerController) == 0x000008, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::CallFunc_GetPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, CallFunc_ProcessLocalTrigger_HasCompletedQuest) == 0x000010, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::CallFunc_ProcessLocalTrigger_HasCompletedQuest' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, CallFunc_ProcessLocalTrigger_CompletedQuest) == 0x000018, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::CallFunc_ProcessLocalTrigger_CompletedQuest' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_DynamicCast_AsSurv_PC) == 0x000020, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_Event_CompletedQuest) == 0x000040, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_Event_CompletedQuest' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_DynamicCast_AsSide_Quests) == 0x000048, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_DynamicCast_AsSide_Quests' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, CallFunc_HasNextQuest_HasNext) == 0x000051, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::CallFunc_HasNextQuest_HasNext' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_Event_Hint) == 0x000058, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_Event_Hint' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_CustomEvent_Trigger) == 0x000068, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_CustomEvent_Trigger' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_Event_Trigger) == 0x000078, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_Event_Trigger' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_Event_Duration) == 0x000088, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_Event_Duration' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_CustomEvent_Hint) == 0x000090, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_CustomEvent_Hint' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_Event_Player) == 0x0000A0, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, CallFunc_GetPlayerController_PlayerController_1) == 0x0000A8, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::CallFunc_GetPlayerController_PlayerController_1' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x0000B0, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_Event_Markers) == 0x0000C8, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_Event_Markers' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_CustomEvent_Markers) == 0x0000D8, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_CustomEvent_Markers' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, CallFunc_GetPlayerController_PlayerController_2) == 0x0000E8, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::CallFunc_GetPlayerController_PlayerController_2' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_DynamicCast_AsSurv_PC_1) == 0x0000F0, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_DynamicCast_AsSurv_PC_1' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_DynamicCast_bSuccess_3) == 0x0000F8, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, CallFunc_GetPlayerController_PlayerController_3) == 0x000100, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::CallFunc_GetPlayerController_PlayerController_3' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_DynamicCast_AsSurv_PC_2) == 0x000108, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_DynamicCast_AsSurv_PC_2' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3, K2Node_DynamicCast_bSuccess_4) == 0x000110, "Member 'QuestSystemV3_C_ExecuteUbergraph_QuestSystemV3::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.GetSideQuestsByID
// 0x0028 (0x0028 - 0x0000)
struct QuestSystemV3_C_GetSideQuestsByID final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USideQuests_C*                          SideQuest;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USideQuests_C*                          CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_GetSideQuestsByID) == 0x000008, "Wrong alignment on QuestSystemV3_C_GetSideQuestsByID");
static_assert(sizeof(QuestSystemV3_C_GetSideQuestsByID) == 0x000028, "Wrong size on QuestSystemV3_C_GetSideQuestsByID");
static_assert(offsetof(QuestSystemV3_C_GetSideQuestsByID, ID) == 0x000000, "Member 'QuestSystemV3_C_GetSideQuestsByID::ID' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_GetSideQuestsByID, SideQuest) == 0x000010, "Member 'QuestSystemV3_C_GetSideQuestsByID::SideQuest' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_GetSideQuestsByID, CallFunc_Map_Find_Value) == 0x000018, "Member 'QuestSystemV3_C_GetSideQuestsByID::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_GetSideQuestsByID, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'QuestSystemV3_C_GetSideQuestsByID::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.HasSideBranch
// 0x0018 (0x0018 - 0x0000)
struct QuestSystemV3_C_HasSideBranch final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Has;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_HasSideBranch) == 0x000008, "Wrong alignment on QuestSystemV3_C_HasSideBranch");
static_assert(sizeof(QuestSystemV3_C_HasSideBranch) == 0x000018, "Wrong size on QuestSystemV3_C_HasSideBranch");
static_assert(offsetof(QuestSystemV3_C_HasSideBranch, ID) == 0x000000, "Member 'QuestSystemV3_C_HasSideBranch::ID' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_HasSideBranch, Has) == 0x000010, "Member 'QuestSystemV3_C_HasSideBranch::Has' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_HasSideBranch, CallFunc_Map_Contains_ReturnValue) == 0x000011, "Member 'QuestSystemV3_C_HasSideBranch::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct QuestSystemV3_C_Initialize final
{
public:
	class AGS_TDB_C*                              Param_GameState;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_Initialize) == 0x000008, "Wrong alignment on QuestSystemV3_C_Initialize");
static_assert(sizeof(QuestSystemV3_C_Initialize) == 0x000008, "Wrong size on QuestSystemV3_C_Initialize");
static_assert(offsetof(QuestSystemV3_C_Initialize, Param_GameState) == 0x000000, "Member 'QuestSystemV3_C_Initialize::Param_GameState' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.OnPlayerDead
// 0x0008 (0x0008 - 0x0000)
struct QuestSystemV3_C_OnPlayerDead final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_OnPlayerDead) == 0x000008, "Wrong alignment on QuestSystemV3_C_OnPlayerDead");
static_assert(sizeof(QuestSystemV3_C_OnPlayerDead) == 0x000008, "Wrong size on QuestSystemV3_C_OnPlayerDead");
static_assert(offsetof(QuestSystemV3_C_OnPlayerDead, Player) == 0x000000, "Member 'QuestSystemV3_C_OnPlayerDead::Player' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.OnQuestCompleted
// 0x0008 (0x0008 - 0x0000)
struct QuestSystemV3_C_OnQuestCompleted final
{
public:
	class UQuestV2_C*                             CompletedQuest;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_OnQuestCompleted) == 0x000008, "Wrong alignment on QuestSystemV3_C_OnQuestCompleted");
static_assert(sizeof(QuestSystemV3_C_OnQuestCompleted) == 0x000008, "Wrong size on QuestSystemV3_C_OnQuestCompleted");
static_assert(offsetof(QuestSystemV3_C_OnQuestCompleted, CompletedQuest) == 0x000000, "Member 'QuestSystemV3_C_OnQuestCompleted::CompletedQuest' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.OnQuestTrigger
// 0x0010 (0x0010 - 0x0000)
struct QuestSystemV3_C_OnQuestTrigger final
{
public:
	class FString                                 Trigger;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_OnQuestTrigger) == 0x000008, "Wrong alignment on QuestSystemV3_C_OnQuestTrigger");
static_assert(sizeof(QuestSystemV3_C_OnQuestTrigger) == 0x000010, "Wrong size on QuestSystemV3_C_OnQuestTrigger");
static_assert(offsetof(QuestSystemV3_C_OnQuestTrigger, Trigger) == 0x000000, "Member 'QuestSystemV3_C_OnQuestTrigger::Trigger' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.ProcessQuestTrigger
// 0x0010 (0x0010 - 0x0000)
struct QuestSystemV3_C_ProcessQuestTrigger final
{
public:
	class FString                                 Trigger;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_ProcessQuestTrigger) == 0x000008, "Wrong alignment on QuestSystemV3_C_ProcessQuestTrigger");
static_assert(sizeof(QuestSystemV3_C_ProcessQuestTrigger) == 0x000010, "Wrong size on QuestSystemV3_C_ProcessQuestTrigger");
static_assert(offsetof(QuestSystemV3_C_ProcessQuestTrigger, Trigger) == 0x000000, "Member 'QuestSystemV3_C_ProcessQuestTrigger::Trigger' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.SetMarkers
// 0x0010 (0x0010 - 0x0000)
struct QuestSystemV3_C_SetMarkers final
{
public:
	TArray<struct FVector>                        Markers;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(QuestSystemV3_C_SetMarkers) == 0x000008, "Wrong alignment on QuestSystemV3_C_SetMarkers");
static_assert(sizeof(QuestSystemV3_C_SetMarkers) == 0x000010, "Wrong size on QuestSystemV3_C_SetMarkers");
static_assert(offsetof(QuestSystemV3_C_SetMarkers, Markers) == 0x000000, "Member 'QuestSystemV3_C_SetMarkers::Markers' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.SetPlayerForQuests
// 0x0078 (0x0078 - 0x0000)
struct QuestSystemV3_C_SetPlayerForQuests final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USideQuests_C*>                  CallFunc_Map_Values_Values;                        // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USideQuests_C*                          CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_SetPlayerForQuests) == 0x000008, "Wrong alignment on QuestSystemV3_C_SetPlayerForQuests");
static_assert(sizeof(QuestSystemV3_C_SetPlayerForQuests) == 0x000078, "Wrong size on QuestSystemV3_C_SetPlayerForQuests");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, Player) == 0x000000, "Member 'QuestSystemV3_C_SetPlayerForQuests::Player' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, Temp_int_Array_Index_Variable) == 0x000008, "Member 'QuestSystemV3_C_SetPlayerForQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'QuestSystemV3_C_SetPlayerForQuests::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'QuestSystemV3_C_SetPlayerForQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'QuestSystemV3_C_SetPlayerForQuests::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'QuestSystemV3_C_SetPlayerForQuests::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'QuestSystemV3_C_SetPlayerForQuests::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Map_Values_Values) == 0x000028, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Array_Get_Item) == 0x000040, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Array_Length_ReturnValue_2) == 0x000064, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SetPlayerForQuests, CallFunc_Less_IntInt_ReturnValue_2) == 0x000070, "Member 'QuestSystemV3_C_SetPlayerForQuests::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.SwitchBranch
// 0x0008 (0x0008 - 0x0000)
struct QuestSystemV3_C_SwitchBranch final
{
public:
	class UQuestBranch_C*                         branch;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_SwitchBranch) == 0x000008, "Wrong alignment on QuestSystemV3_C_SwitchBranch");
static_assert(sizeof(QuestSystemV3_C_SwitchBranch) == 0x000008, "Wrong size on QuestSystemV3_C_SwitchBranch");
static_assert(offsetof(QuestSystemV3_C_SwitchBranch, branch) == 0x000000, "Member 'QuestSystemV3_C_SwitchBranch::branch' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.SwitchBranchSilent
// 0x0018 (0x0018 - 0x0000)
struct QuestSystemV3_C_SwitchBranchSilent final
{
public:
	class UQuestBranch_C*                         QuestBranch;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMainQuests_C*                          K2Node_DynamicCast_AsMain_Quests;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_SwitchBranchSilent) == 0x000008, "Wrong alignment on QuestSystemV3_C_SwitchBranchSilent");
static_assert(sizeof(QuestSystemV3_C_SwitchBranchSilent) == 0x000018, "Wrong size on QuestSystemV3_C_SwitchBranchSilent");
static_assert(offsetof(QuestSystemV3_C_SwitchBranchSilent, QuestBranch) == 0x000000, "Member 'QuestSystemV3_C_SwitchBranchSilent::QuestBranch' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SwitchBranchSilent, K2Node_DynamicCast_AsMain_Quests) == 0x000008, "Member 'QuestSystemV3_C_SwitchBranchSilent::K2Node_DynamicCast_AsMain_Quests' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SwitchBranchSilent, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'QuestSystemV3_C_SwitchBranchSilent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.SwitchQuest
// 0x0008 (0x0008 - 0x0000)
struct QuestSystemV3_C_SwitchQuest final
{
public:
	class UQuestV2_C*                             Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_SwitchQuest) == 0x000008, "Wrong alignment on QuestSystemV3_C_SwitchQuest");
static_assert(sizeof(QuestSystemV3_C_SwitchQuest) == 0x000008, "Wrong size on QuestSystemV3_C_SwitchQuest");
static_assert(offsetof(QuestSystemV3_C_SwitchQuest, Quest) == 0x000000, "Member 'QuestSystemV3_C_SwitchQuest::Quest' has a wrong offset!");

// Function QuestSystemV3.QuestSystemV3_C.SwitchSideBranchByID
// 0x0020 (0x0020 - 0x0000)
struct QuestSystemV3_C_SwitchSideBranchByID final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSideBranch_Has;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USideQuests_C*                          CallFunc_GetSideQuestsByID_SideQuest;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestSystemV3_C_SwitchSideBranchByID) == 0x000008, "Wrong alignment on QuestSystemV3_C_SwitchSideBranchByID");
static_assert(sizeof(QuestSystemV3_C_SwitchSideBranchByID) == 0x000020, "Wrong size on QuestSystemV3_C_SwitchSideBranchByID");
static_assert(offsetof(QuestSystemV3_C_SwitchSideBranchByID, ID) == 0x000000, "Member 'QuestSystemV3_C_SwitchSideBranchByID::ID' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SwitchSideBranchByID, CallFunc_HasSideBranch_Has) == 0x000010, "Member 'QuestSystemV3_C_SwitchSideBranchByID::CallFunc_HasSideBranch_Has' has a wrong offset!");
static_assert(offsetof(QuestSystemV3_C_SwitchSideBranchByID, CallFunc_GetSideQuestsByID_SideQuest) == 0x000018, "Member 'QuestSystemV3_C_SwitchSideBranchByID::CallFunc_GetSideQuestsByID_SideQuest' has a wrong offset!");

}

