#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurviveAnim_IK

#include "Basic.hpp"

#include "SurviveAnim_IK_classes.hpp"
#include "SurviveAnim_IK_parameters.hpp"


namespace SDK
{

// Function SurviveAnim_IK.SurviveAnim_IK_C.AddCharacterRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USurviveAnim_IK_C::AddCharacterRotation(const struct FRotator& Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "AddCharacterRotation");

	Params::SurviveAnim_IK_C_AddCharacterRotation Parms{};

	Parms.Amount = std::move(Amount);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        InPose                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void USurviveAnim_IK_C::AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "AnimGraph");

	Params::SurviveAnim_IK_C_AnimGraph Parms{};

	Parms.InPose = std::move(InPose);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.AnimNotifyTurningInPlace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     TurnIPMontage                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldTurn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TurningIP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TurningRight                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::AnimNotifyTurningInPlace(class UAnimMontage* TurnIPMontage, bool ShouldTurn, bool TurningIP, bool TurningRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "AnimNotifyTurningInPlace");

	Params::SurviveAnim_IK_C_AnimNotifyTurningInPlace Parms{};

	Parms.TurnIPMontage = TurnIPMontage;
	Parms.ShouldTurn = ShouldTurn;
	Parms.TurningIP = TurningIP;
	Parms.TurningRight = TurningRight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.BlueprintInitializeAnimation
// (Event, Public, BlueprintEvent)

void USurviveAnim_IK_C::BlueprintInitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "BlueprintInitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.BlueprintUpdateAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTimeX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::BlueprintUpdateAnimation(float DeltaTimeX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "BlueprintUpdateAnimation");

	Params::SurviveAnim_IK_C_BlueprintUpdateAnimation Parms{};

	Parms.DeltaTimeX = DeltaTimeX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.BPI_CameraShake
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ShakeClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    NeedChangeScale                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::BPI_CameraShake(class UClass* ShakeClass, bool NeedChangeScale, double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "BPI_CameraShake");

	Params::SurviveAnim_IK_C_BPI_CameraShake Parms{};

	Parms.ShakeClass = ShakeClass;
	Parms.NeedChangeScale = NeedChangeScale;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.CallEatMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DurationAttached                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AnimDelay                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DissappearDelay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::CallEatMesh(class FName ItemType, double DurationAttached, double AnimDelay, double DissappearDelay, double PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "CallEatMesh");

	Params::SurviveAnim_IK_C_CallEatMesh Parms{};

	Parms.ItemType = ItemType;
	Parms.DurationAttached = DurationAttached;
	Parms.AnimDelay = AnimDelay;
	Parms.DissappearDelay = DissappearDelay;
	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.CheckEndEat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Eat_                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::CheckEndEat(bool* Eat_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "CheckEndEat");

	Params::SurviveAnim_IK_C_CheckEndEat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Eat_ != nullptr)
		*Eat_ = Parms.Eat_;
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.ExecuteUbergraph_SurviveAnim_IK
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::ExecuteUbergraph_SurviveAnim_IK(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "ExecuteUbergraph_SurviveAnim_IK");

	Params::SurviveAnim_IK_C_ExecuteUbergraph_SurviveAnim_IK Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.FootIK
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void USurviveAnim_IK_C::FootIK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "FootIK");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.GetCameraOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_PelvisOffset                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InterpOffset                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::GetCameraOffset(struct FVector* Param_PelvisOffset, struct FVector* InterpOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "GetCameraOffset");

	Params::SurviveAnim_IK_C_GetCameraOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_PelvisOffset != nullptr)
		*Param_PelvisOffset = std::move(Parms.Param_PelvisOffset);

	if (InterpOffset != nullptr)
		*InterpOffset = std::move(Parms.InterpOffset);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.GetPelvisBonesPos
// (BlueprintCallable, BlueprintEvent)

void USurviveAnim_IK_C::GetPelvisBonesPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "GetPelvisBonesPos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.GetSurvController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvPC_C*                        SurvPC                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::GetSurvController(class ASurvPC_C** SurvPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "GetSurvController");

	Params::SurviveAnim_IK_C_GetSurvController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SurvPC != nullptr)
		*SurvPC = Parms.SurvPC;
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.MovementModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMovementMode                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::MovementModeChanged(EMovementMode NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "MovementModeChanged");

	Params::SurviveAnim_IK_C_MovementModeChanged Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.NotifyItemUsing
// (Public, BlueprintCallable, BlueprintEvent)

void USurviveAnim_IK_C::NotifyItemUsing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "NotifyItemUsing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.PlayMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHipfire                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reloading                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::PlayMontage(class UAnimMontage* AnimMontage, bool IsHipfire, bool Reloading, double PlayRate, double StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "PlayMontage");

	Params::SurviveAnim_IK_C_PlayMontage Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.IsHipfire = IsHipfire;
	Parms.Reloading = Reloading;
	Parms.PlayRate = PlayRate;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.ResetItemUsingAnim
// (Public, BlueprintCallable, BlueprintEvent)

void USurviveAnim_IK_C::ResetItemUsingAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "ResetItemUsingAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.SetItemUsingAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SpecialItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanMove                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasStandAnim                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WepNotHiding                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::SetItemUsingAnim(class UAnimSequence* Anim, bool SpecialItem, bool CanMove, bool HasStandAnim, bool WepNotHiding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "SetItemUsingAnim");

	Params::SurviveAnim_IK_C_SetItemUsingAnim Parms{};

	Parms.Anim = Anim;
	Parms.SpecialItem = SpecialItem;
	Parms.CanMove = CanMove;
	Parms.HasStandAnim = HasStandAnim;
	Parms.WepNotHiding = WepNotHiding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.SetReloadState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::SetReloadState(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "SetReloadState");

	Params::SurviveAnim_IK_C_SetReloadState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveAnim_IK.SurviveAnim_IK_C.SetWeaponType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBPE_Weapon_Type                        WeaponType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveAnim_IK_C::SetWeaponType(EBPE_Weapon_Type WeaponType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveAnim_IK_C", "SetWeaponType");

	Params::SurviveAnim_IK_C_SetWeaponType Parms{};

	Parms.WeaponType = WeaponType;

	UObject::ProcessEvent(Func, &Parms);
}

}

