#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HighlightMesh

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass HighlightMesh.HighlightMesh_C
// 0x0078 (0x0118 - 0x00A0)
class UHighlightMesh_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsActivated;                                       // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Tag;                                               // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 PlayerActor;                                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Direction;                                         // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LerpAlpha;                                         // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LerpSpeed;                                         // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LerpDelta;                                         // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       Materials;                                         // 0x00F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           HighlightColor;                                    // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EndHighlight();
	void ExecuteUbergraph_HighlightMesh(int32 EntryPoint);
	void HasTag(const class FString& Param_Tag, bool* Param_HasTag);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void StartHighlight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HighlightMesh_C">();
	}
	static class UHighlightMesh_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHighlightMesh_C>();
	}
};
static_assert(alignof(UHighlightMesh_C) == 0x000008, "Wrong alignment on UHighlightMesh_C");
static_assert(sizeof(UHighlightMesh_C) == 0x000118, "Wrong size on UHighlightMesh_C");
static_assert(offsetof(UHighlightMesh_C, UberGraphFrame) == 0x0000A0, "Member 'UHighlightMesh_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, IsActivated) == 0x0000A8, "Member 'UHighlightMesh_C::IsActivated' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, Tag) == 0x0000B0, "Member 'UHighlightMesh_C::Tag' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, PlayerActor) == 0x0000C0, "Member 'UHighlightMesh_C::PlayerActor' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, Material) == 0x0000C8, "Member 'UHighlightMesh_C::Material' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, StaticMesh) == 0x0000D0, "Member 'UHighlightMesh_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, Direction) == 0x0000D8, "Member 'UHighlightMesh_C::Direction' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, LerpAlpha) == 0x0000E0, "Member 'UHighlightMesh_C::LerpAlpha' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, LerpSpeed) == 0x0000E8, "Member 'UHighlightMesh_C::LerpSpeed' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, LerpDelta) == 0x0000F0, "Member 'UHighlightMesh_C::LerpDelta' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, Materials) == 0x0000F8, "Member 'UHighlightMesh_C::Materials' has a wrong offset!");
static_assert(offsetof(UHighlightMesh_C, HighlightColor) == 0x000108, "Member 'UHighlightMesh_C::HighlightColor' has a wrong offset!");

}

