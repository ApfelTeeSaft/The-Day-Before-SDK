#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_NegativeEffects

#include "Basic.hpp"

#include "BPC_NegativeEffects_classes.hpp"
#include "BPC_NegativeEffects_parameters.hpp"


namespace SDK
{

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.AdrenalineFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::AdrenalineFunc(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "AdrenalineFunc");

	Params::BPC_NegativeEffects_C_AdrenalineFunc Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.AdrenalineStomachEffectEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::AdrenalineStomachEffectEvent(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "AdrenalineStomachEffectEvent");

	Params::BPC_NegativeEffects_C_AdrenalineStomachEffectEvent Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.ArmFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::ArmFunc(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "ArmFunc");

	Params::BPC_NegativeEffects_C_ArmFunc Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.BleedingFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUNegativeEffectType                    EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::BleedingFunc(EUNegativeEffectType EffectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "BleedingFunc");

	Params::BPC_NegativeEffects_C_BleedingFunc Parms{};

	Parms.EffectType = EffectType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.BodyCriticalEffectFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::BodyCriticalEffectFunc(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "BodyCriticalEffectFunc");

	Params::BPC_NegativeEffects_C_BodyCriticalEffectFunc Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.CheckBleeding
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             EffectName                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    EffectFind                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::CheckBleeding(const class FText& EffectName, bool* EffectFind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "CheckBleeding");

	Params::BPC_NegativeEffects_C_CheckBleeding Parms{};

	Parms.EffectName = std::move(EffectName);

	UObject::ProcessEvent(Func, &Parms);

	if (EffectFind != nullptr)
		*EffectFind = Parms.EffectFind;
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.ChestFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::ChestFunc(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "ChestFunc");

	Params::BPC_NegativeEffects_C_ChestFunc Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.ClearEffects
// (BlueprintCallable, BlueprintEvent)

void UBPC_NegativeEffects_C::ClearEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "ClearEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.ExecuteUbergraph_BPC_NegativeEffects
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::ExecuteUbergraph_BPC_NegativeEffects(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "ExecuteUbergraph_BPC_NegativeEffects");

	Params::BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.HemostaticFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::HemostaticFunc(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "HemostaticFunc");

	Params::BPC_NegativeEffects_C_HemostaticFunc Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.OnNegativeEffect__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUNegativeEffectType                    EffectType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::OnNegativeEffect__DelegateSignature(bool On_, EUNegativeEffectType EffectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "OnNegativeEffect__DelegateSignature");

	Params::BPC_NegativeEffects_C_OnNegativeEffect__DelegateSignature Parms{};

	Parms.On_ = On_;
	Parms.EffectType = EffectType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.OverweightEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::OverweightEvent(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "OverweightEvent");

	Params::BPC_NegativeEffects_C_OverweightEvent Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.PainkillerFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::PainkillerFunc(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "PainkillerFunc");

	Params::BPC_NegativeEffects_C_PainkillerFunc Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBPC_NegativeEffects_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "ReceiveTick");

	Params::BPC_NegativeEffects_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.StaminaStimulatorFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::StaminaStimulatorFunc(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "StaminaStimulatorFunc");

	Params::BPC_NegativeEffects_C_StaminaStimulatorFunc Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.StartNegativeEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUNegativeEffectType                    Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::StartNegativeEffect(EUNegativeEffectType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "StartNegativeEffect");

	Params::BPC_NegativeEffects_C_StartNegativeEffect Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.StopAdrenaline
// (BlueprintCallable, BlueprintEvent)

void UBPC_NegativeEffects_C::StopAdrenaline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "StopAdrenaline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.StopHemostatic
// (BlueprintCallable, BlueprintEvent)

void UBPC_NegativeEffects_C::StopHemostatic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "StopHemostatic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.StopNegativeEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UBPC_NegativeEffects_C::StopNegativeEffect(const class FText& Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "StopNegativeEffect");

	Params::BPC_NegativeEffects_C_StopNegativeEffect Parms{};

	Parms.Type = std::move(Type);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.StopPainkiller
// (BlueprintCallable, BlueprintEvent)

void UBPC_NegativeEffects_C::StopPainkiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "StopPainkiller");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.StopStaminaStimulator
// (BlueprintCallable, BlueprintEvent)

void UBPC_NegativeEffects_C::StopStaminaStimulator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "StopStaminaStimulator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_NegativeEffects.BPC_NegativeEffects_C.WeakeningEffectsEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_WeakeningEffect                       WeakeningEffect                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_NegativeEffects_C::WeakeningEffectsEvent(const E_WeakeningEffect WeakeningEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_NegativeEffects_C", "WeakeningEffectsEvent");

	Params::BPC_NegativeEffects_C_WeakeningEffectsEvent Parms{};

	Parms.WeakeningEffect = WeakeningEffect;

	UObject::ProcessEvent(Func, &Parms);
}

}

