#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestFramework

#include "Basic.hpp"

#include "QuestFramework_classes.hpp"
#include "QuestFramework_parameters.hpp"


namespace SDK
{

// Function QuestFramework.Quest.FindStageNodeByName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Param_Name                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestNode_Stage*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestNode_Stage* UQuest::FindStageNodeByName(const class FName& Param_Name) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "FindStageNodeByName");

	Params::Quest_FindStageNodeByName Parms{};

	Parms.Param_Name = Param_Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.Quest.GetAllStageNodesNames
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuest::GetAllStageNodesNames(TArray<class FName>* OutNames) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetAllStageNodesNames");

	Params::Quest_GetAllStageNodesNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function QuestFramework.Quest.GetCustomData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UQuestCustomData*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UQuestCustomData* UQuest::GetCustomData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetCustomData");

	Params::Quest_GetCustomData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.Quest.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQuest::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetDisplayName");

	Params::Quest_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.Quest.GetGuid
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UQuest::GetGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetGuid");

	Params::Quest_GetGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.Quest.GetRootNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestNode_Root*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestNode_Root* UQuest::GetRootNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetRootNode");

	Params::Quest_GetRootNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.Quest.HasValidGuid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuest::HasValidGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "HasValidGuid");

	Params::Quest_HasValidGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContextViewModel.TrackQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bTrack                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestContextViewModel::TrackQuest(bool bTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContextViewModel", "TrackQuest");

	Params::QuestContextViewModel_TrackQuest Parms{};

	Parms.bTrack = bTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestContextViewModel.GetActiveObjectives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestObjectiveViewModel*> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuestObjectiveViewModel*> UQuestContextViewModel::GetActiveObjectives() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContextViewModel", "GetActiveObjectives");

	Params::QuestContextViewModel_GetActiveObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContextViewModel.GetTrackedVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UQuestContextViewModel::GetTrackedVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContextViewModel", "GetTrackedVisibility");

	Params::QuestContextViewModel_GetTrackedVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestComponent.CreateQuestContext
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UQuest*                           Quest                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestContext*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestContext* UQuestComponent::CreateQuestContext(class UQuest* Quest, bool bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestComponent", "CreateQuestContext");

	Params::QuestComponent_CreateQuestContext Parms{};

	Parms.Quest = Quest;
	Parms.bStart = bStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestComponent.LoadQuestStates
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQuestSaveStateData              SaveData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bForceRestore                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestComponent::LoadQuestStates(const struct FQuestSaveStateData& SaveData, bool bForceRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestComponent", "LoadQuestStates");

	Params::QuestComponent_LoadQuestStates Parms{};

	Parms.SaveData = std::move(SaveData);
	Parms.bForceRestore = bForceRestore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestComponent.OnRep_ActiveQuestContexts
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<class UQuestContext*>            OldActiveContexts                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UQuestComponent::OnRep_ActiveQuestContexts(const TArray<class UQuestContext*>& OldActiveContexts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestComponent", "OnRep_ActiveQuestContexts");

	Params::QuestComponent_OnRep_ActiveQuestContexts Parms{};

	Parms.OldActiveContexts = std::move(OldActiveContexts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestComponent.SaveQuestStates
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQuestSaveStateData              SaveData                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestComponent::SaveQuestStates(struct FQuestSaveStateData* SaveData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestComponent", "SaveQuestStates");

	Params::QuestComponent_SaveQuestStates Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SaveData != nullptr)
		*SaveData = std::move(Parms.SaveData);

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestComponent.SuspendAllQuests
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UQuestComponent::SuspendAllQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestComponent", "SuspendAllQuests");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestComponent.SuspendQuest
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UQuestContext*                    QuestContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestComponent::SuspendQuest(class UQuestContext* QuestContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestComponent", "SuspendQuest");

	Params::QuestComponent_SuspendQuest Parms{};

	Parms.QuestContext = QuestContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestComponent.FindAllActiveQuestContexts
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuest*                           Quest                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UQuestContext*>            OutContexts                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuestComponent::FindAllActiveQuestContexts(class UQuest* Quest, TArray<class UQuestContext*>* OutContexts) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestComponent", "FindAllActiveQuestContexts");

	Params::QuestComponent_FindAllActiveQuestContexts Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContexts != nullptr)
		*OutContexts = std::move(Parms.OutContexts);
}


// Function QuestFramework.QuestComponent.FindFirstActiveQuestContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuest*                           Quest                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestContext*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestContext* UQuestComponent::FindFirstActiveQuestContext(class UQuest* Quest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestComponent", "FindFirstActiveQuestContext");

	Params::QuestComponent_FindFirstActiveQuestContext Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestComponent.GetAllActiveQuestContexts
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestContext*>            OutContexts                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuestComponent::GetAllActiveQuestContexts(TArray<class UQuestContext*>* OutContexts) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestComponent", "GetAllActiveQuestContexts");

	Params::QuestComponent_GetAllActiveQuestContexts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContexts != nullptr)
		*OutContexts = std::move(Parms.OutContexts);
}


// Function QuestFramework.QuestComponent.HasActiveQuestContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuest*                           Quest                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestComponent::HasActiveQuestContext(class UQuest* Quest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestComponent", "HasActiveQuestContext");

	Params::QuestComponent_HasActiveQuestContext Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestCondition.CheckCondition
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestCondition::CheckCondition(class UQuestContext* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestCondition", "CheckCondition");

	Params::QuestCondition_CheckCondition Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.DeactivateObjective
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UQuestObjective*                  Objective                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestContext::DeactivateObjective(class UQuestObjective* Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "DeactivateObjective");

	Params::QuestContext_DeactivateObjective Parms{};

	Parms.Objective = Objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestContext.JumpToStageByName
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             StageName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestContext::JumpToStageByName(class FName StageName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "JumpToStageByName");

	Params::QuestContext_JumpToStageByName Parms{};

	Parms.StageName = StageName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.JumpToStageNode
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UQuestNode_Stage*                 StageNode                                              (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestContext::JumpToStageNode(const class UQuestNode_Stage* StageNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "JumpToStageNode");

	Params::QuestContext_JumpToStageNode Parms{};

	Parms.StageNode = StageNode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.OnRep_ActiveObjectives
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<class UQuestObjective*>          OldObjectives                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuestContext::OnRep_ActiveObjectives(TArray<class UQuestObjective*>* OldObjectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "OnRep_ActiveObjectives");

	Params::QuestContext_OnRep_ActiveObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OldObjectives != nullptr)
		*OldObjectives = std::move(Parms.OldObjectives);
}


// Function QuestFramework.QuestContext.OnRep_CurrentNodeIndex
// (Final, Native, Private)

void UQuestContext::OnRep_CurrentNodeIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "OnRep_CurrentNodeIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestContext.OnRep_MemoryReplicator
// (Final, Native, Private)

void UQuestContext::OnRep_MemoryReplicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "OnRep_MemoryReplicator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestContext.OnRep_ObjectiveResultReplicator
// (Final, Native, Private)

void UQuestContext::OnRep_ObjectiveResultReplicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "OnRep_ObjectiveResultReplicator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestContext.OnRep_QuestAsset
// (Final, Native, Private)

void UQuestContext::OnRep_QuestAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "OnRep_QuestAsset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestContext.OnRep_QuestState
// (Final, Native, Private)

void UQuestContext::OnRep_QuestState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "OnRep_QuestState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestContext.RefreshObjectiveViewModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UQuestObjective*                  Objective                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestContext::RefreshObjectiveViewModel(class UQuestObjective* Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "RefreshObjectiveViewModel");

	Params::QuestContext_RefreshObjectiveViewModel Parms{};

	Parms.Objective = Objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestContext.RefreshViewModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUpdateQuestData                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUpdateObjectiveList                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRefreshObjectiveViewModels                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestContext::RefreshViewModel(bool bUpdateQuestData, bool bUpdateObjectiveList, bool bRefreshObjectiveViewModels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "RefreshViewModel");

	Params::QuestContext_RefreshViewModel Parms{};

	Parms.bUpdateQuestData = bUpdateQuestData;
	Parms.bUpdateObjectiveList = bUpdateObjectiveList;
	Parms.bRefreshObjectiveViewModels = bRefreshObjectiveViewModels;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestContext.Start
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UQuestContext::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "Start");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestContext.TryActivateObjective
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UQuestObjective*                  Objective                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestContext::TryActivateObjective(class UQuestObjective* Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "TryActivateObjective");

	Params::QuestContext_TryActivateObjective Parms{};

	Parms.Objective = Objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetActiveNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestNode*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestNode* UQuestContext::GetActiveNode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetActiveNode");

	Params::QuestContext_GetActiveNode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetActiveNodeIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQuestContext::GetActiveNodeIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetActiveNodeIndex");

	Params::QuestContext_GetActiveNodeIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetActiveObjectives
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestObjective*>          Objectives                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuestContext::GetActiveObjectives(TArray<class UQuestObjective*>* Objectives) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetActiveObjectives");

	Params::QuestContext_GetActiveObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Objectives != nullptr)
		*Objectives = std::move(Parms.Objectives);
}


// Function QuestFramework.QuestContext.GetAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EQuestNetworkAuthority                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EQuestNetworkAuthority UQuestContext::GetAuthority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetAuthority");

	Params::QuestContext_GetAuthority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetCurrentObjectives
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestObjective*>          Objectives                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuestContext::GetCurrentObjectives(TArray<class UQuestObjective*>* Objectives) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetCurrentObjectives");

	Params::QuestContext_GetCurrentObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Objectives != nullptr)
		*Objectives = std::move(Parms.Objectives);
}


// Function QuestFramework.QuestContext.GetGuid
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UQuestContext::GetGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetGuid");

	Params::QuestContext_GetGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetObjectiveResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestObjective*                  Objective                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReEvaluate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EQuestResult                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EQuestResult UQuestContext::GetObjectiveResult(class UQuestObjective* Objective, bool bReEvaluate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetObjectiveResult");

	Params::QuestContext_GetObjectiveResult Parms{};

	Parms.Objective = Objective;
	Parms.bReEvaluate = bReEvaluate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetObjectiveViewModel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestObjective*                  Objective                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestObjectiveViewModel*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestObjectiveViewModel* UQuestContext::GetObjectiveViewModel(class UQuestObjective* Objective) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetObjectiveViewModel");

	Params::QuestContext_GetObjectiveViewModel Parms{};

	Parms.Objective = Objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetOwnerActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQuestContext::GetOwnerActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetOwnerActor");

	Params::QuestContext_GetOwnerActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetOwnerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AController* UQuestContext::GetOwnerController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetOwnerController");

	Params::QuestContext_GetOwnerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetOwnerQuestComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestComponent* UQuestContext::GetOwnerQuestComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetOwnerQuestComponent");

	Params::QuestContext_GetOwnerQuestComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetQuestAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuest*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuest* UQuestContext::GetQuestAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetQuestAsset");

	Params::QuestContext_GetQuestAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetQuestMemory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestMemory*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestMemory* UQuestContext::GetQuestMemory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetQuestMemory");

	Params::QuestContext_GetQuestMemory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetQuestState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EQuestResult                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EQuestResult UQuestContext::GetQuestState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetQuestState");

	Params::QuestContext_GetQuestState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.GetViewModel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestContextViewModel*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestContextViewModel* UQuestContext::GetViewModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "GetViewModel");

	Params::QuestContext_GetViewModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.HasAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestContext::HasAuthority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "HasAuthority");

	Params::QuestContext_HasAuthority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.HasEnded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestContext::HasEnded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "HasEnded");

	Params::QuestContext_HasEnded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.IsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestContext::IsInitialized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "IsInitialized");

	Params::QuestContext_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestContext.IsObjectiveActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestObjective*                  Objective                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestContext::IsObjectiveActive(class UQuestObjective* Objective) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestContext", "IsObjectiveActive");

	Params::QuestContext_IsObjectiveActive Parms{};

	Parms.Objective = Objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestCustomData.GetQuestAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuest*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuest* UQuestCustomData::GetQuestAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestCustomData", "GetQuestAsset");

	Params::QuestCustomData_GetQuestAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestEvent.ExecuteEvent
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestEventPayload               Payload                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UQuestEvent::ExecuteEvent(class UQuestContext* Context, const struct FQuestEventPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestEvent", "ExecuteEvent");

	Params::QuestEvent_ExecuteEvent Parms{};

	Parms.Context = Context;
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestListViewModel.SetDetailQuestContextViewModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UQuestContextViewModel*           ViewModel                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestListViewModel::SetDetailQuestContextViewModel(class UQuestContextViewModel* ViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestListViewModel", "SetDetailQuestContextViewModel");

	Params::QuestListViewModel_SetDetailQuestContextViewModel Parms{};

	Parms.ViewModel = ViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestListViewModel.GetCompletedQuestContexts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestContextViewModel*>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuestContextViewModel*> UQuestListViewModel::GetCompletedQuestContexts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestListViewModel", "GetCompletedQuestContexts");

	Params::QuestListViewModel_GetCompletedQuestContexts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestListViewModel.GetDetailQuestContextViewModel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestContextViewModel*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestContextViewModel* UQuestListViewModel::GetDetailQuestContextViewModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestListViewModel", "GetDetailQuestContextViewModel");

	Params::QuestListViewModel_GetDetailQuestContextViewModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestListViewModel.GetFailedQuestContexts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestContextViewModel*>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuestContextViewModel*> UQuestListViewModel::GetFailedQuestContexts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestListViewModel", "GetFailedQuestContexts");

	Params::QuestListViewModel_GetFailedQuestContexts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestListViewModel.GetInProgressQuestContexts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestContextViewModel*>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuestContextViewModel*> UQuestListViewModel::GetInProgressQuestContexts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestListViewModel", "GetInProgressQuestContexts");

	Params::QuestListViewModel_GetInProgressQuestContexts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestListViewModel.GetQuestContexts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestContextViewModel*>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuestContextViewModel*> UQuestListViewModel::GetQuestContexts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestListViewModel", "GetQuestContexts");

	Params::QuestListViewModel_GetQuestContexts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestManager.GetQuestManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestManager*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestManager* UQuestManager::GetQuestManager(const class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestManager", "GetQuestManager");

	Params::QuestManager_GetQuestManager Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestManagerAccess.RetainQuestManager
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UQuestManager*                    Manager                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IQuestManagerAccess::RetainQuestManager(class UQuestManager* Manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestManagerAccess", "RetainQuestManager");

	Params::QuestManagerAccess_RetainQuestManager Parms{};

	Parms.Manager = Manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestManagerAccess.GetQuestManagerInstance
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQuestManager*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestManager* IQuestManagerAccess::GetQuestManagerInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestManagerAccess", "GetQuestManagerInstance");

	Params::QuestManagerAccess_GetQuestManagerInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestMemory.SetBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Variable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestMemory::SetBool(class FName Variable, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestMemory", "SetBool");

	Params::QuestMemory_SetBool Parms{};

	Parms.Variable = Variable;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestMemory.SetFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Variable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestMemory::SetFloat(class FName Variable, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestMemory", "SetFloat");

	Params::QuestMemory_SetFloat Parms{};

	Parms.Variable = Variable;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestMemory.SetInteger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Variable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestMemory::SetInteger(class FName Variable, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestMemory", "SetInteger");

	Params::QuestMemory_SetInteger Parms{};

	Parms.Variable = Variable;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestMemory.GetBool
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Variable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestMemory::GetBool(class FName Variable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestMemory", "GetBool");

	Params::QuestMemory_GetBool Parms{};

	Parms.Variable = Variable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestMemory.GetFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Variable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQuestMemory::GetFloat(class FName Variable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestMemory", "GetFloat");

	Params::QuestMemory_GetFloat Parms{};

	Parms.Variable = Variable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestMemory.GetInteger
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Variable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQuestMemory::GetInteger(class FName Variable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestMemory", "GetInteger");

	Params::QuestMemory_GetInteger Parms{};

	Parms.Variable = Variable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestMemory.RunQuery
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQuestMemoryQuery                Query                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestMemory::RunQuery(const struct FQuestMemoryQuery& Query) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestMemory", "RunQuery");

	Params::QuestMemory_RunQuery Parms{};

	Parms.Query = std::move(Query);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestMessageComponent.BroadcastQuestMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     MessageTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestEventPayload               Payload                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UQuestMessageComponent::BroadcastQuestMessage(const struct FGameplayTag& MessageTag, const struct FQuestEventPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestMessageComponent", "BroadcastQuestMessage");

	Params::QuestMessageComponent_BroadcastQuestMessage Parms{};

	Parms.MessageTag = std::move(MessageTag);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestMessageComponent.SendQuestMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     MessageTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestEventPayload               Payload                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           Recipient                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestMessageComponent::SendQuestMessage(const struct FGameplayTag& MessageTag, const struct FQuestEventPayload& Payload, class AActor* Recipient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestMessageComponent", "SendQuestMessage");

	Params::QuestMessageComponent_SendQuestMessage Parms{};

	Parms.MessageTag = std::move(MessageTag);
	Parms.Payload = std::move(Payload);
	Parms.Recipient = Recipient;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestNode.GetCustomData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UQuestCustomData*           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UQuestCustomData* UQuestNode::GetCustomData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestNode", "GetCustomData");

	Params::QuestNode_GetCustomData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestNode.GetNodeGuid
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UQuestNode::GetNodeGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestNode", "GetNodeGuid");

	Params::QuestNode_GetNodeGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestNode.GetNodeIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQuestNode::GetNodeIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestNode", "GetNodeIndex");

	Params::QuestNode_GetNodeIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestNode.GetNodeText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQuestNode::GetNodeText(class UQuestContext* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestNode", "GetNodeText");

	Params::QuestNode_GetNodeText Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestNode_End.GetEndResultType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EQuestResult                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EQuestResult UQuestNode_End::GetEndResultType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestNode_End", "GetEndResultType");

	Params::QuestNode_End_GetEndResultType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestNode_Stage.FindObjectiveByName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Param_Name                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestObjective*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestObjective* UQuestNode_Stage::FindObjectiveByName(const class FName& Param_Name) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestNode_Stage", "FindObjectiveByName");

	Params::QuestNode_Stage_FindObjectiveByName Parms{};

	Parms.Param_Name = Param_Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestNode_Stage.GetAllObjectiveNames
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FName>                     OutNames                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuestNode_Stage::GetAllObjectiveNames(TArray<class FName>* OutNames) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestNode_Stage", "GetAllObjectiveNames");

	Params::QuestNode_Stage_GetAllObjectiveNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNames != nullptr)
		*OutNames = std::move(Parms.OutNames);
}


// Function QuestFramework.QuestObjective.HasTextArguments
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestObjective::HasTextArguments() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestObjective", "HasTextArguments");

	Params::QuestObjective_HasTextArguments Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestObjective.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestContext*                    Context                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestObjective::IsActive(const class UQuestContext* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestObjective", "IsActive");

	Params::QuestObjective_IsActive Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestObjectiveObserver.Evaluate
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EQuestResult                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EQuestResult UQuestObjectiveObserver::Evaluate(class UQuestContext* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestObjectiveObserver", "Evaluate");

	Params::QuestObjectiveObserver_Evaluate Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestService_BlueprintBase.OnServiceActivatedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestService_BlueprintBase::OnServiceActivatedBP(class UQuestContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestService_BlueprintBase", "OnServiceActivatedBP");

	Params::QuestService_BlueprintBase_OnServiceActivatedBP Parms{};

	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestFramework.QuestService_BlueprintBase.OnServiceDeactivatedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestService_BlueprintBase::OnServiceDeactivatedBP(class UQuestContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestService_BlueprintBase", "OnServiceDeactivatedBP");

	Params::QuestService_BlueprintBase_OnServiceDeactivatedBP Parms{};

	Parms.Context = Context;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestFramework.QuestService_BlueprintBase.TickServiceBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestService_BlueprintBase::TickServiceBP(class UQuestContext* Context, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestService_BlueprintBase", "TickServiceBP");

	Params::QuestService_BlueprintBase_TickServiceBP Parms{};

	Parms.Context = Context;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestFramework.QuestService_ListenMessage.OnMessageReceived
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     MessageTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestEventPayload               Payload                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           Sender                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestService_ListenMessage::OnMessageReceived(class UQuestContext* Context, const struct FGameplayTag& MessageTag, const struct FQuestEventPayload& Payload, class AActor* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestService_ListenMessage", "OnMessageReceived");

	Params::QuestService_ListenMessage_OnMessageReceived Parms{};

	Parms.Context = Context;
	Parms.MessageTag = std::move(MessageTag);
	Parms.Payload = std::move(Payload);
	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestFramework.QuestService_SyncVariable.GetBoolSyncValue
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestService_SyncVariable::GetBoolSyncValue(class UQuestContext* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestService_SyncVariable", "GetBoolSyncValue");

	Params::QuestService_SyncVariable_GetBoolSyncValue Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestService_SyncVariable.GetFloatSyncValue
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQuestService_SyncVariable::GetFloatSyncValue(class UQuestContext* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestService_SyncVariable", "GetFloatSyncValue");

	Params::QuestService_SyncVariable_GetFloatSyncValue Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestService_SyncVariable.GetIntegerSyncValue
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQuestService_SyncVariable::GetIntegerSyncValue(class UQuestContext* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestService_SyncVariable", "GetIntegerSyncValue");

	Params::QuestService_SyncVariable_GetIntegerSyncValue Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestTextArgument.GetText
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQuestTextArgument::GetText(class UQuestContext* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTextArgument", "GetText");

	Params::QuestTextArgument_GetText Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestTrackerComponent.AddSourceQuestComponent
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UQuestComponent*                  QuestComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::AddSourceQuestComponent(class UQuestComponent* QuestComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "AddSourceQuestComponent");

	Params::QuestTrackerComponent_AddSourceQuestComponent Parms{};

	Parms.QuestComponent = QuestComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestTrackerComponent.HandleOnQuestContextCreated
// (Final, Native, Protected)
// Parameters:
// class UQuestComponent*                  QuestComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::HandleOnQuestContextCreated(class UQuestComponent* QuestComponent, class UQuestContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "HandleOnQuestContextCreated");

	Params::QuestTrackerComponent_HandleOnQuestContextCreated Parms{};

	Parms.QuestComponent = QuestComponent;
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestTrackerComponent.HandleOnQuestContextSuspended
// (Final, Native, Protected)
// Parameters:
// class UQuestComponent*                  QuestComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::HandleOnQuestContextSuspended(class UQuestComponent* QuestComponent, class UQuestContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "HandleOnQuestContextSuspended");

	Params::QuestTrackerComponent_HandleOnQuestContextSuspended Parms{};

	Parms.QuestComponent = QuestComponent;
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestTrackerComponent.HandleOnQuestEnded
// (Final, Native, Protected)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::HandleOnQuestEnded(class UQuestContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "HandleOnQuestEnded");

	Params::QuestTrackerComponent_HandleOnQuestEnded Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestTrackerComponent.HandleOnQuestStarted
// (Final, Native, Protected)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::HandleOnQuestStarted(class UQuestContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "HandleOnQuestStarted");

	Params::QuestTrackerComponent_HandleOnQuestStarted Parms{};

	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestTrackerComponent.RefreshViewModel
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bTrackerViewModel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bQuestListViewModel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::RefreshViewModel(bool bTrackerViewModel, bool bQuestListViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "RefreshViewModel");

	Params::QuestTrackerComponent_RefreshViewModel Parms{};

	Parms.bTrackerViewModel = bTrackerViewModel;
	Parms.bQuestListViewModel = bQuestListViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestTrackerComponent.RemoveSourceQuestComponent
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UQuestComponent*                  QuestComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::RemoveSourceQuestComponent(class UQuestComponent* QuestComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "RemoveSourceQuestComponent");

	Params::QuestTrackerComponent_RemoveSourceQuestComponent Parms{};

	Parms.QuestComponent = QuestComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestTrackerComponent.StopTrackQuest
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UQuestContext*                    QuestContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::StopTrackQuest(class UQuestContext* QuestContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "StopTrackQuest");

	Params::QuestTrackerComponent_StopTrackQuest Parms{};

	Parms.QuestContext = QuestContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestTrackerComponent.TrackQuest
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UQuestContext*                    QuestContext                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::TrackQuest(class UQuestContext* QuestContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "TrackQuest");

	Params::QuestTrackerComponent_TrackQuest Parms{};

	Parms.QuestContext = QuestContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestTrackerComponent.GetAllQuestContexts
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestContext*>            OutContexts                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::GetAllQuestContexts(TArray<class UQuestContext*>* OutContexts) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "GetAllQuestContexts");

	Params::QuestTrackerComponent_GetAllQuestContexts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContexts != nullptr)
		*OutContexts = std::move(Parms.OutContexts);
}


// Function QuestFramework.QuestTrackerComponent.GetListViewModel
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestListViewModel*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestListViewModel* UQuestTrackerComponent::GetListViewModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "GetListViewModel");

	Params::QuestTrackerComponent_GetListViewModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestTrackerComponent.GetTrackedQuestContexts
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestContext*>            OutContexts                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuestTrackerComponent::GetTrackedQuestContexts(TArray<class UQuestContext*>* OutContexts) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "GetTrackedQuestContexts");

	Params::QuestTrackerComponent_GetTrackedQuestContexts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContexts != nullptr)
		*OutContexts = std::move(Parms.OutContexts);
}


// Function QuestFramework.QuestTrackerComponent.GetViewModel
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestTrackerViewModel*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestTrackerViewModel* UQuestTrackerComponent::GetViewModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerComponent", "GetViewModel");

	Params::QuestTrackerComponent_GetViewModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestTrackerViewModel.GetTrackedQuestContexts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestContextViewModel*>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuestContextViewModel*> UQuestTrackerViewModel::GetTrackedQuestContexts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestTrackerViewModel", "GetTrackedQuestContexts");

	Params::QuestTrackerViewModel_GetTrackedQuestContexts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.BroadcastQuestMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     MessageTag                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestEventPayload               Payload                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           Sender                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestUtilityLibrary::BroadcastQuestMessage(const class UObject* WorldContext, const struct FGameplayTag& MessageTag, const struct FQuestEventPayload& Payload, class AActor* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "BroadcastQuestMessage");

	Params::QuestUtilityLibrary_BroadcastQuestMessage Parms{};

	Parms.WorldContext = WorldContext;
	Parms.MessageTag = std::move(MessageTag);
	Parms.Payload = std::move(Payload);
	Parms.Sender = Sender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestUtilityLibrary.ConvertQuestResultToBool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EQuestResult                            InResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NotStarted                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InProgress                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Completed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Failed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestUtilityLibrary::ConvertQuestResultToBool(EQuestResult InResult, bool NotStarted, bool InProgress, bool Completed, bool Failed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "ConvertQuestResultToBool");

	Params::QuestUtilityLibrary_ConvertQuestResultToBool Parms{};

	Parms.InResult = InResult;
	Parms.NotStarted = NotStarted;
	Parms.InProgress = InProgress;
	Parms.Completed = Completed;
	Parms.Failed = Failed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.ConvertQuestResultToColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EQuestResult                            InResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     NotStarted                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InProgress                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Completed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Failed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UQuestUtilityLibrary::ConvertQuestResultToColor(EQuestResult InResult, const struct FLinearColor& NotStarted, const struct FLinearColor& InProgress, const struct FLinearColor& Completed, const struct FLinearColor& Failed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "ConvertQuestResultToColor");

	Params::QuestUtilityLibrary_ConvertQuestResultToColor Parms{};

	Parms.InResult = InResult;
	Parms.NotStarted = std::move(NotStarted);
	Parms.InProgress = std::move(InProgress);
	Parms.Completed = std::move(Completed);
	Parms.Failed = std::move(Failed);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.ConvertQuestResultToText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EQuestResult                            InResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             NotStarted                                             (Parm, NativeAccessSpecifierPublic)
// class FText                             InProgress                                             (Parm, NativeAccessSpecifierPublic)
// class FText                             Completed                                              (Parm, NativeAccessSpecifierPublic)
// class FText                             Failed                                                 (Parm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQuestUtilityLibrary::ConvertQuestResultToText(EQuestResult InResult, const class FText& NotStarted, const class FText& InProgress, const class FText& Completed, const class FText& Failed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "ConvertQuestResultToText");

	Params::QuestUtilityLibrary_ConvertQuestResultToText Parms{};

	Parms.InResult = InResult;
	Parms.NotStarted = std::move(NotStarted);
	Parms.InProgress = std::move(InProgress);
	Parms.Completed = std::move(Completed);
	Parms.Failed = std::move(Failed);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.FilterChangedObjectiveViewModels
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UQuestObjectiveViewModel*> OldList                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UQuestObjectiveViewModel*> NewList                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UQuestObjectiveViewModel*> OutAdded                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UQuestObjectiveViewModel*> OutRemoved                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuestUtilityLibrary::FilterChangedObjectiveViewModels(const TArray<class UQuestObjectiveViewModel*>& OldList, const TArray<class UQuestObjectiveViewModel*>& NewList, TArray<class UQuestObjectiveViewModel*>* OutAdded, TArray<class UQuestObjectiveViewModel*>* OutRemoved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "FilterChangedObjectiveViewModels");

	Params::QuestUtilityLibrary_FilterChangedObjectiveViewModels Parms{};

	Parms.OldList = std::move(OldList);
	Parms.NewList = std::move(NewList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAdded != nullptr)
		*OutAdded = std::move(Parms.OutAdded);

	if (OutRemoved != nullptr)
		*OutRemoved = std::move(Parms.OutRemoved);
}


// Function QuestFramework.QuestUtilityLibrary.FilterChangedQuestContextViewModels
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UQuestContextViewModel*>   OldList                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UQuestContextViewModel*>   NewList                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UQuestContextViewModel*>   OutAdded                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UQuestContextViewModel*>   OutRemoved                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UQuestUtilityLibrary::FilterChangedQuestContextViewModels(const TArray<class UQuestContextViewModel*>& OldList, const TArray<class UQuestContextViewModel*>& NewList, TArray<class UQuestContextViewModel*>* OutAdded, TArray<class UQuestContextViewModel*>* OutRemoved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "FilterChangedQuestContextViewModels");

	Params::QuestUtilityLibrary_FilterChangedQuestContextViewModels Parms{};

	Parms.OldList = std::move(OldList);
	Parms.NewList = std::move(NewList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAdded != nullptr)
		*OutAdded = std::move(Parms.OutAdded);

	if (OutRemoved != nullptr)
		*OutRemoved = std::move(Parms.OutRemoved);
}


// Function QuestFramework.QuestUtilityLibrary.FindRelevantQuestComponentFromActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestComponent* UQuestUtilityLibrary::FindRelevantQuestComponentFromActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "FindRelevantQuestComponentFromActor");

	Params::QuestUtilityLibrary_FindRelevantQuestComponentFromActor Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.FormatQuestText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FQuestText                       Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQuestUtilityLibrary::FormatQuestText(const struct FQuestText& Text, class UQuestContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "FormatQuestText");

	Params::QuestUtilityLibrary_FormatQuestText Parms{};

	Parms.Text = std::move(Text);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetGameModeQuestComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestComponent* UQuestUtilityLibrary::GetGameModeQuestComponent(const class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetGameModeQuestComponent");

	Params::QuestUtilityLibrary_GetGameModeQuestComponent Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetGameStateQuestComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestComponent* UQuestUtilityLibrary::GetGameStateQuestComponent(const class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetGameStateQuestComponent");

	Params::QuestUtilityLibrary_GetGameStateQuestComponent Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetPlayerQuestComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestComponent* UQuestUtilityLibrary::GetPlayerQuestComponent(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetPlayerQuestComponent");

	Params::QuestUtilityLibrary_GetPlayerQuestComponent Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetPlayerQuestListViewModel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestListViewModel*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestListViewModel* UQuestUtilityLibrary::GetPlayerQuestListViewModel(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetPlayerQuestListViewModel");

	Params::QuestUtilityLibrary_GetPlayerQuestListViewModel Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetPlayerQuestTrackerComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestTrackerComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestTrackerComponent* UQuestUtilityLibrary::GetPlayerQuestTrackerComponent(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetPlayerQuestTrackerComponent");

	Params::QuestUtilityLibrary_GetPlayerQuestTrackerComponent Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetPlayerQuestTrackerViewModel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestTrackerViewModel*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestTrackerViewModel* UQuestUtilityLibrary::GetPlayerQuestTrackerViewModel(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetPlayerQuestTrackerViewModel");

	Params::QuestUtilityLibrary_GetPlayerQuestTrackerViewModel Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetQuestComponentFromActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLookForComponent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestComponent* UQuestUtilityLibrary::GetQuestComponentFromActor(class AActor* Actor, bool bLookForComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetQuestComponentFromActor");

	Params::QuestUtilityLibrary_GetQuestComponentFromActor Parms{};

	Parms.Actor = Actor;
	Parms.bLookForComponent = bLookForComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetQuestTrackerComponentFromActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLookForComponent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestTrackerComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestTrackerComponent* UQuestUtilityLibrary::GetQuestTrackerComponentFromActor(class AActor* Actor, bool bLookForComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetQuestTrackerComponentFromActor");

	Params::QuestUtilityLibrary_GetQuestTrackerComponentFromActor Parms{};

	Parms.Actor = Actor;
	Parms.bLookForComponent = bLookForComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetQuestVariableValueAsBool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestVariable                   Variable                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuestUtilityLibrary::GetQuestVariableValueAsBool(class UQuestContext* Context, const struct FQuestVariable& Variable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetQuestVariableValueAsBool");

	Params::QuestUtilityLibrary_GetQuestVariableValueAsBool Parms{};

	Parms.Context = Context;
	Parms.Variable = std::move(Variable);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetQuestVariableValueAsFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestVariable                   Variable                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UQuestUtilityLibrary::GetQuestVariableValueAsFloat(class UQuestContext* Context, const struct FQuestVariable& Variable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetQuestVariableValueAsFloat");

	Params::QuestUtilityLibrary_GetQuestVariableValueAsFloat Parms{};

	Parms.Context = Context;
	Parms.Variable = std::move(Variable);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetQuestVariableValueAsInteger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestVariable                   Variable                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UQuestUtilityLibrary::GetQuestVariableValueAsInteger(class UQuestContext* Context, const struct FQuestVariable& Variable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetQuestVariableValueAsInteger");

	Params::QuestUtilityLibrary_GetQuestVariableValueAsInteger Parms{};

	Parms.Context = Context;
	Parms.Variable = std::move(Variable);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.GetSharedQuestComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestComponent* UQuestUtilityLibrary::GetSharedQuestComponent(const class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "GetSharedQuestComponent");

	Params::QuestUtilityLibrary_GetSharedQuestComponent Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function QuestFramework.QuestUtilityLibrary.SendQuestMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     MessageTag                                             (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestEventPayload               Payload                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           Recipient                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Sender                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestUtilityLibrary::SendQuestMessage(const class UObject* WorldContext, const struct FGameplayTag& MessageTag, const struct FQuestEventPayload& Payload, class AActor* Recipient, class AActor* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "SendQuestMessage");

	Params::QuestUtilityLibrary_SendQuestMessage Parms{};

	Parms.WorldContext = WorldContext;
	Parms.MessageTag = std::move(MessageTag);
	Parms.Payload = std::move(Payload);
	Parms.Recipient = Recipient;
	Parms.Sender = Sender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestUtilityLibrary.SetQuestVariableAsBool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestVariable                   Variable                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestUtilityLibrary::SetQuestVariableAsBool(class UQuestContext* Context, const struct FQuestVariable& Variable, bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "SetQuestVariableAsBool");

	Params::QuestUtilityLibrary_SetQuestVariableAsBool Parms{};

	Parms.Context = Context;
	Parms.Variable = std::move(Variable);
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestUtilityLibrary.SetQuestVariableAsFloat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestVariable                   Variable                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestUtilityLibrary::SetQuestVariableAsFloat(class UQuestContext* Context, const struct FQuestVariable& Variable, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "SetQuestVariableAsFloat");

	Params::QuestUtilityLibrary_SetQuestVariableAsFloat Parms{};

	Parms.Context = Context;
	Parms.Variable = std::move(Variable);
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function QuestFramework.QuestUtilityLibrary.SetQuestVariableAsInteger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UQuestContext*                    Context                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FQuestVariable                   Variable                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuestUtilityLibrary::SetQuestVariableAsInteger(class UQuestContext* Context, const struct FQuestVariable& Variable, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("QuestUtilityLibrary", "SetQuestVariableAsInteger");

	Params::QuestUtilityLibrary_SetQuestVariableAsInteger Parms{};

	Parms.Context = Context;
	Parms.Variable = std::move(Variable);
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

