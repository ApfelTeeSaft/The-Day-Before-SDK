#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BunkerAreaV2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "RespawnArea_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BunkerAreaV2.BunkerAreaV2_C
// 0x0118 (0x03C8 - 0x02B0)
class ABunkerAreaV2_C final : public ARespawnArea_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BunkerAreaV2_C;                     // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Spawn;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ASurvivalPlayer_C*>              Players;                                           // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        Radius;                                            // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FinalRadius;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 BunkerID;                                          // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      LocalPlayer;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasInitialLightColor;                              // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           InitialLightColor;                                 // 0x030C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALight*>                         Lights;                                            // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          HasEnabledColor;                                   // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           EnabledColor;                                      // 0x0334(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DisabledColor;                                     // 0x0344(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           WarningColor;                                      // 0x0354(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasCustomAmbient;                                  // 0x0364(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class ASurvivalPlayer_C*, struct FVector> PlayerRespawnMap;                                  // 0x0368(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ASquare_lamp_Blueprint_C*>       SquareLamps;                                       // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)

public:
	void AddPlayerRespawnPoint(class ASurvivalPlayer_C* Player);
	void ConfigureEnabledLights();
	void ConfigureInitialLights();
	void DisableLights();
	void EnableLights();
	void ExecuteUbergraph_BunkerAreaV2(int32 EntryPoint);
	void GeenratorEnabledClientSide();
	void OnGeneratorEnabled(class ASurvivalPlayer_C* Player);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RemovePlayerRespawnPoint(class ASurvivalPlayer_C* Player);
	void SetLightsColor(const struct FLinearColor& Color);
	void SubscribeToGenerator(class AElectricityGenerator_C* Generator);
	void SwitchToMainQuests();
	void SwitchToSideQuests();
	void WarningLights();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BunkerAreaV2_C">();
	}
	static class ABunkerAreaV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABunkerAreaV2_C>();
	}
};
static_assert(alignof(ABunkerAreaV2_C) == 0x000008, "Wrong alignment on ABunkerAreaV2_C");
static_assert(sizeof(ABunkerAreaV2_C) == 0x0003C8, "Wrong size on ABunkerAreaV2_C");
static_assert(offsetof(ABunkerAreaV2_C, UberGraphFrame_BunkerAreaV2_C) == 0x0002B0, "Member 'ABunkerAreaV2_C::UberGraphFrame_BunkerAreaV2_C' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, Spawn) == 0x0002B8, "Member 'ABunkerAreaV2_C::Spawn' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, Players) == 0x0002C0, "Member 'ABunkerAreaV2_C::Players' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, Radius) == 0x0002D0, "Member 'ABunkerAreaV2_C::Radius' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, FinalRadius) == 0x0002D8, "Member 'ABunkerAreaV2_C::FinalRadius' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, Distance) == 0x0002E0, "Member 'ABunkerAreaV2_C::Distance' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, Alpha) == 0x0002E8, "Member 'ABunkerAreaV2_C::Alpha' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, BunkerID) == 0x0002F0, "Member 'ABunkerAreaV2_C::BunkerID' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, LocalPlayer) == 0x000300, "Member 'ABunkerAreaV2_C::LocalPlayer' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, HasInitialLightColor) == 0x000308, "Member 'ABunkerAreaV2_C::HasInitialLightColor' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, InitialLightColor) == 0x00030C, "Member 'ABunkerAreaV2_C::InitialLightColor' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, Lights) == 0x000320, "Member 'ABunkerAreaV2_C::Lights' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, HasEnabledColor) == 0x000330, "Member 'ABunkerAreaV2_C::HasEnabledColor' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, EnabledColor) == 0x000334, "Member 'ABunkerAreaV2_C::EnabledColor' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, DisabledColor) == 0x000344, "Member 'ABunkerAreaV2_C::DisabledColor' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, WarningColor) == 0x000354, "Member 'ABunkerAreaV2_C::WarningColor' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, HasCustomAmbient) == 0x000364, "Member 'ABunkerAreaV2_C::HasCustomAmbient' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, PlayerRespawnMap) == 0x000368, "Member 'ABunkerAreaV2_C::PlayerRespawnMap' has a wrong offset!");
static_assert(offsetof(ABunkerAreaV2_C, SquareLamps) == 0x0003B8, "Member 'ABunkerAreaV2_C::SquareLamps' has a wrong offset!");

}

