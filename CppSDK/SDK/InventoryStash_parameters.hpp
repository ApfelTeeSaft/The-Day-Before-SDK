#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventoryStash

#include "Basic.hpp"

#include "ContainerPickupsInfo_structs.hpp"
#include "E_ActorType_structs.hpp"
#include "MpContentRep_structs.hpp"
#include "DefaultItemInfo_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_LootChanceModifier_structs.hpp"


namespace SDK::Params
{

// Function InventoryStash.InventoryStash_C.BuildData (OnlyServer)
// 0x0828 (0x0828 - 0x0000)
struct InventoryStash_C_BuildData__OnlyServer_ final
{
public:
	struct FS_LootChanceModifier                  LootChanceMod;                                     // 0x0000(0x0009)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReMinusBuild;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UniqueId;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddedTo;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             PInfo;                                             // 0x0018(0x0220)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0258(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlindAddNewItemToContainer_Added;         // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BlindAddNewItemToContainer_ToSlotIndex;   // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BlindAddNewItemToContainer_UniqueId;      // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlindAddNewItemToContainer_Added_1;       // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BlindAddNewItemToContainer_ToSlotIndex_1; // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BlindAddNewItemToContainer_UniqueId_1;    // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_MakeStruct_ContainerPickupsInfo;            // 0x02B8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_SetFieldsInStruct_StructOut;                // 0x0320(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       CallFunc_Array_Get_Item;                           // 0x0390(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6[0x2];                                      // 0x03D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x03D8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F9[0x3];                                      // 0x05F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_SetFieldsInStruct_StructOut_1;              // 0x0608(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(InventoryStash_C_BuildData__OnlyServer_) == 0x000008, "Wrong alignment on InventoryStash_C_BuildData__OnlyServer_");
static_assert(sizeof(InventoryStash_C_BuildData__OnlyServer_) == 0x000828, "Wrong size on InventoryStash_C_BuildData__OnlyServer_");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, LootChanceMod) == 0x000000, "Member 'InventoryStash_C_BuildData__OnlyServer_::LootChanceMod' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, ReMinusBuild) == 0x000009, "Member 'InventoryStash_C_BuildData__OnlyServer_::ReMinusBuild' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, UniqueId) == 0x00000C, "Member 'InventoryStash_C_BuildData__OnlyServer_::UniqueId' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, AddedTo) == 0x000010, "Member 'InventoryStash_C_BuildData__OnlyServer_::AddedTo' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, PInfo) == 0x000018, "Member 'InventoryStash_C_BuildData__OnlyServer_::PInfo' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, Temp_int_Array_Index_Variable) == 0x000238, "Member 'InventoryStash_C_BuildData__OnlyServer_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_Not_PreBool_ReturnValue) == 0x00023C, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_BreakVector2D_X) == 0x000240, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_BreakVector2D_Y) == 0x000248, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_FTrunc_ReturnValue) == 0x000250, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_FTrunc_ReturnValue_1) == 0x000254, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, K2Node_MakeArray_Array) == 0x000258, "Member 'InventoryStash_C_BuildData__OnlyServer_::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, Temp_int_Loop_Counter_Variable) == 0x000268, "Member 'InventoryStash_C_BuildData__OnlyServer_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_Add_IntInt_ReturnValue) == 0x00026C, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_BreakVector2D_X_1) == 0x000270, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_BreakVector2D_Y_1) == 0x000278, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000280, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_MakeVector2D_ReturnValue) == 0x000288, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_BlindAddNewItemToContainer_Added) == 0x000298, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_BlindAddNewItemToContainer_Added' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_BlindAddNewItemToContainer_ToSlotIndex) == 0x00029C, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_BlindAddNewItemToContainer_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_BlindAddNewItemToContainer_UniqueId) == 0x0002A0, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_BlindAddNewItemToContainer_UniqueId' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_BlindAddNewItemToContainer_Added_1) == 0x0002A4, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_BlindAddNewItemToContainer_Added_1' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_BlindAddNewItemToContainer_ToSlotIndex_1) == 0x0002A8, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_BlindAddNewItemToContainer_ToSlotIndex_1' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_BlindAddNewItemToContainer_UniqueId_1) == 0x0002AC, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_BlindAddNewItemToContainer_UniqueId_1' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_IsValid_ReturnValue) == 0x0002B0, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, K2Node_MakeStruct_ContainerPickupsInfo) == 0x0002B8, "Member 'InventoryStash_C_BuildData__OnlyServer_::K2Node_MakeStruct_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, K2Node_SetFieldsInStruct_StructOut) == 0x000320, "Member 'InventoryStash_C_BuildData__OnlyServer_::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_Array_Add_ReturnValue) == 0x000388, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_Array_Get_Item) == 0x000390, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_Array_Length_ReturnValue) == 0x0003D0, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_Less_IntInt_ReturnValue) == 0x0003D4, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_Greater_IntInt_ReturnValue) == 0x0003D5, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_GetDataTableRowFromName_OutRow) == 0x0003D8, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0005F8, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_Array_Add_ReturnValue_1) == 0x0005FC, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, CallFunc_SelectInt_ReturnValue) == 0x000600, "Member 'InventoryStash_C_BuildData__OnlyServer_::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_BuildData__OnlyServer_, K2Node_SetFieldsInStruct_StructOut_1) == 0x000608, "Member 'InventoryStash_C_BuildData__OnlyServer_::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");

// Function InventoryStash.InventoryStash_C.ExecuteUbergraph_InventoryStash
// 0x00A0 (0x00A0 - 0x0000)
struct InventoryStash_C_ExecuteUbergraph_InventoryStash final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ToContainerUID_1;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_Event_PickupItem;                           // 0x0008(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_Event_ToSlot;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ContainerUID;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ItemUID_1;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ItemUID;                              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ToContainerUID;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ToIndex;                              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Rotated_;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsContainer;                          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWorker_C*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryStash_C_ExecuteUbergraph_InventoryStash) == 0x000008, "Wrong alignment on InventoryStash_C_ExecuteUbergraph_InventoryStash");
static_assert(sizeof(InventoryStash_C_ExecuteUbergraph_InventoryStash) == 0x0000A0, "Wrong size on InventoryStash_C_ExecuteUbergraph_InventoryStash");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, EntryPoint) == 0x000000, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::EntryPoint' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, K2Node_Event_ToContainerUID_1) == 0x000004, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::K2Node_Event_ToContainerUID_1' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, K2Node_Event_PickupItem) == 0x000008, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::K2Node_Event_PickupItem' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, K2Node_Event_ToSlot) == 0x000070, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::K2Node_Event_ToSlot' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, K2Node_Event_ContainerUID) == 0x000074, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::K2Node_Event_ContainerUID' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, K2Node_Event_ItemUID_1) == 0x000078, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::K2Node_Event_ItemUID_1' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, K2Node_Event_ItemUID) == 0x00007C, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::K2Node_Event_ItemUID' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, K2Node_Event_ToContainerUID) == 0x000080, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::K2Node_Event_ToContainerUID' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, K2Node_Event_ToIndex) == 0x000084, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::K2Node_Event_ToIndex' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, K2Node_Event_Rotated_) == 0x000088, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::K2Node_Event_Rotated_' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, K2Node_Event_IsContainer) == 0x000089, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::K2Node_Event_IsContainer' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, CallFunc_HasAuthority_ReturnValue) == 0x00008A, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, CallFunc_GetComponentByClass_ReturnValue) == 0x000090, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_ExecuteUbergraph_InventoryStash, CallFunc_HasAuthority_ReturnValue_1) == 0x000098, "Member 'InventoryStash_C_ExecuteUbergraph_InventoryStash::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");

// Function InventoryStash.InventoryStash_C.GetReplicatedData (OnlyServer)
// 0x0060 (0x0060 - 0x0000)
struct InventoryStash_C_GetReplicatedData__OnlyServer_ final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LootChanceModifier                  LootChanceMod;                                     // 0x0008(0x0009)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMpContentRep                          Data;                                              // 0x0018(0x0020)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMpContentRep                          K2Node_MakeStruct_MpContentRep;                    // 0x0040(0x0020)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(InventoryStash_C_GetReplicatedData__OnlyServer_) == 0x000008, "Wrong alignment on InventoryStash_C_GetReplicatedData__OnlyServer_");
static_assert(sizeof(InventoryStash_C_GetReplicatedData__OnlyServer_) == 0x000060, "Wrong size on InventoryStash_C_GetReplicatedData__OnlyServer_");
static_assert(offsetof(InventoryStash_C_GetReplicatedData__OnlyServer_, Player) == 0x000000, "Member 'InventoryStash_C_GetReplicatedData__OnlyServer_::Player' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_GetReplicatedData__OnlyServer_, LootChanceMod) == 0x000008, "Member 'InventoryStash_C_GetReplicatedData__OnlyServer_::LootChanceMod' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_GetReplicatedData__OnlyServer_, Data) == 0x000018, "Member 'InventoryStash_C_GetReplicatedData__OnlyServer_::Data' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_GetReplicatedData__OnlyServer_, Temp_bool_Has_Been_Initd_Variable) == 0x000038, "Member 'InventoryStash_C_GetReplicatedData__OnlyServer_::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_GetReplicatedData__OnlyServer_, CallFunc_HasAuthority_ReturnValue) == 0x000039, "Member 'InventoryStash_C_GetReplicatedData__OnlyServer_::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_GetReplicatedData__OnlyServer_, Temp_bool_IsClosed_Variable) == 0x00003A, "Member 'InventoryStash_C_GetReplicatedData__OnlyServer_::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_GetReplicatedData__OnlyServer_, K2Node_MakeStruct_MpContentRep) == 0x000040, "Member 'InventoryStash_C_GetReplicatedData__OnlyServer_::K2Node_MakeStruct_MpContentRep' has a wrong offset!");

// Function InventoryStash.InventoryStash_C.InMPCMoveItem
// 0x0010 (0x0010 - 0x0000)
struct InventoryStash_C_InMPCMoveItem final
{
public:
	int32                                         ItemUID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToContainerUID;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer;                                       // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryStash_C_InMPCMoveItem) == 0x000004, "Wrong alignment on InventoryStash_C_InMPCMoveItem");
static_assert(sizeof(InventoryStash_C_InMPCMoveItem) == 0x000010, "Wrong size on InventoryStash_C_InMPCMoveItem");
static_assert(offsetof(InventoryStash_C_InMPCMoveItem, ItemUID) == 0x000000, "Member 'InventoryStash_C_InMPCMoveItem::ItemUID' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_InMPCMoveItem, ToContainerUID) == 0x000004, "Member 'InventoryStash_C_InMPCMoveItem::ToContainerUID' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_InMPCMoveItem, ToIndex) == 0x000008, "Member 'InventoryStash_C_InMPCMoveItem::ToIndex' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_InMPCMoveItem, Rotated_) == 0x00000C, "Member 'InventoryStash_C_InMPCMoveItem::Rotated_' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_InMPCMoveItem, IsContainer) == 0x00000D, "Member 'InventoryStash_C_InMPCMoveItem::IsContainer' has a wrong offset!");

// Function InventoryStash.InventoryStash_C.MC_AddNewItemToContainer
// 0x0078 (0x0078 - 0x0000)
struct InventoryStash_C_MC_AddNewItemToContainer final
{
public:
	int32                                         ToContainerUID;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  PickupItem;                                        // 0x0008(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ToSlot;                                            // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryStash_C_MC_AddNewItemToContainer) == 0x000008, "Wrong alignment on InventoryStash_C_MC_AddNewItemToContainer");
static_assert(sizeof(InventoryStash_C_MC_AddNewItemToContainer) == 0x000078, "Wrong size on InventoryStash_C_MC_AddNewItemToContainer");
static_assert(offsetof(InventoryStash_C_MC_AddNewItemToContainer, ToContainerUID) == 0x000000, "Member 'InventoryStash_C_MC_AddNewItemToContainer::ToContainerUID' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_MC_AddNewItemToContainer, PickupItem) == 0x000008, "Member 'InventoryStash_C_MC_AddNewItemToContainer::PickupItem' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_MC_AddNewItemToContainer, ToSlot) == 0x000070, "Member 'InventoryStash_C_MC_AddNewItemToContainer::ToSlot' has a wrong offset!");

// Function InventoryStash.InventoryStash_C.MC_RemoveItem
// 0x0008 (0x0008 - 0x0000)
struct InventoryStash_C_MC_RemoveItem final
{
public:
	int32                                         ContainerUID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemUID;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryStash_C_MC_RemoveItem) == 0x000004, "Wrong alignment on InventoryStash_C_MC_RemoveItem");
static_assert(sizeof(InventoryStash_C_MC_RemoveItem) == 0x000008, "Wrong size on InventoryStash_C_MC_RemoveItem");
static_assert(offsetof(InventoryStash_C_MC_RemoveItem, ContainerUID) == 0x000000, "Member 'InventoryStash_C_MC_RemoveItem::ContainerUID' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_MC_RemoveItem, ItemUID) == 0x000004, "Member 'InventoryStash_C_MC_RemoveItem::ItemUID' has a wrong offset!");

// Function InventoryStash.InventoryStash_C.MPCRemoveItem
// 0x0008 (0x0008 - 0x0000)
struct InventoryStash_C_MPCRemoveItem final
{
public:
	int32                                         Uid;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer_;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shop;                                              // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Removed;                                           // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MPCRemoveItem_Removed;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryStash_C_MPCRemoveItem) == 0x000004, "Wrong alignment on InventoryStash_C_MPCRemoveItem");
static_assert(sizeof(InventoryStash_C_MPCRemoveItem) == 0x000008, "Wrong size on InventoryStash_C_MPCRemoveItem");
static_assert(offsetof(InventoryStash_C_MPCRemoveItem, Uid) == 0x000000, "Member 'InventoryStash_C_MPCRemoveItem::Uid' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_MPCRemoveItem, IsContainer_) == 0x000004, "Member 'InventoryStash_C_MPCRemoveItem::IsContainer_' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_MPCRemoveItem, Shop) == 0x000005, "Member 'InventoryStash_C_MPCRemoveItem::Shop' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_MPCRemoveItem, Removed) == 0x000006, "Member 'InventoryStash_C_MPCRemoveItem::Removed' has a wrong offset!");
static_assert(offsetof(InventoryStash_C_MPCRemoveItem, CallFunc_MPCRemoveItem_Removed) == 0x000007, "Member 'InventoryStash_C_MPCRemoveItem::CallFunc_MPCRemoveItem_Removed' has a wrong offset!");

// Function InventoryStash.InventoryStash_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct InventoryStash_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryStash_C_GetActorType) == 0x000001, "Wrong alignment on InventoryStash_C_GetActorType");
static_assert(sizeof(InventoryStash_C_GetActorType) == 0x000001, "Wrong size on InventoryStash_C_GetActorType");
static_assert(offsetof(InventoryStash_C_GetActorType, ActorType) == 0x000000, "Member 'InventoryStash_C_GetActorType::ActorType' has a wrong offset!");

}

