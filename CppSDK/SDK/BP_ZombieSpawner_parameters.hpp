#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZombieSpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Survival_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DayCycleState_structs.hpp"
#include "AreaPropertiesUpdated_structs.hpp"


namespace SDK::Params
{

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.AddArea
// 0x0320 (0x0320 - 0x0000)
struct BP_ZombieSpawner_C_AddArea final
{
public:
	struct FAreaPropertiesUpdated                 AreaProperties;                                    // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RelativeTransform;                                 // 0x00D0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RelativeRotation;                                  // 0x0130(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                RelativeLocation;                                  // 0x0148(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Extent;                                            // 0x0160(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowCurrentWorkingArea;                            // 0x0178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          BoxArea;                                           // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0190(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue_1;               // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0270(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_AddArea) == 0x000010, "Wrong alignment on BP_ZombieSpawner_C_AddArea");
static_assert(sizeof(BP_ZombieSpawner_C_AddArea) == 0x000320, "Wrong size on BP_ZombieSpawner_C_AddArea");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, AreaProperties) == 0x000000, "Member 'BP_ZombieSpawner_C_AddArea::AreaProperties' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, RelativeTransform) == 0x0000D0, "Member 'BP_ZombieSpawner_C_AddArea::RelativeTransform' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, RelativeRotation) == 0x000130, "Member 'BP_ZombieSpawner_C_AddArea::RelativeRotation' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, RelativeLocation) == 0x000148, "Member 'BP_ZombieSpawner_C_AddArea::RelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, Extent) == 0x000160, "Member 'BP_ZombieSpawner_C_AddArea::Extent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, ShowCurrentWorkingArea) == 0x000178, "Member 'BP_ZombieSpawner_C_AddArea::ShowCurrentWorkingArea' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, BoxArea) == 0x000180, "Member 'BP_ZombieSpawner_C_AddArea::BoxArea' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, Temp_struct_Variable) == 0x000190, "Member 'BP_ZombieSpawner_C_AddArea::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_BreakVector_X) == 0x0001F0, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_BreakVector_Y) == 0x0001F8, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_BreakVector_Z) == 0x000200, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_MakeVector_ReturnValue) == 0x000208, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_AddComponent_ReturnValue) == 0x000220, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_AddComponent_ReturnValue_1) == 0x000228, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_Add_VectorVector_ReturnValue) == 0x000230, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_BooleanOR_ReturnValue) == 0x000248, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000250, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_MakeTransform_ReturnValue) == 0x000270, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0002D0, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_RandomFloatInRange_ReturnValue) == 0x0002D8, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002E0, "Member 'BP_ZombieSpawner_C_AddArea::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, K2Node_MakeStruct_LinearColor) == 0x0002F8, "Member 'BP_ZombieSpawner_C_AddArea::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, K2Node_MakeStruct_R_ImplicitCast) == 0x000308, "Member 'BP_ZombieSpawner_C_AddArea::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, K2Node_MakeStruct_G_ImplicitCast) == 0x00030C, "Member 'BP_ZombieSpawner_C_AddArea::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddArea, K2Node_MakeStruct_B_ImplicitCast) == 0x000310, "Member 'BP_ZombieSpawner_C_AddArea::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.AddPlayerCheckArea
// 0x0350 (0x0350 - 0x0000)
struct BP_ZombieSpawner_C_AddPlayerCheckArea final
{
public:
	struct FAreaPropertiesUpdated                 Area;                                              // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ConnectedAreaRelativeTransform;                    // 0x00D0(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CheckBoxArea;                                      // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x01B0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x029C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x02AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02BC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue;                 // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_AddPlayerCheckArea) == 0x000010, "Wrong alignment on BP_ZombieSpawner_C_AddPlayerCheckArea");
static_assert(sizeof(BP_ZombieSpawner_C_AddPlayerCheckArea) == 0x000350, "Wrong size on BP_ZombieSpawner_C_AddPlayerCheckArea");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, Area) == 0x000000, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::Area' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, ConnectedAreaRelativeTransform) == 0x0000D0, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::ConnectedAreaRelativeTransform' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CheckBoxArea) == 0x000130, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CheckBoxArea' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_BreakTransform_Location) == 0x000138, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_BreakTransform_Rotation) == 0x000150, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_BreakTransform_Scale) == 0x000168, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000180, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_Add_VectorVector_ReturnValue) == 0x000198, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0001B0, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_Array_Add_ReturnValue) == 0x000298, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, K2Node_CreateDelegate_OutputDelegate) == 0x00029C, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002AC, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, Temp_int_Variable) == 0x0002BC, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_Array_Add_ReturnValue_1) == 0x0002C0, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_ComposeRotators_ReturnValue) == 0x0002C8, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_MakeTransform_ReturnValue) == 0x0002E0, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AddPlayerCheckArea, CallFunc_AddComponent_ReturnValue) == 0x000340, "Member 'BP_ZombieSpawner_C_AddPlayerCheckArea::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.All Areas Occupied
// 0x0010 (0x0010 - 0x0000)
struct BP_ZombieSpawner_C_All_Areas_Occupied final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_All_Areas_Occupied) == 0x000004, "Wrong alignment on BP_ZombieSpawner_C_All_Areas_Occupied");
static_assert(sizeof(BP_ZombieSpawner_C_All_Areas_Occupied) == 0x000010, "Wrong size on BP_ZombieSpawner_C_All_Areas_Occupied");
static_assert(offsetof(BP_ZombieSpawner_C_All_Areas_Occupied, ReturnValue) == 0x000000, "Member 'BP_ZombieSpawner_C_All_Areas_Occupied::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_All_Areas_Occupied, Temp_int_Variable) == 0x000004, "Member 'BP_ZombieSpawner_C_All_Areas_Occupied::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_All_Areas_Occupied, CallFunc_Array_Find_ReturnValue) == 0x000008, "Member 'BP_ZombieSpawner_C_All_Areas_Occupied::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_All_Areas_Occupied, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ZombieSpawner_C_All_Areas_Occupied::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.AnotherZombieInSpawnPoint
// 0x0178 (0x0178 - 0x0000)
struct BP_ZombieSpawner_C_AnotherZombieInSpawnPoint final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HalfHeight;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleForObjects_OutHit;      // 0x0080(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleForObjects_ReturnValue; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_AnotherZombieInSpawnPoint");
static_assert(sizeof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint) == 0x000178, "Wrong size on BP_ZombieSpawner_C_AnotherZombieInSpawnPoint");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, SpawnLocation) == 0x000000, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, ReturnValue) == 0x000018, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, HalfHeight) == 0x00001C, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::HalfHeight' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, Radius) == 0x000020, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::Radius' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, Temp_object_Variable) == 0x000028, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, CallFunc_CapsuleTraceSingleForObjects_OutHit) == 0x000080, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::CallFunc_CapsuleTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, CallFunc_CapsuleTraceSingleForObjects_ReturnValue) == 0x000168, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::CallFunc_CapsuleTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AnotherZombieInSpawnPoint, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000170, "Member 'BP_ZombieSpawner_C_AnotherZombieInSpawnPoint::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.AreaIsEmptyFromPlayers
// 0x0008 (0x0008 - 0x0000)
struct BP_ZombieSpawner_C_AreaIsEmptyFromPlayers final
{
public:
	int32                                         AreaIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_AreaIsEmptyFromPlayers) == 0x000004, "Wrong alignment on BP_ZombieSpawner_C_AreaIsEmptyFromPlayers");
static_assert(sizeof(BP_ZombieSpawner_C_AreaIsEmptyFromPlayers) == 0x000008, "Wrong size on BP_ZombieSpawner_C_AreaIsEmptyFromPlayers");
static_assert(offsetof(BP_ZombieSpawner_C_AreaIsEmptyFromPlayers, AreaIndex) == 0x000000, "Member 'BP_ZombieSpawner_C_AreaIsEmptyFromPlayers::AreaIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AreaIsEmptyFromPlayers, ReturnValue) == 0x000004, "Member 'BP_ZombieSpawner_C_AreaIsEmptyFromPlayers::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_AreaIsEmptyFromPlayers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_ZombieSpawner_C_AreaIsEmptyFromPlayers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ZombieSpawner_C_BndEvt__BP_ZombieSpawner_BoxTriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.CheckShouldSpawnAntiCamp
// 0x0010 (0x0010 - 0x0000)
struct BP_ZombieSpawner_C_CheckShouldSpawnAntiCamp final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_CheckShouldSpawnAntiCamp) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_CheckShouldSpawnAntiCamp");
static_assert(sizeof(BP_ZombieSpawner_C_CheckShouldSpawnAntiCamp) == 0x000010, "Wrong size on BP_ZombieSpawner_C_CheckShouldSpawnAntiCamp");
static_assert(offsetof(BP_ZombieSpawner_C_CheckShouldSpawnAntiCamp, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'BP_ZombieSpawner_C_CheckShouldSpawnAntiCamp::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_CheckShouldSpawnAntiCamp, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_ZombieSpawner_C_CheckShouldSpawnAntiCamp::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ConfigureAnimType
// 0x00D0 (0x00D0 - 0x0000)
struct BP_ZombieSpawner_C_ConfigureAnimType final
{
public:
	struct FAreaPropertiesUpdated                 Area;                                              // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	EZombieAnimType                               ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               Temp_byte_Variable;                                // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               Temp_byte_Variable_1;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_DetermineZombieAnimType_ReturnValue;      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               K2Node_Select_Default;                             // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_ConfigureAnimType) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_ConfigureAnimType");
static_assert(sizeof(BP_ZombieSpawner_C_ConfigureAnimType) == 0x0000D0, "Wrong size on BP_ZombieSpawner_C_ConfigureAnimType");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureAnimType, Area) == 0x000000, "Member 'BP_ZombieSpawner_C_ConfigureAnimType::Area' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureAnimType, ReturnValue) == 0x0000C8, "Member 'BP_ZombieSpawner_C_ConfigureAnimType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureAnimType, Temp_bool_Variable) == 0x0000C9, "Member 'BP_ZombieSpawner_C_ConfigureAnimType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureAnimType, Temp_byte_Variable) == 0x0000CA, "Member 'BP_ZombieSpawner_C_ConfigureAnimType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureAnimType, Temp_byte_Variable_1) == 0x0000CB, "Member 'BP_ZombieSpawner_C_ConfigureAnimType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureAnimType, CallFunc_DetermineZombieAnimType_ReturnValue) == 0x0000CC, "Member 'BP_ZombieSpawner_C_ConfigureAnimType::CallFunc_DetermineZombieAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureAnimType, CallFunc_IsValid_ReturnValue) == 0x0000CD, "Member 'BP_ZombieSpawner_C_ConfigureAnimType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureAnimType, CallFunc_RandomBool_ReturnValue) == 0x0000CE, "Member 'BP_ZombieSpawner_C_ConfigureAnimType::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureAnimType, K2Node_Select_Default) == 0x0000CF, "Member 'BP_ZombieSpawner_C_ConfigureAnimType::K2Node_Select_Default' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ConfigureRotation
// 0x0160 (0x0160 - 0x0000)
struct BP_ZombieSpawner_C_ConfigureRotation final
{
public:
	struct FAreaPropertiesUpdated                 Area;                                              // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x00C8(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAxis_ReturnValue;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_ConfigureRotation) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_ConfigureRotation");
static_assert(sizeof(BP_ZombieSpawner_C_ConfigureRotation) == 0x000160, "Wrong size on BP_ZombieSpawner_C_ConfigureRotation");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, Area) == 0x000000, "Member 'BP_ZombieSpawner_C_ConfigureRotation::Area' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, ReturnValue) == 0x0000C8, "Member 'BP_ZombieSpawner_C_ConfigureRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000E0, "Member 'BP_ZombieSpawner_C_ConfigureRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000F8, "Member 'BP_ZombieSpawner_C_ConfigureRotation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, CallFunc_ComposeRotators_ReturnValue) == 0x000100, "Member 'BP_ZombieSpawner_C_ConfigureRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, CallFunc_MakeRotator_ReturnValue) == 0x000118, "Member 'BP_ZombieSpawner_C_ConfigureRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, CallFunc_BreakRotator_Roll) == 0x000130, "Member 'BP_ZombieSpawner_C_ConfigureRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, CallFunc_BreakRotator_Pitch) == 0x000134, "Member 'BP_ZombieSpawner_C_ConfigureRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, CallFunc_BreakRotator_Yaw) == 0x000138, "Member 'BP_ZombieSpawner_C_ConfigureRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, CallFunc_ClampAxis_ReturnValue) == 0x00013C, "Member 'BP_ZombieSpawner_C_ConfigureRotation::CallFunc_ClampAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, CallFunc_MakeRotator_ReturnValue_1) == 0x000140, "Member 'BP_ZombieSpawner_C_ConfigureRotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureRotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000158, "Member 'BP_ZombieSpawner_C_ConfigureRotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ConfigureZombieAndMeshType
// 0x0108 (0x0108 - 0x0000)
struct BP_ZombieSpawner_C_ConfigureZombieAndMeshType final
{
public:
	struct FAreaPropertiesUpdated                 Area;                                              // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	EZombieType                                   ZombieType;                                        // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MeshType;                                          // 0x00CC(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   ResultZombieType;                                  // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   Temp_byte_Variable;                                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GenerateSoldierMeshType_MeshType;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_SpawnNightZombie_ReturnValue;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue;         // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue_1;       // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GenerateNightMeshType_MeshType;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GenerateDayMeshType_MeshType;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GenerateNightMeshType_MeshType_1;         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GenerateDayMeshType_MeshType_1;           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidNightConditions_ReturnValue;         // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidNightConditions_ReturnValue_1;       // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_ConfigureZombieAndMeshType");
static_assert(sizeof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType) == 0x000108, "Wrong size on BP_ZombieSpawner_C_ConfigureZombieAndMeshType");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, Area) == 0x000000, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::Area' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, ZombieType) == 0x0000C8, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::ZombieType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, MeshType) == 0x0000CC, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::MeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, ResultZombieType) == 0x0000D0, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::ResultZombieType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, Temp_byte_Variable) == 0x0000D1, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, Temp_int_Variable) == 0x0000D4, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, Temp_int_Variable_1) == 0x0000D8, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, Temp_int_Variable_2) == 0x0000DC, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, Temp_int_Variable_3) == 0x0000E0, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, Temp_int_Variable_4) == 0x0000E4, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_GenerateSoldierMeshType_MeshType) == 0x0000E8, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_GenerateSoldierMeshType_MeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_SpawnNightZombie_ReturnValue) == 0x0000EC, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_SpawnNightZombie_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_GetChanceIsLowerThan_ReturnValue) == 0x0000ED, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_GetChanceIsLowerThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_GetChanceIsLowerThan_ReturnValue_1) == 0x0000EE, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_GetChanceIsLowerThan_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_GenerateNightMeshType_MeshType) == 0x0000F0, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_GenerateNightMeshType_MeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_GenerateDayMeshType_MeshType) == 0x0000F4, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_GenerateDayMeshType_MeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_GenerateNightMeshType_MeshType_1) == 0x0000F8, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_GenerateNightMeshType_MeshType_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_GenerateDayMeshType_MeshType_1) == 0x0000FC, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_GenerateDayMeshType_MeshType_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, K2Node_Select_Default) == 0x000100, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_BooleanOR_ReturnValue) == 0x000104, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_ValidNightConditions_ReturnValue) == 0x000105, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_ValidNightConditions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, CallFunc_ValidNightConditions_ReturnValue_1) == 0x000106, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::CallFunc_ValidNightConditions_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ConfigureZombieAndMeshType, K2Node_SwitchEnum_CmpSuccess) == 0x000107, "Member 'BP_ZombieSpawner_C_ConfigureZombieAndMeshType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.CREATEDELEGATE_PROXYFUNCTION_0
// 0x0108 (0x0108 - 0x0000)
struct BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(sizeof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000108, "Wrong size on BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(offsetof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0, OverlappedComponent) == 0x000000, "Member 'BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0, OtherActor) == 0x000008, "Member 'BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0, OtherComp) == 0x000010, "Member 'BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0, OtherBodyIndex) == 0x000018, "Member 'BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0, bFromSweep) == 0x00001C, "Member 'BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0, SweepResult) == 0x000020, "Member 'BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_0::SweepResult' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.CREATEDELEGATE_PROXYFUNCTION_1
// 0x0020 (0x0020 - 0x0000)
struct BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1 final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(sizeof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1) == 0x000020, "Wrong size on BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1");
static_assert(offsetof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1, OverlappedComponent) == 0x000000, "Member 'BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1, OtherActor) == 0x000008, "Member 'BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1, OtherComp) == 0x000010, "Member 'BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1, OtherBodyIndex) == 0x000018, "Member 'BP_ZombieSpawner_C_CREATEDELEGATE_PROXYFUNCTION_1::OtherBodyIndex' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.DecreaseCooldown
// 0x000C (0x000C - 0x0000)
struct BP_ZombieSpawner_C_DecreaseCooldown final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_DecreaseCooldown) == 0x000004, "Wrong alignment on BP_ZombieSpawner_C_DecreaseCooldown");
static_assert(sizeof(BP_ZombieSpawner_C_DecreaseCooldown) == 0x00000C, "Wrong size on BP_ZombieSpawner_C_DecreaseCooldown");
static_assert(offsetof(BP_ZombieSpawner_C_DecreaseCooldown, Temp_int_Variable) == 0x000000, "Member 'BP_ZombieSpawner_C_DecreaseCooldown::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DecreaseCooldown, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_ZombieSpawner_C_DecreaseCooldown::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DecreaseCooldown, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_ZombieSpawner_C_DecreaseCooldown::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.DecreaseGroupCounter
// 0x0010 (0x0010 - 0x0000)
struct BP_ZombieSpawner_C_DecreaseGroupCounter final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_DecreaseGroupCounter) == 0x000004, "Wrong alignment on BP_ZombieSpawner_C_DecreaseGroupCounter");
static_assert(sizeof(BP_ZombieSpawner_C_DecreaseGroupCounter) == 0x000010, "Wrong size on BP_ZombieSpawner_C_DecreaseGroupCounter");
static_assert(offsetof(BP_ZombieSpawner_C_DecreaseGroupCounter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'BP_ZombieSpawner_C_DecreaseGroupCounter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DecreaseGroupCounter, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_ZombieSpawner_C_DecreaseGroupCounter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DecreaseGroupCounter, Temp_int_Variable) == 0x000008, "Member 'BP_ZombieSpawner_C_DecreaseGroupCounter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DecreaseGroupCounter, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ZombieSpawner_C_DecreaseGroupCounter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.DetermineZombieAnimType
// 0x000B (0x000B - 0x0000)
struct BP_ZombieSpawner_C_DetermineZombieAnimType final
{
public:
	EZombieAnimType                               InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               ResultAnimType;                                    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               Temp_byte_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               Temp_byte_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_DetermineZombieAnimType) == 0x000001, "Wrong alignment on BP_ZombieSpawner_C_DetermineZombieAnimType");
static_assert(sizeof(BP_ZombieSpawner_C_DetermineZombieAnimType) == 0x00000B, "Wrong size on BP_ZombieSpawner_C_DetermineZombieAnimType");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, InputType) == 0x000000, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::InputType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, ReturnValue) == 0x000001, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, ResultAnimType) == 0x000002, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::ResultAnimType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, Temp_bool_Variable) == 0x000003, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, Temp_byte_Variable) == 0x000007, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, Temp_byte_Variable_1) == 0x000008, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, CallFunc_RandomBool_ReturnValue) == 0x000009, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_DetermineZombieAnimType, K2Node_Select_Default) == 0x00000A, "Member 'BP_ZombieSpawner_C_DetermineZombieAnimType::K2Node_Select_Default' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ExecuteUbergraph_BP_ZombieSpawner
// 0x0228 (0x0228 - 0x0000)
struct BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombieManager_C*                       CallFunc_GetZombieManager_ZombieManager;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombieManager_C*                       K2Node_DynamicCast_AsZombie_Manager;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Amount_Of_Zombies_AmountOfZombies;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkyCreatorController_C*                CallFunc_GetSkyCreatorController_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASkyCreatorController_C*                K2Node_DynamicCast_AsSky_Creator_Controller;       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0078(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGS_TDB_C*                              K2Node_DynamicCast_AsGS_TDB;                       // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAVS_VehicleMaster_C*                   K2Node_DynamicCast_AsAVS_Vehicle_Master;           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSurvSpawnedFromCar_IsFromCar;        // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAVS_VehicleMaster_C*                   K2Node_DynamicCast_AsAVS_Vehicle_Master_1;         // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2_1;         // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner");
static_assert(sizeof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner) == 0x000228, "Wrong size on BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, EntryPoint) == 0x000000, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_GetZombieManager_ZombieManager) == 0x000008, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_GetZombieManager_ZombieManager' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_AsZombie_Manager) == 0x000010, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_AsZombie_Manager' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, Temp_int_Variable) == 0x00001C, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_GetGameMode_ReturnValue) == 0x000020, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_Get_Amount_Of_Zombies_AmountOfZombies) == 0x000028, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_Get_Amount_Of_Zombies_AmountOfZombies' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x000030, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_HasAuthority_ReturnValue) == 0x00003A, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_GetSkyCreatorController_ReturnValue) == 0x000040, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_GetSkyCreatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_AsSky_Creator_Controller) == 0x000048, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_AsSky_Creator_Controller' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_IsValid_ReturnValue_2) == 0x000051, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, Temp_int_Variable_1) == 0x000054, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000058, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000060, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000068, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000070, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_ComponentBoundEvent_bFromSweep) == 0x000074, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_ComponentBoundEvent_SweepResult) == 0x000078, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_GetGameState_ReturnValue) == 0x000160, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_AsGS_TDB) == 0x000168, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_AsGS_TDB' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_bSuccess_3) == 0x000170, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_IsValid_ReturnValue_3) == 0x000171, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_AsAVS_Vehicle_Master) == 0x000178, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_AsAVS_Vehicle_Master' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_bSuccess_4) == 0x000180, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000188, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_bSuccess_5) == 0x000190, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000198, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_ComponentBoundEvent_OtherActor) == 0x0001A0, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_ComponentBoundEvent_OtherComp) == 0x0001A8, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001B0, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_GetIsSurvSpawnedFromCar_IsFromCar) == 0x0001B4, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_GetIsSurvSpawnedFromCar_IsFromCar' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_AsAVS_Vehicle_Master_1) == 0x0001B8, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_AsAVS_Vehicle_Master_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_bSuccess_6) == 0x0001C0, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_AsSurvival_Player_V2_1) == 0x0001C8, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_AsSurvival_Player_V2_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, K2Node_DynamicCast_bSuccess_7) == 0x0001D0, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001D4, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_Add_IntInt_ReturnValue) == 0x0001D8, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_IsValid_ReturnValue_4) == 0x0001DC, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001E0, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_Add_VectorVector_ReturnValue) == 0x0001F8, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_Array_AddUnique_ReturnValue) == 0x000210, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_Array_RemoveItem_ReturnValue) == 0x000214, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_Add_IntInt_ReturnValue_1) == 0x000218, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00021C, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, Temp_int_Variable_2) == 0x000220, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000224, "Member 'BP_ZombieSpawner_C_ExecuteUbergraph_BP_ZombieSpawner::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GenerateDayMeshType
// 0x0030 (0x0030 - 0x0000)
struct BP_ZombieSpawner_C_GenerateDayMeshType final
{
public:
	int32                                         MeshType;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GeneratedMeshType;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_GenerateDayMeshType) == 0x000004, "Wrong alignment on BP_ZombieSpawner_C_GenerateDayMeshType");
static_assert(sizeof(BP_ZombieSpawner_C_GenerateDayMeshType) == 0x000030, "Wrong size on BP_ZombieSpawner_C_GenerateDayMeshType");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, MeshType) == 0x000000, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::MeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, GeneratedMeshType) == 0x000004, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::GeneratedMeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, Param_Index) == 0x000008, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, Temp_int_Variable) == 0x00000C, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateDayMeshType, CallFunc_RandomInteger_ReturnValue) == 0x00002C, "Member 'BP_ZombieSpawner_C_GenerateDayMeshType::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GenerateNightMeshType
// 0x0030 (0x0030 - 0x0000)
struct BP_ZombieSpawner_C_GenerateNightMeshType final
{
public:
	int32                                         MeshType;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GeneratedMeshType;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_GenerateNightMeshType) == 0x000004, "Wrong alignment on BP_ZombieSpawner_C_GenerateNightMeshType");
static_assert(sizeof(BP_ZombieSpawner_C_GenerateNightMeshType) == 0x000030, "Wrong size on BP_ZombieSpawner_C_GenerateNightMeshType");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, MeshType) == 0x000000, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::MeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, GeneratedMeshType) == 0x000004, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::GeneratedMeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, Param_Index) == 0x000008, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, Temp_int_Variable) == 0x00000C, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, CallFunc_RandomInteger_ReturnValue) == 0x00001C, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateNightMeshType, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_ZombieSpawner_C_GenerateNightMeshType::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GenerateSoldierMeshType
// 0x0030 (0x0030 - 0x0000)
struct BP_ZombieSpawner_C_GenerateSoldierMeshType final
{
public:
	int32                                         MeshType;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GeneratedMeshType;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_GenerateSoldierMeshType) == 0x000004, "Wrong alignment on BP_ZombieSpawner_C_GenerateSoldierMeshType");
static_assert(sizeof(BP_ZombieSpawner_C_GenerateSoldierMeshType) == 0x000030, "Wrong size on BP_ZombieSpawner_C_GenerateSoldierMeshType");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, MeshType) == 0x000000, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::MeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, GeneratedMeshType) == 0x000004, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::GeneratedMeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, Param_Index) == 0x000008, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, Temp_int_Variable) == 0x00000C, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, CallFunc_RandomInteger_ReturnValue) == 0x000028, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GenerateSoldierMeshType, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_ZombieSpawner_C_GenerateSoldierMeshType::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Get Amount Of Zombies
// 0x00F0 (0x00F0 - 0x0000)
struct BP_ZombieSpawner_C_Get_Amount_Of_Zombies final
{
public:
	int32                                         AmountOfZombies;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalAmount;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAreaPropertiesUpdated                 CallFunc_Array_Get_Item;                           // 0x0018(0x00C8)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_Get_Amount_Of_Zombies");
static_assert(sizeof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies) == 0x0000F0, "Wrong size on BP_ZombieSpawner_C_Get_Amount_Of_Zombies");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies, AmountOfZombies) == 0x000000, "Member 'BP_ZombieSpawner_C_Get_Amount_Of_Zombies::AmountOfZombies' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies, TotalAmount) == 0x000004, "Member 'BP_ZombieSpawner_C_Get_Amount_Of_Zombies::TotalAmount' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_ZombieSpawner_C_Get_Amount_Of_Zombies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_ZombieSpawner_C_Get_Amount_Of_Zombies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_ZombieSpawner_C_Get_Amount_Of_Zombies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ZombieSpawner_C_Get_Amount_Of_Zombies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_ZombieSpawner_C_Get_Amount_Of_Zombies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_ZombieSpawner_C_Get_Amount_Of_Zombies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Amount_Of_Zombies, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_ZombieSpawner_C_Get_Amount_Of_Zombies::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Get Random Area Index
// 0x0048 (0x0048 - 0x0000)
struct BP_ZombieSpawner_C_Get_Random_Area_Index final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GeneratedItem;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 UnusedAreas;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Random_OutItem;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreaIsEmptyFromPlayers_ReturnValue;       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_Get_Random_Area_Index) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_Get_Random_Area_Index");
static_assert(sizeof(BP_ZombieSpawner_C_Get_Random_Area_Index) == 0x000048, "Wrong size on BP_ZombieSpawner_C_Get_Random_Area_Index");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, ReturnValue) == 0x000000, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, GeneratedItem) == 0x000004, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::GeneratedItem' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, UnusedAreas) == 0x000008, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::UnusedAreas' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, CallFunc_Array_RemoveItem_ReturnValue) == 0x000029, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, CallFunc_Array_Random_OutItem) == 0x00002C, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, CallFunc_Array_Random_OutIndex) == 0x000030, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, CallFunc_AreaIsEmptyFromPlayers_ReturnValue) == 0x000034, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::CallFunc_AreaIsEmptyFromPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Get_Random_Area_Index, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_ZombieSpawner_C_Get_Random_Area_Index::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GetIsSurvSpawnedFromCar
// 0x0098 (0x0098 - 0x0000)
struct BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar final
{
public:
	class AActor*                                 Survival;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFromCar;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar");
static_assert(sizeof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar) == 0x000098, "Wrong size on BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, Survival) == 0x000000, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::Survival' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, IsFromCar) == 0x000008, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::IsFromCar' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000040, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000068, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_Vector_Distance_ReturnValue) == 0x000088, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_ZombieSpawner_C_GetIsSurvSpawnedFromCar::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GetSpawnLocationInArea
// 0x0318 (0x0318 - 0x0000)
struct BP_ZombieSpawner_C_GetSpawnLocationInArea final
{
public:
	struct FAreaPropertiesUpdated                 SpawnArea;                                         // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x00C8(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00E0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetTraceStartAndEndPoint_TraceStart;      // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTraceStartAndEndPoint_TraceEnd;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0120(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B[0x1];                                      // 0x020B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_GetSpawnLocationInArea) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_GetSpawnLocationInArea");
static_assert(sizeof(BP_ZombieSpawner_C_GetSpawnLocationInArea) == 0x000318, "Wrong size on BP_ZombieSpawner_C_GetSpawnLocationInArea");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, SpawnArea) == 0x000000, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::SpawnArea' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, SpawnLocation) == 0x0000C8, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, Temp_object_Variable) == 0x0000E0, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_GetTraceStartAndEndPoint_TraceStart) == 0x0000F0, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_GetTraceStartAndEndPoint_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_GetTraceStartAndEndPoint_TraceEnd) == 0x000108, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_GetTraceStartAndEndPoint_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_LineTraceSingle_OutHit) == 0x000120, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_LineTraceSingle_ReturnValue) == 0x000208, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_bBlockingHit) == 0x000209, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_bInitialOverlap) == 0x00020A, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_Time) == 0x00020C, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_Distance) == 0x000210, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_Location) == 0x000218, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_ImpactPoint) == 0x000230, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_Normal) == 0x000248, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_ImpactNormal) == 0x000260, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_PhysMat) == 0x000278, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_HitActor) == 0x000280, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_HitComponent) == 0x000288, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_HitBoneName) == 0x000290, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_BoneName) == 0x000298, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_HitItem) == 0x0002A0, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_ElementIndex) == 0x0002A4, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_FaceIndex) == 0x0002A8, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_TraceStart) == 0x0002B0, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakHitResult_TraceEnd) == 0x0002C8, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakVector_X) == 0x0002E0, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakVector_Y) == 0x0002E8, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_BreakVector_Z) == 0x0002F0, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnLocationInArea, CallFunc_MakeVector_ReturnValue) == 0x000300, "Member 'BP_ZombieSpawner_C_GetSpawnLocationInArea::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GetSpawnMultiplier
// 0x0018 (0x0018 - 0x0000)
struct BP_ZombieSpawner_C_GetSpawnMultiplier final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpawnMultiplier_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_GetSpawnMultiplier) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_GetSpawnMultiplier");
static_assert(sizeof(BP_ZombieSpawner_C_GetSpawnMultiplier) == 0x000018, "Wrong size on BP_ZombieSpawner_C_GetSpawnMultiplier");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnMultiplier, ReturnValue) == 0x000000, "Member 'BP_ZombieSpawner_C_GetSpawnMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnMultiplier, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ZombieSpawner_C_GetSpawnMultiplier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetSpawnMultiplier, CallFunc_GetSpawnMultiplier_ReturnValue) == 0x000010, "Member 'BP_ZombieSpawner_C_GetSpawnMultiplier::CallFunc_GetSpawnMultiplier_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.GetTraceStartAndEndPoint
// 0x03E0 (0x03E0 - 0x0000)
struct BP_ZombieSpawner_C_GetTraceStartAndEndPoint final
{
public:
	struct FAreaPropertiesUpdated                 SpawnArea;                                         // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                TraceStart;                                        // 0x00C8(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEnd;                                          // 0x00E0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEndPoint;                                     // 0x00F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RotatedVector;                                     // 0x0110(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorToRotate;                                    // 0x0128(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PivotVector;                                       // 0x0140(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RelativeRotation;                                  // 0x0158(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                AdjustedRelativeLocation;                          // 0x0170(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AreaExtentZ;                                       // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AreaExtentY;                                       // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AreaExtentX;                                       // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BottomMultiplier;                                  // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateVectorAroundPoint_RotatedVector;    // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298[0x8];                                      // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x02A0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0340(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint) == 0x000010, "Wrong alignment on BP_ZombieSpawner_C_GetTraceStartAndEndPoint");
static_assert(sizeof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint) == 0x0003E0, "Wrong size on BP_ZombieSpawner_C_GetTraceStartAndEndPoint");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, SpawnArea) == 0x000000, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::SpawnArea' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, TraceStart) == 0x0000C8, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, TraceEnd) == 0x0000E0, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, TraceEndPoint) == 0x0000F8, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::TraceEndPoint' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, RotatedVector) == 0x000110, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::RotatedVector' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, VectorToRotate) == 0x000128, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::VectorToRotate' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, PivotVector) == 0x000140, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::PivotVector' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, RelativeRotation) == 0x000158, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::RelativeRotation' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, AdjustedRelativeLocation) == 0x000170, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::AdjustedRelativeLocation' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, AreaExtentZ) == 0x000188, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::AreaExtentZ' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, AreaExtentY) == 0x000190, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::AreaExtentY' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, AreaExtentX) == 0x000198, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::AreaExtentX' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, BottomMultiplier) == 0x0001A0, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::BottomMultiplier' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_X) == 0x0001B0, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_Y) == 0x0001B8, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_Z) == 0x0001C0, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_MakeVector_ReturnValue) == 0x0001C8, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x0001E0, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_X_1) == 0x0001F8, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_Y_1) == 0x000200, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_Z_1) == 0x000208, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_RotateVectorAroundPoint_RotatedVector) == 0x000210, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_RotateVectorAroundPoint_RotatedVector' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000228, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_X_2) == 0x000230, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_Y_2) == 0x000238, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_Z_2) == 0x000240, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_X_3) == 0x000248, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_Y_3) == 0x000250, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_Z_3) == 0x000258, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000260, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_X_4) == 0x000268, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_Y_4) == 0x000270, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_BreakVector_Z_4) == 0x000278, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000280, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_RandomFloatInRange_ReturnValue) == 0x000288, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000290, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_GetTransform_ReturnValue) == 0x0002A0, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000300, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_TransformLocation_ReturnValue) == 0x000308, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000320, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_MakeVector_ReturnValue_1) == 0x000328, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_GetTransform_ReturnValue_1) == 0x000340, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_TransformLocation_ReturnValue_1) == 0x0003A0, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0003B8, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0003C0, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_GetTraceStartAndEndPoint, CallFunc_MakeVector_ReturnValue_2) == 0x0003C8, "Member 'BP_ZombieSpawner_C_GetTraceStartAndEndPoint::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Is Night Time
// 0x0006 (0x0006 - 0x0000)
struct BP_ZombieSpawner_C_Is_Night_Time final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                CallFunc_GetDayCycleState_ReturnValue;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_Is_Night_Time) == 0x000001, "Wrong alignment on BP_ZombieSpawner_C_Is_Night_Time");
static_assert(sizeof(BP_ZombieSpawner_C_Is_Night_Time) == 0x000006, "Wrong size on BP_ZombieSpawner_C_Is_Night_Time");
static_assert(offsetof(BP_ZombieSpawner_C_Is_Night_Time, ReturnValue) == 0x000000, "Member 'BP_ZombieSpawner_C_Is_Night_Time::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Is_Night_Time, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_ZombieSpawner_C_Is_Night_Time::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Is_Night_Time, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_ZombieSpawner_C_Is_Night_Time::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Is_Night_Time, CallFunc_GetDayCycleState_ReturnValue) == 0x000003, "Member 'BP_ZombieSpawner_C_Is_Night_Time::CallFunc_GetDayCycleState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Is_Night_Time, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_ZombieSpawner_C_Is_Night_Time::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Is_Night_Time, K2Node_SwitchEnum_CmpSuccess_1) == 0x000005, "Member 'BP_ZombieSpawner_C_Is_Night_Time::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.IsSpawnerReady
// 0x0007 (0x0007 - 0x0000)
struct BP_ZombieSpawner_C_IsSpawnerReady final
{
public:
	bool                                          Ready;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_All_Areas_Occupied_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_IsSpawnerReady) == 0x000001, "Wrong alignment on BP_ZombieSpawner_C_IsSpawnerReady");
static_assert(sizeof(BP_ZombieSpawner_C_IsSpawnerReady) == 0x000007, "Wrong size on BP_ZombieSpawner_C_IsSpawnerReady");
static_assert(offsetof(BP_ZombieSpawner_C_IsSpawnerReady, Ready) == 0x000000, "Member 'BP_ZombieSpawner_C_IsSpawnerReady::Ready' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_IsSpawnerReady, CallFunc_All_Areas_Occupied_ReturnValue) == 0x000001, "Member 'BP_ZombieSpawner_C_IsSpawnerReady::CallFunc_All_Areas_Occupied_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_IsSpawnerReady, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_ZombieSpawner_C_IsSpawnerReady::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_IsSpawnerReady, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'BP_ZombieSpawner_C_IsSpawnerReady::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_IsSpawnerReady, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_ZombieSpawner_C_IsSpawnerReady::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_IsSpawnerReady, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_ZombieSpawner_C_IsSpawnerReady::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_IsSpawnerReady, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'BP_ZombieSpawner_C_IsSpawnerReady::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.OnCheckAreaBeginOverlap
// 0x0120 (0x0120 - 0x0000)
struct BP_ZombieSpawner_C_OnCheckAreaBeginOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_OnCheckAreaBeginOverlap");
static_assert(sizeof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap) == 0x000120, "Wrong size on BP_ZombieSpawner_C_OnCheckAreaBeginOverlap");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, OverlappedComponent) == 0x000000, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, OtherActor) == 0x000008, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, OtherComp) == 0x000010, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, bFromSweep) == 0x00001C, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, SweepResult) == 0x000020, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, K2Node_DynamicCast_AsSurvival_Player) == 0x000108, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, Temp_int_Variable) == 0x000114, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, CallFunc_Array_Find_ReturnValue) == 0x000118, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaBeginOverlap, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_ZombieSpawner_C_OnCheckAreaBeginOverlap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.OnCheckAreaEndOverlap
// 0x0038 (0x0038 - 0x0000)
struct BP_ZombieSpawner_C_OnCheckAreaEndOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_OnCheckAreaEndOverlap");
static_assert(sizeof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap) == 0x000038, "Wrong size on BP_ZombieSpawner_C_OnCheckAreaEndOverlap");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap, OverlappedComponent) == 0x000000, "Member 'BP_ZombieSpawner_C_OnCheckAreaEndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap, OtherActor) == 0x000008, "Member 'BP_ZombieSpawner_C_OnCheckAreaEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap, OtherComp) == 0x000010, "Member 'BP_ZombieSpawner_C_OnCheckAreaEndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_ZombieSpawner_C_OnCheckAreaEndOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap, K2Node_DynamicCast_AsSurvival_Player) == 0x000020, "Member 'BP_ZombieSpawner_C_OnCheckAreaEndOverlap::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ZombieSpawner_C_OnCheckAreaEndOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap, Temp_int_Variable) == 0x00002C, "Member 'BP_ZombieSpawner_C_OnCheckAreaEndOverlap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'BP_ZombieSpawner_C_OnCheckAreaEndOverlap::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnCheckAreaEndOverlap, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'BP_ZombieSpawner_C_OnCheckAreaEndOverlap::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.OnTriggerSpawn
// 0x0010 (0x0010 - 0x0000)
struct BP_ZombieSpawner_C_OnTriggerSpawn final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_AfterAlarm;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpawnerReady_Ready;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_OnTriggerSpawn) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_OnTriggerSpawn");
static_assert(sizeof(BP_ZombieSpawner_C_OnTriggerSpawn) == 0x000010, "Wrong size on BP_ZombieSpawner_C_OnTriggerSpawn");
static_assert(offsetof(BP_ZombieSpawner_C_OnTriggerSpawn, Actor) == 0x000000, "Member 'BP_ZombieSpawner_C_OnTriggerSpawn::Actor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnTriggerSpawn, Param_AfterAlarm) == 0x000008, "Member 'BP_ZombieSpawner_C_OnTriggerSpawn::Param_AfterAlarm' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnTriggerSpawn, CallFunc_GetChanceIsLowerThan_ReturnValue) == 0x000009, "Member 'BP_ZombieSpawner_C_OnTriggerSpawn::CallFunc_GetChanceIsLowerThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnTriggerSpawn, CallFunc_IsSpawnerReady_Ready) == 0x00000A, "Member 'BP_ZombieSpawner_C_OnTriggerSpawn::CallFunc_IsSpawnerReady_Ready' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_OnTriggerSpawn, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'BP_ZombieSpawner_C_OnTriggerSpawn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.RotateVectorAroundPoint
// 0x0110 (0x0110 - 0x0000)
struct BP_ZombieSpawner_C_RotateVectorAroundPoint final
{
public:
	struct FVector                                PivotVector;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorToRotate;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                RotatedVector;                                     // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_RotateVectorAroundPoint) == 0x000010, "Wrong alignment on BP_ZombieSpawner_C_RotateVectorAroundPoint");
static_assert(sizeof(BP_ZombieSpawner_C_RotateVectorAroundPoint) == 0x000110, "Wrong size on BP_ZombieSpawner_C_RotateVectorAroundPoint");
static_assert(offsetof(BP_ZombieSpawner_C_RotateVectorAroundPoint, PivotVector) == 0x000000, "Member 'BP_ZombieSpawner_C_RotateVectorAroundPoint::PivotVector' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_RotateVectorAroundPoint, VectorToRotate) == 0x000018, "Member 'BP_ZombieSpawner_C_RotateVectorAroundPoint::VectorToRotate' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_RotateVectorAroundPoint, Rotation) == 0x000030, "Member 'BP_ZombieSpawner_C_RotateVectorAroundPoint::Rotation' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_RotateVectorAroundPoint, RotatedVector) == 0x000048, "Member 'BP_ZombieSpawner_C_RotateVectorAroundPoint::RotatedVector' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_RotateVectorAroundPoint, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000060, "Member 'BP_ZombieSpawner_C_RotateVectorAroundPoint::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_RotateVectorAroundPoint, CallFunc_InverseTransformLocation_ReturnValue) == 0x0000C0, "Member 'BP_ZombieSpawner_C_RotateVectorAroundPoint::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_RotateVectorAroundPoint, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000D8, "Member 'BP_ZombieSpawner_C_RotateVectorAroundPoint::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_RotateVectorAroundPoint, CallFunc_TransformLocation_ReturnValue) == 0x0000F0, "Member 'BP_ZombieSpawner_C_RotateVectorAroundPoint::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.SetLinkedQuests
// 0x0010 (0x0010 - 0x0000)
struct BP_ZombieSpawner_C_SetLinkedQuests final
{
public:
	TArray<class UQuest*>                         Param_LinkedQuests;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ZombieSpawner_C_SetLinkedQuests) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_SetLinkedQuests");
static_assert(sizeof(BP_ZombieSpawner_C_SetLinkedQuests) == 0x000010, "Wrong size on BP_ZombieSpawner_C_SetLinkedQuests");
static_assert(offsetof(BP_ZombieSpawner_C_SetLinkedQuests, Param_LinkedQuests) == 0x000000, "Member 'BP_ZombieSpawner_C_SetLinkedQuests::Param_LinkedQuests' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.SetSpawnerHandler
// 0x0008 (0x0008 - 0x0000)
struct BP_ZombieSpawner_C_SetSpawnerHandler final
{
public:
	class ABP_ZombieSpawnerHandler_C*             InSpawnerHandler;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_SetSpawnerHandler) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_SetSpawnerHandler");
static_assert(sizeof(BP_ZombieSpawner_C_SetSpawnerHandler) == 0x000008, "Wrong size on BP_ZombieSpawner_C_SetSpawnerHandler");
static_assert(offsetof(BP_ZombieSpawner_C_SetSpawnerHandler, InSpawnerHandler) == 0x000000, "Member 'BP_ZombieSpawner_C_SetSpawnerHandler::InSpawnerHandler' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Spawn Zombie
// 0x0150 (0x0150 - 0x0000)
struct BP_ZombieSpawner_C_Spawn_Zombie final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAreaPropertiesUpdated                 Area;                                              // 0x0018(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	EZombieType                                   ZombieType;                                        // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               ZombieAnimType;                                    // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ZombieMeshType;                                    // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              Zombie;                                            // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_ConfigureZombieAndMeshType_ZombieType;    // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ConfigureZombieAndMeshType_MeshType;      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ConfigureRotation_ReturnValue;            // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EZombieAnimType                               CallFunc_ConfigureAnimType_ReturnValue;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AParentAIDetourController_C*            K2Node_DynamicCast_AsParent_AIDetour_Controller;   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0134(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              CallFunc_RequestSpawnOfZombie_SpawnedZombie;       // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_Spawn_Zombie) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_Spawn_Zombie");
static_assert(sizeof(BP_ZombieSpawner_C_Spawn_Zombie) == 0x000150, "Wrong size on BP_ZombieSpawner_C_Spawn_Zombie");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, Location) == 0x000000, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::Location' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, Area) == 0x000018, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::Area' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, ZombieType) == 0x0000E0, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::ZombieType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, ZombieAnimType) == 0x0000E1, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::ZombieAnimType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, ZombieMeshType) == 0x0000E4, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::ZombieMeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, Zombie) == 0x0000E8, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::Zombie' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, Temp_int_Variable) == 0x0000F0, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, CallFunc_ConfigureZombieAndMeshType_ZombieType) == 0x0000F4, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::CallFunc_ConfigureZombieAndMeshType_ZombieType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, CallFunc_ConfigureZombieAndMeshType_MeshType) == 0x0000F8, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::CallFunc_ConfigureZombieAndMeshType_MeshType' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, CallFunc_IsValid_ReturnValue) == 0x0000FC, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, CallFunc_ConfigureRotation_ReturnValue) == 0x000100, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::CallFunc_ConfigureRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, CallFunc_ConfigureAnimType_ReturnValue) == 0x000118, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::CallFunc_ConfigureAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000119, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, CallFunc_GetAIController_ReturnValue) == 0x000120, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, K2Node_DynamicCast_AsParent_AIDetour_Controller) == 0x000128, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::K2Node_DynamicCast_AsParent_AIDetour_Controller' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, K2Node_CreateDelegate_OutputDelegate) == 0x000134, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie, CallFunc_RequestSpawnOfZombie_SpawnedZombie) == 0x000148, "Member 'BP_ZombieSpawner_C_Spawn_Zombie::CallFunc_RequestSpawnOfZombie_SpawnedZombie' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Spawn Zombie in Area
// 0x0130 (0x0130 - 0x0000)
struct BP_ZombieSpawner_C_Spawn_Zombie_in_Area final
{
public:
	struct FAreaPropertiesUpdated                 Area;                                              // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         MaxNumberOfIteration;                              // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfIterations;                                // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalZombieLocation;                               // 0x00D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSpawnLocationInArea_SpawnLocation;     // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AnotherZombieInSpawnPoint_ReturnValue;    // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B[0x1];                                      // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_Spawn_Zombie_in_Area");
static_assert(sizeof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area) == 0x000130, "Wrong size on BP_ZombieSpawner_C_Spawn_Zombie_in_Area");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, Area) == 0x000000, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::Area' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, MaxNumberOfIteration) == 0x0000C8, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::MaxNumberOfIteration' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, NumberOfIterations) == 0x0000CC, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::NumberOfIterations' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, LocalZombieLocation) == 0x0000D0, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::LocalZombieLocation' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, CallFunc_GetSpawnLocationInArea_SpawnLocation) == 0x0000E8, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::CallFunc_GetSpawnLocationInArea_SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, CallFunc_Not_PreBool_ReturnValue) == 0x000100, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, CallFunc_SelectVector_ReturnValue) == 0x000108, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x000120, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, CallFunc_Add_IntInt_ReturnValue) == 0x000124, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000128, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, CallFunc_AnotherZombieInSpawnPoint_ReturnValue) == 0x000129, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::CallFunc_AnotherZombieInSpawnPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, CallFunc_BooleanAND_ReturnValue) == 0x00012A, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombie_in_Area, Temp_int_Variable) == 0x00012C, "Member 'BP_ZombieSpawner_C_Spawn_Zombie_in_Area::Temp_int_Variable' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.Spawn Zombies
// 0x0228 (0x0228 - 0x0000)
struct BP_ZombieSpawner_C_Spawn_Zombies final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_AfterAlarm;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAreaPropertiesUpdated                 Area;                                              // 0x0010(0x00C8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	double                                        SpawnMultiplier;                                   // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScaledMaxAmount;                                   // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScaledMinAmount;                                   // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomAreaIndex;                                   // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupSize;                                         // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreaIsEmptyFromPlayers_ReturnValue;       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Night_Time_ReturnValue;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Random_Area_Index_ReturnValue;        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAreaPropertiesUpdated                 CallFunc_Array_Get_Item;                           // 0x0148(0x00C8)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue;         // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue_1;       // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_Spawn_Zombies) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_Spawn_Zombies");
static_assert(sizeof(BP_ZombieSpawner_C_Spawn_Zombies) == 0x000228, "Wrong size on BP_ZombieSpawner_C_Spawn_Zombies");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, Actor) == 0x000000, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::Actor' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, Param_AfterAlarm) == 0x000008, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::Param_AfterAlarm' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, Param_Index) == 0x00000C, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, Area) == 0x000010, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::Area' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, SpawnMultiplier) == 0x0000D8, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::SpawnMultiplier' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, ScaledMaxAmount) == 0x0000E0, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::ScaledMaxAmount' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, ScaledMinAmount) == 0x0000E4, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::ScaledMinAmount' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, RandomAreaIndex) == 0x0000E8, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::RandomAreaIndex' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, GroupSize) == 0x0000EC, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::GroupSize' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, Temp_int_Loop_Counter_Variable) == 0x0000F0, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_AreaIsEmptyFromPlayers_ReturnValue) == 0x0000F8, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_AreaIsEmptyFromPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000100, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000108, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Is_Night_Time_ReturnValue) == 0x000110, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Is_Night_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000118, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Round_ReturnValue) == 0x000120, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Max_ReturnValue) == 0x000124, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Round_ReturnValue_1) == 0x000130, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, Temp_int_Array_Index_Variable) == 0x000134, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Max_ReturnValue_1) == 0x000138, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00013C, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Get_Random_Area_Index_ReturnValue) == 0x000140, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Get_Random_Area_Index_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000144, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Array_Get_Item) == 0x000148, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Array_Length_ReturnValue) == 0x000210, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Less_IntInt_ReturnValue) == 0x000214, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, Temp_int_Variable) == 0x000218, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Subtract_IntInt_ReturnValue) == 0x00021C, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_Add_IntInt_ReturnValue_1) == 0x000220, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000224, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_GetChanceIsLowerThan_ReturnValue) == 0x000225, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_GetChanceIsLowerThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_Spawn_Zombies, CallFunc_GetChanceIsLowerThan_ReturnValue_1) == 0x000226, "Member 'BP_ZombieSpawner_C_Spawn_Zombies::CallFunc_GetChanceIsLowerThan_ReturnValue_1' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.SpawnAntiCampZombies
// 0x0010 (0x0010 - 0x0000)
struct BP_ZombieSpawner_C_SpawnAntiCampZombies final
{
public:
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_SpawnAntiCampZombies) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_SpawnAntiCampZombies");
static_assert(sizeof(BP_ZombieSpawner_C_SpawnAntiCampZombies) == 0x000010, "Wrong size on BP_ZombieSpawner_C_SpawnAntiCampZombies");
static_assert(offsetof(BP_ZombieSpawner_C_SpawnAntiCampZombies, CallFunc_Array_Get_Item) == 0x000000, "Member 'BP_ZombieSpawner_C_SpawnAntiCampZombies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_SpawnAntiCampZombies, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000008, "Member 'BP_ZombieSpawner_C_SpawnAntiCampZombies::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.SpawnNightZombie
// 0x0006 (0x0006 - 0x0000)
struct BP_ZombieSpawner_C_SpawnNightZombie final
{
public:
	bool                                          InDarkRoomArea;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Night_Time_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue_1;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_SpawnNightZombie) == 0x000001, "Wrong alignment on BP_ZombieSpawner_C_SpawnNightZombie");
static_assert(sizeof(BP_ZombieSpawner_C_SpawnNightZombie) == 0x000006, "Wrong size on BP_ZombieSpawner_C_SpawnNightZombie");
static_assert(offsetof(BP_ZombieSpawner_C_SpawnNightZombie, InDarkRoomArea) == 0x000000, "Member 'BP_ZombieSpawner_C_SpawnNightZombie::InDarkRoomArea' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_SpawnNightZombie, ReturnValue) == 0x000001, "Member 'BP_ZombieSpawner_C_SpawnNightZombie::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_SpawnNightZombie, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_ZombieSpawner_C_SpawnNightZombie::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_SpawnNightZombie, CallFunc_GetChanceIsLowerThan_ReturnValue) == 0x000003, "Member 'BP_ZombieSpawner_C_SpawnNightZombie::CallFunc_GetChanceIsLowerThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_SpawnNightZombie, CallFunc_Is_Night_Time_ReturnValue) == 0x000004, "Member 'BP_ZombieSpawner_C_SpawnNightZombie::CallFunc_Is_Night_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_SpawnNightZombie, CallFunc_GetChanceIsLowerThan_ReturnValue_1) == 0x000005, "Member 'BP_ZombieSpawner_C_SpawnNightZombie::CallFunc_GetChanceIsLowerThan_ReturnValue_1' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.StartCooldown
// 0x0018 (0x0018 - 0x0000)
struct BP_ZombieSpawner_C_StartCooldown final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_StartCooldown) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_StartCooldown");
static_assert(sizeof(BP_ZombieSpawner_C_StartCooldown) == 0x000018, "Wrong size on BP_ZombieSpawner_C_StartCooldown");
static_assert(offsetof(BP_ZombieSpawner_C_StartCooldown, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_ZombieSpawner_C_StartCooldown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_StartCooldown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'BP_ZombieSpawner_C_StartCooldown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.UserConstructionScript
// 0x00E0 (0x00E0 - 0x0000)
struct BP_ZombieSpawner_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAreaPropertiesUpdated                 CallFunc_Array_Get_Item;                           // 0x0010(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_ZombieSpawner_C_UserConstructionScript");
static_assert(sizeof(BP_ZombieSpawner_C_UserConstructionScript) == 0x0000E0, "Wrong size on BP_ZombieSpawner_C_UserConstructionScript");
static_assert(offsetof(BP_ZombieSpawner_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ZombieSpawner_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ZombieSpawner_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ZombieSpawner_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_ZombieSpawner_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ZombieSpawner_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_ZombieSpawner_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ValidateSpawnResult
// 0x0001 (0x0001 - 0x0000)
struct BP_ZombieSpawner_C_ValidateSpawnResult final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_ValidateSpawnResult) == 0x000001, "Wrong alignment on BP_ZombieSpawner_C_ValidateSpawnResult");
static_assert(sizeof(BP_ZombieSpawner_C_ValidateSpawnResult) == 0x000001, "Wrong size on BP_ZombieSpawner_C_ValidateSpawnResult");
static_assert(offsetof(BP_ZombieSpawner_C_ValidateSpawnResult, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'BP_ZombieSpawner_C_ValidateSpawnResult::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ZombieSpawner.BP_ZombieSpawner_C.ValidNightConditions
// 0x0004 (0x0004 - 0x0000)
struct BP_ZombieSpawner_C_ValidNightConditions final
{
public:
	bool                                          InDarkRoom;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Night_Time_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZombieSpawner_C_ValidNightConditions) == 0x000001, "Wrong alignment on BP_ZombieSpawner_C_ValidNightConditions");
static_assert(sizeof(BP_ZombieSpawner_C_ValidNightConditions) == 0x000004, "Wrong size on BP_ZombieSpawner_C_ValidNightConditions");
static_assert(offsetof(BP_ZombieSpawner_C_ValidNightConditions, InDarkRoom) == 0x000000, "Member 'BP_ZombieSpawner_C_ValidNightConditions::InDarkRoom' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ValidNightConditions, ReturnValue) == 0x000001, "Member 'BP_ZombieSpawner_C_ValidNightConditions::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ValidNightConditions, CallFunc_Is_Night_Time_ReturnValue) == 0x000002, "Member 'BP_ZombieSpawner_C_ValidNightConditions::CallFunc_Is_Night_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZombieSpawner_C_ValidNightConditions, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_ZombieSpawner_C_ValidNightConditions::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

