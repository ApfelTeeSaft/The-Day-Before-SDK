#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ParentAI

#include "Basic.hpp"

#include "ParentAI_classes.hpp"
#include "ParentAI_parameters.hpp"


namespace SDK
{

// Function ParentAI.ParentAI_C.Activate(Render)_MULTI
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activtae_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::Activate_Render__MULTI(bool Activtae_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "Activate(Render)_MULTI");

	Params::ParentAI_C_Activate_Render__MULTI Parms{};

	Parms.Activtae_ = Activtae_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.AIInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Door_C*                       Door                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UArrowComponent*                  Arrow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::AIInteract(class ABP_Door_C* Door, class UArrowComponent* Arrow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "AIInteract");

	Params::ParentAI_C_AIInteract Parms{};

	Parms.Door = Door;
	Parms.Arrow = Arrow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.AvoidFire
// (Public, BlueprintCallable, BlueprintEvent)

void AParentAI_C::AvoidFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "AvoidFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.Pitch
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AParentAI_C::Pitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "Pitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.ChangeNavFilterClass
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           DefaultNavigationFilterClass                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::ChangeNavFilterClass(class UClass* DefaultNavigationFilterClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "ChangeNavFilterClass");

	Params::ParentAI_C_ChangeNavFilterClass Parms{};

	Parms.DefaultNavigationFilterClass = DefaultNavigationFilterClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.DeactivateTimeline__FinishedFunc
// (BlueprintEvent)

void AParentAI_C::DeactivateTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "DeactivateTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.DeactivateTimeline__UpdateFunc
// (BlueprintEvent)

void AParentAI_C::DeactivateTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "DeactivateTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.Death
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::Death(class AController* InstigatedBy, double HitAngle, const struct FVector& HitLocation, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "Death");

	Params::ParentAI_C_Death Parms{};

	Parms.InstigatedBy = InstigatedBy;
	Parms.HitAngle = HitAngle;
	Parms.HitLocation = std::move(HitLocation);
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.DestroyTimeline__FinishedFunc
// (BlueprintEvent)

void AParentAI_C::DestroyTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "DestroyTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.DestroyTimeline__UpdateFunc
// (BlueprintEvent)

void AParentAI_C::DestroyTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "DestroyTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.EnableHearing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::EnableHearing(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "EnableHearing");

	Params::ParentAI_C_EnableHearing Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.EnableSight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::EnableSight(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "EnableSight");

	Params::ParentAI_C_EnableSight Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.EndDoorAttack
// (Public, BlueprintCallable, BlueprintEvent)

void AParentAI_C::EndDoorAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "EndDoorAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.ExecuteUbergraph_ParentAI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::ExecuteUbergraph_ParentAI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "ExecuteUbergraph_ParentAI");

	Params::ParentAI_C_ExecuteUbergraph_ParentAI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.GetHitAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  HitAngle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::GetHitAngle(class AController* InstigatedBy, double* HitAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "GetHitAngle");

	Params::ParentAI_C_GetHitAngle Parms{};

	Parms.InstigatedBy = InstigatedBy;

	UObject::ProcessEvent(Func, &Parms);

	if (HitAngle != nullptr)
		*HitAngle = Parms.HitAngle;
}


// Function ParentAI.ParentAI_C.GetHitDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  HitDistance                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::GetHitDistance(class AController* InstigatedBy, double* HitDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "GetHitDistance");

	Params::ParentAI_C_GetHitDistance Parms{};

	Parms.InstigatedBy = InstigatedBy;

	UObject::ProcessEvent(Func, &Parms);

	if (HitDistance != nullptr)
		*HitDistance = Parms.HitDistance;
}


// Function ParentAI.ParentAI_C.GetXP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_XP                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::GetXP(double* Param_XP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "GetXP");

	Params::ParentAI_C_GetXP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_XP != nullptr)
		*Param_XP = Parms.Param_XP;
}


// Function ParentAI.ParentAI_C.InitWoundComponent
// (Public, BlueprintCallable, BlueprintEvent)

void AParentAI_C::InitWoundComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "InitWoundComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.IsBandit?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsBandit_                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::IsBandit_(bool* Param_IsBandit_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "IsBandit?");

	Params::ParentAI_C_IsBandit_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsBandit_ != nullptr)
		*Param_IsBandit_ = Parms.Param_IsBandit_;
}


// Function ParentAI.ParentAI_C.IsDead?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsDead_                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::IsDead_(bool* Param_IsDead_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "IsDead?");

	Params::ParentAI_C_IsDead_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsDead_ != nullptr)
		*Param_IsDead_ = Parms.Param_IsDead_;
}


// Function ParentAI.ParentAI_C.IsZombie?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsZombie_                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Zombie                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::IsZombie_(bool* Param_IsZombie_, class APawn** Zombie)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "IsZombie?");

	Params::ParentAI_C_IsZombie_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsZombie_ != nullptr)
		*Param_IsZombie_ = Parms.Param_IsZombie_;

	if (Zombie != nullptr)
		*Zombie = Parms.Zombie;
}


// Function ParentAI.ParentAI_C.OnBlendOut_A3C9FE0E4D8CDA515290469B112790D1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::OnBlendOut_A3C9FE0E4D8CDA515290469B112790D1(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "OnBlendOut_A3C9FE0E4D8CDA515290469B112790D1");

	Params::ParentAI_C_OnBlendOut_A3C9FE0E4D8CDA515290469B112790D1 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.OnCompleted_A3C9FE0E4D8CDA515290469B112790D1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::OnCompleted_A3C9FE0E4D8CDA515290469B112790D1(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "OnCompleted_A3C9FE0E4D8CDA515290469B112790D1");

	Params::ParentAI_C_OnCompleted_A3C9FE0E4D8CDA515290469B112790D1 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.OnInterrupted_A3C9FE0E4D8CDA515290469B112790D1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::OnInterrupted_A3C9FE0E4D8CDA515290469B112790D1(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "OnInterrupted_A3C9FE0E4D8CDA515290469B112790D1");

	Params::ParentAI_C_OnInterrupted_A3C9FE0E4D8CDA515290469B112790D1 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.OnNotifyBegin_A3C9FE0E4D8CDA515290469B112790D1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::OnNotifyBegin_A3C9FE0E4D8CDA515290469B112790D1(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "OnNotifyBegin_A3C9FE0E4D8CDA515290469B112790D1");

	Params::ParentAI_C_OnNotifyBegin_A3C9FE0E4D8CDA515290469B112790D1 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.OnNotifyEnd_A3C9FE0E4D8CDA515290469B112790D1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::OnNotifyEnd_A3C9FE0E4D8CDA515290469B112790D1(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "OnNotifyEnd_A3C9FE0E4D8CDA515290469B112790D1");

	Params::ParentAI_C_OnNotifyEnd_A3C9FE0E4D8CDA515290469B112790D1 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.PhysicBodyReaction
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HitAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::PhysicBodyReaction(class FName BoneName, double HitAngle, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "PhysicBodyReaction");

	Params::ParentAI_C_PhysicBodyReaction Parms{};

	Parms.BoneName = BoneName;
	Parms.HitAngle = HitAngle;
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.PlayBodyFallSound_MULTI
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AParentAI_C::PlayBodyFallSound_MULTI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "PlayBodyFallSound_MULTI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.PlayDeathSound_MULTI
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::PlayDeathSound_MULTI(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "PlayDeathSound_MULTI");

	Params::ParentAI_C_PlayDeathSound_MULTI Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.PlayersWeaponRandomWeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    BoolWithWeight                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::PlayersWeaponRandomWeight(class AActor* DamageCauser, bool* BoolWithWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "PlayersWeaponRandomWeight");

	Params::ParentAI_C_PlayersWeaponRandomWeight Parms{};

	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	if (BoolWithWeight != nullptr)
		*BoolWithWeight = Parms.BoolWithWeight;
}


// Function ParentAI.ParentAI_C.PlayMontage_MULTI
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Param_Mesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    WithoutServer_                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::PlayMontage_MULTI(class USkeletalMeshComponent* Param_Mesh, class UAnimMontage* Montage, bool WithoutServer_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "PlayMontage_MULTI");

	Params::ParentAI_C_PlayMontage_MULTI Parms{};

	Parms.Param_Mesh = Param_Mesh;
	Parms.Montage = Montage;
	Parms.WithoutServer_ = WithoutServer_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.PlaySound_MULTI
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       FMODEvent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachToComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Occlusion_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::PlaySound_MULTI(class UFMODEvent* FMODEvent, class USceneComponent* AttachToComponent, bool Occlusion_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "PlaySound_MULTI");

	Params::ParentAI_C_PlaySound_MULTI Parms{};

	Parms.FMODEvent = FMODEvent;
	Parms.AttachToComponent = AttachToComponent;
	Parms.Occlusion_ = Occlusion_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.RandomInteger(Server->Clients)
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RandomInteger                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::RandomInteger_ServerMinus_Clients_(int32 Min, int32 Max, int32* RandomInteger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "RandomInteger(Server->Clients)");

	Params::ParentAI_C_RandomInteger_ServerMinus_Clients_ Parms{};

	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	if (RandomInteger != nullptr)
		*RandomInteger = Parms.RandomInteger;
}


// Function ParentAI.ParentAI_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AParentAI_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "ReceiveTick");

	Params::ParentAI_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.SetInstigatorLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  SphereRadius                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AIType                                AIType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::SetInstigatorLocation(class AController* InstigatedBy, double SphereRadius, E_AIType AIType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "SetInstigatorLocation");

	Params::ParentAI_C_SetInstigatorLocation Parms{};

	Parms.InstigatedBy = InstigatedBy;
	Parms.SphereRadius = SphereRadius;
	Parms.AIType = AIType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.SetMoveSpeed_MULTI
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::SetMoveSpeed_MULTI(double Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "SetMoveSpeed_MULTI");

	Params::ParentAI_C_SetMoveSpeed_MULTI Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.SetMoveSpeed_SERV
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::SetMoveSpeed_SERV(double Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "SetMoveSpeed_SERV");

	Params::ParentAI_C_SetMoveSpeed_SERV Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.SetOrToMov_SERV
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::SetOrToMov_SERV(bool _)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "SetOrToMov_SERV");

	Params::ParentAI_C_SetOrToMov_SERV Parms{};

	Parms._ = _;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.SetRandomMoveSpeed_MULTI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::SetRandomMoveSpeed_MULTI(double Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "SetRandomMoveSpeed_MULTI");

	Params::ParentAI_C_SetRandomMoveSpeed_MULTI Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.SetRandomMoveSpeed_SERV
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::SetRandomMoveSpeed_SERV(double Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "SetRandomMoveSpeed_SERV");

	Params::ParentAI_C_SetRandomMoveSpeed_SERV Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.SetRotYaw_SERV
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::SetRotYaw_SERV(bool _)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "SetRotYaw_SERV");

	Params::ParentAI_C_SetRotYaw_SERV Parms{};

	Parms._ = _;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.SpawnEmitter_MULTI
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  EmitterTemplate                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::SpawnEmitter_MULTI(class UParticleSystem* EmitterTemplate, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "SpawnEmitter_MULTI");

	Params::ParentAI_C_SpawnEmitter_MULTI Parms{};

	Parms.EmitterTemplate = EmitterTemplate;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.Scale = std::move(Scale);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.StartCalculatePitchYaw
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Stop_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::StartCalculatePitchYaw(bool Stop_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "StartCalculatePitchYaw");

	Params::ParentAI_C_StartCalculatePitchYaw Parms{};

	Parms.Stop_ = Stop_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.StopCurrentMontage_MULTI
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InBlendOutTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::StopCurrentMontage_MULTI(double InBlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "StopCurrentMontage_MULTI");

	Params::ParentAI_C_StopCurrentMontage_MULTI Parms{};

	Parms.InBlendOutTime = InBlendOutTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.StopCurrentMontageWithBlend
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InBlendOutTime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AParentAI_C::StopCurrentMontageWithBlend(double InBlendOutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "StopCurrentMontageWithBlend");

	Params::ParentAI_C_StopCurrentMontageWithBlend Parms{};

	Parms.InBlendOutTime = InBlendOutTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ParentAI.ParentAI_C.Timeline_PhysBodyReact__FinishedFunc
// (BlueprintEvent)

void AParentAI_C::Timeline_PhysBodyReact__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "Timeline_PhysBodyReact__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.Timeline_PhysBodyReact__UpdateFunc
// (BlueprintEvent)

void AParentAI_C::Timeline_PhysBodyReact__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "Timeline_PhysBodyReact__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.Timer_CalculatePitchYaw
// (BlueprintCallable, BlueprintEvent)

void AParentAI_C::Timer_CalculatePitchYaw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "Timer_CalculatePitchYaw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ParentAI.ParentAI_C.TurnOnSenses
// (Public, BlueprintCallable, BlueprintEvent)

void AParentAI_C::TurnOnSenses()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ParentAI_C", "TurnOnSenses");

	UObject::ProcessEvent(Func, nullptr);
}

}

