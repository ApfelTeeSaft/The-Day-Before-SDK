#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: I_VehicleAnimator

#include "Basic.hpp"

#include "I_VehicleAnimator_classes.hpp"
#include "I_VehicleAnimator_parameters.hpp"


namespace SDK
{

// Function I_VehicleAnimator.I_VehicleAnimator_C.CallEntranceAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimInstance*                    PlayerAnimInstance                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::CallEntranceAnim(class UAnimInstance* PlayerAnimInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "CallEntranceAnim");

	Params::I_VehicleAnimator_C_CallEntranceAnim Parms{};

	Parms.PlayerAnimInstance = PlayerAnimInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_VehicleAnimator.I_VehicleAnimator_C.CallExitAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimInstance*                    PlayerAnimInstance                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::CallExitAnim(class UAnimInstance* PlayerAnimInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "CallExitAnim");

	Params::I_VehicleAnimator_C_CallExitAnim Parms{};

	Parms.PlayerAnimInstance = PlayerAnimInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_VehicleAnimator.I_VehicleAnimator_C.CallPassangerEntranceAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimInstance*                    PlayerAnimInst                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::CallPassangerEntranceAnim(class UAnimInstance* PlayerAnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "CallPassangerEntranceAnim");

	Params::I_VehicleAnimator_C_CallPassangerEntranceAnim Parms{};

	Parms.PlayerAnimInst = PlayerAnimInst;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_VehicleAnimator.I_VehicleAnimator_C.CallPassangerExitAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimInstance*                    PlayerAnimInst                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::CallPassangerExitAnim(class UAnimInstance* PlayerAnimInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "CallPassangerExitAnim");

	Params::I_VehicleAnimator_C_CallPassangerExitAnim Parms{};

	Parms.PlayerAnimInst = PlayerAnimInst;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_VehicleAnimator.I_VehicleAnimator_C.SetLBScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::SetLBScale(double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "SetLBScale");

	Params::I_VehicleAnimator_C_SetLBScale Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_VehicleAnimator.I_VehicleAnimator_C.SetLFScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::SetLFScale(double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "SetLFScale");

	Params::I_VehicleAnimator_C_SetLFScale Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_VehicleAnimator.I_VehicleAnimator_C.SetRBScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::SetRBScale(double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "SetRBScale");

	Params::I_VehicleAnimator_C_SetRBScale Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_VehicleAnimator.I_VehicleAnimator_C.SetRFScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::SetRFScale(double Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "SetRFScale");

	Params::I_VehicleAnimator_C_SetRFScale Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function I_VehicleAnimator.I_VehicleAnimator_C.UpdateRubberSteering
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::UpdateRubberSteering(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "UpdateRubberSteering");

	Params::I_VehicleAnimator_C_UpdateRubberSteering Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function I_VehicleAnimator.I_VehicleAnimator_C.UpdateWheelRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::UpdateWheelRotation(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "UpdateWheelRotation");

	Params::I_VehicleAnimator_C_UpdateWheelRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function I_VehicleAnimator.I_VehicleAnimator_C.UpdateWheelTranslation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void II_VehicleAnimator_C::UpdateWheelTranslation(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("I_VehicleAnimator_C", "UpdateWheelTranslation");

	Params::I_VehicleAnimator_C_UpdateWheelTranslation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}

}

