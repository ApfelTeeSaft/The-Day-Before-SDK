#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ZombieManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Survival_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ZombieManager.ZombieManager_C.ActivateAI
// 0x0020 (0x0020 - 0x0000)
struct ZombieManager_C_ActivateAI final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_ActivateAI) == 0x000008, "Wrong alignment on ZombieManager_C_ActivateAI");
static_assert(sizeof(ZombieManager_C_ActivateAI) == 0x000020, "Wrong size on ZombieManager_C_ActivateAI");
static_assert(offsetof(ZombieManager_C_ActivateAI, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ZombieManager_C_ActivateAI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ActivateAI, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ZombieManager_C_ActivateAI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ActivateAI, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ZombieManager_C_ActivateAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ActivateAI, CallFunc_Array_Get_Item) == 0x000010, "Member 'ZombieManager_C_ActivateAI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ActivateAI, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ZombieManager_C_ActivateAI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ActivateAI, CallFunc_GetZombieAnimType_ReturnValue) == 0x00001C, "Member 'ZombieManager_C_ActivateAI::CallFunc_GetZombieAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ActivateAI, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'ZombieManager_C_ActivateAI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.Check Players
// 0x0028 (0x0028 - 0x0000)
struct ZombieManager_C_Check_Players final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmountOfPlayerControllers_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_Check_Players) == 0x000008, "Wrong alignment on ZombieManager_C_Check_Players");
static_assert(sizeof(ZombieManager_C_Check_Players) == 0x000028, "Wrong size on ZombieManager_C_Check_Players");
static_assert(offsetof(ZombieManager_C_Check_Players, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'ZombieManager_C_Check_Players::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Check_Players, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'ZombieManager_C_Check_Players::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Check_Players, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'ZombieManager_C_Check_Players::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Check_Players, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x000010, "Member 'ZombieManager_C_Check_Players::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Check_Players, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ZombieManager_C_Check_Players::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Check_Players, CallFunc_GetAmountOfPlayerControllers_ReturnValue) == 0x00001C, "Member 'ZombieManager_C_Check_Players::CallFunc_GetAmountOfPlayerControllers_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Check_Players, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'ZombieManager_C_Check_Players::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.DeactivateAI
// 0x0020 (0x0020 - 0x0000)
struct ZombieManager_C_DeactivateAI final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_DeactivateAI) == 0x000008, "Wrong alignment on ZombieManager_C_DeactivateAI");
static_assert(sizeof(ZombieManager_C_DeactivateAI) == 0x000020, "Wrong size on ZombieManager_C_DeactivateAI");
static_assert(offsetof(ZombieManager_C_DeactivateAI, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ZombieManager_C_DeactivateAI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_DeactivateAI, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ZombieManager_C_DeactivateAI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_DeactivateAI, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ZombieManager_C_DeactivateAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_DeactivateAI, CallFunc_Array_Get_Item) == 0x000010, "Member 'ZombieManager_C_DeactivateAI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_DeactivateAI, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ZombieManager_C_DeactivateAI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_DeactivateAI, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'ZombieManager_C_DeactivateAI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.ExecuteUbergraph_ZombieManager
// 0x00A0 (0x00A0 - 0x0000)
struct ZombieManager_C_ExecuteUbergraph_ZombieManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombieReturn_TriggerBox_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_ExecuteUbergraph_ZombieManager) == 0x000010, "Wrong alignment on ZombieManager_C_ExecuteUbergraph_ZombieManager");
static_assert(sizeof(ZombieManager_C_ExecuteUbergraph_ZombieManager) == 0x0000A0, "Wrong size on ZombieManager_C_ExecuteUbergraph_ZombieManager");
static_assert(offsetof(ZombieManager_C_ExecuteUbergraph_ZombieManager, EntryPoint) == 0x000000, "Member 'ZombieManager_C_ExecuteUbergraph_ZombieManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ExecuteUbergraph_ZombieManager, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'ZombieManager_C_ExecuteUbergraph_ZombieManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ExecuteUbergraph_ZombieManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'ZombieManager_C_ExecuteUbergraph_ZombieManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ExecuteUbergraph_ZombieManager, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'ZombieManager_C_ExecuteUbergraph_ZombieManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ExecuteUbergraph_ZombieManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'ZombieManager_C_ExecuteUbergraph_ZombieManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ExecuteUbergraph_ZombieManager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000090, "Member 'ZombieManager_C_ExecuteUbergraph_ZombieManager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.Get Dead Zombies Amount
// 0x0048 (0x0048 - 0x0000)
struct ZombieManager_C_Get_Dead_Zombies_Amount final
{
public:
	int32                                         DeadZombiesAmount;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DeadZombiesCount;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombie_C*>                      CallFunc_GetActiveZombies_ActiveZombies;           // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_Get_Dead_Zombies_Amount) == 0x000008, "Wrong alignment on ZombieManager_C_Get_Dead_Zombies_Amount");
static_assert(sizeof(ZombieManager_C_Get_Dead_Zombies_Amount) == 0x000048, "Wrong size on ZombieManager_C_Get_Dead_Zombies_Amount");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, DeadZombiesAmount) == 0x000000, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::DeadZombiesAmount' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, DeadZombiesCount) == 0x000004, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::DeadZombiesCount' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, Temp_int_Variable) == 0x000014, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, CallFunc_GetActiveZombies_ActiveZombies) == 0x000020, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::CallFunc_GetActiveZombies_ActiveZombies' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, CallFunc_Array_Get_Item) == 0x000038, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Dead_Zombies_Amount, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'ZombieManager_C_Get_Dead_Zombies_Amount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.Get Free Zombie Index
// 0x0038 (0x0038 - 0x0000)
struct ZombieManager_C_Get_Free_Zombie_Index final
{
public:
	bool                                          IsCityZombie;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FreeIndex;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundFreeIndex;                                    // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FreeZombieIndex;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_Get_Free_Zombie_Index) == 0x000004, "Wrong alignment on ZombieManager_C_Get_Free_Zombie_Index");
static_assert(sizeof(ZombieManager_C_Get_Free_Zombie_Index) == 0x000038, "Wrong size on ZombieManager_C_Get_Free_Zombie_Index");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, IsCityZombie) == 0x000000, "Member 'ZombieManager_C_Get_Free_Zombie_Index::IsCityZombie' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, FreeIndex) == 0x000004, "Member 'ZombieManager_C_Get_Free_Zombie_Index::FreeIndex' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, FoundFreeIndex) == 0x000008, "Member 'ZombieManager_C_Get_Free_Zombie_Index::FoundFreeIndex' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, FreeZombieIndex) == 0x00000C, "Member 'ZombieManager_C_Get_Free_Zombie_Index::FreeZombieIndex' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'ZombieManager_C_Get_Free_Zombie_Index::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, Temp_int_Array_Index_Variable) == 0x000014, "Member 'ZombieManager_C_Get_Free_Zombie_Index::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'ZombieManager_C_Get_Free_Zombie_Index::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'ZombieManager_C_Get_Free_Zombie_Index::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'ZombieManager_C_Get_Free_Zombie_Index::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'ZombieManager_C_Get_Free_Zombie_Index::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'ZombieManager_C_Get_Free_Zombie_Index::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ZombieManager_C_Get_Free_Zombie_Index::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'ZombieManager_C_Get_Free_Zombie_Index::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, CallFunc_Array_Contains_ReturnValue) == 0x00002D, "Member 'ZombieManager_C_Get_Free_Zombie_Index::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'ZombieManager_C_Get_Free_Zombie_Index::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, CallFunc_Less_IntInt_ReturnValue_1) == 0x000034, "Member 'ZombieManager_C_Get_Free_Zombie_Index::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Free_Zombie_Index, CallFunc_BooleanAND_ReturnValue_1) == 0x000035, "Member 'ZombieManager_C_Get_Free_Zombie_Index::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.Get Sleeping Zombies Amount
// 0x0040 (0x0040 - 0x0000)
struct ZombieManager_C_Get_Sleeping_Zombies_Amount final
{
public:
	int32                                         SleepingZombiesAmount;                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AZombie_C*>                      CallFunc_GetActiveZombies_ActiveZombies;           // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_Get_Sleeping_Zombies_Amount) == 0x000008, "Wrong alignment on ZombieManager_C_Get_Sleeping_Zombies_Amount");
static_assert(sizeof(ZombieManager_C_Get_Sleeping_Zombies_Amount) == 0x000040, "Wrong size on ZombieManager_C_Get_Sleeping_Zombies_Amount");
static_assert(offsetof(ZombieManager_C_Get_Sleeping_Zombies_Amount, SleepingZombiesAmount) == 0x000000, "Member 'ZombieManager_C_Get_Sleeping_Zombies_Amount::SleepingZombiesAmount' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Sleeping_Zombies_Amount, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ZombieManager_C_Get_Sleeping_Zombies_Amount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Sleeping_Zombies_Amount, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ZombieManager_C_Get_Sleeping_Zombies_Amount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Sleeping_Zombies_Amount, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'ZombieManager_C_Get_Sleeping_Zombies_Amount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Sleeping_Zombies_Amount, Temp_int_Variable) == 0x000010, "Member 'ZombieManager_C_Get_Sleeping_Zombies_Amount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Sleeping_Zombies_Amount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'ZombieManager_C_Get_Sleeping_Zombies_Amount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Sleeping_Zombies_Amount, CallFunc_GetActiveZombies_ActiveZombies) == 0x000018, "Member 'ZombieManager_C_Get_Sleeping_Zombies_Amount::CallFunc_GetActiveZombies_ActiveZombies' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Sleeping_Zombies_Amount, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ZombieManager_C_Get_Sleeping_Zombies_Amount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Sleeping_Zombies_Amount, CallFunc_Array_Get_Item) == 0x000030, "Member 'ZombieManager_C_Get_Sleeping_Zombies_Amount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_Get_Sleeping_Zombies_Amount, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'ZombieManager_C_Get_Sleeping_Zombies_Amount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.GetActiveZombies
// 0x0010 (0x0010 - 0x0000)
struct ZombieManager_C_GetActiveZombies final
{
public:
	TArray<class AZombie_C*>                      Param_ActiveZombies;                               // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(ZombieManager_C_GetActiveZombies) == 0x000008, "Wrong alignment on ZombieManager_C_GetActiveZombies");
static_assert(sizeof(ZombieManager_C_GetActiveZombies) == 0x000010, "Wrong size on ZombieManager_C_GetActiveZombies");
static_assert(offsetof(ZombieManager_C_GetActiveZombies, Param_ActiveZombies) == 0x000000, "Member 'ZombieManager_C_GetActiveZombies::Param_ActiveZombies' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.GetActiveZombiesAmount
// 0x0008 (0x0008 - 0x0000)
struct ZombieManager_C_GetActiveZombiesAmount final
{
public:
	int32                                         ZombiesAmount;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_GetActiveZombiesAmount) == 0x000004, "Wrong alignment on ZombieManager_C_GetActiveZombiesAmount");
static_assert(sizeof(ZombieManager_C_GetActiveZombiesAmount) == 0x000008, "Wrong size on ZombieManager_C_GetActiveZombiesAmount");
static_assert(offsetof(ZombieManager_C_GetActiveZombiesAmount, ZombiesAmount) == 0x000000, "Member 'ZombieManager_C_GetActiveZombiesAmount::ZombiesAmount' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_GetActiveZombiesAmount, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'ZombieManager_C_GetActiveZombiesAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.GetAllZombies
// 0x0010 (0x0010 - 0x0000)
struct ZombieManager_C_GetAllZombies final
{
public:
	TArray<class AZombie_C*>                      Param_AllZombies;                                  // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(ZombieManager_C_GetAllZombies) == 0x000008, "Wrong alignment on ZombieManager_C_GetAllZombies");
static_assert(sizeof(ZombieManager_C_GetAllZombies) == 0x000010, "Wrong size on ZombieManager_C_GetAllZombies");
static_assert(offsetof(ZombieManager_C_GetAllZombies, Param_AllZombies) == 0x000000, "Member 'ZombieManager_C_GetAllZombies::Param_AllZombies' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.GetDeactivatedAI
// 0x0001 (0x0001 - 0x0000)
struct ZombieManager_C_GetDeactivatedAI final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_GetDeactivatedAI) == 0x000001, "Wrong alignment on ZombieManager_C_GetDeactivatedAI");
static_assert(sizeof(ZombieManager_C_GetDeactivatedAI) == 0x000001, "Wrong size on ZombieManager_C_GetDeactivatedAI");
static_assert(offsetof(ZombieManager_C_GetDeactivatedAI, ReturnValue) == 0x000000, "Member 'ZombieManager_C_GetDeactivatedAI::ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.GetInvisibleZombieBlueprintsCount
// 0x0008 (0x0008 - 0x0000)
struct ZombieManager_C_GetInvisibleZombieBlueprintsCount final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_GetInvisibleZombieBlueprintsCount) == 0x000004, "Wrong alignment on ZombieManager_C_GetInvisibleZombieBlueprintsCount");
static_assert(sizeof(ZombieManager_C_GetInvisibleZombieBlueprintsCount) == 0x000008, "Wrong size on ZombieManager_C_GetInvisibleZombieBlueprintsCount");
static_assert(offsetof(ZombieManager_C_GetInvisibleZombieBlueprintsCount, NewParam) == 0x000000, "Member 'ZombieManager_C_GetInvisibleZombieBlueprintsCount::NewParam' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_GetInvisibleZombieBlueprintsCount, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'ZombieManager_C_GetInvisibleZombieBlueprintsCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.IsSpawnBlocked
// 0x0001 (0x0001 - 0x0000)
struct ZombieManager_C_IsSpawnBlocked final
{
public:
	bool                                          IsBlocked;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_IsSpawnBlocked) == 0x000001, "Wrong alignment on ZombieManager_C_IsSpawnBlocked");
static_assert(sizeof(ZombieManager_C_IsSpawnBlocked) == 0x000001, "Wrong size on ZombieManager_C_IsSpawnBlocked");
static_assert(offsetof(ZombieManager_C_IsSpawnBlocked, IsBlocked) == 0x000000, "Member 'ZombieManager_C_IsSpawnBlocked::IsBlocked' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.KillAllActiveZombies
// 0x0028 (0x0028 - 0x0000)
struct ZombieManager_C_KillAllActiveZombies final
{
public:
	class AController*                            InstigatedBy;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_KillAllActiveZombies) == 0x000008, "Wrong alignment on ZombieManager_C_KillAllActiveZombies");
static_assert(sizeof(ZombieManager_C_KillAllActiveZombies) == 0x000028, "Wrong size on ZombieManager_C_KillAllActiveZombies");
static_assert(offsetof(ZombieManager_C_KillAllActiveZombies, InstigatedBy) == 0x000000, "Member 'ZombieManager_C_KillAllActiveZombies::InstigatedBy' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_KillAllActiveZombies, Temp_int_Array_Index_Variable) == 0x000008, "Member 'ZombieManager_C_KillAllActiveZombies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_KillAllActiveZombies, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'ZombieManager_C_KillAllActiveZombies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_KillAllActiveZombies, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ZombieManager_C_KillAllActiveZombies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_KillAllActiveZombies, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'ZombieManager_C_KillAllActiveZombies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_KillAllActiveZombies, CallFunc_Array_Get_Item) == 0x000018, "Member 'ZombieManager_C_KillAllActiveZombies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_KillAllActiveZombies, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'ZombieManager_C_KillAllActiveZombies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.RequestSpawnOfZombie
// 0x00E0 (0x00E0 - 0x0000)
struct ZombieManager_C_RequestSpawnOfZombie final
{
public:
	int32                                         MeshType;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               AnimType;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TSet<class UQuest*>                           Quests;                                            // 0x0038(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class ABP_Door_C*                             ConnectedDoor;                                     // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TArray<class ATargetPoint*>                   PatrollingPath;                                    // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsCityZombie;                                      // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              SpawnedZombie;                                     // 0x00A8(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              Zombie;                                            // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         ManagerIndex;                                      // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Free_Zombie_Index_FreeIndex;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_RequestSpawnOfZombie) == 0x000008, "Wrong alignment on ZombieManager_C_RequestSpawnOfZombie");
static_assert(sizeof(ZombieManager_C_RequestSpawnOfZombie) == 0x0000E0, "Wrong size on ZombieManager_C_RequestSpawnOfZombie");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, MeshType) == 0x000000, "Member 'ZombieManager_C_RequestSpawnOfZombie::MeshType' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, Type) == 0x000004, "Member 'ZombieManager_C_RequestSpawnOfZombie::Type' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, AnimType) == 0x000005, "Member 'ZombieManager_C_RequestSpawnOfZombie::AnimType' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, Location) == 0x000008, "Member 'ZombieManager_C_RequestSpawnOfZombie::Location' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, Rotation) == 0x000020, "Member 'ZombieManager_C_RequestSpawnOfZombie::Rotation' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, Quests) == 0x000038, "Member 'ZombieManager_C_RequestSpawnOfZombie::Quests' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, ConnectedDoor) == 0x000088, "Member 'ZombieManager_C_RequestSpawnOfZombie::ConnectedDoor' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, PatrollingPath) == 0x000090, "Member 'ZombieManager_C_RequestSpawnOfZombie::PatrollingPath' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, IsCityZombie) == 0x0000A0, "Member 'ZombieManager_C_RequestSpawnOfZombie::IsCityZombie' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, SpawnedZombie) == 0x0000A8, "Member 'ZombieManager_C_RequestSpawnOfZombie::SpawnedZombie' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, Zombie) == 0x0000B0, "Member 'ZombieManager_C_RequestSpawnOfZombie::Zombie' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, ManagerIndex) == 0x0000B8, "Member 'ZombieManager_C_RequestSpawnOfZombie::ManagerIndex' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, CallFunc_Get_Free_Zombie_Index_FreeIndex) == 0x0000BC, "Member 'ZombieManager_C_RequestSpawnOfZombie::CallFunc_Get_Free_Zombie_Index_FreeIndex' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'ZombieManager_C_RequestSpawnOfZombie::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'ZombieManager_C_RequestSpawnOfZombie::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'ZombieManager_C_RequestSpawnOfZombie::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, CallFunc_Array_Add_ReturnValue_1) == 0x0000CC, "Member 'ZombieManager_C_RequestSpawnOfZombie::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, Temp_int_Variable) == 0x0000D0, "Member 'ZombieManager_C_RequestSpawnOfZombie::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_RequestSpawnOfZombie, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'ZombieManager_C_RequestSpawnOfZombie::CallFunc_Array_Get_Item' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.ResetZombie
// 0x0020 (0x0020 - 0x0000)
struct ZombieManager_C_ResetZombie final
{
public:
	int32                                         ZombieManagerIndex;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              ZombieRef;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCityZombie;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_ResetZombie) == 0x000008, "Wrong alignment on ZombieManager_C_ResetZombie");
static_assert(sizeof(ZombieManager_C_ResetZombie) == 0x000020, "Wrong size on ZombieManager_C_ResetZombie");
static_assert(offsetof(ZombieManager_C_ResetZombie, ZombieManagerIndex) == 0x000000, "Member 'ZombieManager_C_ResetZombie::ZombieManagerIndex' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ResetZombie, ZombieRef) == 0x000008, "Member 'ZombieManager_C_ResetZombie::ZombieRef' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ResetZombie, IsCityZombie) == 0x000010, "Member 'ZombieManager_C_ResetZombie::IsCityZombie' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ResetZombie, Temp_int_Variable) == 0x000014, "Member 'ZombieManager_C_ResetZombie::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ResetZombie, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'ZombieManager_C_ResetZombie::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ResetZombie, CallFunc_Array_RemoveItem_ReturnValue) == 0x00001C, "Member 'ZombieManager_C_ResetZombie::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ResetZombie, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00001D, "Member 'ZombieManager_C_ResetZombie::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.SetMaxZombiesOnServer
// 0x0004 (0x0004 - 0x0000)
struct ZombieManager_C_SetMaxZombiesOnServer final
{
public:
	int32                                         Param_MaxAmountOfZombiesOnServer;                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_SetMaxZombiesOnServer) == 0x000004, "Wrong alignment on ZombieManager_C_SetMaxZombiesOnServer");
static_assert(sizeof(ZombieManager_C_SetMaxZombiesOnServer) == 0x000004, "Wrong size on ZombieManager_C_SetMaxZombiesOnServer");
static_assert(offsetof(ZombieManager_C_SetMaxZombiesOnServer, Param_MaxAmountOfZombiesOnServer) == 0x000000, "Member 'ZombieManager_C_SetMaxZombiesOnServer::Param_MaxAmountOfZombiesOnServer' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.SpawnerRequest
// 0x0038 (0x0038 - 0x0000)
struct ZombieManager_C_SpawnerRequest final
{
public:
	int32                                         AmountOfZombie;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_SpawnerRequest) == 0x000008, "Wrong alignment on ZombieManager_C_SpawnerRequest");
static_assert(sizeof(ZombieManager_C_SpawnerRequest) == 0x000038, "Wrong size on ZombieManager_C_SpawnerRequest");
static_assert(offsetof(ZombieManager_C_SpawnerRequest, AmountOfZombie) == 0x000000, "Member 'ZombieManager_C_SpawnerRequest::AmountOfZombie' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnerRequest, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'ZombieManager_C_SpawnerRequest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnerRequest, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ZombieManager_C_SpawnerRequest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnerRequest, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'ZombieManager_C_SpawnerRequest::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnerRequest, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'ZombieManager_C_SpawnerRequest::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnerRequest, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'ZombieManager_C_SpawnerRequest::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnerRequest, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x00002C, "Member 'ZombieManager_C_SpawnerRequest::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnerRequest, CallFunc_Min_ReturnValue) == 0x000030, "Member 'ZombieManager_C_SpawnerRequest::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.SpawnZombie
// 0x00A0 (0x00A0 - 0x0000)
struct ZombieManager_C_SpawnZombie final
{
public:
	class AZombie_C*                              SpawnedZombie;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          ArmoredZombie;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ZombieClass;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_SpawnZombie) == 0x000010, "Wrong alignment on ZombieManager_C_SpawnZombie");
static_assert(sizeof(ZombieManager_C_SpawnZombie) == 0x0000A0, "Wrong size on ZombieManager_C_SpawnZombie");
static_assert(offsetof(ZombieManager_C_SpawnZombie, SpawnedZombie) == 0x000000, "Member 'ZombieManager_C_SpawnZombie::SpawnedZombie' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnZombie, ArmoredZombie) == 0x000008, "Member 'ZombieManager_C_SpawnZombie::ArmoredZombie' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnZombie, ZombieClass) == 0x000010, "Member 'ZombieManager_C_SpawnZombie::ZombieClass' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnZombie, Temp_int_Variable) == 0x000018, "Member 'ZombieManager_C_SpawnZombie::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnZombie, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'ZombieManager_C_SpawnZombie::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnZombie, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'ZombieManager_C_SpawnZombie::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnZombie, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'ZombieManager_C_SpawnZombie::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnZombie, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'ZombieManager_C_SpawnZombie::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnZombie, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'ZombieManager_C_SpawnZombie::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnZombie, CallFunc_Less_IntInt_ReturnValue) == 0x000095, "Member 'ZombieManager_C_SpawnZombie::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_SpawnZombie, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'ZombieManager_C_SpawnZombie::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.ToggleBlockSpawn
// 0x0001 (0x0001 - 0x0000)
struct ZombieManager_C_ToggleBlockSpawn final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_ToggleBlockSpawn) == 0x000001, "Wrong alignment on ZombieManager_C_ToggleBlockSpawn");
static_assert(sizeof(ZombieManager_C_ToggleBlockSpawn) == 0x000001, "Wrong size on ZombieManager_C_ToggleBlockSpawn");
static_assert(offsetof(ZombieManager_C_ToggleBlockSpawn, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'ZombieManager_C_ToggleBlockSpawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.ToggleZombieAI
// 0x0030 (0x0030 - 0x0000)
struct ZombieManager_C_ToggleZombieAI final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_ToggleZombieAI) == 0x000008, "Wrong alignment on ZombieManager_C_ToggleZombieAI");
static_assert(sizeof(ZombieManager_C_ToggleZombieAI) == 0x000030, "Wrong size on ZombieManager_C_ToggleZombieAI");
static_assert(offsetof(ZombieManager_C_ToggleZombieAI, Temp_int_Array_Index_Variable) == 0x000000, "Member 'ZombieManager_C_ToggleZombieAI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ToggleZombieAI, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'ZombieManager_C_ToggleZombieAI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ToggleZombieAI, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ZombieManager_C_ToggleZombieAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ToggleZombieAI, CallFunc_Array_Get_Item) == 0x000010, "Member 'ZombieManager_C_ToggleZombieAI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ToggleZombieAI, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'ZombieManager_C_ToggleZombieAI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ToggleZombieAI, CallFunc_GetBlackboard_ReturnValue) == 0x000020, "Member 'ZombieManager_C_ToggleZombieAI::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ToggleZombieAI, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ZombieManager_C_ToggleZombieAI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_ToggleZombieAI, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'ZombieManager_C_ToggleZombieAI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ZombieManager.ZombieManager_C.UpdateInvisibleStat
// 0x0018 (0x0018 - 0x0000)
struct ZombieManager_C_UpdateInvisibleStat final
{
public:
	const class AZombie_C*                        KilledZombie;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ZombieManager_C_UpdateInvisibleStat) == 0x000008, "Wrong alignment on ZombieManager_C_UpdateInvisibleStat");
static_assert(sizeof(ZombieManager_C_UpdateInvisibleStat) == 0x000018, "Wrong size on ZombieManager_C_UpdateInvisibleStat");
static_assert(offsetof(ZombieManager_C_UpdateInvisibleStat, KilledZombie) == 0x000000, "Member 'ZombieManager_C_UpdateInvisibleStat::KilledZombie' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_UpdateInvisibleStat, Temp_int_Variable) == 0x000008, "Member 'ZombieManager_C_UpdateInvisibleStat::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_UpdateInvisibleStat, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'ZombieManager_C_UpdateInvisibleStat::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ZombieManager_C_UpdateInvisibleStat, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ZombieManager_C_UpdateInvisibleStat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

