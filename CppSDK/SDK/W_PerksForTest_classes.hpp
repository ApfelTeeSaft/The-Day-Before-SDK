#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PerksForTest

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PerksForTest.W_PerksForTest_C
// 0x0038 (0x02B8 - 0x0280)
class UW_PerksForTest_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGridPanel*                             GridPanel_79;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UW_PerkItem_C*>                  PerkItems;                                         // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBPC_PerkSystem_C*                      PlayerPerkSystem;                                  // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_PerkItem_C*>                  PerkItemsActivated;                                // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void Construct();
	void ExecuteUbergraph_W_PerksForTest(int32 EntryPoint);
	void PerkActivated(class UW_PerkItem_C* Perk);
	void PerkDeactivated(class UW_PerkItem_C* Perk);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PerksForTest_C">();
	}
	static class UW_PerksForTest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PerksForTest_C>();
	}
};
static_assert(alignof(UW_PerksForTest_C) == 0x000008, "Wrong alignment on UW_PerksForTest_C");
static_assert(sizeof(UW_PerksForTest_C) == 0x0002B8, "Wrong size on UW_PerksForTest_C");
static_assert(offsetof(UW_PerksForTest_C, UberGraphFrame) == 0x000280, "Member 'UW_PerksForTest_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PerksForTest_C, GridPanel_79) == 0x000288, "Member 'UW_PerksForTest_C::GridPanel_79' has a wrong offset!");
static_assert(offsetof(UW_PerksForTest_C, PerkItems) == 0x000290, "Member 'UW_PerksForTest_C::PerkItems' has a wrong offset!");
static_assert(offsetof(UW_PerksForTest_C, PlayerPerkSystem) == 0x0002A0, "Member 'UW_PerksForTest_C::PlayerPerkSystem' has a wrong offset!");
static_assert(offsetof(UW_PerksForTest_C, PerkItemsActivated) == 0x0002A8, "Member 'UW_PerksForTest_C::PerkItemsActivated' has a wrong offset!");

}

