#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Crosshair

#include "Basic.hpp"

#include "BPI_Crosshair_classes.hpp"
#include "BPI_Crosshair_parameters.hpp"


namespace SDK
{

// Function BPI_Crosshair.BPI_Crosshair_C.Aim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Aim                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Crosshair_C::Aim(bool Param_Aim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Crosshair_C", "Aim");

	Params::BPI_Crosshair_C_Aim Parms{};

	Parms.Param_Aim = Param_Aim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_Crosshair.BPI_Crosshair_C.hit
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Crosshair_C::Hit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Crosshair_C", "hit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_Crosshair.BPI_Crosshair_C.Kill
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_Crosshair_C::Kill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Crosshair_C", "Kill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_Crosshair.BPI_Crosshair_C.Shoot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Shooting                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_Crosshair_C::Shoot(bool Shooting, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_Crosshair_C", "Shoot");

	Params::BPI_Crosshair_C_Shoot Parms{};

	Parms.Shooting = Shooting;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

