#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractiveSafe

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "E_ActorType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.ExecuteUbergraph_BP_InteractiveSafe
// 0x0198 (0x0198 - 0x0000)
struct BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_2;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetReferences_Result;                     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInGameContainerWidget_C*               CallFunc_Create_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferences__ByPawn__Result;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetReferences__ByPawn__Player;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              CallFunc_GetReferences__ByPawn__Controller;        // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          CallFunc_GetReferences__ByPawn__HUD;               // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player;                               // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferences__ByPawn__Result_1;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetReferences__ByPawn__Player_1;          // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              CallFunc_GetReferences__ByPawn__Controller_1;      // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          CallFunc_GetReferences__ByPawn__HUD_1;             // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI_1;                             // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe");
static_assert(sizeof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe) == 0x000198, "Wrong size on BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, EntryPoint) == 0x000000, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Player_8) == 0x000018, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Player_7) == 0x000020, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Player_6) == 0x000028, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Player_5) == 0x000030, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_SitIndex) == 0x000038, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_SkipAnimation) == 0x00003C, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Player_4) == 0x000040, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Visible_1) == 0x000048, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Visible) == 0x000049, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Player_3) == 0x000050, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Player_2) == 0x000068, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_DynamicCast_AsPlayer_Controller) == 0x000070, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_SetReferences_Result) == 0x000079, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_SetReferences_Result' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_Create_ReturnValue) == 0x000080, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Player_1) == 0x000090, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetReferences__ByPawn__Result) == 0x000098, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetReferences__ByPawn__Result' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetReferences__ByPawn__Player) == 0x0000A0, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetReferences__ByPawn__Player' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetReferences__ByPawn__Controller) == 0x0000A8, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetReferences__ByPawn__Controller' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetReferences__ByPawn__HUD) == 0x0000B0, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetReferences__ByPawn__HUD' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B8, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x0000D0, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E8, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetGUI_GUI) == 0x000100, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetGUI_GUI' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_Vector_Distance_ReturnValue) == 0x000108, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_IsValid_ReturnValue_2) == 0x000110, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_Event_Player) == 0x000118, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetReferences__ByPawn__Result_1) == 0x000120, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetReferences__ByPawn__Result_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetReferences__ByPawn__Player_1) == 0x000128, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetReferences__ByPawn__Player_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetReferences__ByPawn__Controller_1) == 0x000130, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetReferences__ByPawn__Controller_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetReferences__ByPawn__HUD_1) == 0x000138, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetReferences__ByPawn__HUD_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000140, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetGUI_GUI_1) == 0x000158, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetGUI_GUI_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_IsValid_ReturnValue_3) == 0x000160, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_CreateDelegate_OutputDelegate_1) == 0x000164, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_GetPlayerController_ReturnValue) == 0x000178, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, CallFunc_K2_GetPawn_ReturnValue) == 0x000180, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_DynamicCast_AsSurvival_Player) == 0x000188, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe, K2Node_DynamicCast_bSuccess_3) == 0x000190, "Member 'BP_InteractiveSafe_C_ExecuteUbergraph_BP_InteractiveSafe::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveSafe_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_GetActorType) == 0x000001, "Wrong alignment on BP_InteractiveSafe_C_GetActorType");
static_assert(sizeof(BP_InteractiveSafe_C_GetActorType) == 0x000001, "Wrong size on BP_InteractiveSafe_C_GetActorType");
static_assert(offsetof(BP_InteractiveSafe_C_GetActorType, ActorType) == 0x000000, "Member 'BP_InteractiveSafe_C_GetActorType::ActorType' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.GetPlayerRef
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveSafe_C_GetPlayerRef final
{
public:
	class ASurvivalPlayer_C*                      NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_GetPlayerRef) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_GetPlayerRef");
static_assert(sizeof(BP_InteractiveSafe_C_GetPlayerRef) == 0x000008, "Wrong size on BP_InteractiveSafe_C_GetPlayerRef");
static_assert(offsetof(BP_InteractiveSafe_C_GetPlayerRef, NewParam) == 0x000000, "Member 'BP_InteractiveSafe_C_GetPlayerRef::NewParam' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.GetReferences (ByPawn)
// 0x0088 (0x0088 - 0x0000)
struct BP_InteractiveSafe_C_GetReferences__ByPawn_ final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              Param_Controller;                                  // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          Param_HUD;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          FunctionHUD;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              FunctionController;                                // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      FunctionPlayer;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_GetReferences__ByPawn_) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_GetReferences__ByPawn_");
static_assert(sizeof(BP_InteractiveSafe_C_GetReferences__ByPawn_) == 0x000088, "Wrong size on BP_InteractiveSafe_C_GetReferences__ByPawn_");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, Pawn) == 0x000000, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::Pawn' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, Result) == 0x000008, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::Result' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, Param_Player) == 0x000010, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::Param_Player' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, Param_Controller) == 0x000018, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::Param_Controller' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, Param_HUD) == 0x000020, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::Param_HUD' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, FunctionHUD) == 0x000028, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::FunctionHUD' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, FunctionController) == 0x000030, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::FunctionController' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, FunctionPlayer) == 0x000038, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::FunctionPlayer' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, FunctionResult) == 0x000040, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::FunctionResult' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, K2Node_DynamicCast_AsSurvival_Player) == 0x000048, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, CallFunc_GetController_ReturnValue) == 0x000058, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, K2Node_DynamicCast_AsSurv_PC) == 0x000060, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, CallFunc_GetHUD_ReturnValue) == 0x000070, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, K2Node_DynamicCast_AsBP_Game_HUD) == 0x000078, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::K2Node_DynamicCast_AsBP_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_GetReferences__ByPawn_, CallFunc_IsValid_ReturnValue_2) == 0x000081, "Member 'BP_InteractiveSafe_C_GetReferences__ByPawn_::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveSafe_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_IsLocked_) == 0x000001, "Wrong alignment on BP_InteractiveSafe_C_IsLocked_");
static_assert(sizeof(BP_InteractiveSafe_C_IsLocked_) == 0x000001, "Wrong size on BP_InteractiveSafe_C_IsLocked_");
static_assert(offsetof(BP_InteractiveSafe_C_IsLocked_, Result) == 0x000000, "Member 'BP_InteractiveSafe_C_IsLocked_::Result' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveSafe_C_OnBeginInteract final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnBeginInteract");
static_assert(sizeof(BP_InteractiveSafe_C_OnBeginInteract) == 0x000008, "Wrong size on BP_InteractiveSafe_C_OnBeginInteract");
static_assert(offsetof(BP_InteractiveSafe_C_OnBeginInteract, Param_Player) == 0x000000, "Member 'BP_InteractiveSafe_C_OnBeginInteract::Param_Player' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnCloseStash
// 0x00A0 (0x00A0 - 0x0000)
struct BP_InteractiveSafe_C_OnCloseStash final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TabsWindow_C*                        CallFunc_GetTabsWidget_Widget;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_1;                // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget_1;              // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnCloseStash) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnCloseStash");
static_assert(sizeof(BP_InteractiveSafe_C_OnCloseStash) == 0x0000A0, "Wrong size on BP_InteractiveSafe_C_OnCloseStash");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_InteractiveSafe_C_OnCloseStash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000010, "Member 'BP_InteractiveSafe_C_OnCloseStash::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_InteractiveSafe_C_OnCloseStash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000028, "Member 'BP_InteractiveSafe_C_OnCloseStash::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_InteractiveSafe_C_OnCloseStash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, CallFunc_GetInventoryWidget_Widget) == 0x000040, "Member 'BP_InteractiveSafe_C_OnCloseStash::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000048, "Member 'BP_InteractiveSafe_C_OnCloseStash::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_InteractiveSafe_C_OnCloseStash::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, CallFunc_GetTabsWidget_Widget) == 0x000060, "Member 'BP_InteractiveSafe_C_OnCloseStash::CallFunc_GetTabsWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, K2Node_CreateDelegate_OutputDelegate_1) == 0x000068, "Member 'BP_InteractiveSafe_C_OnCloseStash::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, K2Node_DynamicCast_AsBPI_Surv_PC_1) == 0x000078, "Member 'BP_InteractiveSafe_C_OnCloseStash::K2Node_DynamicCast_AsBPI_Surv_PC_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_InteractiveSafe_C_OnCloseStash::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BP_InteractiveSafe_C_OnCloseStash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, CallFunc_GetInventoryWidget_Widget_1) == 0x000090, "Member 'BP_InteractiveSafe_C_OnCloseStash::CallFunc_GetInventoryWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnCloseStash, CallFunc_IsVisible_ReturnValue) == 0x000098, "Member 'BP_InteractiveSafe_C_OnCloseStash::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnFocused
// 0x0078 (0x0078 - 0x0000)
struct BP_InteractiveSafe_C_OnFocused final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FunctionOpenTime;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                FunctionInteractType;                              // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferences__ByPawn__Result;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetReferences__ByPawn__Player;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              CallFunc_GetReferences__ByPawn__Controller;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          CallFunc_GetReferences__ByPawn__HUD;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnFocused) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnFocused");
static_assert(sizeof(BP_InteractiveSafe_C_OnFocused) == 0x000078, "Wrong size on BP_InteractiveSafe_C_OnFocused");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, Param_Player) == 0x000000, "Member 'BP_InteractiveSafe_C_OnFocused::Param_Player' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, HighlightActor) == 0x000008, "Member 'BP_InteractiveSafe_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'BP_InteractiveSafe_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, InteractType) == 0x000018, "Member 'BP_InteractiveSafe_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, LateTime) == 0x000020, "Member 'BP_InteractiveSafe_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, FunctionOpenTime) == 0x000028, "Member 'BP_InteractiveSafe_C_OnFocused::FunctionOpenTime' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, FunctionInteractType) == 0x000030, "Member 'BP_InteractiveSafe_C_OnFocused::FunctionInteractType' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, CallFunc_GetReferences__ByPawn__Result) == 0x000031, "Member 'BP_InteractiveSafe_C_OnFocused::CallFunc_GetReferences__ByPawn__Result' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, CallFunc_GetReferences__ByPawn__Player) == 0x000038, "Member 'BP_InteractiveSafe_C_OnFocused::CallFunc_GetReferences__ByPawn__Player' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, CallFunc_GetReferences__ByPawn__Controller) == 0x000040, "Member 'BP_InteractiveSafe_C_OnFocused::CallFunc_GetReferences__ByPawn__Controller' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, CallFunc_GetReferences__ByPawn__HUD) == 0x000048, "Member 'BP_InteractiveSafe_C_OnFocused::CallFunc_GetReferences__ByPawn__HUD' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000050, "Member 'BP_InteractiveSafe_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_InteractiveSafe_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000068, "Member 'BP_InteractiveSafe_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnFocused, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_InteractiveSafe_C_OnFocused::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveSafe_C_OnInteract final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnInteract) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnInteract");
static_assert(sizeof(BP_InteractiveSafe_C_OnInteract) == 0x000008, "Wrong size on BP_InteractiveSafe_C_OnInteract");
static_assert(offsetof(BP_InteractiveSafe_C_OnInteract, Param_Player) == 0x000000, "Member 'BP_InteractiveSafe_C_OnInteract::Param_Player' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveSafe_C_OnInteract2 final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnInteract2) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnInteract2");
static_assert(sizeof(BP_InteractiveSafe_C_OnInteract2) == 0x000008, "Wrong size on BP_InteractiveSafe_C_OnInteract2");
static_assert(offsetof(BP_InteractiveSafe_C_OnInteract2, Param_Player) == 0x000000, "Member 'BP_InteractiveSafe_C_OnInteract2::Param_Player' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveSafe_C_OnInteract3 final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnInteract3) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnInteract3");
static_assert(sizeof(BP_InteractiveSafe_C_OnInteract3) == 0x000008, "Wrong size on BP_InteractiveSafe_C_OnInteract3");
static_assert(offsetof(BP_InteractiveSafe_C_OnInteract3, Param_Player) == 0x000000, "Member 'BP_InteractiveSafe_C_OnInteract3::Param_Player' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractiveSafe_C_OnInteractVehicle final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnInteractVehicle) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnInteractVehicle");
static_assert(sizeof(BP_InteractiveSafe_C_OnInteractVehicle) == 0x000010, "Wrong size on BP_InteractiveSafe_C_OnInteractVehicle");
static_assert(offsetof(BP_InteractiveSafe_C_OnInteractVehicle, Param_Player) == 0x000000, "Member 'BP_InteractiveSafe_C_OnInteractVehicle::Param_Player' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'BP_InteractiveSafe_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'BP_InteractiveSafe_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveSafe_C_OnLocalInteract final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnLocalInteract) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnLocalInteract");
static_assert(sizeof(BP_InteractiveSafe_C_OnLocalInteract) == 0x000008, "Wrong size on BP_InteractiveSafe_C_OnLocalInteract");
static_assert(offsetof(BP_InteractiveSafe_C_OnLocalInteract, Param_Player) == 0x000000, "Member 'BP_InteractiveSafe_C_OnLocalInteract::Param_Player' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveSafe_C_OnLostFocus final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnLostFocus) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnLostFocus");
static_assert(sizeof(BP_InteractiveSafe_C_OnLostFocus) == 0x000008, "Wrong size on BP_InteractiveSafe_C_OnLostFocus");
static_assert(offsetof(BP_InteractiveSafe_C_OnLostFocus, Param_Player) == 0x000000, "Member 'BP_InteractiveSafe_C_OnLostFocus::Param_Player' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnOpenSafe
// 0x00B0 (0x00B0 - 0x0000)
struct BP_InteractiveSafe_C_OnOpenSafe final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD_1;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_1;                // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TabsWindow_C*                        CallFunc_GetTabsWidget_Widget;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OpenTabsWindow_Succes;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_2;                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TabsWindow_C*                        CallFunc_GetTabsWidget_Widget_1;                   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnOpenSafe) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnOpenSafe");
static_assert(sizeof(BP_InteractiveSafe_C_OnOpenSafe) == 0x0000B0, "Wrong size on BP_InteractiveSafe_C_OnOpenSafe");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000010, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_DynamicCast_AsBPI_Game_HUD_1) == 0x000028, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_DynamicCast_AsBPI_Game_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, CallFunc_GetInventoryWidget_Widget) == 0x000040, "Member 'BP_InteractiveSafe_C_OnOpenSafe::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000048, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_DynamicCast_AsBPI_Surv_PC_1) == 0x000060, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_DynamicCast_AsBPI_Surv_PC_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, CallFunc_GetTabsWidget_Widget) == 0x000078, "Member 'BP_InteractiveSafe_C_OnOpenSafe::CallFunc_GetTabsWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, CallFunc_OpenTabsWindow_Succes) == 0x000080, "Member 'BP_InteractiveSafe_C_OnOpenSafe::CallFunc_OpenTabsWindow_Succes' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_DynamicCast_AsBPI_Surv_PC_2) == 0x000088, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_DynamicCast_AsBPI_Surv_PC_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, K2Node_DynamicCast_bSuccess_4) == 0x000098, "Member 'BP_InteractiveSafe_C_OnOpenSafe::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, CallFunc_GetTabsWidget_Widget_1) == 0x0000A0, "Member 'BP_InteractiveSafe_C_OnOpenSafe::CallFunc_GetTabsWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenSafe, CallFunc_AddChildToCanvas_ReturnValue) == 0x0000A8, "Member 'BP_InteractiveSafe_C_OnOpenSafe::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnOpenStash
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveSafe_C_OnOpenStash final
{
public:
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnOpenStash) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnOpenStash");
static_assert(sizeof(BP_InteractiveSafe_C_OnOpenStash) == 0x000008, "Wrong size on BP_InteractiveSafe_C_OnOpenStash");
static_assert(offsetof(BP_InteractiveSafe_C_OnOpenStash, CallFunc_AddChildToOverlay_ReturnValue) == 0x000000, "Member 'BP_InteractiveSafe_C_OnOpenStash::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveSafe_C_OnSeen final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnSeen) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnSeen");
static_assert(sizeof(BP_InteractiveSafe_C_OnSeen) == 0x000008, "Wrong size on BP_InteractiveSafe_C_OnSeen");
static_assert(offsetof(BP_InteractiveSafe_C_OnSeen, Param_Player) == 0x000000, "Member 'BP_InteractiveSafe_C_OnSeen::Param_Player' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnShowMessage (F)
// 0x0038 (0x0038 - 0x0000)
struct BP_InteractiveSafe_C_OnShowMessage__F_ final
{
public:
	bool                                          Reset;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Pawn;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferences__ByPawn__Result;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetReferences__ByPawn__Player;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              CallFunc_GetReferences__ByPawn__Controller;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          CallFunc_GetReferences__ByPawn__HUD;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnShowMessage__F_) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnShowMessage__F_");
static_assert(sizeof(BP_InteractiveSafe_C_OnShowMessage__F_) == 0x000038, "Wrong size on BP_InteractiveSafe_C_OnShowMessage__F_");
static_assert(offsetof(BP_InteractiveSafe_C_OnShowMessage__F_, Reset) == 0x000000, "Member 'BP_InteractiveSafe_C_OnShowMessage__F_::Reset' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnShowMessage__F_, Pawn) == 0x000008, "Member 'BP_InteractiveSafe_C_OnShowMessage__F_::Pawn' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnShowMessage__F_, CallFunc_GetReferences__ByPawn__Result) == 0x000010, "Member 'BP_InteractiveSafe_C_OnShowMessage__F_::CallFunc_GetReferences__ByPawn__Result' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnShowMessage__F_, CallFunc_GetReferences__ByPawn__Player) == 0x000018, "Member 'BP_InteractiveSafe_C_OnShowMessage__F_::CallFunc_GetReferences__ByPawn__Player' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnShowMessage__F_, CallFunc_GetReferences__ByPawn__Controller) == 0x000020, "Member 'BP_InteractiveSafe_C_OnShowMessage__F_::CallFunc_GetReferences__ByPawn__Controller' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnShowMessage__F_, CallFunc_GetReferences__ByPawn__HUD) == 0x000028, "Member 'BP_InteractiveSafe_C_OnShowMessage__F_::CallFunc_GetReferences__ByPawn__HUD' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnShowMessage__F_, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_InteractiveSafe_C_OnShowMessage__F_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnShowMessage__F_, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_InteractiveSafe_C_OnShowMessage__F_::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_OnShowMessage__F_, CallFunc_IsValid_ReturnValue_2) == 0x000032, "Member 'BP_InteractiveSafe_C_OnShowMessage__F_::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveSafe_C_OnStopInteract final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_OnStopInteract) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_OnStopInteract");
static_assert(sizeof(BP_InteractiveSafe_C_OnStopInteract) == 0x000008, "Wrong size on BP_InteractiveSafe_C_OnStopInteract");
static_assert(offsetof(BP_InteractiveSafe_C_OnStopInteract, Param_Player) == 0x000000, "Member 'BP_InteractiveSafe_C_OnStopInteract::Param_Player' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveSafe_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_InteractiveSafe_C_Set3DWidgetVisibility");
static_assert(sizeof(BP_InteractiveSafe_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on BP_InteractiveSafe_C_Set3DWidgetVisibility");
static_assert(offsetof(BP_InteractiveSafe_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_InteractiveSafe_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.SetInput
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractiveSafe_C_SetInput final
{
public:
	class APlayerController*                      Param_Controller;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewState;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_SetInput) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_SetInput");
static_assert(sizeof(BP_InteractiveSafe_C_SetInput) == 0x000010, "Wrong size on BP_InteractiveSafe_C_SetInput");
static_assert(offsetof(BP_InteractiveSafe_C_SetInput, Param_Controller) == 0x000000, "Member 'BP_InteractiveSafe_C_SetInput::Param_Controller' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_SetInput, NewState) == 0x000008, "Member 'BP_InteractiveSafe_C_SetInput::NewState' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_SetInput, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_InteractiveSafe_C_SetInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.SetReferences
// 0x0028 (0x0028 - 0x0000)
struct BP_InteractiveSafe_C_SetReferences final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferences__ByPawn__Result;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      CallFunc_GetReferences__ByPawn__Player;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              CallFunc_GetReferences__ByPawn__Controller;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          CallFunc_GetReferences__ByPawn__HUD;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_SetReferences) == 0x000008, "Wrong alignment on BP_InteractiveSafe_C_SetReferences");
static_assert(sizeof(BP_InteractiveSafe_C_SetReferences) == 0x000028, "Wrong size on BP_InteractiveSafe_C_SetReferences");
static_assert(offsetof(BP_InteractiveSafe_C_SetReferences, Pawn) == 0x000000, "Member 'BP_InteractiveSafe_C_SetReferences::Pawn' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_SetReferences, Result) == 0x000008, "Member 'BP_InteractiveSafe_C_SetReferences::Result' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_SetReferences, FunctionResult) == 0x000009, "Member 'BP_InteractiveSafe_C_SetReferences::FunctionResult' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_SetReferences, CallFunc_GetReferences__ByPawn__Result) == 0x00000A, "Member 'BP_InteractiveSafe_C_SetReferences::CallFunc_GetReferences__ByPawn__Result' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_SetReferences, CallFunc_GetReferences__ByPawn__Player) == 0x000010, "Member 'BP_InteractiveSafe_C_SetReferences::CallFunc_GetReferences__ByPawn__Player' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_SetReferences, CallFunc_GetReferences__ByPawn__Controller) == 0x000018, "Member 'BP_InteractiveSafe_C_SetReferences::CallFunc_GetReferences__ByPawn__Controller' has a wrong offset!");
static_assert(offsetof(BP_InteractiveSafe_C_SetReferences, CallFunc_GetReferences__ByPawn__HUD) == 0x000020, "Member 'BP_InteractiveSafe_C_SetReferences::CallFunc_GetReferences__ByPawn__HUD' has a wrong offset!");

// Function BP_InteractiveSafe.BP_InteractiveSafe_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveSafe_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveSafe_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on BP_InteractiveSafe_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(BP_InteractiveSafe_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on BP_InteractiveSafe_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(BP_InteractiveSafe_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'BP_InteractiveSafe_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

}

