#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_SurvPC

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "LootGeneratorType_structs.hpp"
#include "AISpawnZoneType_structs.hpp"
#include "E_TabType_structs.hpp"
#include "LG2_LootRareType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_SurvPC.BPI_SurvPC_C
// 0x0000 (0x0028 - 0x0028)
class IBPI_SurvPC_C final : public IInterface
{
public:
	void AddSkillPoint(int32 Value, bool* Success);
	void AddXP(double XP, const class FText& Sender);
	void BlockControlRotation(bool SetBlock);
	void CloseTabsWindow(bool* Success);
	void CreateContainerAtLocation(const struct FVector& Location, ELootGeneratorType GenericLootType, class UDataTable* CustomAsset, const class FText& ContainerName, const struct FVector& CustomOffset, class UStaticMesh* CustomMesh, class USceneComponent* AttachTo, class FName SocketName, bool* Return);
	void CreateContainerWithDrop(const struct FVector& Location, const class FString& ContainerName, const struct FVector& ContainerOffset, TArray<struct FDropItemEntry>& DropItems, bool* Return);
	void DontHighlightActors();
	void GetBeginner(bool* bIsBeginner);
	void GetBlackScreenWidget(class UW_BlackScreen_C** Widget);
	void GetCarGameWidget(class UWBP_CarGame_C** CarGameWidget);
	void GetCarUpgradeWidget(class UW_CarUpgradeMenu_C** Widget);
	void GetCraftWidget(class UUI_CraftWindow_C** NewCraftWidget);
	void GetCraftWindowOpened(bool* Opened);
	void GetCurrentXP(double* Value);
	void GetInventoryMessageWidget(class UW_CapacityMessage_C** Widget);
	void GetInventoryWidget(class UMPInGameInventory_C** Widget);
	void GetLootZoneType(const struct FVector& Location, ELG2_LootRareType* Type);
	void GetMaxXP(double* Value);
	void GetPlayerGUI(class UUIW_PlayerMain_C** GUI);
	void GetPlayerRef(class ASurvivalPlayer_C** SurvivalPlayer);
	void GetQuestComponents(class UQuestComponent** Quest, class UQuestTrackerComponent** QuestTracker);
	void GetResurrectLocation(struct FVector* Location);
	void GetSkillPoints(int32* Value);
	void GetSpawnZoneType(const struct FVector& Location, EAISpawnZoneType* Type);
	void GetTabsWidget(class UW_TabsWindow_C** Widget);
	void GetTeleportingToStash(bool* From_Raid);
	void GetTutorStage(class FString* StageName);
	void GetWidgetIsOpened(bool* WidgetIsOpened);
	void HidePlayers(bool Hide, bool HideAll);
	void HideQuestUI(bool Hide);
	void IsRendered_(class AActor* Pawn, bool* IsRendered);
	void LoadPlayerPos(bool* Exist, struct FVector* PlayerPos);
	void OnChangeQuestHintMulticast(const class FString& Hint);
	void OnNetworkError();
	void OnTravelError();
	void OpenTabsWindow(E_TabType Focus, bool WithVehicle, bool* Succes);
	void RemoveDialogueWidget();
	void ResetXP();
	void SavePlayerPos();
	void SetCraftWindowOpened(bool NewOpened, bool* Success);
	void SetDialogueWidget(class UADSDialogue* Dialogue, class FName NPC_Name);
	void SetPlayerRef(class ASurvivalPlayer_C* Player, bool* Success);
	void SetQuestHint(const class FString& Hint, const class FString& Title);
	void SetResurrectLocation(const struct FVector& Location, bool* Success);
	void SetTeleportingToStash(bool From_Raid);
	void SetUpgradeScreen(bool NewEnabled, class ABP_RB_Vehicle_C* Vehicle, bool* Success);
	void SetYouDiedScreen(bool NewEnabled, int32 DayCount, double ResurrectionTimer, bool* Success);
	void ShowCityLabel(const class FText& CityName, bool* Success);
	void SwitchQuest(class UQuestV2_C* Quest);
	void ThrowQuestTrigger(const class FString& Trigger);
	void UseSkillPoint(int32 NumPoints, bool* Success);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_SurvPC_C">();
	}
	static class IBPI_SurvPC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_SurvPC_C>();
	}
};
static_assert(alignof(IBPI_SurvPC_C) == 0x000008, "Wrong alignment on IBPI_SurvPC_C");
static_assert(sizeof(IBPI_SurvPC_C) == 0x000028, "Wrong size on IBPI_SurvPC_C");

}

