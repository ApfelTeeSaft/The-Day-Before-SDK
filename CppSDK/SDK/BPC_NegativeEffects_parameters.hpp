#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_NegativeEffects

#include "Basic.hpp"

#include "Survival_structs.hpp"
#include "E_WeakeningEffect_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.AdrenalineFunc
// 0x0050 (0x0050 - 0x0000)
struct BPC_NegativeEffects_C_AdrenalineFunc final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0018)()
	TArray<class UEffect_C*>                      CallFunc_JSStartEffect_Effectt;                    // 0x0030(0x0010)(ReferenceParm)
	class UEffectMain_C*                          CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_AdrenalineFunc) == 0x000008, "Wrong alignment on BPC_NegativeEffects_C_AdrenalineFunc");
static_assert(sizeof(BPC_NegativeEffects_C_AdrenalineFunc) == 0x000050, "Wrong size on BPC_NegativeEffects_C_AdrenalineFunc");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, On_) == 0x000000, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::On_' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, CallFunc_JSStartEffect_Effectt) == 0x000030, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::CallFunc_JSStartEffect_Effectt' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, CallFunc_Array_Get_Item) == 0x000040, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, CallFunc_EqualEqual_TextText_ReturnValue) == 0x00004D, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineFunc, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'BPC_NegativeEffects_C_AdrenalineFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.AdrenalineStomachEffectEvent
// 0x0001 (0x0001 - 0x0000)
struct BPC_NegativeEffects_C_AdrenalineStomachEffectEvent final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_AdrenalineStomachEffectEvent) == 0x000001, "Wrong alignment on BPC_NegativeEffects_C_AdrenalineStomachEffectEvent");
static_assert(sizeof(BPC_NegativeEffects_C_AdrenalineStomachEffectEvent) == 0x000001, "Wrong size on BPC_NegativeEffects_C_AdrenalineStomachEffectEvent");
static_assert(offsetof(BPC_NegativeEffects_C_AdrenalineStomachEffectEvent, On) == 0x000000, "Member 'BPC_NegativeEffects_C_AdrenalineStomachEffectEvent::On' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.ArmFunc
// 0x0010 (0x0010 - 0x0000)
struct BPC_NegativeEffects_C_ArmFunc final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_ArmFunc) == 0x000008, "Wrong alignment on BPC_NegativeEffects_C_ArmFunc");
static_assert(sizeof(BPC_NegativeEffects_C_ArmFunc) == 0x000010, "Wrong size on BPC_NegativeEffects_C_ArmFunc");
static_assert(offsetof(BPC_NegativeEffects_C_ArmFunc, On_) == 0x000000, "Member 'BPC_NegativeEffects_C_ArmFunc::On_' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ArmFunc, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BPC_NegativeEffects_C_ArmFunc::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.BleedingFunc
// 0x0028 (0x0028 - 0x0000)
struct BPC_NegativeEffects_C_BleedingFunc final
{
public:
	EUNegativeEffectType                          EffectType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_BleedingFunc) == 0x000008, "Wrong alignment on BPC_NegativeEffects_C_BleedingFunc");
static_assert(sizeof(BPC_NegativeEffects_C_BleedingFunc) == 0x000028, "Wrong size on BPC_NegativeEffects_C_BleedingFunc");
static_assert(offsetof(BPC_NegativeEffects_C_BleedingFunc, EffectType) == 0x000000, "Member 'BPC_NegativeEffects_C_BleedingFunc::EffectType' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BleedingFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BPC_NegativeEffects_C_BleedingFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BleedingFunc, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BPC_NegativeEffects_C_BleedingFunc::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BleedingFunc, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'BPC_NegativeEffects_C_BleedingFunc::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BleedingFunc, K2Node_DynamicCast_AsBP_Game_HUD) == 0x000018, "Member 'BPC_NegativeEffects_C_BleedingFunc::K2Node_DynamicCast_AsBP_Game_HUD' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BleedingFunc, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPC_NegativeEffects_C_BleedingFunc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BleedingFunc, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BPC_NegativeEffects_C_BleedingFunc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BleedingFunc, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'BPC_NegativeEffects_C_BleedingFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BleedingFunc, CallFunc_BooleanOR_ReturnValue_1) == 0x000023, "Member 'BPC_NegativeEffects_C_BleedingFunc::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.BodyCriticalEffectFunc
// 0x0018 (0x0018 - 0x0000)
struct BPC_NegativeEffects_C_BodyCriticalEffectFunc final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable;                                // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_1;                              // 0x0002(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_2;                              // 0x0003(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_2;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_BodyCriticalEffectFunc) == 0x000004, "Wrong alignment on BPC_NegativeEffects_C_BodyCriticalEffectFunc");
static_assert(sizeof(BPC_NegativeEffects_C_BodyCriticalEffectFunc) == 0x000018, "Wrong size on BPC_NegativeEffects_C_BodyCriticalEffectFunc");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, Enable) == 0x000000, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::Enable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, Temp_byte_Variable) == 0x000001, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, Temp_byte_Variable_1) == 0x000002, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, Temp_byte_Variable_2) == 0x000003, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, CallFunc_Array_Find_ReturnValue) == 0x000004, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, CallFunc_Array_Find_ReturnValue_1) == 0x00000C, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, CallFunc_Array_Find_ReturnValue_2) == 0x000010, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::CallFunc_Array_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000014, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000015, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_BodyCriticalEffectFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x000017, "Member 'BPC_NegativeEffects_C_BodyCriticalEffectFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.CheckBleeding
// 0x0040 (0x0040 - 0x0000)
struct BPC_NegativeEffects_C_CheckBleeding final
{
public:
	class FText                                   EffectName;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          EffectFind;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TempBool;                                          // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEffectMain_C*                          CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_CheckBleeding) == 0x000008, "Wrong alignment on BPC_NegativeEffects_C_CheckBleeding");
static_assert(sizeof(BPC_NegativeEffects_C_CheckBleeding) == 0x000040, "Wrong size on BPC_NegativeEffects_C_CheckBleeding");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, EffectName) == 0x000000, "Member 'BPC_NegativeEffects_C_CheckBleeding::EffectName' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, EffectFind) == 0x000018, "Member 'BPC_NegativeEffects_C_CheckBleeding::EffectFind' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, TempBool) == 0x000019, "Member 'BPC_NegativeEffects_C_CheckBleeding::TempBool' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, Temp_bool_True_if_break_was_hit_Variable) == 0x00001A, "Member 'BPC_NegativeEffects_C_CheckBleeding::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BPC_NegativeEffects_C_CheckBleeding::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BPC_NegativeEffects_C_CheckBleeding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BPC_NegativeEffects_C_CheckBleeding::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BPC_NegativeEffects_C_CheckBleeding::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BPC_NegativeEffects_C_CheckBleeding::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPC_NegativeEffects_C_CheckBleeding::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BPC_NegativeEffects_C_CheckBleeding::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BPC_NegativeEffects_C_CheckBleeding::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_CheckBleeding, CallFunc_EqualEqual_TextText_ReturnValue) == 0x00003A, "Member 'BPC_NegativeEffects_C_CheckBleeding::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.ChestFunc
// 0x0001 (0x0001 - 0x0000)
struct BPC_NegativeEffects_C_ChestFunc final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_ChestFunc) == 0x000001, "Wrong alignment on BPC_NegativeEffects_C_ChestFunc");
static_assert(sizeof(BPC_NegativeEffects_C_ChestFunc) == 0x000001, "Wrong size on BPC_NegativeEffects_C_ChestFunc");
static_assert(offsetof(BPC_NegativeEffects_C_ChestFunc, On_) == 0x000000, "Member 'BPC_NegativeEffects_C_ChestFunc::On_' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.ExecuteUbergraph_BPC_NegativeEffects
// 0x01E8 (0x01E8 - 0x0000)
struct BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable;                                // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_1;                              // 0x0006(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_2;                              // 0x0007(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_3;                              // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_4;                              // 0x0009(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_5;                              // 0x000A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_6;                              // 0x000B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_7;                              // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_8;                              // 0x000D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_9;                              // 0x000E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_10;                             // 0x0014(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          K2Node_CustomEvent_Type_1;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Type;                           // 0x0050(0x0018)()
	EUNegativeEffectType                          Temp_byte_Variable_11;                             // 0x0068(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_4;           // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_5;           // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          CallFunc_Array_Get_Item;                           // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeakeningEffect                             K2Node_CustomEvent_WeakeningEffect;                // 0x0125(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_127[0x1];                                      // 0x0127(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue_1;       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0140(0x0018)()
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0158(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBleeding_EffectFind;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          CallFunc_Array_Get_Item_1;                         // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_2;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_3;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_6;                              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable_12;                             // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0194(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_3;                // 0x01A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class UEffect_C*>                      CallFunc_JSStartEffect_Effectt;                    // 0x01A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue_2;       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_On;                             // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue_3;       // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB[0x5];                                      // 0x01BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_4;                // 0x01C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_On_;                            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_6;           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_4;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_5;                // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue_4;       // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects) == 0x000008, "Wrong alignment on BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects");
static_assert(sizeof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects) == 0x0001E8, "Wrong size on BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, EntryPoint) == 0x000000, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable) == 0x000004, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000005, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_1) == 0x000006, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_2) == 0x000007, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_3) == 0x000008, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_4) == 0x000009, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_5) == 0x00000A, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_6) == 0x00000B, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_7) == 0x00000C, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_8) == 0x00000D, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_9) == 0x00000E, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_10) == 0x000014, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_CustomEvent_Type_1) == 0x000030, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_CustomEvent_Type_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_DynamicCast_AsSurvival_Player) == 0x000038, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000042, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000043, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000044, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000045, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000046, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_BooleanOR_ReturnValue) == 0x000047, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_BooleanOR_ReturnValue_1) == 0x000048, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_SwitchEnum_CmpSuccess) == 0x000049, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_CustomEvent_Type) == 0x000050, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_11) == 0x000068, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Conv_TextToString_ReturnValue) == 0x000070, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_SwitchString_CmpSuccess) == 0x000090, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_Find_ReturnValue) == 0x000094, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000098, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_GetStat_Value) == 0x0000A0, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_Find_ReturnValue_1) == 0x0000AC, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B0, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000B1, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_name_Variable) == 0x0000B4, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_BooleanAND_ReturnValue) == 0x0000BC, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_BooleanAND_ReturnValue_1) == 0x0000BD, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_name_Variable_1) == 0x0000C0, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_name_Variable_2) == 0x0000C8, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_name_Variable_3) == 0x0000D0, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000D8, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0000D9, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x0000DA, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x0000DB, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_RemoveItem_ReturnValue_4) == 0x0000DC, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_RemoveItem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_RemoveItem_ReturnValue_5) == 0x0000DD, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_RemoveItem_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_name_Variable_4) == 0x0000E0, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_AddUnique_ReturnValue) == 0x0000E8, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_Event_DeltaSeconds) == 0x0000EC, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_int_Loop_Counter_Variable_1) == 0x0000F0, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_Get_Item) == 0x0000F4, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000F8, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000110, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_CustomEvent_WeakeningEffect) == 0x000125, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_CustomEvent_WeakeningEffect' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_SwitchEnum_CmpSuccess_1) == 0x000126, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_SetTimer_ReturnValue) == 0x000128, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_name_Variable_5) == 0x000130, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_TimerExistsHandle_ReturnValue_1) == 0x000138, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_TimerExistsHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_MakeLiteralText_ReturnValue) == 0x000140, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000158, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_CheckBleeding_EffectFind) == 0x000160, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_CheckBleeding_EffectFind' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_Get_Item_1) == 0x000161, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_Length_ReturnValue_1) == 0x000164, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Less_IntInt_ReturnValue_1) == 0x000168, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_Find_ReturnValue_2) == 0x00016C, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_Find_ReturnValue_3) == 0x000170, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000174, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000175, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_name_Variable_6) == 0x000178, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_BooleanAND_ReturnValue_2) == 0x000180, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000188, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, Temp_byte_Variable_12) == 0x000190, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_Select_Default) == 0x000194, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_SetTimer_ReturnValue_3) == 0x0001A0, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_SetTimer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_JSStartEffect_Effectt) == 0x0001A8, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_JSStartEffect_Effectt' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_TimerExistsHandle_ReturnValue_2) == 0x0001B8, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_TimerExistsHandle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_CustomEvent_On) == 0x0001B9, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_CustomEvent_On' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_TimerExistsHandle_ReturnValue_3) == 0x0001BA, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_TimerExistsHandle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_SetTimer_ReturnValue_4) == 0x0001C0, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_SetTimer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, K2Node_CustomEvent_On_) == 0x0001C8, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::K2Node_CustomEvent_On_' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0001CC, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_RemoveItem_ReturnValue_6) == 0x0001D0, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_RemoveItem_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_Array_Find_ReturnValue_4) == 0x0001D4, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_Array_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_SetTimer_ReturnValue_5) == 0x0001D8, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_SetTimer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0001E0, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects, CallFunc_K2_TimerExistsHandle_ReturnValue_4) == 0x0001E1, "Member 'BPC_NegativeEffects_C_ExecuteUbergraph_BPC_NegativeEffects::CallFunc_K2_TimerExistsHandle_ReturnValue_4' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.HemostaticFunc
// 0x0001 (0x0001 - 0x0000)
struct BPC_NegativeEffects_C_HemostaticFunc final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_HemostaticFunc) == 0x000001, "Wrong alignment on BPC_NegativeEffects_C_HemostaticFunc");
static_assert(sizeof(BPC_NegativeEffects_C_HemostaticFunc) == 0x000001, "Wrong size on BPC_NegativeEffects_C_HemostaticFunc");
static_assert(offsetof(BPC_NegativeEffects_C_HemostaticFunc, On_) == 0x000000, "Member 'BPC_NegativeEffects_C_HemostaticFunc::On_' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.OnNegativeEffect__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BPC_NegativeEffects_C_OnNegativeEffect__DelegateSignature final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          EffectType;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_OnNegativeEffect__DelegateSignature) == 0x000001, "Wrong alignment on BPC_NegativeEffects_C_OnNegativeEffect__DelegateSignature");
static_assert(sizeof(BPC_NegativeEffects_C_OnNegativeEffect__DelegateSignature) == 0x000002, "Wrong size on BPC_NegativeEffects_C_OnNegativeEffect__DelegateSignature");
static_assert(offsetof(BPC_NegativeEffects_C_OnNegativeEffect__DelegateSignature, On_) == 0x000000, "Member 'BPC_NegativeEffects_C_OnNegativeEffect__DelegateSignature::On_' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_OnNegativeEffect__DelegateSignature, EffectType) == 0x000001, "Member 'BPC_NegativeEffects_C_OnNegativeEffect__DelegateSignature::EffectType' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.OverweightEvent
// 0x0001 (0x0001 - 0x0000)
struct BPC_NegativeEffects_C_OverweightEvent final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_OverweightEvent) == 0x000001, "Wrong alignment on BPC_NegativeEffects_C_OverweightEvent");
static_assert(sizeof(BPC_NegativeEffects_C_OverweightEvent) == 0x000001, "Wrong size on BPC_NegativeEffects_C_OverweightEvent");
static_assert(offsetof(BPC_NegativeEffects_C_OverweightEvent, On_) == 0x000000, "Member 'BPC_NegativeEffects_C_OverweightEvent::On_' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.PainkillerFunc
// 0x0070 (0x0070 - 0x0000)
struct BPC_NegativeEffects_C_PainkillerFunc final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable;                                // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FPFunctions_C>     K2Node_DynamicCast_AsBI_FPFunctions;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_FPFunctions_C>     K2Node_DynamicCast_AsBI_FPFunctions_1;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_ShakeScale_ImplicitCast;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_PainkillerFunc) == 0x000008, "Wrong alignment on BPC_NegativeEffects_C_PainkillerFunc");
static_assert(sizeof(BPC_NegativeEffects_C_PainkillerFunc) == 0x000070, "Wrong size on BPC_NegativeEffects_C_PainkillerFunc");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, On_) == 0x000000, "Member 'BPC_NegativeEffects_C_PainkillerFunc::On_' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, Temp_byte_Variable) == 0x000001, "Member 'BPC_NegativeEffects_C_PainkillerFunc::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, CallFunc_Array_Find_ReturnValue) == 0x000004, "Member 'BPC_NegativeEffects_C_PainkillerFunc::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'BPC_NegativeEffects_C_PainkillerFunc::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BPC_NegativeEffects_C_PainkillerFunc::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'BPC_NegativeEffects_C_PainkillerFunc::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'BPC_NegativeEffects_C_PainkillerFunc::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, K2Node_DynamicCast_AsBI_FPFunctions) == 0x000028, "Member 'BPC_NegativeEffects_C_PainkillerFunc::K2Node_DynamicCast_AsBI_FPFunctions' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPC_NegativeEffects_C_PainkillerFunc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, CallFunc_SelectFloat_ReturnValue_2) == 0x000040, "Member 'BPC_NegativeEffects_C_PainkillerFunc::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, K2Node_DynamicCast_AsBI_FPFunctions_1) == 0x000048, "Member 'BPC_NegativeEffects_C_PainkillerFunc::K2Node_DynamicCast_AsBI_FPFunctions_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BPC_NegativeEffects_C_PainkillerFunc::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, CallFunc_SelectFloat_ReturnValue_3) == 0x000060, "Member 'BPC_NegativeEffects_C_PainkillerFunc::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_PainkillerFunc, K2Node_VariableSet_ShakeScale_ImplicitCast) == 0x000068, "Member 'BPC_NegativeEffects_C_PainkillerFunc::K2Node_VariableSet_ShakeScale_ImplicitCast' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPC_NegativeEffects_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_ReceiveTick) == 0x000004, "Wrong alignment on BPC_NegativeEffects_C_ReceiveTick");
static_assert(sizeof(BPC_NegativeEffects_C_ReceiveTick) == 0x000004, "Wrong size on BPC_NegativeEffects_C_ReceiveTick");
static_assert(offsetof(BPC_NegativeEffects_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPC_NegativeEffects_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.StaminaStimulatorFunc
// 0x0020 (0x0020 - 0x0000)
struct BPC_NegativeEffects_C_StaminaStimulatorFunc final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_StaminaStimulatorFunc) == 0x000008, "Wrong alignment on BPC_NegativeEffects_C_StaminaStimulatorFunc");
static_assert(sizeof(BPC_NegativeEffects_C_StaminaStimulatorFunc) == 0x000020, "Wrong size on BPC_NegativeEffects_C_StaminaStimulatorFunc");
static_assert(offsetof(BPC_NegativeEffects_C_StaminaStimulatorFunc, On_) == 0x000000, "Member 'BPC_NegativeEffects_C_StaminaStimulatorFunc::On_' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_StaminaStimulatorFunc, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'BPC_NegativeEffects_C_StaminaStimulatorFunc::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_StaminaStimulatorFunc, CallFunc_GetStat_Value) == 0x000010, "Member 'BPC_NegativeEffects_C_StaminaStimulatorFunc::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(BPC_NegativeEffects_C_StaminaStimulatorFunc, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BPC_NegativeEffects_C_StaminaStimulatorFunc::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.StartNegativeEffect
// 0x0001 (0x0001 - 0x0000)
struct BPC_NegativeEffects_C_StartNegativeEffect final
{
public:
	EUNegativeEffectType                          Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_StartNegativeEffect) == 0x000001, "Wrong alignment on BPC_NegativeEffects_C_StartNegativeEffect");
static_assert(sizeof(BPC_NegativeEffects_C_StartNegativeEffect) == 0x000001, "Wrong size on BPC_NegativeEffects_C_StartNegativeEffect");
static_assert(offsetof(BPC_NegativeEffects_C_StartNegativeEffect, Type) == 0x000000, "Member 'BPC_NegativeEffects_C_StartNegativeEffect::Type' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.StopNegativeEffect
// 0x0018 (0x0018 - 0x0000)
struct BPC_NegativeEffects_C_StopNegativeEffect final
{
public:
	class FText                                   Type;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BPC_NegativeEffects_C_StopNegativeEffect) == 0x000008, "Wrong alignment on BPC_NegativeEffects_C_StopNegativeEffect");
static_assert(sizeof(BPC_NegativeEffects_C_StopNegativeEffect) == 0x000018, "Wrong size on BPC_NegativeEffects_C_StopNegativeEffect");
static_assert(offsetof(BPC_NegativeEffects_C_StopNegativeEffect, Type) == 0x000000, "Member 'BPC_NegativeEffects_C_StopNegativeEffect::Type' has a wrong offset!");

// Function BPC_NegativeEffects.BPC_NegativeEffects_C.WeakeningEffectsEvent
// 0x0001 (0x0001 - 0x0000)
struct BPC_NegativeEffects_C_WeakeningEffectsEvent final
{
public:
	E_WeakeningEffect                             WeakeningEffect;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_NegativeEffects_C_WeakeningEffectsEvent) == 0x000001, "Wrong alignment on BPC_NegativeEffects_C_WeakeningEffectsEvent");
static_assert(sizeof(BPC_NegativeEffects_C_WeakeningEffectsEvent) == 0x000001, "Wrong size on BPC_NegativeEffects_C_WeakeningEffectsEvent");
static_assert(offsetof(BPC_NegativeEffects_C_WeakeningEffectsEvent, WeakeningEffect) == 0x000000, "Member 'BPC_NegativeEffects_C_WeakeningEffectsEvent::WeakeningEffect' has a wrong offset!");

}

