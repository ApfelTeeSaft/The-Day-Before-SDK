#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Damping_PDA_AVS

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function Damping_PDA_AVS.Damping_PDA_AVS_C.GetDampingFromSurface
// 0x0038 (0x0038 - 0x0000)
struct Damping_PDA_AVS_C_GetDampingFromSurface final
{
public:
	EPhysicalSurface                              Surface;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LinearDamping;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Damping_PDA_AVS_C_GetDampingFromSurface) == 0x000008, "Wrong alignment on Damping_PDA_AVS_C_GetDampingFromSurface");
static_assert(sizeof(Damping_PDA_AVS_C_GetDampingFromSurface) == 0x000038, "Wrong size on Damping_PDA_AVS_C_GetDampingFromSurface");
static_assert(offsetof(Damping_PDA_AVS_C_GetDampingFromSurface, Surface) == 0x000000, "Member 'Damping_PDA_AVS_C_GetDampingFromSurface::Surface' has a wrong offset!");
static_assert(offsetof(Damping_PDA_AVS_C_GetDampingFromSurface, LinearDamping) == 0x000008, "Member 'Damping_PDA_AVS_C_GetDampingFromSurface::LinearDamping' has a wrong offset!");
static_assert(offsetof(Damping_PDA_AVS_C_GetDampingFromSurface, Temp_byte_Variable) == 0x000010, "Member 'Damping_PDA_AVS_C_GetDampingFromSurface::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Damping_PDA_AVS_C_GetDampingFromSurface, Temp_real_Variable) == 0x000018, "Member 'Damping_PDA_AVS_C_GetDampingFromSurface::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Damping_PDA_AVS_C_GetDampingFromSurface, Temp_real_Variable_1) == 0x000020, "Member 'Damping_PDA_AVS_C_GetDampingFromSurface::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Damping_PDA_AVS_C_GetDampingFromSurface, Temp_real_Variable_2) == 0x000028, "Member 'Damping_PDA_AVS_C_GetDampingFromSurface::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Damping_PDA_AVS_C_GetDampingFromSurface, K2Node_Select_Default) == 0x000030, "Member 'Damping_PDA_AVS_C_GetDampingFromSurface::K2Node_Select_Default' has a wrong offset!");

}

