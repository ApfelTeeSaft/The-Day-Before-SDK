#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PS_TDB

#include "Basic.hpp"

#include "E_HouseType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PlayerStatesArray_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "FirebaseFeatures_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PS_TDB.PS_TDB_C
// 0x0248 (0x05F0 - 0x03A8)
class APS_TDB_C final : public APlayerState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         SquadId;                                           // 0x03B8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          AlreadyInvited;                                    // 0x03BC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Login;                                             // 0x03C0(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, HasGetValueTypeHash)
	TMap<int32, struct FPlayerStatesArray>        Squads;                                            // 0x03D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class APS_TDB_C*>                      MySquad;                                           // 0x0420(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, RepNotify)
	class ASurvPC_C*                              SurvPC;                                            // 0x0430(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PartyOwner;                                        // 0x0438(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Speaking;                                          // 0x0439(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43A[0x6];                                      // 0x043A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   CharRef;                                           // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FString                                 Player_Id;                                         // 0x0448(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SquadLeader_Id;                                    // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             UpdateSquad;                                       // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ABP_GameHUD_C*                          As_BP_Game_HUD;                                    // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interaction_Actor;                                 // 0x0480(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          AcceptTeleport;                                    // 0x0488(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnAcceptTeleport;                                  // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          SquadReadyToTeleport;                              // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASurvivalPlayer_C*>              InvitedPlayers;                                    // 0x04A8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         TempSquad;                                         // 0x04B8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeaveCheckHideDuration;                            // 0x04BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnOwnerChanged;                                    // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AAVS_VehicleMaster_C*                   CarObjRef;                                         // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_HouseType                                   WhereAmI_;                                         // 0x04D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APS_TDB_C*>                      SquadMembersToTeleport;                            // 0x04E0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	class UClass*                                 VehicleTempRef;                                    // 0x04F0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F8[0x8];                                      // 0x04F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             VehicleTempTrans;                                  // 0x0500(0x0060)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              Interacting_PC;                                    // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnWhereAmICahnged;                                 // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class APawn*                                  Pawn_Private;                                      // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FString                                 SteamID;                                           // 0x0580(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FString>                         Visuals;                                           // 0x0590(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         Info;                                              // 0x05A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UDatabaseReference*                     DatabaseReference;                                 // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 B;                                                 // 0x05B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FFMODEventInstance                     AutoFireEvent;                                     // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           StopAutoFireSoundTimerHandle;                      // 0x05D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             NewVersion;                                        // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AddInvitedPlayers(class ASurvivalPlayer_C* SurvivalPlayer);
	void AddToSquadOnServer(int32 Squad);
	void BanCheck();
	void CancelTeleportCheck();
	void CarRefToSquad(class AActor* CarRef);
	void CarTeleportServ(bool IsAlone, class UClass* CarClass, const struct FTransform& CarTrans);
	void CarVarsOwning(class UClass* Param_Class, const struct FTransform& Trans);
	void ChangeWhereAmI(E_HouseType Where);
	void CharDataGetInfo();
	void CharDataUpdateInfo(const TArray<class FString>& StrArr);
	void CheckHaveLeader(bool* HaveLeader);
	void CreateLeaveAreaCheckClient(bool Create, const TArray<class APS_TDB_C*>& Members);
	void CreateLeaveAreaCheckServer(class AActor* InteractionActor, class UClass* CarRef, const struct FTransform& CarTrans);
	void DeclinedCheckOnClient();
	void ExecuteUbergraph_PS_TDB(int32 EntryPoint);
	void FireSoundClient(TSoftObjectPtr<class UFMODEvent> FireSoundEvent, const struct FVector& Location, float IndoorShot);
	void FireSoundOffClient();
	void GetCharRef(class ASurvivalPlayer_V2_C** OutputCharRef);
	void GetOrGenerateSquadID(int32* Squad);
	void GetSquadsFromServer();
	class FString GetUserName();
	void MakeLeaderMulti(bool IsOwner);
	void MakeLeaderServer(bool Param_PartyOwner, class APS_TDB_C* Target_Player_State);
	void NewValue(class UDataSnapshot* Snapshot, const class FString& PreviousSiblingKey);
	void NewVersion__DelegateSignature();
	void NewVersionIsReady();
	void OnAcceptTeleport__DelegateSignature(bool Accepted);
	void OnBan();
	void OnDataReceived_8DB29FB6419981BB2F223D8AFB4929E4(const EFirebaseDatabaseError Error, const class UDataSnapshot* Snapshot);
	void OnError_8DB29FB6419981BB2F223D8AFB4929E4(const EFirebaseDatabaseError Error, const class UDataSnapshot* Snapshot);
	void OnError_FB27C4FC4FFFA77374D17FA2D1E1AE9C(const EFirebaseDatabaseError Error);
	void OnLoaded_F4DF7AF042AFB57A00B8DAA3902C0B76(class UObject* Loaded);
	void OnMute();
	void OnOwnerChanged__DelegateSignature();
	void OnRep_AcceptTeleport();
	void OnRep_Login();
	void OnRep_MySquad();
	void OnRep_PartyOwner();
	void OnRep_Speaking();
	void OnRep_SquadID();
	void OnRep_WhereAmI_();
	void OnSet_FB27C4FC4FFFA77374D17FA2D1E1AE9C(const EFirebaseDatabaseError Error);
	void OnWhereAmICahnged__DelegateSignature();
	void ReadyToTeleportServ(bool Accept);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void RemoveFromSquadOnServer(class APS_TDB_C* PlayerState, bool bKicked);
	void RemoveInvitedPlayers(const class ASurvivalPlayer_C*& SurvivalPlayer);
	void RemoveLeaderStatusOnSquadInviteAccept();
	void SetAlreadyInvited_Server(bool Param_AlreadyInvited);
	void SetSpeakingServer(bool Param_Speaking);
	void SetSquadMembetInFirstPosition(const class APS_TDB_C*& ItemToFind);
	void SetSteamId(const class FString& Param_SteamID);
	void ShowSquad3DWidgets(bool Show);
	void ShowSquadJoinNitifyMulti(int32 MessageIndex, const class FString& PlayerName);
	void ShowSquadLeaveNitifyMulti(class APS_TDB_C* PlayerState, bool Kicked);
	void SquadTeleportFromHUB(class AActor* DoorTeleport);
	void SquadTeleportFromHUB_Server(class AActor* DoorTeleport);
	void SquadTeleportFromHUB_SquadMember(class AActor* Door_Teleport);
	void StopAutoFireSound();
	void StringArrayToFirebaseArray(const TArray<class FString>& Value, const TArray<struct FFirebaseVariant>* Result);
	void TeleportSquadClient(class UObject* InteractionActor, bool IsAlone, const struct FTransform& CarTrans);
	void UpdateSquad__DelegateSignature();
	void UpdateSquadList();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PS_TDB_C">();
	}
	static class APS_TDB_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APS_TDB_C>();
	}
};
static_assert(alignof(APS_TDB_C) == 0x000010, "Wrong alignment on APS_TDB_C");
static_assert(sizeof(APS_TDB_C) == 0x0005F0, "Wrong size on APS_TDB_C");
static_assert(offsetof(APS_TDB_C, UberGraphFrame) == 0x0003A8, "Member 'APS_TDB_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, DefaultSceneRoot) == 0x0003B0, "Member 'APS_TDB_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, SquadId) == 0x0003B8, "Member 'APS_TDB_C::SquadId' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, AlreadyInvited) == 0x0003BC, "Member 'APS_TDB_C::AlreadyInvited' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, Login) == 0x0003C0, "Member 'APS_TDB_C::Login' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, Squads) == 0x0003D0, "Member 'APS_TDB_C::Squads' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, MySquad) == 0x000420, "Member 'APS_TDB_C::MySquad' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, SurvPC) == 0x000430, "Member 'APS_TDB_C::SurvPC' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, PartyOwner) == 0x000438, "Member 'APS_TDB_C::PartyOwner' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, Speaking) == 0x000439, "Member 'APS_TDB_C::Speaking' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, CharRef) == 0x000440, "Member 'APS_TDB_C::CharRef' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, Player_Id) == 0x000448, "Member 'APS_TDB_C::Player_Id' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, SquadLeader_Id) == 0x000458, "Member 'APS_TDB_C::SquadLeader_Id' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, UpdateSquad) == 0x000468, "Member 'APS_TDB_C::UpdateSquad' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, As_BP_Game_HUD) == 0x000478, "Member 'APS_TDB_C::As_BP_Game_HUD' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, Interaction_Actor) == 0x000480, "Member 'APS_TDB_C::Interaction_Actor' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, AcceptTeleport) == 0x000488, "Member 'APS_TDB_C::AcceptTeleport' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, OnAcceptTeleport) == 0x000490, "Member 'APS_TDB_C::OnAcceptTeleport' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, SquadReadyToTeleport) == 0x0004A0, "Member 'APS_TDB_C::SquadReadyToTeleport' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, InvitedPlayers) == 0x0004A8, "Member 'APS_TDB_C::InvitedPlayers' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, TempSquad) == 0x0004B8, "Member 'APS_TDB_C::TempSquad' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, LeaveCheckHideDuration) == 0x0004BC, "Member 'APS_TDB_C::LeaveCheckHideDuration' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, OnOwnerChanged) == 0x0004C0, "Member 'APS_TDB_C::OnOwnerChanged' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, CarObjRef) == 0x0004D0, "Member 'APS_TDB_C::CarObjRef' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, WhereAmI_) == 0x0004D8, "Member 'APS_TDB_C::WhereAmI_' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, SquadMembersToTeleport) == 0x0004E0, "Member 'APS_TDB_C::SquadMembersToTeleport' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, VehicleTempRef) == 0x0004F0, "Member 'APS_TDB_C::VehicleTempRef' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, VehicleTempTrans) == 0x000500, "Member 'APS_TDB_C::VehicleTempTrans' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, Interacting_PC) == 0x000560, "Member 'APS_TDB_C::Interacting_PC' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, OnWhereAmICahnged) == 0x000568, "Member 'APS_TDB_C::OnWhereAmICahnged' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, Pawn_Private) == 0x000578, "Member 'APS_TDB_C::Pawn_Private' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, SteamID) == 0x000580, "Member 'APS_TDB_C::SteamID' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, Visuals) == 0x000590, "Member 'APS_TDB_C::Visuals' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, Info) == 0x0005A0, "Member 'APS_TDB_C::Info' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, DatabaseReference) == 0x0005B0, "Member 'APS_TDB_C::DatabaseReference' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, B) == 0x0005B8, "Member 'APS_TDB_C::B' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, AutoFireEvent) == 0x0005C8, "Member 'APS_TDB_C::AutoFireEvent' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, StopAutoFireSoundTimerHandle) == 0x0005D0, "Member 'APS_TDB_C::StopAutoFireSoundTimerHandle' has a wrong offset!");
static_assert(offsetof(APS_TDB_C, NewVersion) == 0x0005D8, "Member 'APS_TDB_C::NewVersion' has a wrong offset!");

}

