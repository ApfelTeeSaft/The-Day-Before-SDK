#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CharacterCreate_Slider

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.BndEvt__W_CharacterCreate_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct W_CharacterCreate_Slider_C_BndEvt__W_CharacterCreate_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Param_Value;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_BndEvt__W_CharacterCreate_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on W_CharacterCreate_Slider_C_BndEvt__W_CharacterCreate_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(W_CharacterCreate_Slider_C_BndEvt__W_CharacterCreate_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on W_CharacterCreate_Slider_C_BndEvt__W_CharacterCreate_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(W_CharacterCreate_Slider_C_BndEvt__W_CharacterCreate_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Param_Value) == 0x000000, "Member 'W_CharacterCreate_Slider_C_BndEvt__W_CharacterCreate_Slider_Slider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Param_Value' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.ButtonSlider__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_CharacterCreate_Slider_C_ButtonSlider__DelegateSignature final
{
public:
	double                                        Param_Value;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_ButtonSlider__DelegateSignature) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_ButtonSlider__DelegateSignature");
static_assert(sizeof(W_CharacterCreate_Slider_C_ButtonSlider__DelegateSignature) == 0x000008, "Wrong size on W_CharacterCreate_Slider_C_ButtonSlider__DelegateSignature");
static_assert(offsetof(W_CharacterCreate_Slider_C_ButtonSlider__DelegateSignature, Param_Value) == 0x000000, "Member 'W_CharacterCreate_Slider_C_ButtonSlider__DelegateSignature::Param_Value' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.Change Material Param Color
// 0x0080 (0x0080 - 0x0000)
struct W_CharacterCreate_Slider_C_Change_Material_Param_Color final
{
public:
	TArray<class USkeletalMeshComponent*>         Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class FName                                   ParameterName;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_Value;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0048(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_Change_Material_Param_Color) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_Change_Material_Param_Color");
static_assert(sizeof(W_CharacterCreate_Slider_C_Change_Material_Param_Color) == 0x000080, "Wrong size on W_CharacterCreate_Slider_C_Change_Material_Param_Color");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, Array) == 0x000000, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::Array' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, ParameterName) == 0x000010, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::ParameterName' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, Param_Value) == 0x000018, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::Param_Value' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, Temp_int_Array_Index_Variable) == 0x000038, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, CallFunc_Array_Get_Item) == 0x000040, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, CallFunc_GetMaterials_ReturnValue) == 0x000048, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000068, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_Change_Material_Param_Color, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'W_CharacterCreate_Slider_C_Change_Material_Param_Color::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.ExecuteUbergraph_W_CharacterCreate_Slider
// 0x0248 (0x0248 - 0x0000)
struct W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CreateCharacter_C*                  CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            K2Node_Event_SettingsWidgetRef;                    // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings_1;               // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00BC(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00F8(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0170(0x0078)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB[0x5];                                      // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings_2;               // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_213[0x5];                                      // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Settings_C>       K2Node_DynamicCast_AsBPI_Settings_3;               // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22B[0x5];                                      // 0x022B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetValue_Value_ImplicitCast;              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider");
static_assert(sizeof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider) == 0x000248, "Wrong size on W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, EntryPoint) == 0x000000, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_ComponentBoundEvent_Value) == 0x000008, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000031, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000050, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000068, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x000070, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_PlayEvent2D_ReturnValue) == 0x000078, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_Event_SettingsWidgetRef) == 0x000080, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_Event_SettingsWidgetRef' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_DynamicCast_AsBPI_Settings) == 0x000090, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_DynamicCast_AsBPI_Settings' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_IsValid_ReturnValue_1) == 0x0000A1, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_DynamicCast_AsBPI_Settings_1) == 0x0000A8, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_DynamicCast_AsBPI_Settings_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_Event_MyGeometry) == 0x0000BC, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_Event_MouseEvent_1) == 0x0000F8, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_Event_MouseEvent) == 0x000170, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001E8, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_BooleanAND_ReturnValue) == 0x0001E9, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001EA, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_BooleanAND_ReturnValue_1) == 0x0001EB, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_PlayEvent2D_ReturnValue_1) == 0x0001F0, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001F8, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_Not_PreBool_ReturnValue_4) == 0x0001F9, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_IsValid_ReturnValue_2) == 0x0001FA, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_DynamicCast_AsBPI_Settings_2) == 0x000200, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_DynamicCast_AsBPI_Settings_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_DynamicCast_bSuccess_2) == 0x000210, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_Not_PreBool_ReturnValue_5) == 0x000211, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_IsValid_ReturnValue_3) == 0x000212, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_DynamicCast_AsBPI_Settings_3) == 0x000218, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_DynamicCast_AsBPI_Settings_3' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, K2Node_DynamicCast_bSuccess_3) == 0x000228, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_BooleanAND_ReturnValue_2) == 0x000229, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_BooleanAND_ReturnValue_3) == 0x00022A, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_MapRangeClamped_ReturnValue) == 0x000230, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000238, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider, CallFunc_SetValue_Value_ImplicitCast) == 0x000240, "Member 'W_CharacterCreate_Slider_C_ExecuteUbergraph_W_CharacterCreate_Slider::CallFunc_SetValue_Value_ImplicitCast' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.EyeColorFunc
// 0x0024 (0x0024 - 0x0000)
struct W_CharacterCreate_Slider_C_EyeColorFunc final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeColor_A1;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeColor_R;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeColor_G;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeColor_B;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeColor_A;                                        // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_EyeColorFunc) == 0x000004, "Wrong alignment on W_CharacterCreate_Slider_C_EyeColorFunc");
static_assert(sizeof(W_CharacterCreate_Slider_C_EyeColorFunc) == 0x000024, "Wrong size on W_CharacterCreate_Slider_C_EyeColorFunc");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, Param_Index) == 0x000000, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::Param_Index' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, EyeColor_A1) == 0x000004, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::EyeColor_A1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, EyeColor_R) == 0x000008, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::EyeColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, EyeColor_G) == 0x00000C, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::EyeColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, EyeColor_B) == 0x000010, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::EyeColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, EyeColor_A) == 0x000014, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::EyeColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000019, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00001A, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00001B, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00001C, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00001D, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00001E, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x00001F, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_EyeColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000020, "Member 'W_CharacterCreate_Slider_C_EyeColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.GetIsDefaultValue
// 0x0001 (0x0001 - 0x0000)
struct W_CharacterCreate_Slider_C_GetIsDefaultValue final
{
public:
	bool                                          Default;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_GetIsDefaultValue) == 0x000001, "Wrong alignment on W_CharacterCreate_Slider_C_GetIsDefaultValue");
static_assert(sizeof(W_CharacterCreate_Slider_C_GetIsDefaultValue) == 0x000001, "Wrong size on W_CharacterCreate_Slider_C_GetIsDefaultValue");
static_assert(offsetof(W_CharacterCreate_Slider_C_GetIsDefaultValue, Default) == 0x000000, "Member 'W_CharacterCreate_Slider_C_GetIsDefaultValue::Default' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.GetSettingName
// 0x0008 (0x0008 - 0x0000)
struct W_CharacterCreate_Slider_C_GetSettingName final
{
public:
	class FName                                   SettingName;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_GetSettingName) == 0x000004, "Wrong alignment on W_CharacterCreate_Slider_C_GetSettingName");
static_assert(sizeof(W_CharacterCreate_Slider_C_GetSettingName) == 0x000008, "Wrong size on W_CharacterCreate_Slider_C_GetSettingName");
static_assert(offsetof(W_CharacterCreate_Slider_C_GetSettingName, SettingName) == 0x000000, "Member 'W_CharacterCreate_Slider_C_GetSettingName::SettingName' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.HairColorFunc
// 0x0040 (0x0040 - 0x0000)
struct W_CharacterCreate_Slider_C_HairColorFunc final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HairColor_R;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_G;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_B;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_A;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_12;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_13;         // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_14;         // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_15;         // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_16;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_17;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_HairColorFunc) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_HairColorFunc");
static_assert(sizeof(W_CharacterCreate_Slider_C_HairColorFunc) == 0x000040, "Wrong size on W_CharacterCreate_Slider_C_HairColorFunc");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, Param_Index) == 0x000000, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::Param_Index' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, HairColor_R) == 0x000008, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::HairColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, HairColor_G) == 0x000010, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::HairColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, HairColor_B) == 0x000018, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::HairColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, HairColor_A) == 0x000020, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::HairColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000029, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00002A, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00002B, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00002C, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00002D, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00002E, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x00002F, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000030, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000031, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000032, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000033, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_12) == 0x000034, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_13) == 0x000035, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_14) == 0x000036, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_15) == 0x000037, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_16) == 0x000038, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_HairColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_17) == 0x000039, "Member 'W_CharacterCreate_Slider_C_HairColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_17' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.IsRowHovered
// 0x0001 (0x0001 - 0x0000)
struct W_CharacterCreate_Slider_C_IsRowHovered final
{
public:
	bool                                          Param_IsHovered;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_IsRowHovered) == 0x000001, "Wrong alignment on W_CharacterCreate_Slider_C_IsRowHovered");
static_assert(sizeof(W_CharacterCreate_Slider_C_IsRowHovered) == 0x000001, "Wrong size on W_CharacterCreate_Slider_C_IsRowHovered");
static_assert(offsetof(W_CharacterCreate_Slider_C_IsRowHovered, Param_IsHovered) == 0x000000, "Member 'W_CharacterCreate_Slider_C_IsRowHovered::Param_IsHovered' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.IsRowSelected
// 0x0001 (0x0001 - 0x0000)
struct W_CharacterCreate_Slider_C_IsRowSelected final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_IsRowSelected) == 0x000001, "Wrong alignment on W_CharacterCreate_Slider_C_IsRowSelected");
static_assert(sizeof(W_CharacterCreate_Slider_C_IsRowSelected) == 0x000001, "Wrong size on W_CharacterCreate_Slider_C_IsRowSelected");
static_assert(offsetof(W_CharacterCreate_Slider_C_IsRowSelected, IsSelected) == 0x000000, "Member 'W_CharacterCreate_Slider_C_IsRowSelected::IsSelected' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.LipsColorFunc
// 0x0038 (0x0038 - 0x0000)
struct W_CharacterCreate_Slider_C_LipsColorFunc final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HairColor_R;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_G;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_B;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_A;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_LipsColorFunc) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_LipsColorFunc");
static_assert(sizeof(W_CharacterCreate_Slider_C_LipsColorFunc) == 0x000038, "Wrong size on W_CharacterCreate_Slider_C_LipsColorFunc");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, Param_Index) == 0x000000, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::Param_Index' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, HairColor_R) == 0x000008, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::HairColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, HairColor_G) == 0x000010, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::HairColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, HairColor_B) == 0x000018, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::HairColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, HairColor_A) == 0x000020, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::HairColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000029, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00002A, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00002B, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00002C, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00002D, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00002E, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x00002F, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_LipsColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000030, "Member 'W_CharacterCreate_Slider_C_LipsColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.MakeupColorFunc
// 0x0038 (0x0038 - 0x0000)
struct W_CharacterCreate_Slider_C_MakeupColorFunc final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HairColor_R;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_G;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_B;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_A;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_MakeupColorFunc) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_MakeupColorFunc");
static_assert(sizeof(W_CharacterCreate_Slider_C_MakeupColorFunc) == 0x000038, "Wrong size on W_CharacterCreate_Slider_C_MakeupColorFunc");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, Param_Index) == 0x000000, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::Param_Index' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, HairColor_R) == 0x000008, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::HairColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, HairColor_G) == 0x000010, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::HairColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, HairColor_B) == 0x000018, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::HairColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, HairColor_A) == 0x000020, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::HairColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000029, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00002A, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00002B, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00002C, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00002D, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00002E, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x00002F, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000030, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_MakeupColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000031, "Member 'W_CharacterCreate_Slider_C_MakeupColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct W_CharacterCreate_Slider_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_CharacterCreate_Slider_C_OnMouseEnter) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_OnMouseEnter");
static_assert(sizeof(W_CharacterCreate_Slider_C_OnMouseEnter) == 0x0000B0, "Wrong size on W_CharacterCreate_Slider_C_OnMouseEnter");
static_assert(offsetof(W_CharacterCreate_Slider_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'W_CharacterCreate_Slider_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'W_CharacterCreate_Slider_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct W_CharacterCreate_Slider_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_CharacterCreate_Slider_C_OnMouseLeave) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_OnMouseLeave");
static_assert(sizeof(W_CharacterCreate_Slider_C_OnMouseLeave) == 0x000078, "Wrong size on W_CharacterCreate_Slider_C_OnMouseLeave");
static_assert(offsetof(W_CharacterCreate_Slider_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'W_CharacterCreate_Slider_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_CharacterCreate_Slider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_PreConstruct) == 0x000001, "Wrong alignment on W_CharacterCreate_Slider_C_PreConstruct");
static_assert(sizeof(W_CharacterCreate_Slider_C_PreConstruct) == 0x000001, "Wrong size on W_CharacterCreate_Slider_C_PreConstruct");
static_assert(offsetof(W_CharacterCreate_Slider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_CharacterCreate_Slider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetBeardColor
// 0x0070 (0x0070 - 0x0000)
struct W_CharacterCreate_Slider_C_SetBeardColor final
{
public:
	int32                                         Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_HairColorFunc_HairColor_R;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_HairColorFunc_HairColor_G;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_HairColorFunc_HairColor_B;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_HairColorFunc_HairColor_A;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetBeardColor) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetBeardColor");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetBeardColor) == 0x000070, "Wrong size on W_CharacterCreate_Slider_C_SetBeardColor");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, Color) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::Color' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, CallFunc_HairColorFunc_HairColor_R) == 0x000008, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::CallFunc_HairColorFunc_HairColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, CallFunc_HairColorFunc_HairColor_G) == 0x000010, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::CallFunc_HairColorFunc_HairColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, CallFunc_HairColorFunc_HairColor_B) == 0x000018, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::CallFunc_HairColorFunc_HairColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, CallFunc_HairColorFunc_HairColor_A) == 0x000020, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::CallFunc_HairColorFunc_HairColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, K2Node_MakeStruct_LinearColor) == 0x000028, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, K2Node_MakeArray_Array) == 0x000038, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, K2Node_DynamicCast_AsGI_Survival) == 0x000050, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, K2Node_MakeStruct_R_ImplicitCast) == 0x00005C, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, K2Node_MakeStruct_G_ImplicitCast) == 0x000060, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, K2Node_MakeStruct_B_ImplicitCast) == 0x000064, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetBeardColor, K2Node_MakeStruct_A_ImplicitCast) == 0x000068, "Member 'W_CharacterCreate_Slider_C_SetBeardColor::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetCustomValue
// 0x0010 (0x0010 - 0x0000)
struct W_CharacterCreate_Slider_C_SetCustomValue final
{
public:
	double                                        Param_Value;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetCustomValue) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetCustomValue");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetCustomValue) == 0x000010, "Wrong size on W_CharacterCreate_Slider_C_SetCustomValue");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetCustomValue, Param_Value) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetCustomValue::Param_Value' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetCustomValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'W_CharacterCreate_Slider_C_SetCustomValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetDefault
// 0x0008 (0x0008 - 0x0000)
struct W_CharacterCreate_Slider_C_SetDefault final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetDefault) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetDefault");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetDefault) == 0x000008, "Wrong size on W_CharacterCreate_Slider_C_SetDefault");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetDefault, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetDefault::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.setEnable
// 0x0001 (0x0001 - 0x0000)
struct W_CharacterCreate_Slider_C_SetEnable final
{
public:
	bool                                          Param_bEnabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetEnable) == 0x000001, "Wrong alignment on W_CharacterCreate_Slider_C_SetEnable");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetEnable) == 0x000001, "Wrong size on W_CharacterCreate_Slider_C_SetEnable");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEnable, Param_bEnabled) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetEnable::Param_bEnabled' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetEyeColor
// 0x0050 (0x0050 - 0x0000)
struct W_CharacterCreate_Slider_C_SetEyeColor final
{
public:
	int32                                         Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EyeColorFunc_EyeColor_R;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EyeColorFunc_EyeColor_G;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EyeColorFunc_EyeColor_B;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EyeColorFunc_EyeColor_A;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetEyeColor) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetEyeColor");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetEyeColor) == 0x000050, "Wrong size on W_CharacterCreate_Slider_C_SetEyeColor");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, Color) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::Color' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, CallFunc_EyeColorFunc_EyeColor_R) == 0x000004, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::CallFunc_EyeColorFunc_EyeColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, CallFunc_EyeColorFunc_EyeColor_G) == 0x000008, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::CallFunc_EyeColorFunc_EyeColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, CallFunc_EyeColorFunc_EyeColor_B) == 0x00000C, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::CallFunc_EyeColorFunc_EyeColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, CallFunc_EyeColorFunc_EyeColor_A) == 0x000010, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::CallFunc_EyeColorFunc_EyeColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, K2Node_MakeStruct_LinearColor) == 0x000014, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, K2Node_MakeArray_Array) == 0x000030, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, K2Node_DynamicCast_AsGI_Survival) == 0x000040, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetEyeColor, CallFunc_IsValid_ReturnValue_1) == 0x00004A, "Member 'W_CharacterCreate_Slider_C_SetEyeColor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetHairColor
// 0x0070 (0x0070 - 0x0000)
struct W_CharacterCreate_Slider_C_SetHairColor final
{
public:
	int32                                         Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_HairColorFunc_HairColor_R;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_HairColorFunc_HairColor_G;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_HairColorFunc_HairColor_B;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_HairColorFunc_HairColor_A;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetHairColor) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetHairColor");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetHairColor) == 0x000070, "Wrong size on W_CharacterCreate_Slider_C_SetHairColor");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, Color) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetHairColor::Color' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, CallFunc_HairColorFunc_HairColor_R) == 0x000008, "Member 'W_CharacterCreate_Slider_C_SetHairColor::CallFunc_HairColorFunc_HairColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, CallFunc_HairColorFunc_HairColor_G) == 0x000010, "Member 'W_CharacterCreate_Slider_C_SetHairColor::CallFunc_HairColorFunc_HairColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, CallFunc_HairColorFunc_HairColor_B) == 0x000018, "Member 'W_CharacterCreate_Slider_C_SetHairColor::CallFunc_HairColorFunc_HairColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, CallFunc_HairColorFunc_HairColor_A) == 0x000020, "Member 'W_CharacterCreate_Slider_C_SetHairColor::CallFunc_HairColorFunc_HairColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, K2Node_MakeStruct_LinearColor) == 0x000028, "Member 'W_CharacterCreate_Slider_C_SetHairColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'W_CharacterCreate_Slider_C_SetHairColor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, K2Node_MakeArray_Array) == 0x000040, "Member 'W_CharacterCreate_Slider_C_SetHairColor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, K2Node_DynamicCast_AsGI_Survival) == 0x000050, "Member 'W_CharacterCreate_Slider_C_SetHairColor::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'W_CharacterCreate_Slider_C_SetHairColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'W_CharacterCreate_Slider_C_SetHairColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, K2Node_MakeStruct_R_ImplicitCast) == 0x00005C, "Member 'W_CharacterCreate_Slider_C_SetHairColor::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, K2Node_MakeStruct_G_ImplicitCast) == 0x000060, "Member 'W_CharacterCreate_Slider_C_SetHairColor::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, K2Node_MakeStruct_B_ImplicitCast) == 0x000064, "Member 'W_CharacterCreate_Slider_C_SetHairColor::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHairColor, K2Node_MakeStruct_A_ImplicitCast) == 0x000068, "Member 'W_CharacterCreate_Slider_C_SetHairColor::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetHovered
// 0x0008 (0x0008 - 0x0000)
struct W_CharacterCreate_Slider_C_SetHovered final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetHovered) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetHovered");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetHovered) == 0x000008, "Wrong size on W_CharacterCreate_Slider_C_SetHovered");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetHovered, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetHovered::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetLipsColor
// 0x0070 (0x0070 - 0x0000)
struct W_CharacterCreate_Slider_C_SetLipsColor final
{
public:
	int32                                         Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LipsColorFunc_HairColor_R;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LipsColorFunc_HairColor_G;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LipsColorFunc_HairColor_B;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LipsColorFunc_HairColor_A;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetLipsColor) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetLipsColor");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetLipsColor) == 0x000070, "Wrong size on W_CharacterCreate_Slider_C_SetLipsColor");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, Color) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::Color' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, CallFunc_LipsColorFunc_HairColor_R) == 0x000008, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::CallFunc_LipsColorFunc_HairColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, CallFunc_LipsColorFunc_HairColor_G) == 0x000010, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::CallFunc_LipsColorFunc_HairColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, CallFunc_LipsColorFunc_HairColor_B) == 0x000018, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::CallFunc_LipsColorFunc_HairColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, CallFunc_LipsColorFunc_HairColor_A) == 0x000020, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::CallFunc_LipsColorFunc_HairColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, K2Node_MakeStruct_LinearColor) == 0x000028, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, K2Node_MakeArray_Array) == 0x000040, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, K2Node_DynamicCast_AsGI_Survival) == 0x000050, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, K2Node_MakeStruct_R_ImplicitCast) == 0x00005C, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, K2Node_MakeStruct_G_ImplicitCast) == 0x000060, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, K2Node_MakeStruct_B_ImplicitCast) == 0x000064, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetLipsColor, K2Node_MakeStruct_A_ImplicitCast) == 0x000068, "Member 'W_CharacterCreate_Slider_C_SetLipsColor::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetMakeupColor
// 0x0070 (0x0070 - 0x0000)
struct W_CharacterCreate_Slider_C_SetMakeupColor final
{
public:
	int32                                         Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeupColorFunc_HairColor_R;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeupColorFunc_HairColor_G;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeupColorFunc_HairColor_B;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeupColorFunc_HairColor_A;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetMakeupColor) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetMakeupColor");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetMakeupColor) == 0x000070, "Wrong size on W_CharacterCreate_Slider_C_SetMakeupColor");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, Color) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::Color' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, CallFunc_MakeupColorFunc_HairColor_R) == 0x000008, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::CallFunc_MakeupColorFunc_HairColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, CallFunc_MakeupColorFunc_HairColor_G) == 0x000010, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::CallFunc_MakeupColorFunc_HairColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, CallFunc_MakeupColorFunc_HairColor_B) == 0x000018, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::CallFunc_MakeupColorFunc_HairColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, CallFunc_MakeupColorFunc_HairColor_A) == 0x000020, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::CallFunc_MakeupColorFunc_HairColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, K2Node_MakeStruct_LinearColor) == 0x000028, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, K2Node_MakeArray_Array) == 0x000038, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, K2Node_DynamicCast_AsGI_Survival) == 0x000050, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, K2Node_MakeStruct_R_ImplicitCast) == 0x00005C, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, K2Node_MakeStruct_G_ImplicitCast) == 0x000060, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, K2Node_MakeStruct_B_ImplicitCast) == 0x000064, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetMakeupColor, K2Node_MakeStruct_A_ImplicitCast) == 0x000068, "Member 'W_CharacterCreate_Slider_C_SetMakeupColor::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetParentSettingsWidget
// 0x0008 (0x0008 - 0x0000)
struct W_CharacterCreate_Slider_C_SetParentSettingsWidget final
{
public:
	class UUserWidget*                            SettingsWidgetRef;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetParentSettingsWidget) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetParentSettingsWidget");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetParentSettingsWidget) == 0x000008, "Wrong size on W_CharacterCreate_Slider_C_SetParentSettingsWidget");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetParentSettingsWidget, SettingsWidgetRef) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetParentSettingsWidget::SettingsWidgetRef' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetSelected
// 0x0010 (0x0010 - 0x0000)
struct W_CharacterCreate_Slider_C_SetSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetSelected) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetSelected");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetSelected) == 0x000010, "Wrong size on W_CharacterCreate_Slider_C_SetSelected");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetSelected, Selected) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetSelected::Selected' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetSelected, Temp_bool_Variable) == 0x000001, "Member 'W_CharacterCreate_Slider_C_SetSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetSelected, Temp_byte_Variable) == 0x000002, "Member 'W_CharacterCreate_Slider_C_SetSelected::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetSelected, Temp_byte_Variable_1) == 0x000003, "Member 'W_CharacterCreate_Slider_C_SetSelected::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetSelected, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000004, "Member 'W_CharacterCreate_Slider_C_SetSelected::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetSelected, K2Node_Select_Default) == 0x000005, "Member 'W_CharacterCreate_Slider_C_SetSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetSelected, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_CharacterCreate_Slider_C_SetSelected::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetTattooColor
// 0x0070 (0x0070 - 0x0000)
struct W_CharacterCreate_Slider_C_SetTattooColor final
{
public:
	int32                                         Color;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TattooColorFunc_HairColor_R;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TattooColorFunc_HairColor_G;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TattooColorFunc_HairColor_B;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TattooColorFunc_HairColor_A;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UGI_Survival_C*                         K2Node_DynamicCast_AsGI_Survival;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetTattooColor) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetTattooColor");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetTattooColor) == 0x000070, "Wrong size on W_CharacterCreate_Slider_C_SetTattooColor");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, Color) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::Color' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, CallFunc_TattooColorFunc_HairColor_R) == 0x000008, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::CallFunc_TattooColorFunc_HairColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, CallFunc_TattooColorFunc_HairColor_G) == 0x000010, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::CallFunc_TattooColorFunc_HairColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, CallFunc_TattooColorFunc_HairColor_B) == 0x000018, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::CallFunc_TattooColorFunc_HairColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, CallFunc_TattooColorFunc_HairColor_A) == 0x000020, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::CallFunc_TattooColorFunc_HairColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, K2Node_MakeStruct_LinearColor) == 0x000028, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, K2Node_MakeArray_Array) == 0x000040, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, K2Node_DynamicCast_AsGI_Survival) == 0x000050, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::K2Node_DynamicCast_AsGI_Survival' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, K2Node_MakeStruct_R_ImplicitCast) == 0x00005C, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, K2Node_MakeStruct_G_ImplicitCast) == 0x000060, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, K2Node_MakeStruct_B_ImplicitCast) == 0x000064, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetTattooColor, K2Node_MakeStruct_A_ImplicitCast) == 0x000068, "Member 'W_CharacterCreate_Slider_C_SetTattooColor::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.SetValue
// 0x0050 (0x0050 - 0x0000)
struct W_CharacterCreate_Slider_C_SetValue final
{
public:
	double                                        Param_Value;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaySound;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Value_ImplicitCast;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_SetValue) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_SetValue");
static_assert(sizeof(W_CharacterCreate_Slider_C_SetValue) == 0x000050, "Wrong size on W_CharacterCreate_Slider_C_SetValue");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, Param_Value) == 0x000000, "Member 'W_CharacterCreate_Slider_C_SetValue::Param_Value' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, bPlaySound) == 0x000008, "Member 'W_CharacterCreate_Slider_C_SetValue::bPlaySound' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000009, "Member 'W_CharacterCreate_Slider_C_SetValue::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, CallFunc_PlayEvent2D_ReturnValue) == 0x000010, "Member 'W_CharacterCreate_Slider_C_SetValue::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'W_CharacterCreate_Slider_C_SetValue::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, CallFunc_GridSnap_Float_ReturnValue) == 0x000020, "Member 'W_CharacterCreate_Slider_C_SetValue::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'W_CharacterCreate_Slider_C_SetValue::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'W_CharacterCreate_Slider_C_SetValue::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'W_CharacterCreate_Slider_C_SetValue::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'W_CharacterCreate_Slider_C_SetValue::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000048, "Member 'W_CharacterCreate_Slider_C_SetValue::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_SetValue, K2Node_VariableSet_Value_ImplicitCast) == 0x00004C, "Member 'W_CharacterCreate_Slider_C_SetValue::K2Node_VariableSet_Value_ImplicitCast' has a wrong offset!");

// Function W_CharacterCreate_Slider.W_CharacterCreate_Slider_C.TattooColorFunc
// 0x0038 (0x0038 - 0x0000)
struct W_CharacterCreate_Slider_C_TattooColorFunc final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HairColor_R;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_G;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_B;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HairColor_A;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CharacterCreate_Slider_C_TattooColorFunc) == 0x000008, "Wrong alignment on W_CharacterCreate_Slider_C_TattooColorFunc");
static_assert(sizeof(W_CharacterCreate_Slider_C_TattooColorFunc) == 0x000038, "Wrong size on W_CharacterCreate_Slider_C_TattooColorFunc");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, Param_Index) == 0x000000, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::Param_Index' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, HairColor_R) == 0x000008, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::HairColor_R' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, HairColor_G) == 0x000010, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::HairColor_G' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, HairColor_B) == 0x000018, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::HairColor_B' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, HairColor_A) == 0x000020, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::HairColor_A' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000029, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00002A, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00002B, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00002C, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00002D, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00002E, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x00002F, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000030, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_CharacterCreate_Slider_C_TattooColorFunc, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000031, "Member 'W_CharacterCreate_Slider_C_TattooColorFunc::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");

}

