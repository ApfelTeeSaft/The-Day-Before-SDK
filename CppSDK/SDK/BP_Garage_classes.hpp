#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Garage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Garage.BP_Garage_C
// 0x0038 (0x02C8 - 0x0290)
class ABP_Garage_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_GarageSpace_C*>              Garage_Spaces;                                     // 0x02A0(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, ExposeOnSpawn)
	TArray<struct FTransform>                     Spaces;                                            // 0x02B0(0x0010)(Edit, BlueprintVisible)
	class ABP_TeleporterDoorMaster_C*             DoorTeleport;                                      // 0x02C0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void DestroyCars();
	void ExecuteUbergraph_BP_Garage(int32 EntryPoint);
	void InitCars(TArray<class FString>& CarNames, const class FString& Phase, class ASurvivalPlayer_V2_C* Param_Owner, class ASurvivalPlayer_V2_C* Char);
	void InitGarage(TArray<class FString>& CarNames, const class FString& Phase, class ASurvivalPlayer_V2_C* Param_Owner, class ASurvivalPlayer_V2_C* Char);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Garage_C">();
	}
	static class ABP_Garage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Garage_C>();
	}
};
static_assert(alignof(ABP_Garage_C) == 0x000008, "Wrong alignment on ABP_Garage_C");
static_assert(sizeof(ABP_Garage_C) == 0x0002C8, "Wrong size on ABP_Garage_C");
static_assert(offsetof(ABP_Garage_C, UberGraphFrame) == 0x000290, "Member 'ABP_Garage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Garage_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_Garage_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Garage_C, Garage_Spaces) == 0x0002A0, "Member 'ABP_Garage_C::Garage_Spaces' has a wrong offset!");
static_assert(offsetof(ABP_Garage_C, Spaces) == 0x0002B0, "Member 'ABP_Garage_C::Spaces' has a wrong offset!");
static_assert(offsetof(ABP_Garage_C, DoorTeleport) == 0x0002C0, "Member 'ABP_Garage_C::DoorTeleport' has a wrong offset!");

}

