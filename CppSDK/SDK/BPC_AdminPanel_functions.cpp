#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_AdminPanel

#include "Basic.hpp"

#include "BPC_AdminPanel_classes.hpp"
#include "BPC_AdminPanel_parameters.hpp"


namespace SDK
{

// Function BPC_AdminPanel.BPC_AdminPanel_C.AdminMessageToChat
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UBPC_AdminPanel_C::AdminMessageToChat(const class FText& InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "AdminMessageToChat");

	Params::BPC_AdminPanel_C_AdminMessageToChat Parms{};

	Parms.InputPin = std::move(InputPin);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.AdminPanelMessage
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UBPC_AdminPanel_C::AdminPanelMessage(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "AdminPanelMessage");

	Params::BPC_AdminPanel_C_AdminPanelMessage Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.BanPlayerById
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Mute                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Amnesty                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AdminPanel_C::BanPlayerById(const class FString& SteamID, const class FString& Time, const class FText& Reason, bool Mute, bool Amnesty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "BanPlayerById");

	Params::BPC_AdminPanel_C_BanPlayerById Parms{};

	Parms.SteamID = std::move(SteamID);
	Parms.Time = std::move(Time);
	Parms.Reason = std::move(Reason);
	Parms.Mute = Mute;
	Parms.Amnesty = Amnesty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.BanPlayerServer
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     TargetPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             KickReason                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Mute                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Amnesty                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AdminPanel_C::BanPlayerServer(class APlayerState* TargetPlayer, const class FText& KickReason, const class FString& Time, bool Mute, bool Amnesty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "BanPlayerServer");

	Params::BPC_AdminPanel_C_BanPlayerServer Parms{};

	Parms.TargetPlayer = TargetPlayer;
	Parms.KickReason = std::move(KickReason);
	Parms.Time = std::move(Time);
	Parms.Mute = Mute;
	Parms.Amnesty = Amnesty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.CharDataUpdate
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Info                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBPC_AdminPanel_C::CharDataUpdate(const TArray<class FString>& Info, const class FString& SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "CharDataUpdate");

	Params::BPC_AdminPanel_C_CharDataUpdate Parms{};

	Parms.Info = std::move(Info);
	Parms.SteamID = std::move(SteamID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.DateTimeToString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDateTime                        InDateTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPC_AdminPanel_C::DateTimeToString(const struct FDateTime& InDateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "DateTimeToString");

	Params::BPC_AdminPanel_C_DateTimeToString Parms{};

	Parms.InDateTime = std::move(InDateTime);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.ExecuteUbergraph_BPC_AdminPanel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AdminPanel_C::ExecuteUbergraph_BPC_AdminPanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "ExecuteUbergraph_BPC_AdminPanel");

	Params::BPC_AdminPanel_C_ExecuteUbergraph_BPC_AdminPanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.KickPlayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                TargetPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             KickReason                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBPC_AdminPanel_C::KickPlayer(class APlayerController* TargetPlayer, const class FText& KickReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "KickPlayer");

	Params::BPC_AdminPanel_C_KickPlayer Parms{};

	Parms.TargetPlayer = TargetPlayer;
	Parms.KickReason = std::move(KickReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.KickPlayerServer
// (Net, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     TargetPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             KickReason                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBPC_AdminPanel_C::KickPlayerServer(class APlayerState* TargetPlayer, const class FText& KickReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "KickPlayerServer");

	Params::BPC_AdminPanel_C_KickPlayerServer Parms{};

	Parms.TargetPlayer = TargetPlayer;
	Parms.KickReason = std::move(KickReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBPC_AdminPanel_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.SetAdmin
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    NewAdmin                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_AdminPanel_C::SetAdmin(const class FString& SteamID, const bool NewAdmin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "SetAdmin");

	Params::BPC_AdminPanel_C_SetAdmin Parms{};

	Parms.SteamID = std::move(SteamID);
	Parms.NewAdmin = NewAdmin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.StringToTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           SourceString                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTimeAllowed                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTimespan UBPC_AdminPanel_C::StringToTime(const class FString& SourceString, bool* IsTimeAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "StringToTime");

	Params::BPC_AdminPanel_C_StringToTime Parms{};

	Parms.SourceString = std::move(SourceString);

	UObject::ProcessEvent(Func, &Parms);

	if (IsTimeAllowed != nullptr)
		*IsTimeAllowed = Parms.IsTimeAllowed;

	return Parms.ReturnValue;
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.TimespanToString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTimespan                        InTimespan                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBPC_AdminPanel_C::TimespanToString(const struct FTimespan& InTimespan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "TimespanToString");

	Params::BPC_AdminPanel_C_TimespanToString Parms{};

	Parms.InTimespan = std::move(InTimespan);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.WarningToPlayer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             WarningMessage                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void UBPC_AdminPanel_C::WarningToPlayer(class UObject* Object, const class FText& WarningMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "WarningToPlayer");

	Params::BPC_AdminPanel_C_WarningToPlayer Parms{};

	Parms.Object = Object;
	Parms.WarningMessage = std::move(WarningMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_AdminPanel.BPC_AdminPanel_C.WidgetAdminPanel
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void UBPC_AdminPanel_C::WidgetAdminPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_AdminPanel_C", "WidgetAdminPanel");

	UObject::ProcessEvent(Func, nullptr);
}

}

