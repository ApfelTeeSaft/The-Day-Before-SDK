#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayerStats

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Survival_structs.hpp"
#include "StatType_structs.hpp"
#include "BPE_FireMode_structs.hpp"
#include "BPE_Weapon_Type_structs.hpp"
#include "BPE_AmmoClass_structs.hpp"


namespace SDK::Params
{

// Function W_PlayerStats.W_PlayerStats_C.AimState
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerStats_C_AimState final
{
public:
	bool                                          Param_Aim;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_AimState) == 0x000001, "Wrong alignment on W_PlayerStats_C_AimState");
static_assert(sizeof(W_PlayerStats_C_AimState) == 0x000001, "Wrong size on W_PlayerStats_C_AimState");
static_assert(offsetof(W_PlayerStats_C_AimState, Param_Aim) == 0x000000, "Member 'W_PlayerStats_C_AimState::Param_Aim' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.AmmoChangedEvent
// 0x0018 (0x0018 - 0x0000)
struct W_PlayerStats_C_AmmoChangedEvent final
{
public:
	EBPE_Weapon_Type                              WeaponType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_FireMode                                 FireMode;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                AmmoClass;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentAmmo;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowAmmo;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxAmmo;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     UIIcon;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_AmmoChangedEvent) == 0x000008, "Wrong alignment on W_PlayerStats_C_AmmoChangedEvent");
static_assert(sizeof(W_PlayerStats_C_AmmoChangedEvent) == 0x000018, "Wrong size on W_PlayerStats_C_AmmoChangedEvent");
static_assert(offsetof(W_PlayerStats_C_AmmoChangedEvent, WeaponType) == 0x000000, "Member 'W_PlayerStats_C_AmmoChangedEvent::WeaponType' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_AmmoChangedEvent, FireMode) == 0x000001, "Member 'W_PlayerStats_C_AmmoChangedEvent::FireMode' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_AmmoChangedEvent, AmmoClass) == 0x000002, "Member 'W_PlayerStats_C_AmmoChangedEvent::AmmoClass' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_AmmoChangedEvent, CurrentAmmo) == 0x000004, "Member 'W_PlayerStats_C_AmmoChangedEvent::CurrentAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_AmmoChangedEvent, LowAmmo) == 0x000008, "Member 'W_PlayerStats_C_AmmoChangedEvent::LowAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_AmmoChangedEvent, MaxAmmo) == 0x00000C, "Member 'W_PlayerStats_C_AmmoChangedEvent::MaxAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_AmmoChangedEvent, UIIcon) == 0x000010, "Member 'W_PlayerStats_C_AmmoChangedEvent::UIIcon' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.CancelSwitcher
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerStats_C_CancelSwitcher final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_CancelSwitcher) == 0x000001, "Wrong alignment on W_PlayerStats_C_CancelSwitcher");
static_assert(sizeof(W_PlayerStats_C_CancelSwitcher) == 0x000001, "Wrong size on W_PlayerStats_C_CancelSwitcher");
static_assert(offsetof(W_PlayerStats_C_CancelSwitcher, On_) == 0x000000, "Member 'W_PlayerStats_C_CancelSwitcher::On_' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.ChangeFireType
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerStats_C_ChangeFireType final
{
public:
	EBPE_FireMode                                 FireMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_ChangeFireType) == 0x000001, "Wrong alignment on W_PlayerStats_C_ChangeFireType");
static_assert(sizeof(W_PlayerStats_C_ChangeFireType) == 0x000001, "Wrong size on W_PlayerStats_C_ChangeFireType");
static_assert(offsetof(W_PlayerStats_C_ChangeFireType, FireMode) == 0x000000, "Member 'W_PlayerStats_C_ChangeFireType::FireMode' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.ExecuteUbergraph_W_PlayerStats
// 0x0230 (0x0230 - 0x0000)
struct W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visible_1;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_FireMode                                 K2Node_CustomEvent_FireMode_1;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CustomHideTime;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_HideTime;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStatType                                     K2Node_CustomEvent_StatKey;                        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              K2Node_CustomEvent_WeaponType;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_FireMode                                 K2Node_CustomEvent_FireMode;                       // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                K2Node_CustomEvent_AmmoClass;                      // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentAmmo;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LowAmmo;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxAmmo;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_CustomEvent_UIIcon;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_StatsInterface_C>   K2Node_DynamicCast_AsI_Stats_Interface;            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_PlayerStatsComponent_C*            CallFunc_GetStatsComponent_PlayerStats;            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_3;       // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_4;       // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_5;       // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_2;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visible;                        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Aim)>                     K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStatType                                     Temp_byte_Variable;                                // 0x0110(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStatType                                     Temp_byte_Variable_1;                              // 0x0111(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStatType                                     Temp_byte_Variable_2;                              // 0x0112(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EBPE_Weapon_Type WeaponType, EBPE_FireMode FireMode, EBPE_AmmoClass AmmoClass, int32 CurrentAmmo, int32 LowAmmo, int32 MaxAmmo, class UMaterialInterface* UIIcon)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x013C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EStatType StatKey)>            K2Node_CreateDelegate_OutputDelegate_4;            // 0x014C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Aim;                            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool On_, EUNegativeEffectType EffectType)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBPC_NegativeEffects_C*                 CallFunc_InitNegativeEffects_BPC_NegativeEffects;  // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x018C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x019C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x01AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCutsceneComponent_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EBPE_FireMode FireMode)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x01CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCutsceneComponent_C*             CallFunc_GetComponentByClass_ReturnValue_1;        // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStat_Value_2;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_3;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_4;                              // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ToggleAmmoStat_AnimationDelay_ImplicitCast; // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ToggleAmmoStat_AnimationDelay_ImplicitCast_1; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats) == 0x000008, "Wrong alignment on W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats");
static_assert(sizeof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats) == 0x000230, "Wrong size on W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, EntryPoint) == 0x000000, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_Visible_1) == 0x000020, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_Visible_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000028, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000030, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000038, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_FireMode_1) == 0x000039, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_FireMode_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_CustomHideTime) == 0x00003A, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_CustomHideTime' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_HideTime) == 0x000040, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_HideTime' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_StatKey) == 0x000048, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_StatKey' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_WeaponType) == 0x000049, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_WeaponType' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_FireMode) == 0x00004A, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_FireMode' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_AmmoClass) == 0x00004B, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_AmmoClass' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_CurrentAmmo) == 0x00004C, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_CurrentAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_LowAmmo) == 0x000050, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_LowAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_MaxAmmo) == 0x000054, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_MaxAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_UIIcon) == 0x000058, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_UIIcon' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_Enabled) == 0x000061, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, Temp_bool_Variable) == 0x000062, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000068, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_DynamicCast_AsSurvival_Player) == 0x000070, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000079, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000080, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000088, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_DynamicCast_AsI_Stats_Interface) == 0x000090, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_DynamicCast_AsI_Stats_Interface' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_GetStatsComponent_PlayerStats) == 0x0000A8, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_GetStatsComponent_PlayerStats' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0000B0, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x0000B8, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_PlayAnimationForward_ReturnValue_3) == 0x0000C0, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_PlayAnimationForward_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_PlayAnimationForward_ReturnValue_4) == 0x0000C8, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_PlayAnimationForward_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_PlayAnimationForward_ReturnValue_5) == 0x0000D0, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_PlayAnimationForward_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_IsAnimationPlaying_ReturnValue_2) == 0x0000D8, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_IsAnimationPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_Visible) == 0x0000D9, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_Visible' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result) == 0x0000E0, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_CreatePlayAnimationTimeRangeProxyObject_Result' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue) == 0x0000E8, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_CreatePlayAnimationTimeRangeProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_IsValid_ReturnValue_1) == 0x0000F1, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_IsValid_ReturnValue_2) == 0x0000F2, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F3, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F4, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000108, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, Temp_byte_Variable) == 0x000110, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, Temp_byte_Variable_1) == 0x000111, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, Temp_byte_Variable_2) == 0x000112, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_GetStat_Value) == 0x000118, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_Map_Find_Value) == 0x000120, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_Map_Find_ReturnValue) == 0x000128, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000129, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate_2) == 0x00012C, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate_3) == 0x00013C, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate_4) == 0x00014C, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate_5) == 0x00015C, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CustomEvent_Aim) == 0x00016C, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CustomEvent_Aim' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate_6) == 0x000170, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_InitNegativeEffects_BPC_NegativeEffects) == 0x000180, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_InitNegativeEffects_BPC_NegativeEffects' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_IsValid_ReturnValue_3) == 0x000188, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate_7) == 0x00018C, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate_8) == 0x00019C, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001AC, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_GetComponentByClass_ReturnValue) == 0x0001C0, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_IsValid_ReturnValue_4) == 0x0001C8, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_CreateDelegate_OutputDelegate_10) == 0x0001CC, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0001E0, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_GetStat_Value_1) == 0x0001E8, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_IsValid_ReturnValue_5) == 0x0001F0, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_GetStat_Value_2) == 0x0001F8, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_GetStat_Value_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_GetStat_Value_3) == 0x000200, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_GetStat_Value_3' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, Temp_byte_Variable_3) == 0x000208, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, Temp_byte_Variable_4) == 0x000209, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, K2Node_Select_Default) == 0x00020A, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_PlayAnimation_ReturnValue) == 0x000210, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_ToggleAmmoStat_AnimationDelay_ImplicitCast) == 0x000218, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_ToggleAmmoStat_AnimationDelay_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_ToggleAmmoStat_AnimationDelay_ImplicitCast_1) == 0x000220, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_ToggleAmmoStat_AnimationDelay_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000228, "Member 'W_PlayerStats_C_ExecuteUbergraph_W_PlayerStats::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.GetCriticalValue
// 0x0068 (0x0068 - 0x0000)
struct W_PlayerStats_C_GetCriticalValue final
{
public:
	EStatType                                     CurrentStat;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStatType                                     MaxStat;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TriggerPercent;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentValue;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_PlayerStatsComponent_C*            StatsComponent;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        FunctionCurrentValue;                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_GetCriticalValue) == 0x000008, "Wrong alignment on W_PlayerStats_C_GetCriticalValue");
static_assert(sizeof(W_PlayerStats_C_GetCriticalValue) == 0x000068, "Wrong size on W_PlayerStats_C_GetCriticalValue");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CurrentStat) == 0x000000, "Member 'W_PlayerStats_C_GetCriticalValue::CurrentStat' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, MaxStat) == 0x000001, "Member 'W_PlayerStats_C_GetCriticalValue::MaxStat' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, TriggerPercent) == 0x000008, "Member 'W_PlayerStats_C_GetCriticalValue::TriggerPercent' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, Result) == 0x000010, "Member 'W_PlayerStats_C_GetCriticalValue::Result' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CurrentValue) == 0x000018, "Member 'W_PlayerStats_C_GetCriticalValue::CurrentValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, StatsComponent) == 0x000020, "Member 'W_PlayerStats_C_GetCriticalValue::StatsComponent' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, FunctionCurrentValue) == 0x000028, "Member 'W_PlayerStats_C_GetCriticalValue::FunctionCurrentValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, FunctionResult) == 0x000030, "Member 'W_PlayerStats_C_GetCriticalValue::FunctionResult' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'W_PlayerStats_C_GetCriticalValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CallFunc_GetStat_Value) == 0x000040, "Member 'W_PlayerStats_C_GetCriticalValue::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CallFunc_GetStat_Value_1) == 0x000048, "Member 'W_PlayerStats_C_GetCriticalValue::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'W_PlayerStats_C_GetCriticalValue::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, K2Node_MathExpression_ReturnValue) == 0x000058, "Member 'W_PlayerStats_C_GetCriticalValue::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000060, "Member 'W_PlayerStats_C_GetCriticalValue::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'W_PlayerStats_C_GetCriticalValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CallFunc_IsValid_ReturnValue_1) == 0x000062, "Member 'W_PlayerStats_C_GetCriticalValue::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CallFunc_IsValid_ReturnValue_2) == 0x000063, "Member 'W_PlayerStats_C_GetCriticalValue::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_GetCriticalValue, CallFunc_BooleanAND_ReturnValue) == 0x000064, "Member 'W_PlayerStats_C_GetCriticalValue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.InitNegativeEffects
// 0x0030 (0x0030 - 0x0000)
struct W_PlayerStats_C_InitNegativeEffects final
{
public:
	class UBPC_NegativeEffects_C*                 BPC_NegativeEffects;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_InitNegativeEffects) == 0x000008, "Wrong alignment on W_PlayerStats_C_InitNegativeEffects");
static_assert(sizeof(W_PlayerStats_C_InitNegativeEffects) == 0x000030, "Wrong size on W_PlayerStats_C_InitNegativeEffects");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, BPC_NegativeEffects) == 0x000000, "Member 'W_PlayerStats_C_InitNegativeEffects::BPC_NegativeEffects' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, Temp_int_Variable) == 0x000008, "Member 'W_PlayerStats_C_InitNegativeEffects::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, Temp_int_Variable_1) == 0x00000C, "Member 'W_PlayerStats_C_InitNegativeEffects::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000019, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001A, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_Array_Contains_ReturnValue) == 0x000022, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_MakeLiteralInt_ReturnValue) == 0x000024, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_InitNegativeEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'W_PlayerStats_C_InitNegativeEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.NegativeEffectChanged
// 0x0028 (0x0028 - 0x0000)
struct W_PlayerStats_C_NegativeEffectChanged final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          EffectType;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_NegativeEffectChanged) == 0x000008, "Wrong alignment on W_PlayerStats_C_NegativeEffectChanged");
static_assert(sizeof(W_PlayerStats_C_NegativeEffectChanged) == 0x000028, "Wrong size on W_PlayerStats_C_NegativeEffectChanged");
static_assert(offsetof(W_PlayerStats_C_NegativeEffectChanged, On_) == 0x000000, "Member 'W_PlayerStats_C_NegativeEffectChanged::On_' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_NegativeEffectChanged, EffectType) == 0x000001, "Member 'W_PlayerStats_C_NegativeEffectChanged::EffectType' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_NegativeEffectChanged, Temp_byte_Variable) == 0x000002, "Member 'W_PlayerStats_C_NegativeEffectChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_NegativeEffectChanged, Temp_object_Variable) == 0x000008, "Member 'W_PlayerStats_C_NegativeEffectChanged::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_NegativeEffectChanged, Temp_byte_Variable_1) == 0x000010, "Member 'W_PlayerStats_C_NegativeEffectChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_NegativeEffectChanged, K2Node_Select_Default) == 0x000018, "Member 'W_PlayerStats_C_NegativeEffectChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_NegativeEffectChanged, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_PlayerStats_C_NegativeEffectChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_NegativeEffectChanged, Temp_byte_Variable_2) == 0x000021, "Member 'W_PlayerStats_C_NegativeEffectChanged::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_NegativeEffectChanged, Temp_bool_Variable) == 0x000022, "Member 'W_PlayerStats_C_NegativeEffectChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_NegativeEffectChanged, K2Node_Select_Default_1) == 0x000023, "Member 'W_PlayerStats_C_NegativeEffectChanged::K2Node_Select_Default_1' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.OnStatChange
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerStats_C_OnStatChange final
{
public:
	EStatType                                     StatKey;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_OnStatChange) == 0x000001, "Wrong alignment on W_PlayerStats_C_OnStatChange");
static_assert(sizeof(W_PlayerStats_C_OnStatChange) == 0x000001, "Wrong size on W_PlayerStats_C_OnStatChange");
static_assert(offsetof(W_PlayerStats_C_OnStatChange, StatKey) == 0x000000, "Member 'W_PlayerStats_C_OnStatChange::StatKey' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.OnStatChanged_Handler
// 0x0038 (0x0038 - 0x0000)
struct W_PlayerStats_C_OnStatChanged_Handler final
{
public:
	EStatType                                     StatKey;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ActualStatValue;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CachedStatValue;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_OnStatChanged_Handler) == 0x000008, "Wrong alignment on W_PlayerStats_C_OnStatChanged_Handler");
static_assert(sizeof(W_PlayerStats_C_OnStatChanged_Handler) == 0x000038, "Wrong size on W_PlayerStats_C_OnStatChanged_Handler");
static_assert(offsetof(W_PlayerStats_C_OnStatChanged_Handler, StatKey) == 0x000000, "Member 'W_PlayerStats_C_OnStatChanged_Handler::StatKey' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_OnStatChanged_Handler, ActualStatValue) == 0x000008, "Member 'W_PlayerStats_C_OnStatChanged_Handler::ActualStatValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_OnStatChanged_Handler, CachedStatValue) == 0x000010, "Member 'W_PlayerStats_C_OnStatChanged_Handler::CachedStatValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_OnStatChanged_Handler, CallFunc_GetStat_Value) == 0x000018, "Member 'W_PlayerStats_C_OnStatChanged_Handler::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_OnStatChanged_Handler, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'W_PlayerStats_C_OnStatChanged_Handler::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_OnStatChanged_Handler, CallFunc_Map_Find_Value) == 0x000028, "Member 'W_PlayerStats_C_OnStatChanged_Handler::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_OnStatChanged_Handler, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'W_PlayerStats_C_OnStatChanged_Handler::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.PlayAnimation (ByCondition)
// 0x0020 (0x0020 - 0x0000)
struct W_PlayerStats_C_PlayAnimation__ByCondition_ final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RestoreState;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_PlayAnimation__ByCondition_) == 0x000008, "Wrong alignment on W_PlayerStats_C_PlayAnimation__ByCondition_");
static_assert(sizeof(W_PlayerStats_C_PlayAnimation__ByCondition_) == 0x000020, "Wrong size on W_PlayerStats_C_PlayAnimation__ByCondition_");
static_assert(offsetof(W_PlayerStats_C_PlayAnimation__ByCondition_, Animation) == 0x000000, "Member 'W_PlayerStats_C_PlayAnimation__ByCondition_::Animation' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_PlayAnimation__ByCondition_, PlayMode) == 0x000008, "Member 'W_PlayerStats_C_PlayAnimation__ByCondition_::PlayMode' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_PlayAnimation__ByCondition_, RestoreState) == 0x000009, "Member 'W_PlayerStats_C_PlayAnimation__ByCondition_::RestoreState' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_PlayAnimation__ByCondition_, Result) == 0x00000A, "Member 'W_PlayerStats_C_PlayAnimation__ByCondition_::Result' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_PlayAnimation__ByCondition_, FunctionResult) == 0x00000B, "Member 'W_PlayerStats_C_PlayAnimation__ByCondition_::FunctionResult' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_PlayAnimation__ByCondition_, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'W_PlayerStats_C_PlayAnimation__ByCondition_::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_PlayAnimation__ByCondition_, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000018, "Member 'W_PlayerStats_C_PlayAnimation__ByCondition_::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_PlayAnimation__ByCondition_, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'W_PlayerStats_C_PlayAnimation__ByCondition_::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.SetAmmoVisibility
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerStats_C_SetAmmoVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_SetAmmoVisibility) == 0x000001, "Wrong alignment on W_PlayerStats_C_SetAmmoVisibility");
static_assert(sizeof(W_PlayerStats_C_SetAmmoVisibility) == 0x000001, "Wrong size on W_PlayerStats_C_SetAmmoVisibility");
static_assert(offsetof(W_PlayerStats_C_SetAmmoVisibility, Visible) == 0x000000, "Member 'W_PlayerStats_C_SetAmmoVisibility::Visible' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.SetStatsVisibility
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerStats_C_SetStatsVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_SetStatsVisibility) == 0x000001, "Wrong alignment on W_PlayerStats_C_SetStatsVisibility");
static_assert(sizeof(W_PlayerStats_C_SetStatsVisibility) == 0x000001, "Wrong size on W_PlayerStats_C_SetStatsVisibility");
static_assert(offsetof(W_PlayerStats_C_SetStatsVisibility, Visible) == 0x000000, "Member 'W_PlayerStats_C_SetStatsVisibility::Visible' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.ShowAllStats
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerStats_C_ShowAllStats final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_ShowAllStats) == 0x000001, "Wrong alignment on W_PlayerStats_C_ShowAllStats");
static_assert(sizeof(W_PlayerStats_C_ShowAllStats) == 0x000001, "Wrong size on W_PlayerStats_C_ShowAllStats");
static_assert(offsetof(W_PlayerStats_C_ShowAllStats, Enabled) == 0x000000, "Member 'W_PlayerStats_C_ShowAllStats::Enabled' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.ShowStats
// 0x0010 (0x0010 - 0x0000)
struct W_PlayerStats_C_ShowStats final
{
public:
	bool                                          CustomHideTime;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HideTime;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_ShowStats) == 0x000008, "Wrong alignment on W_PlayerStats_C_ShowStats");
static_assert(sizeof(W_PlayerStats_C_ShowStats) == 0x000010, "Wrong size on W_PlayerStats_C_ShowStats");
static_assert(offsetof(W_PlayerStats_C_ShowStats, CustomHideTime) == 0x000000, "Member 'W_PlayerStats_C_ShowStats::CustomHideTime' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ShowStats, HideTime) == 0x000008, "Member 'W_PlayerStats_C_ShowStats::HideTime' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.ShowVoiceCommandsHint
// 0x0060 (0x0060 - 0x0000)
struct W_PlayerStats_C_ShowVoiceCommandsHint final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0018(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0028(0x0028)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_ShowVoiceCommandsHint) == 0x000008, "Wrong alignment on W_PlayerStats_C_ShowVoiceCommandsHint");
static_assert(sizeof(W_PlayerStats_C_ShowVoiceCommandsHint) == 0x000060, "Wrong size on W_PlayerStats_C_ShowVoiceCommandsHint");
static_assert(offsetof(W_PlayerStats_C_ShowVoiceCommandsHint, Show) == 0x000000, "Member 'W_PlayerStats_C_ShowVoiceCommandsHint::Show' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ShowVoiceCommandsHint, Temp_bool_Variable) == 0x000001, "Member 'W_PlayerStats_C_ShowVoiceCommandsHint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ShowVoiceCommandsHint, Temp_byte_Variable) == 0x000002, "Member 'W_PlayerStats_C_ShowVoiceCommandsHint::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ShowVoiceCommandsHint, Temp_byte_Variable_1) == 0x000003, "Member 'W_PlayerStats_C_ShowVoiceCommandsHint::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ShowVoiceCommandsHint, CallFunc_GetInputSettings_ReturnValue) == 0x000008, "Member 'W_PlayerStats_C_ShowVoiceCommandsHint::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ShowVoiceCommandsHint, K2Node_Select_Default) == 0x000010, "Member 'W_PlayerStats_C_ShowVoiceCommandsHint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ShowVoiceCommandsHint, CallFunc_GetActionMappingByName_OutMappings) == 0x000018, "Member 'W_PlayerStats_C_ShowVoiceCommandsHint::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ShowVoiceCommandsHint, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_PlayerStats_C_ShowVoiceCommandsHint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ShowVoiceCommandsHint, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'W_PlayerStats_C_ShowVoiceCommandsHint::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ShowVoiceCommandsHint, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000058, "Member 'W_PlayerStats_C_ShowVoiceCommandsHint::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.StopAnimations
// 0x0030 (0x0030 - 0x0000)
struct W_PlayerStats_C_StopAnimations final
{
public:
	TArray<class UWidgetAnimation*>               Animations;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_StopAnimations) == 0x000008, "Wrong alignment on W_PlayerStats_C_StopAnimations");
static_assert(sizeof(W_PlayerStats_C_StopAnimations) == 0x000030, "Wrong size on W_PlayerStats_C_StopAnimations");
static_assert(offsetof(W_PlayerStats_C_StopAnimations, Animations) == 0x000000, "Member 'W_PlayerStats_C_StopAnimations::Animations' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_StopAnimations, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'W_PlayerStats_C_StopAnimations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_StopAnimations, Temp_int_Array_Index_Variable) == 0x000014, "Member 'W_PlayerStats_C_StopAnimations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_StopAnimations, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_PlayerStats_C_StopAnimations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_StopAnimations, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_PlayerStats_C_StopAnimations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_StopAnimations, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'W_PlayerStats_C_StopAnimations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_StopAnimations, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'W_PlayerStats_C_StopAnimations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_StopAnimations, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'W_PlayerStats_C_StopAnimations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.ToggleAmmoStat
// 0x0018 (0x0018 - 0x0000)
struct W_PlayerStats_C_ToggleAmmoStat final
{
public:
	double                                        AnimationDelay;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_ToggleAmmoStat) == 0x000008, "Wrong alignment on W_PlayerStats_C_ToggleAmmoStat");
static_assert(sizeof(W_PlayerStats_C_ToggleAmmoStat) == 0x000018, "Wrong size on W_PlayerStats_C_ToggleAmmoStat");
static_assert(offsetof(W_PlayerStats_C_ToggleAmmoStat, AnimationDelay) == 0x000000, "Member 'W_PlayerStats_C_ToggleAmmoStat::AnimationDelay' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ToggleAmmoStat, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'W_PlayerStats_C_ToggleAmmoStat::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ToggleAmmoStat, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000010, "Member 'W_PlayerStats_C_ToggleAmmoStat::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_ToggleAmmoStat, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000014, "Member 'W_PlayerStats_C_ToggleAmmoStat::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.UpdateAmmo
// 0x00D0 (0x00D0 - 0x0000)
struct W_PlayerStats_C_UpdateAmmo final
{
public:
	EBPE_Weapon_Type                              WeaponType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_FireMode                                 FireMode;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                AmmoClass;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentAmmo;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowAmmo;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxAmmo;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceUpdate;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                AmmoClas;                                          // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_FireMode                                 FunctionFireMode;                                  // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FunctionMaxAmmo;                                   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FunctionLowAmmo;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FunctionCurrentAmmo;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              FunctionWeaponType;                                // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0028(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0040(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0070(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0088(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_AmmoClass                                Temp_byte_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_FireMode                                 Temp_byte_Variable_1;                              // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00A8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ToggleAmmoStat_AnimationDelay_ImplicitCast; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_UpdateAmmo) == 0x000008, "Wrong alignment on W_PlayerStats_C_UpdateAmmo");
static_assert(sizeof(W_PlayerStats_C_UpdateAmmo) == 0x0000D0, "Wrong size on W_PlayerStats_C_UpdateAmmo");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, WeaponType) == 0x000000, "Member 'W_PlayerStats_C_UpdateAmmo::WeaponType' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, FireMode) == 0x000001, "Member 'W_PlayerStats_C_UpdateAmmo::FireMode' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, AmmoClass) == 0x000002, "Member 'W_PlayerStats_C_UpdateAmmo::AmmoClass' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, CurrentAmmo) == 0x000004, "Member 'W_PlayerStats_C_UpdateAmmo::CurrentAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, LowAmmo) == 0x000008, "Member 'W_PlayerStats_C_UpdateAmmo::LowAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, MaxAmmo) == 0x00000C, "Member 'W_PlayerStats_C_UpdateAmmo::MaxAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, ForceUpdate) == 0x000010, "Member 'W_PlayerStats_C_UpdateAmmo::ForceUpdate' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, AmmoClas) == 0x000011, "Member 'W_PlayerStats_C_UpdateAmmo::AmmoClas' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, FunctionFireMode) == 0x000012, "Member 'W_PlayerStats_C_UpdateAmmo::FunctionFireMode' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, FunctionMaxAmmo) == 0x000014, "Member 'W_PlayerStats_C_UpdateAmmo::FunctionMaxAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, FunctionLowAmmo) == 0x000018, "Member 'W_PlayerStats_C_UpdateAmmo::FunctionLowAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, FunctionCurrentAmmo) == 0x00001C, "Member 'W_PlayerStats_C_UpdateAmmo::FunctionCurrentAmmo' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, FunctionWeaponType) == 0x000020, "Member 'W_PlayerStats_C_UpdateAmmo::FunctionWeaponType' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, CallFunc_MakeLiteralText_ReturnValue) == 0x000028, "Member 'W_PlayerStats_C_UpdateAmmo::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000040, "Member 'W_PlayerStats_C_UpdateAmmo::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000058, "Member 'W_PlayerStats_C_UpdateAmmo::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, CallFunc_Conv_IntToText_ReturnValue) == 0x000070, "Member 'W_PlayerStats_C_UpdateAmmo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000088, "Member 'W_PlayerStats_C_UpdateAmmo::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, K2Node_SwitchEnum_CmpSuccess) == 0x0000A0, "Member 'W_PlayerStats_C_UpdateAmmo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, Temp_byte_Variable) == 0x0000A1, "Member 'W_PlayerStats_C_UpdateAmmo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, Temp_byte_Variable_1) == 0x0000A2, "Member 'W_PlayerStats_C_UpdateAmmo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, CallFunc_IsValid_ReturnValue) == 0x0000A3, "Member 'W_PlayerStats_C_UpdateAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, K2Node_Select_Default) == 0x0000A8, "Member 'W_PlayerStats_C_UpdateAmmo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'W_PlayerStats_C_UpdateAmmo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C1, "Member 'W_PlayerStats_C_UpdateAmmo::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, Temp_bool_Variable) == 0x0000C2, "Member 'W_PlayerStats_C_UpdateAmmo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, Temp_bool_Variable_1) == 0x0000C3, "Member 'W_PlayerStats_C_UpdateAmmo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, Temp_bool_Variable_2) == 0x0000C4, "Member 'W_PlayerStats_C_UpdateAmmo::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, K2Node_Select_Default_1) == 0x0000C5, "Member 'W_PlayerStats_C_UpdateAmmo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateAmmo, CallFunc_ToggleAmmoStat_AnimationDelay_ImplicitCast) == 0x0000C8, "Member 'W_PlayerStats_C_UpdateAmmo::CallFunc_ToggleAmmoStat_AnimationDelay_ImplicitCast' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.Updater
// 0x0010 (0x0010 - 0x0000)
struct W_PlayerStats_C_Updater final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_TimerExistsHandle_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_Updater) == 0x000008, "Wrong alignment on W_PlayerStats_C_Updater");
static_assert(sizeof(W_PlayerStats_C_Updater) == 0x000010, "Wrong size on W_PlayerStats_C_Updater");
static_assert(offsetof(W_PlayerStats_C_Updater, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'W_PlayerStats_C_Updater::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_Updater, CallFunc_K2_TimerExistsHandle_ReturnValue) == 0x000008, "Member 'W_PlayerStats_C_Updater::CallFunc_K2_TimerExistsHandle_ReturnValue' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.UpdateStamina
// 0x0028 (0x0028 - 0x0000)
struct W_PlayerStats_C_UpdateStamina final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStat_Value_1;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_UpdateStamina) == 0x000008, "Wrong alignment on W_PlayerStats_C_UpdateStamina");
static_assert(sizeof(W_PlayerStats_C_UpdateStamina) == 0x000028, "Wrong size on W_PlayerStats_C_UpdateStamina");
static_assert(offsetof(W_PlayerStats_C_UpdateStamina, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_PlayerStats_C_UpdateStamina::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStamina, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'W_PlayerStats_C_UpdateStamina::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStamina, CallFunc_GetStat_Value) == 0x000010, "Member 'W_PlayerStats_C_UpdateStamina::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStamina, CallFunc_GetStat_Value_1) == 0x000018, "Member 'W_PlayerStats_C_UpdateStamina::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStamina, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'W_PlayerStats_C_UpdateStamina::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.UpdateStats
// 0x0048 (0x0048 - 0x0000)
struct W_PlayerStats_C_UpdateStats final
{
public:
	class UBPC_PlayerStatsComponent_C*            PlayerStats;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCriticalValue_Result;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCriticalValue_CurrentValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCriticalValue_Result_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCriticalValue_CurrentValue_1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCriticalValue_Result_2;                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCriticalValue_CurrentValue_2;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_UpdateStats) == 0x000008, "Wrong alignment on W_PlayerStats_C_UpdateStats");
static_assert(sizeof(W_PlayerStats_C_UpdateStats) == 0x000048, "Wrong size on W_PlayerStats_C_UpdateStats");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, PlayerStats) == 0x000000, "Member 'W_PlayerStats_C_UpdateStats::PlayerStats' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000C, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_Not_PreBool_ReturnValue_3) == 0x00000D, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_IsValid_ReturnValue_2) == 0x00000E, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_Not_PreBool_ReturnValue_4) == 0x00000F, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_Not_PreBool_ReturnValue_5) == 0x000010, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_IsValid_ReturnValue_3) == 0x000011, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_GetCriticalValue_Result) == 0x000012, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_GetCriticalValue_Result' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_GetCriticalValue_CurrentValue) == 0x000018, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_GetCriticalValue_CurrentValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_GetCriticalValue_Result_1) == 0x000020, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_GetCriticalValue_Result_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_GetCriticalValue_CurrentValue_1) == 0x000028, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_GetCriticalValue_CurrentValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_BooleanAND_ReturnValue_1) == 0x000031, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_BooleanAND_ReturnValue_2) == 0x000032, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_BooleanAND_ReturnValue_3) == 0x000033, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_BooleanAND_ReturnValue_4) == 0x000034, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_BooleanAND_ReturnValue_5) == 0x000035, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_GetCriticalValue_Result_2) == 0x000036, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_GetCriticalValue_Result_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_GetCriticalValue_CurrentValue_2) == 0x000038, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_GetCriticalValue_CurrentValue_2' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_BooleanAND_ReturnValue_6) == 0x000040, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_BooleanAND_ReturnValue_7) == 0x000041, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateStats, CallFunc_BooleanAND_ReturnValue_8) == 0x000042, "Member 'W_PlayerStats_C_UpdateStats::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.UpdateUsingItem
// 0x0010 (0x0010 - 0x0000)
struct W_PlayerStats_C_UpdateUsingItem final
{
public:
	class UBPC_PlayerStatsComponent_C*            StatsComponent;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_UpdateUsingItem) == 0x000008, "Wrong alignment on W_PlayerStats_C_UpdateUsingItem");
static_assert(sizeof(W_PlayerStats_C_UpdateUsingItem) == 0x000010, "Wrong size on W_PlayerStats_C_UpdateUsingItem");
static_assert(offsetof(W_PlayerStats_C_UpdateUsingItem, StatsComponent) == 0x000000, "Member 'W_PlayerStats_C_UpdateUsingItem::StatsComponent' has a wrong offset!");
static_assert(offsetof(W_PlayerStats_C_UpdateUsingItem, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_PlayerStats_C_UpdateUsingItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_PlayerStats.W_PlayerStats_C.VisibilityAmmo
// 0x0001 (0x0001 - 0x0000)
struct W_PlayerStats_C_VisibilityAmmo final
{
public:
	bool                                          NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerStats_C_VisibilityAmmo) == 0x000001, "Wrong alignment on W_PlayerStats_C_VisibilityAmmo");
static_assert(sizeof(W_PlayerStats_C_VisibilityAmmo) == 0x000001, "Wrong size on W_PlayerStats_C_VisibilityAmmo");
static_assert(offsetof(W_PlayerStats_C_VisibilityAmmo, NewVisibility) == 0x000000, "Member 'W_PlayerStats_C_VisibilityAmmo::NewVisibility' has a wrong offset!");

}

