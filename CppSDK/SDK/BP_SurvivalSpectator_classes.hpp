#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SurvivalSpectator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SurvivalSpectator.BP_SurvivalSpectator_C
// 0x0020 (0x0360 - 0x0340)
class ABP_SurvivalSpectator_C final : public ASpectatorPawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class APawn*                                  Player;                                            // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        SpeedMod;                                          // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultSpeed;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeSpeed();
	void ExecuteUbergraph_BP_SurvivalSpectator(int32 EntryPoint);
	void InpActEvt_BackSpace_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_E_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Q_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SurvivalSpectator_C">();
	}
	static class ABP_SurvivalSpectator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SurvivalSpectator_C>();
	}
};
static_assert(alignof(ABP_SurvivalSpectator_C) == 0x000008, "Wrong alignment on ABP_SurvivalSpectator_C");
static_assert(sizeof(ABP_SurvivalSpectator_C) == 0x000360, "Wrong size on ABP_SurvivalSpectator_C");
static_assert(offsetof(ABP_SurvivalSpectator_C, UberGraphFrame) == 0x000340, "Member 'ABP_SurvivalSpectator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SurvivalSpectator_C, Player) == 0x000348, "Member 'ABP_SurvivalSpectator_C::Player' has a wrong offset!");
static_assert(offsetof(ABP_SurvivalSpectator_C, SpeedMod) == 0x000350, "Member 'ABP_SurvivalSpectator_C::SpeedMod' has a wrong offset!");
static_assert(offsetof(ABP_SurvivalSpectator_C, DefaultSpeed) == 0x000358, "Member 'ABP_SurvivalSpectator_C::DefaultSpeed' has a wrong offset!");

}

