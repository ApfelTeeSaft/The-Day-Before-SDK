#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DefaultPIckableEnv

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_ActorType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DefaultPIckableEnv.BP_DefaultPIckableEnv_C
// 0x0040 (0x02D0 - 0x0290)
class ABP_DefaultPIckableEnv_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemName;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemCount;                                         // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             PickupSound;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PickupParticles;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DestroyInteractable();
	void ExecuteUbergraph_BP_DefaultPIckableEnv(int32 EntryPoint);
	void GetActorType(E_ActorType* ActorType);
	void IsLocked_(bool* Result);
	void ItemPickuped();
	void OnBeginInteract(class APawn* Player);
	void OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime);
	void OnInteract(class APawn* Player);
	void OnInteract2(class APawn* Player);
	void OnInteract3(class APawn* Player);
	void OnInteractVehicle(class APawn* Player, int32 SitIndex, bool SkipAnimation);
	void OnLocalInteract(class APawn* Player);
	void OnLostFocus(class APawn* Player);
	void OnSeen(class APawn* Player);
	void OnSquadCheckComplete();
	void OnStopInteract(class APawn* Player);
	void OverlapEnd(bool* Success);
	void OverlapStart(bool* Success);
	void ReceiveDestroyed();
	void Run_Lockpicking();
	void Set3DWidgetVisibility(bool Visible);
	void SetTutorial3DWidgetVisibility(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DefaultPIckableEnv_C">();
	}
	static class ABP_DefaultPIckableEnv_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DefaultPIckableEnv_C>();
	}
};
static_assert(alignof(ABP_DefaultPIckableEnv_C) == 0x000008, "Wrong alignment on ABP_DefaultPIckableEnv_C");
static_assert(sizeof(ABP_DefaultPIckableEnv_C) == 0x0002D0, "Wrong size on ABP_DefaultPIckableEnv_C");
static_assert(offsetof(ABP_DefaultPIckableEnv_C, UberGraphFrame) == 0x000290, "Member 'ABP_DefaultPIckableEnv_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DefaultPIckableEnv_C, Box) == 0x000298, "Member 'ABP_DefaultPIckableEnv_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_DefaultPIckableEnv_C, Cube) == 0x0002A0, "Member 'ABP_DefaultPIckableEnv_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_DefaultPIckableEnv_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_DefaultPIckableEnv_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DefaultPIckableEnv_C, ItemName) == 0x0002B0, "Member 'ABP_DefaultPIckableEnv_C::ItemName' has a wrong offset!");
static_assert(offsetof(ABP_DefaultPIckableEnv_C, ItemCount) == 0x0002B8, "Member 'ABP_DefaultPIckableEnv_C::ItemCount' has a wrong offset!");
static_assert(offsetof(ABP_DefaultPIckableEnv_C, PickupSound) == 0x0002C0, "Member 'ABP_DefaultPIckableEnv_C::PickupSound' has a wrong offset!");
static_assert(offsetof(ABP_DefaultPIckableEnv_C, PickupParticles) == 0x0002C8, "Member 'ABP_DefaultPIckableEnv_C::PickupParticles' has a wrong offset!");

}

