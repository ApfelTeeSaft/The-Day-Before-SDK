#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Zombie

#include "Basic.hpp"

#include "FItemInfo_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_AttackingArm_structs.hpp"
#include "Survival_structs.hpp"
#include "Engine_structs.hpp"
#include "ELootTypes_structs.hpp"
#include "SlotRarity_structs.hpp"
#include "F_MovementSettings_structs.hpp"
#include "CountChance_structs.hpp"
#include "DefaultItemInfo_structs.hpp"
#include "GeneralChanceByType_structs.hpp"
#include "ItemIdGenerateChance_structs.hpp"
#include "VertexPaintDetectionPlugin_structs.hpp"
#include "F_WoundInfo_structs.hpp"
#include "F_ZombieSounds_structs.hpp"
#include "AngleMontage_structs.hpp"
#include "SpawnDecalStructure_structs.hpp"
#include "BPE_Weapon_Type_structs.hpp"
#include "DismembermentPart_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "Niagara_structs.hpp"
#include "DismembermentState_structs.hpp"
#include "DismembermentMeshCollection_structs.hpp"
#include "F_AgressiveMontage_structs.hpp"
#include "ZombiePartitionedMeshes_structs.hpp"
#include "E_ZombieAIState_structs.hpp"


namespace SDK::Params
{

// Function Zombie.Zombie_C.Activate Dismember Emitter
// 0x0170 (0x0170 - 0x0000)
struct Zombie_C_Activate_Dismember_Emitter final
{
public:
	EDismembermentPart                            DismembermentPart;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Activate_Dismember_Emitter) == 0x000010, "Wrong alignment on Zombie_C_Activate_Dismember_Emitter");
static_assert(sizeof(Zombie_C_Activate_Dismember_Emitter) == 0x000170, "Wrong size on Zombie_C_Activate_Dismember_Emitter");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, DismembermentPart) == 0x000000, "Member 'Zombie_C_Activate_Dismember_Emitter::DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, SocketName) == 0x000004, "Member 'Zombie_C_Activate_Dismember_Emitter::SocketName' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, BoneName) == 0x00000C, "Member 'Zombie_C_Activate_Dismember_Emitter::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'Zombie_C_Activate_Dismember_Emitter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'Zombie_C_Activate_Dismember_Emitter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000040, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'Zombie_C_Activate_Dismember_Emitter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'Zombie_C_Activate_Dismember_Emitter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000068, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000070, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, K2Node_CreateDelegate_OutputDelegate_4) == 0x000078, "Member 'Zombie_C_Activate_Dismember_Emitter::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x000088, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_Array_Add_ReturnValue_1) == 0x000090, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000094, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, K2Node_CreateDelegate_OutputDelegate_5) == 0x000098, "Member 'Zombie_C_Activate_Dismember_Emitter::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x0000A8, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'Zombie_C_Activate_Dismember_Emitter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_HasAuthority_ReturnValue) == 0x0000B1, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0000B8, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_GetSocketTransform_ReturnValue) == 0x0000C0, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_BreakTransform_Location) == 0x000120, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_BreakTransform_Rotation) == 0x000138, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_BreakTransform_Scale) == 0x000150, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Zombie_C_Activate_Dismember_Emitter, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000168, "Member 'Zombie_C_Activate_Dismember_Emitter::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.AddVertexBulletHole
// 0x0578 (0x0578 - 0x0000)
struct Zombie_C_AddVertexBulletHole final
{
public:
	struct FHitResult                             HitInfo;                                           // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVertexPaintAtLocationStruct           PaintAtLocationStruct;                             // 0x00E8(0x02B0)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FVertexPaintingLimitStruct             LimitPaintColor;                                   // 0x0398(0x0014)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVertexDetectRGBAStruct                ApplyVertexColorSettings;                          // 0x03B0(0x0100)(Edit, BlueprintVisible)
	struct FVertexDetectPaintAtLocationAreaSettings PaintAtAreaSettings;                               // 0x04B0(0x0014)(Edit, BlueprintVisible, NoDestructor)
	struct FVertexPaintMultiThreadSettingsStruct  MultiThreadSettings;                               // 0x04C4(0x0002)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_4C6[0x2];                                      // 0x04C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVertexDetectEventSettings             CallbackSettings;                                  // 0x04C8(0x0038)(Edit, BlueprintVisible)
	struct FVertexPaintOverridePaintUpToLOD       OverrideLOD;                                       // 0x0500(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FVertexDetectAndPaintFundementalsStruct HitFundamentals;                                   // 0x0508(0x0068)(Edit, BlueprintVisible)
	class UDecalComponent*                        SpawnedDecal;                                      // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_AddVertexBulletHole) == 0x000008, "Wrong alignment on Zombie_C_AddVertexBulletHole");
static_assert(sizeof(Zombie_C_AddVertexBulletHole) == 0x000578, "Wrong size on Zombie_C_AddVertexBulletHole");
static_assert(offsetof(Zombie_C_AddVertexBulletHole, HitInfo) == 0x000000, "Member 'Zombie_C_AddVertexBulletHole::HitInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_AddVertexBulletHole, PaintAtLocationStruct) == 0x0000E8, "Member 'Zombie_C_AddVertexBulletHole::PaintAtLocationStruct' has a wrong offset!");
static_assert(offsetof(Zombie_C_AddVertexBulletHole, LimitPaintColor) == 0x000398, "Member 'Zombie_C_AddVertexBulletHole::LimitPaintColor' has a wrong offset!");
static_assert(offsetof(Zombie_C_AddVertexBulletHole, ApplyVertexColorSettings) == 0x0003B0, "Member 'Zombie_C_AddVertexBulletHole::ApplyVertexColorSettings' has a wrong offset!");
static_assert(offsetof(Zombie_C_AddVertexBulletHole, PaintAtAreaSettings) == 0x0004B0, "Member 'Zombie_C_AddVertexBulletHole::PaintAtAreaSettings' has a wrong offset!");
static_assert(offsetof(Zombie_C_AddVertexBulletHole, MultiThreadSettings) == 0x0004C4, "Member 'Zombie_C_AddVertexBulletHole::MultiThreadSettings' has a wrong offset!");
static_assert(offsetof(Zombie_C_AddVertexBulletHole, CallbackSettings) == 0x0004C8, "Member 'Zombie_C_AddVertexBulletHole::CallbackSettings' has a wrong offset!");
static_assert(offsetof(Zombie_C_AddVertexBulletHole, OverrideLOD) == 0x000500, "Member 'Zombie_C_AddVertexBulletHole::OverrideLOD' has a wrong offset!");
static_assert(offsetof(Zombie_C_AddVertexBulletHole, HitFundamentals) == 0x000508, "Member 'Zombie_C_AddVertexBulletHole::HitFundamentals' has a wrong offset!");
static_assert(offsetof(Zombie_C_AddVertexBulletHole, SpawnedDecal) == 0x000570, "Member 'Zombie_C_AddVertexBulletHole::SpawnedDecal' has a wrong offset!");

// Function Zombie.Zombie_C.Adjust Server Movement Tickrate
// 0x0068 (0x0068 - 0x0000)
struct Zombie_C_Adjust_Server_Movement_Tickrate final
{
public:
	bool                                          High_tickrate;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewTickInterval;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Survival::EMovementType                       Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Survival::EMovementType                       CallFunc_GetCPPMovementType_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxSimulationTimeStep_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_1; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Adjust_Server_Movement_Tickrate) == 0x000008, "Wrong alignment on Zombie_C_Adjust_Server_Movement_Tickrate");
static_assert(sizeof(Zombie_C_Adjust_Server_Movement_Tickrate) == 0x000068, "Wrong size on Zombie_C_Adjust_Server_Movement_Tickrate");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, High_tickrate) == 0x000000, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::High_tickrate' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, NewTickInterval) == 0x000008, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::NewTickInterval' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, Temp_byte_Variable) == 0x000010, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_HasAuthority_ReturnValue) == 0x000011, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000012, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_GetCPPMovementType_ReturnValue) == 0x000028, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_GetCPPMovementType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, K2Node_Select_Default) == 0x000038, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast) == 0x000048, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, K2Node_VariableSet_MaxSimulationTimeStep_ImplicitCast) == 0x00004C, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::K2Node_VariableSet_MaxSimulationTimeStep_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_1) == 0x000058, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_SetComponentTickInterval_TickInterval_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_Adjust_Server_Movement_Tickrate, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'Zombie_C_Adjust_Server_Movement_Tickrate::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.AdjustNetUpdateFrequency
// 0x0020 (0x0020 - 0x0000)
struct Zombie_C_AdjustNetUpdateFrequency final
{
public:
	float                                         Net_Update_Frequency;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_NetUpdateFrequency_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_AdjustNetUpdateFrequency) == 0x000008, "Wrong alignment on Zombie_C_AdjustNetUpdateFrequency");
static_assert(sizeof(Zombie_C_AdjustNetUpdateFrequency) == 0x000020, "Wrong size on Zombie_C_AdjustNetUpdateFrequency");
static_assert(offsetof(Zombie_C_AdjustNetUpdateFrequency, Net_Update_Frequency) == 0x000000, "Member 'Zombie_C_AdjustNetUpdateFrequency::Net_Update_Frequency' has a wrong offset!");
static_assert(offsetof(Zombie_C_AdjustNetUpdateFrequency, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Zombie_C_AdjustNetUpdateFrequency::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AdjustNetUpdateFrequency, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'Zombie_C_AdjustNetUpdateFrequency::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_AdjustNetUpdateFrequency, K2Node_VariableSet_NetUpdateFrequency_ImplicitCast) == 0x000018, "Member 'Zombie_C_AdjustNetUpdateFrequency::K2Node_VariableSet_NetUpdateFrequency_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.AfterDeath
// 0x0020 (0x0020 - 0x0000)
struct Zombie_C_AfterDeath final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_AfterDeath) == 0x000008, "Wrong alignment on Zombie_C_AfterDeath");
static_assert(sizeof(Zombie_C_AfterDeath) == 0x000020, "Wrong size on Zombie_C_AfterDeath");
static_assert(offsetof(Zombie_C_AfterDeath, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Zombie_C_AfterDeath::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AfterDeath, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Zombie_C_AfterDeath::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_AfterDeath, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'Zombie_C_AfterDeath::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.AIInteract
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_AIInteract final
{
public:
	class ABP_Door_C*                             Door;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_AIInteract) == 0x000008, "Wrong alignment on Zombie_C_AIInteract");
static_assert(sizeof(Zombie_C_AIInteract) == 0x000010, "Wrong size on Zombie_C_AIInteract");
static_assert(offsetof(Zombie_C_AIInteract, Door) == 0x000000, "Member 'Zombie_C_AIInteract::Door' has a wrong offset!");
static_assert(offsetof(Zombie_C_AIInteract, Arrow) == 0x000008, "Member 'Zombie_C_AIInteract::Arrow' has a wrong offset!");

// Function Zombie.Zombie_C.AnimTypeConfiguration
// 0x0088 (0x0088 - 0x0000)
struct Zombie_C_AnimTypeConfiguration final
{
public:
	EZombieAnimType                               Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               Temp_byte_Variable_2;                              // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_3;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_4;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_5;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_6;                              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_7;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_8;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               Temp_byte_Variable_9;                              // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_10;                             // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_11;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_12;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_13;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_14;                             // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_15;                             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               Temp_byte_Variable_16;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_6;                              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_7;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_8;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_9;                              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_10;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_11;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue_1;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue_2;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue_3;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            K2Node_Select_Default_2;                           // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            K2Node_Select_Default_3;                           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue_4;          // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_4;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustNetUpdateFrequency_Net_Update_Frequency_ImplicitCast; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_AnimTypeConfiguration) == 0x000008, "Wrong alignment on Zombie_C_AnimTypeConfiguration");
static_assert(sizeof(Zombie_C_AnimTypeConfiguration) == 0x000088, "Wrong size on Zombie_C_AnimTypeConfiguration");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable) == 0x000000, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable) == 0x000008, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_1) == 0x000010, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_2) == 0x000018, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_3) == 0x000020, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_4) == 0x000028, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_5) == 0x000030, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_1) == 0x000038, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_bool_Variable) == 0x000039, "Member 'Zombie_C_AnimTypeConfiguration::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_bool_Variable_1) == 0x00003A, "Member 'Zombie_C_AnimTypeConfiguration::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_bool_Variable_2) == 0x00003B, "Member 'Zombie_C_AnimTypeConfiguration::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_bool_Variable_3) == 0x00003C, "Member 'Zombie_C_AnimTypeConfiguration::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_bool_Variable_4) == 0x00003D, "Member 'Zombie_C_AnimTypeConfiguration::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_bool_Variable_5) == 0x00003E, "Member 'Zombie_C_AnimTypeConfiguration::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_2) == 0x00003F, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_3) == 0x000040, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_4) == 0x000041, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_5) == 0x000042, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_6) == 0x000043, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_7) == 0x000044, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_8) == 0x000045, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_9) == 0x000046, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_10) == 0x000047, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_11) == 0x000048, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_12) == 0x000049, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_13) == 0x00004A, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_14) == 0x00004B, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_15) == 0x00004C, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_byte_Variable_16) == 0x00004D, "Member 'Zombie_C_AnimTypeConfiguration::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_6) == 0x000050, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_7) == 0x000054, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_8) == 0x000058, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_9) == 0x00005C, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_10) == 0x000060, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, Temp_real_Variable_11) == 0x000064, "Member 'Zombie_C_AnimTypeConfiguration::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, CallFunc_GetZombieAnimType_ReturnValue) == 0x000068, "Member 'Zombie_C_AnimTypeConfiguration::CallFunc_GetZombieAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, CallFunc_GetZombieAnimType_ReturnValue_1) == 0x000069, "Member 'Zombie_C_AnimTypeConfiguration::CallFunc_GetZombieAnimType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, K2Node_Select_Default) == 0x000070, "Member 'Zombie_C_AnimTypeConfiguration::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, K2Node_Select_Default_1) == 0x000078, "Member 'Zombie_C_AnimTypeConfiguration::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, CallFunc_GetZombieAnimType_ReturnValue_2) == 0x000079, "Member 'Zombie_C_AnimTypeConfiguration::CallFunc_GetZombieAnimType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, CallFunc_GetZombieAnimType_ReturnValue_3) == 0x00007A, "Member 'Zombie_C_AnimTypeConfiguration::CallFunc_GetZombieAnimType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, K2Node_Select_Default_2) == 0x00007B, "Member 'Zombie_C_AnimTypeConfiguration::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, K2Node_Select_Default_3) == 0x00007C, "Member 'Zombie_C_AnimTypeConfiguration::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, CallFunc_GetZombieAnimType_ReturnValue_4) == 0x00007D, "Member 'Zombie_C_AnimTypeConfiguration::CallFunc_GetZombieAnimType_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, K2Node_Select_Default_4) == 0x000080, "Member 'Zombie_C_AnimTypeConfiguration::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_AnimTypeConfiguration, CallFunc_AdjustNetUpdateFrequency_Net_Update_Frequency_ImplicitCast) == 0x000084, "Member 'Zombie_C_AnimTypeConfiguration::CallFunc_AdjustNetUpdateFrequency_Net_Update_Frequency_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.ApplyWoundsAfterDismemberment
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_ApplyWoundsAfterDismemberment final
{
public:
	class UPrimitiveComponent*                    MeshComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVertexDetectAndPaintFundementalsStruct> WoundsArray;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Zombie_C_ApplyWoundsAfterDismemberment) == 0x000008, "Wrong alignment on Zombie_C_ApplyWoundsAfterDismemberment");
static_assert(sizeof(Zombie_C_ApplyWoundsAfterDismemberment) == 0x000018, "Wrong size on Zombie_C_ApplyWoundsAfterDismemberment");
static_assert(offsetof(Zombie_C_ApplyWoundsAfterDismemberment, MeshComponent) == 0x000000, "Member 'Zombie_C_ApplyWoundsAfterDismemberment::MeshComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_ApplyWoundsAfterDismemberment, WoundsArray) == 0x000008, "Member 'Zombie_C_ApplyWoundsAfterDismemberment::WoundsArray' has a wrong offset!");

// Function Zombie.Zombie_C.ArmoredZombieParams
// 0x0030 (0x0030 - 0x0000)
struct Zombie_C_ArmoredZombieParams final
{
public:
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_ZombieFinal_Armored_C*             K2Node_DynamicCast_AsABP_Zombie_Final_Armored;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ArmoredZombieParams) == 0x000008, "Wrong alignment on Zombie_C_ArmoredZombieParams");
static_assert(sizeof(Zombie_C_ArmoredZombieParams) == 0x000030, "Wrong size on Zombie_C_ArmoredZombieParams");
static_assert(offsetof(Zombie_C_ArmoredZombieParams, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000000, "Member 'Zombie_C_ArmoredZombieParams::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ArmoredZombieParams, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'Zombie_C_ArmoredZombieParams::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ArmoredZombieParams, K2Node_DynamicCast_AsABP_Zombie_Final_Armored) == 0x000010, "Member 'Zombie_C_ArmoredZombieParams::K2Node_DynamicCast_AsABP_Zombie_Final_Armored' has a wrong offset!");
static_assert(offsetof(Zombie_C_ArmoredZombieParams, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Zombie_C_ArmoredZombieParams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_ArmoredZombieParams, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'Zombie_C_ArmoredZombieParams::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.AttachLootPoint
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_AttachLootPoint final
{
public:
	class AActor*                                 LootPoint;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_AttachLootPoint) == 0x000008, "Wrong alignment on Zombie_C_AttachLootPoint");
static_assert(sizeof(Zombie_C_AttachLootPoint) == 0x000010, "Wrong size on Zombie_C_AttachLootPoint");
static_assert(offsetof(Zombie_C_AttachLootPoint, LootPoint) == 0x000000, "Member 'Zombie_C_AttachLootPoint::LootPoint' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttachLootPoint, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Zombie_C_AttachLootPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttachLootPoint, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000009, "Member 'Zombie_C_AttachLootPoint::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.AttackInProgress
// 0x0350 (0x0350 - 0x0000)
struct Zombie_C_AttackInProgress final
{
public:
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_2;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	class ABP_Door_C*                             K2Node_DynamicCast_AsBP_Door;                      // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_3;              // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_4;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_4;              // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetValueAsObject_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor_1;                      // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCPPVelocityValue_ReturnValue;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0168(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceSingle_Radius_ImplicitCast;    // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_AttackInProgress) == 0x000008, "Wrong alignment on Zombie_C_AttackInProgress");
static_assert(sizeof(Zombie_C_AttackInProgress) == 0x000350, "Wrong size on Zombie_C_AttackInProgress");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_MakeLiteralName_ReturnValue) == 0x000000, "Member 'Zombie_C_AttackInProgress::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'Zombie_C_AttackInProgress::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000010, "Member 'Zombie_C_AttackInProgress::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetBlackboard_ReturnValue_1) == 0x000018, "Member 'Zombie_C_AttackInProgress::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000020, "Member 'Zombie_C_AttackInProgress::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetBlackboard_ReturnValue_2) == 0x000028, "Member 'Zombie_C_AttackInProgress::CallFunc_GetBlackboard_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetValueAsObject_ReturnValue) == 0x000030, "Member 'Zombie_C_AttackInProgress::CallFunc_GetValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, K2Node_DynamicCast_AsActor) == 0x000038, "Member 'Zombie_C_AttackInProgress::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Zombie_C_AttackInProgress::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, K2Node_MakeArray_Array) == 0x000048, "Member 'Zombie_C_AttackInProgress::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, K2Node_DynamicCast_AsBP_Door) == 0x000058, "Member 'Zombie_C_AttackInProgress::K2Node_DynamicCast_AsBP_Door' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'Zombie_C_AttackInProgress::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_MakeLiteralName_ReturnValue_3) == 0x000064, "Member 'Zombie_C_AttackInProgress::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetBlackboard_ReturnValue_3) == 0x000070, "Member 'Zombie_C_AttackInProgress::CallFunc_GetBlackboard_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_MakeLiteralName_ReturnValue_4) == 0x000078, "Member 'Zombie_C_AttackInProgress::CallFunc_MakeLiteralName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetValueAsBool_ReturnValue) == 0x000080, "Member 'Zombie_C_AttackInProgress::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetBlackboard_ReturnValue_4) == 0x000088, "Member 'Zombie_C_AttackInProgress::CallFunc_GetBlackboard_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetValueAsObject_ReturnValue_1) == 0x000090, "Member 'Zombie_C_AttackInProgress::CallFunc_GetValueAsObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, K2Node_DynamicCast_AsActor_1) == 0x000098, "Member 'Zombie_C_AttackInProgress::K2Node_DynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'Zombie_C_AttackInProgress::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetCPPVelocityValue_ReturnValue) == 0x0000A4, "Member 'Zombie_C_AttackInProgress::CallFunc_GetCPPVelocityValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'Zombie_C_AttackInProgress::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_MapRangeClamped_ReturnValue) == 0x0000C0, "Member 'Zombie_C_AttackInProgress::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000C8, "Member 'Zombie_C_AttackInProgress::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000D0, "Member 'Zombie_C_AttackInProgress::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000E8, "Member 'Zombie_C_AttackInProgress::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000100, "Member 'Zombie_C_AttackInProgress::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_GetSocketLocation_ReturnValue) == 0x000118, "Member 'Zombie_C_AttackInProgress::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000130, "Member 'Zombie_C_AttackInProgress::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_Add_VectorVector_ReturnValue) == 0x000148, "Member 'Zombie_C_AttackInProgress::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_Vector_Distance2D_ReturnValue) == 0x000160, "Member 'Zombie_C_AttackInProgress::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_SphereTraceSingle_OutHit) == 0x000168, "Member 'Zombie_C_AttackInProgress::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_SphereTraceSingle_ReturnValue) == 0x000250, "Member 'Zombie_C_AttackInProgress::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000251, "Member 'Zombie_C_AttackInProgress::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_bBlockingHit) == 0x000252, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_bInitialOverlap) == 0x000253, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_Time) == 0x000254, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_Distance) == 0x000258, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_Location) == 0x000260, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_ImpactPoint) == 0x000278, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_Normal) == 0x000290, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_ImpactNormal) == 0x0002A8, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_PhysMat) == 0x0002C0, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_HitActor) == 0x0002C8, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_HitComponent) == 0x0002D0, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_HitBoneName) == 0x0002D8, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_BoneName) == 0x0002E0, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_HitItem) == 0x0002E8, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_ElementIndex) == 0x0002EC, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_FaceIndex) == 0x0002F0, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_TraceStart) == 0x0002F8, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_BreakHitResult_TraceEnd) == 0x000310, "Member 'Zombie_C_AttackInProgress::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, K2Node_DynamicCast_AsSurvival_Player) == 0x000328, "Member 'Zombie_C_AttackInProgress::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, K2Node_DynamicCast_bSuccess_3) == 0x000330, "Member 'Zombie_C_AttackInProgress::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000338, "Member 'Zombie_C_AttackInProgress::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000340, "Member 'Zombie_C_AttackInProgress::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_AttackInProgress, CallFunc_SphereTraceSingle_Radius_ImplicitCast) == 0x000348, "Member 'Zombie_C_AttackInProgress::CallFunc_SphereTraceSingle_Radius_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.BeginPlaySetup
// 0x0028 (0x0028 - 0x0000)
struct Zombie_C_BeginPlaySetup final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombieManager_C*                       CallFunc_GetZombieManager_ZombieManager;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_BeginPlaySetup) == 0x000008, "Wrong alignment on Zombie_C_BeginPlaySetup");
static_assert(sizeof(Zombie_C_BeginPlaySetup) == 0x000028, "Wrong size on Zombie_C_BeginPlaySetup");
static_assert(offsetof(Zombie_C_BeginPlaySetup, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Zombie_C_BeginPlaySetup::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_BeginPlaySetup, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'Zombie_C_BeginPlaySetup::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_BeginPlaySetup, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x000010, "Member 'Zombie_C_BeginPlaySetup::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(Zombie_C_BeginPlaySetup, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Zombie_C_BeginPlaySetup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_BeginPlaySetup, CallFunc_GetZombieManager_ZombieManager) == 0x000020, "Member 'Zombie_C_BeginPlaySetup::CallFunc_GetZombieManager_ZombieManager' has a wrong offset!");

// Function Zombie.Zombie_C.BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Zombie.Zombie_C.BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Zombie.Zombie_C.BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Zombie_C_BndEvt__Zombie_CapsuleComponent_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function Zombie.Zombie_C.BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'Zombie_C_BndEvt__Zombie_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function Zombie.Zombie_C.CalculateDeathImpulse
// 0x0148 (0x0148 - 0x0000)
struct Zombie_C_CalculateDeathImpulse final
{
public:
	class AController*                            InstigatedBy;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	double                                        LastDamage;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiedByCar;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BodyImpulse;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_CalculateDeathImpulse) == 0x000008, "Wrong alignment on Zombie_C_CalculateDeathImpulse");
static_assert(sizeof(Zombie_C_CalculateDeathImpulse) == 0x000148, "Wrong size on Zombie_C_CalculateDeathImpulse");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, InstigatedBy) == 0x000000, "Member 'Zombie_C_CalculateDeathImpulse::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, LastDamage) == 0x000008, "Member 'Zombie_C_CalculateDeathImpulse::LastDamage' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, DiedByCar) == 0x000010, "Member 'Zombie_C_CalculateDeathImpulse::DiedByCar' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, BodyImpulse) == 0x000018, "Member 'Zombie_C_CalculateDeathImpulse::BodyImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, ReturnValue) == 0x000030, "Member 'Zombie_C_CalculateDeathImpulse::ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_K2_GetPawn_ReturnValue) == 0x000058, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000060, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_VSize_ReturnValue) == 0x000090, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_MapRangeClamped_ReturnValue) == 0x000098, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000C0, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_GetForwardVector_ReturnValue) == 0x0000D8, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_SelectFloat_ReturnValue) == 0x0000F0, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000100, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_BreakVector_X) == 0x000118, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_BreakVector_Y) == 0x000120, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_BreakVector_Z) == 0x000128, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Zombie_C_CalculateDeathImpulse, CallFunc_MakeVector_ReturnValue) == 0x000130, "Member 'Zombie_C_CalculateDeathImpulse::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.CarHitParticlesAndSound
// 0x0058 (0x0058 - 0x0000)
struct Zombie_C_CarHitParticlesAndSound final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_CarHitParticlesAndSound) == 0x000008, "Wrong alignment on Zombie_C_CarHitParticlesAndSound");
static_assert(sizeof(Zombie_C_CarHitParticlesAndSound) == 0x000058, "Wrong size on Zombie_C_CarHitParticlesAndSound");
static_assert(offsetof(Zombie_C_CarHitParticlesAndSound, HitLocation) == 0x000000, "Member 'Zombie_C_CarHitParticlesAndSound::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_CarHitParticlesAndSound, ImpactNormal) == 0x000018, "Member 'Zombie_C_CarHitParticlesAndSound::ImpactNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_CarHitParticlesAndSound, CallFunc_MakeRotFromZ_ReturnValue) == 0x000030, "Member 'Zombie_C_CarHitParticlesAndSound::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CarHitParticlesAndSound, CallFunc_PlayEventAttached_ReturnValue) == 0x000048, "Member 'Zombie_C_CarHitParticlesAndSound::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CarHitParticlesAndSound, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000050, "Member 'Zombie_C_CarHitParticlesAndSound::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.ChangeMeshByDismembermentPart
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_ChangeMeshByDismembermentPart final
{
public:
	EDismembermentPart                            DismembermentPart;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          DismembermentMesh;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ChangeMeshByDismembermentPart) == 0x000008, "Wrong alignment on Zombie_C_ChangeMeshByDismembermentPart");
static_assert(sizeof(Zombie_C_ChangeMeshByDismembermentPart) == 0x000018, "Wrong size on Zombie_C_ChangeMeshByDismembermentPart");
static_assert(offsetof(Zombie_C_ChangeMeshByDismembermentPart, DismembermentPart) == 0x000000, "Member 'Zombie_C_ChangeMeshByDismembermentPart::DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_ChangeMeshByDismembermentPart, DismembermentMesh) == 0x000008, "Member 'Zombie_C_ChangeMeshByDismembermentPart::DismembermentMesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_ChangeMeshByDismembermentPart, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'Zombie_C_ChangeMeshByDismembermentPart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Zombie.Zombie_C.CheckDIsmemberDistance
// 0x0048 (0x0048 - 0x0000)
struct Zombie_C_CheckDIsmemberDistance final
{
public:
	struct FVector                                ExplosionLocation;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanBeDismembered;                                  // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_CheckDIsmemberDistance) == 0x000008, "Wrong alignment on Zombie_C_CheckDIsmemberDistance");
static_assert(sizeof(Zombie_C_CheckDIsmemberDistance) == 0x000048, "Wrong size on Zombie_C_CheckDIsmemberDistance");
static_assert(offsetof(Zombie_C_CheckDIsmemberDistance, ExplosionLocation) == 0x000000, "Member 'Zombie_C_CheckDIsmemberDistance::ExplosionLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDIsmemberDistance, CanBeDismembered) == 0x000018, "Member 'Zombie_C_CheckDIsmemberDistance::CanBeDismembered' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDIsmemberDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Zombie_C_CheckDIsmemberDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDIsmemberDistance, CallFunc_Vector_Distance2D_ReturnValue) == 0x000038, "Member 'Zombie_C_CheckDIsmemberDistance::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDIsmemberDistance, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'Zombie_C_CheckDIsmemberDistance::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.CheckDrown
// 0x0090 (0x0090 - 0x0000)
struct Zombie_C_CheckDrown final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_CheckDrown) == 0x000008, "Wrong alignment on Zombie_C_CheckDrown");
static_assert(sizeof(Zombie_C_CheckDrown) == 0x000090, "Wrong size on Zombie_C_CheckDrown");
static_assert(offsetof(Zombie_C_CheckDrown, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Zombie_C_CheckDrown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'Zombie_C_CheckDrown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'Zombie_C_CheckDrown::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_BreakVector_X) == 0x000030, "Member 'Zombie_C_CheckDrown::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_BreakVector_Y) == 0x000038, "Member 'Zombie_C_CheckDrown::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_BreakVector_Z) == 0x000040, "Member 'Zombie_C_CheckDrown::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'Zombie_C_CheckDrown::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'Zombie_C_CheckDrown::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'Zombie_C_CheckDrown::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_BreakVector_X_1) == 0x000070, "Member 'Zombie_C_CheckDrown::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'Zombie_C_CheckDrown::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'Zombie_C_CheckDrown::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckDrown, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000088, "Member 'Zombie_C_CheckDrown::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.CheckForHalfHPStunAnimation
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_CheckForHalfHPStunAnimation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_CheckForHalfHPStunAnimation) == 0x000008, "Wrong alignment on Zombie_C_CheckForHalfHPStunAnimation");
static_assert(sizeof(Zombie_C_CheckForHalfHPStunAnimation) == 0x000018, "Wrong size on Zombie_C_CheckForHalfHPStunAnimation");
static_assert(offsetof(Zombie_C_CheckForHalfHPStunAnimation, ReturnValue) == 0x000000, "Member 'Zombie_C_CheckForHalfHPStunAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckForHalfHPStunAnimation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Zombie_C_CheckForHalfHPStunAnimation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckForHalfHPStunAnimation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'Zombie_C_CheckForHalfHPStunAnimation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckForHalfHPStunAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'Zombie_C_CheckForHalfHPStunAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckForHalfHPStunAnimation, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'Zombie_C_CheckForHalfHPStunAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.CheckIsUnderFloor
// 0x0238 (0x0238 - 0x0000)
struct Zombie_C_CheckIsUnderFloor final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0020(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0110(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_CheckIsUnderFloor) == 0x000008, "Wrong alignment on Zombie_C_CheckIsUnderFloor");
static_assert(sizeof(Zombie_C_CheckIsUnderFloor) == 0x000238, "Wrong size on Zombie_C_CheckIsUnderFloor");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000019, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000020, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000108, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000110, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0001F8, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000200, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_BreakVector_X) == 0x000218, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_BreakVector_Y) == 0x000220, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_BreakVector_Z) == 0x000228, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckIsUnderFloor, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000230, "Member 'Zombie_C_CheckIsUnderFloor::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.CheckLinkedQuests
// 0x0028 (0x0028 - 0x0000)
struct Zombie_C_CheckLinkedQuests final
{
public:
	class UQuest*                                 Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuest*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_CheckLinkedQuests) == 0x000008, "Wrong alignment on Zombie_C_CheckLinkedQuests");
static_assert(sizeof(Zombie_C_CheckLinkedQuests) == 0x000028, "Wrong size on Zombie_C_CheckLinkedQuests");
static_assert(offsetof(Zombie_C_CheckLinkedQuests, Quest) == 0x000000, "Member 'Zombie_C_CheckLinkedQuests::Quest' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckLinkedQuests, ReturnValue) == 0x000008, "Member 'Zombie_C_CheckLinkedQuests::ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckLinkedQuests, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'Zombie_C_CheckLinkedQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckLinkedQuests, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Zombie_C_CheckLinkedQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckLinkedQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Zombie_C_CheckLinkedQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckLinkedQuests, CallFunc_Array_Get_Item) == 0x000018, "Member 'Zombie_C_CheckLinkedQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckLinkedQuests, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Zombie_C_CheckLinkedQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckLinkedQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'Zombie_C_CheckLinkedQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckLinkedQuests, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000025, "Member 'Zombie_C_CheckLinkedQuests::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.CheckMeshStopped
// 0x0068 (0x0068 - 0x0000)
struct Zombie_C_CheckMeshStopped final
{
public:
	double                                        VelocityLimit;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MeshStopped;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HeadVel;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PelvisVel;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightLegVel;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftLegVel;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftArmVel;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightArmVel;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_CheckMeshStopped) == 0x000008, "Wrong alignment on Zombie_C_CheckMeshStopped");
static_assert(sizeof(Zombie_C_CheckMeshStopped) == 0x000068, "Wrong size on Zombie_C_CheckMeshStopped");
static_assert(offsetof(Zombie_C_CheckMeshStopped, VelocityLimit) == 0x000000, "Member 'Zombie_C_CheckMeshStopped::VelocityLimit' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckMeshStopped, MeshStopped) == 0x000008, "Member 'Zombie_C_CheckMeshStopped::MeshStopped' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckMeshStopped, HeadVel) == 0x000010, "Member 'Zombie_C_CheckMeshStopped::HeadVel' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckMeshStopped, PelvisVel) == 0x000018, "Member 'Zombie_C_CheckMeshStopped::PelvisVel' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckMeshStopped, RightLegVel) == 0x000020, "Member 'Zombie_C_CheckMeshStopped::RightLegVel' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckMeshStopped, LeftLegVel) == 0x000028, "Member 'Zombie_C_CheckMeshStopped::LeftLegVel' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckMeshStopped, LeftArmVel) == 0x000030, "Member 'Zombie_C_CheckMeshStopped::LeftArmVel' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckMeshStopped, RightArmVel) == 0x000038, "Member 'Zombie_C_CheckMeshStopped::RightArmVel' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckMeshStopped, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000040, "Member 'Zombie_C_CheckMeshStopped::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckMeshStopped, CallFunc_VSize_ReturnValue) == 0x000058, "Member 'Zombie_C_CheckMeshStopped::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CheckMeshStopped, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000060, "Member 'Zombie_C_CheckMeshStopped::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.ClownZombieParams
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_ClownZombieParams final
{
public:
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ClownZombieParams) == 0x000008, "Wrong alignment on Zombie_C_ClownZombieParams");
static_assert(sizeof(Zombie_C_ClownZombieParams) == 0x000018, "Wrong size on Zombie_C_ClownZombieParams");
static_assert(offsetof(Zombie_C_ClownZombieParams, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000000, "Member 'Zombie_C_ClownZombieParams::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ClownZombieParams, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'Zombie_C_ClownZombieParams::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.CorrectDismembermentPart
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_CorrectDismembermentPart final
{
public:
	EDismembermentPart                            DismemberPart;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDismembermentPart                            DismembermentPart;                                 // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDismembermentPart                            DisPart;                                           // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_CorrectDismembermentPart) == 0x000001, "Wrong alignment on Zombie_C_CorrectDismembermentPart");
static_assert(sizeof(Zombie_C_CorrectDismembermentPart) == 0x000008, "Wrong size on Zombie_C_CorrectDismembermentPart");
static_assert(offsetof(Zombie_C_CorrectDismembermentPart, DismemberPart) == 0x000000, "Member 'Zombie_C_CorrectDismembermentPart::DismemberPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_CorrectDismembermentPart, DismembermentPart) == 0x000001, "Member 'Zombie_C_CorrectDismembermentPart::DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_CorrectDismembermentPart, DisPart) == 0x000002, "Member 'Zombie_C_CorrectDismembermentPart::DisPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_CorrectDismembermentPart, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'Zombie_C_CorrectDismembermentPart::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CorrectDismembermentPart, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'Zombie_C_CorrectDismembermentPart::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CorrectDismembermentPart, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000005, "Member 'Zombie_C_CorrectDismembermentPart::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_CorrectDismembermentPart, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000006, "Member 'Zombie_C_CorrectDismembermentPart::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_CorrectDismembermentPart, K2Node_SwitchEnum_CmpSuccess) == 0x000007, "Member 'Zombie_C_CorrectDismembermentPart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Zombie.Zombie_C.CouldBeDismembered
// 0x0013 (0x0013 - 0x0000)
struct Zombie_C_CouldBeDismembered final
{
public:
	EDismembermentPart                            DismembermentPart;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Yes;                                               // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_CouldBeDismembered) == 0x000001, "Wrong alignment on Zombie_C_CouldBeDismembered");
static_assert(sizeof(Zombie_C_CouldBeDismembered) == 0x000013, "Wrong size on Zombie_C_CouldBeDismembered");
static_assert(offsetof(Zombie_C_CouldBeDismembered, DismembermentPart) == 0x000000, "Member 'Zombie_C_CouldBeDismembered::DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, Yes) == 0x000001, "Member 'Zombie_C_CouldBeDismembered::Yes' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'Zombie_C_CouldBeDismembered::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'Zombie_C_CouldBeDismembered::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'Zombie_C_CouldBeDismembered::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000005, "Member 'Zombie_C_CouldBeDismembered::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'Zombie_C_CouldBeDismembered::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000007, "Member 'Zombie_C_CouldBeDismembered::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Zombie_C_CouldBeDismembered::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000009, "Member 'Zombie_C_CouldBeDismembered::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_BooleanOR_ReturnValue_1) == 0x00000A, "Member 'Zombie_C_CouldBeDismembered::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00000B, "Member 'Zombie_C_CouldBeDismembered::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000C, "Member 'Zombie_C_CouldBeDismembered::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_BooleanOR_ReturnValue_2) == 0x00000D, "Member 'Zombie_C_CouldBeDismembered::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000E, "Member 'Zombie_C_CouldBeDismembered::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_BooleanOR_ReturnValue_3) == 0x00000F, "Member 'Zombie_C_CouldBeDismembered::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_Not_PreBool_ReturnValue_3) == 0x000010, "Member 'Zombie_C_CouldBeDismembered::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000011, "Member 'Zombie_C_CouldBeDismembered::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_CouldBeDismembered, CallFunc_Not_PreBool_ReturnValue_4) == 0x000012, "Member 'Zombie_C_CouldBeDismembered::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");

// Function Zombie.Zombie_C.DamageAnimReset
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_DamageAnimReset final
{
public:
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_DamageAnimReset) == 0x000008, "Wrong alignment on Zombie_C_DamageAnimReset");
static_assert(sizeof(Zombie_C_DamageAnimReset) == 0x000010, "Wrong size on Zombie_C_DamageAnimReset");
static_assert(offsetof(Zombie_C_DamageAnimReset, CallFunc_VSize_ReturnValue) == 0x000000, "Member 'Zombie_C_DamageAnimReset::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DamageAnimReset, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Zombie_C_DamageAnimReset::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DamageAnimReset, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'Zombie_C_DamageAnimReset::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.DayZombieParams
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_DayZombieParams final
{
public:
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_DayZombieParams) == 0x000008, "Wrong alignment on Zombie_C_DayZombieParams");
static_assert(sizeof(Zombie_C_DayZombieParams) == 0x000018, "Wrong size on Zombie_C_DayZombieParams");
static_assert(offsetof(Zombie_C_DayZombieParams, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000000, "Member 'Zombie_C_DayZombieParams::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DayZombieParams, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'Zombie_C_DayZombieParams::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.DealDamageToActor
// 0x02E0 (0x02E0 - 0x0000)
struct Zombie_C_DealDamageToActor final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Location;                                          // 0x00E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x0100(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HittedActor;                                       // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0230(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0240(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Vehicle_C>          K2Node_DynamicCast_AsI_Vehicle;                    // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAVS_VehicleMaster_C*                   K2Node_DynamicCast_AsAVS_Vehicle_Master;           // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVehicle_IsVehicle;                      // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAVS_VehicleMaster_C*                   K2Node_DynamicCast_AsAVS_Vehicle_Master_1;         // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyPointDamage_ReturnValue;             // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_DealDamageToActor) == 0x000008, "Wrong alignment on Zombie_C_DealDamageToActor");
static_assert(sizeof(Zombie_C_DealDamageToActor) == 0x0002E0, "Wrong size on Zombie_C_DealDamageToActor");
static_assert(offsetof(Zombie_C_DealDamageToActor, HitResult) == 0x000000, "Member 'Zombie_C_DealDamageToActor::HitResult' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, Location) == 0x0000E8, "Member 'Zombie_C_DealDamageToActor::Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, ImpactNormal) == 0x000100, "Member 'Zombie_C_DealDamageToActor::ImpactNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, HittedActor) == 0x000118, "Member 'Zombie_C_DealDamageToActor::HittedActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000120, "Member 'Zombie_C_DealDamageToActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_Not_PreBool_ReturnValue) == 0x000138, "Member 'Zombie_C_DealDamageToActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakVector2D_X) == 0x000140, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakVector2D_Y) == 0x000148, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_RandomFloatInRange_ReturnValue) == 0x000150, "Member 'Zombie_C_DealDamageToActor::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_bBlockingHit) == 0x000158, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_bInitialOverlap) == 0x000159, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_Time) == 0x00015C, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_Distance) == 0x000160, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_Location) == 0x000168, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_ImpactPoint) == 0x000180, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_Normal) == 0x000198, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B0, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_PhysMat) == 0x0001C8, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_HitActor) == 0x0001D0, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_HitComponent) == 0x0001D8, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_HitBoneName) == 0x0001E0, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_BoneName) == 0x0001E8, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_HitItem) == 0x0001F0, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_ElementIndex) == 0x0001F4, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_FaceIndex) == 0x0001F8, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_TraceStart) == 0x000200, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BreakHitResult_TraceEnd) == 0x000218, "Member 'Zombie_C_DealDamageToActor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, K2Node_CreateDelegate_OutputDelegate) == 0x000230, "Member 'Zombie_C_DealDamageToActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000240, "Member 'Zombie_C_DealDamageToActor::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, K2Node_DynamicCast_AsI_Vehicle) == 0x000248, "Member 'Zombie_C_DealDamageToActor::K2Node_DynamicCast_AsI_Vehicle' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'Zombie_C_DealDamageToActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, K2Node_DynamicCast_AsAVS_Vehicle_Master) == 0x000260, "Member 'Zombie_C_DealDamageToActor::K2Node_DynamicCast_AsAVS_Vehicle_Master' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, K2Node_DynamicCast_bSuccess_1) == 0x000268, "Member 'Zombie_C_DealDamageToActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_IsVehicle_IsVehicle) == 0x000269, "Member 'Zombie_C_DealDamageToActor::CallFunc_IsVehicle_IsVehicle' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_SelectFloat_ReturnValue) == 0x000270, "Member 'Zombie_C_DealDamageToActor::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, K2Node_DynamicCast_AsAVS_Vehicle_Master_1) == 0x000278, "Member 'Zombie_C_DealDamageToActor::K2Node_DynamicCast_AsAVS_Vehicle_Master_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, K2Node_DynamicCast_bSuccess_2) == 0x000280, "Member 'Zombie_C_DealDamageToActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000288, "Member 'Zombie_C_DealDamageToActor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_Vector_Distance_ReturnValue) == 0x0002A0, "Member 'Zombie_C_DealDamageToActor::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BooleanAND_ReturnValue) == 0x0002A8, "Member 'Zombie_C_DealDamageToActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0002A9, "Member 'Zombie_C_DealDamageToActor::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BooleanOR_ReturnValue) == 0x0002AA, "Member 'Zombie_C_DealDamageToActor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_BooleanAND_ReturnValue_1) == 0x0002AB, "Member 'Zombie_C_DealDamageToActor::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_GetController_ReturnValue) == 0x0002B0, "Member 'Zombie_C_DealDamageToActor::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0002B8, "Member 'Zombie_C_DealDamageToActor::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_ApplyPointDamage_ReturnValue) == 0x0002D0, "Member 'Zombie_C_DealDamageToActor::CallFunc_ApplyPointDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0002D4, "Member 'Zombie_C_DealDamageToActor::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_DealDamageToActor, CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast) == 0x0002D8, "Member 'Zombie_C_DealDamageToActor::CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.Decals Hit Checker
// 0x0288 (0x0288 - 0x0000)
struct Zombie_C_Decals_Hit_Checker final
{
public:
	struct FVector                                TraceEnd;                                          // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceStart;                                        // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentSocket;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        SpawnedDecal;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0060(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B[0x1];                                      // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_223[0x5];                                      // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24E[0x2];                                      // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalUnderLimb_SpawnedDecal;         // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFadeOut_StartDelay_ImplicitCast;       // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Decals_Hit_Checker) == 0x000008, "Wrong alignment on Zombie_C_Decals_Hit_Checker");
static_assert(sizeof(Zombie_C_Decals_Hit_Checker) == 0x000288, "Wrong size on Zombie_C_Decals_Hit_Checker");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, TraceEnd) == 0x000000, "Member 'Zombie_C_Decals_Hit_Checker::TraceEnd' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, TraceStart) == 0x000018, "Member 'Zombie_C_Decals_Hit_Checker::TraceStart' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CurrentSocket) == 0x000030, "Member 'Zombie_C_Decals_Hit_Checker::CurrentSocket' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, SpawnedDecal) == 0x000038, "Member 'Zombie_C_Decals_Hit_Checker::SpawnedDecal' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, Temp_object_Variable) == 0x000040, "Member 'Zombie_C_Decals_Hit_Checker::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, Temp_int_Array_Index_Variable) == 0x000050, "Member 'Zombie_C_Decals_Hit_Checker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'Zombie_C_Decals_Hit_Checker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_LineTraceSingle_OutHit) == 0x000060, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_LineTraceSingle_ReturnValue) == 0x000148, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_bBlockingHit) == 0x000149, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_bInitialOverlap) == 0x00014A, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_Time) == 0x00014C, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_Distance) == 0x000150, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_Location) == 0x000158, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_ImpactPoint) == 0x000170, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_Normal) == 0x000188, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_ImpactNormal) == 0x0001A0, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_BoneName) == 0x0001D8, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_HitItem) == 0x0001E0, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_ElementIndex) == 0x0001E4, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_FaceIndex) == 0x0001E8, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_TraceStart) == 0x0001F0, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_BreakHitResult_TraceEnd) == 0x000208, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000220, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_Array_RemoveItem_ReturnValue) == 0x000221, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_Array_IsEmpty_ReturnValue) == 0x000222, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000228, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_Array_Get_Item) == 0x000240, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_Array_Length_ReturnValue) == 0x000248, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_Less_IntInt_ReturnValue) == 0x00024C, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_IsValid_ReturnValue) == 0x00024D, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000250, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_SpawnDecalUnderLimb_SpawnedDecal) == 0x000258, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_SpawnDecalUnderLimb_SpawnedDecal' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_GetSocketLocation_ReturnValue) == 0x000260, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000278, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_Decals_Hit_Checker, CallFunc_SetFadeOut_StartDelay_ImplicitCast) == 0x000280, "Member 'Zombie_C_Decals_Hit_Checker::CallFunc_SetFadeOut_StartDelay_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.DecalsLimitter
// 0x0001 (0x0001 - 0x0000)
struct Zombie_C_DecalsLimitter final
{
public:
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_DecalsLimitter) == 0x000001, "Wrong alignment on Zombie_C_DecalsLimitter");
static_assert(sizeof(Zombie_C_DecalsLimitter) == 0x000001, "Wrong size on Zombie_C_DecalsLimitter");
static_assert(offsetof(Zombie_C_DecalsLimitter, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000000, "Member 'Zombie_C_DecalsLimitter::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.DefineAdditiveDamageMontage
// 0x0090 (0x0090 - 0x0000)
struct Zombie_C_DefineAdditiveDamageMontage final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MontageType;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__0__ImplicitCast;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__1__ImplicitCast;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_DefineAdditiveDamageMontage) == 0x000008, "Wrong alignment on Zombie_C_DefineAdditiveDamageMontage");
static_assert(sizeof(Zombie_C_DefineAdditiveDamageMontage) == 0x000090, "Wrong size on Zombie_C_DefineAdditiveDamageMontage");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, BoneName) == 0x000000, "Member 'Zombie_C_DefineAdditiveDamageMontage::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, HitLocation) == 0x000008, "Member 'Zombie_C_DefineAdditiveDamageMontage::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, MontageType) == 0x000020, "Member 'Zombie_C_DefineAdditiveDamageMontage::MontageType' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, CallFunc_GetSocketLocation_ReturnValue) == 0x000028, "Member 'Zombie_C_DefineAdditiveDamageMontage::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, CallFunc_Vector_Distance_ReturnValue) == 0x000040, "Member 'Zombie_C_DefineAdditiveDamageMontage::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, CallFunc_Array_Contains_ReturnValue) == 0x000048, "Member 'Zombie_C_DefineAdditiveDamageMontage::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, CallFunc_Array_Contains_ReturnValue_1) == 0x000049, "Member 'Zombie_C_DefineAdditiveDamageMontage::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, CallFunc_Array_Contains_ReturnValue_2) == 0x00004A, "Member 'Zombie_C_DefineAdditiveDamageMontage::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000050, "Member 'Zombie_C_DefineAdditiveDamageMontage::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, CallFunc_Vector_Distance_ReturnValue_1) == 0x000068, "Member 'Zombie_C_DefineAdditiveDamageMontage::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, K2Node_MakeArray_Array) == 0x000070, "Member 'Zombie_C_DefineAdditiveDamageMontage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000080, "Member 'Zombie_C_DefineAdditiveDamageMontage::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, CallFunc_MinOfFloatArray_MinValue) == 0x000084, "Member 'Zombie_C_DefineAdditiveDamageMontage::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, K2Node_MakeArray__0__ImplicitCast) == 0x000088, "Member 'Zombie_C_DefineAdditiveDamageMontage::K2Node_MakeArray__0__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAdditiveDamageMontage, K2Node_MakeArray__1__ImplicitCast) == 0x00008C, "Member 'Zombie_C_DefineAdditiveDamageMontage::K2Node_MakeArray__1__ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.DefineAngleForMontage
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_DefineAngleForMontage final
{
public:
	double                                        HitAngle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAngleMontage                                 AngleMontage;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_3;     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_4;     // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_5;     // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_6;     // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_7;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_DefineAngleForMontage) == 0x000008, "Wrong alignment on Zombie_C_DefineAngleForMontage");
static_assert(sizeof(Zombie_C_DefineAngleForMontage) == 0x000018, "Wrong size on Zombie_C_DefineAngleForMontage");
static_assert(offsetof(Zombie_C_DefineAngleForMontage, HitAngle) == 0x000000, "Member 'Zombie_C_DefineAngleForMontage::HitAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAngleForMontage, AngleMontage) == 0x000008, "Member 'Zombie_C_DefineAngleForMontage::AngleMontage' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAngleForMontage, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'Zombie_C_DefineAngleForMontage::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAngleForMontage, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x00000A, "Member 'Zombie_C_DefineAngleForMontage::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAngleForMontage, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x00000B, "Member 'Zombie_C_DefineAngleForMontage::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAngleForMontage, CallFunc_NearlyEqual_FloatFloat_ReturnValue_3) == 0x00000C, "Member 'Zombie_C_DefineAngleForMontage::CallFunc_NearlyEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAngleForMontage, CallFunc_NearlyEqual_FloatFloat_ReturnValue_4) == 0x00000D, "Member 'Zombie_C_DefineAngleForMontage::CallFunc_NearlyEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAngleForMontage, CallFunc_NearlyEqual_FloatFloat_ReturnValue_5) == 0x00000E, "Member 'Zombie_C_DefineAngleForMontage::CallFunc_NearlyEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAngleForMontage, CallFunc_NearlyEqual_FloatFloat_ReturnValue_6) == 0x00000F, "Member 'Zombie_C_DefineAngleForMontage::CallFunc_NearlyEqual_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineAngleForMontage, CallFunc_NearlyEqual_FloatFloat_ReturnValue_7) == 0x000010, "Member 'Zombie_C_DefineAngleForMontage::CallFunc_NearlyEqual_FloatFloat_ReturnValue_7' has a wrong offset!");

// Function Zombie.Zombie_C.DefineDismembermentbyBone
// 0x000C (0x000C - 0x0000)
struct Zombie_C_DefineDismembermentbyBone final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDismembermentPart                            DismembermentPart;                                 // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PartFounded;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDismembermentPart                            CallFunc_Map_Find_Value;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_DefineDismembermentbyBone) == 0x000004, "Wrong alignment on Zombie_C_DefineDismembermentbyBone");
static_assert(sizeof(Zombie_C_DefineDismembermentbyBone) == 0x00000C, "Wrong size on Zombie_C_DefineDismembermentbyBone");
static_assert(offsetof(Zombie_C_DefineDismembermentbyBone, BoneName) == 0x000000, "Member 'Zombie_C_DefineDismembermentbyBone::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismembermentbyBone, DismembermentPart) == 0x000008, "Member 'Zombie_C_DefineDismembermentbyBone::DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismembermentbyBone, PartFounded) == 0x000009, "Member 'Zombie_C_DefineDismembermentbyBone::PartFounded' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismembermentbyBone, CallFunc_Map_Find_Value) == 0x00000A, "Member 'Zombie_C_DefineDismembermentbyBone::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismembermentbyBone, CallFunc_Map_Find_ReturnValue) == 0x00000B, "Member 'Zombie_C_DefineDismembermentbyBone::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.DefineDismemberPartsForExplosion
// 0x0070 (0x0070 - 0x0000)
struct Zombie_C_DefineDismemberPartsForExplosion final
{
public:
	struct FVector                                ExplosionLocation;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           BonesToDismember;                                  // 0x0018(0x0010)(Parm, OutParm)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ReferenceParm)
	double                                        CallFunc_GetAngleToVector_Angle;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_Select_Default;                             // 0x0058(0x0010)(ReferenceParm)
	EAngleMontage                                 CallFunc_DefineAngleForMontage_AngleMontage;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_DefineDismemberPartsForExplosion) == 0x000008, "Wrong alignment on Zombie_C_DefineDismemberPartsForExplosion");
static_assert(sizeof(Zombie_C_DefineDismemberPartsForExplosion) == 0x000070, "Wrong size on Zombie_C_DefineDismemberPartsForExplosion");
static_assert(offsetof(Zombie_C_DefineDismemberPartsForExplosion, ExplosionLocation) == 0x000000, "Member 'Zombie_C_DefineDismemberPartsForExplosion::ExplosionLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismemberPartsForExplosion, BonesToDismember) == 0x000018, "Member 'Zombie_C_DefineDismemberPartsForExplosion::BonesToDismember' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismemberPartsForExplosion, CallFunc_RandomBool_ReturnValue) == 0x000028, "Member 'Zombie_C_DefineDismemberPartsForExplosion::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismemberPartsForExplosion, Temp_bool_Variable) == 0x000029, "Member 'Zombie_C_DefineDismemberPartsForExplosion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismemberPartsForExplosion, K2Node_MakeArray_Array) == 0x000030, "Member 'Zombie_C_DefineDismemberPartsForExplosion::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismemberPartsForExplosion, K2Node_MakeArray_Array_1) == 0x000040, "Member 'Zombie_C_DefineDismemberPartsForExplosion::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismemberPartsForExplosion, CallFunc_GetAngleToVector_Angle) == 0x000050, "Member 'Zombie_C_DefineDismemberPartsForExplosion::CallFunc_GetAngleToVector_Angle' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismemberPartsForExplosion, K2Node_Select_Default) == 0x000058, "Member 'Zombie_C_DefineDismemberPartsForExplosion::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismemberPartsForExplosion, CallFunc_DefineAngleForMontage_AngleMontage) == 0x000068, "Member 'Zombie_C_DefineDismemberPartsForExplosion::CallFunc_DefineAngleForMontage_AngleMontage' has a wrong offset!");
static_assert(offsetof(Zombie_C_DefineDismemberPartsForExplosion, K2Node_SwitchEnum_CmpSuccess) == 0x000069, "Member 'Zombie_C_DefineDismemberPartsForExplosion::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Zombie.Zombie_C.DetectAllLimbsHit
// 0x0030 (0x0030 - 0x0000)
struct Zombie_C_DetectAllLimbsHit final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_DetectAllLimbsHit) == 0x000008, "Wrong alignment on Zombie_C_DetectAllLimbsHit");
static_assert(sizeof(Zombie_C_DetectAllLimbsHit) == 0x000030, "Wrong size on Zombie_C_DetectAllLimbsHit");
static_assert(offsetof(Zombie_C_DetectAllLimbsHit, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Zombie_C_DetectAllLimbsHit::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_DetectAllLimbsHit, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'Zombie_C_DetectAllLimbsHit::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_DetectAllLimbsHit, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'Zombie_C_DetectAllLimbsHit::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_DetectAllLimbsHit, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000028, "Member 'Zombie_C_DetectAllLimbsHit::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function Zombie.Zombie_C.DisableDismemberedBonesCollision
// 0x00E0 (0x00E0 - 0x0000)
struct Zombie_C_DisableDismemberedBonesCollision final
{
public:
	EDismembermentState                           DismembermentState;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_DisableDismemberedBonesCollision) == 0x000008, "Wrong alignment on Zombie_C_DisableDismemberedBonesCollision");
static_assert(sizeof(Zombie_C_DisableDismemberedBonesCollision) == 0x0000E0, "Wrong size on Zombie_C_DisableDismemberedBonesCollision");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, DismembermentState) == 0x000000, "Member 'Zombie_C_DisableDismemberedBonesCollision::DismembermentState' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'Zombie_C_DisableDismemberedBonesCollision::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_bBlockingHit) == 0x000002, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_bInitialOverlap) == 0x000003, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_Time) == 0x000004, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_Distance) == 0x000008, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_Location) == 0x000010, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_ImpactPoint) == 0x000028, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_Normal) == 0x000040, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_ImpactNormal) == 0x000058, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_PhysMat) == 0x000070, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_HitActor) == 0x000078, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_HitComponent) == 0x000080, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_HitBoneName) == 0x000088, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_BoneName) == 0x000090, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_HitItem) == 0x000098, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_ElementIndex) == 0x00009C, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_FaceIndex) == 0x0000A0, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_TraceStart) == 0x0000A8, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_BreakHitResult_TraceEnd) == 0x0000C0, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Zombie_C_DisableDismemberedBonesCollision, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'Zombie_C_DisableDismemberedBonesCollision::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.ExecuteUbergraph_Zombie
// 0x2B80 (0x2B80 - 0x0000)
struct Zombie_C_ExecuteUbergraph_Zombie final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_ImpactNormal;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_9;                       // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_193[0x1];                                      // 0x0193(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0194(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x01AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x01B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x01CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x01E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x01FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x020C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDeactivatedAI_ReturnValue;             // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_216[0x2];                                      // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_8;                       // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            Temp_softobject_Variable;                          // 0x0240(0x0030)(HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_7;                       // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue_1;              // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_6;                       // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_2;               // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_5;                       // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_3;               // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_4;                       // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_4;               // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_6;                            // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_5;               // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_7;                            // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_6;               // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_8;                            // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_7;               // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_9;                            // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_8;               // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A[0x2];                                      // 0x036A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x036C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0388(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x039A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B[0x5];                                      // 0x039B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_10;                           // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_11;                           // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Survival::EMovementType                       Temp_byte_Variable;                                // 0x03B1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_GetUpperBodyDismembermentMesh_Mesh;       // 0x03B8(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_GetLowerBodyDismembermentMesh_Mesh;       // 0x03E8(0x0030)(HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x0418(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_12;                           // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x044B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_14;                      // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x045C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0465(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x0466(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_467[0x1];                                      // 0x0467(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_45;                  // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_472[0x2];                                      // 0x0472(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x0474(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x0484(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x048C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_46;                  // 0x049C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x04A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDismembermentPart                            CallFunc_CorrectDismembermentPart_DismembermentPart; // 0x04B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B6[0x2];                                      // 0x04B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_GetDismembermentMesh_DismembermentMesh;   // 0x04B8(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x3];                                      // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_5;                              // 0x04EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_20;                  // 0x04F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x04FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x050C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x051D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51E[0x2];                                      // 0x051E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_21;                  // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue;            // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A[0x2];                                      // 0x052A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x052C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_25;           // 0x053C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C[0x4];                                      // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0550(0x0008)(NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue;             // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDismembermentPart                            CallFunc_CorrectDismembermentPart_DismembermentPart_1; // 0x055A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55B[0x5];                                      // 0x055B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_GetDismembermentMesh_DismembermentMesh_1; // 0x0560(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_22;                  // 0x0594(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_26;           // 0x059C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_23;                  // 0x05AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_27;           // 0x05B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_47;                  // 0x05C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x05CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CD[0x3];                                      // 0x05CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_24;                  // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue_1;          // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA[0x2];                                      // 0x05DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_28;           // 0x05DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_29;           // 0x05EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0600(0x0008)(NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue_1;           // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60A[0x2];                                      // 0x060A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_30;           // 0x060C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EDismembermentPart                            CallFunc_CorrectDismembermentPart_DismembermentPart_2; // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_GetDismembermentMesh_DismembermentMesh_2; // 0x0620(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0658(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                Temp_object_Variable_13;                           // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_1;              // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_8;               // 0x069A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69B[0x5];                                      // 0x069B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_10;                      // 0x06A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9[0x3];                                      // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_48;                  // 0x06AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue_2;          // 0x06B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x06B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_9;               // 0x06B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B7[0x1];                                      // 0x06B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_31;           // 0x06B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x06C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue_2;           // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D2[0x6];                                      // 0x06D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_14;                           // 0x06D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_2;              // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x06E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EA[0x2];                                      // 0x06EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_32;           // 0x06EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EDismembermentPart                            CallFunc_CorrectDismembermentPart_DismembermentPart_3; // 0x06FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FD[0x3];                                      // 0x06FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_GetDismembermentMesh_DismembermentMesh_3; // 0x0700(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_731[0x7];                                      // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_11;                      // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue_3;          // 0x0742(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0743(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_33;           // 0x0744(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_754[0x4];                                      // 0x0754(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x0758(0x0008)(NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue_3;           // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x0761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue_4;           // 0x0762(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x0763(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_49;                  // 0x0764(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_10;              // 0x076C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_11;              // 0x076D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_12;              // 0x076E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76F[0x1];                                      // 0x076F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_34;           // 0x0770(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_13;              // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_14;              // 0x0781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_15;              // 0x0782(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_16;              // 0x0783(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_17;              // 0x0784(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_785[0x3];                                      // 0x0785(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_35;           // 0x07A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x07B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_GetHeadDismembermentMesh_Mesh;            // 0x07B8(0x0030)(HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_15;                           // 0x07E8(0x0010)(ConstParm, ReferenceParm)
	class UObject*                                Temp_object_Variable_16;                           // 0x07F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_3;              // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80A[0x6];                                      // 0x080A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0810(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_15;                      // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDismembermentMeshCollection           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0830(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_18;              // 0x08A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_19;              // 0x08A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_20;              // 0x08A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_21;              // 0x08A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_22;              // 0x08A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A6[0x2];                                      // 0x08A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_17;                           // 0x08A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_4;              // 0x08B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x08B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BA[0x6];                                      // 0x08BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_16;                      // 0x08C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_23;              // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_24;              // 0x08C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CA[0x6];                                      // 0x08CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_18;                           // 0x08D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_25;              // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9[0x7];                                      // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_5;              // 0x08E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x08E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8EA[0x6];                                      // 0x08EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_19;                           // 0x08F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_6;              // 0x08F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_17;                      // 0x0908(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_26;              // 0x0911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_27;              // 0x0912(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_28;              // 0x0913(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0914(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_29;              // 0x0915(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_916[0x2];                                      // 0x0916(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Door_C*                             K2Node_Event_Door;                                 // 0x0918(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        K2Node_Event_arrow;                                // 0x0920(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           K2Node_CustomEvent_InteractedActor;                // 0x0928(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_12;                      // 0x0930(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_HitAngle_1;                     // 0x0938(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAngleMontage                                 CallFunc_DefineAngleForMontage_AngleMontage;       // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_942[0x2];                                      // 0x0942(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation_6;                  // 0x0948(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_978[0x8];                                      // 0x0978(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0980(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_6;                              // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitInfo_3;                      // 0x09F0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0AD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0ADA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ADB[0x1];                                      // 0x0ADB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE4[0x4];                                      // 0x0AE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0AE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0B00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0B18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0B30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0B48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0B58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7C[0x4];                                      // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0B80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0B98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0BB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0BC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_Array_Random_OutItem;                     // 0x0BD0(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0C04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C09[0x7];                                      // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0C10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue_4;          // 0x0C28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C29[0x7];                                      // 0x0C29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0C30(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x0C90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C91[0x7];                                      // 0x0C91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue_1;        // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_25;                  // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0CA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0CC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CDC[0x4];                                      // 0x0CDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0D00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D18[0x8];                                      // 0x0D18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0D20(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_36;           // 0x0D80(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0D90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0D98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADroppingHelmet_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0DB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0DB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0DD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0DE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AttackingArm                                K2Node_CustomEvent_AttackingArm;                   // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_MovingAttack;                   // 0x0E01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DoorAttack;                     // 0x0E02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CarAttack;                      // 0x0E03(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E04[0x4];                                      // 0x0E04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0E08(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0E20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2C[0x4];                                      // 0x0E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType_1;                         // 0x0E30(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0E38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0E50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_HitComponent;                         // 0x0E68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ShotFromDirection;                    // 0x0E78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy_1;                       // 0x0E90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x0E98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x0EA0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0F88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F89[0x7];                                      // 0x0F89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHitAngle_HitAngle;                     // 0x0F90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation_5;                  // 0x0F98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DeathImpulse_1;                 // 0x0FB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName_4;                     // 0x0FC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DiedByGrenade_1;                // 0x0FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DiedByCar_1;                    // 0x0FD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_KilledInHead_1;                 // 0x0FD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DeadByTimer_1;                  // 0x0FD3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD4[0x4];                                      // 0x0FD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_HitLocation_4;                  // 0x0FD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName_3;                     // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AController*                      K2Node_CustomEvent_InstigatedBy_1;                 // 0x0FF8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DiedByGrenade;                  // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DiedByCar;                      // 0x1001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_KilledInHead;                   // 0x1002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1003[0x5];                                     // 0x1003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_LastDamage;                     // 0x1008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_DeathImpulse;                   // 0x1010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DeadByTimer;                    // 0x1028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1029[0x7];                                     // 0x1029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateDeathImpulse_ReturnValue;        // 0x1030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DamageReceived;                       // 0x1048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104C[0x4];                                     // 0x104C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x1050(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Origin;                               // 0x1058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x1070(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x1158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x1160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UFireDamageType_C*                K2Node_DynamicCast_AsFire_Damage_Type;             // 0x1168(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1171[0x3];                                     // 0x1171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_26;                  // 0x1174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_117C[0x4];                                     // 0x117C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x1180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x1188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x1189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118A[0x2];                                     // 0x118A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_BoneName_2;                     // 0x118C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1194[0x4];                                     // 0x1194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Damage_1;                       // 0x1198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              K2Node_CustomEvent_WeaponType_1;                   // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A1[0x7];                                     // 0x11A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_HitInfo_2;                      // 0x11A8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_CustomEvent_HitLocation_3;                  // 0x1290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_HitAngle;                       // 0x12A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_Dismemberment_Start;                // 0x12B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B1[0x3];                                     // 0x12B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_37;           // 0x12B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x12C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C5[0x3];                                     // 0x12C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x12C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x12D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x12D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x12D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12DA[0x6];                                     // 0x12DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBasicParticleData>             K2Node_Event_Data;                                 // 0x12E0(0x0010)(ConstParm, ReferenceParm)
	class UNiagaraSystem*                         K2Node_Event_NiagaraSystem;                        // 0x12F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_SimulationPositionOffset;             // 0x12F8(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_20;                           // 0x1310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName_1;                     // 0x1318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_7;              // 0x1320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x1328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x1329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x132A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x132B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x132C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x132D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132E[0x2];                                     // 0x132E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_27;                  // 0x1330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x1338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1339[0x7];                                     // 0x1339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x1340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_38;           // 0x1348(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x1358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_28;                  // 0x1370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x1378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x1390(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x1478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1479[0x3];                                     // 0x1479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_39;           // 0x147C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x148C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x148D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148E[0x2];                                     // 0x148E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x1490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x1494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x1498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x14B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x14C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x14E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x14F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x1500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x1508(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x1510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x1518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x1520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x1524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x1528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152C[0x4];                                     // 0x152C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x1530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x1548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalUnderLimb_SpawnedDecal;         // 0x1560(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x1568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x1570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1571[0x7];                                     // 0x1571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_AttackAngle_1;                  // 0x1578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OneShotSWATAnimation;           // 0x1580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_HitByKnife;                     // 0x1581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1582[0x2];                                     // 0x1582(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_29;                  // 0x1584(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAngleMontage                                 CallFunc_DefineAngleForMontage_AngleMontage_1;     // 0x158C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158D[0x3];                                     // 0x158D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x1590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x1598(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x15A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x15B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation_2;                  // 0x15B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitInfo_1;                      // 0x15D0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_40;           // 0x16B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MontageType;                    // 0x16C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x16CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16CD[0x3];                                     // 0x16CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_MeshType_1;                     // 0x16D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   K2Node_CustomEvent_Type_1;                         // 0x16D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               K2Node_CustomEvent_AnimType_1;                     // 0x16D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D6[0x2];                                     // 0x16D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ZombieManagerIndex_1;           // 0x16D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16DC[0x4];                                     // 0x16DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x16E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation_1;                     // 0x16F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TSet<class UQuest*>                           K2Node_CustomEvent_Quests;                         // 0x1710(0x0050)(ConstParm)
	const class ABP_Door_C*                       K2Node_CustomEvent_ConnectedDoor;                  // 0x1760(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ATargetPoint*>                   K2Node_CustomEvent_PatrollingPath;                 // 0x1768(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_bIsCityZombie;                  // 0x1778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1779[0x3];                                     // 0x1779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_MeshType;                       // 0x177C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   K2Node_CustomEvent_Type;                           // 0x1780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               K2Node_CustomEvent_AnimType;                       // 0x1781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1782[0x2];                                     // 0x1782(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ZombieManagerIndex;             // 0x1784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x1788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x17A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x17B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombieController_C*                    K2Node_DynamicCast_AsZombie_Controller;            // 0x17C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x17C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x17C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17CA[0x6];                                     // 0x17CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_18;                      // 0x17D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x17D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x17E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x17E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E2[0x6];                                     // 0x17E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_HitInfo;                        // 0x17E8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EDismembermentPart                            K2Node_CustomEvent_DismembermentPart;              // 0x18D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              K2Node_CustomEvent_WeaponType;                     // 0x18D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FullHeadDismemberment;          // 0x18D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DoubleDismemberment;            // 0x18D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D4[0x4];                                     // 0x18D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Damage;                         // 0x18D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_30;                  // 0x18E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_41;           // 0x18E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_31;                  // 0x18F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x1900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_Dismemberment_Start_1;              // 0x1908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1909[0x3];                                     // 0x1909(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_42;           // 0x190C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191C[0x4];                                     // 0x191C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x1920(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x1A08(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x1A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_ZombieSounds                        CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x1A20(0x0120)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x1B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x1B41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B42[0x2];                                     // 0x1B42(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_32;                  // 0x1B44(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4C[0x4];                                     // 0x1B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFMODEvent>              CallFunc_Array_Get_Item_1;                         // 0x1B50(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_30;              // 0x1B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B81[0x3];                                     // 0x1B81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_43;           // 0x1B84(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* SeenActor)>      K2Node_CreateDelegate_OutputDelegate_44;           // 0x1B94(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_33;                  // 0x1BA4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_45;           // 0x1BAC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BBC[0x4];                                     // 0x1BBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_AttackAngle;                    // 0x1BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IgnoreVelocity;                 // 0x1BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DamageInHead;                   // 0x1BC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PreDamageAnimationPhase_Continue;         // 0x1BCA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BCB[0x1];                                     // 0x1BCB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x1BCC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD4[0x4];                                     // 0x1BD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_HitLocation_1;                  // 0x1BD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DefineAdditiveDamageMontage_MontageType;  // 0x1BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_34;                  // 0x1BF4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_46;           // 0x1BFC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C0C[0x4];                                     // 0x1C0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x1C10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x1C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue_5;          // 0x1C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C21[0x7];                                     // 0x1C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_BodyImpulse;                    // 0x1C28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LimbImpulse_1;                  // 0x1C40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AController*                      K2Node_CustomEvent_InstigatedBy;                   // 0x1C58(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_31;              // 0x1C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C61[0x3];                                     // 0x1C61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_47;           // 0x1C64(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C74[0x4];                                     // 0x1C74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_LimbImpulse;                    // 0x1C78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x1C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_35;                  // 0x1C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_48;           // 0x1CA0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x1CB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x1CC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue;         // 0x1CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD1[0x3];                                     // 0x1CD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_36;                  // 0x1CD4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CDC[0x4];                                     // 0x1CDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4; // 0x1CE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_49;           // 0x1CE8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x1CF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF9[0x7];                                     // 0x1CF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x1D00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5; // 0x1D08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_50;           // 0x1D10(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x1D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D21[0x7];                                     // 0x1D21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Angle_1;                        // 0x1D28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_Agressive_Montage_Name_SectionName;   // 0x1D30(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_CustomEvent_AgressiveMontageToPlay;         // 0x1D40(0x0030)(ConstParm, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Angle;                          // 0x1D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_4;          // 0x1D78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x1D80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FF_AgressiveMontage                    CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x1D98(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x1DC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC9[0x3];                                     // 0x1DC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_51;           // 0x1DCC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDC[0x4];                                     // 0x1DDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6; // 0x1DE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            CallFunc_Map_Find_Value;                           // 0x1DE8(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x1E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x1E19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1A[0x6];                                     // 0x1E1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            CallFunc_Map_Find_Value_1;                         // 0x1E20(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x1E50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E51[0x3];                                     // 0x1E51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_37;                  // 0x1E54(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_52;           // 0x1E5C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6C[0x4];                                     // 0x1E6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_6;        // 0x1E70(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7; // 0x1E78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x1E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E81[0x3];                                     // 0x1E81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_53;           // 0x1E84(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E94[0x4];                                     // 0x1E94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_7;        // 0x1E98(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_54;           // 0x1EA0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bLocked)>                 K2Node_CreateDelegate_OutputDelegate_55;           // 0x1EB0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_38;                  // 0x1EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_56;           // 0x1EC8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_39;                  // 0x1ED8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_57;           // 0x1EE0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_58;           // 0x1EF0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_8; // 0x1F00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_59;           // 0x1F08(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x1F18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F19[0x3];                                     // 0x1F19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_60;           // 0x1F1C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue_5;           // 0x1F2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1F2D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x1F2E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2F[0x1];                                     // 0x1F2F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_9;                              // 0x1F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_40;                  // 0x1F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_61;           // 0x1F40(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_41;                  // 0x1F50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_42;                  // 0x1F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_62;           // 0x1F60(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_63;           // 0x1F70(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_64;           // 0x1F80(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_65;           // 0x1F90(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_66;           // 0x1FA0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x1FB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_67;           // 0x1FB4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_68;           // 0x1FC4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD4[0x4];                                     // 0x1FD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x1FD8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TMap<class FName, TSoftObjectPtr<class UAnimMontage>> K2Node_Select_Default_1;                           // 0x20C0(0x0050)()
	class FName                                   K2Node_CustomEvent_NotifyName_43;                  // 0x2110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            CallFunc_Map_Find_Value_2;                         // 0x2118(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x2148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2149[0x7];                                     // 0x2149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_2;                           // 0x2150(0x0030)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x2180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_69;           // 0x2184(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2194[0x4];                                     // 0x2194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_CustomEvent_MeshComponent;                  // 0x2198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_70;           // 0x21A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x21B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_5;          // 0x21C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FZombiePartitionedMeshes               CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x21C8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x21D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21D9[0x3];                                     // 0x21D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_71;           // 0x21DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_32;              // 0x21EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_33;              // 0x21ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21EE[0x2];                                     // 0x21EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_72;           // 0x21F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_34;              // 0x2200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2201[0x3];                                     // 0x2201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_44;                  // 0x2204(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_73;           // 0x220C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x221C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_74;           // 0x2220(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent_1;         // 0x2230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x2238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x2240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse_1;        // 0x2248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit_1;                  // 0x2260(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x2348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x2349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234A[0x2];                                     // 0x234A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x234C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x2350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2354[0x4];                                     // 0x2354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x2358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x2370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x2388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x23A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x23B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x23C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x23C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x23D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x23D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x23E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x23E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x23E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23EC[0x4];                                     // 0x23EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x23F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x2408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_75;           // 0x2420(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_21;                           // 0x2430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_9;               // 0x2438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x2440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue_6;          // 0x2441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2442[0x6];                                     // 0x2442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_9; // 0x2448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x2450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x2451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2452[0x6];                                     // 0x2452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_13;                      // 0x2458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_76;           // 0x2460(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x2470(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AZombieDeadBodyLootPoint_C*             K2Node_CustomEvent_LootPoint_1;                    // 0x2478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x2480(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x2568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2569[0x7];                                     // 0x2569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x2570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue_1;              // 0x2588(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_ApplyPointDamage_ReturnValue;             // 0x2670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x2674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2675[0x3];                                     // 0x2675(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x2678(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x2680(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x2688(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x2690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x26A8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x2790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x2791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2792[0x2];                                     // 0x2792(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x2794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x2798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279C[0x4];                                     // 0x279C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x27A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x27B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x27D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x27E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x2800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x2808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x2810(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x2818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_3;                // 0x2820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x2828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x282C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x2830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2834[0x4];                                     // 0x2834(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x2838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x2850(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_5;        // 0x2868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_6;        // 0x2869(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_286A[0x6];                                     // 0x286A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseProjectile_C*                   K2Node_DynamicCast_AsBP_Base_Projectile;           // 0x2870(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x2878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x2879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_287A[0x6];                                     // 0x287A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x2880(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x2888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x2890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2891[0x7];                                     // 0x2891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_Select_Default_3;                           // 0x2898(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x28A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A1[0x7];                                     // 0x28A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x28A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_77;           // 0x28B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_GetDismembermentMesh_DismembermentMesh_4; // 0x28C0(0x0030)(HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x28F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x2908(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDismembermentPart                            CallFunc_CorrectDismembermentPart_DismembermentPart_4; // 0x2920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2921[0x3];                                     // 0x2921(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x2924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x2928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x292C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x2930(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x2938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x2940(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x2948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x294C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294D[0x3];                                     // 0x294D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x2950(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_New_NV_Water_C*                     K2Node_DynamicCast_AsBP_New_NV_Water;              // 0x2A38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x2A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A41[0x7];                                     // 0x2A41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x2A48(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x2A50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x2A58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x2A60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A64[0x4];                                     // 0x2A64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_New_NV_Water_C*                     K2Node_DynamicCast_AsBP_New_NV_Water_1;            // 0x2A68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x2A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A71[0x3];                                     // 0x2A71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_78;           // 0x2A74(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_79;           // 0x2A84(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A94[0x4];                                     // 0x2A94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_8;        // 0x2A98(0x0008)(NoDestructor, HasGetValueTypeHash)
	Survival::EMovementType                       K2Node_CustomEvent_CPPMovementType;                // 0x2AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA1[0x7];                                     // 0x2AA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_SprintMaxSpeed;                 // 0x2AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_SprintAcceleration;             // 0x2AB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Survival::EMovementType                       CallFunc_GetCPPMovementType_ReturnValue;           // 0x2AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AB9[0x7];                                     // 0x2AB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_MovementSettings                    CallFunc_Map_Find_Value_3;                         // 0x2AC0(0x0080)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x2B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B41[0x7];                                     // 0x2B41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_LootPoint;                      // 0x2B48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x2B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x2B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_On_Point_Damage_Damage_ImplicitCast;      // 0x2B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ZombieDeath_RPC_LastDamage_ImplicitCast;  // 0x2B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x2B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFadeOut_StartDelay_ImplicitCast;       // 0x2B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x2B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x2B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ExecuteUbergraph_Zombie) == 0x000010, "Wrong alignment on Zombie_C_ExecuteUbergraph_Zombie");
static_assert(sizeof(Zombie_C_ExecuteUbergraph_Zombie) == 0x002B80, "Wrong size on Zombie_C_ExecuteUbergraph_Zombie");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, EntryPoint) == 0x000000, "Member 'Zombie_C_ExecuteUbergraph_Zombie::EntryPoint' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitLocation) == 0x000008, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_ImpactNormal) == 0x000020, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_17) == 0x000038, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_16) == 0x000040, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_15) == 0x000058, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_1) == 0x000060, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_name_Variable) == 0x000070, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_2) == 0x000078, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_14) == 0x000088, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_13) == 0x000090, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_3) == 0x000098, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_12) == 0x0000A8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000B0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_11) == 0x0000C0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000C8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_10) == 0x0000D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_name_Variable_1) == 0x0000F0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000F8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_9) == 0x000108, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_8) == 0x000110, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_8) == 0x000118, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_7) == 0x000128, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_9) == 0x000130, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_6) == 0x000140, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_10) == 0x000148, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_5) == 0x000158, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_11) == 0x000160, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_name_Variable_2) == 0x000170, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_9) == 0x000178, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable) == 0x000180, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000188, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue) == 0x000191, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_1) == 0x000192, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_12) == 0x000194, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_4) == 0x0001A4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_3) == 0x0001AC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_13) == 0x0001B4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_2) == 0x0001C4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_14) == 0x0001CC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_1) == 0x0001DC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_15) == 0x0001E4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName) == 0x0001F4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_16) == 0x0001FC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_name_Variable_3) == 0x00020C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_2) == 0x000214, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDeactivatedAI_ReturnValue) == 0x000215, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDeactivatedAI_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_8) == 0x000218, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_1) == 0x000220, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsAnim_Montage) == 0x000228, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_1) == 0x000230, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetPlayLength_ReturnValue) == 0x000234, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_bool_Variable) == 0x000238, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_softobject_Variable) == 0x000240, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_7) == 0x000270, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_2) == 0x000278, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000280, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_2) == 0x000288, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetPlayLength_ReturnValue_1) == 0x00028C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetPlayLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_6) == 0x000290, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_3) == 0x000298, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsAnim_Montage_2) == 0x0002A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsAnim_Montage_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_3) == 0x0002A8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_5) == 0x0002B0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_4) == 0x0002B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsAnim_Montage_3) == 0x0002C0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsAnim_Montage_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_4) == 0x0002C8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_4) == 0x0002D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_5) == 0x0002D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsAnim_Montage_4) == 0x0002E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsAnim_Montage_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_5) == 0x0002E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_3) == 0x0002F0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_6) == 0x0002F8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsAnim_Montage_5) == 0x000300, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsAnim_Montage_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_6) == 0x000308, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_2) == 0x000310, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_7) == 0x000318, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsAnim_Montage_6) == 0x000320, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsAnim_Montage_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_7) == 0x000328, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_1) == 0x000330, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_8) == 0x000338, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsAnim_Montage_7) == 0x000340, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsAnim_Montage_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_8) == 0x000348, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded) == 0x000350, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_9) == 0x000358, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsAnim_Montage_8) == 0x000360, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsAnim_Montage_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_9) == 0x000368, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_bool_Variable_1) == 0x000369, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_17) == 0x00036C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_real_Variable) == 0x000380, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000388, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_real_Variable_1) == 0x000390, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_3) == 0x000398, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_bool_Variable_2) == 0x000399, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_4) == 0x00039A, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_10) == 0x0003A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_11) == 0x0003A8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_bool_Variable_3) == 0x0003B0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_byte_Variable) == 0x0003B1, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetUpperBodyDismembermentMesh_Mesh) == 0x0003B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetUpperBodyDismembermentMesh_Mesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetLowerBodyDismembermentMesh_Mesh) == 0x0003E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetLowerBodyDismembermentMesh_Mesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_18) == 0x000418, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_18) == 0x000428, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_12) == 0x000430, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_bool_IsClosed_Variable) == 0x000438, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsNiagara_System) == 0x000440, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_10) == 0x000448, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue) == 0x000449, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_bool_Has_Been_Initd_Variable) == 0x00044A, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_1) == 0x00044B, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_14) == 0x000450, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_14' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_2) == 0x000458, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_name_Variable_4) == 0x00045C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_3) == 0x000464, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_4) == 0x000465, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_5) == 0x000466, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_45) == 0x000468, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_45' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_bool_IsClosed_Variable_1) == 0x000470, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_bool_Has_Been_Initd_Variable_1) == 0x000471, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_19) == 0x000474, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_19) == 0x000484, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_20) == 0x00048C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_46) == 0x00049C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_46' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_21) == 0x0004A4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_6) == 0x0004B4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CorrectDismembermentPart_DismembermentPart) == 0x0004B5, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CorrectDismembermentPart_DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDismembermentMesh_DismembermentMesh) == 0x0004B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDismembermentMesh_DismembermentMesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_SwitchEnum_CmpSuccess) == 0x0004E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_name_Variable_5) == 0x0004EC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_20) == 0x0004F4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_20' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_22) == 0x0004FC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_23) == 0x00050C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_7) == 0x00051C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00051D, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_21) == 0x000520, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_21' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetZombieAnimType_ReturnValue) == 0x000528, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetZombieAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000529, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_24) == 0x00052C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_25) == 0x00053C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000550, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetCPPZombieType_ReturnValue) == 0x000558, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetCPPZombieType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000559, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CorrectDismembermentPart_DismembermentPart_1) == 0x00055A, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CorrectDismembermentPart_DismembermentPart_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDismembermentMesh_DismembermentMesh_1) == 0x000560, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDismembermentMesh_DismembermentMesh_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_SwitchEnum_CmpSuccess_1) == 0x000590, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_22) == 0x000594, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_22' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_26) == 0x00059C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_23) == 0x0005AC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_23' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_27) == 0x0005B4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_47) == 0x0005C4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_47' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0005CC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_24) == 0x0005D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_24' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetZombieAnimType_ReturnValue_1) == 0x0005D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetZombieAnimType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0005D9, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_28) == 0x0005DC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_29) == 0x0005EC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000600, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetCPPZombieType_ReturnValue_1) == 0x000608, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetCPPZombieType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000609, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_30) == 0x00060C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CorrectDismembermentPart_DismembermentPart_2) == 0x00061C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CorrectDismembermentPart_DismembermentPart_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDismembermentMesh_DismembermentMesh_2) == 0x000620, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDismembermentMesh_DismembermentMesh_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_SwitchEnum_CmpSuccess_2) == 0x000650, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Normal_ReturnValue) == 0x000658, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000670, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_13) == 0x000688, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsSkeletal_Mesh_1) == 0x000690, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsSkeletal_Mesh_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_11) == 0x000698, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_5) == 0x000699, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_8) == 0x00069A, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_10) == 0x0006A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0006A8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_48) == 0x0006AC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_48' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetZombieAnimType_ReturnValue_2) == 0x0006B4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetZombieAnimType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0006B5, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_9) == 0x0006B6, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_31) == 0x0006B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x0006C8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetCPPZombieType_ReturnValue_2) == 0x0006D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetCPPZombieType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0006D1, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_14) == 0x0006D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsSkeletal_Mesh_2) == 0x0006E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsSkeletal_Mesh_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_12) == 0x0006E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_6) == 0x0006E9, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_32) == 0x0006EC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CorrectDismembermentPart_DismembermentPart_3) == 0x0006FC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CorrectDismembermentPart_DismembermentPart_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDismembermentMesh_DismembermentMesh_3) == 0x000700, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDismembermentMesh_DismembermentMesh_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_SwitchEnum_CmpSuccess_3) == 0x000730, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_11) == 0x000738, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_7) == 0x000740, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000741, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetZombieAnimType_ReturnValue_3) == 0x000742, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetZombieAnimType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000743, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_33) == 0x000744, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x000758, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetCPPZombieType_ReturnValue_3) == 0x000760, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetCPPZombieType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x000761, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetCPPZombieType_ReturnValue_4) == 0x000762, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetCPPZombieType_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x000763, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_49) == 0x000764, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_49' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_10) == 0x00076C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_11) == 0x00076D, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_12) == 0x00076E, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_34) == 0x000770, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_13) == 0x000780, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_14) == 0x000781, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_15) == 0x000782, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_16) == 0x000783, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_17) == 0x000784, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000788, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_35) == 0x0007A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_35' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x0007B0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetHeadDismembermentMesh_Mesh) == 0x0007B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetHeadDismembermentMesh_Mesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_15) == 0x0007E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_16) == 0x0007F8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsSkeletal_Mesh_3) == 0x000800, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsSkeletal_Mesh_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_13) == 0x000808, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_8) == 0x000809, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_IntToString_ReturnValue) == 0x000810, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_15) == 0x000820, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_15' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_StringToName_ReturnValue) == 0x000828, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDataTableRowFromName_OutRow) == 0x000830, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0008A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_18) == 0x0008A1, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_19) == 0x0008A2, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_20) == 0x0008A3, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_21) == 0x0008A4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_22) == 0x0008A5, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_17) == 0x0008A8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsSkeletal_Mesh_4) == 0x0008B0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsSkeletal_Mesh_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_14) == 0x0008B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_9) == 0x0008B9, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_16) == 0x0008C0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_16' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_23) == 0x0008C8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_24) == 0x0008C9, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_18) == 0x0008D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_25) == 0x0008D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsSkeletal_Mesh_5) == 0x0008E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsSkeletal_Mesh_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_15) == 0x0008E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_10) == 0x0008E9, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_19) == 0x0008F0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsSkeletal_Mesh_6) == 0x0008F8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsSkeletal_Mesh_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_16) == 0x000900, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_17) == 0x000908, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_17' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_11) == 0x000910, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_26) == 0x000911, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_27) == 0x000912, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_28) == 0x000913, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_12) == 0x000914, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_29) == 0x000915, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_Door) == 0x000918, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_Door' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_arrow) == 0x000920, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_arrow' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_InteractedActor) == 0x000928, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_InteractedActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_12) == 0x000930, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_12' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitAngle_1) == 0x000938, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitAngle_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_DefineAngleForMontage_AngleMontage) == 0x000940, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_DefineAngleForMontage_AngleMontage' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_SwitchEnum_CmpSuccess_4) == 0x000941, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Subtract_IntInt_ReturnValue) == 0x000944, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitLocation_6) == 0x000948, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitLocation_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetSocketLocation_ReturnValue) == 0x000960, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_MakeTransform_ReturnValue) == 0x000980, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_PlayEventAtLocation_ReturnValue) == 0x0009E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_name_Variable_6) == 0x0009E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitInfo_3) == 0x0009F0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitInfo_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000AD8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_bBlockingHit) == 0x000AD9, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_bInitialOverlap) == 0x000ADA, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Time) == 0x000ADC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Distance) == 0x000AE0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Location) == 0x000AE8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ImpactPoint) == 0x000B00, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Normal) == 0x000B18, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ImpactNormal) == 0x000B30, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_PhysMat) == 0x000B48, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitActor) == 0x000B50, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitComponent) == 0x000B58, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitBoneName) == 0x000B60, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_BoneName) == 0x000B68, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitItem) == 0x000B70, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ElementIndex) == 0x000B74, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_FaceIndex) == 0x000B78, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_TraceStart) == 0x000B80, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_TraceEnd) == 0x000B98, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000BB0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000BC8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Array_Random_OutItem) == 0x000BD0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Array_Random_OutIndex) == 0x000C00, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000C04, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_13) == 0x000C08, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000C10, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetZombieAnimType_ReturnValue_4) == 0x000C28, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetZombieAnimType_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_MakeTransform_ReturnValue_1) == 0x000C30, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x000C90, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_PlayEventAtLocation_ReturnValue_1) == 0x000C98, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_PlayEventAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_25) == 0x000CA0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_25' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000CA8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000CC0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000CD8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakVector_X) == 0x000CE0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakVector_Y) == 0x000CE8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakVector_Z) == 0x000CF0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000CF8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_MakeVector_ReturnValue) == 0x000D00, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_MakeTransform_ReturnValue_2) == 0x000D20, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_36) == 0x000D80, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_36' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000D90, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetActorForwardVector_ReturnValue) == 0x000D98, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_FinishSpawningActor_ReturnValue) == 0x000DB0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_FindLookAtRotation_ReturnValue) == 0x000DB8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetForwardVector_ReturnValue) == 0x000DD0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000DE8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_AttackingArm) == 0x000E00, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_AttackingArm' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_MovingAttack) == 0x000E01, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_MovingAttack' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DoorAttack) == 0x000E02, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DoorAttack' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_CarAttack) == 0x000E03, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_CarAttack' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000E08, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000E18, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000E20, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_Damage) == 0x000E28, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_DamageType_1) == 0x000E30, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_DamageType_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_HitLocation) == 0x000E38, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_HitNormal) == 0x000E50, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_HitComponent) == 0x000E68, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_BoneName) == 0x000E70, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_ShotFromDirection) == 0x000E78, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_ShotFromDirection' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_InstigatedBy_1) == 0x000E90, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_DamageCauser_1) == 0x000E98, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_HitInfo_1) == 0x000EA0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_14) == 0x000F88, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetHitAngle_HitAngle) == 0x000F90, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetHitAngle_HitAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitLocation_5) == 0x000F98, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitLocation_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DeathImpulse_1) == 0x000FB0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DeathImpulse_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_BoneName_4) == 0x000FC8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_BoneName_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DiedByGrenade_1) == 0x000FD0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DiedByGrenade_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DiedByCar_1) == 0x000FD1, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DiedByCar_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_KilledInHead_1) == 0x000FD2, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_KilledInHead_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DeadByTimer_1) == 0x000FD3, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DeadByTimer_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitLocation_4) == 0x000FD8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitLocation_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_BoneName_3) == 0x000FF0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_BoneName_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_InstigatedBy_1) == 0x000FF8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DiedByGrenade) == 0x001000, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DiedByGrenade' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DiedByCar) == 0x001001, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DiedByCar' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_KilledInHead) == 0x001002, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_KilledInHead' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_LastDamage) == 0x001008, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_LastDamage' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DeathImpulse) == 0x001010, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DeathImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DeadByTimer) == 0x001028, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DeadByTimer' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CalculateDeathImpulse_ReturnValue) == 0x001030, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CalculateDeathImpulse_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_DamageReceived) == 0x001048, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_DamageReceived' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_DamageType) == 0x001050, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_Origin) == 0x001058, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_Origin' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_HitInfo) == 0x001070, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_InstigatedBy) == 0x001158, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_DamageCauser) == 0x001160, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsFire_Damage_Type) == 0x001168, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsFire_Damage_Type' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_17) == 0x001170, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_26) == 0x001174, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_26' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x001180, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_15) == 0x001188, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Not_PreBool_ReturnValue) == 0x001189, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_BoneName_2) == 0x00118C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_BoneName_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Damage_1) == 0x001198, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Damage_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_WeaponType_1) == 0x0011A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_WeaponType_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitInfo_2) == 0x0011A8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitInfo_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitLocation_3) == 0x001290, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitLocation_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitAngle) == 0x0012A8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Start_Dismemberment_Start) == 0x0012B0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Start_Dismemberment_Start' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_37) == 0x0012B4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_37' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x0012C4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x0012C8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x0012D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_16) == 0x0012D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_17) == 0x0012D9, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_Data) == 0x0012E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_Data' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_NiagaraSystem) == 0x0012F0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_NiagaraSystem' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_SimulationPositionOffset) == 0x0012F8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_SimulationPositionOffset' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_20) == 0x001310, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_BoneName_1) == 0x001318, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_BoneName_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsSkeletal_Mesh_7) == 0x001320, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsSkeletal_Mesh_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_18) == 0x001328, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x001329, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_18) == 0x00132A, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00132B, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x00132C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BooleanOR_ReturnValue) == 0x00132D, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_27) == 0x001330, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_27' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BooleanOR_ReturnValue_1) == 0x001338, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_SelectFloat_ReturnValue) == 0x001340, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_38) == 0x001348, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_38' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetSocketLocation_ReturnValue_2) == 0x001358, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_28) == 0x001370, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_28' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Subtract_VectorVector_ReturnValue) == 0x001378, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_LineTraceSingle_OutHit) == 0x001390, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_LineTraceSingle_ReturnValue) == 0x001478, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_39) == 0x00147C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_39' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_bBlockingHit_1) == 0x00148C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00148D, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Time_1) == 0x001490, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Distance_1) == 0x001494, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Location_1) == 0x001498, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0014B0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Normal_1) == 0x0014C8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0014E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_PhysMat_1) == 0x0014F8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitActor_1) == 0x001500, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitComponent_1) == 0x001508, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitBoneName_1) == 0x001510, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_BoneName_1) == 0x001518, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitItem_1) == 0x001520, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ElementIndex_1) == 0x001524, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_FaceIndex_1) == 0x001528, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_TraceStart_1) == 0x001530, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_TraceEnd_1) == 0x001548, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_SpawnDecalUnderLimb_SpawnedDecal) == 0x001560, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_SpawnDecalUnderLimb_SpawnedDecal' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x001568, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_19) == 0x001570, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_AttackAngle_1) == 0x001578, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_AttackAngle_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_OneShotSWATAnimation) == 0x001580, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_OneShotSWATAnimation' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitByKnife) == 0x001581, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitByKnife' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_29) == 0x001584, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_29' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_DefineAngleForMontage_AngleMontage_1) == 0x00158C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_DefineAngleForMontage_AngleMontage_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Select_Default) == 0x001590, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x001598, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0015A8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_StringToName_ReturnValue_2) == 0x0015B0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitLocation_2) == 0x0015B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitLocation_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitInfo_1) == 0x0015D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitInfo_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_40) == 0x0016B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_40' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_MontageType) == 0x0016C8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_MontageType' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_SwitchInteger_CmpSuccess) == 0x0016CC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_MeshType_1) == 0x0016D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_MeshType_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Type_1) == 0x0016D4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Type_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_AnimType_1) == 0x0016D5, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_AnimType_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_ZombieManagerIndex_1) == 0x0016D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_ZombieManagerIndex_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Location_1) == 0x0016E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Rotation_1) == 0x0016F8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Rotation_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Quests) == 0x001710, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Quests' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_ConnectedDoor) == 0x001760, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_ConnectedDoor' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_PatrollingPath) == 0x001768, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_PatrollingPath' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_bIsCityZombie) == 0x001778, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_bIsCityZombie' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_MeshType) == 0x00177C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_MeshType' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Type) == 0x001780, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_AnimType) == 0x001781, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_AnimType' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_ZombieManagerIndex) == 0x001784, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_ZombieManagerIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Location) == 0x001788, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Rotation) == 0x0017A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetController_ReturnValue) == 0x0017B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsZombie_Controller) == 0x0017C0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsZombie_Controller' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_19) == 0x0017C8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_20) == 0x0017C9, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_18) == 0x0017D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_18' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_name_Variable_7) == 0x0017D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x0017E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_21) == 0x0017E1, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitInfo) == 0x0017E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DismembermentPart) == 0x0018D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_WeaponType) == 0x0018D1, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_WeaponType' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_FullHeadDismemberment) == 0x0018D2, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_FullHeadDismemberment' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DoubleDismemberment) == 0x0018D3, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DoubleDismemberment' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Damage) == 0x0018D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_30) == 0x0018E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_30' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_41) == 0x0018E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_41' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_31) == 0x0018F8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_31' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Array_Get_Item) == 0x001900, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Start_Dismemberment_Start_1) == 0x001908, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Start_Dismemberment_Start_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_42) == 0x00190C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_42' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_MakeHitResult_ReturnValue) == 0x001920, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_IntToString_ReturnValue_1) == 0x001A08, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_StringToName_ReturnValue_3) == 0x001A18, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x001A20, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x001B40, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_22) == 0x001B41, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_32) == 0x001B44, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_32' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Array_Get_Item_1) == 0x001B50, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_30) == 0x001B80, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_43) == 0x001B84, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_43' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_44) == 0x001B94, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_44' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_33) == 0x001BA4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_33' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_45) == 0x001BAC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_45' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_AttackAngle) == 0x001BC0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_AttackAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_IgnoreVelocity) == 0x001BC8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_IgnoreVelocity' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_DamageInHead) == 0x001BC9, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_DamageInHead' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_PreDamageAnimationPhase_Continue) == 0x001BCA, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_PreDamageAnimationPhase_Continue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_BoneName) == 0x001BCC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_HitLocation_1) == 0x001BD8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_HitLocation_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_DefineAdditiveDamageMontage_MontageType) == 0x001BF0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_DefineAdditiveDamageMontage_MontageType' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_34) == 0x001BF4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_34' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_46) == 0x001BFC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_46' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetBlackboard_ReturnValue) == 0x001C10, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_MakeLiteralName_ReturnValue) == 0x001C18, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetZombieAnimType_ReturnValue_5) == 0x001C20, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetZombieAnimType_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_BodyImpulse) == 0x001C28, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_BodyImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_LimbImpulse_1) == 0x001C40, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_LimbImpulse_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_InstigatedBy) == 0x001C58, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_31) == 0x001C60, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_47) == 0x001C64, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_47' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_LimbImpulse) == 0x001C78, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_LimbImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_name_Variable_8) == 0x001C90, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_35) == 0x001C98, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_35' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_48) == 0x001CA0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_48' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_GetActorLocation_ReturnValue) == 0x001CB0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x001CC8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetChanceIsLowerThan_ReturnValue) == 0x001CD0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetChanceIsLowerThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_36) == 0x001CD4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_36' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4) == 0x001CE0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_49) == 0x001CE8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_49' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_23) == 0x001CF8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_SpawnSystemAttached_ReturnValue) == 0x001D00, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5) == 0x001D08, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_50) == 0x001D10, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_50' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_24) == 0x001D20, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Angle_1) == 0x001D28, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Angle_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Get_Agressive_Montage_Name_SectionName) == 0x001D30, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Get_Agressive_Montage_Name_SectionName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_AgressiveMontageToPlay) == 0x001D40, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_AgressiveMontageToPlay' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Angle) == 0x001D70, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Angle' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_StringToName_ReturnValue_4) == 0x001D78, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_StringToName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_MakeRotator_ReturnValue) == 0x001D80, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x001D98, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x001DC8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_51) == 0x001DCC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_51' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6) == 0x001DE0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Map_Find_Value) == 0x001DE8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Map_Find_ReturnValue) == 0x001E18, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_25) == 0x001E19, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Map_Find_Value_1) == 0x001E20, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Map_Find_ReturnValue_1) == 0x001E50, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_37) == 0x001E54, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_37' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_52) == 0x001E5C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_52' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimerDelegate_ReturnValue_6) == 0x001E70, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimerDelegate_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7) == 0x001E78, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_26) == 0x001E80, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_53) == 0x001E84, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_53' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimerDelegate_ReturnValue_7) == 0x001E98, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimerDelegate_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_54) == 0x001EA0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_54' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_55) == 0x001EB0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_55' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_38) == 0x001EC0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_38' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_56) == 0x001EC8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_56' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_39) == 0x001ED8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_39' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_57) == 0x001EE0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_57' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_58) == 0x001EF0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_58' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_8) == 0x001F00, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_59) == 0x001F08, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_59' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_27) == 0x001F18, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_60) == 0x001F1C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_60' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetCPPZombieType_ReturnValue_5) == 0x001F2C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetCPPZombieType_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Not_PreBool_ReturnValue_1) == 0x001F2D, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x001F2E, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_name_Variable_9) == 0x001F30, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_40) == 0x001F38, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_40' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_61) == 0x001F40, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_61' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_41) == 0x001F50, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_41' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_42) == 0x001F58, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_42' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_62) == 0x001F60, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_62' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_63) == 0x001F70, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_63' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_64) == 0x001F80, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_64' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_65) == 0x001F90, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_65' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_66) == 0x001FA0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_66' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Event_DeltaSeconds) == 0x001FB0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_67) == 0x001FB4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_67' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_68) == 0x001FC4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_68' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Hit) == 0x001FD8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Select_Default_1) == 0x0020C0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_43) == 0x002110, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_43' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Map_Find_Value_2) == 0x002118, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Map_Find_ReturnValue_2) == 0x002148, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Select_Default_2) == 0x002150, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_int_Variable) == 0x002180, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_69) == 0x002184, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_69' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_MeshComponent) == 0x002198, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_MeshComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_70) == 0x0021A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_70' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0021B0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Conv_StringToName_ReturnValue_5) == 0x0021C0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Conv_StringToName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x0021C8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x0021D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_71) == 0x0021DC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_71' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_32) == 0x0021EC, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_33) == 0x0021ED, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_72) == 0x0021F0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_72' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_HasAuthority_ReturnValue_34) == 0x002200, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_HasAuthority_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_NotifyName_44) == 0x002204, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_NotifyName_44' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_73) == 0x00220C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_73' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_int_Variable_1) == 0x00221C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_74) == 0x002220, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_74' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_HitComponent_1) == 0x002230, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OtherActor_3) == 0x002238, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OtherComp_3) == 0x002240, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_NormalImpulse_1) == 0x002248, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_NormalImpulse_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_Hit_1) == 0x002260, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_Hit_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_bBlockingHit_2) == 0x002348, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x002349, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Time_2) == 0x00234C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Distance_2) == 0x002350, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Location_2) == 0x002358, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ImpactPoint_2) == 0x002370, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Normal_2) == 0x002388, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0023A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_PhysMat_2) == 0x0023B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitActor_2) == 0x0023C0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitComponent_2) == 0x0023C8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitBoneName_2) == 0x0023D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_BoneName_2) == 0x0023D8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitItem_2) == 0x0023E0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ElementIndex_2) == 0x0023E4, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_FaceIndex_2) == 0x0023E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_TraceStart_2) == 0x0023F0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_TraceEnd_2) == 0x002408, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_75) == 0x002420, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_75' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, Temp_object_Variable_21) == 0x002430, "Member 'Zombie_C_ExecuteUbergraph_Zombie::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsAnim_Montage_9) == 0x002438, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsAnim_Montage_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_20) == 0x002440, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetZombieAnimType_ReturnValue_6) == 0x002441, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetZombieAnimType_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_9) == 0x002448, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x002450, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsValid_ReturnValue_28) == 0x002451, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_Loaded_13) == 0x002458, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_Loaded_13' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_76) == 0x002460, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_76' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimer_ReturnValue) == 0x002470, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_LootPoint_1) == 0x002478, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_LootPoint_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x002480, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetActorLocation_ReturnValue) == 0x002568, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_MakeVector_ReturnValue_1) == 0x002570, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_MakeHitResult_ReturnValue_1) == 0x002588, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_MakeHitResult_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_ApplyPointDamage_ReturnValue) == 0x002670, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_ApplyPointDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_SwitchEnum_CmpSuccess_5) == 0x002674, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_HitComponent) == 0x002678, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OtherActor_2) == 0x002680, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OtherComp_2) == 0x002688, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_NormalImpulse) == 0x002690, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_Hit) == 0x0026A8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_bBlockingHit_3) == 0x002790, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x002791, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Time_3) == 0x002794, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Distance_3) == 0x002798, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Location_3) == 0x0027A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ImpactPoint_3) == 0x0027B8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_Normal_3) == 0x0027D0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ImpactNormal_3) == 0x0027E8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_PhysMat_3) == 0x002800, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitActor_3) == 0x002808, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitComponent_3) == 0x002810, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitBoneName_3) == 0x002818, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_BoneName_3) == 0x002820, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_BoneName_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_HitItem_3) == 0x002828, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_ElementIndex_3) == 0x00282C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_FaceIndex_3) == 0x002830, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_TraceStart_3) == 0x002838, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakHitResult_TraceEnd_3) == 0x002850, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_NameName_ReturnValue_5) == 0x002868, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_NameName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_EqualEqual_NameName_ReturnValue_6) == 0x002869, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_EqualEqual_NameName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsBP_Base_Projectile) == 0x002870, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsBP_Base_Projectile' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_21) == 0x002878, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BooleanOR_ReturnValue_2) == 0x002879, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetInstigator_ReturnValue) == 0x002880, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x002888, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_22) == 0x002890, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_Select_Default_3) == 0x002898, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_IsLocallyControlled_ReturnValue) == 0x0028A0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_PlayEvent2D_ReturnValue) == 0x0028A8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_77) == 0x0028B0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_77' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetDismembermentMesh_DismembermentMesh_4) == 0x0028C0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetDismembermentMesh_DismembermentMesh_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0028F0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_ComposeRotators_ReturnValue) == 0x002908, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_CorrectDismembermentPart_DismembermentPart_4) == 0x002920, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_CorrectDismembermentPart_DismembermentPart_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakRotator_Roll) == 0x002924, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakRotator_Pitch) == 0x002928, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_BreakRotator_Yaw) == 0x00292C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x002930, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OtherActor_1) == 0x002938, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OtherComp_1) == 0x002940, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x002948, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_bFromSweep) == 0x00294C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_SweepResult) == 0x002950, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsBP_New_NV_Water) == 0x002A38, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsBP_New_NV_Water' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_23) == 0x002A40, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x002A48, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OtherActor) == 0x002A50, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OtherComp) == 0x002A58, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x002A60, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_AsBP_New_NV_Water_1) == 0x002A68, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_AsBP_New_NV_Water_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_DynamicCast_bSuccess_24) == 0x002A70, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_78) == 0x002A74, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_78' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CreateDelegate_OutputDelegate_79) == 0x002A84, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CreateDelegate_OutputDelegate_79' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimerDelegate_ReturnValue_8) == 0x002A98, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimerDelegate_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_CPPMovementType) == 0x002AA0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_CPPMovementType' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_SprintMaxSpeed) == 0x002AA8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_SprintMaxSpeed' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_SprintAcceleration) == 0x002AB0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_SprintAcceleration' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_GetCPPMovementType_ReturnValue) == 0x002AB8, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_GetCPPMovementType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Map_Find_Value_3) == 0x002AC0, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Map_Find_ReturnValue_3) == 0x002B40, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, K2Node_CustomEvent_LootPoint) == 0x002B48, "Member 'Zombie_C_ExecuteUbergraph_Zombie::K2Node_CustomEvent_LootPoint' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x002B50, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x002B58, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_On_Point_Damage_Damage_ImplicitCast) == 0x002B60, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_On_Point_Damage_Damage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_ZombieDeath_RPC_LastDamage_ImplicitCast) == 0x002B68, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_ZombieDeath_RPC_LastDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_Delay_Duration_ImplicitCast) == 0x002B70, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_SetFadeOut_StartDelay_ImplicitCast) == 0x002B74, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_SetFadeOut_StartDelay_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x002B78, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExecuteUbergraph_Zombie, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x002B7C, "Member 'Zombie_C_ExecuteUbergraph_Zombie::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.ExplosionDismemberment
// 0x0220 (0x0220 - 0x0000)
struct Zombie_C_ExplosionDismemberment final
{
public:
	struct FVector                                ExplosionLocation;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0018(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CheckDIsmemberDistance_CanBeDismembered;  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_DefineDismemberPartsForExplosion_BonesToDismember; // 0x0108(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue_1;              // 0x0118(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_Dismemberment_Start;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0214(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Start_Dismemberment_Start_1;              // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ExplosionDismemberment) == 0x000008, "Wrong alignment on Zombie_C_ExplosionDismemberment");
static_assert(sizeof(Zombie_C_ExplosionDismemberment) == 0x000220, "Wrong size on Zombie_C_ExplosionDismemberment");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, ExplosionLocation) == 0x000000, "Member 'Zombie_C_ExplosionDismemberment::ExplosionLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, CallFunc_MakeHitResult_ReturnValue) == 0x000018, "Member 'Zombie_C_ExplosionDismemberment::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, CallFunc_CheckDIsmemberDistance_CanBeDismembered) == 0x000100, "Member 'Zombie_C_ExplosionDismemberment::CallFunc_CheckDIsmemberDistance_CanBeDismembered' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, CallFunc_DefineDismemberPartsForExplosion_BonesToDismember) == 0x000108, "Member 'Zombie_C_ExplosionDismemberment::CallFunc_DefineDismemberPartsForExplosion_BonesToDismember' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, CallFunc_MakeHitResult_ReturnValue_1) == 0x000118, "Member 'Zombie_C_ExplosionDismemberment::CallFunc_MakeHitResult_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, CallFunc_Array_Get_Item) == 0x000200, "Member 'Zombie_C_ExplosionDismemberment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, CallFunc_Start_Dismemberment_Start) == 0x000208, "Member 'Zombie_C_ExplosionDismemberment::CallFunc_Start_Dismemberment_Start' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, CallFunc_Array_Length_ReturnValue) == 0x00020C, "Member 'Zombie_C_ExplosionDismemberment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, CallFunc_Greater_IntInt_ReturnValue) == 0x000210, "Member 'Zombie_C_ExplosionDismemberment::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, CallFunc_Array_Get_Item_1) == 0x000214, "Member 'Zombie_C_ExplosionDismemberment::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ExplosionDismemberment, CallFunc_Start_Dismemberment_Start_1) == 0x00021C, "Member 'Zombie_C_ExplosionDismemberment::CallFunc_Start_Dismemberment_Start_1' has a wrong offset!");

// Function Zombie.Zombie_C.FilterQuests
// 0x00A8 (0x00A8 - 0x0000)
struct Zombie_C_FilterQuests final
{
public:
	TSet<class UQuest*>                           LinkedQuestsSet;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EZombieType                                   ZombieType;                                        // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 Quest;                                             // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UQuest*>                         CallFunc_Set_ToArray_Result;                       // 0x0060(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UQuestCustomData*                 CallFunc_GetCustomData_ReturnValue;                // 0x0090(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UQuestData_C*                     K2Node_DynamicCast_AsQuest_Data;                   // 0x0098(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_FilterQuests) == 0x000008, "Wrong alignment on Zombie_C_FilterQuests");
static_assert(sizeof(Zombie_C_FilterQuests) == 0x0000A8, "Wrong size on Zombie_C_FilterQuests");
static_assert(offsetof(Zombie_C_FilterQuests, LinkedQuestsSet) == 0x000000, "Member 'Zombie_C_FilterQuests::LinkedQuestsSet' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, ZombieType) == 0x000050, "Member 'Zombie_C_FilterQuests::ZombieType' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, Quest) == 0x000058, "Member 'Zombie_C_FilterQuests::Quest' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, CallFunc_Set_ToArray_Result) == 0x000060, "Member 'Zombie_C_FilterQuests::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, Temp_int_Array_Index_Variable) == 0x000070, "Member 'Zombie_C_FilterQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, CallFunc_Array_Get_Item) == 0x000078, "Member 'Zombie_C_FilterQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'Zombie_C_FilterQuests::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'Zombie_C_FilterQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'Zombie_C_FilterQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, CallFunc_GetCustomData_ReturnValue) == 0x000090, "Member 'Zombie_C_FilterQuests::CallFunc_GetCustomData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, K2Node_DynamicCast_AsQuest_Data) == 0x000098, "Member 'Zombie_C_FilterQuests::K2Node_DynamicCast_AsQuest_Data' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'Zombie_C_FilterQuests::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, CallFunc_Less_IntInt_ReturnValue) == 0x0000A1, "Member 'Zombie_C_FilterQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000A2, "Member 'Zombie_C_FilterQuests::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_FilterQuests, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'Zombie_C_FilterQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.GenerateLootFromTables
// 0x0CA0 (0x0CA0 - 0x0000)
struct Zombie_C_GenerateLootFromTables final
{
public:
	TArray<class FName>                           ItemsToSpawn;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FDefaultItemInfo>               OldContainerItems;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FDefaultItemInfo>               NewContainerItems;                                 // 0x0020(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<int32>                                 CurrentLootChances;                                // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Current_3_item_chance;                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_2_item_chance;                             // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_1_item_chance;                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultItemInfo>               ItemsToAdd;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         RandomItemsCount;                                  // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemChanceCheck;                                   // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowChanceCheck;                                    // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LootCount;                                         // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             ChosenLootDataTable;                               // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomInt;                                         // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultItemInfo>               ContainerItems;                                    // 0x0080(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FFItemInfo                             ItemInfo;                                          // 0x0090(0x0220)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   Temp_byte_Variable;                                // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x02FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0308(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue;             // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_3;        // 0x052A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x052B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo;                 // 0x0530(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_SetFieldsInStruct_StructOut;                // 0x0580(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue_1;           // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default;                             // 0x05D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ED[0x3];                                      // 0x05ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x05F0(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   Temp_byte_Variable_1;                              // 0x0603(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo_1;               // 0x0608(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_2;              // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue_3;              // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0658(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeneralChanceByType                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0678(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9[0x3];                                      // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCountChance                           CallFunc_Array_Get_Item_2;                         // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CA[0x2];                                      // 0x06CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x3];                                      // 0x06F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x3];                                      // 0x06F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GenerateRandomLootOfType_ID;              // 0x06FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GenerateRandomLootOfType_Canstack;        // 0x0704(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_705[0x3];                                      // 0x0705(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GenerateRandomLootOfType_MaxCountStack;   // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C[0x4];                                      // 0x070C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATDB_GameMode_C*                        CallFunc_GenerateRandomLootOfType_AsTDB_Game_Mode; // 0x0710(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FItemIdGenerateChance                  CallFunc_Array_Get_Item_3;                         // 0x0718(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x3];                                      // 0x0739(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCountChance                           CallFunc_Array_Get_Item_4;                         // 0x0740(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_SetFieldsInStruct_StructOut_1;              // 0x0760(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7BC[0x4];                                      // 0x07BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C9[0x3];                                      // 0x07C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D1[0x3];                                      // 0x07D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x07D8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F9[0x7];                                      // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0A00(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C21[0x3];                                      // 0x0C21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0C24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0C28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0C29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2A[0x2];                                      // 0x0C2A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0C2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C31[0x3];                                      // 0x0C31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0C34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0C39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3A[0x2];                                      // 0x0C3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue_4;              // 0x0C3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default_1;                           // 0x0C40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x0C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4C[0x4];                                      // 0x0C4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo_2;               // 0x0C50(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_6;                         // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0C94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_7;                         // 0x0C98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GenerateLootFromTables) == 0x000008, "Wrong alignment on Zombie_C_GenerateLootFromTables");
static_assert(sizeof(Zombie_C_GenerateLootFromTables) == 0x000CA0, "Wrong size on Zombie_C_GenerateLootFromTables");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, ItemsToSpawn) == 0x000000, "Member 'Zombie_C_GenerateLootFromTables::ItemsToSpawn' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, OldContainerItems) == 0x000010, "Member 'Zombie_C_GenerateLootFromTables::OldContainerItems' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, NewContainerItems) == 0x000020, "Member 'Zombie_C_GenerateLootFromTables::NewContainerItems' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CurrentLootChances) == 0x000030, "Member 'Zombie_C_GenerateLootFromTables::CurrentLootChances' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Current_3_item_chance) == 0x000040, "Member 'Zombie_C_GenerateLootFromTables::Current_3_item_chance' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Current_2_item_chance) == 0x000044, "Member 'Zombie_C_GenerateLootFromTables::Current_2_item_chance' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Current_1_item_chance) == 0x000048, "Member 'Zombie_C_GenerateLootFromTables::Current_1_item_chance' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, ItemsToAdd) == 0x000050, "Member 'Zombie_C_GenerateLootFromTables::ItemsToAdd' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, RandomItemsCount) == 0x000060, "Member 'Zombie_C_GenerateLootFromTables::RandomItemsCount' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, ItemChanceCheck) == 0x000064, "Member 'Zombie_C_GenerateLootFromTables::ItemChanceCheck' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, RowChanceCheck) == 0x000068, "Member 'Zombie_C_GenerateLootFromTables::RowChanceCheck' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, LootCount) == 0x00006C, "Member 'Zombie_C_GenerateLootFromTables::LootCount' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, ChosenLootDataTable) == 0x000070, "Member 'Zombie_C_GenerateLootFromTables::ChosenLootDataTable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, RandomInt) == 0x000078, "Member 'Zombie_C_GenerateLootFromTables::RandomInt' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, ContainerItems) == 0x000080, "Member 'Zombie_C_GenerateLootFromTables::ContainerItems' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, ItemInfo) == 0x000090, "Member 'Zombie_C_GenerateLootFromTables::ItemInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Array_Index_Variable) == 0x0002B0, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Length_ReturnValue) == 0x0002B4, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_bool_True_if_break_was_hit_Variable) == 0x0002B8, "Member 'Zombie_C_GenerateLootFromTables::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0002B9, "Member 'Zombie_C_GenerateLootFromTables::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Not_PreBool_ReturnValue) == 0x0002BA, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002BB, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Loop_Counter_Variable) == 0x0002BC, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue) == 0x0002C0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_bool_True_if_break_was_hit_Variable_2) == 0x0002C4, "Member 'Zombie_C_GenerateLootFromTables::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Array_Index_Variable_1) == 0x0002C8, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002CC, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Variable) == 0x0002D0, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002D4, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_byte_Variable) == 0x0002D8, "Member 'Zombie_C_GenerateLootFromTables::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Loop_Counter_Variable_1) == 0x0002DC, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Loop_Counter_Variable_2) == 0x0002E0, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002E4, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002E8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Loop_Counter_Variable_3) == 0x0002EC, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Less_IntInt_ReturnValue) == 0x0002F0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_4) == 0x0002F4, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Array_Index_Variable_2) == 0x0002F8, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Get_Item) == 0x0002FC, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetDataTableRowFromName_OutRow) == 0x000308, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000528, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetCPPZombieType_ReturnValue) == 0x000529, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetCPPZombieType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_bool_True_if_break_was_hit_Variable_3) == 0x00052A, "Member 'Zombie_C_GenerateLootFromTables::Temp_bool_True_if_break_was_hit_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Not_PreBool_ReturnValue_3) == 0x00052B, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, K2Node_MakeStruct_DefaultItemInfo) == 0x000530, "Member 'Zombie_C_GenerateLootFromTables::K2Node_MakeStruct_DefaultItemInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Loop_Counter_Variable_4) == 0x000570, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Array_Index_Variable_3) == 0x000574, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_5) == 0x000578, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, K2Node_SetFieldsInStruct_StructOut) == 0x000580, "Member 'Zombie_C_GenerateLootFromTables::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Add_ReturnValue) == 0x0005C0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_RandomInteger_ReturnValue) == 0x0005C4, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetCPPZombieType_ReturnValue_1) == 0x0005C8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetCPPZombieType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, K2Node_Select_Default) == 0x0005D0, "Member 'Zombie_C_GenerateLootFromTables::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_6) == 0x0005E0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_7) == 0x0005E4, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_int_Array_Index_Variable_4) == 0x0005E8, "Member 'Zombie_C_GenerateLootFromTables::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0005EC, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, K2Node_MakeArray_Array) == 0x0005F0, "Member 'Zombie_C_GenerateLootFromTables::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000600, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000601, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000602, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, Temp_byte_Variable_1) == 0x000603, "Member 'Zombie_C_GenerateLootFromTables::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, K2Node_MakeStruct_DefaultItemInfo_1) == 0x000608, "Member 'Zombie_C_GenerateLootFromTables::K2Node_MakeStruct_DefaultItemInfo_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_RandomInteger_ReturnValue_1) == 0x000648, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_RandomInteger_ReturnValue_2) == 0x00064C, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_RandomInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000650, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_RandomInteger_ReturnValue_3) == 0x000654, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_RandomInteger_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000658, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Get_Item_1) == 0x000668, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000670, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000678, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0006A8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Length_ReturnValue_1) == 0x0006AC, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Get_Item_2) == 0x0006B0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Less_IntInt_ReturnValue_1) == 0x0006C8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_BooleanAND_ReturnValue) == 0x0006C9, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_8) == 0x0006CC, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_BreakVector2D_X) == 0x0006D0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_BreakVector2D_Y) == 0x0006D8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Length_ReturnValue_2) == 0x0006E0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_RandomFloatInRange_ReturnValue) == 0x0006E8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Less_IntInt_ReturnValue_2) == 0x0006F0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Round_ReturnValue) == 0x0006F4, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_BooleanAND_ReturnValue_1) == 0x0006F8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GenerateRandomLootOfType_ID) == 0x0006FC, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GenerateRandomLootOfType_ID' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GenerateRandomLootOfType_Canstack) == 0x000704, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GenerateRandomLootOfType_Canstack' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GenerateRandomLootOfType_MaxCountStack) == 0x000708, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GenerateRandomLootOfType_MaxCountStack' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GenerateRandomLootOfType_AsTDB_Game_Mode) == 0x000710, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GenerateRandomLootOfType_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Get_Item_3) == 0x000718, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000738, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_SelectInt_ReturnValue) == 0x00073C, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Get_Item_4) == 0x000740, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_SelectInt_ReturnValue_1) == 0x000758, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, K2Node_SetFieldsInStruct_StructOut_1) == 0x000760, "Member 'Zombie_C_GenerateLootFromTables::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_9) == 0x0007A0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Add_ReturnValue_1) == 0x0007A4, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_BreakVector2D_X_1) == 0x0007A8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_BreakVector2D_Y_1) == 0x0007B0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Length_ReturnValue_3) == 0x0007B8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0007C0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Less_IntInt_ReturnValue_3) == 0x0007C8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Round_ReturnValue_1) == 0x0007CC, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_BooleanAND_ReturnValue_2) == 0x0007D0, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_10) == 0x0007D4, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x0007D8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0009F8, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000A00, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000C20, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Length_ReturnValue_4) == 0x000C24, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Less_IntInt_ReturnValue_4) == 0x000C28, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_BooleanAND_ReturnValue_3) == 0x000C29, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Length_ReturnValue_5) == 0x000C2C, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000C30, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Add_IntInt_ReturnValue_11) == 0x000C34, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000C38, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000C39, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_RandomInteger_ReturnValue_4) == 0x000C3C, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_RandomInteger_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, K2Node_Select_Default_1) == 0x000C40, "Member 'Zombie_C_GenerateLootFromTables::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Get_Item_5) == 0x000C48, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, K2Node_MakeStruct_DefaultItemInfo_2) == 0x000C50, "Member 'Zombie_C_GenerateLootFromTables::K2Node_MakeStruct_DefaultItemInfo_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Get_Item_6) == 0x000C90, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Add_ReturnValue_2) == 0x000C94, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateLootFromTables, CallFunc_Array_Get_Item_7) == 0x000C98, "Member 'Zombie_C_GenerateLootFromTables::CallFunc_Array_Get_Item_7' has a wrong offset!");

// Function Zombie.Zombie_C.GenerateRandomLootOfType
// 0x04E8 (0x04E8 - 0x0000)
struct Zombie_C_GenerateRandomLootOfType final
{
public:
	ELootTypes                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlotRarity                                   LootTier;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ID;                                                // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Canstack;                                          // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCountStack;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATDB_GameMode_C*                        AsTDB_Game_Mode;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FFItemInfo                             ResultRow;                                         // 0x0020(0x0220)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   NameItem;                                          // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Temp_name_Variable;                                // 0x0268(0x0010)(ReferenceParm)
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable_1;                              // 0x0288(0x0010)(ReferenceParm)
	ELootTypes                                    Temp_byte_Variable;                                // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_Select_Default;                             // 0x02A0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x02C0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GenerateRandomLootOfType) == 0x000008, "Wrong alignment on Zombie_C_GenerateRandomLootOfType");
static_assert(sizeof(Zombie_C_GenerateRandomLootOfType) == 0x0004E8, "Wrong size on Zombie_C_GenerateRandomLootOfType");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, Type) == 0x000000, "Member 'Zombie_C_GenerateRandomLootOfType::Type' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, LootTier) == 0x000001, "Member 'Zombie_C_GenerateRandomLootOfType::LootTier' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, ID) == 0x000004, "Member 'Zombie_C_GenerateRandomLootOfType::ID' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, Canstack) == 0x00000C, "Member 'Zombie_C_GenerateRandomLootOfType::Canstack' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, MaxCountStack) == 0x000010, "Member 'Zombie_C_GenerateRandomLootOfType::MaxCountStack' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, AsTDB_Game_Mode) == 0x000018, "Member 'Zombie_C_GenerateRandomLootOfType::AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, ResultRow) == 0x000020, "Member 'Zombie_C_GenerateRandomLootOfType::ResultRow' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, NameItem) == 0x000240, "Member 'Zombie_C_GenerateRandomLootOfType::NameItem' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, Temp_bool_True_if_break_was_hit_Variable) == 0x000248, "Member 'Zombie_C_GenerateRandomLootOfType::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, Temp_int_Array_Index_Variable) == 0x00024C, "Member 'Zombie_C_GenerateRandomLootOfType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_Not_PreBool_ReturnValue) == 0x000250, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, Temp_int_Loop_Counter_Variable) == 0x000254, "Member 'Zombie_C_GenerateRandomLootOfType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_Add_IntInt_ReturnValue) == 0x000258, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_GetGameMode_ReturnValue) == 0x000260, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, Temp_name_Variable) == 0x000268, "Member 'Zombie_C_GenerateRandomLootOfType::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x000278, "Member 'Zombie_C_GenerateRandomLootOfType::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'Zombie_C_GenerateRandomLootOfType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, Temp_name_Variable_1) == 0x000288, "Member 'Zombie_C_GenerateRandomLootOfType::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, Temp_byte_Variable) == 0x000298, "Member 'Zombie_C_GenerateRandomLootOfType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, K2Node_Select_Default) == 0x0002A0, "Member 'Zombie_C_GenerateRandomLootOfType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_Array_Get_Item) == 0x0002B0, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_Array_Length_ReturnValue) == 0x0002B8, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002C0, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0004E0, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_Less_IntInt_ReturnValue) == 0x0004E1, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_BooleanAND_ReturnValue) == 0x0004E2, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0004E3, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0004E4, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GenerateRandomLootOfType, CallFunc_BooleanAND_ReturnValue_1) == 0x0004E5, "Member 'Zombie_C_GenerateRandomLootOfType::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Zombie.Zombie_C.Get Agressive Montage Name
// 0x00E0 (0x00E0 - 0x0000)
struct Zombie_C_Get_Agressive_Montage_Name final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SectionName;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   SittingZombieSectionName;                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SpecialZombieSectionName;                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EZombieAnimType                               Temp_byte_Variable;                                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue;            // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EAngleMontage                                 CallFunc_DefineAngleForMontage_AngleMontage;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpecialZombie_IsSpecial;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Get_Agressive_Montage_Name) == 0x000008, "Wrong alignment on Zombie_C_Get_Agressive_Montage_Name");
static_assert(sizeof(Zombie_C_Get_Agressive_Montage_Name) == 0x0000E0, "Wrong size on Zombie_C_Get_Agressive_Montage_Name");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, Angle) == 0x000000, "Member 'Zombie_C_Get_Agressive_Montage_Name::Angle' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, SectionName) == 0x000008, "Member 'Zombie_C_Get_Agressive_Montage_Name::SectionName' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, SittingZombieSectionName) == 0x000018, "Member 'Zombie_C_Get_Agressive_Montage_Name::SittingZombieSectionName' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, SpecialZombieSectionName) == 0x000020, "Member 'Zombie_C_Get_Agressive_Montage_Name::SpecialZombieSectionName' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, Temp_string_Variable) == 0x000028, "Member 'Zombie_C_Get_Agressive_Montage_Name::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, Temp_string_Variable_1) == 0x000038, "Member 'Zombie_C_Get_Agressive_Montage_Name::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, Temp_string_Variable_2) == 0x000048, "Member 'Zombie_C_Get_Agressive_Montage_Name::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, Temp_string_Variable_3) == 0x000058, "Member 'Zombie_C_Get_Agressive_Montage_Name::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, Temp_string_Variable_4) == 0x000068, "Member 'Zombie_C_Get_Agressive_Montage_Name::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, Temp_string_Variable_5) == 0x000078, "Member 'Zombie_C_Get_Agressive_Montage_Name::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, CallFunc_RandomBool_ReturnValue) == 0x000088, "Member 'Zombie_C_Get_Agressive_Montage_Name::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, CallFunc_SelectString_ReturnValue) == 0x000090, "Member 'Zombie_C_Get_Agressive_Montage_Name::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, Temp_byte_Variable) == 0x0000A0, "Member 'Zombie_C_Get_Agressive_Montage_Name::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, CallFunc_GetCPPZombieType_ReturnValue) == 0x0000A1, "Member 'Zombie_C_Get_Agressive_Montage_Name::CallFunc_GetCPPZombieType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, CallFunc_GetZombieAnimType_ReturnValue) == 0x0000A2, "Member 'Zombie_C_Get_Agressive_Montage_Name::CallFunc_GetZombieAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A3, "Member 'Zombie_C_Get_Agressive_Montage_Name::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, K2Node_Select_Default) == 0x0000A8, "Member 'Zombie_C_Get_Agressive_Montage_Name::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, CallFunc_DefineAngleForMontage_AngleMontage) == 0x0000B8, "Member 'Zombie_C_Get_Agressive_Montage_Name::CallFunc_DefineAngleForMontage_AngleMontage' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, CallFunc_IsSpecialZombie_IsSpecial) == 0x0000B9, "Member 'Zombie_C_Get_Agressive_Montage_Name::CallFunc_IsSpecialZombie_IsSpecial' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000C0, "Member 'Zombie_C_Get_Agressive_Montage_Name::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Agressive_Montage_Name, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'Zombie_C_Get_Agressive_Montage_Name::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.Get Degrees to Target
// 0x0140 (0x0140 - 0x0000)
struct Zombie_C_Get_Degrees_to_Target final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DesiredDegrees;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DesiredDirection;                                  // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResultDegrees;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sign;                                              // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DotProduct;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CrossProduct;                                      // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsZero_ReturnValue;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Get_Degrees_to_Target) == 0x000008, "Wrong alignment on Zombie_C_Get_Degrees_to_Target");
static_assert(sizeof(Zombie_C_Get_Degrees_to_Target) == 0x000140, "Wrong size on Zombie_C_Get_Degrees_to_Target");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, TargetLocation) == 0x000000, "Member 'Zombie_C_Get_Degrees_to_Target::TargetLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, DesiredDegrees) == 0x000018, "Member 'Zombie_C_Get_Degrees_to_Target::DesiredDegrees' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, DesiredDirection) == 0x000020, "Member 'Zombie_C_Get_Degrees_to_Target::DesiredDirection' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, ResultDegrees) == 0x000038, "Member 'Zombie_C_Get_Degrees_to_Target::ResultDegrees' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, Sign) == 0x000040, "Member 'Zombie_C_Get_Degrees_to_Target::Sign' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, DotProduct) == 0x000048, "Member 'Zombie_C_Get_Degrees_to_Target::DotProduct' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CrossProduct) == 0x000050, "Member 'Zombie_C_Get_Degrees_to_Target::CrossProduct' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_GetActorForwardVector_ReturnValue) == 0x000068, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000080, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_Dot_VectorVector_ReturnValue) == 0x000098, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000A0, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_BreakVector_X) == 0x0000B8, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_BreakVector_Y) == 0x0000C0, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_BreakVector_Z) == 0x0000C8, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_Vector_IsZero_ReturnValue) == 0x0000D0, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_Vector_IsZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_SignOfFloat_ReturnValue) == 0x0000D8, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_DegAcos_ReturnValue) == 0x0000E8, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_SelectFloat_ReturnValue) == 0x0000F0, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F8, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_FindLookAtRotation_ReturnValue) == 0x000110, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Get_Degrees_to_Target, CallFunc_GetForwardVector_ReturnValue) == 0x000128, "Member 'Zombie_C_Get_Degrees_to_Target::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.GetAllDecalHitBones
// 0x0030 (0x0030 - 0x0000)
struct Zombie_C_GetAllDecalHitBones final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllSocketNames_ReturnValue;            // 0x0010(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetAllDecalHitBones) == 0x000008, "Wrong alignment on Zombie_C_GetAllDecalHitBones");
static_assert(sizeof(Zombie_C_GetAllDecalHitBones) == 0x000030, "Wrong size on Zombie_C_GetAllDecalHitBones");
static_assert(offsetof(Zombie_C_GetAllDecalHitBones, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Zombie_C_GetAllDecalHitBones::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetAllDecalHitBones, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Zombie_C_GetAllDecalHitBones::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetAllDecalHitBones, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Zombie_C_GetAllDecalHitBones::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetAllDecalHitBones, CallFunc_GetAllSocketNames_ReturnValue) == 0x000010, "Member 'Zombie_C_GetAllDecalHitBones::CallFunc_GetAllSocketNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetAllDecalHitBones, CallFunc_Array_Get_Item) == 0x000020, "Member 'Zombie_C_GetAllDecalHitBones::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetAllDecalHitBones, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Zombie_C_GetAllDecalHitBones::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetAllDecalHitBones, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Zombie_C_GetAllDecalHitBones::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetAllDecalHitBones, CallFunc_Array_RemoveItem_ReturnValue) == 0x00002D, "Member 'Zombie_C_GetAllDecalHitBones::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.GetDead
// 0x0001 (0x0001 - 0x0000)
struct Zombie_C_GetDead final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetDead) == 0x000001, "Wrong alignment on Zombie_C_GetDead");
static_assert(sizeof(Zombie_C_GetDead) == 0x000001, "Wrong size on Zombie_C_GetDead");
static_assert(offsetof(Zombie_C_GetDead, ReturnValue) == 0x000000, "Member 'Zombie_C_GetDead::ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.GetDeadBody
// 0x0050 (0x0050 - 0x0000)
struct Zombie_C_GetDeadBody final
{
public:
	class AZombieDeadBody_C*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DesiredDirection;                                  // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ResultDegrees;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sign;                                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DotProduct;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CrossProduct;                                      // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetDeadBody) == 0x000008, "Wrong alignment on Zombie_C_GetDeadBody");
static_assert(sizeof(Zombie_C_GetDeadBody) == 0x000050, "Wrong size on Zombie_C_GetDeadBody");
static_assert(offsetof(Zombie_C_GetDeadBody, ReturnValue) == 0x000000, "Member 'Zombie_C_GetDeadBody::ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDeadBody, DesiredDirection) == 0x000008, "Member 'Zombie_C_GetDeadBody::DesiredDirection' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDeadBody, ResultDegrees) == 0x000020, "Member 'Zombie_C_GetDeadBody::ResultDegrees' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDeadBody, Sign) == 0x000028, "Member 'Zombie_C_GetDeadBody::Sign' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDeadBody, DotProduct) == 0x000030, "Member 'Zombie_C_GetDeadBody::DotProduct' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDeadBody, CrossProduct) == 0x000038, "Member 'Zombie_C_GetDeadBody::CrossProduct' has a wrong offset!");

// Function Zombie.Zombie_C.GetDestinationToMove
// 0x0080 (0x0080 - 0x0000)
struct Zombie_C_GetDestinationToMove final
{
public:
	class UNavigationPath*                        Path;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DestinationToMove;                                 // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetDestinationToMove) == 0x000008, "Wrong alignment on Zombie_C_GetDestinationToMove");
static_assert(sizeof(Zombie_C_GetDestinationToMove) == 0x000080, "Wrong size on Zombie_C_GetDestinationToMove");
static_assert(offsetof(Zombie_C_GetDestinationToMove, Path) == 0x000000, "Member 'Zombie_C_GetDestinationToMove::Path' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDestinationToMove, DestinationToMove) == 0x000008, "Member 'Zombie_C_GetDestinationToMove::DestinationToMove' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDestinationToMove, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Zombie_C_GetDestinationToMove::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDestinationToMove, CallFunc_Array_Get_Item) == 0x000038, "Member 'Zombie_C_GetDestinationToMove::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDestinationToMove, CallFunc_FindLookAtRotation_ReturnValue) == 0x000050, "Member 'Zombie_C_GetDestinationToMove::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDestinationToMove, CallFunc_GetForwardVector_ReturnValue) == 0x000068, "Member 'Zombie_C_GetDestinationToMove::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.GetDIsmemberedLimbBones
// 0x0090 (0x0090 - 0x0000)
struct Zombie_C_GetDIsmemberedLimbBones final
{
public:
	TArray<class FName>                           DismemberedBones;                                  // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FName>                           Bones;                                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	class FName                                   Temp_name_Variable;                                // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0050(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x005C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0068(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetDIsmemberedLimbBones) == 0x000008, "Wrong alignment on Zombie_C_GetDIsmemberedLimbBones");
static_assert(sizeof(Zombie_C_GetDIsmemberedLimbBones) == 0x000090, "Wrong size on Zombie_C_GetDIsmemberedLimbBones");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, DismemberedBones) == 0x000000, "Member 'Zombie_C_GetDIsmemberedLimbBones::DismemberedBones' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, Bones) == 0x000010, "Member 'Zombie_C_GetDIsmemberedLimbBones::Bones' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, Temp_name_Variable) == 0x000020, "Member 'Zombie_C_GetDIsmemberedLimbBones::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, Temp_name_Variable_1) == 0x000028, "Member 'Zombie_C_GetDIsmemberedLimbBones::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, Temp_name_Variable_2) == 0x000030, "Member 'Zombie_C_GetDIsmemberedLimbBones::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, Temp_name_Variable_3) == 0x000038, "Member 'Zombie_C_GetDIsmemberedLimbBones::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, Temp_name_Variable_4) == 0x000040, "Member 'Zombie_C_GetDIsmemberedLimbBones::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, Temp_name_Variable_5) == 0x000048, "Member 'Zombie_C_GetDIsmemberedLimbBones::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, Temp_name_Variable_6) == 0x000050, "Member 'Zombie_C_GetDIsmemberedLimbBones::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'Zombie_C_GetDIsmemberedLimbBones::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, Temp_name_Variable_7) == 0x00005C, "Member 'Zombie_C_GetDIsmemberedLimbBones::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, CallFunc_Array_Add_ReturnValue_1) == 0x000064, "Member 'Zombie_C_GetDIsmemberedLimbBones::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, Temp_name_Variable_8) == 0x000068, "Member 'Zombie_C_GetDIsmemberedLimbBones::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, CallFunc_Array_Add_ReturnValue_2) == 0x000070, "Member 'Zombie_C_GetDIsmemberedLimbBones::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, CallFunc_Array_Add_ReturnValue_3) == 0x000074, "Member 'Zombie_C_GetDIsmemberedLimbBones::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, CallFunc_Array_Add_ReturnValue_4) == 0x000078, "Member 'Zombie_C_GetDIsmemberedLimbBones::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, CallFunc_Array_Add_ReturnValue_5) == 0x00007C, "Member 'Zombie_C_GetDIsmemberedLimbBones::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, CallFunc_Array_Add_ReturnValue_6) == 0x000080, "Member 'Zombie_C_GetDIsmemberedLimbBones::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, CallFunc_Array_Add_ReturnValue_7) == 0x000084, "Member 'Zombie_C_GetDIsmemberedLimbBones::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'Zombie_C_GetDIsmemberedLimbBones::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, K2Node_SwitchEnum_CmpSuccess_1) == 0x000089, "Member 'Zombie_C_GetDIsmemberedLimbBones::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, K2Node_SwitchEnum_CmpSuccess_2) == 0x00008A, "Member 'Zombie_C_GetDIsmemberedLimbBones::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDIsmemberedLimbBones, CallFunc_Array_Add_ReturnValue_8) == 0x00008C, "Member 'Zombie_C_GetDIsmemberedLimbBones::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");

// Function Zombie.Zombie_C.GetDismembermentMesh
// 0x0190 (0x0190 - 0x0000)
struct Zombie_C_GetDismembermentMesh final
{
public:
	EDismembermentPart                            DismembermentPart;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           DismembermentMesh;                                 // 0x0008(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_HeadDamageDismemberment_Mesh;             // 0x0038(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item;                           // 0x0070(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_2;                         // 0x00D0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_3;                         // 0x0100(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_4;                         // 0x0130(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_5;                         // 0x0160(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetDismembermentMesh) == 0x000008, "Wrong alignment on Zombie_C_GetDismembermentMesh");
static_assert(sizeof(Zombie_C_GetDismembermentMesh) == 0x000190, "Wrong size on Zombie_C_GetDismembermentMesh");
static_assert(offsetof(Zombie_C_GetDismembermentMesh, DismembermentPart) == 0x000000, "Member 'Zombie_C_GetDismembermentMesh::DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDismembermentMesh, DismembermentMesh) == 0x000008, "Member 'Zombie_C_GetDismembermentMesh::DismembermentMesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDismembermentMesh, CallFunc_HeadDamageDismemberment_Mesh) == 0x000038, "Member 'Zombie_C_GetDismembermentMesh::CallFunc_HeadDamageDismemberment_Mesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDismembermentMesh, K2Node_SwitchEnum_CmpSuccess) == 0x000068, "Member 'Zombie_C_GetDismembermentMesh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDismembermentMesh, CallFunc_Array_Get_Item) == 0x000070, "Member 'Zombie_C_GetDismembermentMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDismembermentMesh, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'Zombie_C_GetDismembermentMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDismembermentMesh, CallFunc_Array_Get_Item_2) == 0x0000D0, "Member 'Zombie_C_GetDismembermentMesh::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDismembermentMesh, CallFunc_Array_Get_Item_3) == 0x000100, "Member 'Zombie_C_GetDismembermentMesh::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDismembermentMesh, CallFunc_Array_Get_Item_4) == 0x000130, "Member 'Zombie_C_GetDismembermentMesh::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetDismembermentMesh, CallFunc_Array_Get_Item_5) == 0x000160, "Member 'Zombie_C_GetDismembermentMesh::CallFunc_Array_Get_Item_5' has a wrong offset!");

// Function Zombie.Zombie_C.GetHeadDismembermentMesh
// 0x00D0 (0x00D0 - 0x0000)
struct Zombie_C_GetHeadDismembermentMesh final
{
public:
	TSoftObjectPtr<class USkeletalMesh>           Param_Mesh;                                        // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Random_OutItem;                     // 0x0038(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item;                           // 0x0070(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           K2Node_Select_Default;                             // 0x00A0(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetHeadDismembermentMesh) == 0x000008, "Wrong alignment on Zombie_C_GetHeadDismembermentMesh");
static_assert(sizeof(Zombie_C_GetHeadDismembermentMesh) == 0x0000D0, "Wrong size on Zombie_C_GetHeadDismembermentMesh");
static_assert(offsetof(Zombie_C_GetHeadDismembermentMesh, Param_Mesh) == 0x000000, "Member 'Zombie_C_GetHeadDismembermentMesh::Param_Mesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHeadDismembermentMesh, Temp_bool_Variable) == 0x000030, "Member 'Zombie_C_GetHeadDismembermentMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHeadDismembermentMesh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'Zombie_C_GetHeadDismembermentMesh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHeadDismembermentMesh, CallFunc_Array_Random_OutItem) == 0x000038, "Member 'Zombie_C_GetHeadDismembermentMesh::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHeadDismembermentMesh, CallFunc_Array_Random_OutIndex) == 0x000068, "Member 'Zombie_C_GetHeadDismembermentMesh::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHeadDismembermentMesh, CallFunc_Array_Get_Item) == 0x000070, "Member 'Zombie_C_GetHeadDismembermentMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHeadDismembermentMesh, K2Node_Select_Default) == 0x0000A0, "Member 'Zombie_C_GetHeadDismembermentMesh::K2Node_Select_Default' has a wrong offset!");

// Function Zombie.Zombie_C.GetHitAngle
// 0x0120 (0x0120 - 0x0000)
struct Zombie_C_GetHitAngle final
{
public:
	class AController*                            InstigatedBy;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        HitAngle;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sign;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Degrees;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DotProduct;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CrossProduct;                                      // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsZero_ReturnValue;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetHitAngle) == 0x000008, "Wrong alignment on Zombie_C_GetHitAngle");
static_assert(sizeof(Zombie_C_GetHitAngle) == 0x000120, "Wrong size on Zombie_C_GetHitAngle");
static_assert(offsetof(Zombie_C_GetHitAngle, InstigatedBy) == 0x000000, "Member 'Zombie_C_GetHitAngle::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, HitAngle) == 0x000008, "Member 'Zombie_C_GetHitAngle::HitAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, Sign) == 0x000010, "Member 'Zombie_C_GetHitAngle::Sign' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, Degrees) == 0x000018, "Member 'Zombie_C_GetHitAngle::Degrees' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, DotProduct) == 0x000020, "Member 'Zombie_C_GetHitAngle::DotProduct' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CrossProduct) == 0x000028, "Member 'Zombie_C_GetHitAngle::CrossProduct' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'Zombie_C_GetHitAngle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'Zombie_C_GetHitAngle::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'Zombie_C_GetHitAngle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Zombie_C_GetHitAngle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_DegAcos_ReturnValue) == 0x000070, "Member 'Zombie_C_GetHitAngle::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_BreakVector_X) == 0x000078, "Member 'Zombie_C_GetHitAngle::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_BreakVector_Y) == 0x000080, "Member 'Zombie_C_GetHitAngle::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_BreakVector_Z) == 0x000088, "Member 'Zombie_C_GetHitAngle::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_Vector_IsZero_ReturnValue) == 0x000090, "Member 'Zombie_C_GetHitAngle::CallFunc_Vector_IsZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_SignOfFloat_ReturnValue) == 0x000098, "Member 'Zombie_C_GetHitAngle::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000A0, "Member 'Zombie_C_GetHitAngle::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B8, "Member 'Zombie_C_GetHitAngle::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000D0, "Member 'Zombie_C_GetHitAngle::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_GetForwardVector_ReturnValue) == 0x0000E8, "Member 'Zombie_C_GetHitAngle::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_Cross_VectorVector_ReturnValue) == 0x000100, "Member 'Zombie_C_GetHitAngle::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetHitAngle, CallFunc_Dot_VectorVector_ReturnValue) == 0x000118, "Member 'Zombie_C_GetHitAngle::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.GetItemNamesForLoot
// 0x00D0 (0x00D0 - 0x0000)
struct Zombie_C_GetItemNamesForLoot final
{
public:
	class AController*                            InstigatedBy;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
	int32                                         QuestDropChance;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuest*                                 Quest;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestData_C*                           QuestData;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ItemNamesForLoot;                                  // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UQuest*>                         CallFunc_Set_ToArray_Result;                       // 0x0058(0x0010)(ReferenceParm)
	class UQuest*                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLinkedQuests_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UQuestCustomData*                 CallFunc_GetCustomData_ReturnValue;                // 0x0088(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UQuestData_C*                     K2Node_DynamicCast_AsQuest_Data;                   // 0x0090(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x00A0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Random_OutItem;                     // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetItemNamesForLoot) == 0x000008, "Wrong alignment on Zombie_C_GetItemNamesForLoot");
static_assert(sizeof(Zombie_C_GetItemNamesForLoot) == 0x0000D0, "Wrong size on Zombie_C_GetItemNamesForLoot");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, InstigatedBy) == 0x000000, "Member 'Zombie_C_GetItemNamesForLoot::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, ReturnValue) == 0x000008, "Member 'Zombie_C_GetItemNamesForLoot::ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, QuestDropChance) == 0x000018, "Member 'Zombie_C_GetItemNamesForLoot::QuestDropChance' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, Quest) == 0x000020, "Member 'Zombie_C_GetItemNamesForLoot::Quest' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, QuestData) == 0x000028, "Member 'Zombie_C_GetItemNamesForLoot::QuestData' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, ItemNamesForLoot) == 0x000030, "Member 'Zombie_C_GetItemNamesForLoot::ItemNamesForLoot' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, Temp_int_Array_Index_Variable) == 0x000040, "Member 'Zombie_C_GetItemNamesForLoot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, K2Node_DynamicCast_AsSurv_PC) == 0x000048, "Member 'Zombie_C_GetItemNamesForLoot::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Zombie_C_GetItemNamesForLoot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_Set_ToArray_Result) == 0x000058, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_Array_Get_Item) == 0x000068, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_CheckLinkedQuests_ReturnValue) == 0x000074, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_CheckLinkedQuests_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, K2Node_SwitchEnum_CmpSuccess) == 0x000075, "Member 'Zombie_C_GetItemNamesForLoot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'Zombie_C_GetItemNamesForLoot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_GetChanceIsLowerThan_ReturnValue) == 0x00007C, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_GetChanceIsLowerThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_Less_IntInt_ReturnValue) == 0x00007D, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_GetCustomData_ReturnValue) == 0x000088, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_GetCustomData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, K2Node_DynamicCast_AsQuest_Data) == 0x000090, "Member 'Zombie_C_GetItemNamesForLoot::K2Node_DynamicCast_AsQuest_Data' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'Zombie_C_GetItemNamesForLoot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_Map_Keys_Keys) == 0x0000A0, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_Array_Random_OutItem) == 0x0000B0, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_Array_Random_OutIndex) == 0x0000C0, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_Conv_StringToName_ReturnValue) == 0x0000C4, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetItemNamesForLoot, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'Zombie_C_GetItemNamesForLoot::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.GetLowerBodyDismembermentMesh
// 0x0190 (0x0190 - 0x0000)
struct Zombie_C_GetLowerBodyDismembermentMesh final
{
public:
	TSoftObjectPtr<class USkeletalMesh>           Param_Mesh;                                        // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item;                           // 0x0038(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_1;                         // 0x0070(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_2;                         // 0x00A0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_3;                         // 0x00D0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           K2Node_Select_Default;                             // 0x0100(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           K2Node_Select_Default_1;                           // 0x0130(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           K2Node_Select_Default_2;                           // 0x0160(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetLowerBodyDismembermentMesh) == 0x000008, "Wrong alignment on Zombie_C_GetLowerBodyDismembermentMesh");
static_assert(sizeof(Zombie_C_GetLowerBodyDismembermentMesh) == 0x000190, "Wrong size on Zombie_C_GetLowerBodyDismembermentMesh");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, Param_Mesh) == 0x000000, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::Param_Mesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, Temp_bool_Variable) == 0x000030, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, Temp_bool_Variable_1) == 0x000031, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000033, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000034, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, CallFunc_Array_Get_Item) == 0x000038, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, Temp_bool_Variable_2) == 0x000068, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, CallFunc_Array_Get_Item_2) == 0x0000A0, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, CallFunc_Array_Get_Item_3) == 0x0000D0, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, K2Node_Select_Default) == 0x000100, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, K2Node_Select_Default_1) == 0x000130, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetLowerBodyDismembermentMesh, K2Node_Select_Default_2) == 0x000160, "Member 'Zombie_C_GetLowerBodyDismembermentMesh::K2Node_Select_Default_2' has a wrong offset!");

// Function Zombie.Zombie_C.GetNavData
// 0x0080 (0x0080 - 0x0000)
struct Zombie_C_GetNavData final
{
public:
	TArray<class ARecastNavMesh*>                 RecastNavMeshes;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ARecastNavMesh*                         CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARecastNavMesh*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(Zombie_C_GetNavData) == 0x000008, "Wrong alignment on Zombie_C_GetNavData");
static_assert(sizeof(Zombie_C_GetNavData) == 0x000080, "Wrong size on Zombie_C_GetNavData");
static_assert(offsetof(Zombie_C_GetNavData, RecastNavMeshes) == 0x000000, "Member 'Zombie_C_GetNavData::RecastNavMeshes' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'Zombie_C_GetNavData::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, Temp_int_Array_Index_Variable) == 0x000014, "Member 'Zombie_C_GetNavData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'Zombie_C_GetNavData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'Zombie_C_GetNavData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Zombie_C_GetNavData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'Zombie_C_GetNavData::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'Zombie_C_GetNavData::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_Array_Get_Item) == 0x000040, "Member 'Zombie_C_GetNavData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Zombie_C_GetNavData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'Zombie_C_GetNavData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'Zombie_C_GetNavData::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'Zombie_C_GetNavData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000061, "Member 'Zombie_C_GetNavData::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000062, "Member 'Zombie_C_GetNavData::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'Zombie_C_GetNavData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'Zombie_C_GetNavData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetNavData, CallFunc_GetAllActorsOfClass_OutActors) == 0x000070, "Member 'Zombie_C_GetNavData::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function Zombie.Zombie_C.GetPseudoSurfaceTypeByBone
// 0x0024 (0x0024 - 0x0000)
struct Zombie_C_GetPseudoSurfaceTypeByBone final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              ResultSurface;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue_1;              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue_2;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue_3;              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue;             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetPseudoSurfaceTypeByBone) == 0x000004, "Wrong alignment on Zombie_C_GetPseudoSurfaceTypeByBone");
static_assert(sizeof(Zombie_C_GetPseudoSurfaceTypeByBone) == 0x000024, "Wrong size on Zombie_C_GetPseudoSurfaceTypeByBone");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, BoneName) == 0x000000, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, ResultSurface) == 0x000008, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::ResultSurface' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, Temp_bool_Variable) == 0x000009, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000A, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00000B, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00000C, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x00000D, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, Temp_byte_Variable) == 0x00000E, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, Temp_byte_Variable_1) == 0x00000F, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BoneIsChildOf_ReturnValue) == 0x000011, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BoneIsChildOf_ReturnValue_1) == 0x000013, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BoneIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BoneIsChildOf_ReturnValue_2) == 0x000014, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BoneIsChildOf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BoneIsChildOf_ReturnValue_3) == 0x000015, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BoneIsChildOf_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_GetCPPZombieType_ReturnValue) == 0x000016, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_GetCPPZombieType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BooleanOR_ReturnValue) == 0x000017, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BooleanOR_ReturnValue_1) == 0x000019, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BooleanOR_ReturnValue_2) == 0x00001B, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BooleanOR_ReturnValue_3) == 0x00001C, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BooleanOR_ReturnValue_4) == 0x00001D, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BooleanOR_ReturnValue_5) == 0x00001E, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BooleanOR_ReturnValue_6) == 0x00001F, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, CallFunc_BooleanOR_ReturnValue_7) == 0x000020, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetPseudoSurfaceTypeByBone, K2Node_Select_Default) == 0x000021, "Member 'Zombie_C_GetPseudoSurfaceTypeByBone::K2Node_Select_Default' has a wrong offset!");

// Function Zombie.Zombie_C.GetUpperBodyDismembermentMesh
// 0x0190 (0x0190 - 0x0000)
struct Zombie_C_GetUpperBodyDismembermentMesh final
{
public:
	TSoftObjectPtr<class USkeletalMesh>           Param_Mesh;                                        // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item;                           // 0x0038(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_1;                         // 0x0068(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_2;                         // 0x0098(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item_3;                         // 0x00D0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           K2Node_Select_Default;                             // 0x0100(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           K2Node_Select_Default_1;                           // 0x0130(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           K2Node_Select_Default_2;                           // 0x0160(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetUpperBodyDismembermentMesh) == 0x000008, "Wrong alignment on Zombie_C_GetUpperBodyDismembermentMesh");
static_assert(sizeof(Zombie_C_GetUpperBodyDismembermentMesh) == 0x000190, "Wrong size on Zombie_C_GetUpperBodyDismembermentMesh");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, Param_Mesh) == 0x000000, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::Param_Mesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, Temp_bool_Variable) == 0x000030, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, Temp_bool_Variable_1) == 0x000031, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, Temp_bool_Variable_2) == 0x000032, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, CallFunc_Array_Get_Item) == 0x000038, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C9, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000CA, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, CallFunc_Array_Get_Item_3) == 0x0000D0, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, K2Node_Select_Default) == 0x000100, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, K2Node_Select_Default_1) == 0x000130, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetUpperBodyDismembermentMesh, K2Node_Select_Default_2) == 0x000160, "Member 'Zombie_C_GetUpperBodyDismembermentMesh::K2Node_Select_Default_2' has a wrong offset!");

// Function Zombie.Zombie_C.GetWoundedMeshByBone
// 0x01E0 (0x01E0 - 0x0000)
struct Zombie_C_GetWoundedMeshByBone final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVertexDetectAndPaintFundementalsStruct WoundToArray;                                      // 0x0008(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USkeletalMeshComponent*                 WoundedMesh;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_WoundInfo                           K2Node_MakeStruct_F_WoundInfo;                     // 0x0130(0x0098)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue_1;              // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetWoundedMeshByBone) == 0x000010, "Wrong alignment on Zombie_C_GetWoundedMeshByBone");
static_assert(sizeof(Zombie_C_GetWoundedMeshByBone) == 0x0001E0, "Wrong size on Zombie_C_GetWoundedMeshByBone");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, BoneName) == 0x000000, "Member 'Zombie_C_GetWoundedMeshByBone::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, WoundToArray) == 0x000008, "Member 'Zombie_C_GetWoundedMeshByBone::WoundToArray' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, WoundedMesh) == 0x000070, "Member 'Zombie_C_GetWoundedMeshByBone::WoundedMesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, CallFunc_GetSocketTransform_ReturnValue) == 0x000080, "Member 'Zombie_C_GetWoundedMeshByBone::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'Zombie_C_GetWoundedMeshByBone::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, CallFunc_BreakTransform_Location) == 0x0000E8, "Member 'Zombie_C_GetWoundedMeshByBone::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, CallFunc_BreakTransform_Rotation) == 0x000100, "Member 'Zombie_C_GetWoundedMeshByBone::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, CallFunc_BreakTransform_Scale) == 0x000118, "Member 'Zombie_C_GetWoundedMeshByBone::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, K2Node_MakeStruct_F_WoundInfo) == 0x000130, "Member 'Zombie_C_GetWoundedMeshByBone::K2Node_MakeStruct_F_WoundInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, CallFunc_Array_Add_ReturnValue_1) == 0x0001C8, "Member 'Zombie_C_GetWoundedMeshByBone::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, CallFunc_Array_Add_ReturnValue_2) == 0x0001CC, "Member 'Zombie_C_GetWoundedMeshByBone::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, CallFunc_Array_Add_ReturnValue_3) == 0x0001D0, "Member 'Zombie_C_GetWoundedMeshByBone::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, CallFunc_BoneIsChildOf_ReturnValue) == 0x0001D4, "Member 'Zombie_C_GetWoundedMeshByBone::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetWoundedMeshByBone, CallFunc_BoneIsChildOf_ReturnValue_1) == 0x0001D5, "Member 'Zombie_C_GetWoundedMeshByBone::CallFunc_BoneIsChildOf_ReturnValue_1' has a wrong offset!");

// Function Zombie.Zombie_C.GetXP
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_GetXP final
{
public:
	double                                        XP;                                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_GetXP) == 0x000008, "Wrong alignment on Zombie_C_GetXP");
static_assert(sizeof(Zombie_C_GetXP) == 0x000010, "Wrong size on Zombie_C_GetXP");
static_assert(offsetof(Zombie_C_GetXP, XP) == 0x000000, "Member 'Zombie_C_GetXP::XP' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetXP, CallFunc_GetCPPZombieType_ReturnValue) == 0x000008, "Member 'Zombie_C_GetXP::CallFunc_GetCPPZombieType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_GetXP, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'Zombie_C_GetXP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Zombie.Zombie_C.HeadDamageDismemberment
// 0x0088 (0x0088 - 0x0000)
struct Zombie_C_HeadDamageDismemberment final
{
public:
	bool                                          EnableHeadDismemberment;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           Param_Mesh;                                        // 0x0008(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         HeadDismembmerment;                                // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USkeletalMesh>           CallFunc_Array_Get_Item;                           // 0x0050(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_HeadDamageDismemberment) == 0x000008, "Wrong alignment on Zombie_C_HeadDamageDismemberment");
static_assert(sizeof(Zombie_C_HeadDamageDismemberment) == 0x000088, "Wrong size on Zombie_C_HeadDamageDismemberment");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, EnableHeadDismemberment) == 0x000000, "Member 'Zombie_C_HeadDamageDismemberment::EnableHeadDismemberment' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, Param_Mesh) == 0x000008, "Member 'Zombie_C_HeadDamageDismemberment::Param_Mesh' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, HeadDismembmerment) == 0x000038, "Member 'Zombie_C_HeadDamageDismemberment::HeadDismembmerment' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, CallFunc_HasAuthority_ReturnValue) == 0x00003C, "Member 'Zombie_C_HeadDamageDismemberment::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000040, "Member 'Zombie_C_HeadDamageDismemberment::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000044, "Member 'Zombie_C_HeadDamageDismemberment::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'Zombie_C_HeadDamageDismemberment::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000046, "Member 'Zombie_C_HeadDamageDismemberment::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, CallFunc_BooleanAND_ReturnValue) == 0x000047, "Member 'Zombie_C_HeadDamageDismemberment::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000048, "Member 'Zombie_C_HeadDamageDismemberment::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, CallFunc_Array_Get_Item) == 0x000050, "Member 'Zombie_C_HeadDamageDismemberment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageDismemberment, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000080, "Member 'Zombie_C_HeadDamageDismemberment::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function Zombie.Zombie_C.HeadDamageHandler
// 0x0130 (0x0130 - 0x0000)
struct Zombie_C_HeadDamageHandler final
{
public:
	class AActor*                                 DamageCauser;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	double                                        HitAngle;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstagatedBy;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0038(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        Damage;                                            // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Param_WeaponType;                                  // 0x0128(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_HeadDamageHandler) == 0x000008, "Wrong alignment on Zombie_C_HeadDamageHandler");
static_assert(sizeof(Zombie_C_HeadDamageHandler) == 0x000130, "Wrong size on Zombie_C_HeadDamageHandler");
static_assert(offsetof(Zombie_C_HeadDamageHandler, DamageCauser) == 0x000000, "Member 'Zombie_C_HeadDamageHandler::DamageCauser' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageHandler, HitAngle) == 0x000008, "Member 'Zombie_C_HeadDamageHandler::HitAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageHandler, HitLocation) == 0x000010, "Member 'Zombie_C_HeadDamageHandler::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageHandler, BoneName) == 0x000028, "Member 'Zombie_C_HeadDamageHandler::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageHandler, InstagatedBy) == 0x000030, "Member 'Zombie_C_HeadDamageHandler::InstagatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageHandler, HitResult) == 0x000038, "Member 'Zombie_C_HeadDamageHandler::HitResult' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageHandler, Damage) == 0x000120, "Member 'Zombie_C_HeadDamageHandler::Damage' has a wrong offset!");
static_assert(offsetof(Zombie_C_HeadDamageHandler, Param_WeaponType) == 0x000128, "Member 'Zombie_C_HeadDamageHandler::Param_WeaponType' has a wrong offset!");

// Function Zombie.Zombie_C.HitRegistered__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Zombie_C_HitRegistered__DelegateSignature final
{
public:
	bool                                          Door;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_HitRegistered__DelegateSignature) == 0x000001, "Wrong alignment on Zombie_C_HitRegistered__DelegateSignature");
static_assert(sizeof(Zombie_C_HitRegistered__DelegateSignature) == 0x000001, "Wrong size on Zombie_C_HitRegistered__DelegateSignature");
static_assert(offsetof(Zombie_C_HitRegistered__DelegateSignature, Door) == 0x000000, "Member 'Zombie_C_HitRegistered__DelegateSignature::Door' has a wrong offset!");

// Function Zombie.Zombie_C.Initialize
// 0x0078 (0x0078 - 0x0000)
struct Zombie_C_Initialize final
{
public:
	int32                                         Param_MeshType;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               AnimType;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_ZombieManagerIndex;                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EZombieAnimType                               Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpecialZombie_IsSpecial;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               K2Node_Select_Default;                             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNavAvoidanceMask                      K2Node_MakeStruct_NavAvoidanceMask;                // 0x0074(0x0004)(NoDestructor)
};
static_assert(alignof(Zombie_C_Initialize) == 0x000008, "Wrong alignment on Zombie_C_Initialize");
static_assert(sizeof(Zombie_C_Initialize) == 0x000078, "Wrong size on Zombie_C_Initialize");
static_assert(offsetof(Zombie_C_Initialize, Param_MeshType) == 0x000000, "Member 'Zombie_C_Initialize::Param_MeshType' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, Type) == 0x000004, "Member 'Zombie_C_Initialize::Type' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, AnimType) == 0x000005, "Member 'Zombie_C_Initialize::AnimType' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, Param_ZombieManagerIndex) == 0x000008, "Member 'Zombie_C_Initialize::Param_ZombieManagerIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, Location) == 0x000010, "Member 'Zombie_C_Initialize::Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, Rotation) == 0x000028, "Member 'Zombie_C_Initialize::Rotation' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, Temp_byte_Variable) == 0x000040, "Member 'Zombie_C_Initialize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, CallFunc_K2_SetTimer_ReturnValue) == 0x000048, "Member 'Zombie_C_Initialize::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, CallFunc_HasAuthority_ReturnValue) == 0x000050, "Member 'Zombie_C_Initialize::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, CallFunc_IsSpecialZombie_IsSpecial) == 0x000051, "Member 'Zombie_C_Initialize::CallFunc_IsSpecialZombie_IsSpecial' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'Zombie_C_Initialize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'Zombie_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, Temp_bool_Variable) == 0x000064, "Member 'Zombie_C_Initialize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'Zombie_C_Initialize::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, CallFunc_GetCPPZombieType_ReturnValue) == 0x000070, "Member 'Zombie_C_Initialize::CallFunc_GetCPPZombieType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000071, "Member 'Zombie_C_Initialize::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, K2Node_Select_Default) == 0x000072, "Member 'Zombie_C_Initialize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Zombie_C_Initialize, K2Node_MakeStruct_NavAvoidanceMask) == 0x000074, "Member 'Zombie_C_Initialize::K2Node_MakeStruct_NavAvoidanceMask' has a wrong offset!");

// Function Zombie.Zombie_C.InitializeOnBeginPlayClient
// 0x0028 (0x0028 - 0x0000)
struct Zombie_C_InitializeOnBeginPlayClient final
{
public:
	bool                                          CallFunc_IsSpecialZombie_IsSpecial;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FNavAvoidanceMask                      K2Node_MakeStruct_NavAvoidanceMask;                // 0x0020(0x0004)(NoDestructor)
};
static_assert(alignof(Zombie_C_InitializeOnBeginPlayClient) == 0x000008, "Wrong alignment on Zombie_C_InitializeOnBeginPlayClient");
static_assert(sizeof(Zombie_C_InitializeOnBeginPlayClient) == 0x000028, "Wrong size on Zombie_C_InitializeOnBeginPlayClient");
static_assert(offsetof(Zombie_C_InitializeOnBeginPlayClient, CallFunc_IsSpecialZombie_IsSpecial) == 0x000000, "Member 'Zombie_C_InitializeOnBeginPlayClient::CallFunc_IsSpecialZombie_IsSpecial' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeOnBeginPlayClient, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Zombie_C_InitializeOnBeginPlayClient::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeOnBeginPlayClient, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Zombie_C_InitializeOnBeginPlayClient::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeOnBeginPlayClient, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'Zombie_C_InitializeOnBeginPlayClient::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeOnBeginPlayClient, K2Node_MakeStruct_NavAvoidanceMask) == 0x000020, "Member 'Zombie_C_InitializeOnBeginPlayClient::K2Node_MakeStruct_NavAvoidanceMask' has a wrong offset!");

// Function Zombie.Zombie_C.InitializeZombie
// 0x0040 (0x0040 - 0x0000)
struct Zombie_C_InitializeZombie final
{
public:
	int32                                         Param_MeshType;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               AnimType;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_ZombieManagerIndex;                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Zombie_C_InitializeZombie) == 0x000008, "Wrong alignment on Zombie_C_InitializeZombie");
static_assert(sizeof(Zombie_C_InitializeZombie) == 0x000040, "Wrong size on Zombie_C_InitializeZombie");
static_assert(offsetof(Zombie_C_InitializeZombie, Param_MeshType) == 0x000000, "Member 'Zombie_C_InitializeZombie::Param_MeshType' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie, Type) == 0x000004, "Member 'Zombie_C_InitializeZombie::Type' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie, AnimType) == 0x000005, "Member 'Zombie_C_InitializeZombie::AnimType' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie, Param_ZombieManagerIndex) == 0x000008, "Member 'Zombie_C_InitializeZombie::Param_ZombieManagerIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie, Location) == 0x000010, "Member 'Zombie_C_InitializeZombie::Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie, Rotation) == 0x000028, "Member 'Zombie_C_InitializeZombie::Rotation' has a wrong offset!");

// Function Zombie.Zombie_C.InitializeZombie_RPC
// 0x00B0 (0x00B0 - 0x0000)
struct Zombie_C_InitializeZombie_RPC final
{
public:
	int32                                         Param_MeshType;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               AnimType;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_ZombieManagerIndex;                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TSet<class UQuest*>                           Quests;                                            // 0x0040(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	const class ABP_Door_C*                       Param_ConnectedDoor;                               // 0x0090(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TArray<class ATargetPoint*>                   PatrollingPath;                                    // 0x0098(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Param_bIsCityZombie;                               // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_InitializeZombie_RPC) == 0x000008, "Wrong alignment on Zombie_C_InitializeZombie_RPC");
static_assert(sizeof(Zombie_C_InitializeZombie_RPC) == 0x0000B0, "Wrong size on Zombie_C_InitializeZombie_RPC");
static_assert(offsetof(Zombie_C_InitializeZombie_RPC, Param_MeshType) == 0x000000, "Member 'Zombie_C_InitializeZombie_RPC::Param_MeshType' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie_RPC, Type) == 0x000004, "Member 'Zombie_C_InitializeZombie_RPC::Type' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie_RPC, AnimType) == 0x000005, "Member 'Zombie_C_InitializeZombie_RPC::AnimType' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie_RPC, Param_ZombieManagerIndex) == 0x000008, "Member 'Zombie_C_InitializeZombie_RPC::Param_ZombieManagerIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie_RPC, Location) == 0x000010, "Member 'Zombie_C_InitializeZombie_RPC::Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie_RPC, Rotation) == 0x000028, "Member 'Zombie_C_InitializeZombie_RPC::Rotation' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie_RPC, Quests) == 0x000040, "Member 'Zombie_C_InitializeZombie_RPC::Quests' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie_RPC, Param_ConnectedDoor) == 0x000090, "Member 'Zombie_C_InitializeZombie_RPC::Param_ConnectedDoor' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie_RPC, PatrollingPath) == 0x000098, "Member 'Zombie_C_InitializeZombie_RPC::PatrollingPath' has a wrong offset!");
static_assert(offsetof(Zombie_C_InitializeZombie_RPC, Param_bIsCityZombie) == 0x0000A8, "Member 'Zombie_C_InitializeZombie_RPC::Param_bIsCityZombie' has a wrong offset!");

// Function Zombie.Zombie_C.IsBandit?
// 0x0001 (0x0001 - 0x0000)
struct Zombie_C_IsBandit_ final
{
public:
	bool                                          Param_IsBandit_;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_IsBandit_) == 0x000001, "Wrong alignment on Zombie_C_IsBandit_");
static_assert(sizeof(Zombie_C_IsBandit_) == 0x000001, "Wrong size on Zombie_C_IsBandit_");
static_assert(offsetof(Zombie_C_IsBandit_, Param_IsBandit_) == 0x000000, "Member 'Zombie_C_IsBandit_::Param_IsBandit_' has a wrong offset!");

// Function Zombie.Zombie_C.IsDead?
// 0x0001 (0x0001 - 0x0000)
struct Zombie_C_IsDead_ final
{
public:
	bool                                          Param_IsDead_;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_IsDead_) == 0x000001, "Wrong alignment on Zombie_C_IsDead_");
static_assert(sizeof(Zombie_C_IsDead_) == 0x000001, "Wrong size on Zombie_C_IsDead_");
static_assert(offsetof(Zombie_C_IsDead_, Param_IsDead_) == 0x000000, "Member 'Zombie_C_IsDead_::Param_IsDead_' has a wrong offset!");

// Function Zombie.Zombie_C.IsPlayingAttackMontage
// 0x0001 (0x0001 - 0x0000)
struct Zombie_C_IsPlayingAttackMontage final
{
public:
	bool                                          IsPlaying_;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_IsPlayingAttackMontage) == 0x000001, "Wrong alignment on Zombie_C_IsPlayingAttackMontage");
static_assert(sizeof(Zombie_C_IsPlayingAttackMontage) == 0x000001, "Wrong size on Zombie_C_IsPlayingAttackMontage");
static_assert(offsetof(Zombie_C_IsPlayingAttackMontage, IsPlaying_) == 0x000000, "Member 'Zombie_C_IsPlayingAttackMontage::IsPlaying_' has a wrong offset!");

// Function Zombie.Zombie_C.IsSpecialZombie
// 0x0003 (0x0003 - 0x0000)
struct Zombie_C_IsSpecialZombie final
{
public:
	bool                                          IsSpecial;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieAnimType                               CallFunc_GetZombieAnimType_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_IsSpecialZombie) == 0x000001, "Wrong alignment on Zombie_C_IsSpecialZombie");
static_assert(sizeof(Zombie_C_IsSpecialZombie) == 0x000003, "Wrong size on Zombie_C_IsSpecialZombie");
static_assert(offsetof(Zombie_C_IsSpecialZombie, IsSpecial) == 0x000000, "Member 'Zombie_C_IsSpecialZombie::IsSpecial' has a wrong offset!");
static_assert(offsetof(Zombie_C_IsSpecialZombie, CallFunc_GetZombieAnimType_ReturnValue) == 0x000001, "Member 'Zombie_C_IsSpecialZombie::CallFunc_GetZombieAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_IsSpecialZombie, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Zombie_C_IsSpecialZombie::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.IsZombie?
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_IsZombie_ final
{
public:
	bool                                          Param_IsZombie_;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Zombie;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_IsZombie_) == 0x000008, "Wrong alignment on Zombie_C_IsZombie_");
static_assert(sizeof(Zombie_C_IsZombie_) == 0x000010, "Wrong size on Zombie_C_IsZombie_");
static_assert(offsetof(Zombie_C_IsZombie_, Param_IsZombie_) == 0x000000, "Member 'Zombie_C_IsZombie_::Param_IsZombie_' has a wrong offset!");
static_assert(offsetof(Zombie_C_IsZombie_, Zombie) == 0x000008, "Member 'Zombie_C_IsZombie_::Zombie' has a wrong offset!");

// Function Zombie.Zombie_C.IsZombie?!
// 0x0001 (0x0001 - 0x0000)
struct Zombie_C_IsZombie__ final
{
public:
	bool                                          IsZombie_;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_IsZombie__) == 0x000001, "Wrong alignment on Zombie_C_IsZombie__");
static_assert(sizeof(Zombie_C_IsZombie__) == 0x000001, "Wrong size on Zombie_C_IsZombie__");
static_assert(offsetof(Zombie_C_IsZombie__, IsZombie_) == 0x000000, "Member 'Zombie_C_IsZombie__::IsZombie_' has a wrong offset!");

// Function Zombie.Zombie_C.KillByZombieManager
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_KillByZombieManager final
{
public:
	const class AController*                      InstigatedBy;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_KillByZombieManager) == 0x000008, "Wrong alignment on Zombie_C_KillByZombieManager");
static_assert(sizeof(Zombie_C_KillByZombieManager) == 0x000008, "Wrong size on Zombie_C_KillByZombieManager");
static_assert(offsetof(Zombie_C_KillByZombieManager, InstigatedBy) == 0x000000, "Member 'Zombie_C_KillByZombieManager::InstigatedBy' has a wrong offset!");

// Function Zombie.Zombie_C.LoadSoundsFunction
// 0x0298 (0x0298 - 0x0000)
struct Zombie_C_LoadSoundsFunction final
{
public:
	struct FF_ZombieSounds                        Sounds;                                            // 0x0000(0x0120)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpecialZombie_IsSpecial;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UFMODEvent>              CallFunc_Array_Get_Item;                           // 0x0128(0x0030)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_ZombieSounds                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0170(0x0120)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_LoadSoundsFunction) == 0x000008, "Wrong alignment on Zombie_C_LoadSoundsFunction");
static_assert(sizeof(Zombie_C_LoadSoundsFunction) == 0x000298, "Wrong size on Zombie_C_LoadSoundsFunction");
static_assert(offsetof(Zombie_C_LoadSoundsFunction, Sounds) == 0x000000, "Member 'Zombie_C_LoadSoundsFunction::Sounds' has a wrong offset!");
static_assert(offsetof(Zombie_C_LoadSoundsFunction, CallFunc_IsSpecialZombie_IsSpecial) == 0x000120, "Member 'Zombie_C_LoadSoundsFunction::CallFunc_IsSpecialZombie_IsSpecial' has a wrong offset!");
static_assert(offsetof(Zombie_C_LoadSoundsFunction, CallFunc_SelectInt_ReturnValue) == 0x000124, "Member 'Zombie_C_LoadSoundsFunction::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_LoadSoundsFunction, CallFunc_Array_Get_Item) == 0x000128, "Member 'Zombie_C_LoadSoundsFunction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_LoadSoundsFunction, CallFunc_Conv_IntToString_ReturnValue) == 0x000158, "Member 'Zombie_C_LoadSoundsFunction::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_LoadSoundsFunction, CallFunc_Conv_StringToName_ReturnValue) == 0x000168, "Member 'Zombie_C_LoadSoundsFunction::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_LoadSoundsFunction, CallFunc_GetDataTableRowFromName_OutRow) == 0x000170, "Member 'Zombie_C_LoadSoundsFunction::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Zombie_C_LoadSoundsFunction, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000290, "Member 'Zombie_C_LoadSoundsFunction::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.MakeBodyBleeding
// 0x0170 (0x0170 - 0x0000)
struct Zombie_C_MakeBodyBleeding final
{
public:
	class UDecalComponent*                        SpawnedDecal;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Adjustment;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnDecalStructure                   SpawnDecalResult;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class FName>                           DismemberedBones;                                  // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnDecalUnderLimb_SpawnedDecal;         // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_MakeBodyBleeding) == 0x000010, "Wrong alignment on Zombie_C_MakeBodyBleeding");
static_assert(sizeof(Zombie_C_MakeBodyBleeding) == 0x000170, "Wrong size on Zombie_C_MakeBodyBleeding");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, SpawnedDecal) == 0x000000, "Member 'Zombie_C_MakeBodyBleeding::SpawnedDecal' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, Adjustment) == 0x000008, "Member 'Zombie_C_MakeBodyBleeding::Adjustment' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, SpawnDecalResult) == 0x000010, "Member 'Zombie_C_MakeBodyBleeding::SpawnDecalResult' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, DismemberedBones) == 0x000020, "Member 'Zombie_C_MakeBodyBleeding::DismemberedBones' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, Temp_int_Array_Index_Variable) == 0x000030, "Member 'Zombie_C_MakeBodyBleeding::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_HasAuthority_ReturnValue) == 0x000034, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000038, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_Array_Get_Item) == 0x000054, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'Zombie_C_MakeBodyBleeding::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_GetSocketTransform_ReturnValue) == 0x000070, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_GetForwardVector_ReturnValue) == 0x000120, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000138, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_Add_IntInt_ReturnValue) == 0x000150, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_SpawnDecalUnderLimb_SpawnedDecal) == 0x000158, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_SpawnDecalUnderLimb_SpawnedDecal' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeBodyBleeding, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000160, "Member 'Zombie_C_MakeBodyBleeding::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.MakeNoiseOnScream
// 0x0058 (0x0058 - 0x0000)
struct Zombie_C_MakeNoiseOnScream final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_MakeNoiseOnScream) == 0x000008, "Wrong alignment on Zombie_C_MakeNoiseOnScream");
static_assert(sizeof(Zombie_C_MakeNoiseOnScream) == 0x000058, "Wrong size on Zombie_C_MakeNoiseOnScream");
static_assert(offsetof(Zombie_C_MakeNoiseOnScream, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'Zombie_C_MakeNoiseOnScream::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeNoiseOnScream, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000018, "Member 'Zombie_C_MakeNoiseOnScream::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeNoiseOnScream, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Zombie_C_MakeNoiseOnScream::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeNoiseOnScream, K2Node_DynamicCast_AsPawn) == 0x000038, "Member 'Zombie_C_MakeNoiseOnScream::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeNoiseOnScream, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Zombie_C_MakeNoiseOnScream::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeNoiseOnScream, K2Node_DynamicCast_AsSurvival_Player) == 0x000048, "Member 'Zombie_C_MakeNoiseOnScream::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeNoiseOnScream, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'Zombie_C_MakeNoiseOnScream::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_MakeNoiseOnScream, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'Zombie_C_MakeNoiseOnScream::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Zombie.Zombie_C.Multicast AttachLootPoint
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_Multicast_AttachLootPoint final
{
public:
	class AActor*                                 LootPoint;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Multicast_AttachLootPoint) == 0x000008, "Wrong alignment on Zombie_C_Multicast_AttachLootPoint");
static_assert(sizeof(Zombie_C_Multicast_AttachLootPoint) == 0x000008, "Wrong size on Zombie_C_Multicast_AttachLootPoint");
static_assert(offsetof(Zombie_C_Multicast_AttachLootPoint, LootPoint) == 0x000000, "Member 'Zombie_C_Multicast_AttachLootPoint::LootPoint' has a wrong offset!");

// Function Zombie.Zombie_C.Multicast CarHitEffects
// 0x0030 (0x0030 - 0x0000)
struct Zombie_C_Multicast_CarHitEffects final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Multicast_CarHitEffects) == 0x000008, "Wrong alignment on Zombie_C_Multicast_CarHitEffects");
static_assert(sizeof(Zombie_C_Multicast_CarHitEffects) == 0x000030, "Wrong size on Zombie_C_Multicast_CarHitEffects");
static_assert(offsetof(Zombie_C_Multicast_CarHitEffects, HitLocation) == 0x000000, "Member 'Zombie_C_Multicast_CarHitEffects::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_Multicast_CarHitEffects, ImpactNormal) == 0x000018, "Member 'Zombie_C_Multicast_CarHitEffects::ImpactNormal' has a wrong offset!");

// Function Zombie.Zombie_C.Multicast SetMovementSettings
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_Multicast_SetMovementSettings final
{
public:
	Survival::EMovementType                       CPPMovementType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SprintMaxSpeed;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SprintAcceleration;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Multicast_SetMovementSettings) == 0x000008, "Wrong alignment on Zombie_C_Multicast_SetMovementSettings");
static_assert(sizeof(Zombie_C_Multicast_SetMovementSettings) == 0x000018, "Wrong size on Zombie_C_Multicast_SetMovementSettings");
static_assert(offsetof(Zombie_C_Multicast_SetMovementSettings, CPPMovementType) == 0x000000, "Member 'Zombie_C_Multicast_SetMovementSettings::CPPMovementType' has a wrong offset!");
static_assert(offsetof(Zombie_C_Multicast_SetMovementSettings, SprintMaxSpeed) == 0x000008, "Member 'Zombie_C_Multicast_SetMovementSettings::SprintMaxSpeed' has a wrong offset!");
static_assert(offsetof(Zombie_C_Multicast_SetMovementSettings, SprintAcceleration) == 0x000010, "Member 'Zombie_C_Multicast_SetMovementSettings::SprintAcceleration' has a wrong offset!");

// Function Zombie.Zombie_C.MulticastAddVertexBulletHole
// 0x00E8 (0x00E8 - 0x0000)
struct Zombie_C_MulticastAddVertexBulletHole final
{
public:
	struct FHitResult                             HitInfo;                                           // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Zombie_C_MulticastAddVertexBulletHole) == 0x000008, "Wrong alignment on Zombie_C_MulticastAddVertexBulletHole");
static_assert(sizeof(Zombie_C_MulticastAddVertexBulletHole) == 0x0000E8, "Wrong size on Zombie_C_MulticastAddVertexBulletHole");
static_assert(offsetof(Zombie_C_MulticastAddVertexBulletHole, HitInfo) == 0x000000, "Member 'Zombie_C_MulticastAddVertexBulletHole::HitInfo' has a wrong offset!");

// Function Zombie.Zombie_C.MulticastDismemberment
// 0x00F8 (0x00F8 - 0x0000)
struct Zombie_C_MulticastDismemberment final
{
public:
	struct FHitResult                             HitInfo;                                           // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EDismembermentPart                            DismembermentPart;                                 // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Param_WeaponType;                                  // 0x00E9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_FullHeadDismemberment;                       // 0x00EA(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoubleDismemberment;                               // 0x00EB(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Damage;                                            // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_MulticastDismemberment) == 0x000008, "Wrong alignment on Zombie_C_MulticastDismemberment");
static_assert(sizeof(Zombie_C_MulticastDismemberment) == 0x0000F8, "Wrong size on Zombie_C_MulticastDismemberment");
static_assert(offsetof(Zombie_C_MulticastDismemberment, HitInfo) == 0x000000, "Member 'Zombie_C_MulticastDismemberment::HitInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastDismemberment, DismembermentPart) == 0x0000E8, "Member 'Zombie_C_MulticastDismemberment::DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastDismemberment, Param_WeaponType) == 0x0000E9, "Member 'Zombie_C_MulticastDismemberment::Param_WeaponType' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastDismemberment, Param_FullHeadDismemberment) == 0x0000EA, "Member 'Zombie_C_MulticastDismemberment::Param_FullHeadDismemberment' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastDismemberment, DoubleDismemberment) == 0x0000EB, "Member 'Zombie_C_MulticastDismemberment::DoubleDismemberment' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastDismemberment, Damage) == 0x0000F0, "Member 'Zombie_C_MulticastDismemberment::Damage' has a wrong offset!");

// Function Zombie.Zombie_C.MulticastFullDismemberment
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_MulticastFullDismemberment final
{
public:
	struct FVector                                Param_LimbImpulse;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_MulticastFullDismemberment) == 0x000008, "Wrong alignment on Zombie_C_MulticastFullDismemberment");
static_assert(sizeof(Zombie_C_MulticastFullDismemberment) == 0x000018, "Wrong size on Zombie_C_MulticastFullDismemberment");
static_assert(offsetof(Zombie_C_MulticastFullDismemberment, Param_LimbImpulse) == 0x000000, "Member 'Zombie_C_MulticastFullDismemberment::Param_LimbImpulse' has a wrong offset!");

// Function Zombie.Zombie_C.MulticastPlayAdditiveDamage
// 0x0004 (0x0004 - 0x0000)
struct Zombie_C_MulticastPlayAdditiveDamage final
{
public:
	int32                                         MontageType;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_MulticastPlayAdditiveDamage) == 0x000004, "Wrong alignment on Zombie_C_MulticastPlayAdditiveDamage");
static_assert(sizeof(Zombie_C_MulticastPlayAdditiveDamage) == 0x000004, "Wrong size on Zombie_C_MulticastPlayAdditiveDamage");
static_assert(offsetof(Zombie_C_MulticastPlayAdditiveDamage, MontageType) == 0x000000, "Member 'Zombie_C_MulticastPlayAdditiveDamage::MontageType' has a wrong offset!");

// Function Zombie.Zombie_C.MulticastPlayAgressiveMontage
// 0x0038 (0x0038 - 0x0000)
struct Zombie_C_MulticastPlayAgressiveMontage final
{
public:
	TSoftObjectPtr<class UAnimMontage>            AgressiveMontageToPlay;                            // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_MulticastPlayAgressiveMontage) == 0x000008, "Wrong alignment on Zombie_C_MulticastPlayAgressiveMontage");
static_assert(sizeof(Zombie_C_MulticastPlayAgressiveMontage) == 0x000038, "Wrong size on Zombie_C_MulticastPlayAgressiveMontage");
static_assert(offsetof(Zombie_C_MulticastPlayAgressiveMontage, AgressiveMontageToPlay) == 0x000000, "Member 'Zombie_C_MulticastPlayAgressiveMontage::AgressiveMontageToPlay' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastPlayAgressiveMontage, Angle) == 0x000030, "Member 'Zombie_C_MulticastPlayAgressiveMontage::Angle' has a wrong offset!");

// Function Zombie.Zombie_C.MulticastPlayDamagedMontage
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_MulticastPlayDamagedMontage final
{
public:
	double                                        AttackAngle;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_OneShotSWATAnimation;                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitByKnife;                                        // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_MulticastPlayDamagedMontage) == 0x000008, "Wrong alignment on Zombie_C_MulticastPlayDamagedMontage");
static_assert(sizeof(Zombie_C_MulticastPlayDamagedMontage) == 0x000010, "Wrong size on Zombie_C_MulticastPlayDamagedMontage");
static_assert(offsetof(Zombie_C_MulticastPlayDamagedMontage, AttackAngle) == 0x000000, "Member 'Zombie_C_MulticastPlayDamagedMontage::AttackAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastPlayDamagedMontage, Param_OneShotSWATAnimation) == 0x000008, "Member 'Zombie_C_MulticastPlayDamagedMontage::Param_OneShotSWATAnimation' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastPlayDamagedMontage, HitByKnife) == 0x000009, "Member 'Zombie_C_MulticastPlayDamagedMontage::HitByKnife' has a wrong offset!");

// Function Zombie.Zombie_C.MulticastZombieDeath
// 0x0040 (0x0040 - 0x0000)
struct Zombie_C_MulticastZombieDeath final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DeathImpulse;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiedByGrenade;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiedByCar;                                         // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KilledInHead;                                      // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeadByTimer;                                       // 0x003B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_MulticastZombieDeath) == 0x000008, "Wrong alignment on Zombie_C_MulticastZombieDeath");
static_assert(sizeof(Zombie_C_MulticastZombieDeath) == 0x000040, "Wrong size on Zombie_C_MulticastZombieDeath");
static_assert(offsetof(Zombie_C_MulticastZombieDeath, HitLocation) == 0x000000, "Member 'Zombie_C_MulticastZombieDeath::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastZombieDeath, DeathImpulse) == 0x000018, "Member 'Zombie_C_MulticastZombieDeath::DeathImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastZombieDeath, BoneName) == 0x000030, "Member 'Zombie_C_MulticastZombieDeath::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastZombieDeath, DiedByGrenade) == 0x000038, "Member 'Zombie_C_MulticastZombieDeath::DiedByGrenade' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastZombieDeath, DiedByCar) == 0x000039, "Member 'Zombie_C_MulticastZombieDeath::DiedByCar' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastZombieDeath, KilledInHead) == 0x00003A, "Member 'Zombie_C_MulticastZombieDeath::KilledInHead' has a wrong offset!");
static_assert(offsetof(Zombie_C_MulticastZombieDeath, DeadByTimer) == 0x00003B, "Member 'Zombie_C_MulticastZombieDeath::DeadByTimer' has a wrong offset!");

// Function Zombie.Zombie_C.NightZombieParams
// 0x0030 (0x0030 - 0x0000)
struct Zombie_C_NightZombieParams final
{
public:
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_ZombieFinalCopy_Night_C*           K2Node_DynamicCast_AsABP_Zombie_Final_Copy_Night;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_NightZombieParams) == 0x000008, "Wrong alignment on Zombie_C_NightZombieParams");
static_assert(sizeof(Zombie_C_NightZombieParams) == 0x000030, "Wrong size on Zombie_C_NightZombieParams");
static_assert(offsetof(Zombie_C_NightZombieParams, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000000, "Member 'Zombie_C_NightZombieParams::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_NightZombieParams, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'Zombie_C_NightZombieParams::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_NightZombieParams, K2Node_DynamicCast_AsABP_Zombie_Final_Copy_Night) == 0x000010, "Member 'Zombie_C_NightZombieParams::K2Node_DynamicCast_AsABP_Zombie_Final_Copy_Night' has a wrong offset!");
static_assert(offsetof(Zombie_C_NightZombieParams, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Zombie_C_NightZombieParams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_NightZombieParams, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'Zombie_C_NightZombieParams::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.On Completed Damage Montage
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_On_Completed_Damage_Montage final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_On_Completed_Damage_Montage) == 0x000008, "Wrong alignment on Zombie_C_On_Completed_Damage_Montage");
static_assert(sizeof(Zombie_C_On_Completed_Damage_Montage) == 0x000018, "Wrong size on Zombie_C_On_Completed_Damage_Montage");
static_assert(offsetof(Zombie_C_On_Completed_Damage_Montage, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Zombie_C_On_Completed_Damage_Montage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Completed_Damage_Montage, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'Zombie_C_On_Completed_Damage_Montage::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.On Point Damage
// 0x02B8 (0x02B8 - 0x0000)
struct Zombie_C_On_Point_Damage final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0078(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        DamageAmount;                                      // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      SurvRef;                                           // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSurvivor;                                        // 0x0170(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBP_MeleeDamageType_C*            K2Node_DynamicCast_AsBP_Melee_Damage_Type;         // 0x0178(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHitAngle_HitAngle;                     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue;             // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHitAngle_HitAngle_1;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDismembermentPart                            CallFunc_DefineDismembermentbyBone_DismembermentPart; // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DefineDismembermentbyBone_PartFounded;    // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHitAngle_HitAngle_2;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpecialZombie_IsSpecial;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Degrees_to_Target_DesiredDegrees;     // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_2;              // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_On_Point_Damage) == 0x000008, "Wrong alignment on Zombie_C_On_Point_Damage");
static_assert(sizeof(Zombie_C_On_Point_Damage) == 0x0002B8, "Wrong size on Zombie_C_On_Point_Damage");
static_assert(offsetof(Zombie_C_On_Point_Damage, Damage) == 0x000000, "Member 'Zombie_C_On_Point_Damage::Damage' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, DamageType) == 0x000008, "Member 'Zombie_C_On_Point_Damage::DamageType' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, HitLocation) == 0x000010, "Member 'Zombie_C_On_Point_Damage::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, HitNormal) == 0x000028, "Member 'Zombie_C_On_Point_Damage::HitNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, HitComponent) == 0x000040, "Member 'Zombie_C_On_Point_Damage::HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, BoneName) == 0x000048, "Member 'Zombie_C_On_Point_Damage::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, ShotFromDirection) == 0x000050, "Member 'Zombie_C_On_Point_Damage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, InstigatedBy) == 0x000068, "Member 'Zombie_C_On_Point_Damage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, DamageCauser) == 0x000070, "Member 'Zombie_C_On_Point_Damage::DamageCauser' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, HitInfo) == 0x000078, "Member 'Zombie_C_On_Point_Damage::HitInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, DamageAmount) == 0x000160, "Member 'Zombie_C_On_Point_Damage::DamageAmount' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, SurvRef) == 0x000168, "Member 'Zombie_C_On_Point_Damage::SurvRef' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, IsSurvivor) == 0x000170, "Member 'Zombie_C_On_Point_Damage::IsSurvivor' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, K2Node_DynamicCast_AsBP_Melee_Damage_Type) == 0x000178, "Member 'Zombie_C_On_Point_Damage::K2Node_DynamicCast_AsBP_Melee_Damage_Type' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'Zombie_C_On_Point_Damage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000181, "Member 'Zombie_C_On_Point_Damage::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_GetHitAngle_HitAngle) == 0x000188, "Member 'Zombie_C_On_Point_Damage::CallFunc_GetHitAngle_HitAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_Greater_IntInt_ReturnValue) == 0x000190, "Member 'Zombie_C_On_Point_Damage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_GetCPPZombieType_ReturnValue) == 0x000191, "Member 'Zombie_C_On_Point_Damage::CallFunc_GetCPPZombieType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000192, "Member 'Zombie_C_On_Point_Damage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000193, "Member 'Zombie_C_On_Point_Damage::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_BooleanAND_ReturnValue) == 0x000194, "Member 'Zombie_C_On_Point_Damage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000195, "Member 'Zombie_C_On_Point_Damage::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_BooleanOR_ReturnValue) == 0x000196, "Member 'Zombie_C_On_Point_Damage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000197, "Member 'Zombie_C_On_Point_Damage::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_GetHitAngle_HitAngle_1) == 0x000198, "Member 'Zombie_C_On_Point_Damage::CallFunc_GetHitAngle_HitAngle_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001A0, "Member 'Zombie_C_On_Point_Damage::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_BooleanOR_ReturnValue_1) == 0x0001A1, "Member 'Zombie_C_On_Point_Damage::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_DefineDismembermentbyBone_DismembermentPart) == 0x0001A2, "Member 'Zombie_C_On_Point_Damage::CallFunc_DefineDismembermentbyBone_DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_DefineDismembermentbyBone_PartFounded) == 0x0001A3, "Member 'Zombie_C_On_Point_Damage::CallFunc_DefineDismembermentbyBone_PartFounded' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, K2Node_SwitchEnum_CmpSuccess) == 0x0001A4, "Member 'Zombie_C_On_Point_Damage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0001A5, "Member 'Zombie_C_On_Point_Damage::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0001A6, "Member 'Zombie_C_On_Point_Damage::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_BooleanOR_ReturnValue_2) == 0x0001A7, "Member 'Zombie_C_On_Point_Damage::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_GetHitAngle_HitAngle_2) == 0x0001A8, "Member 'Zombie_C_On_Point_Damage::CallFunc_GetHitAngle_HitAngle_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_BooleanAND_ReturnValue_1) == 0x0001B0, "Member 'Zombie_C_On_Point_Damage::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'Zombie_C_On_Point_Damage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_SelectFloat_ReturnValue) == 0x0001C0, "Member 'Zombie_C_On_Point_Damage::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_IsSpecialZombie_IsSpecial) == 0x0001C8, "Member 'Zombie_C_On_Point_Damage::CallFunc_IsSpecialZombie_IsSpecial' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001D0, "Member 'Zombie_C_On_Point_Damage::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_SelectFloat_ReturnValue_1) == 0x0001D8, "Member 'Zombie_C_On_Point_Damage::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001E0, "Member 'Zombie_C_On_Point_Damage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_K2_GetPawn_ReturnValue) == 0x0001F8, "Member 'Zombie_C_On_Point_Damage::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000200, "Member 'Zombie_C_On_Point_Damage::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000208, "Member 'Zombie_C_On_Point_Damage::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_Get_Degrees_to_Target_DesiredDegrees) == 0x000220, "Member 'Zombie_C_On_Point_Damage::CallFunc_Get_Degrees_to_Target_DesiredDegrees' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000228, "Member 'Zombie_C_On_Point_Damage::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000230, "Member 'Zombie_C_On_Point_Damage::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, K2Node_DynamicCast_AsSurvival_Player) == 0x000248, "Member 'Zombie_C_On_Point_Damage::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, K2Node_DynamicCast_bSuccess_1) == 0x000250, "Member 'Zombie_C_On_Point_Damage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000258, "Member 'Zombie_C_On_Point_Damage::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_GetBlackboard_ReturnValue) == 0x000270, "Member 'Zombie_C_On_Point_Damage::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_GetBlackboard_ReturnValue_1) == 0x000278, "Member 'Zombie_C_On_Point_Damage::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_MakeLiteralName_ReturnValue) == 0x000280, "Member 'Zombie_C_On_Point_Damage::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_GetBlackboard_ReturnValue_2) == 0x000288, "Member 'Zombie_C_On_Point_Damage::CallFunc_GetBlackboard_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000290, "Member 'Zombie_C_On_Point_Damage::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000298, "Member 'Zombie_C_On_Point_Damage::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_GetValueAsBool_ReturnValue) == 0x0002A0, "Member 'Zombie_C_On_Point_Damage::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002A8, "Member 'Zombie_C_On_Point_Damage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_On_Point_Damage, CallFunc_Not_PreBool_ReturnValue) == 0x0002B0, "Member 'Zombie_C_On_Point_Damage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlendOut_24581C954244391560E0DD9333B07FE6
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnBlendOut_24581C954244391560E0DD9333B07FE6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlendOut_24581C954244391560E0DD9333B07FE6) == 0x000004, "Wrong alignment on Zombie_C_OnBlendOut_24581C954244391560E0DD9333B07FE6");
static_assert(sizeof(Zombie_C_OnBlendOut_24581C954244391560E0DD9333B07FE6) == 0x000008, "Wrong size on Zombie_C_OnBlendOut_24581C954244391560E0DD9333B07FE6");
static_assert(offsetof(Zombie_C_OnBlendOut_24581C954244391560E0DD9333B07FE6, NotifyName) == 0x000000, "Member 'Zombie_C_OnBlendOut_24581C954244391560E0DD9333B07FE6::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0) == 0x000004, "Wrong alignment on Zombie_C_OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0");
static_assert(sizeof(Zombie_C_OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0) == 0x000008, "Wrong size on Zombie_C_OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0");
static_assert(offsetof(Zombie_C_OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0, NotifyName) == 0x000000, "Member 'Zombie_C_OnBlendOut_2BB7CB5D4191C303A5A520B8D98ED5F0::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08) == 0x000004, "Wrong alignment on Zombie_C_OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08");
static_assert(sizeof(Zombie_C_OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08) == 0x000008, "Wrong size on Zombie_C_OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08");
static_assert(offsetof(Zombie_C_OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08, NotifyName) == 0x000000, "Member 'Zombie_C_OnBlendOut_3C8CD9D645799EC31D76F6A8A69E3B08::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlendOut_519674FD4362099F2E3B8182606E4D28
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnBlendOut_519674FD4362099F2E3B8182606E4D28 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlendOut_519674FD4362099F2E3B8182606E4D28) == 0x000004, "Wrong alignment on Zombie_C_OnBlendOut_519674FD4362099F2E3B8182606E4D28");
static_assert(sizeof(Zombie_C_OnBlendOut_519674FD4362099F2E3B8182606E4D28) == 0x000008, "Wrong size on Zombie_C_OnBlendOut_519674FD4362099F2E3B8182606E4D28");
static_assert(offsetof(Zombie_C_OnBlendOut_519674FD4362099F2E3B8182606E4D28, NotifyName) == 0x000000, "Member 'Zombie_C_OnBlendOut_519674FD4362099F2E3B8182606E4D28::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlendOut_7A74DE324CF2891674024C94AE2E3813
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnBlendOut_7A74DE324CF2891674024C94AE2E3813 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlendOut_7A74DE324CF2891674024C94AE2E3813) == 0x000004, "Wrong alignment on Zombie_C_OnBlendOut_7A74DE324CF2891674024C94AE2E3813");
static_assert(sizeof(Zombie_C_OnBlendOut_7A74DE324CF2891674024C94AE2E3813) == 0x000008, "Wrong size on Zombie_C_OnBlendOut_7A74DE324CF2891674024C94AE2E3813");
static_assert(offsetof(Zombie_C_OnBlendOut_7A74DE324CF2891674024C94AE2E3813, NotifyName) == 0x000000, "Member 'Zombie_C_OnBlendOut_7A74DE324CF2891674024C94AE2E3813::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD) == 0x000004, "Wrong alignment on Zombie_C_OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD");
static_assert(sizeof(Zombie_C_OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD) == 0x000008, "Wrong size on Zombie_C_OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD");
static_assert(offsetof(Zombie_C_OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD, NotifyName) == 0x000000, "Member 'Zombie_C_OnBlendOut_81E6BFD74680B821B7A1BA89A7E4B1AD::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A) == 0x000004, "Wrong alignment on Zombie_C_OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A");
static_assert(sizeof(Zombie_C_OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A) == 0x000008, "Wrong size on Zombie_C_OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A");
static_assert(offsetof(Zombie_C_OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A, NotifyName) == 0x000000, "Member 'Zombie_C_OnBlendOut_8631FE044983DB50DFEC5FB6BBE69D2A::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlendOut_C114BC7346807B7E596B22B90E553AB9
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnBlendOut_C114BC7346807B7E596B22B90E553AB9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlendOut_C114BC7346807B7E596B22B90E553AB9) == 0x000004, "Wrong alignment on Zombie_C_OnBlendOut_C114BC7346807B7E596B22B90E553AB9");
static_assert(sizeof(Zombie_C_OnBlendOut_C114BC7346807B7E596B22B90E553AB9) == 0x000008, "Wrong size on Zombie_C_OnBlendOut_C114BC7346807B7E596B22B90E553AB9");
static_assert(offsetof(Zombie_C_OnBlendOut_C114BC7346807B7E596B22B90E553AB9, NotifyName) == 0x000000, "Member 'Zombie_C_OnBlendOut_C114BC7346807B7E596B22B90E553AB9::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlendOut_D46B79E94C7A53608075F692FA4836E1
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnBlendOut_D46B79E94C7A53608075F692FA4836E1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlendOut_D46B79E94C7A53608075F692FA4836E1) == 0x000004, "Wrong alignment on Zombie_C_OnBlendOut_D46B79E94C7A53608075F692FA4836E1");
static_assert(sizeof(Zombie_C_OnBlendOut_D46B79E94C7A53608075F692FA4836E1) == 0x000008, "Wrong size on Zombie_C_OnBlendOut_D46B79E94C7A53608075F692FA4836E1");
static_assert(offsetof(Zombie_C_OnBlendOut_D46B79E94C7A53608075F692FA4836E1, NotifyName) == 0x000000, "Member 'Zombie_C_OnBlendOut_D46B79E94C7A53608075F692FA4836E1::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C) == 0x000004, "Wrong alignment on Zombie_C_OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C");
static_assert(sizeof(Zombie_C_OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C) == 0x000008, "Wrong size on Zombie_C_OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C");
static_assert(offsetof(Zombie_C_OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C, NotifyName) == 0x000000, "Member 'Zombie_C_OnBlendOut_EC2DF73344E2FD8FE269889A8D65AA2C::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnBlockDoor
// 0x0001 (0x0001 - 0x0000)
struct Zombie_C_OnBlockDoor final
{
public:
	bool                                          bLocked;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnBlockDoor) == 0x000001, "Wrong alignment on Zombie_C_OnBlockDoor");
static_assert(sizeof(Zombie_C_OnBlockDoor) == 0x000001, "Wrong size on Zombie_C_OnBlockDoor");
static_assert(offsetof(Zombie_C_OnBlockDoor, bLocked) == 0x000000, "Member 'Zombie_C_OnBlockDoor::bLocked' has a wrong offset!");

// Function Zombie.Zombie_C.OnCarShotHear__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCarShotHear__DelegateSignature final
{
public:
	class AActor*                                 SenseSourceActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCarShotHear__DelegateSignature) == 0x000008, "Wrong alignment on Zombie_C_OnCarShotHear__DelegateSignature");
static_assert(sizeof(Zombie_C_OnCarShotHear__DelegateSignature) == 0x000008, "Wrong size on Zombie_C_OnCarShotHear__DelegateSignature");
static_assert(offsetof(Zombie_C_OnCarShotHear__DelegateSignature, SenseSourceActor) == 0x000000, "Member 'Zombie_C_OnCarShotHear__DelegateSignature::SenseSourceActor' has a wrong offset!");

// Function Zombie.Zombie_C.OnChangeAIState__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_OnChangeAIState__DelegateSignature final
{
public:
	class AZombie_C*                              Zombie;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_ZombieAIState                               FromState;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ZombieAIState                               ToState;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnChangeAIState__DelegateSignature) == 0x000008, "Wrong alignment on Zombie_C_OnChangeAIState__DelegateSignature");
static_assert(sizeof(Zombie_C_OnChangeAIState__DelegateSignature) == 0x000010, "Wrong size on Zombie_C_OnChangeAIState__DelegateSignature");
static_assert(offsetof(Zombie_C_OnChangeAIState__DelegateSignature, Zombie) == 0x000000, "Member 'Zombie_C_OnChangeAIState__DelegateSignature::Zombie' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnChangeAIState__DelegateSignature, FromState) == 0x000008, "Member 'Zombie_C_OnChangeAIState__DelegateSignature::FromState' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnChangeAIState__DelegateSignature, ToState) == 0x000009, "Member 'Zombie_C_OnChangeAIState__DelegateSignature::ToState' has a wrong offset!");

// Function Zombie.Zombie_C.OnCompleted_24581C954244391560E0DD9333B07FE6
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCompleted_24581C954244391560E0DD9333B07FE6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCompleted_24581C954244391560E0DD9333B07FE6) == 0x000004, "Wrong alignment on Zombie_C_OnCompleted_24581C954244391560E0DD9333B07FE6");
static_assert(sizeof(Zombie_C_OnCompleted_24581C954244391560E0DD9333B07FE6) == 0x000008, "Wrong size on Zombie_C_OnCompleted_24581C954244391560E0DD9333B07FE6");
static_assert(offsetof(Zombie_C_OnCompleted_24581C954244391560E0DD9333B07FE6, NotifyName) == 0x000000, "Member 'Zombie_C_OnCompleted_24581C954244391560E0DD9333B07FE6::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0) == 0x000004, "Wrong alignment on Zombie_C_OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0");
static_assert(sizeof(Zombie_C_OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0) == 0x000008, "Wrong size on Zombie_C_OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0");
static_assert(offsetof(Zombie_C_OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0, NotifyName) == 0x000000, "Member 'Zombie_C_OnCompleted_2BB7CB5D4191C303A5A520B8D98ED5F0::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08) == 0x000004, "Wrong alignment on Zombie_C_OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08");
static_assert(sizeof(Zombie_C_OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08) == 0x000008, "Wrong size on Zombie_C_OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08");
static_assert(offsetof(Zombie_C_OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08, NotifyName) == 0x000000, "Member 'Zombie_C_OnCompleted_3C8CD9D645799EC31D76F6A8A69E3B08::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnCompleted_519674FD4362099F2E3B8182606E4D28
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCompleted_519674FD4362099F2E3B8182606E4D28 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCompleted_519674FD4362099F2E3B8182606E4D28) == 0x000004, "Wrong alignment on Zombie_C_OnCompleted_519674FD4362099F2E3B8182606E4D28");
static_assert(sizeof(Zombie_C_OnCompleted_519674FD4362099F2E3B8182606E4D28) == 0x000008, "Wrong size on Zombie_C_OnCompleted_519674FD4362099F2E3B8182606E4D28");
static_assert(offsetof(Zombie_C_OnCompleted_519674FD4362099F2E3B8182606E4D28, NotifyName) == 0x000000, "Member 'Zombie_C_OnCompleted_519674FD4362099F2E3B8182606E4D28::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnCompleted_7A74DE324CF2891674024C94AE2E3813
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCompleted_7A74DE324CF2891674024C94AE2E3813 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCompleted_7A74DE324CF2891674024C94AE2E3813) == 0x000004, "Wrong alignment on Zombie_C_OnCompleted_7A74DE324CF2891674024C94AE2E3813");
static_assert(sizeof(Zombie_C_OnCompleted_7A74DE324CF2891674024C94AE2E3813) == 0x000008, "Wrong size on Zombie_C_OnCompleted_7A74DE324CF2891674024C94AE2E3813");
static_assert(offsetof(Zombie_C_OnCompleted_7A74DE324CF2891674024C94AE2E3813, NotifyName) == 0x000000, "Member 'Zombie_C_OnCompleted_7A74DE324CF2891674024C94AE2E3813::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD) == 0x000004, "Wrong alignment on Zombie_C_OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD");
static_assert(sizeof(Zombie_C_OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD) == 0x000008, "Wrong size on Zombie_C_OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD");
static_assert(offsetof(Zombie_C_OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD, NotifyName) == 0x000000, "Member 'Zombie_C_OnCompleted_81E6BFD74680B821B7A1BA89A7E4B1AD::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A) == 0x000004, "Wrong alignment on Zombie_C_OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A");
static_assert(sizeof(Zombie_C_OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A) == 0x000008, "Wrong size on Zombie_C_OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A");
static_assert(offsetof(Zombie_C_OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A, NotifyName) == 0x000000, "Member 'Zombie_C_OnCompleted_8631FE044983DB50DFEC5FB6BBE69D2A::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnCompleted_C114BC7346807B7E596B22B90E553AB9
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCompleted_C114BC7346807B7E596B22B90E553AB9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCompleted_C114BC7346807B7E596B22B90E553AB9) == 0x000004, "Wrong alignment on Zombie_C_OnCompleted_C114BC7346807B7E596B22B90E553AB9");
static_assert(sizeof(Zombie_C_OnCompleted_C114BC7346807B7E596B22B90E553AB9) == 0x000008, "Wrong size on Zombie_C_OnCompleted_C114BC7346807B7E596B22B90E553AB9");
static_assert(offsetof(Zombie_C_OnCompleted_C114BC7346807B7E596B22B90E553AB9, NotifyName) == 0x000000, "Member 'Zombie_C_OnCompleted_C114BC7346807B7E596B22B90E553AB9::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnCompleted_D46B79E94C7A53608075F692FA4836E1
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCompleted_D46B79E94C7A53608075F692FA4836E1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCompleted_D46B79E94C7A53608075F692FA4836E1) == 0x000004, "Wrong alignment on Zombie_C_OnCompleted_D46B79E94C7A53608075F692FA4836E1");
static_assert(sizeof(Zombie_C_OnCompleted_D46B79E94C7A53608075F692FA4836E1) == 0x000008, "Wrong size on Zombie_C_OnCompleted_D46B79E94C7A53608075F692FA4836E1");
static_assert(offsetof(Zombie_C_OnCompleted_D46B79E94C7A53608075F692FA4836E1, NotifyName) == 0x000000, "Member 'Zombie_C_OnCompleted_D46B79E94C7A53608075F692FA4836E1::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C) == 0x000004, "Wrong alignment on Zombie_C_OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C");
static_assert(sizeof(Zombie_C_OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C) == 0x000008, "Wrong size on Zombie_C_OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C");
static_assert(offsetof(Zombie_C_OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C, NotifyName) == 0x000000, "Member 'Zombie_C_OnCompleted_EC2DF73344E2FD8FE269889A8D65AA2C::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnDamageReaction
// 0x0030 (0x0030 - 0x0000)
struct Zombie_C_OnDamageReaction final
{
public:
	double                                        AttackAngle;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnDamageReaction) == 0x000008, "Wrong alignment on Zombie_C_OnDamageReaction");
static_assert(sizeof(Zombie_C_OnDamageReaction) == 0x000030, "Wrong size on Zombie_C_OnDamageReaction");
static_assert(offsetof(Zombie_C_OnDamageReaction, AttackAngle) == 0x000000, "Member 'Zombie_C_OnDamageReaction::AttackAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnDamageReaction, BoneName) == 0x000008, "Member 'Zombie_C_OnDamageReaction::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnDamageReaction, HitLocation) == 0x000010, "Member 'Zombie_C_OnDamageReaction::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnDamageReaction, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000028, "Member 'Zombie_C_OnDamageReaction::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnDamageReaction, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000029, "Member 'Zombie_C_OnDamageReaction::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnDamageReaction, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'Zombie_C_OnDamageReaction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.OnEndScreamingFunc
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_OnEndScreamingFunc final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnEndScreamingFunc) == 0x000008, "Wrong alignment on Zombie_C_OnEndScreamingFunc");
static_assert(sizeof(Zombie_C_OnEndScreamingFunc) == 0x000010, "Wrong size on Zombie_C_OnEndScreamingFunc");
static_assert(offsetof(Zombie_C_OnEndScreamingFunc, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Zombie_C_OnEndScreamingFunc::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnEndScreamingFunc, CallFunc_HasAuthority_ReturnValue_1) == 0x000001, "Member 'Zombie_C_OnEndScreamingFunc::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnEndScreamingFunc, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'Zombie_C_OnEndScreamingFunc::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.OnInterrupted_24581C954244391560E0DD9333B07FE6
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnInterrupted_24581C954244391560E0DD9333B07FE6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnInterrupted_24581C954244391560E0DD9333B07FE6) == 0x000004, "Wrong alignment on Zombie_C_OnInterrupted_24581C954244391560E0DD9333B07FE6");
static_assert(sizeof(Zombie_C_OnInterrupted_24581C954244391560E0DD9333B07FE6) == 0x000008, "Wrong size on Zombie_C_OnInterrupted_24581C954244391560E0DD9333B07FE6");
static_assert(offsetof(Zombie_C_OnInterrupted_24581C954244391560E0DD9333B07FE6, NotifyName) == 0x000000, "Member 'Zombie_C_OnInterrupted_24581C954244391560E0DD9333B07FE6::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0) == 0x000004, "Wrong alignment on Zombie_C_OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0");
static_assert(sizeof(Zombie_C_OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0) == 0x000008, "Wrong size on Zombie_C_OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0");
static_assert(offsetof(Zombie_C_OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0, NotifyName) == 0x000000, "Member 'Zombie_C_OnInterrupted_2BB7CB5D4191C303A5A520B8D98ED5F0::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08) == 0x000004, "Wrong alignment on Zombie_C_OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08");
static_assert(sizeof(Zombie_C_OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08) == 0x000008, "Wrong size on Zombie_C_OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08");
static_assert(offsetof(Zombie_C_OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08, NotifyName) == 0x000000, "Member 'Zombie_C_OnInterrupted_3C8CD9D645799EC31D76F6A8A69E3B08::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnInterrupted_519674FD4362099F2E3B8182606E4D28
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnInterrupted_519674FD4362099F2E3B8182606E4D28 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnInterrupted_519674FD4362099F2E3B8182606E4D28) == 0x000004, "Wrong alignment on Zombie_C_OnInterrupted_519674FD4362099F2E3B8182606E4D28");
static_assert(sizeof(Zombie_C_OnInterrupted_519674FD4362099F2E3B8182606E4D28) == 0x000008, "Wrong size on Zombie_C_OnInterrupted_519674FD4362099F2E3B8182606E4D28");
static_assert(offsetof(Zombie_C_OnInterrupted_519674FD4362099F2E3B8182606E4D28, NotifyName) == 0x000000, "Member 'Zombie_C_OnInterrupted_519674FD4362099F2E3B8182606E4D28::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnInterrupted_7A74DE324CF2891674024C94AE2E3813
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnInterrupted_7A74DE324CF2891674024C94AE2E3813 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnInterrupted_7A74DE324CF2891674024C94AE2E3813) == 0x000004, "Wrong alignment on Zombie_C_OnInterrupted_7A74DE324CF2891674024C94AE2E3813");
static_assert(sizeof(Zombie_C_OnInterrupted_7A74DE324CF2891674024C94AE2E3813) == 0x000008, "Wrong size on Zombie_C_OnInterrupted_7A74DE324CF2891674024C94AE2E3813");
static_assert(offsetof(Zombie_C_OnInterrupted_7A74DE324CF2891674024C94AE2E3813, NotifyName) == 0x000000, "Member 'Zombie_C_OnInterrupted_7A74DE324CF2891674024C94AE2E3813::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD) == 0x000004, "Wrong alignment on Zombie_C_OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD");
static_assert(sizeof(Zombie_C_OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD) == 0x000008, "Wrong size on Zombie_C_OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD");
static_assert(offsetof(Zombie_C_OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD, NotifyName) == 0x000000, "Member 'Zombie_C_OnInterrupted_81E6BFD74680B821B7A1BA89A7E4B1AD::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A) == 0x000004, "Wrong alignment on Zombie_C_OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A");
static_assert(sizeof(Zombie_C_OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A) == 0x000008, "Wrong size on Zombie_C_OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A");
static_assert(offsetof(Zombie_C_OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A, NotifyName) == 0x000000, "Member 'Zombie_C_OnInterrupted_8631FE044983DB50DFEC5FB6BBE69D2A::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnInterrupted_C114BC7346807B7E596B22B90E553AB9
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnInterrupted_C114BC7346807B7E596B22B90E553AB9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnInterrupted_C114BC7346807B7E596B22B90E553AB9) == 0x000004, "Wrong alignment on Zombie_C_OnInterrupted_C114BC7346807B7E596B22B90E553AB9");
static_assert(sizeof(Zombie_C_OnInterrupted_C114BC7346807B7E596B22B90E553AB9) == 0x000008, "Wrong size on Zombie_C_OnInterrupted_C114BC7346807B7E596B22B90E553AB9");
static_assert(offsetof(Zombie_C_OnInterrupted_C114BC7346807B7E596B22B90E553AB9, NotifyName) == 0x000000, "Member 'Zombie_C_OnInterrupted_C114BC7346807B7E596B22B90E553AB9::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnInterrupted_D46B79E94C7A53608075F692FA4836E1
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnInterrupted_D46B79E94C7A53608075F692FA4836E1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnInterrupted_D46B79E94C7A53608075F692FA4836E1) == 0x000004, "Wrong alignment on Zombie_C_OnInterrupted_D46B79E94C7A53608075F692FA4836E1");
static_assert(sizeof(Zombie_C_OnInterrupted_D46B79E94C7A53608075F692FA4836E1) == 0x000008, "Wrong size on Zombie_C_OnInterrupted_D46B79E94C7A53608075F692FA4836E1");
static_assert(offsetof(Zombie_C_OnInterrupted_D46B79E94C7A53608075F692FA4836E1, NotifyName) == 0x000000, "Member 'Zombie_C_OnInterrupted_D46B79E94C7A53608075F692FA4836E1::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C) == 0x000004, "Wrong alignment on Zombie_C_OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C");
static_assert(sizeof(Zombie_C_OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C) == 0x000008, "Wrong size on Zombie_C_OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C");
static_assert(offsetof(Zombie_C_OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C, NotifyName) == 0x000000, "Member 'Zombie_C_OnInterrupted_EC2DF73344E2FD8FE269889A8D65AA2C::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047");
static_assert(sizeof(Zombie_C_OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047) == 0x000008, "Wrong size on Zombie_C_OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047");
static_assert(offsetof(Zombie_C_OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_11D6FA7749B490CE8E1A4AA589CA9047::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F");
static_assert(sizeof(Zombie_C_OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F) == 0x000008, "Wrong size on Zombie_C_OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F");
static_assert(offsetof(Zombie_C_OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_481E9FFB47FE4BE08A627E9D8FFE432F::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822");
static_assert(sizeof(Zombie_C_OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822) == 0x000008, "Wrong size on Zombie_C_OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822");
static_assert(offsetof(Zombie_C_OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_7A871D3C42DF42B6EF8BF382A2CB9822::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_7DF9BE7C436B339D70C702A8A019FE69
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_7DF9BE7C436B339D70C702A8A019FE69 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_7DF9BE7C436B339D70C702A8A019FE69) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_7DF9BE7C436B339D70C702A8A019FE69");
static_assert(sizeof(Zombie_C_OnLoaded_7DF9BE7C436B339D70C702A8A019FE69) == 0x000008, "Wrong size on Zombie_C_OnLoaded_7DF9BE7C436B339D70C702A8A019FE69");
static_assert(offsetof(Zombie_C_OnLoaded_7DF9BE7C436B339D70C702A8A019FE69, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_7DF9BE7C436B339D70C702A8A019FE69::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_839E2C0B402628950BCB4C889400C126
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_839E2C0B402628950BCB4C889400C126 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_839E2C0B402628950BCB4C889400C126) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_839E2C0B402628950BCB4C889400C126");
static_assert(sizeof(Zombie_C_OnLoaded_839E2C0B402628950BCB4C889400C126) == 0x000008, "Wrong size on Zombie_C_OnLoaded_839E2C0B402628950BCB4C889400C126");
static_assert(offsetof(Zombie_C_OnLoaded_839E2C0B402628950BCB4C889400C126, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_839E2C0B402628950BCB4C889400C126::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_8A6E506A4A312AE6846B14B2D6124182
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_8A6E506A4A312AE6846B14B2D6124182 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_8A6E506A4A312AE6846B14B2D6124182) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_8A6E506A4A312AE6846B14B2D6124182");
static_assert(sizeof(Zombie_C_OnLoaded_8A6E506A4A312AE6846B14B2D6124182) == 0x000008, "Wrong size on Zombie_C_OnLoaded_8A6E506A4A312AE6846B14B2D6124182");
static_assert(offsetof(Zombie_C_OnLoaded_8A6E506A4A312AE6846B14B2D6124182, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_8A6E506A4A312AE6846B14B2D6124182::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_9D069B3643019F44798A7D8DB754C908
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_9D069B3643019F44798A7D8DB754C908 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_9D069B3643019F44798A7D8DB754C908) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_9D069B3643019F44798A7D8DB754C908");
static_assert(sizeof(Zombie_C_OnLoaded_9D069B3643019F44798A7D8DB754C908) == 0x000008, "Wrong size on Zombie_C_OnLoaded_9D069B3643019F44798A7D8DB754C908");
static_assert(offsetof(Zombie_C_OnLoaded_9D069B3643019F44798A7D8DB754C908, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_9D069B3643019F44798A7D8DB754C908::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_B34E310B4038E7659CC67680B2E4A3F3
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_B34E310B4038E7659CC67680B2E4A3F3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_B34E310B4038E7659CC67680B2E4A3F3) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_B34E310B4038E7659CC67680B2E4A3F3");
static_assert(sizeof(Zombie_C_OnLoaded_B34E310B4038E7659CC67680B2E4A3F3) == 0x000008, "Wrong size on Zombie_C_OnLoaded_B34E310B4038E7659CC67680B2E4A3F3");
static_assert(offsetof(Zombie_C_OnLoaded_B34E310B4038E7659CC67680B2E4A3F3, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_B34E310B4038E7659CC67680B2E4A3F3::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC");
static_assert(sizeof(Zombie_C_OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC) == 0x000008, "Wrong size on Zombie_C_OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC");
static_assert(offsetof(Zombie_C_OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_CA29CBE545C16BDD7AC33798DAEDE7DC::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_D25AEA964E5920875498D4BF0EEE3D93
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_D25AEA964E5920875498D4BF0EEE3D93 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_D25AEA964E5920875498D4BF0EEE3D93) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_D25AEA964E5920875498D4BF0EEE3D93");
static_assert(sizeof(Zombie_C_OnLoaded_D25AEA964E5920875498D4BF0EEE3D93) == 0x000008, "Wrong size on Zombie_C_OnLoaded_D25AEA964E5920875498D4BF0EEE3D93");
static_assert(offsetof(Zombie_C_OnLoaded_D25AEA964E5920875498D4BF0EEE3D93, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_D25AEA964E5920875498D4BF0EEE3D93::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_DBB4292043DA8186858E4F8829D5273F
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_DBB4292043DA8186858E4F8829D5273F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_DBB4292043DA8186858E4F8829D5273F) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_DBB4292043DA8186858E4F8829D5273F");
static_assert(sizeof(Zombie_C_OnLoaded_DBB4292043DA8186858E4F8829D5273F) == 0x000008, "Wrong size on Zombie_C_OnLoaded_DBB4292043DA8186858E4F8829D5273F");
static_assert(offsetof(Zombie_C_OnLoaded_DBB4292043DA8186858E4F8829D5273F, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_DBB4292043DA8186858E4F8829D5273F::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3");
static_assert(sizeof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3) == 0x000008, "Wrong size on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3");
static_assert(offsetof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269100C6BDD3::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF269103814709
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269103814709 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269103814709) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269103814709");
static_assert(sizeof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269103814709) == 0x000008, "Wrong size on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269103814709");
static_assert(offsetof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269103814709, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269103814709::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45");
static_assert(sizeof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45) == 0x000008, "Wrong size on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45");
static_assert(offsetof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF269180C66D45::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1");
static_assert(sizeof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1) == 0x000008, "Wrong size on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1");
static_assert(offsetof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691995C9BC1::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE");
static_assert(sizeof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE) == 0x000008, "Wrong size on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE");
static_assert(offsetof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B5452EEE::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843");
static_assert(sizeof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843) == 0x000008, "Wrong size on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843");
static_assert(offsetof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691B9B66843::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003");
static_assert(sizeof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003) == 0x000008, "Wrong size on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003");
static_assert(offsetof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691C2501003::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30) == 0x000008, "Wrong alignment on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30");
static_assert(sizeof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30) == 0x000008, "Wrong size on Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30");
static_assert(offsetof(Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30, Loaded) == 0x000000, "Member 'Zombie_C_OnLoaded_F5D7EA2A48A3AC0C34FF2691FABC5C30::Loaded' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyBegin_24581C954244391560E0DD9333B07FE6
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyBegin_24581C954244391560E0DD9333B07FE6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyBegin_24581C954244391560E0DD9333B07FE6) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyBegin_24581C954244391560E0DD9333B07FE6");
static_assert(sizeof(Zombie_C_OnNotifyBegin_24581C954244391560E0DD9333B07FE6) == 0x000008, "Wrong size on Zombie_C_OnNotifyBegin_24581C954244391560E0DD9333B07FE6");
static_assert(offsetof(Zombie_C_OnNotifyBegin_24581C954244391560E0DD9333B07FE6, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyBegin_24581C954244391560E0DD9333B07FE6::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0");
static_assert(sizeof(Zombie_C_OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0) == 0x000008, "Wrong size on Zombie_C_OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0");
static_assert(offsetof(Zombie_C_OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyBegin_2BB7CB5D4191C303A5A520B8D98ED5F0::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08");
static_assert(sizeof(Zombie_C_OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08) == 0x000008, "Wrong size on Zombie_C_OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08");
static_assert(offsetof(Zombie_C_OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyBegin_3C8CD9D645799EC31D76F6A8A69E3B08::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyBegin_519674FD4362099F2E3B8182606E4D28
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyBegin_519674FD4362099F2E3B8182606E4D28 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyBegin_519674FD4362099F2E3B8182606E4D28) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyBegin_519674FD4362099F2E3B8182606E4D28");
static_assert(sizeof(Zombie_C_OnNotifyBegin_519674FD4362099F2E3B8182606E4D28) == 0x000008, "Wrong size on Zombie_C_OnNotifyBegin_519674FD4362099F2E3B8182606E4D28");
static_assert(offsetof(Zombie_C_OnNotifyBegin_519674FD4362099F2E3B8182606E4D28, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyBegin_519674FD4362099F2E3B8182606E4D28::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813");
static_assert(sizeof(Zombie_C_OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813) == 0x000008, "Wrong size on Zombie_C_OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813");
static_assert(offsetof(Zombie_C_OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyBegin_7A74DE324CF2891674024C94AE2E3813::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD");
static_assert(sizeof(Zombie_C_OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD) == 0x000008, "Wrong size on Zombie_C_OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD");
static_assert(offsetof(Zombie_C_OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyBegin_81E6BFD74680B821B7A1BA89A7E4B1AD::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A");
static_assert(sizeof(Zombie_C_OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A) == 0x000008, "Wrong size on Zombie_C_OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A");
static_assert(offsetof(Zombie_C_OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyBegin_8631FE044983DB50DFEC5FB6BBE69D2A::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9");
static_assert(sizeof(Zombie_C_OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9) == 0x000008, "Wrong size on Zombie_C_OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9");
static_assert(offsetof(Zombie_C_OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyBegin_C114BC7346807B7E596B22B90E553AB9::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1");
static_assert(sizeof(Zombie_C_OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1) == 0x000008, "Wrong size on Zombie_C_OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1");
static_assert(offsetof(Zombie_C_OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyBegin_D46B79E94C7A53608075F692FA4836E1::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C");
static_assert(sizeof(Zombie_C_OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C) == 0x000008, "Wrong size on Zombie_C_OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C");
static_assert(offsetof(Zombie_C_OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyBegin_EC2DF73344E2FD8FE269889A8D65AA2C::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyEnd_24581C954244391560E0DD9333B07FE6
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyEnd_24581C954244391560E0DD9333B07FE6 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyEnd_24581C954244391560E0DD9333B07FE6) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyEnd_24581C954244391560E0DD9333B07FE6");
static_assert(sizeof(Zombie_C_OnNotifyEnd_24581C954244391560E0DD9333B07FE6) == 0x000008, "Wrong size on Zombie_C_OnNotifyEnd_24581C954244391560E0DD9333B07FE6");
static_assert(offsetof(Zombie_C_OnNotifyEnd_24581C954244391560E0DD9333B07FE6, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyEnd_24581C954244391560E0DD9333B07FE6::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0");
static_assert(sizeof(Zombie_C_OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0) == 0x000008, "Wrong size on Zombie_C_OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0");
static_assert(offsetof(Zombie_C_OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyEnd_2BB7CB5D4191C303A5A520B8D98ED5F0::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08");
static_assert(sizeof(Zombie_C_OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08) == 0x000008, "Wrong size on Zombie_C_OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08");
static_assert(offsetof(Zombie_C_OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyEnd_3C8CD9D645799EC31D76F6A8A69E3B08::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyEnd_519674FD4362099F2E3B8182606E4D28
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyEnd_519674FD4362099F2E3B8182606E4D28 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyEnd_519674FD4362099F2E3B8182606E4D28) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyEnd_519674FD4362099F2E3B8182606E4D28");
static_assert(sizeof(Zombie_C_OnNotifyEnd_519674FD4362099F2E3B8182606E4D28) == 0x000008, "Wrong size on Zombie_C_OnNotifyEnd_519674FD4362099F2E3B8182606E4D28");
static_assert(offsetof(Zombie_C_OnNotifyEnd_519674FD4362099F2E3B8182606E4D28, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyEnd_519674FD4362099F2E3B8182606E4D28::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813");
static_assert(sizeof(Zombie_C_OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813) == 0x000008, "Wrong size on Zombie_C_OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813");
static_assert(offsetof(Zombie_C_OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyEnd_7A74DE324CF2891674024C94AE2E3813::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD");
static_assert(sizeof(Zombie_C_OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD) == 0x000008, "Wrong size on Zombie_C_OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD");
static_assert(offsetof(Zombie_C_OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyEnd_81E6BFD74680B821B7A1BA89A7E4B1AD::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A");
static_assert(sizeof(Zombie_C_OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A) == 0x000008, "Wrong size on Zombie_C_OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A");
static_assert(offsetof(Zombie_C_OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyEnd_8631FE044983DB50DFEC5FB6BBE69D2A::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9");
static_assert(sizeof(Zombie_C_OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9) == 0x000008, "Wrong size on Zombie_C_OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9");
static_assert(offsetof(Zombie_C_OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyEnd_C114BC7346807B7E596B22B90E553AB9::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1");
static_assert(sizeof(Zombie_C_OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1) == 0x000008, "Wrong size on Zombie_C_OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1");
static_assert(offsetof(Zombie_C_OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyEnd_D46B79E94C7A53608075F692FA4836E1::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C) == 0x000004, "Wrong alignment on Zombie_C_OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C");
static_assert(sizeof(Zombie_C_OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C) == 0x000008, "Wrong size on Zombie_C_OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C");
static_assert(offsetof(Zombie_C_OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C, NotifyName) == 0x000000, "Member 'Zombie_C_OnNotifyEnd_EC2DF73344E2FD8FE269889A8D65AA2C::NotifyName' has a wrong offset!");

// Function Zombie.Zombie_C.OnRadialDamgeDeath
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_OnRadialDamgeDeath final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnRadialDamgeDeath) == 0x000008, "Wrong alignment on Zombie_C_OnRadialDamgeDeath");
static_assert(sizeof(Zombie_C_OnRadialDamgeDeath) == 0x000018, "Wrong size on Zombie_C_OnRadialDamgeDeath");
static_assert(offsetof(Zombie_C_OnRadialDamgeDeath, HitLocation) == 0x000000, "Member 'Zombie_C_OnRadialDamgeDeath::HitLocation' has a wrong offset!");

// Function Zombie.Zombie_C.OnRep_CurrentTarget
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_OnRep_CurrentTarget final
{
public:
	class ACharacterHeadStim*                     K2Node_DynamicCast_AsCharacter_Head_Stim;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnRep_CurrentTarget) == 0x000008, "Wrong alignment on Zombie_C_OnRep_CurrentTarget");
static_assert(sizeof(Zombie_C_OnRep_CurrentTarget) == 0x000010, "Wrong size on Zombie_C_OnRep_CurrentTarget");
static_assert(offsetof(Zombie_C_OnRep_CurrentTarget, K2Node_DynamicCast_AsCharacter_Head_Stim) == 0x000000, "Member 'Zombie_C_OnRep_CurrentTarget::K2Node_DynamicCast_AsCharacter_Head_Stim' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnRep_CurrentTarget, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'Zombie_C_OnRep_CurrentTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Zombie.Zombie_C.OnRep_LootPoingBag
// 0x0002 (0x0002 - 0x0000)
struct Zombie_C_OnRep_LootPoingBag final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnRep_LootPoingBag) == 0x000001, "Wrong alignment on Zombie_C_OnRep_LootPoingBag");
static_assert(sizeof(Zombie_C_OnRep_LootPoingBag) == 0x000002, "Wrong size on Zombie_C_OnRep_LootPoingBag");
static_assert(offsetof(Zombie_C_OnRep_LootPoingBag, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Zombie_C_OnRep_LootPoingBag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnRep_LootPoingBag, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'Zombie_C_OnRep_LootPoingBag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Zombie.Zombie_C.OnSeenActor
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_OnSeenActor final
{
public:
	class AActor*                                 SeenActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnSeenActor) == 0x000008, "Wrong alignment on Zombie_C_OnSeenActor");
static_assert(sizeof(Zombie_C_OnSeenActor) == 0x000010, "Wrong size on Zombie_C_OnSeenActor");
static_assert(offsetof(Zombie_C_OnSeenActor, SeenActor) == 0x000000, "Member 'Zombie_C_OnSeenActor::SeenActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_OnSeenActor, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Zombie_C_OnSeenActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.OnSetTargetActor__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_OnSetTargetActor__DelegateSignature final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_OnSetTargetActor__DelegateSignature) == 0x000008, "Wrong alignment on Zombie_C_OnSetTargetActor__DelegateSignature");
static_assert(sizeof(Zombie_C_OnSetTargetActor__DelegateSignature) == 0x000008, "Wrong size on Zombie_C_OnSetTargetActor__DelegateSignature");
static_assert(offsetof(Zombie_C_OnSetTargetActor__DelegateSignature, TargetActor) == 0x000000, "Member 'Zombie_C_OnSetTargetActor__DelegateSignature::TargetActor' has a wrong offset!");

// Function Zombie.Zombie_C.PlayDismembermentSound
// 0x0090 (0x0090 - 0x0000)
struct Zombie_C_PlayDismembermentSound final
{
public:
	EDismembermentPart                            DismemberedLimb;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SoundIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Zombie_C_PlayDismembermentSound) == 0x000010, "Wrong alignment on Zombie_C_PlayDismembermentSound");
static_assert(sizeof(Zombie_C_PlayDismembermentSound) == 0x000090, "Wrong size on Zombie_C_PlayDismembermentSound");
static_assert(offsetof(Zombie_C_PlayDismembermentSound, DismemberedLimb) == 0x000000, "Member 'Zombie_C_PlayDismembermentSound::DismemberedLimb' has a wrong offset!");
static_assert(offsetof(Zombie_C_PlayDismembermentSound, SoundIndex) == 0x000004, "Member 'Zombie_C_PlayDismembermentSound::SoundIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_PlayDismembermentSound, BoneName) == 0x000008, "Member 'Zombie_C_PlayDismembermentSound::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_PlayDismembermentSound, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'Zombie_C_PlayDismembermentSound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_PlayDismembermentSound, CallFunc_GetSocketTransform_ReturnValue) == 0x000020, "Member 'Zombie_C_PlayDismembermentSound::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_PlayDismembermentSound, CallFunc_Array_Get_Item) == 0x000080, "Member 'Zombie_C_PlayDismembermentSound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_PlayDismembermentSound, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000088, "Member 'Zombie_C_PlayDismembermentSound::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.PlayHeadAdditiveDamage
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_PlayHeadAdditiveDamage final
{
public:
	double                                        HitAngle;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_PlayHeadAdditiveDamage) == 0x000008, "Wrong alignment on Zombie_C_PlayHeadAdditiveDamage");
static_assert(sizeof(Zombie_C_PlayHeadAdditiveDamage) == 0x000008, "Wrong size on Zombie_C_PlayHeadAdditiveDamage");
static_assert(offsetof(Zombie_C_PlayHeadAdditiveDamage, HitAngle) == 0x000000, "Member 'Zombie_C_PlayHeadAdditiveDamage::HitAngle' has a wrong offset!");

// Function Zombie.Zombie_C.PreDamageAnimationPhase
// 0x0028 (0x0028 - 0x0000)
struct Zombie_C_PreDamageAnimationPhase final
{
public:
	bool                                          IgnoreVelocity;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HeadShot;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Continue;                                          // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckForHalfHPStunAnimation_ReturnValue;  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckForHalfHPStunAnimation_ReturnValue_1; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue;             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_PreDamageAnimationPhase) == 0x000008, "Wrong alignment on Zombie_C_PreDamageAnimationPhase");
static_assert(sizeof(Zombie_C_PreDamageAnimationPhase) == 0x000028, "Wrong size on Zombie_C_PreDamageAnimationPhase");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, IgnoreVelocity) == 0x000000, "Member 'Zombie_C_PreDamageAnimationPhase::IgnoreVelocity' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, HeadShot) == 0x000001, "Member 'Zombie_C_PreDamageAnimationPhase::HeadShot' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, Continue) == 0x000002, "Member 'Zombie_C_PreDamageAnimationPhase::Continue' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Zombie_C_PreDamageAnimationPhase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, CallFunc_CheckForHalfHPStunAnimation_ReturnValue) == 0x000004, "Member 'Zombie_C_PreDamageAnimationPhase::CallFunc_CheckForHalfHPStunAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, CallFunc_VSize_ReturnValue) == 0x000008, "Member 'Zombie_C_PreDamageAnimationPhase::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'Zombie_C_PreDamageAnimationPhase::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, CallFunc_CheckForHalfHPStunAnimation_ReturnValue_1) == 0x000011, "Member 'Zombie_C_PreDamageAnimationPhase::CallFunc_CheckForHalfHPStunAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, CallFunc_GetCPPZombieType_ReturnValue) == 0x000012, "Member 'Zombie_C_PreDamageAnimationPhase::CallFunc_GetCPPZombieType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, K2Node_SwitchEnum_CmpSuccess) == 0x000013, "Member 'Zombie_C_PreDamageAnimationPhase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, CallFunc_VSize_ReturnValue_1) == 0x000018, "Member 'Zombie_C_PreDamageAnimationPhase::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_PreDamageAnimationPhase, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Zombie_C_PreDamageAnimationPhase::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Zombie.Zombie_C.Ragdoll Updating
// 0x0002 (0x0002 - 0x0000)
struct Zombie_C_Ragdoll_Updating final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckMeshStopped_MeshStopped;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Ragdoll_Updating) == 0x000001, "Wrong alignment on Zombie_C_Ragdoll_Updating");
static_assert(sizeof(Zombie_C_Ragdoll_Updating) == 0x000002, "Wrong size on Zombie_C_Ragdoll_Updating");
static_assert(offsetof(Zombie_C_Ragdoll_Updating, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Zombie_C_Ragdoll_Updating::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Ragdoll_Updating, CallFunc_CheckMeshStopped_MeshStopped) == 0x000001, "Member 'Zombie_C_Ragdoll_Updating::CallFunc_CheckMeshStopped_MeshStopped' has a wrong offset!");

// Function Zombie.Zombie_C.RagdollStopChecker
// 0x0020 (0x0020 - 0x0000)
struct Zombie_C_RagdollStopChecker final
{
public:
	bool                                          CallFunc_CheckMeshStopped_MeshStopped;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_RagdollStopChecker) == 0x000008, "Wrong alignment on Zombie_C_RagdollStopChecker");
static_assert(sizeof(Zombie_C_RagdollStopChecker) == 0x000020, "Wrong size on Zombie_C_RagdollStopChecker");
static_assert(offsetof(Zombie_C_RagdollStopChecker, CallFunc_CheckMeshStopped_MeshStopped) == 0x000000, "Member 'Zombie_C_RagdollStopChecker::CallFunc_CheckMeshStopped_MeshStopped' has a wrong offset!");
static_assert(offsetof(Zombie_C_RagdollStopChecker, CallFunc_GetSocketLocation_ReturnValue) == 0x000008, "Member 'Zombie_C_RagdollStopChecker::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.ReceiveParticleData
// 0x0030 (0x0030 - 0x0000)
struct Zombie_C_ReceiveParticleData final
{
public:
	TArray<struct FBasicParticleData>             Data;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SimulationPositionOffset;                          // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ReceiveParticleData) == 0x000008, "Wrong alignment on Zombie_C_ReceiveParticleData");
static_assert(sizeof(Zombie_C_ReceiveParticleData) == 0x000030, "Wrong size on Zombie_C_ReceiveParticleData");
static_assert(offsetof(Zombie_C_ReceiveParticleData, Data) == 0x000000, "Member 'Zombie_C_ReceiveParticleData::Data' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceiveParticleData, NiagaraSystem) == 0x000010, "Member 'Zombie_C_ReceiveParticleData::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceiveParticleData, SimulationPositionOffset) == 0x000018, "Member 'Zombie_C_ReceiveParticleData::SimulationPositionOffset' has a wrong offset!");

// Function Zombie.Zombie_C.ReceivePointDamage
// 0x0160 (0x0160 - 0x0000)
struct Zombie_C_ReceivePointDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0078(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Zombie_C_ReceivePointDamage) == 0x000008, "Wrong alignment on Zombie_C_ReceivePointDamage");
static_assert(sizeof(Zombie_C_ReceivePointDamage) == 0x000160, "Wrong size on Zombie_C_ReceivePointDamage");
static_assert(offsetof(Zombie_C_ReceivePointDamage, Damage) == 0x000000, "Member 'Zombie_C_ReceivePointDamage::Damage' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceivePointDamage, DamageType) == 0x000008, "Member 'Zombie_C_ReceivePointDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceivePointDamage, HitLocation) == 0x000010, "Member 'Zombie_C_ReceivePointDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceivePointDamage, HitNormal) == 0x000028, "Member 'Zombie_C_ReceivePointDamage::HitNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceivePointDamage, HitComponent) == 0x000040, "Member 'Zombie_C_ReceivePointDamage::HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceivePointDamage, BoneName) == 0x000048, "Member 'Zombie_C_ReceivePointDamage::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceivePointDamage, ShotFromDirection) == 0x000050, "Member 'Zombie_C_ReceivePointDamage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceivePointDamage, InstigatedBy) == 0x000068, "Member 'Zombie_C_ReceivePointDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceivePointDamage, DamageCauser) == 0x000070, "Member 'Zombie_C_ReceivePointDamage::DamageCauser' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceivePointDamage, HitInfo) == 0x000078, "Member 'Zombie_C_ReceivePointDamage::HitInfo' has a wrong offset!");

// Function Zombie.Zombie_C.ReceiveRadialDamage
// 0x0120 (0x0120 - 0x0000)
struct Zombie_C_ReceiveRadialDamage final
{
public:
	float                                         DamageReceived;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0028(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0118(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ReceiveRadialDamage) == 0x000008, "Wrong alignment on Zombie_C_ReceiveRadialDamage");
static_assert(sizeof(Zombie_C_ReceiveRadialDamage) == 0x000120, "Wrong size on Zombie_C_ReceiveRadialDamage");
static_assert(offsetof(Zombie_C_ReceiveRadialDamage, DamageReceived) == 0x000000, "Member 'Zombie_C_ReceiveRadialDamage::DamageReceived' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceiveRadialDamage, DamageType) == 0x000008, "Member 'Zombie_C_ReceiveRadialDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceiveRadialDamage, Origin) == 0x000010, "Member 'Zombie_C_ReceiveRadialDamage::Origin' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceiveRadialDamage, HitInfo) == 0x000028, "Member 'Zombie_C_ReceiveRadialDamage::HitInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceiveRadialDamage, InstigatedBy) == 0x000110, "Member 'Zombie_C_ReceiveRadialDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_ReceiveRadialDamage, DamageCauser) == 0x000118, "Member 'Zombie_C_ReceiveRadialDamage::DamageCauser' has a wrong offset!");

// Function Zombie.Zombie_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Zombie_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ReceiveTick) == 0x000004, "Wrong alignment on Zombie_C_ReceiveTick");
static_assert(sizeof(Zombie_C_ReceiveTick) == 0x000004, "Wrong size on Zombie_C_ReceiveTick");
static_assert(offsetof(Zombie_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Zombie_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Zombie.Zombie_C.RemoveHeadNiagara
// 0x000C (0x000C - 0x0000)
struct Zombie_C_RemoveHeadNiagara final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_RemoveHeadNiagara) == 0x000004, "Wrong alignment on Zombie_C_RemoveHeadNiagara");
static_assert(sizeof(Zombie_C_RemoveHeadNiagara) == 0x00000C, "Wrong size on Zombie_C_RemoveHeadNiagara");
static_assert(offsetof(Zombie_C_RemoveHeadNiagara, Temp_name_Variable) == 0x000000, "Member 'Zombie_C_RemoveHeadNiagara::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_RemoveHeadNiagara, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'Zombie_C_RemoveHeadNiagara::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.RemoveHelmet
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_RemoveHelmet final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_RemoveHelmet) == 0x000008, "Wrong alignment on Zombie_C_RemoveHelmet");
static_assert(sizeof(Zombie_C_RemoveHelmet) == 0x000018, "Wrong size on Zombie_C_RemoveHelmet");
static_assert(offsetof(Zombie_C_RemoveHelmet, HitLocation) == 0x000000, "Member 'Zombie_C_RemoveHelmet::HitLocation' has a wrong offset!");

// Function Zombie.Zombie_C.RemoveLeftHandNiagara
// 0x000C (0x000C - 0x0000)
struct Zombie_C_RemoveLeftHandNiagara final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_RemoveLeftHandNiagara) == 0x000004, "Wrong alignment on Zombie_C_RemoveLeftHandNiagara");
static_assert(sizeof(Zombie_C_RemoveLeftHandNiagara) == 0x00000C, "Wrong size on Zombie_C_RemoveLeftHandNiagara");
static_assert(offsetof(Zombie_C_RemoveLeftHandNiagara, Temp_name_Variable) == 0x000000, "Member 'Zombie_C_RemoveLeftHandNiagara::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_RemoveLeftHandNiagara, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'Zombie_C_RemoveLeftHandNiagara::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.RemoveLeftLegNiagara
// 0x000C (0x000C - 0x0000)
struct Zombie_C_RemoveLeftLegNiagara final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_RemoveLeftLegNiagara) == 0x000004, "Wrong alignment on Zombie_C_RemoveLeftLegNiagara");
static_assert(sizeof(Zombie_C_RemoveLeftLegNiagara) == 0x00000C, "Wrong size on Zombie_C_RemoveLeftLegNiagara");
static_assert(offsetof(Zombie_C_RemoveLeftLegNiagara, Temp_name_Variable) == 0x000000, "Member 'Zombie_C_RemoveLeftLegNiagara::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_RemoveLeftLegNiagara, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'Zombie_C_RemoveLeftLegNiagara::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.RemoveRightHandNiagara
// 0x000C (0x000C - 0x0000)
struct Zombie_C_RemoveRightHandNiagara final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_RemoveRightHandNiagara) == 0x000004, "Wrong alignment on Zombie_C_RemoveRightHandNiagara");
static_assert(sizeof(Zombie_C_RemoveRightHandNiagara) == 0x00000C, "Wrong size on Zombie_C_RemoveRightHandNiagara");
static_assert(offsetof(Zombie_C_RemoveRightHandNiagara, Temp_name_Variable) == 0x000000, "Member 'Zombie_C_RemoveRightHandNiagara::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_RemoveRightHandNiagara, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'Zombie_C_RemoveRightHandNiagara::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.RemoveRightLegNiagara
// 0x000C (0x000C - 0x0000)
struct Zombie_C_RemoveRightLegNiagara final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_RemoveRightLegNiagara) == 0x000004, "Wrong alignment on Zombie_C_RemoveRightLegNiagara");
static_assert(sizeof(Zombie_C_RemoveRightLegNiagara) == 0x00000C, "Wrong size on Zombie_C_RemoveRightLegNiagara");
static_assert(offsetof(Zombie_C_RemoveRightLegNiagara, Temp_name_Variable) == 0x000000, "Member 'Zombie_C_RemoveRightLegNiagara::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_RemoveRightLegNiagara, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'Zombie_C_RemoveRightLegNiagara::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.ResetZombie
// 0x0060 (0x0060 - 0x0000)
struct Zombie_C_ResetZombie final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ResetZombie) == 0x000008, "Wrong alignment on Zombie_C_ResetZombie");
static_assert(sizeof(Zombie_C_ResetZombie) == 0x000060, "Wrong size on Zombie_C_ResetZombie");
static_assert(offsetof(Zombie_C_ResetZombie, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Zombie_C_ResetZombie::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ResetZombie, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Zombie_C_ResetZombie::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_ResetZombie, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'Zombie_C_ResetZombie::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ResetZombie, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'Zombie_C_ResetZombie::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ResetZombie, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'Zombie_C_ResetZombie::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ResetZombie, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000040, "Member 'Zombie_C_ResetZombie::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ResetZombie, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000048, "Member 'Zombie_C_ResetZombie::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ResetZombie, CallFunc_MakeLiteralName_ReturnValue) == 0x000050, "Member 'Zombie_C_ResetZombie::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ResetZombie, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000058, "Member 'Zombie_C_ResetZombie::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");

// Function Zombie.Zombie_C.RPC Multicast AddBlood
// 0x00E8 (0x00E8 - 0x0000)
struct Zombie_C_RPC_Multicast_AddBlood final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Zombie_C_RPC_Multicast_AddBlood) == 0x000008, "Wrong alignment on Zombie_C_RPC_Multicast_AddBlood");
static_assert(sizeof(Zombie_C_RPC_Multicast_AddBlood) == 0x0000E8, "Wrong size on Zombie_C_RPC_Multicast_AddBlood");
static_assert(offsetof(Zombie_C_RPC_Multicast_AddBlood, Hit) == 0x000000, "Member 'Zombie_C_RPC_Multicast_AddBlood::Hit' has a wrong offset!");

// Function Zombie.Zombie_C.RPC Multicast SetWoundsOnNewMesh
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_RPC_Multicast_SetWoundsOnNewMesh final
{
public:
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_RPC_Multicast_SetWoundsOnNewMesh) == 0x000008, "Wrong alignment on Zombie_C_RPC_Multicast_SetWoundsOnNewMesh");
static_assert(sizeof(Zombie_C_RPC_Multicast_SetWoundsOnNewMesh) == 0x000008, "Wrong size on Zombie_C_RPC_Multicast_SetWoundsOnNewMesh");
static_assert(offsetof(Zombie_C_RPC_Multicast_SetWoundsOnNewMesh, MeshComponent) == 0x000000, "Member 'Zombie_C_RPC_Multicast_SetWoundsOnNewMesh::MeshComponent' has a wrong offset!");

// Function Zombie.Zombie_C.ServerApplyDismemberment
// 0x0120 (0x0120 - 0x0000)
struct Zombie_C_ServerApplyDismemberment final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Param_WeaponType;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x0018(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                HitLocation;                                       // 0x0100(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HitAngle;                                          // 0x0118(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ServerApplyDismemberment) == 0x000008, "Wrong alignment on Zombie_C_ServerApplyDismemberment");
static_assert(sizeof(Zombie_C_ServerApplyDismemberment) == 0x000120, "Wrong size on Zombie_C_ServerApplyDismemberment");
static_assert(offsetof(Zombie_C_ServerApplyDismemberment, BoneName) == 0x000000, "Member 'Zombie_C_ServerApplyDismemberment::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ServerApplyDismemberment, Damage) == 0x000008, "Member 'Zombie_C_ServerApplyDismemberment::Damage' has a wrong offset!");
static_assert(offsetof(Zombie_C_ServerApplyDismemberment, Param_WeaponType) == 0x000010, "Member 'Zombie_C_ServerApplyDismemberment::Param_WeaponType' has a wrong offset!");
static_assert(offsetof(Zombie_C_ServerApplyDismemberment, HitInfo) == 0x000018, "Member 'Zombie_C_ServerApplyDismemberment::HitInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_ServerApplyDismemberment, HitLocation) == 0x000100, "Member 'Zombie_C_ServerApplyDismemberment::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_ServerApplyDismemberment, HitAngle) == 0x000118, "Member 'Zombie_C_ServerApplyDismemberment::HitAngle' has a wrong offset!");

// Function Zombie.Zombie_C.ServerFullDismemberment
// 0x0038 (0x0038 - 0x0000)
struct Zombie_C_ServerFullDismemberment final
{
public:
	struct FVector                                BodyImpulse;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_LimbImpulse;                                 // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AController*                      InstigatedBy;                                      // 0x0030(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ServerFullDismemberment) == 0x000008, "Wrong alignment on Zombie_C_ServerFullDismemberment");
static_assert(sizeof(Zombie_C_ServerFullDismemberment) == 0x000038, "Wrong size on Zombie_C_ServerFullDismemberment");
static_assert(offsetof(Zombie_C_ServerFullDismemberment, BodyImpulse) == 0x000000, "Member 'Zombie_C_ServerFullDismemberment::BodyImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_ServerFullDismemberment, Param_LimbImpulse) == 0x000018, "Member 'Zombie_C_ServerFullDismemberment::Param_LimbImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_ServerFullDismemberment, InstigatedBy) == 0x000030, "Member 'Zombie_C_ServerFullDismemberment::InstigatedBy' has a wrong offset!");

// Function Zombie.Zombie_C.ServerPlayAdditiveDamage
// 0x0020 (0x0020 - 0x0000)
struct Zombie_C_ServerPlayAdditiveDamage final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ServerPlayAdditiveDamage) == 0x000008, "Wrong alignment on Zombie_C_ServerPlayAdditiveDamage");
static_assert(sizeof(Zombie_C_ServerPlayAdditiveDamage) == 0x000020, "Wrong size on Zombie_C_ServerPlayAdditiveDamage");
static_assert(offsetof(Zombie_C_ServerPlayAdditiveDamage, BoneName) == 0x000000, "Member 'Zombie_C_ServerPlayAdditiveDamage::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ServerPlayAdditiveDamage, HitLocation) == 0x000008, "Member 'Zombie_C_ServerPlayAdditiveDamage::HitLocation' has a wrong offset!");

// Function Zombie.Zombie_C.ServerPlayAgressiveMontage
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_ServerPlayAgressiveMontage final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ServerPlayAgressiveMontage) == 0x000008, "Wrong alignment on Zombie_C_ServerPlayAgressiveMontage");
static_assert(sizeof(Zombie_C_ServerPlayAgressiveMontage) == 0x000008, "Wrong size on Zombie_C_ServerPlayAgressiveMontage");
static_assert(offsetof(Zombie_C_ServerPlayAgressiveMontage, Angle) == 0x000000, "Member 'Zombie_C_ServerPlayAgressiveMontage::Angle' has a wrong offset!");

// Function Zombie.Zombie_C.ServerPlayDamagedMontage
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_ServerPlayDamagedMontage final
{
public:
	double                                        AttackAngle;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreVelocity;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageInHead;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ServerPlayDamagedMontage) == 0x000008, "Wrong alignment on Zombie_C_ServerPlayDamagedMontage");
static_assert(sizeof(Zombie_C_ServerPlayDamagedMontage) == 0x000010, "Wrong size on Zombie_C_ServerPlayDamagedMontage");
static_assert(offsetof(Zombie_C_ServerPlayDamagedMontage, AttackAngle) == 0x000000, "Member 'Zombie_C_ServerPlayDamagedMontage::AttackAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_ServerPlayDamagedMontage, IgnoreVelocity) == 0x000008, "Member 'Zombie_C_ServerPlayDamagedMontage::IgnoreVelocity' has a wrong offset!");
static_assert(offsetof(Zombie_C_ServerPlayDamagedMontage, DamageInHead) == 0x000009, "Member 'Zombie_C_ServerPlayDamagedMontage::DamageInHead' has a wrong offset!");

// Function Zombie.Zombie_C.ServerTriggerCarZombie
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_ServerTriggerCarZombie final
{
public:
	const class AActor*                           InteractedActor;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ServerTriggerCarZombie) == 0x000008, "Wrong alignment on Zombie_C_ServerTriggerCarZombie");
static_assert(sizeof(Zombie_C_ServerTriggerCarZombie) == 0x000008, "Wrong size on Zombie_C_ServerTriggerCarZombie");
static_assert(offsetof(Zombie_C_ServerTriggerCarZombie, InteractedActor) == 0x000000, "Member 'Zombie_C_ServerTriggerCarZombie::InteractedActor' has a wrong offset!");

// Function Zombie.Zombie_C.Set Loot Point
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_Set_Loot_Point final
{
public:
	class AZombieDeadBodyLootPoint_C*             LootPoint;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Set_Loot_Point) == 0x000008, "Wrong alignment on Zombie_C_Set_Loot_Point");
static_assert(sizeof(Zombie_C_Set_Loot_Point) == 0x000010, "Wrong size on Zombie_C_Set_Loot_Point");
static_assert(offsetof(Zombie_C_Set_Loot_Point, LootPoint) == 0x000000, "Member 'Zombie_C_Set_Loot_Point::LootPoint' has a wrong offset!");
static_assert(offsetof(Zombie_C_Set_Loot_Point, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Zombie_C_Set_Loot_Point::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Set_Loot_Point, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'Zombie_C_Set_Loot_Point::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Zombie.Zombie_C.SetLootPoint_Server
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_SetLootPoint_Server final
{
public:
	class AZombieDeadBodyLootPoint_C*             LootPoint;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SetLootPoint_Server) == 0x000008, "Wrong alignment on Zombie_C_SetLootPoint_Server");
static_assert(sizeof(Zombie_C_SetLootPoint_Server) == 0x000008, "Wrong size on Zombie_C_SetLootPoint_Server");
static_assert(offsetof(Zombie_C_SetLootPoint_Server, LootPoint) == 0x000000, "Member 'Zombie_C_SetLootPoint_Server::LootPoint' has a wrong offset!");

// Function Zombie.Zombie_C.SetLowMovementTickrate
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_SetLowMovementTickrate final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxSimulationTimeStep_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SetLowMovementTickrate) == 0x000008, "Wrong alignment on Zombie_C_SetLowMovementTickrate");
static_assert(sizeof(Zombie_C_SetLowMovementTickrate) == 0x000018, "Wrong size on Zombie_C_SetLowMovementTickrate");
static_assert(offsetof(Zombie_C_SetLowMovementTickrate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'Zombie_C_SetLowMovementTickrate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetLowMovementTickrate, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000008, "Member 'Zombie_C_SetLowMovementTickrate::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetLowMovementTickrate, K2Node_VariableSet_MaxSimulationTimeStep_ImplicitCast) == 0x000010, "Member 'Zombie_C_SetLowMovementTickrate::K2Node_VariableSet_MaxSimulationTimeStep_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.SetSkeletalMeshesTickEnabled
// 0x0002 (0x0002 - 0x0000)
struct Zombie_C_SetSkeletalMeshesTickEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SetSkeletalMeshesTickEnabled) == 0x000001, "Wrong alignment on Zombie_C_SetSkeletalMeshesTickEnabled");
static_assert(sizeof(Zombie_C_SetSkeletalMeshesTickEnabled) == 0x000002, "Wrong size on Zombie_C_SetSkeletalMeshesTickEnabled");
static_assert(offsetof(Zombie_C_SetSkeletalMeshesTickEnabled, bEnabled) == 0x000000, "Member 'Zombie_C_SetSkeletalMeshesTickEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetSkeletalMeshesTickEnabled, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'Zombie_C_SetSkeletalMeshesTickEnabled::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.SetupAttackTimer
// 0x0020 (0x0020 - 0x0000)
struct Zombie_C_SetupAttackTimer final
{
public:
	E_AttackingArm                                Param_AttackingArm;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SetupAttackTimer) == 0x000008, "Wrong alignment on Zombie_C_SetupAttackTimer");
static_assert(sizeof(Zombie_C_SetupAttackTimer) == 0x000020, "Wrong size on Zombie_C_SetupAttackTimer");
static_assert(offsetof(Zombie_C_SetupAttackTimer, Param_AttackingArm) == 0x000000, "Member 'Zombie_C_SetupAttackTimer::Param_AttackingArm' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetupAttackTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Zombie_C_SetupAttackTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetupAttackTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'Zombie_C_SetupAttackTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.SetupCheckDrownTimer
// 0x0040 (0x0040 - 0x0000)
struct Zombie_C_SetupCheckDrownTimer final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SetupCheckDrownTimer) == 0x000008, "Wrong alignment on Zombie_C_SetupCheckDrownTimer");
static_assert(sizeof(Zombie_C_SetupCheckDrownTimer) == 0x000040, "Wrong size on Zombie_C_SetupCheckDrownTimer");
static_assert(offsetof(Zombie_C_SetupCheckDrownTimer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'Zombie_C_SetupCheckDrownTimer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetupCheckDrownTimer, CallFunc_BreakVector_X) == 0x000018, "Member 'Zombie_C_SetupCheckDrownTimer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetupCheckDrownTimer, CallFunc_BreakVector_Y) == 0x000020, "Member 'Zombie_C_SetupCheckDrownTimer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetupCheckDrownTimer, CallFunc_BreakVector_Z) == 0x000028, "Member 'Zombie_C_SetupCheckDrownTimer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetupCheckDrownTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000030, "Member 'Zombie_C_SetupCheckDrownTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetupCheckDrownTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000038, "Member 'Zombie_C_SetupCheckDrownTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.SetupSounds
// 0x0001 (0x0001 - 0x0000)
struct Zombie_C_SetupSounds final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SetupSounds) == 0x000001, "Wrong alignment on Zombie_C_SetupSounds");
static_assert(sizeof(Zombie_C_SetupSounds) == 0x000001, "Wrong size on Zombie_C_SetupSounds");
static_assert(offsetof(Zombie_C_SetupSounds, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Zombie_C_SetupSounds::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.SetZombieTransform
// 0x0200 (0x0200 - 0x0000)
struct Zombie_C_SetZombieTransform final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0100(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SetZombieTransform) == 0x000010, "Wrong alignment on Zombie_C_SetZombieTransform");
static_assert(sizeof(Zombie_C_SetZombieTransform) == 0x000200, "Wrong size on Zombie_C_SetZombieTransform");
static_assert(offsetof(Zombie_C_SetZombieTransform, Location) == 0x000000, "Member 'Zombie_C_SetZombieTransform::Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, Rotation) == 0x000018, "Member 'Zombie_C_SetZombieTransform::Rotation' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'Zombie_C_SetZombieTransform::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_BreakVector_X) == 0x000038, "Member 'Zombie_C_SetZombieTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_BreakVector_Y) == 0x000040, "Member 'Zombie_C_SetZombieTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_BreakVector_Z) == 0x000048, "Member 'Zombie_C_SetZombieTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000050, "Member 'Zombie_C_SetZombieTransform::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Zombie_C_SetZombieTransform::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Zombie_C_SetZombieTransform::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'Zombie_C_SetZombieTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'Zombie_C_SetZombieTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'Zombie_C_SetZombieTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000100, "Member 'Zombie_C_SetZombieTransform::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0001E8, "Member 'Zombie_C_SetZombieTransform::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SetZombieTransform, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001F0, "Member 'Zombie_C_SetZombieTransform::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.ShowMeshes
// 0x0005 (0x0005 - 0x0000)
struct Zombie_C_ShowMeshes final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ShowMeshes) == 0x000001, "Wrong alignment on Zombie_C_ShowMeshes");
static_assert(sizeof(Zombie_C_ShowMeshes) == 0x000005, "Wrong size on Zombie_C_ShowMeshes");
static_assert(offsetof(Zombie_C_ShowMeshes, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'Zombie_C_ShowMeshes::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ShowMeshes, CallFunc_IsVisible_ReturnValue_1) == 0x000001, "Member 'Zombie_C_ShowMeshes::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ShowMeshes, CallFunc_IsVisible_ReturnValue_2) == 0x000002, "Member 'Zombie_C_ShowMeshes::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ShowMeshes, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Zombie_C_ShowMeshes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ShowMeshes, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'Zombie_C_ShowMeshes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Zombie.Zombie_C.SoldierZombieParams
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_SoldierZombieParams final
{
public:
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SoldierZombieParams) == 0x000008, "Wrong alignment on Zombie_C_SoldierZombieParams");
static_assert(sizeof(Zombie_C_SoldierZombieParams) == 0x000018, "Wrong size on Zombie_C_SoldierZombieParams");
static_assert(offsetof(Zombie_C_SoldierZombieParams, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000000, "Member 'Zombie_C_SoldierZombieParams::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SoldierZombieParams, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'Zombie_C_SoldierZombieParams::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.SoundsOnDeath
// 0x0002 (0x0002 - 0x0000)
struct Zombie_C_SoundsOnDeath final
{
public:
	bool                                          KilledInHead;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SoundsOnDeath) == 0x000001, "Wrong alignment on Zombie_C_SoundsOnDeath");
static_assert(sizeof(Zombie_C_SoundsOnDeath) == 0x000002, "Wrong size on Zombie_C_SoundsOnDeath");
static_assert(offsetof(Zombie_C_SoundsOnDeath, KilledInHead) == 0x000000, "Member 'Zombie_C_SoundsOnDeath::KilledInHead' has a wrong offset!");
static_assert(offsetof(Zombie_C_SoundsOnDeath, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'Zombie_C_SoundsOnDeath::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.Spawn Decal for Blood
// 0x0008 (0x0008 - 0x0000)
struct Zombie_C_Spawn_Decal_for_Blood final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Spawn_Decal_for_Blood) == 0x000004, "Wrong alignment on Zombie_C_Spawn_Decal_for_Blood");
static_assert(sizeof(Zombie_C_Spawn_Decal_for_Blood) == 0x000008, "Wrong size on Zombie_C_Spawn_Decal_for_Blood");
static_assert(offsetof(Zombie_C_Spawn_Decal_for_Blood, BoneName) == 0x000000, "Member 'Zombie_C_Spawn_Decal_for_Blood::BoneName' has a wrong offset!");

// Function Zombie.Zombie_C.SpawnChunksDecals
// 0x00A0 (0x00A0 - 0x0000)
struct Zombie_C_SpawnChunksDecals final
{
public:
	TArray<struct FBasicParticleData>             Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDecalComponent*                        SpawnedDecal;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBasicParticleData                     CallFunc_Array_Get_Item;                           // 0x0028(0x0038)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector3f_X;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnDecalUnderLimb_SpawnedDecal;         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector3f                              CallFunc_BreakVector3f_InVec_ImplicitCast;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SpawnChunksDecals) == 0x000008, "Wrong alignment on Zombie_C_SpawnChunksDecals");
static_assert(sizeof(Zombie_C_SpawnChunksDecals) == 0x0000A0, "Wrong size on Zombie_C_SpawnChunksDecals");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, Data) == 0x000000, "Member 'Zombie_C_SpawnChunksDecals::Data' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, SpawnedDecal) == 0x000010, "Member 'Zombie_C_SpawnChunksDecals::SpawnedDecal' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Zombie_C_SpawnChunksDecals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'Zombie_C_SpawnChunksDecals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_Array_Get_Item) == 0x000028, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_BreakVector3f_X) == 0x000064, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_BreakVector3f_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_BreakVector3f_Y) == 0x000068, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_BreakVector3f_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_BreakVector3f_Z) == 0x00006C, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_BreakVector3f_Z' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_SpawnDecalUnderLimb_SpawnedDecal) == 0x000078, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_SpawnDecalUnderLimb_SpawnedDecal' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_BreakVector3f_InVec_ImplicitCast) == 0x000088, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_BreakVector3f_InVec_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnChunksDecals, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'Zombie_C_SpawnChunksDecals::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Zombie.Zombie_C.SpawnDeadBody
// 0x00F0 (0x00F0 - 0x0000)
struct Zombie_C_SpawnDeadBody final
{
public:
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombieDeadBody_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SpawnDeadBody) == 0x000010, "Wrong alignment on Zombie_C_SpawnDeadBody");
static_assert(sizeof(Zombie_C_SpawnDeadBody) == 0x0000F0, "Wrong size on Zombie_C_SpawnDeadBody");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000000, "Member 'Zombie_C_SpawnDeadBody::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Zombie_C_SpawnDeadBody::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_Add_VectorVector_ReturnValue) == 0x000020, "Member 'Zombie_C_SpawnDeadBody::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_GetSocketRotation_ReturnValue) == 0x000038, "Member 'Zombie_C_SpawnDeadBody::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'Zombie_C_SpawnDeadBody::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'Zombie_C_SpawnDeadBody::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'Zombie_C_SpawnDeadBody::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'Zombie_C_SpawnDeadBody::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'Zombie_C_SpawnDeadBody::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000E0, "Member 'Zombie_C_SpawnDeadBody::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDeadBody, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E8, "Member 'Zombie_C_SpawnDeadBody::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.SpawnDecalUnderLimb
// 0x03B0 (0x03B0 - 0x0000)
struct Zombie_C_SpawnDecalUnderLimb final
{
public:
	struct FVector                                LimbLocation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LimbDirectionAdjustment;                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DecalToSpawn;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         DecalMinSize;                                      // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DecalMaxSize;                                      // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DecalLifeSpan;                                     // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DrawDebug;                                         // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        SpawnedDecal;                                      // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DecalSize;                                         // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DecalMaterial;                                     // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0098(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0160(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A[0x2];                                      // 0x025A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnDecalAtLocation_LifeSpan_ImplicitCast; // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SpawnDecalUnderLimb) == 0x000008, "Wrong alignment on Zombie_C_SpawnDecalUnderLimb");
static_assert(sizeof(Zombie_C_SpawnDecalUnderLimb) == 0x0003B0, "Wrong size on Zombie_C_SpawnDecalUnderLimb");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, LimbLocation) == 0x000000, "Member 'Zombie_C_SpawnDecalUnderLimb::LimbLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, LimbDirectionAdjustment) == 0x000018, "Member 'Zombie_C_SpawnDecalUnderLimb::LimbDirectionAdjustment' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, DecalToSpawn) == 0x000030, "Member 'Zombie_C_SpawnDecalUnderLimb::DecalToSpawn' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, DecalMinSize) == 0x000038, "Member 'Zombie_C_SpawnDecalUnderLimb::DecalMinSize' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, DecalMaxSize) == 0x00003C, "Member 'Zombie_C_SpawnDecalUnderLimb::DecalMaxSize' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, DecalLifeSpan) == 0x000040, "Member 'Zombie_C_SpawnDecalUnderLimb::DecalLifeSpan' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, DrawDebug) == 0x000048, "Member 'Zombie_C_SpawnDecalUnderLimb::DrawDebug' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, SpawnedDecal) == 0x000050, "Member 'Zombie_C_SpawnDecalUnderLimb::SpawnedDecal' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, StartLocation) == 0x000058, "Member 'Zombie_C_SpawnDecalUnderLimb::StartLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, DecalSize) == 0x000070, "Member 'Zombie_C_SpawnDecalUnderLimb::DecalSize' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, DecalMaterial) == 0x000078, "Member 'Zombie_C_SpawnDecalUnderLimb::DecalMaterial' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000080, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, Temp_object_Variable) == 0x000098, "Member 'Zombie_C_SpawnDecalUnderLimb::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakVector_X) == 0x0000D8, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakVector_Z) == 0x0000E8, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_MakeVector_ReturnValue_1) == 0x0000F0, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000108, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000110, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_MakeVector_ReturnValue_2) == 0x000128, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000140, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000148, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_LineTraceSingle_OutHit) == 0x000160, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_LineTraceSingle_ReturnValue) == 0x000248, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000250, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_bBlockingHit) == 0x000258, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_bInitialOverlap) == 0x000259, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_Time) == 0x00025C, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_Distance) == 0x000260, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_Location) == 0x000268, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_ImpactPoint) == 0x000280, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_Normal) == 0x000298, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B0, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_PhysMat) == 0x0002C8, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_HitActor) == 0x0002D0, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_HitComponent) == 0x0002D8, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_HitBoneName) == 0x0002E0, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_BoneName) == 0x0002E8, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_HitItem) == 0x0002F0, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_ElementIndex) == 0x0002F4, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_FaceIndex) == 0x0002F8, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_TraceStart) == 0x000300, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_BreakHitResult_TraceEnd) == 0x000318, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000330, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000348, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000350, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000368, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000370, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000378, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_MakeVector_ReturnValue_3) == 0x000380, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000398, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_SpawnDecalAtLocation_LifeSpan_ImplicitCast) == 0x0003A0, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_SpawnDecalAtLocation_LifeSpan_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0003A4, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnDecalUnderLimb, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0003A8, "Member 'Zombie_C_SpawnDecalUnderLimb::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function Zombie.Zombie_C.SpawnFallBloodDecal
// 0x0010 (0x0010 - 0x0000)
struct Zombie_C_SpawnFallBloodDecal final
{
public:
	EDismembermentPart                            DismembermentPart;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_SpawnFallBloodDecal) == 0x000004, "Wrong alignment on Zombie_C_SpawnFallBloodDecal");
static_assert(sizeof(Zombie_C_SpawnFallBloodDecal) == 0x000010, "Wrong size on Zombie_C_SpawnFallBloodDecal");
static_assert(offsetof(Zombie_C_SpawnFallBloodDecal, DismembermentPart) == 0x000000, "Member 'Zombie_C_SpawnFallBloodDecal::DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnFallBloodDecal, BoneName) == 0x000004, "Member 'Zombie_C_SpawnFallBloodDecal::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnFallBloodDecal, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'Zombie_C_SpawnFallBloodDecal::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnFallBloodDecal, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'Zombie_C_SpawnFallBloodDecal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Zombie.Zombie_C.SpawnHelmetSpark
// 0x00E8 (0x00E8 - 0x0000)
struct Zombie_C_SpawnHelmetSpark final
{
public:
	struct FHitResult                             HitInfo;                                           // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Zombie_C_SpawnHelmetSpark) == 0x000008, "Wrong alignment on Zombie_C_SpawnHelmetSpark");
static_assert(sizeof(Zombie_C_SpawnHelmetSpark) == 0x0000E8, "Wrong size on Zombie_C_SpawnHelmetSpark");
static_assert(offsetof(Zombie_C_SpawnHelmetSpark, HitInfo) == 0x000000, "Member 'Zombie_C_SpawnHelmetSpark::HitInfo' has a wrong offset!");

// Function Zombie.Zombie_C.SpawnLootPoint
// 0x02F0 (0x02F0 - 0x0000)
struct Zombie_C_SpawnLootPoint final
{
public:
	TArray<class FName>                           ItemsToSpawn;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         IterationLimitter;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IterationCounter;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             ItemInfo;                                          // 0x0018(0x0220)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FDefaultItemInfo>               ContainerItems;                                    // 0x0238(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0250(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombieDeadBodyLootPoint_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x02C8(0x0018)(ConstParm)
	TArray<struct FDefaultItemInfo>               CallFunc_GenerateLootFromTables_NewContainerItems; // 0x02E0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Zombie_C_SpawnLootPoint) == 0x000010, "Wrong alignment on Zombie_C_SpawnLootPoint");
static_assert(sizeof(Zombie_C_SpawnLootPoint) == 0x0002F0, "Wrong size on Zombie_C_SpawnLootPoint");
static_assert(offsetof(Zombie_C_SpawnLootPoint, ItemsToSpawn) == 0x000000, "Member 'Zombie_C_SpawnLootPoint::ItemsToSpawn' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, IterationLimitter) == 0x000010, "Member 'Zombie_C_SpawnLootPoint::IterationLimitter' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, IterationCounter) == 0x000014, "Member 'Zombie_C_SpawnLootPoint::IterationCounter' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, ItemInfo) == 0x000018, "Member 'Zombie_C_SpawnLootPoint::ItemInfo' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, ContainerItems) == 0x000238, "Member 'Zombie_C_SpawnLootPoint::ContainerItems' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, CallFunc_GetTransform_ReturnValue) == 0x000250, "Member 'Zombie_C_SpawnLootPoint::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002B0, "Member 'Zombie_C_SpawnLootPoint::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, CallFunc_Array_Length_ReturnValue) == 0x0002B8, "Member 'Zombie_C_SpawnLootPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, CallFunc_Greater_IntInt_ReturnValue) == 0x0002BC, "Member 'Zombie_C_SpawnLootPoint::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002C0, "Member 'Zombie_C_SpawnLootPoint::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, Temp_text_Variable) == 0x0002C8, "Member 'Zombie_C_SpawnLootPoint::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_SpawnLootPoint, CallFunc_GenerateLootFromTables_NewContainerItems) == 0x0002E0, "Member 'Zombie_C_SpawnLootPoint::CallFunc_GenerateLootFromTables_NewContainerItems' has a wrong offset!");

// Function Zombie.Zombie_C.Start Dismemberment
// 0x0130 (0x0130 - 0x0000)
struct Zombie_C_Start_Dismemberment final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBPE_Weapon_Type                              Param_WeaponType;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0018(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                HitLocation;                                       // 0x0100(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HitAngle;                                          // 0x0118(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Start;                                             // 0x0120(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue;             // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDismembermentPart                            CallFunc_DefineDismembermentbyBone_DismembermentPart; // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DefineDismembermentbyBone_PartFounded;    // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateLimbDurability_PartIsBroken;        // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_Start_Dismemberment) == 0x000008, "Wrong alignment on Zombie_C_Start_Dismemberment");
static_assert(sizeof(Zombie_C_Start_Dismemberment) == 0x000130, "Wrong size on Zombie_C_Start_Dismemberment");
static_assert(offsetof(Zombie_C_Start_Dismemberment, BoneName) == 0x000000, "Member 'Zombie_C_Start_Dismemberment::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, Damage) == 0x000008, "Member 'Zombie_C_Start_Dismemberment::Damage' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, Param_WeaponType) == 0x000010, "Member 'Zombie_C_Start_Dismemberment::Param_WeaponType' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, HitResult) == 0x000018, "Member 'Zombie_C_Start_Dismemberment::HitResult' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, HitLocation) == 0x000100, "Member 'Zombie_C_Start_Dismemberment::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, HitAngle) == 0x000118, "Member 'Zombie_C_Start_Dismemberment::HitAngle' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, Start) == 0x000120, "Member 'Zombie_C_Start_Dismemberment::Start' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_GetCPPZombieType_ReturnValue) == 0x000121, "Member 'Zombie_C_Start_Dismemberment::CallFunc_GetCPPZombieType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000122, "Member 'Zombie_C_Start_Dismemberment::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000123, "Member 'Zombie_C_Start_Dismemberment::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_BooleanAND_ReturnValue) == 0x000124, "Member 'Zombie_C_Start_Dismemberment::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, K2Node_SwitchInteger_CmpSuccess) == 0x000125, "Member 'Zombie_C_Start_Dismemberment::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_DefineDismembermentbyBone_DismembermentPart) == 0x000126, "Member 'Zombie_C_Start_Dismemberment::CallFunc_DefineDismembermentbyBone_DismembermentPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_DefineDismembermentbyBone_PartFounded) == 0x000127, "Member 'Zombie_C_Start_Dismemberment::CallFunc_DefineDismembermentbyBone_PartFounded' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000128, "Member 'Zombie_C_Start_Dismemberment::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000129, "Member 'Zombie_C_Start_Dismemberment::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00012A, "Member 'Zombie_C_Start_Dismemberment::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_BooleanOR_ReturnValue) == 0x00012B, "Member 'Zombie_C_Start_Dismemberment::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_Start_Dismemberment, CallFunc_UpdateLimbDurability_PartIsBroken) == 0x00012C, "Member 'Zombie_C_Start_Dismemberment::CallFunc_UpdateLimbDurability_PartIsBroken' has a wrong offset!");

// Function Zombie.Zombie_C.TypeConfiguration
// 0x0002 (0x0002 - 0x0000)
struct Zombie_C_TypeConfiguration final
{
public:
	EZombieType                                   CallFunc_GetCPPZombieType_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_TypeConfiguration) == 0x000001, "Wrong alignment on Zombie_C_TypeConfiguration");
static_assert(sizeof(Zombie_C_TypeConfiguration) == 0x000002, "Wrong size on Zombie_C_TypeConfiguration");
static_assert(offsetof(Zombie_C_TypeConfiguration, CallFunc_GetCPPZombieType_ReturnValue) == 0x000000, "Member 'Zombie_C_TypeConfiguration::CallFunc_GetCPPZombieType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_TypeConfiguration, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'Zombie_C_TypeConfiguration::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Zombie.Zombie_C.UpdateLimbDurability
// 0x0048 (0x0048 - 0x0000)
struct Zombie_C_UpdateLimbDurability final
{
public:
	EDismembermentPart                            DismemberPart;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Damage;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PartIsBroken;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LimbDurability;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_UpdateLimbDurability) == 0x000008, "Wrong alignment on Zombie_C_UpdateLimbDurability");
static_assert(sizeof(Zombie_C_UpdateLimbDurability) == 0x000048, "Wrong size on Zombie_C_UpdateLimbDurability");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, DismemberPart) == 0x000000, "Member 'Zombie_C_UpdateLimbDurability::DismemberPart' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, Damage) == 0x000008, "Member 'Zombie_C_UpdateLimbDurability::Damage' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, PartIsBroken) == 0x000010, "Member 'Zombie_C_UpdateLimbDurability::PartIsBroken' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, LimbDurability) == 0x000018, "Member 'Zombie_C_UpdateLimbDurability::LimbDurability' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'Zombie_C_UpdateLimbDurability::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000021, "Member 'Zombie_C_UpdateLimbDurability::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'Zombie_C_UpdateLimbDurability::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000023, "Member 'Zombie_C_UpdateLimbDurability::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'Zombie_C_UpdateLimbDurability::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, CallFunc_Map_Find_Value) == 0x000030, "Member 'Zombie_C_UpdateLimbDurability::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'Zombie_C_UpdateLimbDurability::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_UpdateLimbDurability, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'Zombie_C_UpdateLimbDurability::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.VertexPaintOnAllMeshes
// 0x02B0 (0x02B0 - 0x0000)
struct Zombie_C_VertexPaintOnAllMeshes final
{
public:
	struct FVertexPaintAtLocationStruct           InputPin;                                          // 0x0000(0x02B0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(Zombie_C_VertexPaintOnAllMeshes) == 0x000008, "Wrong alignment on Zombie_C_VertexPaintOnAllMeshes");
static_assert(sizeof(Zombie_C_VertexPaintOnAllMeshes) == 0x0002B0, "Wrong size on Zombie_C_VertexPaintOnAllMeshes");
static_assert(offsetof(Zombie_C_VertexPaintOnAllMeshes, InputPin) == 0x000000, "Member 'Zombie_C_VertexPaintOnAllMeshes::InputPin' has a wrong offset!");

// Function Zombie.Zombie_C.WitchZombieParams
// 0x0018 (0x0018 - 0x0000)
struct Zombie_C_WitchZombieParams final
{
public:
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_WitchZombieParams) == 0x000008, "Wrong alignment on Zombie_C_WitchZombieParams");
static_assert(sizeof(Zombie_C_WitchZombieParams) == 0x000018, "Wrong size on Zombie_C_WitchZombieParams");
static_assert(offsetof(Zombie_C_WitchZombieParams, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000000, "Member 'Zombie_C_WitchZombieParams::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_WitchZombieParams, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'Zombie_C_WitchZombieParams::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Zombie.Zombie_C.ZombieAttack_RPC
// 0x0004 (0x0004 - 0x0000)
struct Zombie_C_ZombieAttack_RPC final
{
public:
	E_AttackingArm                                Param_AttackingArm;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MovingAttack;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoorAttack;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CarAttack;                                         // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ZombieAttack_RPC) == 0x000001, "Wrong alignment on Zombie_C_ZombieAttack_RPC");
static_assert(sizeof(Zombie_C_ZombieAttack_RPC) == 0x000004, "Wrong size on Zombie_C_ZombieAttack_RPC");
static_assert(offsetof(Zombie_C_ZombieAttack_RPC, Param_AttackingArm) == 0x000000, "Member 'Zombie_C_ZombieAttack_RPC::Param_AttackingArm' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieAttack_RPC, MovingAttack) == 0x000001, "Member 'Zombie_C_ZombieAttack_RPC::MovingAttack' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieAttack_RPC, DoorAttack) == 0x000002, "Member 'Zombie_C_ZombieAttack_RPC::DoorAttack' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieAttack_RPC, CarAttack) == 0x000003, "Member 'Zombie_C_ZombieAttack_RPC::CarAttack' has a wrong offset!");

// Function Zombie.Zombie_C.ZombieDeath_RPC
// 0x0058 (0x0058 - 0x0000)
struct Zombie_C_ZombieDeath_RPC final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AController*                      InstigatedBy;                                      // 0x0020(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          DiedByGrenade;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiedByCar;                                         // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KilledInHead;                                      // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LastDamage;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DeathImpulse;                                      // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeadByTimer;                                       // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ZombieDeath_RPC) == 0x000008, "Wrong alignment on Zombie_C_ZombieDeath_RPC");
static_assert(sizeof(Zombie_C_ZombieDeath_RPC) == 0x000058, "Wrong size on Zombie_C_ZombieDeath_RPC");
static_assert(offsetof(Zombie_C_ZombieDeath_RPC, HitLocation) == 0x000000, "Member 'Zombie_C_ZombieDeath_RPC::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeath_RPC, BoneName) == 0x000018, "Member 'Zombie_C_ZombieDeath_RPC::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeath_RPC, InstigatedBy) == 0x000020, "Member 'Zombie_C_ZombieDeath_RPC::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeath_RPC, DiedByGrenade) == 0x000028, "Member 'Zombie_C_ZombieDeath_RPC::DiedByGrenade' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeath_RPC, DiedByCar) == 0x000029, "Member 'Zombie_C_ZombieDeath_RPC::DiedByCar' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeath_RPC, KilledInHead) == 0x00002A, "Member 'Zombie_C_ZombieDeath_RPC::KilledInHead' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeath_RPC, LastDamage) == 0x000030, "Member 'Zombie_C_ZombieDeath_RPC::LastDamage' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeath_RPC, DeathImpulse) == 0x000038, "Member 'Zombie_C_ZombieDeath_RPC::DeathImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeath_RPC, DeadByTimer) == 0x000050, "Member 'Zombie_C_ZombieDeath_RPC::DeadByTimer' has a wrong offset!");

// Function Zombie.Zombie_C.ZombieDeathOnClients
// 0x01E0 (0x01E0 - 0x0000)
struct Zombie_C_ZombieDeathOnClients final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DeathImpulse;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiedByGrenade;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiedByCar;                                         // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KilledInHead;                                      // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeadByTimer;                                       // 0x003B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0070(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNavAvoidanceMask                      K2Node_MakeStruct_NavAvoidanceMask;                // 0x01D8(0x0004)(NoDestructor)
};
static_assert(alignof(Zombie_C_ZombieDeathOnClients) == 0x000008, "Wrong alignment on Zombie_C_ZombieDeathOnClients");
static_assert(sizeof(Zombie_C_ZombieDeathOnClients) == 0x0001E0, "Wrong size on Zombie_C_ZombieDeathOnClients");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, HitLocation) == 0x000000, "Member 'Zombie_C_ZombieDeathOnClients::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, DeathImpulse) == 0x000018, "Member 'Zombie_C_ZombieDeathOnClients::DeathImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, BoneName) == 0x000030, "Member 'Zombie_C_ZombieDeathOnClients::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, DiedByGrenade) == 0x000038, "Member 'Zombie_C_ZombieDeathOnClients::DiedByGrenade' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, DiedByCar) == 0x000039, "Member 'Zombie_C_ZombieDeathOnClients::DiedByCar' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, KilledInHead) == 0x00003A, "Member 'Zombie_C_ZombieDeathOnClients::KilledInHead' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, DeadByTimer) == 0x00003B, "Member 'Zombie_C_ZombieDeathOnClients::DeadByTimer' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_HasAuthority_ReturnValue) == 0x00003C, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000070, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000158, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000160, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_Normal_ReturnValue) == 0x000178, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000190, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0001A8, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_HasAuthority_ReturnValue_1) == 0x0001B0, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, K2Node_CreateDelegate_OutputDelegate) == 0x0001B4, "Member 'Zombie_C_ZombieDeathOnClients::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001C8, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, CallFunc_MakeLiteralName_ReturnValue) == 0x0001D0, "Member 'Zombie_C_ZombieDeathOnClients::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnClients, K2Node_MakeStruct_NavAvoidanceMask) == 0x0001D8, "Member 'Zombie_C_ZombieDeathOnClients::K2Node_MakeStruct_NavAvoidanceMask' has a wrong offset!");

// Function Zombie.Zombie_C.ZombieDeathOnServer
// 0x00E8 (0x00E8 - 0x0000)
struct Zombie_C_ZombieDeathOnServer final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DeathImpulse;                                      // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiedByGrenade;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DiedByCar;                                         // 0x0039(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KilledInHead;                                      // 0x003A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          DeadByTimer;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ItemsToSpawn;                                      // 0x0050(0x0010)(Edit, BlueprintVisible)
	class ASurvivalPlayer_V2_C*                   KillerSurvivor;                                    // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bLocked)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetItemNamesForLoot_ReturnValue;          // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class AZombie_C*                        Temp_object_Variable;                              // 0x0090(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_Experience_C>       K2Node_DynamicCast_AsI_Experience;                 // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetXP_XP;                                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_C_ZombieDeathOnServer) == 0x000008, "Wrong alignment on Zombie_C_ZombieDeathOnServer");
static_assert(sizeof(Zombie_C_ZombieDeathOnServer) == 0x0000E8, "Wrong size on Zombie_C_ZombieDeathOnServer");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, HitLocation) == 0x000000, "Member 'Zombie_C_ZombieDeathOnServer::HitLocation' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, DeathImpulse) == 0x000018, "Member 'Zombie_C_ZombieDeathOnServer::DeathImpulse' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, BoneName) == 0x000030, "Member 'Zombie_C_ZombieDeathOnServer::BoneName' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, DiedByGrenade) == 0x000038, "Member 'Zombie_C_ZombieDeathOnServer::DiedByGrenade' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, DiedByCar) == 0x000039, "Member 'Zombie_C_ZombieDeathOnServer::DiedByCar' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, KilledInHead) == 0x00003A, "Member 'Zombie_C_ZombieDeathOnServer::KilledInHead' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, InstigatedBy) == 0x000040, "Member 'Zombie_C_ZombieDeathOnServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, DeadByTimer) == 0x000048, "Member 'Zombie_C_ZombieDeathOnServer::DeadByTimer' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, ItemsToSpawn) == 0x000050, "Member 'Zombie_C_ZombieDeathOnServer::ItemsToSpawn' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, KillerSurvivor) == 0x000060, "Member 'Zombie_C_ZombieDeathOnServer::KillerSurvivor' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'Zombie_C_ZombieDeathOnServer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, CallFunc_GetItemNamesForLoot_ReturnValue) == 0x000078, "Member 'Zombie_C_ZombieDeathOnServer::CallFunc_GetItemNamesForLoot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'Zombie_C_ZombieDeathOnServer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'Zombie_C_ZombieDeathOnServer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, Temp_object_Variable) == 0x000090, "Member 'Zombie_C_ZombieDeathOnServer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, CallFunc_K2_GetPawn_ReturnValue) == 0x000098, "Member 'Zombie_C_ZombieDeathOnServer::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x0000A0, "Member 'Zombie_C_ZombieDeathOnServer::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'Zombie_C_ZombieDeathOnServer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x0000B0, "Member 'Zombie_C_ZombieDeathOnServer::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'Zombie_C_ZombieDeathOnServer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, K2Node_DynamicCast_AsI_Experience) == 0x0000C8, "Member 'Zombie_C_ZombieDeathOnServer::K2Node_DynamicCast_AsI_Experience' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'Zombie_C_ZombieDeathOnServer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Zombie_C_ZombieDeathOnServer, CallFunc_GetXP_XP) == 0x0000E0, "Member 'Zombie_C_ZombieDeathOnServer::CallFunc_GetXP_XP' has a wrong offset!");

}

