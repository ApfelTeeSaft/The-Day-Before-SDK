#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ChatEntry

#include "Basic.hpp"

#include "ChatType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_ChatEntry.W_ChatEntry_C.BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function W_ChatEntry.W_ChatEntry_C.BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextChangedEvent__DelegateSignature");
static_assert(sizeof(W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextChangedEvent__DelegateSignature) == 0x000018, "Wrong size on W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextChangedEvent__DelegateSignature");
static_assert(offsetof(W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'W_ChatEntry_C_BndEvt__W_ChatEntry_MultiLineEditable_ChatEntry_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function W_ChatEntry.W_ChatEntry_C.ExecuteUbergraph_W_ChatEntry
// 0x0098 (0x0098 - 0x0000)
struct W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0018(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0038(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
};
static_assert(alignof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry) == 0x000008, "Wrong alignment on W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry");
static_assert(sizeof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry) == 0x000098, "Wrong size on W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, EntryPoint) == 0x000000, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, K2Node_ComponentBoundEvent_Text_1) == 0x000018, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, K2Node_ComponentBoundEvent_CommitMethod) == 0x000030, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, K2Node_ComponentBoundEvent_Text) == 0x000038, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, CallFunc_Len_ReturnValue) == 0x000060, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, CallFunc_GetSubstring_ReturnValue) == 0x000068, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'W_ChatEntry_C_ExecuteUbergraph_W_ChatEntry::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_ChatEntry.W_ChatEntry_C.OnPreviewKeyDown
// 0x02D8 (0x02D8 - 0x0000)
struct W_ChatEntry_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0148(0x0018)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0168(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0220(0x00B8)()
};
static_assert(alignof(W_ChatEntry_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on W_ChatEntry_C_OnPreviewKeyDown");
static_assert(sizeof(W_ChatEntry_C_OnPreviewKeyDown) == 0x0002D8, "Wrong size on W_ChatEntry_C_OnPreviewKeyDown");
static_assert(offsetof(W_ChatEntry_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'W_ChatEntry_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'W_ChatEntry_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'W_ChatEntry_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'W_ChatEntry_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_OnPreviewKeyDown, CallFunc_GetText_ReturnValue) == 0x000148, "Member 'W_ChatEntry_C_OnPreviewKeyDown::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000160, "Member 'W_ChatEntry_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000168, "Member 'W_ChatEntry_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000220, "Member 'W_ChatEntry_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function W_ChatEntry.W_ChatEntry_C.OnTextCommitted(ChatEntry)__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_ChatEntry_C_OnTextCommitted_ChatEntry___DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ETextCommit                                   Commit_method;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ChatEntry_C_OnTextCommitted_ChatEntry___DelegateSignature) == 0x000008, "Wrong alignment on W_ChatEntry_C_OnTextCommitted_ChatEntry___DelegateSignature");
static_assert(sizeof(W_ChatEntry_C_OnTextCommitted_ChatEntry___DelegateSignature) == 0x000020, "Wrong size on W_ChatEntry_C_OnTextCommitted_ChatEntry___DelegateSignature");
static_assert(offsetof(W_ChatEntry_C_OnTextCommitted_ChatEntry___DelegateSignature, Text) == 0x000000, "Member 'W_ChatEntry_C_OnTextCommitted_ChatEntry___DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_OnTextCommitted_ChatEntry___DelegateSignature, Commit_method) == 0x000018, "Member 'W_ChatEntry_C_OnTextCommitted_ChatEntry___DelegateSignature::Commit_method' has a wrong offset!");

// Function W_ChatEntry.W_ChatEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ChatEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ChatEntry_C_PreConstruct) == 0x000001, "Wrong alignment on W_ChatEntry_C_PreConstruct");
static_assert(sizeof(W_ChatEntry_C_PreConstruct) == 0x000001, "Wrong size on W_ChatEntry_C_PreConstruct");
static_assert(offsetof(W_ChatEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ChatEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_ChatEntry.W_ChatEntry_C.SetChatType
// 0x00E0 (0x00E0 - 0x0000)
struct W_ChatEntry_C_SetChatType final
{
public:
	EChatType                                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
};
static_assert(alignof(W_ChatEntry_C_SetChatType) == 0x000008, "Wrong alignment on W_ChatEntry_C_SetChatType");
static_assert(sizeof(W_ChatEntry_C_SetChatType) == 0x0000E0, "Wrong size on W_ChatEntry_C_SetChatType");
static_assert(offsetof(W_ChatEntry_C_SetChatType, Temp_byte_Variable) == 0x000000, "Member 'W_ChatEntry_C_SetChatType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_SetChatType, Temp_text_Variable) == 0x000008, "Member 'W_ChatEntry_C_SetChatType::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_SetChatType, Temp_text_Variable_1) == 0x000020, "Member 'W_ChatEntry_C_SetChatType::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_SetChatType, Temp_text_Variable_2) == 0x000038, "Member 'W_ChatEntry_C_SetChatType::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_SetChatType, K2Node_Select_Default) == 0x000050, "Member 'W_ChatEntry_C_SetChatType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_SetChatType, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'W_ChatEntry_C_SetChatType::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_SetChatType, K2Node_MakeArray_Array) == 0x0000B8, "Member 'W_ChatEntry_C_SetChatType::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_ChatEntry_C_SetChatType, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'W_ChatEntry_C_SetChatType::CallFunc_Format_ReturnValue' has a wrong offset!");

}

