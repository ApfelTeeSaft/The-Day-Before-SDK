#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseTrap

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_BaseTrap.BP_BaseTrap_C.Catch
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseTrap_C_Catch final
{
public:
	class APawn*                                  NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseTrap_C_Catch) == 0x000008, "Wrong alignment on BP_BaseTrap_C_Catch");
static_assert(sizeof(BP_BaseTrap_C_Catch) == 0x000008, "Wrong size on BP_BaseTrap_C_Catch");
static_assert(offsetof(BP_BaseTrap_C_Catch, NewParam) == 0x000000, "Member 'BP_BaseTrap_C_Catch::NewParam' has a wrong offset!");

// Function BP_BaseTrap.BP_BaseTrap_C.CatchMulti
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseTrap_C_CatchMulti final
{
public:
	class APawn*                                  NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseTrap_C_CatchMulti) == 0x000008, "Wrong alignment on BP_BaseTrap_C_CatchMulti");
static_assert(sizeof(BP_BaseTrap_C_CatchMulti) == 0x000008, "Wrong size on BP_BaseTrap_C_CatchMulti");
static_assert(offsetof(BP_BaseTrap_C_CatchMulti, NewParam) == 0x000000, "Member 'BP_BaseTrap_C_CatchMulti::NewParam' has a wrong offset!");

// Function BP_BaseTrap.BP_BaseTrap_C.ExecuteUbergraph_BP_BaseTrap
// 0x0040 (0x0040 - 0x0000)
struct BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_NewParam_3;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewParam_2;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewParam_1;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewParam;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap) == 0x000008, "Wrong alignment on BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap");
static_assert(sizeof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap) == 0x000040, "Wrong size on BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap");
static_assert(offsetof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap, EntryPoint) == 0x000000, "Member 'BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap, K2Node_CustomEvent_NewParam_3) == 0x000008, "Member 'BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap::K2Node_CustomEvent_NewParam_3' has a wrong offset!");
static_assert(offsetof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap, K2Node_CustomEvent_NewParam_2) == 0x000010, "Member 'BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap::K2Node_CustomEvent_NewParam_2' has a wrong offset!");
static_assert(offsetof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap, K2Node_CustomEvent_NewParam_1) == 0x000018, "Member 'BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap::K2Node_CustomEvent_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap, K2Node_CustomEvent_NewParam) == 0x000020, "Member 'BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap, K2Node_Event_OtherActor) == 0x000028, "Member 'BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap, K2Node_DynamicCast_AsPawn) == 0x000030, "Member 'BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BaseTrap_C_ExecuteUbergraph_BP_BaseTrap::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_BaseTrap.BP_BaseTrap_C.OnCatch
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseTrap_C_OnCatch final
{
public:
	class APawn*                                  NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseTrap_C_OnCatch) == 0x000008, "Wrong alignment on BP_BaseTrap_C_OnCatch");
static_assert(sizeof(BP_BaseTrap_C_OnCatch) == 0x000008, "Wrong size on BP_BaseTrap_C_OnCatch");
static_assert(offsetof(BP_BaseTrap_C_OnCatch, NewParam) == 0x000000, "Member 'BP_BaseTrap_C_OnCatch::NewParam' has a wrong offset!");

// Function BP_BaseTrap.BP_BaseTrap_C.OnCatchMulti
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseTrap_C_OnCatchMulti final
{
public:
	class APawn*                                  NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseTrap_C_OnCatchMulti) == 0x000008, "Wrong alignment on BP_BaseTrap_C_OnCatchMulti");
static_assert(sizeof(BP_BaseTrap_C_OnCatchMulti) == 0x000008, "Wrong size on BP_BaseTrap_C_OnCatchMulti");
static_assert(offsetof(BP_BaseTrap_C_OnCatchMulti, NewParam) == 0x000000, "Member 'BP_BaseTrap_C_OnCatchMulti::NewParam' has a wrong offset!");

// Function BP_BaseTrap.BP_BaseTrap_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_BaseTrap_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BaseTrap_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_BaseTrap_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_BaseTrap_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_BaseTrap_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_BaseTrap_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_BaseTrap_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

}

