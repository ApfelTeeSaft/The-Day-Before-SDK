#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Mark

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_Mark.W_Mark_C.AdaptToScreenSize
// 0x00D0 (0x00D0 - 0x0000)
struct W_Mark_C_AdaptToScreenSize final
{
public:
	struct FVector2D                              InVec;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Mark_C_AdaptToScreenSize) == 0x000008, "Wrong alignment on W_Mark_C_AdaptToScreenSize");
static_assert(sizeof(W_Mark_C_AdaptToScreenSize) == 0x0000D0, "Wrong size on W_Mark_C_AdaptToScreenSize");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, InVec) == 0x000000, "Member 'W_Mark_C_AdaptToScreenSize::InVec' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, ReturnValue) == 0x000010, "Member 'W_Mark_C_AdaptToScreenSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_GetViewportSize_ReturnValue) == 0x000020, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_BreakVector2D_X) == 0x000030, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_BreakVector2D_X_1) == 0x000040, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_GetViewportScale_ReturnValue) == 0x000050, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000058, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000060, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_GetSize_ReturnValue) == 0x000068, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_BreakVector2D_X_2) == 0x000078, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_BreakVector2D_Y_2) == 0x000080, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_FClamp_ReturnValue_1) == 0x0000A0, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_MakeVector2D_ReturnValue) == 0x0000A8, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000B8, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_AdaptToScreenSize, CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast) == 0x0000C8, "Member 'W_Mark_C_AdaptToScreenSize::CallFunc_MultiplyMultiply_FloatFloat_Base_ImplicitCast' has a wrong offset!");

// Function W_Mark.W_Mark_C.ExecuteUbergraph_W_Mark
// 0x0220 (0x0220 - 0x0000)
struct W_Mark_C_ExecuteUbergraph_W_Mark final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_AdaptToScreenSize_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot_1;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue_1; // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_AdaptToScreenSize_ReturnValue_1;          // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0120(0x00D0)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_A_ImplicitCast;      // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x0218(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Mark_C_ExecuteUbergraph_W_Mark) == 0x000010, "Wrong alignment on W_Mark_C_ExecuteUbergraph_W_Mark");
static_assert(sizeof(W_Mark_C_ExecuteUbergraph_W_Mark) == 0x000220, "Wrong size on W_Mark_C_ExecuteUbergraph_W_Mark");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, EntryPoint) == 0x000000, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000010, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_Event_MyGeometry) == 0x000018, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_Event_InDeltaTime) == 0x000050, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000060, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x000088, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x000098, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_AdaptToScreenSize_ReturnValue) == 0x0000A0, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_AdaptToScreenSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x0000B0, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, Temp_bool_Has_Been_Initd_Variable) == 0x0000B8, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000C0, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_DynamicCast_AsCanvas_Panel_Slot_1) == 0x0000C8, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_DynamicCast_AsCanvas_Panel_Slot_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1) == 0x0000D8, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_ProjectWorldLocationToScreen_ScreenLocation_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_ProjectWorldLocationToScreen_ReturnValue_1) == 0x0000E8, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_ProjectWorldLocationToScreen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_AdaptToScreenSize_ReturnValue_1) == 0x0000F0, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_AdaptToScreenSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_SwitchEnum_CmpSuccess) == 0x000100, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_IsValid_ReturnValue_1) == 0x000101, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000108, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_MakeStruct_SlateBrush) == 0x000120, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_GetPlayerController_ReturnValue_2) == 0x0001F0, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_DynamicCast_AsSurv_PC) == 0x0001F8, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_DynamicCast_bSuccess_2) == 0x000200, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_Array_RemoveItem_ReturnValue) == 0x000201, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, CallFunc_Divide_Vector2DFloat_A_ImplicitCast) == 0x000208, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::CallFunc_Divide_Vector2DFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Mark_C_ExecuteUbergraph_W_Mark, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x000218, "Member 'W_Mark_C_ExecuteUbergraph_W_Mark::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function W_Mark.W_Mark_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Mark_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Mark_C_Tick) == 0x000004, "Wrong alignment on W_Mark_C_Tick");
static_assert(sizeof(W_Mark_C_Tick) == 0x00003C, "Wrong size on W_Mark_C_Tick");
static_assert(offsetof(W_Mark_C_Tick, MyGeometry) == 0x000000, "Member 'W_Mark_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Mark_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Mark_C_Tick::InDeltaTime' has a wrong offset!");

}

