#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_RandomDeerBehaviour

#include "Basic.hpp"

#include "E_DeerState_structs.hpp"


namespace SDK::Params
{

// Function BTT_RandomDeerBehaviour.BTT_RandomDeerBehaviour_C.BehaviourFinished
// 0x0014 (0x0014 - 0x0000)
struct BTT_RandomDeerBehaviour_C_BehaviourFinished final
{
public:
	E_DeerState                                   FromState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(E_DeerState FromState)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RandomDeerBehaviour_C_BehaviourFinished) == 0x000004, "Wrong alignment on BTT_RandomDeerBehaviour_C_BehaviourFinished");
static_assert(sizeof(BTT_RandomDeerBehaviour_C_BehaviourFinished) == 0x000014, "Wrong size on BTT_RandomDeerBehaviour_C_BehaviourFinished");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_BehaviourFinished, FromState) == 0x000000, "Member 'BTT_RandomDeerBehaviour_C_BehaviourFinished::FromState' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_BehaviourFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BTT_RandomDeerBehaviour_C_BehaviourFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BTT_RandomDeerBehaviour.BTT_RandomDeerBehaviour_C.ExecuteUbergraph_BTT_RandomDeerBehaviour
// 0x0058 (0x0058 - 0x0000)
struct BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DeerV2_C*                           K2Node_DynamicCast_AsBP_Deer_V2;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OwnerActor;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_DeerState FromState)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_DeerState FromState)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_DeerState                                   CallFunc_RandomBehaviour_State;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour) == 0x000008, "Wrong alignment on BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour");
static_assert(sizeof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour) == 0x000058, "Wrong size on BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour, EntryPoint) == 0x000000, "Member 'BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour, K2Node_Event_OwnerController) == 0x000008, "Member 'BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour, K2Node_DynamicCast_AsBP_Deer_V2) == 0x000018, "Member 'BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour::K2Node_DynamicCast_AsBP_Deer_V2' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour, K2Node_Event_OwnerActor) == 0x000028, "Member 'BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour::K2Node_Event_OwnerActor' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour, CallFunc_RandomBehaviour_State) == 0x000050, "Member 'BTT_RandomDeerBehaviour_C_ExecuteUbergraph_BTT_RandomDeerBehaviour::CallFunc_RandomBehaviour_State' has a wrong offset!");

// Function BTT_RandomDeerBehaviour.BTT_RandomDeerBehaviour_C.ReceiveAbort
// 0x0008 (0x0008 - 0x0000)
struct BTT_RandomDeerBehaviour_C_ReceiveAbort final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RandomDeerBehaviour_C_ReceiveAbort) == 0x000008, "Wrong alignment on BTT_RandomDeerBehaviour_C_ReceiveAbort");
static_assert(sizeof(BTT_RandomDeerBehaviour_C_ReceiveAbort) == 0x000008, "Wrong size on BTT_RandomDeerBehaviour_C_ReceiveAbort");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ReceiveAbort, OwnerActor) == 0x000000, "Member 'BTT_RandomDeerBehaviour_C_ReceiveAbort::OwnerActor' has a wrong offset!");

// Function BTT_RandomDeerBehaviour.BTT_RandomDeerBehaviour_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_RandomDeerBehaviour_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RandomDeerBehaviour_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_RandomDeerBehaviour_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_RandomDeerBehaviour_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_RandomDeerBehaviour_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_RandomDeerBehaviour_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RandomDeerBehaviour_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_RandomDeerBehaviour_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

