#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FWD_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FGearPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FWD_BP.FWD_BP_C
// 0x0090 (0x06E0 - 0x0650)
class AFWD_BP_C final : public AFGearVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0650(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USmoothSync*                            SmoothSync;                                        // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFGearEffects*                          FGearEffects;                                      // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFGearOrbitCamera*                      FGearOrbitCamera;                                  // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartPos;                                          // 0x0678(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartRot;                                          // 0x0690(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Force;                                             // 0x06A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YawScale;                                          // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PitchScale;                                        // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZoomScale;                                         // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      As_Survival_Player;                                // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__FWD_BP_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_FWD_BP(int32 EntryPoint);
	void InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_NumPadEight_K2Node_InputKeyEvent_10(const struct FKey& Key);
	void InpActEvt_NumPadEight_K2Node_InputKeyEvent_9(const struct FKey& Key);
	void InpActEvt_NumPadOne_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void InpActEvt_NumPadOne_K2Node_InputKeyEvent_8(const struct FKey& Key);
	void InpActEvt_NumPadSeven_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void InpActEvt_NumPadSeven_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_NumPadTwo_K2Node_InputKeyEvent_11(const struct FKey& Key);
	void InpActEvt_NumPadTwo_K2Node_InputKeyEvent_12(const struct FKey& Key);
	void InpActEvt_R_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_2(float AxisValue);
	void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0(float AxisValue);
	void InpAxisKeyEvt_MouseY_K2Node_InputAxisKeyEvent_1(float AxisValue);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FWD_BP_C">();
	}
	static class AFWD_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFWD_BP_C>();
	}
};
static_assert(alignof(AFWD_BP_C) == 0x000010, "Wrong alignment on AFWD_BP_C");
static_assert(sizeof(AFWD_BP_C) == 0x0006E0, "Wrong size on AFWD_BP_C");
static_assert(offsetof(AFWD_BP_C, UberGraphFrame) == 0x000650, "Member 'AFWD_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, SmoothSync) == 0x000658, "Member 'AFWD_BP_C::SmoothSync' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, Box) == 0x000660, "Member 'AFWD_BP_C::Box' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, FGearEffects) == 0x000668, "Member 'AFWD_BP_C::FGearEffects' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, FGearOrbitCamera) == 0x000670, "Member 'AFWD_BP_C::FGearOrbitCamera' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, StartPos) == 0x000678, "Member 'AFWD_BP_C::StartPos' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, StartRot) == 0x000690, "Member 'AFWD_BP_C::StartRot' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, Force) == 0x0006A8, "Member 'AFWD_BP_C::Force' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, YawScale) == 0x0006C0, "Member 'AFWD_BP_C::YawScale' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, PitchScale) == 0x0006C8, "Member 'AFWD_BP_C::PitchScale' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, ZoomScale) == 0x0006D0, "Member 'AFWD_BP_C::ZoomScale' has a wrong offset!");
static_assert(offsetof(AFWD_BP_C, As_Survival_Player) == 0x0006D8, "Member 'AFWD_BP_C::As_Survival_Player' has a wrong offset!");

}

