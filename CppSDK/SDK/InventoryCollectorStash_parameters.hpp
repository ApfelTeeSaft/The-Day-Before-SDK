#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventoryCollectorStash

#include "Basic.hpp"

#include "PickupAttachments_structs.hpp"
#include "AttachmentInfo_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "DefaultItemInfo_structs.hpp"


namespace SDK::Params
{

// Function InventoryCollectorStash.InventoryCollectorStash_C.CollectInventory
// 0x01F8 (0x01F8 - 0x0000)
struct InventoryCollectorStash_C_CollectInventory final
{
public:
	TArray<class FString>                         Data;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FFItemInfo>                     ContainersData;                                    // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FFItemInfo>                     ContainerItems;                                    // 0x0020(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          Succes_;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NewLocalVar;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         List;                                              // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_CollectInventory_Data;                    // 0x0080(0x0010)(ReferenceParm)
	TArray<struct FFItemInfo>                     CallFunc_CollectInventory_ContainersData;          // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FFItemInfo>                     CallFunc_CollectInventory_ContainerItems;          // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CollectInventory_Succes_;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAttachmentInfo                        CallFunc_Array_Get_Item_1;                         // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryCollectorStash_C_CollectInventory) == 0x000008, "Wrong alignment on InventoryCollectorStash_C_CollectInventory");
static_assert(sizeof(InventoryCollectorStash_C_CollectInventory) == 0x0001F8, "Wrong size on InventoryCollectorStash_C_CollectInventory");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, Data) == 0x000000, "Member 'InventoryCollectorStash_C_CollectInventory::Data' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, ContainersData) == 0x000010, "Member 'InventoryCollectorStash_C_CollectInventory::ContainersData' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, ContainerItems) == 0x000020, "Member 'InventoryCollectorStash_C_CollectInventory::ContainerItems' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, Succes_) == 0x000030, "Member 'InventoryCollectorStash_C_CollectInventory::Succes_' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, NewLocalVar) == 0x000038, "Member 'InventoryCollectorStash_C_CollectInventory::NewLocalVar' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, List) == 0x000048, "Member 'InventoryCollectorStash_C_CollectInventory::List' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, Temp_int_Array_Index_Variable) == 0x000058, "Member 'InventoryCollectorStash_C_CollectInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'InventoryCollectorStash_C_CollectInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'InventoryCollectorStash_C_CollectInventory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'InventoryCollectorStash_C_CollectInventory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_CollectInventory_Data) == 0x000080, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_CollectInventory_Data' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_CollectInventory_ContainersData) == 0x000090, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_CollectInventory_ContainersData' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_CollectInventory_ContainerItems) == 0x0000A0, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_CollectInventory_ContainerItems' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_CollectInventory_Succes_) == 0x0000B0, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_CollectInventory_Succes_' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_GetCount_Count) == 0x0000C4, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Conv_IntToString_ReturnValue) == 0x0000C8, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000D8, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000E8, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Conv_NameToString_ReturnValue) == 0x0000F8, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000118, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000128, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000138, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000148, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000158, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000168, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000178, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000188, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000198, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001A8, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001B8, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001C8, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001D8, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Array_AddUnique_ReturnValue) == 0x0001E8, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Array_Length_ReturnValue_1) == 0x0001EC, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CollectInventory, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001F0, "Member 'InventoryCollectorStash_C_CollectInventory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function InventoryCollectorStash.InventoryCollectorStash_C.CreateAttachmentsInfo
// 0x00C0 (0x00C0 - 0x0000)
struct InventoryCollectorStash_C_CreateAttachmentsInfo final
{
public:
	class FString                                 Line;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FPickupAttachments                     PickupAttachments;                                 // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FAttachmentInfo>                AttArray;                                          // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttachmentInfo                        K2Node_MakeStruct_AttachmentInfo;                  // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPickupAttachments                     K2Node_MakeStruct_PickupAttachments;               // 0x00A8(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryCollectorStash_C_CreateAttachmentsInfo) == 0x000008, "Wrong alignment on InventoryCollectorStash_C_CreateAttachmentsInfo");
static_assert(sizeof(InventoryCollectorStash_C_CreateAttachmentsInfo) == 0x0000C0, "Wrong size on InventoryCollectorStash_C_CreateAttachmentsInfo");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, Line) == 0x000000, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::Line' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, PickupAttachments) == 0x000010, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::PickupAttachments' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, AttArray) == 0x000020, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::AttArray' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_ParseIntoArray_ReturnValue) == 0x000030, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, Temp_int_Array_Index_Variable) == 0x000040, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_Array_Get_Item) == 0x000048, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_Split_LeftS) == 0x000058, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_Split_RightS) == 0x000068, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_Split_ReturnValue) == 0x000078, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000090, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, K2Node_MakeStruct_AttachmentInfo) == 0x000098, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::K2Node_MakeStruct_AttachmentInfo' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, K2Node_MakeStruct_PickupAttachments) == 0x0000A8, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::K2Node_MakeStruct_PickupAttachments' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_CreateAttachmentsInfo, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'InventoryCollectorStash_C_CreateAttachmentsInfo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function InventoryCollectorStash.InventoryCollectorStash_C.GetStashItems
// 0x0010 (0x0010 - 0x0000)
struct InventoryCollectorStash_C_GetStashItems final
{
public:
	TArray<class FString>                         Param_StashItems;                                  // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(InventoryCollectorStash_C_GetStashItems) == 0x000008, "Wrong alignment on InventoryCollectorStash_C_GetStashItems");
static_assert(sizeof(InventoryCollectorStash_C_GetStashItems) == 0x000010, "Wrong size on InventoryCollectorStash_C_GetStashItems");
static_assert(offsetof(InventoryCollectorStash_C_GetStashItems, Param_StashItems) == 0x000000, "Member 'InventoryCollectorStash_C_GetStashItems::Param_StashItems' has a wrong offset!");

// Function InventoryCollectorStash.InventoryCollectorStash_C.PlaceInventory
// 0x07D0 (0x07D0 - 0x0000)
struct InventoryCollectorStash_C_PlaceInventory final
{
public:
	TArray<class FString>                         Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FDefaultItemInfo>               AdditionalItemData;                                // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPickupAttachments                     CallFunc_CreateAttachmentsInfo_PickupAttachments;  // 0x0080(0x0010)(HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo;                 // 0x00C8(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       CallFunc_Array_Get_Item_1;                         // 0x0110(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0158(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             K2Node_SetFieldsInStruct_StructOut;                // 0x0380(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItem_Added;                         // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewItem_AddedToSlot;                   // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_AddNewItem_Info;                          // 0x05A8(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewItem_SlotItemRef;                   // 0x07C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InventoryCollectorStash_C_PlaceInventory) == 0x000008, "Wrong alignment on InventoryCollectorStash_C_PlaceInventory");
static_assert(sizeof(InventoryCollectorStash_C_PlaceInventory) == 0x0007D0, "Wrong size on InventoryCollectorStash_C_PlaceInventory");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, Data) == 0x000000, "Member 'InventoryCollectorStash_C_PlaceInventory::Data' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, AdditionalItemData) == 0x000010, "Member 'InventoryCollectorStash_C_PlaceInventory::AdditionalItemData' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'InventoryCollectorStash_C_PlaceInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, Temp_int_Array_Index_Variable) == 0x000030, "Member 'InventoryCollectorStash_C_PlaceInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'InventoryCollectorStash_C_PlaceInventory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Array_Get_Item) == 0x000038, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_ParseIntoArray_ReturnValue) == 0x000050, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x000064, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000065, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_SelectString_ReturnValue) == 0x000068, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000078, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_CreateAttachmentsInfo_PickupAttachments) == 0x000080, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_CreateAttachmentsInfo_PickupAttachments' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_SelectString_ReturnValue_1) == 0x000090, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_SelectString_ReturnValue_2) == 0x0000A0, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Conv_StringToDouble_ReturnValue) == 0x0000B0, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000B8, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x0000BC, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Conv_StringToName_ReturnValue) == 0x0000C0, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, K2Node_MakeStruct_DefaultItemInfo) == 0x0000C8, "Member 'InventoryCollectorStash_C_PlaceInventory::K2Node_MakeStruct_DefaultItemInfo' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, Temp_int_Array_Index_Variable_1) == 0x000108, "Member 'InventoryCollectorStash_C_PlaceInventory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Array_Add_ReturnValue) == 0x000150, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Array_Length_ReturnValue_2) == 0x000154, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_GetDataTableRowFromName_OutRow) == 0x000158, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000378, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_Less_IntInt_ReturnValue_1) == 0x000379, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, K2Node_SetFieldsInStruct_StructOut) == 0x000380, "Member 'InventoryCollectorStash_C_PlaceInventory::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_AddNewItem_Added) == 0x0005A0, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_AddNewItem_Added' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_AddNewItem_AddedToSlot) == 0x0005A4, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_AddNewItem_AddedToSlot' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_AddNewItem_Info) == 0x0005A8, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_AddNewItem_Info' has a wrong offset!");
static_assert(offsetof(InventoryCollectorStash_C_PlaceInventory, CallFunc_AddNewItem_SlotItemRef) == 0x0007C8, "Member 'InventoryCollectorStash_C_PlaceInventory::CallFunc_AddNewItem_SlotItemRef' has a wrong offset!");

}

