#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ShopSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_ShopSlot.W_ShopSlot_C.CheckIfMoneyEnogh
// 0x00A0 (0x00A0 - 0x0000)
struct W_ShopSlot_C_CheckIfMoneyEnogh final
{
public:
	int32                                         MoneyCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0034(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0048(0x0014)()
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0070(0x0014)()
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopSlot_C_CheckIfMoneyEnogh) == 0x000008, "Wrong alignment on W_ShopSlot_C_CheckIfMoneyEnogh");
static_assert(sizeof(W_ShopSlot_C_CheckIfMoneyEnogh) == 0x0000A0, "Wrong size on W_ShopSlot_C_CheckIfMoneyEnogh");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, MoneyCount) == 0x000000, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::MoneyCount' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, Temp_bool_Variable) == 0x000004, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, Temp_bool_Variable_1) == 0x000005, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, Temp_struct_Variable) == 0x000008, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, Temp_struct_Variable_1) == 0x000018, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, Temp_bool_Variable_2) == 0x000028, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, Temp_real_Variable) == 0x00002C, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, Temp_real_Variable_1) == 0x000030, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, K2Node_MakeStruct_SlateColor) == 0x000034, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, K2Node_MakeStruct_SlateColor_1) == 0x000048, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, CallFunc_FTrunc_ReturnValue) == 0x00005C, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, K2Node_Select_Default) == 0x000070, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, K2Node_Select_Default_1) == 0x000084, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, K2Node_Select_Default_2) == 0x000094, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_CheckIfMoneyEnogh, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000098, "Member 'W_ShopSlot_C_CheckIfMoneyEnogh::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_ShopSlot.W_ShopSlot_C.ExecuteUbergraph_W_ShopSlot
// 0x0020 (0x0020 - 0x0000)
struct W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot) == 0x000008, "Wrong alignment on W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot");
static_assert(sizeof(W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot) == 0x000020, "Wrong size on W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot");
static_assert(offsetof(W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot, EntryPoint) == 0x000000, "Member 'W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot, CallFunc_BreakVector2D_X) == 0x000008, "Member 'W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000018, "Member 'W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00001C, "Member 'W_ShopSlot_C_ExecuteUbergraph_W_ShopSlot::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function W_ShopSlot.W_ShopSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ShopSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopSlot_C_PreConstruct) == 0x000001, "Wrong alignment on W_ShopSlot_C_PreConstruct");
static_assert(sizeof(W_ShopSlot_C_PreConstruct) == 0x000001, "Wrong size on W_ShopSlot_C_PreConstruct");
static_assert(offsetof(W_ShopSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ShopSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_ShopSlot.W_ShopSlot_C.SetEquipmentMark
// 0x0001 (0x0001 - 0x0000)
struct W_ShopSlot_C_SetEquipmentMark final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopSlot_C_SetEquipmentMark) == 0x000001, "Wrong alignment on W_ShopSlot_C_SetEquipmentMark");
static_assert(sizeof(W_ShopSlot_C_SetEquipmentMark) == 0x000001, "Wrong size on W_ShopSlot_C_SetEquipmentMark");
static_assert(offsetof(W_ShopSlot_C_SetEquipmentMark, Param_IsVisible) == 0x000000, "Member 'W_ShopSlot_C_SetEquipmentMark::Param_IsVisible' has a wrong offset!");

// Function W_ShopSlot.W_ShopSlot_C.GetDefaultSlotBrushes
// 0x06C0 (0x06C0 - 0x0000)
struct W_ShopSlot_C_GetDefaultSlotBrushes final
{
public:
	struct FSlateBrush                            BG_Brush;                                          // 0x0000(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Gradient_Brush;                                    // 0x00D0(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Highlight_Brush;                                   // 0x01A0(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Hover_Brush;                                       // 0x0270(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Item_Brush;                                        // 0x0340(0x00D0)(Parm, OutParm)
	class UObject*                                Hover_Sprite;                                      // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Highlight_Sprite;                                  // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                BG_Sprite;                                         // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0430(0x0014)()
	uint8                                         Pad_444[0xC];                                      // 0x0444(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0450(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0520(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue_1;        // 0x05F0(0x00D0)()
};
static_assert(alignof(W_ShopSlot_C_GetDefaultSlotBrushes) == 0x000010, "Wrong alignment on W_ShopSlot_C_GetDefaultSlotBrushes");
static_assert(sizeof(W_ShopSlot_C_GetDefaultSlotBrushes) == 0x0006C0, "Wrong size on W_ShopSlot_C_GetDefaultSlotBrushes");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, BG_Brush) == 0x000000, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::BG_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, Gradient_Brush) == 0x0000D0, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::Gradient_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, Highlight_Brush) == 0x0001A0, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::Highlight_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, Hover_Brush) == 0x000270, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::Hover_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, Item_Brush) == 0x000340, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::Item_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, Hover_Sprite) == 0x000410, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::Hover_Sprite' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, Highlight_Sprite) == 0x000418, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::Highlight_Sprite' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, BG_Sprite) == 0x000420, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::BG_Sprite' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000428, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_SlateColor) == 0x000430, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, K2Node_MakeStruct_SlateBrush) == 0x000450, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000520, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetDefaultSlotBrushes, CallFunc_MakeBrushFromSprite_ReturnValue_1) == 0x0005F0, "Member 'W_ShopSlot_C_GetDefaultSlotBrushes::CallFunc_MakeBrushFromSprite_ReturnValue_1' has a wrong offset!");

// Function W_ShopSlot.W_ShopSlot_C.GetSlotBrushes
// 0x0A10 (0x0A10 - 0x0000)
struct W_ShopSlot_C_GetSlotBrushes final
{
public:
	struct FSlateBrush                            Hover2_Brush;                                      // 0x0000(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Hover_Brush;                                       // 0x00D0(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            BG_Brush;                                          // 0x01A0(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Gradient_Brush;                                    // 0x0270(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Highlight_Brush;                                   // 0x0340(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            Item_Brush;                                        // 0x0410(0x00D0)(Parm, OutParm)
	class UObject*                                Hover_Sprite;                                      // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Highlight_Sprite;                                  // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                BG_Sprite;                                         // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0500(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0518(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0530(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0548(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0560(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0570(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x0588(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x6];                                      // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2[0x6];                                      // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_3;    // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CB[0x5];                                      // 0x05CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_4;    // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_5;    // 0x05E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E3[0x5];                                      // 0x05E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_6;    // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_7;    // 0x05FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x05FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x05FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x05FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x05FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x05FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0600(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_608[0x8];                                      // 0x0608(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0610(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue_1;        // 0x06E0(0x00D0)()
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x07B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_DynamicCast_AsPaper_Sprite;                 // 0x07B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C1[0xF];                                      // 0x07C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue_2;        // 0x07D0(0x00D0)()
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x08A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x08B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x08C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x08D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x08E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x08F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_5;                           // 0x0900(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_6;                           // 0x0910(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0920(0x00D0)()
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_A_ImplicitCast;   // 0x09F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x0A00(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopSlot_C_GetSlotBrushes) == 0x000010, "Wrong alignment on W_ShopSlot_C_GetSlotBrushes");
static_assert(sizeof(W_ShopSlot_C_GetSlotBrushes) == 0x000A10, "Wrong size on W_ShopSlot_C_GetSlotBrushes");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Hover2_Brush) == 0x000000, "Member 'W_ShopSlot_C_GetSlotBrushes::Hover2_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Hover_Brush) == 0x0000D0, "Member 'W_ShopSlot_C_GetSlotBrushes::Hover_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, BG_Brush) == 0x0001A0, "Member 'W_ShopSlot_C_GetSlotBrushes::BG_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Gradient_Brush) == 0x000270, "Member 'W_ShopSlot_C_GetSlotBrushes::Gradient_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Highlight_Brush) == 0x000340, "Member 'W_ShopSlot_C_GetSlotBrushes::Highlight_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Item_Brush) == 0x000410, "Member 'W_ShopSlot_C_GetSlotBrushes::Item_Brush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Hover_Sprite) == 0x0004E0, "Member 'W_ShopSlot_C_GetSlotBrushes::Hover_Sprite' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Highlight_Sprite) == 0x0004E8, "Member 'W_ShopSlot_C_GetSlotBrushes::Highlight_Sprite' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, BG_Sprite) == 0x0004F0, "Member 'W_ShopSlot_C_GetSlotBrushes::BG_Sprite' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_bool_Variable) == 0x0004F8, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_struct_Variable) == 0x000500, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_bool_Variable_1) == 0x000510, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_struct_Variable_1) == 0x000518, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_bool_Variable_2) == 0x000528, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_struct_Variable_2) == 0x000530, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_bool_Variable_3) == 0x000540, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_struct_Variable_3) == 0x000548, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_bool_Variable_4) == 0x000558, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_struct_Variable_4) == 0x000560, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_struct_Variable_5) == 0x000570, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_bool_Variable_5) == 0x000580, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_struct_Variable_6) == 0x000588, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, Temp_bool_Variable_6) == 0x000598, "Member 'W_ShopSlot_C_GetSlotBrushes::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000599, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BreakVector2D_X) == 0x0005A0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y) == 0x0005A8, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0005B0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x0005B1, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BreakVector2D_X_1) == 0x0005B8, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y_1) == 0x0005C0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue) == 0x0005C8, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x0005C9, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_DoubleDouble_ReturnValue_3) == 0x0005CA, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BreakVector2D_X_2) == 0x0005D0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y_2) == 0x0005D8, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_1) == 0x0005E0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_DoubleDouble_ReturnValue_4) == 0x0005E1, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_DoubleDouble_ReturnValue_5) == 0x0005E2, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BreakVector2D_X_3) == 0x0005E8, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BreakVector2D_Y_3) == 0x0005F0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_2) == 0x0005F8, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_DoubleDouble_ReturnValue_6) == 0x0005F9, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_DoubleDouble_ReturnValue_7) == 0x0005FA, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0005FB, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BooleanAND_ReturnValue_3) == 0x0005FC, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0005FD, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0005FE, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_BooleanOR_ReturnValue) == 0x0005FF, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000600, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000610, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_MakeBrushFromSprite_ReturnValue_1) == 0x0006E0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_MakeBrushFromSprite_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0007B0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_DynamicCast_AsPaper_Sprite) == 0x0007B8, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_DynamicCast_AsPaper_Sprite' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_DynamicCast_bSuccess) == 0x0007C0, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_MakeBrushFromSprite_ReturnValue_2) == 0x0007D0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_MakeBrushFromSprite_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0008A0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_Select_Default) == 0x0008B0, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_Select_Default_1) == 0x0008C0, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_Select_Default_2) == 0x0008D0, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_Select_Default_3) == 0x0008E0, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_Select_Default_4) == 0x0008F0, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_Select_Default_5) == 0x000900, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_Select_Default_6) == 0x000910, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_MakeStruct_SlateBrush) == 0x000920, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, CallFunc_Divide_Vector2DVector2D_A_ImplicitCast) == 0x0009F0, "Member 'W_ShopSlot_C_GetSlotBrushes::CallFunc_Divide_Vector2DVector2D_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_ShopSlot_C_GetSlotBrushes, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x000A00, "Member 'W_ShopSlot_C_GetSlotBrushes::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function W_ShopSlot.W_ShopSlot_C.GetSlotSize
// 0x0010 (0x0010 - 0x0000)
struct W_ShopSlot_C_GetSlotSize final
{
public:
	struct FVector2D                              SlotSize;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopSlot_C_GetSlotSize) == 0x000008, "Wrong alignment on W_ShopSlot_C_GetSlotSize");
static_assert(sizeof(W_ShopSlot_C_GetSlotSize) == 0x000010, "Wrong size on W_ShopSlot_C_GetSlotSize");
static_assert(offsetof(W_ShopSlot_C_GetSlotSize, SlotSize) == 0x000000, "Member 'W_ShopSlot_C_GetSlotSize::SlotSize' has a wrong offset!");

}

