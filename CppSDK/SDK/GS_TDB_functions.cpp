#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GS_TDB

#include "Basic.hpp"

#include "GS_TDB_classes.hpp"
#include "GS_TDB_parameters.hpp"


namespace SDK
{

// Function GS_TDB.GS_TDB_C.AddItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ItemName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AGS_TDB_C::AddItem(const class FString& ItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "AddItem");

	Params::GS_TDB_C_AddItem Parms{};

	Parms.ItemName = std::move(ItemName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.AddItemCount
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ItemName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::AddItemCount(const class FString& ItemName, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "AddItemCount");

	Params::GS_TDB_C_AddItemCount Parms{};

	Parms.ItemName = std::move(ItemName);
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.AddToSquad
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Squad                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APS_TDB_C*                        PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Added                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::AddToSquad(int32 Squad, class APS_TDB_C* PlayerState, bool* Added)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "AddToSquad");

	Params::GS_TDB_C_AddToSquad Parms{};

	Parms.Squad = Squad;
	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (Added != nullptr)
		*Added = Parms.Added;
}


// Function GS_TDB.GS_TDB_C.BunkerDone
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Suka                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AGS_TDB_C::BunkerDone(const class FString& Suka)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "BunkerDone");

	Params::GS_TDB_C_BunkerDone Parms{};

	Parms.Suka = std::move(Suka);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.BunkerLoaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABunkerElevatorReciever_C*        Elevator                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::BunkerLoaded(class ABunkerElevatorReciever_C* Elevator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "BunkerLoaded");

	Params::GS_TDB_C_BunkerLoaded Parms{};

	Parms.Elevator = Elevator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.CalculateServerTime
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::CalculateServerTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "CalculateServerTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.ChangeClientQuest
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestV2_C*                       Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::ChangeClientQuest(class UQuestV2_C* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "ChangeClientQuest");

	Params::GS_TDB_C_ChangeClientQuest Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.ChangeClientQuestV2
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::ChangeClientQuestV2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "ChangeClientQuestV2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.ChangeQuestHintMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Hint                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AGS_TDB_C::ChangeQuestHintMulti(const class FString& Hint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "ChangeQuestHintMulti");

	Params::GS_TDB_C_ChangeQuestHintMulti Parms{};

	Parms.Hint = std::move(Hint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.ClearMarkers
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::ClearMarkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "ClearMarkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.CreateBunkerSystem
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::CreateBunkerSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "CreateBunkerSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.CreateQuestSystem
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::CreateQuestSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "CreateQuestSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.CurrentDateUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::CurrentDateUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "CurrentDateUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.DayStateChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDayCycleState                          NewDayState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::DayStateChanged__DelegateSignature(EDayCycleState NewDayState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "DayStateChanged__DelegateSignature");

	Params::GS_TDB_C_DayStateChanged__DelegateSignature Parms{};

	Parms.NewDayState = NewDayState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.DebugForChars
// (BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::DebugForChars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "DebugForChars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.EndPLay_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::EndPLay_Event(class AActor* Actor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "EndPLay_Event");

	Params::GS_TDB_C_EndPLay_Event Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.ExecuteUbergraph_GS_TDB
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::ExecuteUbergraph_GS_TDB(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "ExecuteUbergraph_GS_TDB");

	Params::GS_TDB_C_ExecuteUbergraph_GS_TDB Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.fire
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AGS_TDB_C::Fire(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "fire");

	Params::GS_TDB_C_Fire Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.GameStateTimers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::GameStateTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GameStateTimers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.GenerateNewSquad
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APS_TDB_C*                        SurvPC                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   SquadId                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::GenerateNewSquad(class APS_TDB_C* SurvPC, int32* SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GenerateNewSquad");

	Params::GS_TDB_C_GenerateNewSquad Parms{};

	Parms.SurvPC = SurvPC;

	UObject::ProcessEvent(Func, &Parms);

	if (SquadId != nullptr)
		*SquadId = Parms.SquadId;
}


// Function GS_TDB.GS_TDB_C.GetBunkerSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBunkerSystem_C*                  Param_BunkerSystem                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::GetBunkerSystem(class UBunkerSystem_C** Param_BunkerSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GetBunkerSystem");

	Params::GS_TDB_C_GetBunkerSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_BunkerSystem != nullptr)
		*Param_BunkerSystem = Parms.Param_BunkerSystem;
}


// Function GS_TDB.GS_TDB_C.GetExchangeRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  TodayExchangeRate                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PrevExchangeRate                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::GetExchangeRate(double* TodayExchangeRate, double* PrevExchangeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GetExchangeRate");

	Params::GS_TDB_C_GetExchangeRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TodayExchangeRate != nullptr)
		*TodayExchangeRate = Parms.TodayExchangeRate;

	if (PrevExchangeRate != nullptr)
		*PrevExchangeRate = Parms.PrevExchangeRate;
}


// Function GS_TDB.GS_TDB_C.GetLootZonesByQuests
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UQuest*>                   Quests                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class ABP_QuestItemsSpawnZone_C*>Zones                                                  (Parm, OutParm)

void AGS_TDB_C::GetLootZonesByQuests(const TArray<class UQuest*>& Quests, TArray<class ABP_QuestItemsSpawnZone_C*>* Zones)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GetLootZonesByQuests");

	Params::GS_TDB_C_GetLootZonesByQuests Parms{};

	Parms.Quests = std::move(Quests);

	UObject::ProcessEvent(Func, &Parms);

	if (Zones != nullptr)
		*Zones = std::move(Parms.Zones);
}


// Function GS_TDB.GS_TDB_C.GetPlayerController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::GetPlayerController(class APlayerController** PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GetPlayerController");

	Params::GS_TDB_C_GetPlayerController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;
}


// Function GS_TDB.GS_TDB_C.GetQuestActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ActorClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::GetQuestActor(class FName Tag, class UClass* ActorClass, class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GetQuestActor");

	Params::GS_TDB_C_GetQuestActor Parms{};

	Parms.Tag = Tag;
	Parms.ActorClass = ActorClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function GS_TDB.GS_TDB_C.GetQuestSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuestSystemV3_C*                 Param_QuestSystem                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::GetQuestSystem(class UQuestSystemV3_C** Param_QuestSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GetQuestSystem");

	Params::GS_TDB_C_GetQuestSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_QuestSystem != nullptr)
		*Param_QuestSystem = Parms.Param_QuestSystem;
}


// Function GS_TDB.GS_TDB_C.GetQuestZone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_QuestItemsSpawnZone_C*        Zone                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::GetQuestZone(class UQuest* Quest, class ABP_QuestItemsSpawnZone_C** Zone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GetQuestZone");

	Params::GS_TDB_C_GetQuestZone Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);

	if (Zone != nullptr)
		*Zone = Parms.Zone;
}


// Function GS_TDB.GS_TDB_C.GetQuestZoneByJobName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Works                                 JobType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_QuestZone_C*>          Zones                                                  (Parm, OutParm)
// TArray<class ABP_QuestZone_C*>          ProgressZones                                          (Parm, OutParm)

void AGS_TDB_C::GetQuestZoneByJobName(E_Works JobType, TArray<class ABP_QuestZone_C*>* Zones, TArray<class ABP_QuestZone_C*>* ProgressZones)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GetQuestZoneByJobName");

	Params::GS_TDB_C_GetQuestZoneByJobName Parms{};

	Parms.JobType = JobType;

	UObject::ProcessEvent(Func, &Parms);

	if (Zones != nullptr)
		*Zones = std::move(Parms.Zones);

	if (ProgressZones != nullptr)
		*ProgressZones = std::move(Parms.ProgressZones);
}


// Function GS_TDB.GS_TDB_C.GetSquadsMaxPlayersQuantity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_MaxSquadQuantity                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::GetSquadsMaxPlayersQuantity(int32* Param_MaxSquadQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GetSquadsMaxPlayersQuantity");

	Params::GS_TDB_C_GetSquadsMaxPlayersQuantity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MaxSquadQuantity != nullptr)
		*Param_MaxSquadQuantity = Parms.Param_MaxSquadQuantity;
}


// Function GS_TDB.GS_TDB_C.GetTowersZones
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UQuest*                           TowerQuestAsset                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_QuestZone_C*>          Zones                                                  (Parm, OutParm)

void AGS_TDB_C::GetTowersZones(class UQuest* TowerQuestAsset, TArray<class ABP_QuestZone_C*>* Zones)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "GetTowersZones");

	Params::GS_TDB_C_GetTowersZones Parms{};

	Parms.TowerQuestAsset = TowerQuestAsset;

	UObject::ProcessEvent(Func, &Parms);

	if (Zones != nullptr)
		*Zones = std::move(Parms.Zones);
}


// Function GS_TDB.GS_TDB_C.InitLootZones
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_QuestItemsSpawnZone_C*        LootZpawnZone                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::InitLootZones(class ABP_QuestItemsSpawnZone_C* LootZpawnZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "InitLootZones");

	Params::GS_TDB_C_InitLootZones Parms{};

	Parms.LootZpawnZone = LootZpawnZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.InitQuestActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::InitQuestActor(class AActor* ActorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "InitQuestActor");

	Params::GS_TDB_C_InitQuestActor Parms{};

	Parms.ActorRef = ActorRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.InitQuestZone
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_QuestZone_C*                  QuestZone                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::InitQuestZone(class ABP_QuestZone_C* QuestZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "InitQuestZone");

	Params::GS_TDB_C_InitQuestZone Parms{};

	Parms.QuestZone = QuestZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.InitTowerZone
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_QuestZone_Towers_C*           Zone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::InitTowerZone(class ABP_QuestZone_Towers_C* Zone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "InitTowerZone");

	Params::GS_TDB_C_InitTowerZone Parms{};

	Parms.Zone = Zone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.NewDay__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::NewDay__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "NewDay__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.NewDayMulti
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::NewDayMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "NewDayMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.OnEnterBunkerArea
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_BunkerID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AGS_TDB_C::OnEnterBunkerArea(const class FString& Param_BunkerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "OnEnterBunkerArea");

	Params::GS_TDB_C_OnEnterBunkerArea Parms{};

	Parms.Param_BunkerID = std::move(Param_BunkerID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.OnFinishQuestRemotely
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::OnFinishQuestRemotely(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "OnFinishQuestRemotely");

	Params::GS_TDB_C_OnFinishQuestRemotely Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.OnLeaveBunkerArea
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::OnLeaveBunkerArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "OnLeaveBunkerArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.OnPlayerSpawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::OnPlayerSpawned(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "OnPlayerSpawned");

	Params::GS_TDB_C_OnPlayerSpawned Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.OnQuestTrigger
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           QuestTrigger                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AGS_TDB_C::OnQuestTrigger(const class FString& QuestTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "OnQuestTrigger");

	Params::GS_TDB_C_OnQuestTrigger Parms{};

	Parms.QuestTrigger = std::move(QuestTrigger);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.OnSwitchQuest
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::OnSwitchQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "OnSwitchQuest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.PlayCS
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::PlayCS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "PlayCS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.PlayCSSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::PlayCSSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "PlayCSSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.PlayerSpawnedClientSide
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::PlayerSpawnedClientSide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "PlayerSpawnedClientSide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.PlayOM
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::PlayOM()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "PlayOM");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.PlayOMSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::PlayOMSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "PlayOMSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.PlayOS
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::PlayOS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "PlayOS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.PlayOSSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::PlayOSSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "PlayOSSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.PlayShopSound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFMODEvent*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::PlayShopSound(class UFMODEvent* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "PlayShopSound");

	Params::GS_TDB_C_PlayShopSound Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.ProcessSpawnedPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PlayerActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::ProcessSpawnedPlayer(class AActor* PlayerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "ProcessSpawnedPlayer");

	Params::GS_TDB_C_ProcessSpawnedPlayer Parms{};

	Parms.PlayerActor = PlayerActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AGS_TDB_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "ReceiveTick");

	Params::GS_TDB_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.RemoveFromSquad
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APS_TDB_C*                        Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::RemoveFromSquad(const class APS_TDB_C*& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "RemoveFromSquad");

	Params::GS_TDB_C_RemoveFromSquad Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.RemoveSquad
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::RemoveSquad(const int32& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "RemoveSquad");

	Params::GS_TDB_C_RemoveSquad Parms{};

	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.SetMarkersMulti
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Markers                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AGS_TDB_C::SetMarkersMulti(const TArray<struct FVector>& Markers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "SetMarkersMulti");

	Params::GS_TDB_C_SetMarkersMulti Parms{};

	Parms.Markers = std::move(Markers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.SetNewDayState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EDayCycleState                          NewDayState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::SetNewDayState(EDayCycleState NewDayState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "SetNewDayState");

	Params::GS_TDB_C_SetNewDayState Parms{};

	Parms.NewDayState = NewDayState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.SetShopOpened
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOpened                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::SetShopOpened(bool IsOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "SetShopOpened");

	Params::GS_TDB_C_SetShopOpened Parms{};

	Parms.IsOpened = IsOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.Spawn
// (BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::Spawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "Spawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.SwitchNext
// (BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::SwitchNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "SwitchNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.SyncQuests
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::SyncQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "SyncQuests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.SyncQuestSystemSilent
// (Public, BlueprintCallable, BlueprintEvent)

void AGS_TDB_C::SyncQuestSystemSilent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "SyncQuestSystemSilent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GS_TDB.GS_TDB_C.UpdateSkyLight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::UpdateSkyLight(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "UpdateSkyLight");

	Params::GS_TDB_C_UpdateSkyLight Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GS_TDB.GS_TDB_C.UpdateSquadListForAllPlayers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SquadId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGS_TDB_C::UpdateSquadListForAllPlayers(int32 SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GS_TDB_C", "UpdateSquadListForAllPlayers");

	Params::GS_TDB_C_UpdateSquadListForAllPlayers Parms{};

	Parms.SquadId = SquadId;

	UObject::ProcessEvent(Func, &Parms);
}

}

