#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LifeIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LifeIndicator.WBP_LifeIndicator_C
// 0x0028 (0x02A8 - 0x0280)
class UWBP_LifeIndicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Active_Anim;                                       // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_Active;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Inactive;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_LifeIndicator(int32 EntryPoint);
	void PlayActiveAnim();
	void PlayInactiveAnim();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LifeIndicator_C">();
	}
	static class UWBP_LifeIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LifeIndicator_C>();
	}
};
static_assert(alignof(UWBP_LifeIndicator_C) == 0x000008, "Wrong alignment on UWBP_LifeIndicator_C");
static_assert(sizeof(UWBP_LifeIndicator_C) == 0x0002A8, "Wrong size on UWBP_LifeIndicator_C");
static_assert(offsetof(UWBP_LifeIndicator_C, UberGraphFrame) == 0x000280, "Member 'UWBP_LifeIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_LifeIndicator_C, Active_Anim) == 0x000288, "Member 'UWBP_LifeIndicator_C::Active_Anim' has a wrong offset!");
static_assert(offsetof(UWBP_LifeIndicator_C, Image_Active) == 0x000290, "Member 'UWBP_LifeIndicator_C::Image_Active' has a wrong offset!");
static_assert(offsetof(UWBP_LifeIndicator_C, Image_BG) == 0x000298, "Member 'UWBP_LifeIndicator_C::Image_BG' has a wrong offset!");
static_assert(offsetof(UWBP_LifeIndicator_C, Image_Inactive) == 0x0002A0, "Member 'UWBP_LifeIndicator_C::Image_Inactive' has a wrong offset!");

}

