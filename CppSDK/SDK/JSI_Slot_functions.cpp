#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JSI_Slot

#include "Basic.hpp"

#include "JSI_Slot_classes.hpp"
#include "JSI_Slot_parameters.hpp"


namespace SDK
{

// Function JSI_Slot.JSI_Slot_C.AddAttachment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAttachmentInfo                  AttachmentInfo                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::AddAttachment(const struct FAttachmentInfo& AttachmentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "AddAttachment");

	Params::JSI_Slot_C_AddAttachment Parms{};

	Parms.AttachmentInfo = std::move(AttachmentInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.AddToXY
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        SlotDimension                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::AddToXY(int32 X, int32 Y, struct FVector2D* SlotDimension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "AddToXY");

	Params::JSI_Slot_C_AddToXY Parms{};

	Parms.X = X;
	Parms.Y = Y;

	UObject::ProcessEvent(Func, &Parms);

	if (SlotDimension != nullptr)
		*SlotDimension = std::move(Parms.SlotDimension);
}


// Function JSI_Slot.JSI_Slot_C.BlockTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_Time                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::BlockTimer(double Param_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "BlockTimer");

	Params::JSI_Slot_C_BlockTimer Parms{};

	Parms.Param_Time = Param_Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.ButtonPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::ButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ButtonPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.Calculate Result Price
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UJSI_Slot_C::Calculate_Result_Price()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Calculate Result Price");

	Params::JSI_Slot_C_Calculate_Result_Price Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.Calculate Size With Ratio
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Param_Size                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::Calculate_Size_With_Ratio(struct FVector2D* Param_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Calculate Size With Ratio");

	Params::JSI_Slot_C_Calculate_Size_With_Ratio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Size != nullptr)
		*Param_Size = std::move(Parms.Param_Size);
}


// Function JSI_Slot.JSI_Slot_C.CanAttachAttachment
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             AttachmentID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UJSI_Slot_C::CanAttachAttachment(class FName AttachmentID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "CanAttachAttachment");

	Params::JSI_Slot_C_CanAttachAttachment Parms{};

	Parms.AttachmentID = AttachmentID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.CanOpenSpecialContainer?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return_value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::CanOpenSpecialContainer_(bool* Return_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "CanOpenSpecialContainer?");

	Params::JSI_Slot_C_CanOpenSpecialContainer_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_value != nullptr)
		*Return_value = Parms.Return_value;
}


// Function JSI_Slot.JSI_Slot_C.ChangeImageAnchors
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Equipped                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::ChangeImageAnchors(bool Equipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ChangeImageAnchors");

	Params::JSI_Slot_C_ChangeImageAnchors Parms{};

	Parms.Equipped = Equipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.ChangePrice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Price                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::ChangePrice(double Price)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ChangePrice");

	Params::JSI_Slot_C_ChangePrice Parms{};

	Parms.Price = Price;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.ChangeRarity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlotRarity                             Param_Rarity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Changed_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::ChangeRarity(ESlotRarity Param_Rarity, bool* Changed_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ChangeRarity");

	Params::JSI_Slot_C_ChangeRarity Parms{};

	Parms.Param_Rarity = Param_Rarity;

	UObject::ProcessEvent(Func, &Parms);

	if (Changed_ != nullptr)
		*Changed_ = Parms.Changed_;
}


// Function JSI_Slot.JSI_Slot_C.ChangesImageAnchors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::ChangesImageAnchors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ChangesImageAnchors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.ChangeVisibilityIsEmpty
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::ChangeVisibilityIsEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ChangeVisibilityIsEmpty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.ChangeVisibilityIsFixedSlot
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::ChangeVisibilityIsFixedSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ChangeVisibilityIsFixedSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.CheckRootContainer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSI_Slot_C*                      DraggedItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    CanAdd_                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::CheckRootContainer(class UJSI_Slot_C* DraggedItem, bool* CanAdd_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "CheckRootContainer");

	Params::JSI_Slot_C_CheckRootContainer Parms{};

	Parms.DraggedItem = DraggedItem;

	UObject::ProcessEvent(Func, &Parms);

	if (CanAdd_ != nullptr)
		*CanAdd_ = Parms.CanAdd_;
}


// Function JSI_Slot.JSI_Slot_C.CheckShopContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PageIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_ShopContainer                         GetShopContainer                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ShopContainer                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::CheckShopContainer(int32* PageIndex, E_ShopContainer* GetShopContainer, class UJSIContainer_C** ShopContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "CheckShopContainer");

	Params::JSI_Slot_C_CheckShopContainer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PageIndex != nullptr)
		*PageIndex = Parms.PageIndex;

	if (GetShopContainer != nullptr)
		*GetShopContainer = Parms.GetShopContainer;

	if (ShopContainer != nullptr)
		*ShopContainer = Parms.ShopContainer;
}


// Function JSI_Slot.JSI_Slot_C.CheckSlotIsContainer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::CheckSlotIsContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "CheckSlotIsContainer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.ClearSlot
// (Public, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::ClearSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ClearSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.ConfirmDragOperation
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  OutContainer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  InContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::ConfirmDragOperation(class UJSIContainer_C* OutContainer, class UJSIContainer_C* InContainer, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ConfirmDragOperation");

	Params::JSI_Slot_C_ConfirmDragOperation Parms{};

	Parms.OutContainer = OutContainer;
	Parms.InContainer = InContainer;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function JSI_Slot.JSI_Slot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UJSI_Slot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.ConstructInitialize
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::ConstructInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ConstructInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UJSI_Slot_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.DetectChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    DraggedRotated_                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NOChange                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::DetectChange(class UJSI_Slot_C* DroppedSlotRef, bool DraggedRotated_, bool* NOChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "DetectChange");

	Params::JSI_Slot_C_DetectChange Parms{};

	Parms.DroppedSlotRef = DroppedSlotRef;
	Parms.DraggedRotated_ = DraggedRotated_;

	UObject::ProcessEvent(Func, &Parms);

	if (NOChange != nullptr)
		*NOChange = Parms.NOChange;
}


// Function JSI_Slot.JSI_Slot_C.DoCustomNavigation_Down
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Param_Navigation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UJSI_Slot_C::DoCustomNavigation_Down(EUINavigation Param_Navigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "DoCustomNavigation_Down");

	Params::JSI_Slot_C_DoCustomNavigation_Down Parms{};

	Parms.Param_Navigation = Param_Navigation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.DoCustomNavigation_Left
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Param_Navigation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UJSI_Slot_C::DoCustomNavigation_Left(EUINavigation Param_Navigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "DoCustomNavigation_Left");

	Params::JSI_Slot_C_DoCustomNavigation_Left Parms{};

	Parms.Param_Navigation = Param_Navigation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.DoCustomNavigation_Right
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Param_Navigation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UJSI_Slot_C::DoCustomNavigation_Right(EUINavigation Param_Navigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "DoCustomNavigation_Right");

	Params::JSI_Slot_C_DoCustomNavigation_Right Parms{};

	Parms.Param_Navigation = Param_Navigation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.DoCustomNavigation_Up
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUINavigation                           Param_Navigation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UJSI_Slot_C::DoCustomNavigation_Up(EUINavigation Param_Navigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "DoCustomNavigation_Up");

	Params::JSI_Slot_C_DoCustomNavigation_Up Parms{};

	Parms.Param_Navigation = Param_Navigation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.DragCancel
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::DragCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "DragCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.ExecuteUbergraph_JSI_Slot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::ExecuteUbergraph_JSI_Slot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ExecuteUbergraph_JSI_Slot");

	Params::JSI_Slot_C_ExecuteUbergraph_JSI_Slot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.Finished_C4F95376474216B3E074BAA89C8034E2
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::Finished_C4F95376474216B3E074BAA89C8034E2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Finished_C4F95376474216B3E074BAA89C8034E2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.Get Enough Money
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_HaveEnoughMoney                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::Get_Enough_Money(bool* Param_HaveEnoughMoney)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Get Enough Money");

	Params::JSI_Slot_C_Get_Enough_Money Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_HaveEnoughMoney != nullptr)
		*Param_HaveEnoughMoney = Parms.Param_HaveEnoughMoney;
}


// Function JSI_Slot.JSI_Slot_C.Get Icon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFItemInfo                       FItemInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// class ABP_GameHUD_C*                    HUD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UObject*                          Param_Image                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::Get_Icon(const struct FFItemInfo& FItemInfo, class ABP_GameHUD_C* HUD, class UObject** Param_Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Get Icon");

	Params::JSI_Slot_C_Get_Icon Parms{};

	Parms.FItemInfo = std::move(FItemInfo);
	Parms.HUD = HUD;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Image != nullptr)
		*Param_Image = Parms.Param_Image;
}


// Function JSI_Slot.JSI_Slot_C.Get Image Border Visibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UJSI_Slot_C::Get_Image_Border_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Get Image Border Visibility");

	Params::JSI_Slot_C_Get_Image_Border_Visibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.Get Pivot Index
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Param_DragOffset                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::Get_Pivot_Index(const struct FVector2D& Param_DragOffset, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Get Pivot Index");

	Params::JSI_Slot_C_Get_Pivot_Index Parms{};

	Parms.Param_DragOffset = std::move(Param_DragOffset);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function JSI_Slot.JSI_Slot_C.Get Repair Price
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_RepairPrice                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::Get_Repair_Price(int32* Param_RepairPrice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Get Repair Price");

	Params::JSI_Slot_C_Get_Repair_Price Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_RepairPrice != nullptr)
		*Param_RepairPrice = Parms.Param_RepairPrice;
}


// Function JSI_Slot.JSI_Slot_C.Get_Background_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UJSI_Slot_C::Get_Background_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Get_Background_Visibility_0");

	Params::JSI_Slot_C_Get_Background_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.Get_Background_WithItem_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UJSI_Slot_C::Get_Background_WithItem_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Get_Background_WithItem_Visibility_0");

	Params::JSI_Slot_C_Get_Background_WithItem_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.Get_Image_ColorGradient_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UJSI_Slot_C::Get_Image_ColorGradient_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Get_Image_ColorGradient_Visibility_0");

	Params::JSI_Slot_C_Get_Image_ColorGradient_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.GetBorderColorByRarity
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlotRarity                             Param_Rarity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetBorderColorByRarity(ESlotRarity Param_Rarity, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetBorderColorByRarity");

	Params::JSI_Slot_C_GetBorderColorByRarity Parms{};

	Parms.Param_Rarity = Param_Rarity;

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function JSI_Slot.JSI_Slot_C.GetClickLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGeometry                        Geometry                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvents                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector2D                        Output_Get                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetClickLocation(const struct FGeometry& Geometry, const struct FPointerEvent& MouseEvents, struct FVector2D* Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetClickLocation");

	Params::JSI_Slot_C_GetClickLocation Parms{};

	Parms.Geometry = std::move(Geometry);
	Parms.MouseEvents = std::move(MouseEvents);

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = std::move(Parms.Output_Get);
}


// Function JSI_Slot.JSI_Slot_C.GetCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetCount(int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetCount");

	Params::JSI_Slot_C_GetCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function JSI_Slot.JSI_Slot_C.GetDismantleEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Enabled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetDismantleEnabled(bool* Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetDismantleEnabled");

	Params::JSI_Slot_C_GetDismantleEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enabled != nullptr)
		*Enabled = Parms.Enabled;
}


// Function JSI_Slot.JSI_Slot_C.GetDurability
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Durability                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxDurability                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetDurability(double* Durability, double* MaxDurability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetDurability");

	Params::JSI_Slot_C_GetDurability Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Durability != nullptr)
		*Durability = Parms.Durability;

	if (MaxDurability != nullptr)
		*MaxDurability = Parms.MaxDurability;
}


// Function JSI_Slot.JSI_Slot_C.GetHostedSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSI_Slot_C*                      HostingItem                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetHostedSlot(class UJSI_Slot_C** HostingItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetHostedSlot");

	Params::JSI_Slot_C_GetHostedSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HostingItem != nullptr)
		*HostingItem = Parms.HostingItem;
}


// Function JSI_Slot.JSI_Slot_C.GetItemName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Param_Name                                             (Parm, OutParm)

void UJSI_Slot_C::GetItemName(class FText* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetItemName");

	Params::JSI_Slot_C_GetItemName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function JSI_Slot.JSI_Slot_C.GetNewMaxDurability
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UJSI_Slot_C::GetNewMaxDurability(double InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetNewMaxDurability");

	Params::JSI_Slot_C_GetNewMaxDurability Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.GetPrice(Shop)
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::GetPrice_Shop_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetPrice(Shop)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.GetRepairStatus
// (Public, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::GetRepairStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetRepairStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.GetSlotIndexOnDrop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_SlotIndex                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetSlotIndexOnDrop(int32* Param_SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetSlotIndexOnDrop");

	Params::JSI_Slot_C_GetSlotIndexOnDrop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SlotIndex != nullptr)
		*Param_SlotIndex = Parms.Param_SlotIndex;
}


// Function JSI_Slot.JSI_Slot_C.GetSlotSizeBaground
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::GetSlotSizeBaground()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetSlotSizeBaground");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.GetSpecialContainerRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UUserWidget*                      SpecialContainerRef                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetSpecialContainerRef(class UUserWidget** SpecialContainerRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetSpecialContainerRef");

	Params::JSI_Slot_C_GetSpecialContainerRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpecialContainerRef != nullptr)
		*SpecialContainerRef = Parms.SpecialContainerRef;
}


// Function JSI_Slot.JSI_Slot_C.GetType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EJSItemType                             Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetType(EJSItemType* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetType");

	Params::JSI_Slot_C_GetType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function JSI_Slot.JSI_Slot_C.GetUniqueID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   UniqueServerID                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetUniqueID(int32* UniqueServerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetUniqueID");

	Params::JSI_Slot_C_GetUniqueID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UniqueServerID != nullptr)
		*UniqueServerID = Parms.UniqueServerID;
}


// Function JSI_Slot.JSI_Slot_C.GetWeaponIcon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMaterialInterface*               Param_GeneratedWeaponIcon                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetWeaponIcon(class UMaterialInterface** Param_GeneratedWeaponIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetWeaponIcon");

	Params::JSI_Slot_C_GetWeaponIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_GeneratedWeaponIcon != nullptr)
		*Param_GeneratedWeaponIcon = Parms.Param_GeneratedWeaponIcon;
}


// Function JSI_Slot.JSI_Slot_C.GetWeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Weight                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetWeight(double* Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetWeight");

	Params::JSI_Slot_C_GetWeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weight != nullptr)
		*Weight = Parms.Weight;
}


// Function JSI_Slot.JSI_Slot_C.Handle Size Box
// (Public, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::Handle_Size_Box()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Handle Size Box");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.Hovered Slot
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::Hovered_Slot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Hovered Slot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.HoverSlot
// (Public, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::HoverSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "HoverSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.Image_Hovered_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Param_Image_Hovered                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::Image_Hovered_Event(class UImage* Param_Image_Hovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Image_Hovered_Event");

	Params::JSI_Slot_C_Image_Hovered_Event Parms{};

	Parms.Param_Image_Hovered = Param_Image_Hovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.Image_Hovered_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Param_Image_Hovered                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::Image_Hovered_Event_0(class UImage* Param_Image_Hovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Image_Hovered_Event_0");

	Params::JSI_Slot_C_Image_Hovered_Event_0 Parms{};

	Parms.Param_Image_Hovered = Param_Image_Hovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.Initialize
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.IsBroken
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::IsBroken(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "IsBroken");

	Params::JSI_Slot_C_IsBroken Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function JSI_Slot.JSI_Slot_C.IsContainer?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsContainer_                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::IsContainer_(bool* Param_IsContainer_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "IsContainer?");

	Params::JSI_Slot_C_IsContainer_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsContainer_ != nullptr)
		*Param_IsContainer_ = Parms.Param_IsContainer_;
}


// Function JSI_Slot.JSI_Slot_C.IsEmptySlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsEmpty                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::IsEmptySlot(bool* Param_IsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "IsEmptySlot");

	Params::JSI_Slot_C_IsEmptySlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsEmpty != nullptr)
		*Param_IsEmpty = Parms.Param_IsEmpty;
}


// Function JSI_Slot.JSI_Slot_C.isRotated?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UJSI_Slot_C::IsRotated_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "isRotated?");

	Params::JSI_Slot_C_IsRotated_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.IsSpecialContainer?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UJSI_Slot_C::IsSpecialContainer_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "IsSpecialContainer?");

	Params::JSI_Slot_C_IsSpecialContainer_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.IsStillValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSI_Slot_C*                      Param_Slot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::IsStillValid(class UJSI_Slot_C* Param_Slot, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "IsStillValid");

	Params::JSI_Slot_C_IsStillValid Parms{};

	Parms.Param_Slot = Param_Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function JSI_Slot.JSI_Slot_C.IsSupportedAttachment
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             AttachmentID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UJSI_Slot_C::IsSupportedAttachment(class FName AttachmentID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "IsSupportedAttachment");

	Params::JSI_Slot_C_IsSupportedAttachment Parms{};

	Parms.AttachmentID = AttachmentID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.On_MouseDoubleClick
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UJSI_Slot_C::On_MouseDoubleClick(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "On_MouseDoubleClick");

	Params::JSI_Slot_C_On_MouseDoubleClick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UJSI_Slot_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnAddedToFocusPath");

	Params::JSI_Slot_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.OnContentHidden__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::OnContentHidden__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnContentHidden__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.OnContentShow__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::OnContentShow__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnContentShow__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.OnDragCancelled
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::OnDragCancelled(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnDragCancelled");

	Params::JSI_Slot_C_OnDragCancelled Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.OnDragDetected
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation*               Operation                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnDragDetected");

	Params::JSI_Slot_C_OnDragDetected Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);

	UObject::ProcessEvent(Func, &Parms);

	if (Operation != nullptr)
		*Operation = Parms.Operation;
}


// Function JSI_Slot.JSI_Slot_C.OnDragEnter
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnDragEnter");

	Params::JSI_Slot_C_OnDragEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.OnDragLeave
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnDragLeave");

	Params::JSI_Slot_C_OnDragLeave Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.OnDragMove__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::OnDragMove__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnDragMove__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.OnDragOver
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UJSI_Slot_C::OnDragOver(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnDragOver");

	Params::JSI_Slot_C_OnDragOver Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.OnDragStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::OnDragStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnDragStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.OnDrop
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UJSI_Slot_C::OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnDrop");

	Params::JSI_Slot_C_OnDrop Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.OnDurabilityChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::OnDurabilityChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnDurabilityChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.OnHideItemInfo
// (Protected, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::OnHideItemInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnHideItemInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UJSI_Slot_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnKeyDown");

	Params::JSI_Slot_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.OnLoaded_7D15951943AF1C18C4E3788AE52A2621
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UJSI_Slot_C::OnLoaded_7D15951943AF1C18C4E3788AE52A2621(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnLoaded_7D15951943AF1C18C4E3788AE52A2621");

	Params::JSI_Slot_C_OnLoaded_7D15951943AF1C18C4E3788AE52A2621 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.OnMouseButtonDoubleClick
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InMyGeometry                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UJSI_Slot_C::OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnMouseButtonDoubleClick");

	Params::JSI_Slot_C_OnMouseButtonDoubleClick Parms{};

	Parms.InMyGeometry = std::move(InMyGeometry);
	Parms.InMouseEvent = std::move(InMouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UJSI_Slot_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnMouseButtonDown");

	Params::JSI_Slot_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UJSI_Slot_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnMouseButtonUp");

	Params::JSI_Slot_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UJSI_Slot_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnMouseEnter");

	Params::JSI_Slot_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UJSI_Slot_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnMouseLeave");

	Params::JSI_Slot_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UJSI_Slot_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnRemovedFromFocusPath");

	Params::JSI_Slot_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.OnSelected(Clicked)__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      SlotWidgetRef                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::OnSelected_Clicked___DelegateSignature(class UJSI_Slot_C* SlotWidgetRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnSelected(Clicked)__DelegateSignature");

	Params::JSI_Slot_C_OnSelected_Clicked___DelegateSignature Parms{};

	Parms.SlotWidgetRef = SlotWidgetRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.OnSelected(ClickedRMB)__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      SlotWidgetRef                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::OnSelected_ClickedRMB___DelegateSignature(class UJSI_Slot_C* SlotWidgetRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnSelected(ClickedRMB)__DelegateSignature");

	Params::JSI_Slot_C_OnSelected_ClickedRMB___DelegateSignature Parms{};

	Parms.SlotWidgetRef = SlotWidgetRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.OnShopAnimFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::OnShopAnimFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnShopAnimFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.OnShowItemInfo
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::OnShowItemInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "OnShowItemInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.PlayDismantleAnimation
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::PlayDismantleAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "PlayDismantleAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.PlayDoubleClickFailed
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::PlayDoubleClickFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "PlayDoubleClickFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.PlayDoubleClickSuccessed
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::PlayDoubleClickSuccessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "PlayDoubleClickSuccessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.PlayDropAnimation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EUMGSequencePlayMode                    Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::PlayDropAnimation(EUMGSequencePlayMode Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "PlayDropAnimation");

	Params::JSI_Slot_C_PlayDropAnimation Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.PlayDropSound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainerRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Local                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::PlayDropSound(class UJSI_Slot_C* SlotRef, class UJSIContainer_C* ToContainerRef, bool Local)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "PlayDropSound");

	Params::JSI_Slot_C_PlayDropSound Parms{};

	Parms.SlotRef = SlotRef;
	Parms.ToContainerRef = ToContainerRef;
	Parms.Local = Local;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "PreConstruct");

	Params::JSI_Slot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.ProgressBar52sec
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::ProgressBar52sec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ProgressBar52sec");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.ProgressBar5s
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UProgressBar*                     Param_ProgressBar_Component                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::ProgressBar5s(class UProgressBar* Param_ProgressBar_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ProgressBar5s");

	Params::JSI_Slot_C_ProgressBar5s Parms{};

	Parms.Param_ProgressBar_Component = Param_ProgressBar_Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.ProgressBar6s
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UProgressBar*                     Param_ProgressBar_Component                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::ProgressBar6s(class UProgressBar* Param_ProgressBar_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ProgressBar6s");

	Params::JSI_Slot_C_ProgressBar6s Parms{};

	Parms.Param_ProgressBar_Component = Param_ProgressBar_Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.ProgressBar6Sec
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::ProgressBar6Sec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ProgressBar6Sec");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.QuipItem
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::QuipItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "QuipItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.RefreshOnDragEnter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDragDropOperation*               Op                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::RefreshOnDragEnter(class UDragDropOperation* Op)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "RefreshOnDragEnter");

	Params::JSI_Slot_C_RefreshOnDragEnter Parms{};

	Parms.Op = Op;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.Repair
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::Repair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Repair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.Repair Stop Progress
// (Public, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::Repair_Stop_Progress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Repair Stop Progress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.RepairProgressFilled
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::RepairProgressFilled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "RepairProgressFilled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.ResizeSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NewSize                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        SlotDimension                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Param_Size                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::ResizeSlot(const struct FVector2D& NewSize, const struct FVector2D& SlotDimension, struct FVector2D* Param_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ResizeSlot");

	Params::JSI_Slot_C_ResizeSlot Parms{};

	Parms.NewSize = std::move(NewSize);
	Parms.SlotDimension = std::move(SlotDimension);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Size != nullptr)
		*Param_Size = std::move(Parms.Param_Size);
}


// Function JSI_Slot.JSI_Slot_C.RotateSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Rotate_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlipVector_                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::RotateSlot(bool Rotate_, bool FlipVector_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "RotateSlot");

	Params::JSI_Slot_C_RotateSlot Parms{};

	Parms.Rotate_ = Rotate_;
	Parms.FlipVector_ = FlipVector_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SequenceEvent__ENTRYPOINTJSI_Slot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UProgressBar*                     Param_ProgressBar_Component                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SequenceEvent__ENTRYPOINTJSI_Slot(class UProgressBar* Param_ProgressBar_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SequenceEvent__ENTRYPOINTJSI_Slot");

	Params::JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot Parms{};

	Parms.Param_ProgressBar_Component = Param_ProgressBar_Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SequenceEvent__ENTRYPOINTJSI_Slot_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UProgressBar*                     Param_ProgressBar_Component                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SequenceEvent__ENTRYPOINTJSI_Slot_0(class UProgressBar* Param_ProgressBar_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SequenceEvent__ENTRYPOINTJSI_Slot_0");

	Params::JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_0 Parms{};

	Parms.Param_ProgressBar_Component = Param_ProgressBar_Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SequenceEvent__ENTRYPOINTJSI_Slot_1
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Param_Image_ShopAnim                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SequenceEvent__ENTRYPOINTJSI_Slot_1(class UImage* Param_Image_ShopAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SequenceEvent__ENTRYPOINTJSI_Slot_1");

	Params::JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_1 Parms{};

	Parms.Param_Image_ShopAnim = Param_Image_ShopAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SequenceEvent__ENTRYPOINTJSI_Slot_2
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Param_Image_Hovered                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SequenceEvent__ENTRYPOINTJSI_Slot_2(class UImage* Param_Image_Hovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SequenceEvent__ENTRYPOINTJSI_Slot_2");

	Params::JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_2 Parms{};

	Parms.Param_Image_Hovered = Param_Image_Hovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SequenceEvent__ENTRYPOINTJSI_Slot_3
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Param_Image_Hovered                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SequenceEvent__ENTRYPOINTJSI_Slot_3(class UImage* Param_Image_Hovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SequenceEvent__ENTRYPOINTJSI_Slot_3");

	Params::JSI_Slot_C_SequenceEvent__ENTRYPOINTJSI_Slot_3 Parms{};

	Parms.Param_Image_Hovered = Param_Image_Hovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.Set Percent To Progress Bar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UJSI_Slot_C::Set_Percent_To_Progress_Bar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Set Percent To Progress Bar");

	Params::JSI_Slot_C_Set_Percent_To_Progress_Bar Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function JSI_Slot.JSI_Slot_C.SetActiveHighlight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetActiveHighlight(bool Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetActiveHighlight");

	Params::JSI_Slot_C_SetActiveHighlight Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetActiveSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Active                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetActiveSlot(bool Param_Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetActiveSlot");

	Params::JSI_Slot_C_SetActiveSlot Parms{};

	Parms.Param_Active = Param_Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetBadSelectionImage
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::SetBadSelectionImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetBadSelectionImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.SetBorderHidden
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetBorderHidden(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetBorderHidden");

	Params::JSI_Slot_C_SetBorderHidden Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetContentHidden
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetContentHidden(bool bIsHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetContentHidden");

	Params::JSI_Slot_C_SetContentHidden Parms{};

	Parms.bIsHidden = bIsHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetDefaultSelectionImage
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::SetDefaultSelectionImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetDefaultSelectionImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.SetDismantleEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetDismantleEnabled(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetDismantleEnabled");

	Params::JSI_Slot_C_SetDismantleEnabled Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetDurability
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewDurability                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetDurability(double NewDurability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetDurability");

	Params::JSI_Slot_C_SetDurability Parms{};

	Parms.NewDurability = NewDurability;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetFillValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_Values                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetFillValue(double Param_Values)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetFillValue");

	Params::JSI_Slot_C_SetFillValue Parms{};

	Parms.Param_Values = Param_Values;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Highlight_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      HighlightColor                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Drop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetHighlight(bool Highlight_, const struct FSlateColor& HighlightColor, bool Drop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetHighlight");

	Params::JSI_Slot_C_SetHighlight Parms{};

	Parms.Highlight_ = Highlight_;
	Parms.HighlightColor = std::move(HighlightColor);
	Parms.Drop = Drop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetHostedSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      HostingItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetHostedSlot(class UJSI_Slot_C* HostingItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetHostedSlot");

	Params::JSI_Slot_C_SetHostedSlot Parms{};

	Parms.HostingItem = HostingItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetHostingArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UJSI_Slot_C*>              Param_ArrayOfHostingItem                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UJSI_Slot_C::SetHostingArray(TArray<class UJSI_Slot_C*>& Param_ArrayOfHostingItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetHostingArray");

	Params::JSI_Slot_C_SetHostingArray Parms{};

	Parms.Param_ArrayOfHostingItem = std::move(Param_ArrayOfHostingItem);

	UObject::ProcessEvent(Func, &Parms);

	Param_ArrayOfHostingItem = std::move(Parms.Param_ArrayOfHostingItem);
}


// Function JSI_Slot.JSI_Slot_C.SetImageDefaultBackground
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::SetImageDefaultBackground()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetImageDefaultBackground");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.SetOverlaySlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOverlaySlot*                     Param_OverlayRef                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetOverlaySlot(class UOverlaySlot* Param_OverlayRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetOverlaySlot");

	Params::JSI_Slot_C_SetOverlaySlot Parms{};

	Parms.Param_OverlayRef = Param_OverlayRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetRenderIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForced                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetRenderIcon(bool bForced)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetRenderIcon");

	Params::JSI_Slot_C_SetRenderIcon Parms{};

	Parms.bForced = bForced;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetRepair
// (Public, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::SetRepair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetRepair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.SetSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Selected                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetSelected(bool Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetSelected");

	Params::JSI_Slot_C_SetSelected Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetSlotBrushes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::SetSlotBrushes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetSlotBrushes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.SetSortHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFaded                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetSortHighlight(bool IsFaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetSortHighlight");

	Params::JSI_Slot_C_SetSortHighlight Parms{};

	Parms.IsFaded = IsFaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetSpecialContainer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      SpecialContainerRef                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetSpecialContainer(class UUserWidget* SpecialContainerRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetSpecialContainer");

	Params::JSI_Slot_C_SetSpecialContainer Parms{};

	Parms.SpecialContainerRef = SpecialContainerRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.SetUnactiveSlot
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::SetUnactiveSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetUnactiveSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.SetUniqueID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   UniqueId                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::SetUniqueID(int32 ID, int32* UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SetUniqueID");

	Params::JSI_Slot_C_SetUniqueID Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (UniqueId != nullptr)
		*UniqueId = Parms.UniqueId;
}


// Function JSI_Slot.JSI_Slot_C.ShopAnim 
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::ShopAnim_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ShopAnim ");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.ShopAnimFinished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UImage*                           Param_Image_ShopAnim                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::ShopAnimFinished(class UImage* Param_Image_ShopAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ShopAnimFinished");

	Params::JSI_Slot_C_ShopAnimFinished Parms{};

	Parms.Param_Image_ShopAnim = Param_Image_ShopAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.StartProcessRepair
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::StartProcessRepair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "StartProcessRepair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.StopDismantleAnimation
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::StopDismantleAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "StopDismantleAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.ToggleHighlight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DragEnter                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::ToggleHighlight(bool DragEnter, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "ToggleHighlight");

	Params::JSI_Slot_C_ToggleHighlight Parms{};

	Parms.DragEnter = DragEnter;
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.UnhandledGetTargetContainer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSIContainer_C*                  Container1                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container2                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Target                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::UnhandledGetTargetContainer(class UJSIContainer_C* Container1, class UJSIContainer_C* Container2, class UJSIContainer_C** Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "UnhandledGetTargetContainer");

	Params::JSI_Slot_C_UnhandledGetTargetContainer Parms{};

	Parms.Container1 = Container1;
	Parms.Container2 = Container2;

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function JSI_Slot.JSI_Slot_C.UnhoveredSlot
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::UnhoveredSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "UnhoveredSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.UnhoverSlot
// (Public, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::UnhoverSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "UnhoverSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.Update Slot Info
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::Update_Slot_Info()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "Update Slot Info");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.UpdateCount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewDurability                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithDurabilty                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::UpdateCount(int32 NewCount, double NewDurability, bool WithDurabilty, int32* Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "UpdateCount");

	Params::JSI_Slot_C_UpdateCount Parms{};

	Parms.NewCount = NewCount;
	Parms.NewDurability = NewDurability;
	Parms.WithDurabilty = WithDurabilty;

	UObject::ProcessEvent(Func, &Parms);

	if (Count != nullptr)
		*Count = Parms.Count;
}


// Function JSI_Slot.JSI_Slot_C.UpdateDurabilityProgressBar
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::UpdateDurabilityProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "UpdateDurabilityProgressBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.UpdateIcon
// (BlueprintCallable, BlueprintEvent)

void UJSI_Slot_C::UpdateIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "UpdateIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function JSI_Slot.JSI_Slot_C.UpdateImage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPaperSprite*                     NewTexture                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Updated                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::UpdateImage(class UPaperSprite* NewTexture, bool* Updated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "UpdateImage");

	Params::JSI_Slot_C_UpdateImage Parms{};

	Parms.NewTexture = NewTexture;

	UObject::ProcessEvent(Func, &Parms);

	if (Updated != nullptr)
		*Updated = Parms.Updated;
}


// Function JSI_Slot.JSI_Slot_C.UpdateInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Param_Image                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Image_Size                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::UpdateInfo(class UObject* Param_Image, const struct FVector2D& Image_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "UpdateInfo");

	Params::JSI_Slot_C_UpdateInfo Parms{};

	Parms.Param_Image = Param_Image;
	Parms.Image_Size = std::move(Image_Size);

	UObject::ProcessEvent(Func, &Parms);
}


// Function JSI_Slot.JSI_Slot_C.GetSlotBrushes
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      BG_Brush                                               (Parm, OutParm)
// struct FSlateBrush                      Gradient_Brush                                         (Parm, OutParm)
// struct FSlateBrush                      Highlight_Brush                                        (Parm, OutParm)
// struct FSlateBrush                      Hover_Brush                                            (Parm, OutParm)
// class UPaperSprite*                     BGSprite                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UJSI_Slot_C::GetSlotBrushes(struct FSlateBrush* BG_Brush, struct FSlateBrush* Gradient_Brush, struct FSlateBrush* Highlight_Brush, struct FSlateBrush* Hover_Brush, class UPaperSprite** BGSprite) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "GetSlotBrushes");

	Params::JSI_Slot_C_GetSlotBrushes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BG_Brush != nullptr)
		*BG_Brush = std::move(Parms.BG_Brush);

	if (Gradient_Brush != nullptr)
		*Gradient_Brush = std::move(Parms.Gradient_Brush);

	if (Highlight_Brush != nullptr)
		*Highlight_Brush = std::move(Parms.Highlight_Brush);

	if (Hover_Brush != nullptr)
		*Hover_Brush = std::move(Parms.Hover_Brush);

	if (BGSprite != nullptr)
		*BGSprite = Parms.BGSprite;
}


// Function JSI_Slot.JSI_Slot_C.SwapVector
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector2D UJSI_Slot_C::SwapVector(const struct FVector2D& Vector) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("JSI_Slot_C", "SwapVector");

	Params::JSI_Slot_C_SwapVector Parms{};

	Parms.Vector = std::move(Vector);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

